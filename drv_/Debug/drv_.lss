
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000178  00800200  000020fc  00002190  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000053  00800378  00800378  00002308  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002308  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002364  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  000023a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c04  00000000  00000000  000025dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001699  00000000  00000000  000051e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014e2  00000000  00000000  00006879  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006a4  00000000  00000000  00007d5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b76  00000000  00000000  00008400  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d0b  00000000  00000000  00008f76  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  0000ac81  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b5 c0       	rjmp	.+362    	; 0x16c <__ctors_end>
       2:	00 00       	nop
       4:	d3 c0       	rjmp	.+422    	; 0x1ac <__bad_interrupt>
       6:	00 00       	nop
       8:	d1 c0       	rjmp	.+418    	; 0x1ac <__bad_interrupt>
       a:	00 00       	nop
       c:	cf c0       	rjmp	.+414    	; 0x1ac <__bad_interrupt>
       e:	00 00       	nop
      10:	cd c0       	rjmp	.+410    	; 0x1ac <__bad_interrupt>
      12:	00 00       	nop
      14:	cb c0       	rjmp	.+406    	; 0x1ac <__bad_interrupt>
      16:	00 00       	nop
      18:	c9 c0       	rjmp	.+402    	; 0x1ac <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c7 c0       	rjmp	.+398    	; 0x1ac <__bad_interrupt>
      1e:	00 00       	nop
      20:	c5 c0       	rjmp	.+394    	; 0x1ac <__bad_interrupt>
      22:	00 00       	nop
      24:	c3 c0       	rjmp	.+390    	; 0x1ac <__bad_interrupt>
      26:	00 00       	nop
      28:	c1 c0       	rjmp	.+386    	; 0x1ac <__bad_interrupt>
      2a:	00 00       	nop
      2c:	bf c0       	rjmp	.+382    	; 0x1ac <__bad_interrupt>
      2e:	00 00       	nop
      30:	bd c0       	rjmp	.+378    	; 0x1ac <__bad_interrupt>
      32:	00 00       	nop
      34:	bb c0       	rjmp	.+374    	; 0x1ac <__bad_interrupt>
      36:	00 00       	nop
      38:	b9 c0       	rjmp	.+370    	; 0x1ac <__bad_interrupt>
      3a:	00 00       	nop
      3c:	b7 c0       	rjmp	.+366    	; 0x1ac <__bad_interrupt>
      3e:	00 00       	nop
      40:	b5 c0       	rjmp	.+362    	; 0x1ac <__bad_interrupt>
      42:	00 00       	nop
      44:	b3 c0       	rjmp	.+358    	; 0x1ac <__bad_interrupt>
      46:	00 00       	nop
      48:	b1 c0       	rjmp	.+354    	; 0x1ac <__bad_interrupt>
      4a:	00 00       	nop
      4c:	af c0       	rjmp	.+350    	; 0x1ac <__bad_interrupt>
      4e:	00 00       	nop
      50:	ad c0       	rjmp	.+346    	; 0x1ac <__bad_interrupt>
      52:	00 00       	nop
      54:	ab c0       	rjmp	.+342    	; 0x1ac <__bad_interrupt>
      56:	00 00       	nop
      58:	a9 c0       	rjmp	.+338    	; 0x1ac <__bad_interrupt>
      5a:	00 00       	nop
      5c:	93 c6       	rjmp	.+3366   	; 0xd84 <__vector_23>
      5e:	00 00       	nop
      60:	a5 c0       	rjmp	.+330    	; 0x1ac <__bad_interrupt>
      62:	00 00       	nop
      64:	a3 c0       	rjmp	.+326    	; 0x1ac <__bad_interrupt>
      66:	00 00       	nop
      68:	a1 c0       	rjmp	.+322    	; 0x1ac <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9f c0       	rjmp	.+318    	; 0x1ac <__bad_interrupt>
      6e:	00 00       	nop
      70:	9d c0       	rjmp	.+314    	; 0x1ac <__bad_interrupt>
      72:	00 00       	nop
      74:	9b c0       	rjmp	.+310    	; 0x1ac <__bad_interrupt>
      76:	00 00       	nop
      78:	99 c0       	rjmp	.+306    	; 0x1ac <__bad_interrupt>
      7a:	00 00       	nop
      7c:	97 c0       	rjmp	.+302    	; 0x1ac <__bad_interrupt>
      7e:	00 00       	nop
      80:	95 c0       	rjmp	.+298    	; 0x1ac <__bad_interrupt>
      82:	00 00       	nop
      84:	93 c0       	rjmp	.+294    	; 0x1ac <__bad_interrupt>
      86:	00 00       	nop
      88:	91 c0       	rjmp	.+290    	; 0x1ac <__bad_interrupt>
      8a:	00 00       	nop
      8c:	8f c0       	rjmp	.+286    	; 0x1ac <__bad_interrupt>
      8e:	00 00       	nop
      90:	8d c0       	rjmp	.+282    	; 0x1ac <__bad_interrupt>
      92:	00 00       	nop
      94:	8b c0       	rjmp	.+278    	; 0x1ac <__bad_interrupt>
      96:	00 00       	nop
      98:	89 c0       	rjmp	.+274    	; 0x1ac <__bad_interrupt>
      9a:	00 00       	nop
      9c:	87 c0       	rjmp	.+270    	; 0x1ac <__bad_interrupt>
      9e:	00 00       	nop
      a0:	85 c0       	rjmp	.+266    	; 0x1ac <__bad_interrupt>
      a2:	00 00       	nop
      a4:	83 c0       	rjmp	.+262    	; 0x1ac <__bad_interrupt>
      a6:	00 00       	nop
      a8:	81 c0       	rjmp	.+258    	; 0x1ac <__bad_interrupt>
      aa:	00 00       	nop
      ac:	7f c0       	rjmp	.+254    	; 0x1ac <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7d c0       	rjmp	.+250    	; 0x1ac <__bad_interrupt>
      b2:	00 00       	nop
      b4:	7b c0       	rjmp	.+246    	; 0x1ac <__bad_interrupt>
      b6:	00 00       	nop
      b8:	79 c0       	rjmp	.+242    	; 0x1ac <__bad_interrupt>
      ba:	00 00       	nop
      bc:	ad c6       	rjmp	.+3418   	; 0xe18 <__vector_47>
      be:	00 00       	nop
      c0:	75 c0       	rjmp	.+234    	; 0x1ac <__bad_interrupt>
      c2:	00 00       	nop
      c4:	73 c0       	rjmp	.+230    	; 0x1ac <__bad_interrupt>
      c6:	00 00       	nop
      c8:	71 c0       	rjmp	.+226    	; 0x1ac <__bad_interrupt>
      ca:	00 00       	nop
      cc:	6f c0       	rjmp	.+222    	; 0x1ac <__bad_interrupt>
      ce:	00 00       	nop
      d0:	6d c0       	rjmp	.+218    	; 0x1ac <__bad_interrupt>
      d2:	00 00       	nop
      d4:	6b c0       	rjmp	.+214    	; 0x1ac <__bad_interrupt>
      d6:	00 00       	nop
      d8:	69 c0       	rjmp	.+210    	; 0x1ac <__bad_interrupt>
      da:	00 00       	nop
      dc:	67 c0       	rjmp	.+206    	; 0x1ac <__bad_interrupt>
      de:	00 00       	nop
      e0:	65 c0       	rjmp	.+202    	; 0x1ac <__bad_interrupt>
      e2:	00 00       	nop
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	08 4a       	sbci	r16, 0xA8	; 168
      fa:	d7 3b       	cpi	r29, 0xB7	; 183
      fc:	3b ce       	rjmp	.-906    	; 0xfffffd74 <__eeprom_end+0xff7efd74>
      fe:	01 6e       	ori	r16, 0xE1	; 225
     100:	84 bc       	out	0x24, r8	; 36
     102:	bf fd       	.word	0xfdbf	; ????
     104:	c1 2f       	mov	r28, r17
     106:	3d 6c       	ori	r19, 0xCD	; 205
     108:	74 31       	cpi	r23, 0x14	; 20
     10a:	9a bd       	out	0x2a, r25	; 42
     10c:	56 83       	std	Z+6, r21	; 0x06
     10e:	3d da       	rcall	.-2950   	; 0xfffff58a <__eeprom_end+0xff7ef58a>
     110:	3d 00       	.word	0x003d	; ????
     112:	c7 7f       	andi	r28, 0xF7	; 247
     114:	11 be       	out	0x31, r1	; 49
     116:	d9 e4       	ldi	r29, 0x49	; 73
     118:	bb 4c       	sbci	r27, 0xCB	; 203
     11a:	3e 91       	ld	r19, -X
     11c:	6b aa       	std	Y+51, r6	; 0x33
     11e:	aa be       	out	0x3a, r10	; 58
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	3f 07       	cpc	r19, r31
     126:	2c 7a       	andi	r18, 0xAC	; 172
     128:	a5 ba       	out	0x15, r10	; 21
     12a:	6c c5       	rjmp	.+2776   	; 0xc04 <mpu6050_getRawData+0x2>
     12c:	90 da       	rcall	.-2784   	; 0xfffff64e <__eeprom_end+0xff7ef64e>
     12e:	3b 93       	.word	0x933b	; ????
     130:	65 fc       	sbrc	r6, 5
     132:	8b bc       	out	0x2b, r8	; 43
     134:	53 f8       	bld	r5, 3
     136:	10 fd       	sbrc	r17, 0
     138:	3c 56       	subi	r19, 0x6C	; 108
     13a:	92 83       	std	Z+2, r25	; 0x02
     13c:	4d bd       	out	0x2d, r20	; 45
     13e:	87 9d       	mul	r24, r7
     140:	3a b6       	in	r3, 0x3a	; 58
     142:	3d cb       	rjmp	.-2438   	; 0xfffff7be <__eeprom_end+0xff7ef7be>
     144:	c9 bf       	out	0x39, r28	; 57
     146:	5b be       	out	0x3b, r5	; 59
     148:	73 da       	rcall	.-2842   	; 0xfffff630 <__eeprom_end+0xff7ef630>
     14a:	0f c9       	rjmp	.-3554   	; 0xfffff36a <__eeprom_end+0xff7ef36a>
     14c:	3f 05       	cpc	r19, r15
     14e:	a8 4c       	sbci	r26, 0xC8	; 200
     150:	cd b2       	in	r12, 0x1d	; 29
     152:	d4 4e       	sbci	r29, 0xE4	; 228
     154:	b9 38       	cpi	r27, 0x89	; 137
     156:	36 a9       	ldd	r19, Z+54	; 0x36
     158:	02 0c       	add	r0, r2
     15a:	50 b9       	out	0x00, r21	; 0
     15c:	91 86       	std	Z+9, r9	; 0x09
     15e:	88 08       	sbc	r8, r8
     160:	3c a6       	std	Y+44, r3	; 0x2c
     162:	aa aa       	std	Y+50, r10	; 0x32
     164:	2a be       	out	0x3a, r2	; 58
     166:	00 00       	nop
     168:	00 80       	ld	r0, Z
     16a:	3f 00       	.word	0x003f	; ????

0000016c <__ctors_end>:
     16c:	11 24       	eor	r1, r1
     16e:	1f be       	out	0x3f, r1	; 63
     170:	cf ef       	ldi	r28, 0xFF	; 255
     172:	d1 e2       	ldi	r29, 0x21	; 33
     174:	de bf       	out	0x3e, r29	; 62
     176:	cd bf       	out	0x3d, r28	; 61
     178:	00 e0       	ldi	r16, 0x00	; 0
     17a:	0c bf       	out	0x3c, r16	; 60

0000017c <__do_copy_data>:
     17c:	13 e0       	ldi	r17, 0x03	; 3
     17e:	a0 e0       	ldi	r26, 0x00	; 0
     180:	b2 e0       	ldi	r27, 0x02	; 2
     182:	ec ef       	ldi	r30, 0xFC	; 252
     184:	f0 e2       	ldi	r31, 0x20	; 32
     186:	00 e0       	ldi	r16, 0x00	; 0
     188:	0b bf       	out	0x3b, r16	; 59
     18a:	02 c0       	rjmp	.+4      	; 0x190 <__do_copy_data+0x14>
     18c:	07 90       	elpm	r0, Z+
     18e:	0d 92       	st	X+, r0
     190:	a8 37       	cpi	r26, 0x78	; 120
     192:	b1 07       	cpc	r27, r17
     194:	d9 f7       	brne	.-10     	; 0x18c <__do_copy_data+0x10>

00000196 <__do_clear_bss>:
     196:	23 e0       	ldi	r18, 0x03	; 3
     198:	a8 e7       	ldi	r26, 0x78	; 120
     19a:	b3 e0       	ldi	r27, 0x03	; 3
     19c:	01 c0       	rjmp	.+2      	; 0x1a0 <.do_clear_bss_start>

0000019e <.do_clear_bss_loop>:
     19e:	1d 92       	st	X+, r1

000001a0 <.do_clear_bss_start>:
     1a0:	ab 3c       	cpi	r26, 0xCB	; 203
     1a2:	b2 07       	cpc	r27, r18
     1a4:	e1 f7       	brne	.-8      	; 0x19e <.do_clear_bss_loop>
     1a6:	6b d2       	rcall	.+1238   	; 0x67e <main>
     1a8:	0c 94 7c 10 	jmp	0x20f8	; 0x20f8 <_exit>

000001ac <__bad_interrupt>:
     1ac:	29 cf       	rjmp	.-430    	; 0x0 <__vectors>

000001ae <init_gpio>:
{
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     1ae:	e1 e0       	ldi	r30, 0x01	; 1
     1b0:	f1 e0       	ldi	r31, 0x01	; 1
     1b2:	80 81       	ld	r24, Z
     1b4:	88 60       	ori	r24, 0x08	; 8
     1b6:	80 83       	st	Z, r24
     1b8:	80 81       	ld	r24, Z
     1ba:	80 61       	ori	r24, 0x10	; 16
     1bc:	80 83       	st	Z, r24
     1be:	80 81       	ld	r24, Z
     1c0:	80 62       	ori	r24, 0x20	; 32
     1c2:	80 83       	st	Z, r24
     1c4:	08 95       	ret

000001c6 <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     1c6:	e0 91 78 03 	lds	r30, 0x0378	; 0x800378 <__data_end>
     1ca:	f0 91 79 03 	lds	r31, 0x0379	; 0x800379 <__data_end+0x1>
     1ce:	ea 5f       	subi	r30, 0xFA	; 250
     1d0:	fd 4f       	sbci	r31, 0xFD	; 253
     1d2:	80 81       	ld	r24, Z
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     1da:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     1de:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step>
     1e2:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step+0x1>
     1e6:	ea 5f       	subi	r30, 0xFA	; 250
     1e8:	fd 4f       	sbci	r31, 0xFD	; 253
     1ea:	80 81       	ld	r24, Z
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     1f2:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     1f6:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step>
     1fa:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step+0x1>
     1fe:	ea 5f       	subi	r30, 0xFA	; 250
     200:	fd 4f       	sbci	r31, 0xFD	; 253
     202:	80 81       	ld	r24, Z
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     20a:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     20e:	60 91 87 03 	lds	r22, 0x0387	; 0x800387 <incr>
     212:	70 91 88 03 	lds	r23, 0x0388	; 0x800388 <incr+0x1>
     216:	40 91 78 03 	lds	r20, 0x0378	; 0x800378 <__data_end>
     21a:	50 91 79 03 	lds	r21, 0x0379	; 0x800379 <__data_end+0x1>
     21e:	46 0f       	add	r20, r22
     220:	57 1f       	adc	r21, r23
     222:	50 93 79 03 	sts	0x0379, r21	; 0x800379 <__data_end+0x1>
     226:	40 93 78 03 	sts	0x0378, r20	; 0x800378 <__data_end>
	V_step=V_step+incr;
     22a:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     22e:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     232:	26 0f       	add	r18, r22
     234:	37 1f       	adc	r19, r23
     236:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     23a:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	W_step=W_step+incr;
     23e:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     242:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     246:	86 0f       	add	r24, r22
     248:	97 1f       	adc	r25, r23
     24a:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     24e:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	if(U_step > SINE_TABLE_SZ)
     252:	49 36       	cpi	r20, 0x69	; 105
     254:	61 e0       	ldi	r22, 0x01	; 1
     256:	56 07       	cpc	r21, r22
     258:	2c f0       	brlt	.+10     	; 0x264 <PWM_update+0x9e>
	U_step = 0;
     25a:	10 92 79 03 	sts	0x0379, r1	; 0x800379 <__data_end+0x1>
     25e:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <__data_end>
     262:	08 c0       	rjmp	.+16     	; 0x274 <PWM_update+0xae>
	if(U_step < 0)
     264:	55 23       	and	r21, r21
     266:	34 f4       	brge	.+12     	; 0x274 <PWM_update+0xae>
	U_step = SINE_TABLE_SZ;
     268:	48 e6       	ldi	r20, 0x68	; 104
     26a:	51 e0       	ldi	r21, 0x01	; 1
     26c:	50 93 79 03 	sts	0x0379, r21	; 0x800379 <__data_end+0x1>
     270:	40 93 78 03 	sts	0x0378, r20	; 0x800378 <__data_end>
	
	if(V_step > SINE_TABLE_SZ)
     274:	29 36       	cpi	r18, 0x69	; 105
     276:	41 e0       	ldi	r20, 0x01	; 1
     278:	34 07       	cpc	r19, r20
     27a:	2c f0       	brlt	.+10     	; 0x286 <PWM_update+0xc0>
	V_step = 0;
     27c:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step+0x1>
     280:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step>
     284:	08 c0       	rjmp	.+16     	; 0x296 <PWM_update+0xd0>
	if(V_step < 0)
     286:	33 23       	and	r19, r19
     288:	34 f4       	brge	.+12     	; 0x296 <PWM_update+0xd0>
	V_step = SINE_TABLE_SZ;
     28a:	28 e6       	ldi	r18, 0x68	; 104
     28c:	31 e0       	ldi	r19, 0x01	; 1
     28e:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     292:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     296:	89 36       	cpi	r24, 0x69	; 105
     298:	61 e0       	ldi	r22, 0x01	; 1
     29a:	96 07       	cpc	r25, r22
     29c:	2c f0       	brlt	.+10     	; 0x2a8 <PWM_update+0xe2>
	W_step = 0;
     29e:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step+0x1>
     2a2:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step>
     2a6:	08 c0       	rjmp	.+16     	; 0x2b8 <PWM_update+0xf2>
	if(W_step < 0)
     2a8:	99 23       	and	r25, r25
     2aa:	34 f4       	brge	.+12     	; 0x2b8 <PWM_update+0xf2>
	W_step = SINE_TABLE_SZ;
     2ac:	88 e6       	ldi	r24, 0x68	; 104
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     2b4:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     2b8:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <pwm_delay>
     2bc:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <pwm_delay+0x1>
     2c0:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     2c4:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     2c8:	08 95       	ret

000002ca <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     2ca:	4f 92       	push	r4
     2cc:	5f 92       	push	r5
     2ce:	6f 92       	push	r6
     2d0:	7f 92       	push	r7
     2d2:	8f 92       	push	r8
     2d4:	9f 92       	push	r9
     2d6:	af 92       	push	r10
     2d8:	bf 92       	push	r11
     2da:	cf 92       	push	r12
     2dc:	df 92       	push	r13
     2de:	ef 92       	push	r14
     2e0:	ff 92       	push	r15
     2e2:	0f 93       	push	r16
     2e4:	1f 93       	push	r17
     2e6:	cf 93       	push	r28
     2e8:	df 93       	push	r29
     2ea:	cd b7       	in	r28, 0x3d	; 61
     2ec:	de b7       	in	r29, 0x3e	; 62
     2ee:	6c 97       	sbiw	r28, 0x1c	; 28
     2f0:	0f b6       	in	r0, 0x3f	; 63
     2f2:	f8 94       	cli
     2f4:	de bf       	out	0x3e, r29	; 62
     2f6:	0f be       	out	0x3f, r0	; 63
     2f8:	cd bf       	out	0x3d, r28	; 61
     2fa:	69 8b       	std	Y+17, r22	; 0x11
     2fc:	7a 8b       	std	Y+18, r23	; 0x12
     2fe:	8b 8b       	std	Y+19, r24	; 0x13
     300:	9c 8b       	std	Y+20, r25	; 0x14
     302:	ca 01       	movw	r24, r20
     304:	b9 01       	movw	r22, r18
     306:	e9 82       	std	Y+1, r14	; 0x01
     308:	fa 82       	std	Y+2, r15	; 0x02
     30a:	0b 83       	std	Y+3, r16	; 0x03
     30c:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     30e:	c0 90 95 03 	lds	r12, 0x0395	; 0x800395 <bias>
     312:	d0 90 96 03 	lds	r13, 0x0396	; 0x800396 <bias+0x1>
     316:	e0 90 97 03 	lds	r14, 0x0397	; 0x800397 <bias+0x2>
     31a:	f0 90 98 03 	lds	r15, 0x0398	; 0x800398 <bias+0x3>
     31e:	a7 01       	movw	r20, r14
     320:	96 01       	movw	r18, r12
     322:	b0 d6       	rcall	.+3424   	; 0x1084 <__subsf3>
     324:	60 93 8d 03 	sts	0x038D, r22	; 0x80038d <rate>
     328:	70 93 8e 03 	sts	0x038E, r23	; 0x80038e <rate+0x1>
     32c:	80 93 8f 03 	sts	0x038F, r24	; 0x80038f <rate+0x2>
     330:	90 93 90 03 	sts	0x0390, r25	; 0x800390 <rate+0x3>
	angle += dt * rate;
     334:	29 81       	ldd	r18, Y+1	; 0x01
     336:	3a 81       	ldd	r19, Y+2	; 0x02
     338:	4b 81       	ldd	r20, Y+3	; 0x03
     33a:	5c 81       	ldd	r21, Y+4	; 0x04
     33c:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     340:	20 91 9d 03 	lds	r18, 0x039D	; 0x80039d <angle>
     344:	30 91 9e 03 	lds	r19, 0x039E	; 0x80039e <angle+0x1>
     348:	40 91 9f 03 	lds	r20, 0x039F	; 0x80039f <angle+0x2>
     34c:	50 91 a0 03 	lds	r21, 0x03A0	; 0x8003a0 <angle+0x3>
     350:	9a d6       	rcall	.+3380   	; 0x1086 <__addsf3>
     352:	6d 8b       	std	Y+21, r22	; 0x15
     354:	7e 8b       	std	Y+22, r23	; 0x16
     356:	8f 8b       	std	Y+23, r24	; 0x17
     358:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     35a:	80 90 ad 03 	lds	r8, 0x03AD	; 0x8003ad <P+0xc>
     35e:	90 90 ae 03 	lds	r9, 0x03AE	; 0x8003ae <P+0xd>
     362:	a0 90 af 03 	lds	r10, 0x03AF	; 0x8003af <P+0xe>
     366:	b0 90 b0 03 	lds	r11, 0x03B0	; 0x8003b0 <P+0xf>
     36a:	a5 01       	movw	r20, r10
     36c:	94 01       	movw	r18, r8
     36e:	69 81       	ldd	r22, Y+1	; 0x01
     370:	7a 81       	ldd	r23, Y+2	; 0x02
     372:	8b 81       	ldd	r24, Y+3	; 0x03
     374:	9c 81       	ldd	r25, Y+4	; 0x04
     376:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     37a:	6d 83       	std	Y+5, r22	; 0x05
     37c:	7e 83       	std	Y+6, r23	; 0x06
     37e:	8f 83       	std	Y+7, r24	; 0x07
     380:	98 87       	std	Y+8, r25	; 0x08
     382:	40 90 a5 03 	lds	r4, 0x03A5	; 0x8003a5 <P+0x4>
     386:	50 90 a6 03 	lds	r5, 0x03A6	; 0x8003a6 <P+0x5>
     38a:	60 90 a7 03 	lds	r6, 0x03A7	; 0x8003a7 <P+0x6>
     38e:	70 90 a8 03 	lds	r7, 0x03A8	; 0x8003a8 <P+0x7>
     392:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <P+0x8>
     396:	90 91 aa 03 	lds	r25, 0x03AA	; 0x8003aa <P+0x9>
     39a:	a0 91 ab 03 	lds	r26, 0x03AB	; 0x8003ab <P+0xa>
     39e:	b0 91 ac 03 	lds	r27, 0x03AC	; 0x8003ac <P+0xb>
     3a2:	8d 87       	std	Y+13, r24	; 0x0d
     3a4:	9e 87       	std	Y+14, r25	; 0x0e
     3a6:	af 87       	std	Y+15, r26	; 0x0f
     3a8:	b8 8b       	std	Y+16, r27	; 0x10
     3aa:	a3 01       	movw	r20, r6
     3ac:	92 01       	movw	r18, r4
     3ae:	6d 81       	ldd	r22, Y+5	; 0x05
     3b0:	7e 81       	ldd	r23, Y+6	; 0x06
     3b2:	8f 81       	ldd	r24, Y+7	; 0x07
     3b4:	98 85       	ldd	r25, Y+8	; 0x08
     3b6:	66 d6       	rcall	.+3276   	; 0x1084 <__subsf3>
     3b8:	2d 85       	ldd	r18, Y+13	; 0x0d
     3ba:	3e 85       	ldd	r19, Y+14	; 0x0e
     3bc:	4f 85       	ldd	r20, Y+15	; 0x0f
     3be:	58 89       	ldd	r21, Y+16	; 0x10
     3c0:	61 d6       	rcall	.+3266   	; 0x1084 <__subsf3>
     3c2:	20 91 91 03 	lds	r18, 0x0391	; 0x800391 <Q_angle>
     3c6:	30 91 92 03 	lds	r19, 0x0392	; 0x800392 <Q_angle+0x1>
     3ca:	40 91 93 03 	lds	r20, 0x0393	; 0x800393 <Q_angle+0x2>
     3ce:	50 91 94 03 	lds	r21, 0x0394	; 0x800394 <Q_angle+0x3>
     3d2:	59 d6       	rcall	.+3250   	; 0x1086 <__addsf3>
     3d4:	29 81       	ldd	r18, Y+1	; 0x01
     3d6:	3a 81       	ldd	r19, Y+2	; 0x02
     3d8:	4b 81       	ldd	r20, Y+3	; 0x03
     3da:	5c 81       	ldd	r21, Y+4	; 0x04
     3dc:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     3e0:	a1 ea       	ldi	r26, 0xA1	; 161
     3e2:	b3 e0       	ldi	r27, 0x03	; 3
     3e4:	2d 91       	ld	r18, X+
     3e6:	3d 91       	ld	r19, X+
     3e8:	4d 91       	ld	r20, X+
     3ea:	5c 91       	ld	r21, X
     3ec:	4c d6       	rcall	.+3224   	; 0x1086 <__addsf3>
     3ee:	69 87       	std	Y+9, r22	; 0x09
     3f0:	7a 87       	std	Y+10, r23	; 0x0a
     3f2:	8b 87       	std	Y+11, r24	; 0x0b
	P[0][1] -= dt * P[1][1];
     3f4:	9c 87       	std	Y+12, r25	; 0x0c
     3f6:	2d 81       	ldd	r18, Y+5	; 0x05
     3f8:	3e 81       	ldd	r19, Y+6	; 0x06
     3fa:	4f 81       	ldd	r20, Y+7	; 0x07
     3fc:	58 85       	ldd	r21, Y+8	; 0x08
     3fe:	c3 01       	movw	r24, r6
     400:	b2 01       	movw	r22, r4
     402:	40 d6       	rcall	.+3200   	; 0x1084 <__subsf3>
     404:	2b 01       	movw	r4, r22
	P[1][0] -= dt * P[1][1];
     406:	3c 01       	movw	r6, r24
     408:	2d 81       	ldd	r18, Y+5	; 0x05
     40a:	3e 81       	ldd	r19, Y+6	; 0x06
     40c:	4f 81       	ldd	r20, Y+7	; 0x07
     40e:	58 85       	ldd	r21, Y+8	; 0x08
     410:	6d 85       	ldd	r22, Y+13	; 0x0d
     412:	7e 85       	ldd	r23, Y+14	; 0x0e
     414:	8f 85       	ldd	r24, Y+15	; 0x0f
     416:	98 89       	ldd	r25, Y+16	; 0x10
     418:	35 d6       	rcall	.+3178   	; 0x1084 <__subsf3>
     41a:	6d 87       	std	Y+13, r22	; 0x0d
     41c:	7e 87       	std	Y+14, r23	; 0x0e
     41e:	8f 87       	std	Y+15, r24	; 0x0f
	P[1][1] += Q_bias * dt;
     420:	98 8b       	std	Y+16, r25	; 0x10
     422:	20 91 89 03 	lds	r18, 0x0389	; 0x800389 <Q_bias>
     426:	30 91 8a 03 	lds	r19, 0x038A	; 0x80038a <Q_bias+0x1>
     42a:	40 91 8b 03 	lds	r20, 0x038B	; 0x80038b <Q_bias+0x2>
     42e:	50 91 8c 03 	lds	r21, 0x038C	; 0x80038c <Q_bias+0x3>
     432:	69 81       	ldd	r22, Y+1	; 0x01
     434:	7a 81       	ldd	r23, Y+2	; 0x02
     436:	8b 81       	ldd	r24, Y+3	; 0x03
     438:	9c 81       	ldd	r25, Y+4	; 0x04
     43a:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     43e:	a5 01       	movw	r20, r10
     440:	94 01       	movw	r18, r8
     442:	21 d6       	rcall	.+3138   	; 0x1086 <__addsf3>
     444:	69 8f       	std	Y+25, r22	; 0x19
     446:	7a 8f       	std	Y+26, r23	; 0x1a
     448:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     44a:	9c 8f       	std	Y+28, r25	; 0x1c
     44c:	20 91 99 03 	lds	r18, 0x0399	; 0x800399 <R_measure>
     450:	30 91 9a 03 	lds	r19, 0x039A	; 0x80039a <R_measure+0x1>
     454:	40 91 9b 03 	lds	r20, 0x039B	; 0x80039b <R_measure+0x2>
     458:	50 91 9c 03 	lds	r21, 0x039C	; 0x80039c <R_measure+0x3>
     45c:	69 85       	ldd	r22, Y+9	; 0x09
     45e:	7a 85       	ldd	r23, Y+10	; 0x0a
     460:	8b 85       	ldd	r24, Y+11	; 0x0b
     462:	9c 85       	ldd	r25, Y+12	; 0x0c
     464:	10 d6       	rcall	.+3104   	; 0x1086 <__addsf3>
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     466:	4b 01       	movw	r8, r22
     468:	5c 01       	movw	r10, r24
     46a:	9b 01       	movw	r18, r22
     46c:	ac 01       	movw	r20, r24
     46e:	69 85       	ldd	r22, Y+9	; 0x09
     470:	7a 85       	ldd	r23, Y+10	; 0x0a
     472:	8b 85       	ldd	r24, Y+11	; 0x0b
     474:	9c 85       	ldd	r25, Y+12	; 0x0c
     476:	e8 d6       	rcall	.+3536   	; 0x1248 <__divsf3>
     478:	69 83       	std	Y+1, r22	; 0x01
     47a:	7a 83       	std	Y+2, r23	; 0x02
	K[1] = P[1][0] / S;
     47c:	8b 83       	std	Y+3, r24	; 0x03
     47e:	9c 83       	std	Y+4, r25	; 0x04
     480:	a5 01       	movw	r20, r10
     482:	94 01       	movw	r18, r8
     484:	6d 85       	ldd	r22, Y+13	; 0x0d
     486:	7e 85       	ldd	r23, Y+14	; 0x0e
     488:	8f 85       	ldd	r24, Y+15	; 0x0f
     48a:	98 89       	ldd	r25, Y+16	; 0x10
     48c:	dd d6       	rcall	.+3514   	; 0x1248 <__divsf3>
     48e:	6d 83       	std	Y+5, r22	; 0x05
     490:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     492:	8f 83       	std	Y+7, r24	; 0x07
     494:	98 87       	std	Y+8, r25	; 0x08
     496:	2d 89       	ldd	r18, Y+21	; 0x15
     498:	3e 89       	ldd	r19, Y+22	; 0x16
     49a:	4f 89       	ldd	r20, Y+23	; 0x17
     49c:	58 8d       	ldd	r21, Y+24	; 0x18
     49e:	69 89       	ldd	r22, Y+17	; 0x11
     4a0:	7a 89       	ldd	r23, Y+18	; 0x12
     4a2:	8b 89       	ldd	r24, Y+19	; 0x13
     4a4:	9c 89       	ldd	r25, Y+20	; 0x14
     4a6:	ee d5       	rcall	.+3036   	; 0x1084 <__subsf3>
     4a8:	69 8b       	std	Y+17, r22	; 0x11
     4aa:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle += K[0] * y;
     4ac:	8b 8b       	std	Y+19, r24	; 0x13
     4ae:	9c 8b       	std	Y+20, r25	; 0x14
     4b0:	9b 01       	movw	r18, r22
     4b2:	ac 01       	movw	r20, r24
     4b4:	69 81       	ldd	r22, Y+1	; 0x01
     4b6:	7a 81       	ldd	r23, Y+2	; 0x02
     4b8:	8b 81       	ldd	r24, Y+3	; 0x03
     4ba:	9c 81       	ldd	r25, Y+4	; 0x04
     4bc:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     4c0:	2d 89       	ldd	r18, Y+21	; 0x15
     4c2:	3e 89       	ldd	r19, Y+22	; 0x16
     4c4:	4f 89       	ldd	r20, Y+23	; 0x17
     4c6:	58 8d       	ldd	r21, Y+24	; 0x18
     4c8:	de d5       	rcall	.+3004   	; 0x1086 <__addsf3>
     4ca:	4b 01       	movw	r8, r22
     4cc:	5c 01       	movw	r10, r24
     4ce:	60 93 9d 03 	sts	0x039D, r22	; 0x80039d <angle>
     4d2:	70 93 9e 03 	sts	0x039E, r23	; 0x80039e <angle+0x1>
     4d6:	80 93 9f 03 	sts	0x039F, r24	; 0x80039f <angle+0x2>
	bias += K[1] * y;
     4da:	90 93 a0 03 	sts	0x03A0, r25	; 0x8003a0 <angle+0x3>
     4de:	29 89       	ldd	r18, Y+17	; 0x11
     4e0:	3a 89       	ldd	r19, Y+18	; 0x12
     4e2:	4b 89       	ldd	r20, Y+19	; 0x13
     4e4:	5c 89       	ldd	r21, Y+20	; 0x14
     4e6:	6d 81       	ldd	r22, Y+5	; 0x05
     4e8:	7e 81       	ldd	r23, Y+6	; 0x06
     4ea:	8f 81       	ldd	r24, Y+7	; 0x07
     4ec:	98 85       	ldd	r25, Y+8	; 0x08
     4ee:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     4f2:	a7 01       	movw	r20, r14
     4f4:	96 01       	movw	r18, r12
     4f6:	c7 d5       	rcall	.+2958   	; 0x1086 <__addsf3>
     4f8:	60 93 95 03 	sts	0x0395, r22	; 0x800395 <bias>
     4fc:	70 93 96 03 	sts	0x0396, r23	; 0x800396 <bias+0x1>
     500:	80 93 97 03 	sts	0x0397, r24	; 0x800397 <bias+0x2>
     504:	90 93 98 03 	sts	0x0398, r25	; 0x800398 <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     508:	29 81       	ldd	r18, Y+1	; 0x01
     50a:	3a 81       	ldd	r19, Y+2	; 0x02
     50c:	4b 81       	ldd	r20, Y+3	; 0x03
     50e:	5c 81       	ldd	r21, Y+4	; 0x04
     510:	69 85       	ldd	r22, Y+9	; 0x09
     512:	7a 85       	ldd	r23, Y+10	; 0x0a
     514:	8b 85       	ldd	r24, Y+11	; 0x0b
     516:	9c 85       	ldd	r25, Y+12	; 0x0c
     518:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     51c:	9b 01       	movw	r18, r22
     51e:	ac 01       	movw	r20, r24
     520:	69 85       	ldd	r22, Y+9	; 0x09
     522:	7a 85       	ldd	r23, Y+10	; 0x0a
     524:	8b 85       	ldd	r24, Y+11	; 0x0b
     526:	9c 85       	ldd	r25, Y+12	; 0x0c
     528:	ad d5       	rcall	.+2906   	; 0x1084 <__subsf3>
     52a:	e1 ea       	ldi	r30, 0xA1	; 161
     52c:	f3 e0       	ldi	r31, 0x03	; 3
     52e:	60 83       	st	Z, r22
     530:	71 83       	std	Z+1, r23	; 0x01
	P[0][1] -= K[0] * P01_temp;
     532:	82 83       	std	Z+2, r24	; 0x02
     534:	93 83       	std	Z+3, r25	; 0x03
     536:	29 81       	ldd	r18, Y+1	; 0x01
     538:	3a 81       	ldd	r19, Y+2	; 0x02
     53a:	4b 81       	ldd	r20, Y+3	; 0x03
     53c:	5c 81       	ldd	r21, Y+4	; 0x04
     53e:	c3 01       	movw	r24, r6
     540:	b2 01       	movw	r22, r4
     542:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     546:	9b 01       	movw	r18, r22
     548:	ac 01       	movw	r20, r24
     54a:	c3 01       	movw	r24, r6
     54c:	b2 01       	movw	r22, r4
     54e:	9a d5       	rcall	.+2868   	; 0x1084 <__subsf3>
     550:	60 93 a5 03 	sts	0x03A5, r22	; 0x8003a5 <P+0x4>
     554:	70 93 a6 03 	sts	0x03A6, r23	; 0x8003a6 <P+0x5>
     558:	80 93 a7 03 	sts	0x03A7, r24	; 0x8003a7 <P+0x6>
	P[1][0] -= K[1] * P00_temp;
     55c:	90 93 a8 03 	sts	0x03A8, r25	; 0x8003a8 <P+0x7>
     560:	2d 81       	ldd	r18, Y+5	; 0x05
     562:	3e 81       	ldd	r19, Y+6	; 0x06
     564:	4f 81       	ldd	r20, Y+7	; 0x07
     566:	58 85       	ldd	r21, Y+8	; 0x08
     568:	69 85       	ldd	r22, Y+9	; 0x09
     56a:	7a 85       	ldd	r23, Y+10	; 0x0a
     56c:	8b 85       	ldd	r24, Y+11	; 0x0b
     56e:	9c 85       	ldd	r25, Y+12	; 0x0c
     570:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__mulsf3>
     574:	9b 01       	movw	r18, r22
     576:	ac 01       	movw	r20, r24
     578:	6d 85       	ldd	r22, Y+13	; 0x0d
     57a:	7e 85       	ldd	r23, Y+14	; 0x0e
     57c:	8f 85       	ldd	r24, Y+15	; 0x0f
     57e:	98 89       	ldd	r25, Y+16	; 0x10
     580:	81 d5       	rcall	.+2818   	; 0x1084 <__subsf3>
     582:	60 93 a9 03 	sts	0x03A9, r22	; 0x8003a9 <P+0x8>
     586:	70 93 aa 03 	sts	0x03AA, r23	; 0x8003aa <P+0x9>
     58a:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <P+0xa>
	P[1][1] -= K[1] * P01_temp;
     58e:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <P+0xb>
     592:	2d 81       	ldd	r18, Y+5	; 0x05
     594:	3e 81       	ldd	r19, Y+6	; 0x06
     596:	4f 81       	ldd	r20, Y+7	; 0x07
     598:	58 85       	ldd	r21, Y+8	; 0x08
     59a:	c3 01       	movw	r24, r6
     59c:	b2 01       	movw	r22, r4
     59e:	fb d7       	rcall	.+4086   	; 0x1596 <__mulsf3>
     5a0:	9b 01       	movw	r18, r22
     5a2:	ac 01       	movw	r20, r24
     5a4:	69 8d       	ldd	r22, Y+25	; 0x19
     5a6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     5a8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     5aa:	9c 8d       	ldd	r25, Y+28	; 0x1c
     5ac:	6b d5       	rcall	.+2774   	; 0x1084 <__subsf3>
     5ae:	60 93 ad 03 	sts	0x03AD, r22	; 0x8003ad <P+0xc>
     5b2:	70 93 ae 03 	sts	0x03AE, r23	; 0x8003ae <P+0xd>
     5b6:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <P+0xe>
     5ba:	90 93 b0 03 	sts	0x03B0, r25	; 0x8003b0 <P+0xf>

	return angle;
};
     5be:	c5 01       	movw	r24, r10
     5c0:	b4 01       	movw	r22, r8
     5c2:	6c 96       	adiw	r28, 0x1c	; 28
     5c4:	0f b6       	in	r0, 0x3f	; 63
     5c6:	f8 94       	cli
     5c8:	de bf       	out	0x3e, r29	; 62
     5ca:	0f be       	out	0x3f, r0	; 63
     5cc:	cd bf       	out	0x3d, r28	; 61
     5ce:	df 91       	pop	r29
     5d0:	cf 91       	pop	r28
     5d2:	1f 91       	pop	r17
     5d4:	0f 91       	pop	r16
     5d6:	ff 90       	pop	r15
     5d8:	ef 90       	pop	r14
     5da:	df 90       	pop	r13
     5dc:	cf 90       	pop	r12
     5de:	bf 90       	pop	r11
     5e0:	af 90       	pop	r10
     5e2:	9f 90       	pop	r9
     5e4:	8f 90       	pop	r8
     5e6:	7f 90       	pop	r7
     5e8:	6f 90       	pop	r6
     5ea:	5f 90       	pop	r5
     5ec:	4f 90       	pop	r4
     5ee:	08 95       	ret

000005f0 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle = 0.001f;
     5f0:	8f e6       	ldi	r24, 0x6F	; 111
     5f2:	92 e1       	ldi	r25, 0x12	; 18
     5f4:	a3 e8       	ldi	r26, 0x83	; 131
     5f6:	ba e3       	ldi	r27, 0x3A	; 58
     5f8:	80 93 91 03 	sts	0x0391, r24	; 0x800391 <Q_angle>
     5fc:	90 93 92 03 	sts	0x0392, r25	; 0x800392 <Q_angle+0x1>
     600:	a0 93 93 03 	sts	0x0393, r26	; 0x800393 <Q_angle+0x2>
     604:	b0 93 94 03 	sts	0x0394, r27	; 0x800394 <Q_angle+0x3>
	Q_bias = 0.003f;
     608:	86 ea       	ldi	r24, 0xA6	; 166
     60a:	9b e9       	ldi	r25, 0x9B	; 155
     60c:	a4 e4       	ldi	r26, 0x44	; 68
     60e:	bb e3       	ldi	r27, 0x3B	; 59
     610:	80 93 89 03 	sts	0x0389, r24	; 0x800389 <Q_bias>
     614:	90 93 8a 03 	sts	0x038A, r25	; 0x80038a <Q_bias+0x1>
     618:	a0 93 8b 03 	sts	0x038B, r26	; 0x80038b <Q_bias+0x2>
     61c:	b0 93 8c 03 	sts	0x038C, r27	; 0x80038c <Q_bias+0x3>
	R_measure = 0.03f;
     620:	8f e8       	ldi	r24, 0x8F	; 143
     622:	92 ec       	ldi	r25, 0xC2	; 194
     624:	a5 ef       	ldi	r26, 0xF5	; 245
     626:	bc e3       	ldi	r27, 0x3C	; 60
     628:	80 93 99 03 	sts	0x0399, r24	; 0x800399 <R_measure>
     62c:	90 93 9a 03 	sts	0x039A, r25	; 0x80039a <R_measure+0x1>
     630:	a0 93 9b 03 	sts	0x039B, r26	; 0x80039b <R_measure+0x2>
     634:	b0 93 9c 03 	sts	0x039C, r27	; 0x80039c <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     638:	10 92 9d 03 	sts	0x039D, r1	; 0x80039d <angle>
     63c:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <angle+0x1>
     640:	10 92 9f 03 	sts	0x039F, r1	; 0x80039f <angle+0x2>
     644:	10 92 a0 03 	sts	0x03A0, r1	; 0x8003a0 <angle+0x3>
	bias = 0.0f; // Reset bias
     648:	10 92 95 03 	sts	0x0395, r1	; 0x800395 <bias>
     64c:	10 92 96 03 	sts	0x0396, r1	; 0x800396 <bias+0x1>
     650:	10 92 97 03 	sts	0x0397, r1	; 0x800397 <bias+0x2>
     654:	10 92 98 03 	sts	0x0398, r1	; 0x800398 <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     658:	e1 ea       	ldi	r30, 0xA1	; 161
     65a:	f3 e0       	ldi	r31, 0x03	; 3
     65c:	10 82       	st	Z, r1
     65e:	11 82       	std	Z+1, r1	; 0x01
     660:	12 82       	std	Z+2, r1	; 0x02
     662:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     664:	14 82       	std	Z+4, r1	; 0x04
     666:	15 82       	std	Z+5, r1	; 0x05
     668:	16 82       	std	Z+6, r1	; 0x06
     66a:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     66c:	10 86       	std	Z+8, r1	; 0x08
     66e:	11 86       	std	Z+9, r1	; 0x09
     670:	12 86       	std	Z+10, r1	; 0x0a
     672:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     674:	14 86       	std	Z+12, r1	; 0x0c
     676:	15 86       	std	Z+13, r1	; 0x0d
     678:	16 86       	std	Z+14, r1	; 0x0e
     67a:	17 86       	std	Z+15, r1	; 0x0f
     67c:	08 95       	ret

0000067e <main>:
#include <time.h>
uint8_t buffer[14];
bool loop_bool=true;
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     67e:	cf 93       	push	r28
     680:	df 93       	push	r29
     682:	cd b7       	in	r28, 0x3d	; 61
     684:	de b7       	in	r29, 0x3e	; 62
     686:	a4 97       	sbiw	r28, 0x24	; 36
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	f8 94       	cli
     68c:	de bf       	out	0x3e, r29	; 62
     68e:	0f be       	out	0x3f, r0	; 63
     690:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     692:	10 92 79 03 	sts	0x0379, r1	; 0x800379 <__data_end+0x1>
     696:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <__data_end>
	V_step=V_step_predefine;
     69a:	88 e7       	ldi	r24, 0x78	; 120
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	90 93 72 03 	sts	0x0372, r25	; 0x800372 <V_step+0x1>
     6a2:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <V_step>
	W_step=W_step_predefine;
     6a6:	80 ef       	ldi	r24, 0xF0	; 240
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     6ae:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	incr=-1;
     6b2:	8f ef       	ldi	r24, 0xFF	; 255
     6b4:	9f ef       	ldi	r25, 0xFF	; 255
     6b6:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <incr+0x1>
     6ba:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <incr>
	pwm_delay=2000;
     6be:	80 ed       	ldi	r24, 0xD0	; 208
     6c0:	97 e0       	ldi	r25, 0x07	; 7
     6c2:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <pwm_delay+0x1>
     6c6:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <pwm_delay>
	cli();
	init_gpio();
		#ifdef GYRO
			i2c_init();
     6ca:	f8 94       	cli
		#endif
	USART_Init(MY_UBRR);
     6cc:	70 dd       	rcall	.-1312   	; 0x1ae <init_gpio>
     6ce:	cb d3       	rcall	.+1942   	; 0xe66 <i2c_init>
     6d0:	80 e1       	ldi	r24, 0x10	; 16
	uart_str = fdevopen(uart_putchar, NULL);
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	79 d4       	rcall	.+2290   	; 0xfc8 <USART_Init>
     6d6:	60 e0       	ldi	r22, 0x00	; 0
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	85 e1       	ldi	r24, 0x15	; 21
     6dc:	98 e0       	ldi	r25, 0x08	; 8
	setup_timer0();
	Enable_timer0_overflow_interrupt();//micros
     6de:	0e 94 1b 0c 	call	0x1836	; 0x1836 <fdevopen>
	setup_timer4();//pwm
     6e2:	90 93 b2 03 	sts	0x03B2, r25	; 0x8003b2 <uart_str+0x1>
	setup_timer5();
     6e6:	80 93 b1 03 	sts	0x03B1, r24	; 0x8003b1 <uart_str>
	Enable_timer5_compare_interrupt();//motor
	OCR5A=4000;
     6ea:	19 d3       	rcall	.+1586   	; 0xd1e <setup_timer0>
     6ec:	1f d3       	rcall	.+1598   	; 0xd2c <Enable_timer0_overflow_interrupt>
     6ee:	f4 d2       	rcall	.+1512   	; 0xcd8 <setup_timer4>
     6f0:	07 d3       	rcall	.+1550   	; 0xd00 <setup_timer5>
	unsigned long timer1=micros();
     6f2:	0f d3       	rcall	.+1566   	; 0xd12 <Enable_timer5_compare_interrupt>
     6f4:	80 ea       	ldi	r24, 0xA0	; 160
				int16_t gyroZ_calib=gyro_offset_z;
				int16_t accelX_calib=accel_offset_x;
				int16_t accelY_calib=accel_offset_y;
				int16_t accelZ_calib=accel_offset_z;
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     6f6:	9f e0       	ldi	r25, 0x0F	; 15
     6f8:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     6fc:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     700:	1b d3       	rcall	.+1590   	; 0xd38 <micros>
     702:	2b 01       	movw	r4, r22
     704:	3c 01       	movw	r6, r24
     706:	67 e0       	ldi	r22, 0x07	; 7
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     708:	89 e1       	ldi	r24, 0x19	; 25
     70a:	25 d2       	rcall	.+1098   	; 0xb56 <mpu6050_writeByte>
     70c:	60 e0       	ldi	r22, 0x00	; 0
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     70e:	8a e1       	ldi	r24, 0x1A	; 26
     710:	22 d2       	rcall	.+1092   	; 0xb56 <mpu6050_writeByte>
     712:	68 e0       	ldi	r22, 0x08	; 8
     714:	8b e1       	ldi	r24, 0x1B	; 27
		double gyroXangle;
		double gyroYangle;
		double compAngleX;
		double compAngleY;
	#endif  
	Kalman_init();
     716:	1f d2       	rcall	.+1086   	; 0xb56 <mpu6050_writeByte>
	double angle_roll_kalman=0;
	double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
     718:	60 e1       	ldi	r22, 0x10	; 16
     71a:	8c e1       	ldi	r24, 0x1C	; 28
     71c:	1c d2       	rcall	.+1080   	; 0xb56 <mpu6050_writeByte>
     71e:	61 e0       	ldi	r22, 0x01	; 1
     720:	8b e6       	ldi	r24, 0x6B	; 107
     722:	19 d2       	rcall	.+1074   	; 0xb56 <mpu6050_writeByte>
     724:	65 df       	rcall	.-310    	; 0x5f0 <Kalman_init>
     726:	6b 85       	ldd	r22, Y+11	; 0x0b
     728:	7c 85       	ldd	r23, Y+12	; 0x0c
     72a:	07 2e       	mov	r0, r23
     72c:	00 0c       	add	r0, r0
     72e:	88 0b       	sbc	r24, r24
     730:	99 0b       	sbc	r25, r25
     732:	25 d6       	rcall	.+3146   	; 0x137e <__floatsisf>
     734:	6b 01       	movw	r12, r22
     736:	7c 01       	movw	r14, r24
     738:	69 85       	ldd	r22, Y+9	; 0x09
     73a:	7a 85       	ldd	r23, Y+10	; 0x0a
     73c:	07 2e       	mov	r0, r23
	angle=roll;//set starting angle
     73e:	00 0c       	add	r0, r0
     740:	88 0b       	sbc	r24, r24
     742:	99 0b       	sbc	r25, r25
     744:	1c d6       	rcall	.+3128   	; 0x137e <__floatsisf>
     746:	a7 01       	movw	r20, r14
     748:	96 01       	movw	r18, r12
     74a:	27 d5       	rcall	.+2638   	; 0x119a <atan2>
     74c:	25 e3       	ldi	r18, 0x35	; 53
     74e:	3a ef       	ldi	r19, 0xFA	; 250
     750:	4e e8       	ldi	r20, 0x8E	; 142
     752:	5c e3       	ldi	r21, 0x3C	; 60
     754:	20 d7       	rcall	.+3648   	; 0x1596 <__mulsf3>
     756:	60 93 9d 03 	sts	0x039D, r22	; 0x80039d <angle>
	sei();
     75a:	70 93 9e 03 	sts	0x039E, r23	; 0x80039e <angle+0x1>
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
		double angle_roll=0;
     75e:	80 93 9f 03 	sts	0x039F, r24	; 0x80039f <angle+0x2>
     762:	90 93 a0 03 	sts	0x03A0, r25	; 0x8003a0 <angle+0x3>
		int16_t gyro_y;
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
     766:	78 94       	sei
     768:	1d 86       	std	Y+13, r1	; 0x0d
     76a:	1e 86       	std	Y+14, r1	; 0x0e
			printSI("",reg);
			printf("\n");		
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     76c:	1f 86       	std	Y+15, r1	; 0x0f
     76e:	18 8a       	std	Y+16, r1	; 0x10
     770:	1d 8a       	std	Y+21, r1	; 0x15
     772:	1e 8a       	std	Y+22, r1	; 0x16
     774:	1f 8a       	std	Y+23, r1	; 0x17
	angle=roll;//set starting angle
	sei();
    while (1) /*---------------------------while(1)---------------------------------*/
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     776:	18 8e       	std	Y+24, r1	; 0x18
     778:	0f 2e       	mov	r0, r31
     77a:	ff ed       	ldi	r31, 0xDF	; 223
     77c:	2f 2e       	mov	r2, r31
     77e:	ff e7       	ldi	r31, 0x7F	; 127
     780:	3f 2e       	mov	r3, r31
     782:	f0 2d       	mov	r31, r0
     784:	ae 01       	movw	r20, r28
     786:	4b 5f       	subi	r20, 0xFB	; 251
     788:	5f 4f       	sbci	r21, 0xFF	; 255
     78a:	7a 01       	movw	r14, r20
     78c:	8e 01       	movw	r16, r28
     78e:	0d 5f       	subi	r16, 0xFD	; 253
     790:	1f 4f       	sbci	r17, 0xFF	; 255
     792:	9e 01       	movw	r18, r28
     794:	2f 5f       	subi	r18, 0xFF	; 255
     796:	3f 4f       	sbci	r19, 0xFF	; 255
     798:	4a 5f       	subi	r20, 0xFA	; 250
     79a:	5f 4f       	sbci	r21, 0xFF	; 255
		#endif
		#ifdef GYRO
				accX;//minusing offsets
     79c:	be 01       	movw	r22, r28
     79e:	67 5f       	subi	r22, 0xF7	; 247
     7a0:	7f 4f       	sbci	r23, 0xFF	; 255
     7a2:	ce 01       	movw	r24, r28
     7a4:	07 96       	adiw	r24, 0x07	; 7
     7a6:	2d d2       	rcall	.+1114   	; 0xc02 <mpu6050_getRawData>
				accY;
     7a8:	8f 81       	ldd	r24, Y+7	; 0x07
     7aa:	98 85       	ldd	r25, Y+8	; 0x08
     7ac:	83 5e       	subi	r24, 0xE3	; 227
     7ae:	9e 4f       	sbci	r25, 0xFE	; 254
     7b0:	98 87       	std	Y+8, r25	; 0x08
     7b2:	8f 83       	std	Y+7, r24	; 0x07
				accZ;
     7b4:	89 85       	ldd	r24, Y+9	; 0x09
     7b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     7b8:	8a 52       	subi	r24, 0x2A	; 42
     7ba:	95 4f       	sbci	r25, 0xF5	; 245
     7bc:	9a 87       	std	Y+10, r25	; 0x0a
				grX;
     7be:	89 87       	std	Y+9, r24	; 0x09
     7c0:	8b 85       	ldd	r24, Y+11	; 0x0b
     7c2:	9c 85       	ldd	r25, Y+12	; 0x0c
     7c4:	87 55       	subi	r24, 0x57	; 87
				grY;
     7c6:	98 40       	sbci	r25, 0x08	; 8
     7c8:	9c 87       	std	Y+12, r25	; 0x0c
     7ca:	8b 87       	std	Y+11, r24	; 0x0b
     7cc:	89 81       	ldd	r24, Y+1	; 0x01
     7ce:	9a 81       	ldd	r25, Y+2	; 0x02
				grZ;
     7d0:	ca 97       	sbiw	r24, 0x3a	; 58
     7d2:	9a 83       	std	Y+2, r25	; 0x02
     7d4:	89 83       	std	Y+1, r24	; 0x01
     7d6:	8b 81       	ldd	r24, Y+3	; 0x03
     7d8:	9c 81       	ldd	r25, Y+4	; 0x04
			printSI("ay=",accel_y);
			printSI("az=",accel_z);
			/*--------end------*/			
		#else
			
			double dt = ((double)(micros() - timer1))/1000000;
     7da:	83 57       	subi	r24, 0x73	; 115
     7dc:	91 09       	sbc	r25, r1
     7de:	9c 83       	std	Y+4, r25	; 0x04
     7e0:	8b 83       	std	Y+3, r24	; 0x03
     7e2:	8d 81       	ldd	r24, Y+5	; 0x05
     7e4:	9e 81       	ldd	r25, Y+6	; 0x06
     7e6:	85 53       	subi	r24, 0x35	; 53
     7e8:	91 40       	sbci	r25, 0x01	; 1
     7ea:	9e 83       	std	Y+6, r25	; 0x06
     7ec:	8d 83       	std	Y+5, r24	; 0x05
     7ee:	a4 d2       	rcall	.+1352   	; 0xd38 <micros>
     7f0:	64 19       	sub	r22, r4
     7f2:	75 09       	sbc	r23, r5
     7f4:	86 09       	sbc	r24, r6
     7f6:	97 09       	sbc	r25, r7
     7f8:	c0 d5       	rcall	.+2944   	; 0x137a <__floatunsisf>
			timer1=micros();
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	34 e2       	ldi	r19, 0x24	; 36
     7fe:	44 e7       	ldi	r20, 0x74	; 116
     800:	59 e4       	ldi	r21, 0x49	; 73
			double gyroXrate = gyro_x/65.5;// deg/s 
			double gyroYrate = gyro_y/65.5;// deg/s
     802:	22 d5       	rcall	.+2628   	; 0x1248 <__divsf3>
     804:	69 8f       	std	Y+25, r22	; 0x19
     806:	7a 8f       	std	Y+26, r23	; 0x1a
     808:	8b 8f       	std	Y+27, r24	; 0x1b
     80a:	9c 8f       	std	Y+28, r25	; 0x1c
     80c:	95 d2       	rcall	.+1322   	; 0xd38 <micros>
     80e:	2b 01       	movw	r4, r22
     810:	3c 01       	movw	r6, r24
     812:	6b 81       	ldd	r22, Y+3	; 0x03
     814:	7c 81       	ldd	r23, Y+4	; 0x04
     816:	07 2e       	mov	r0, r23
     818:	00 0c       	add	r0, r0
     81a:	88 0b       	sbc	r24, r24
     81c:	99 0b       	sbc	r25, r25
     81e:	af d5       	rcall	.+2910   	; 0x137e <__floatsisf>
			if (!loop_bool) {
     820:	20 e0       	ldi	r18, 0x00	; 0
     822:	30 e0       	ldi	r19, 0x00	; 0
     824:	43 e8       	ldi	r20, 0x83	; 131
     826:	52 e4       	ldi	r21, 0x42	; 66
     828:	0f d5       	rcall	.+2590   	; 0x1248 <__divsf3>
				angle_pitch += gyroXrate*dt; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     82a:	69 a3       	std	Y+33, r22	; 0x21
     82c:	7a a3       	std	Y+34, r23	; 0x22
     82e:	8b a3       	std	Y+35, r24	; 0x23
     830:	9c a3       	std	Y+36, r25	; 0x24
     832:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <loop_bool>
     836:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <loop_bool+0x1>
     83a:	89 2b       	or	r24, r25
     83c:	89 f5       	brne	.+98     	; 0x8a0 <main+0x222>
     83e:	69 81       	ldd	r22, Y+1	; 0x01
     840:	7a 81       	ldd	r23, Y+2	; 0x02
     842:	07 2e       	mov	r0, r23
     844:	00 0c       	add	r0, r0
     846:	88 0b       	sbc	r24, r24
     848:	99 0b       	sbc	r25, r25
     84a:	99 d5       	rcall	.+2866   	; 0x137e <__floatsisf>
     84c:	20 e0       	ldi	r18, 0x00	; 0
     84e:	30 e0       	ldi	r19, 0x00	; 0
     850:	43 e8       	ldi	r20, 0x83	; 131
     852:	52 e4       	ldi	r21, 0x42	; 66
     854:	f9 d4       	rcall	.+2546   	; 0x1248 <__divsf3>
     856:	29 8d       	ldd	r18, Y+25	; 0x19
     858:	3a 8d       	ldd	r19, Y+26	; 0x1a
     85a:	4b 8d       	ldd	r20, Y+27	; 0x1b
     85c:	5c 8d       	ldd	r21, Y+28	; 0x1c
     85e:	9b d6       	rcall	.+3382   	; 0x1596 <__mulsf3>
     860:	9b 01       	movw	r18, r22
     862:	ac 01       	movw	r20, r24
     864:	6d 89       	ldd	r22, Y+21	; 0x15
				angle_roll += gyroYrate*dt;  //Calculate the traveled roll angle and add this to the angle_roll variable			
     866:	7e 89       	ldd	r23, Y+22	; 0x16
     868:	8f 89       	ldd	r24, Y+23	; 0x17
     86a:	98 8d       	ldd	r25, Y+24	; 0x18
     86c:	0c d4       	rcall	.+2072   	; 0x1086 <__addsf3>
     86e:	6d 8b       	std	Y+21, r22	; 0x15
     870:	7e 8b       	std	Y+22, r23	; 0x16
     872:	8f 8b       	std	Y+23, r24	; 0x17
     874:	98 8f       	std	Y+24, r25	; 0x18
     876:	29 a1       	ldd	r18, Y+33	; 0x21
     878:	3a a1       	ldd	r19, Y+34	; 0x22
     87a:	4b a1       	ldd	r20, Y+35	; 0x23
     87c:	5c a1       	ldd	r21, Y+36	; 0x24
     87e:	69 8d       	ldd	r22, Y+25	; 0x19
     880:	7a 8d       	ldd	r23, Y+26	; 0x1a
     882:	8b 8d       	ldd	r24, Y+27	; 0x1b
     884:	9c 8d       	ldd	r25, Y+28	; 0x1c
     886:	87 d6       	rcall	.+3342   	; 0x1596 <__mulsf3>
     888:	9b 01       	movw	r18, r22
     88a:	ac 01       	movw	r20, r24
			}
			else loop_bool=false;	
     88c:	6d 85       	ldd	r22, Y+13	; 0x0d
     88e:	7e 85       	ldd	r23, Y+14	; 0x0e
     890:	8f 85       	ldd	r24, Y+15	; 0x0f
			angle_pitch += angle_roll * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the roll angle to the pitch angel
     892:	98 89       	ldd	r25, Y+16	; 0x10
     894:	f8 d3       	rcall	.+2032   	; 0x1086 <__addsf3>
     896:	6d 87       	std	Y+13, r22	; 0x0d
     898:	7e 87       	std	Y+14, r23	; 0x0e
     89a:	8f 87       	std	Y+15, r24	; 0x0f
     89c:	98 8b       	std	Y+16, r25	; 0x10
     89e:	04 c0       	rjmp	.+8      	; 0x8a8 <main+0x22a>
     8a0:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <loop_bool+0x1>
     8a4:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <loop_bool>
     8a8:	20 e0       	ldi	r18, 0x00	; 0
     8aa:	30 e0       	ldi	r19, 0x00	; 0
     8ac:	43 e8       	ldi	r20, 0x83	; 131
     8ae:	52 e4       	ldi	r21, 0x42	; 66
     8b0:	69 8d       	ldd	r22, Y+25	; 0x19
     8b2:	7a 8d       	ldd	r23, Y+26	; 0x1a
     8b4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     8b6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     8b8:	c7 d4       	rcall	.+2446   	; 0x1248 <__divsf3>
     8ba:	2b ed       	ldi	r18, 0xDB	; 219
     8bc:	3f e0       	ldi	r19, 0x0F	; 15
     8be:	49 e4       	ldi	r20, 0x49	; 73
     8c0:	50 e4       	ldi	r21, 0x40	; 64
     8c2:	69 d6       	rcall	.+3282   	; 0x1596 <__mulsf3>
     8c4:	20 e0       	ldi	r18, 0x00	; 0
     8c6:	30 e0       	ldi	r19, 0x00	; 0
     8c8:	44 e3       	ldi	r20, 0x34	; 52
     8ca:	53 e4       	ldi	r21, 0x43	; 67
     8cc:	bd d4       	rcall	.+2426   	; 0x1248 <__divsf3>
     8ce:	6b 01       	movw	r12, r22
     8d0:	7c 01       	movw	r14, r24
     8d2:	6d 81       	ldd	r22, Y+5	; 0x05
     8d4:	7e 81       	ldd	r23, Y+6	; 0x06
     8d6:	07 2e       	mov	r0, r23
     8d8:	00 0c       	add	r0, r0
     8da:	88 0b       	sbc	r24, r24
     8dc:	99 0b       	sbc	r25, r25
     8de:	4f d5       	rcall	.+2718   	; 0x137e <__floatsisf>
     8e0:	9b 01       	movw	r18, r22
     8e2:	ac 01       	movw	r20, r24
     8e4:	c7 01       	movw	r24, r14
     8e6:	b6 01       	movw	r22, r12
     8e8:	56 d6       	rcall	.+3244   	; 0x1596 <__mulsf3>
     8ea:	b8 d6       	rcall	.+3440   	; 0x165c <sin>
     8ec:	6b 01       	movw	r12, r22
     8ee:	7c 01       	movw	r14, r24
     8f0:	9b 01       	movw	r18, r22
     8f2:	ac 01       	movw	r20, r24
     8f4:	6d 85       	ldd	r22, Y+13	; 0x0d
     8f6:	7e 85       	ldd	r23, Y+14	; 0x0e
     8f8:	8f 85       	ldd	r24, Y+15	; 0x0f
			angle_roll -= angle_pitch * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the pitch angle to the roll angel
     8fa:	98 89       	ldd	r25, Y+16	; 0x10
     8fc:	4c d6       	rcall	.+3224   	; 0x1596 <__mulsf3>
     8fe:	9b 01       	movw	r18, r22
     900:	ac 01       	movw	r20, r24
     902:	6d 89       	ldd	r22, Y+21	; 0x15
     904:	7e 89       	ldd	r23, Y+22	; 0x16
     906:	8f 89       	ldd	r24, Y+23	; 0x17
     908:	98 8d       	ldd	r25, Y+24	; 0x18
     90a:	bd d3       	rcall	.+1914   	; 0x1086 <__addsf3>
     90c:	6d 8b       	std	Y+21, r22	; 0x15
     90e:	7e 8b       	std	Y+22, r23	; 0x16
     910:	8f 8b       	std	Y+23, r24	; 0x17
     912:	98 8f       	std	Y+24, r25	; 0x18
     914:	9b 01       	movw	r18, r22
     916:	ac 01       	movw	r20, r24
     918:	c7 01       	movw	r24, r14
			
			double temporar_accel_x=accel_x/100;
     91a:	b6 01       	movw	r22, r12
     91c:	3c d6       	rcall	.+3192   	; 0x1596 <__mulsf3>
     91e:	9b 01       	movw	r18, r22
     920:	ac 01       	movw	r20, r24
     922:	6d 85       	ldd	r22, Y+13	; 0x0d
     924:	7e 85       	ldd	r23, Y+14	; 0x0e
     926:	8f 85       	ldd	r24, Y+15	; 0x0f
     928:	98 89       	ldd	r25, Y+16	; 0x10
     92a:	ac d3       	rcall	.+1880   	; 0x1084 <__subsf3>
     92c:	6d 87       	std	Y+13, r22	; 0x0d
     92e:	7e 87       	std	Y+14, r23	; 0x0e
     930:	8f 87       	std	Y+15, r24	; 0x0f
     932:	98 8b       	std	Y+16, r25	; 0x10
			double temporar_accel_y=accel_y/100;
     934:	0f 81       	ldd	r16, Y+7	; 0x07
     936:	18 85       	ldd	r17, Y+8	; 0x08
     938:	c8 01       	movw	r24, r16
     93a:	64 e6       	ldi	r22, 0x64	; 100
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	27 d7       	rcall	.+3662   	; 0x178e <__divmodhi4>
     940:	07 2e       	mov	r0, r23
     942:	00 0c       	add	r0, r0
     944:	88 0b       	sbc	r24, r24
     946:	99 0b       	sbc	r25, r25
     948:	1a d5       	rcall	.+2612   	; 0x137e <__floatsisf>
     94a:	4b 01       	movw	r8, r22
     94c:	5c 01       	movw	r10, r24
     94e:	89 85       	ldd	r24, Y+9	; 0x09
			double temporar_accel_z=accel_z/100;	
     950:	9a 85       	ldd	r25, Y+10	; 0x0a
     952:	64 e6       	ldi	r22, 0x64	; 100
     954:	70 e0       	ldi	r23, 0x00	; 0
     956:	1b d7       	rcall	.+3638   	; 0x178e <__divmodhi4>
     958:	07 2e       	mov	r0, r23
     95a:	00 0c       	add	r0, r0
     95c:	88 0b       	sbc	r24, r24
     95e:	99 0b       	sbc	r25, r25
     960:	0e d5       	rcall	.+2588   	; 0x137e <__floatsisf>
     962:	69 8b       	std	Y+17, r22	; 0x11
     964:	7a 8b       	std	Y+18, r23	; 0x12
     966:	8b 8b       	std	Y+19, r24	; 0x13
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
     968:	9c 8b       	std	Y+20, r25	; 0x14
     96a:	8b 85       	ldd	r24, Y+11	; 0x0b
     96c:	9c 85       	ldd	r25, Y+12	; 0x0c
     96e:	64 e6       	ldi	r22, 0x64	; 100
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	0d d7       	rcall	.+3610   	; 0x178e <__divmodhi4>
     974:	07 2e       	mov	r0, r23
     976:	00 0c       	add	r0, r0
     978:	88 0b       	sbc	r24, r24
     97a:	99 0b       	sbc	r25, r25
     97c:	00 d5       	rcall	.+2560   	; 0x137e <__floatsisf>
     97e:	6b 01       	movw	r12, r22
     980:	7c 01       	movw	r14, r24
     982:	a5 01       	movw	r20, r10
     984:	94 01       	movw	r18, r8
     986:	c5 01       	movw	r24, r10
     988:	b4 01       	movw	r22, r8
     98a:	05 d6       	rcall	.+3082   	; 0x1596 <__mulsf3>
     98c:	6d 8f       	std	Y+29, r22	; 0x1d
     98e:	7e 8f       	std	Y+30, r23	; 0x1e
     990:	8f 8f       	std	Y+31, r24	; 0x1f
     992:	98 a3       	std	Y+32, r25	; 0x20
     994:	29 89       	ldd	r18, Y+17	; 0x11
     996:	3a 89       	ldd	r19, Y+18	; 0x12
     998:	4b 89       	ldd	r20, Y+19	; 0x13
     99a:	5c 89       	ldd	r21, Y+20	; 0x14
     99c:	ca 01       	movw	r24, r20
     99e:	b9 01       	movw	r22, r18
     9a0:	fa d5       	rcall	.+3060   	; 0x1596 <__mulsf3>
     9a2:	9b 01       	movw	r18, r22
     9a4:	ac 01       	movw	r20, r24
     9a6:	6d 8d       	ldd	r22, Y+29	; 0x1d
     9a8:	7e 8d       	ldd	r23, Y+30	; 0x1e
     9aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9ac:	98 a1       	ldd	r25, Y+32	; 0x20
     9ae:	6b d3       	rcall	.+1750   	; 0x1086 <__addsf3>
     9b0:	6d 8f       	std	Y+29, r22	; 0x1d
     9b2:	7e 8f       	std	Y+30, r23	; 0x1e
     9b4:	8f 8f       	std	Y+31, r24	; 0x1f
     9b6:	98 a3       	std	Y+32, r25	; 0x20
     9b8:	a5 01       	movw	r20, r10
     9ba:	94 01       	movw	r18, r8
     9bc:	c5 01       	movw	r24, r10
     9be:	b4 01       	movw	r22, r8
     9c0:	ea d5       	rcall	.+3028   	; 0x1596 <__mulsf3>
     9c2:	4b 01       	movw	r8, r22
     9c4:	5c 01       	movw	r10, r24
     9c6:	29 89       	ldd	r18, Y+17	; 0x11
     9c8:	3a 89       	ldd	r19, Y+18	; 0x12
     9ca:	4b 89       	ldd	r20, Y+19	; 0x13
     9cc:	5c 89       	ldd	r21, Y+20	; 0x14
     9ce:	ca 01       	movw	r24, r20
     9d0:	b9 01       	movw	r22, r18
     9d2:	e1 d5       	rcall	.+3010   	; 0x1596 <__mulsf3>
     9d4:	9b 01       	movw	r18, r22
     9d6:	ac 01       	movw	r20, r24
     9d8:	c5 01       	movw	r24, r10
			acc_total_vector*=100;
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     9da:	b4 01       	movw	r22, r8
     9dc:	54 d3       	rcall	.+1704   	; 0x1086 <__addsf3>
     9de:	4b 01       	movw	r8, r22
     9e0:	5c 01       	movw	r10, r24
     9e2:	a7 01       	movw	r20, r14
     9e4:	96 01       	movw	r18, r12
     9e6:	c7 01       	movw	r24, r14
     9e8:	b6 01       	movw	r22, r12
     9ea:	d5 d5       	rcall	.+2986   	; 0x1596 <__mulsf3>
     9ec:	9b 01       	movw	r18, r22
     9ee:	ac 01       	movw	r20, r24
     9f0:	c5 01       	movw	r24, r10
     9f2:	b4 01       	movw	r22, r8
     9f4:	48 d3       	rcall	.+1680   	; 0x1086 <__addsf3>
     9f6:	3c d6       	rcall	.+3192   	; 0x1670 <sqrt>
     9f8:	4b 01       	movw	r8, r22
     9fa:	5c 01       	movw	r10, r24
     9fc:	b8 01       	movw	r22, r16
     9fe:	11 0f       	add	r17, r17
     a00:	88 0b       	sbc	r24, r24
     a02:	99 0b       	sbc	r25, r25
				
			//kalman
			double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
			double pitch = atan(-accel_x / sqrt(accel_y * accel_y + accel_z * accel_z)) * RAD_TO_DEG;
			//angle=roll;
			float kalman_angle=getAngle(angle_roll,gyroYrate,dt);
     a04:	bc d4       	rcall	.+2424   	; 0x137e <__floatsisf>
     a06:	6b 01       	movw	r12, r22
     a08:	7c 01       	movw	r14, r24
     a0a:	20 e0       	ldi	r18, 0x00	; 0
     a0c:	30 e0       	ldi	r19, 0x00	; 0
     a0e:	48 ec       	ldi	r20, 0xC8	; 200
     a10:	52 e4       	ldi	r21, 0x42	; 66
     a12:	c5 01       	movw	r24, r10
     a14:	b4 01       	movw	r22, r8
     a16:	bf d5       	rcall	.+2942   	; 0x1596 <__mulsf3>
     a18:	9b 01       	movw	r18, r22
     a1a:	ac 01       	movw	r20, r24
     a1c:	c7 01       	movw	r24, r14
			
			int16_t reg;
			reg=kalman_angle;
     a1e:	b6 01       	movw	r22, r12
     a20:	13 d4       	rcall	.+2086   	; 0x1248 <__divsf3>
     a22:	95 d3       	rcall	.+1834   	; 0x114e <asin>
     a24:	4b 01       	movw	r8, r22
			printSI("",reg);
     a26:	5c 01       	movw	r10, r24
     a28:	e9 8c       	ldd	r14, Y+25	; 0x19
     a2a:	fa 8c       	ldd	r15, Y+26	; 0x1a
     a2c:	0b 8d       	ldd	r16, Y+27	; 0x1b
			reg=angle_roll;
			printSI("",reg);
     a2e:	1c 8d       	ldd	r17, Y+28	; 0x1c
     a30:	29 a1       	ldd	r18, Y+33	; 0x21
     a32:	3a a1       	ldd	r19, Y+34	; 0x22
     a34:	4b a1       	ldd	r20, Y+35	; 0x23
     a36:	5c a1       	ldd	r21, Y+36	; 0x24
     a38:	6d 85       	ldd	r22, Y+13	; 0x0d
     a3a:	7e 85       	ldd	r23, Y+14	; 0x0e
     a3c:	8f 85       	ldd	r24, Y+15	; 0x0f
     a3e:	98 89       	ldd	r25, Y+16	; 0x10
     a40:	44 dc       	rcall	.-1912   	; 0x2ca <getAngle>
				
			double xff=angle_roll_acc;
			double final_angleY=(angle_roll*0.996)+(xff*0.004);
     a42:	6a d4       	rcall	.+2260   	; 0x1318 <__fixsfsi>
     a44:	6b 01       	movw	r12, r22
     a46:	7c 01       	movw	r14, r24
     a48:	87 e7       	ldi	r24, 0x77	; 119
     a4a:	93 e0       	ldi	r25, 0x03	; 3
     a4c:	ff d2       	rcall	.+1534   	; 0x104c <printSI>
     a4e:	6d 85       	ldd	r22, Y+13	; 0x0d
     a50:	7e 85       	ldd	r23, Y+14	; 0x0e
     a52:	8f 85       	ldd	r24, Y+15	; 0x0f
     a54:	98 89       	ldd	r25, Y+16	; 0x10
     a56:	60 d4       	rcall	.+2240   	; 0x1318 <__fixsfsi>
     a58:	87 e7       	ldi	r24, 0x77	; 119
     a5a:	93 e0       	ldi	r25, 0x03	; 3
     a5c:	f7 d2       	rcall	.+1518   	; 0x104c <printSI>
     a5e:	2b e1       	ldi	r18, 0x1B	; 27
     a60:	3f e2       	ldi	r19, 0x2F	; 47
     a62:	45 e6       	ldi	r20, 0x65	; 101
     a64:	52 ec       	ldi	r21, 0xC2	; 194
     a66:	c5 01       	movw	r24, r10
     a68:	b4 01       	movw	r22, r8
     a6a:	95 d5       	rcall	.+2858   	; 0x1596 <__mulsf3>
     a6c:	2f e6       	ldi	r18, 0x6F	; 111
     a6e:	32 e1       	ldi	r19, 0x12	; 18
     a70:	43 e8       	ldi	r20, 0x83	; 131
     a72:	5b e3       	ldi	r21, 0x3B	; 59
     a74:	90 d5       	rcall	.+2848   	; 0x1596 <__mulsf3>
     a76:	4b 01       	movw	r8, r22
     a78:	5c 01       	movw	r10, r24
     a7a:	2b ed       	ldi	r18, 0xDB	; 219
     a7c:	39 ef       	ldi	r19, 0xF9	; 249
			reg=final_angleY;
			printSI("",reg);
     a7e:	4e e7       	ldi	r20, 0x7E	; 126
     a80:	5f e3       	ldi	r21, 0x3F	; 63
     a82:	6d 85       	ldd	r22, Y+13	; 0x0d
     a84:	7e 85       	ldd	r23, Y+14	; 0x0e
     a86:	8f 85       	ldd	r24, Y+15	; 0x0f
     a88:	98 89       	ldd	r25, Y+16	; 0x10
			printf("\n");		
     a8a:	85 d5       	rcall	.+2826   	; 0x1596 <__mulsf3>
     a8c:	9b 01       	movw	r18, r22
     a8e:	ac 01       	movw	r20, r24
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
     a90:	c5 01       	movw	r24, r10
     a92:	b4 01       	movw	r22, r8
     a94:	f8 d2       	rcall	.+1520   	; 0x1086 <__addsf3>
     a96:	4b 01       	movw	r8, r22
     a98:	5c 01       	movw	r10, r24
     a9a:	3e d4       	rcall	.+2172   	; 0x1318 <__fixsfsi>
     a9c:	87 e7       	ldi	r24, 0x77	; 119
     a9e:	93 e0       	ldi	r25, 0x03	; 3
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     aa0:	d5 d2       	rcall	.+1450   	; 0x104c <printSI>
     aa2:	8a e0       	ldi	r24, 0x0A	; 10
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	24 d7       	rcall	.+3656   	; 0x18f0 <putchar>
     aa8:	c6 01       	movw	r24, r12
     aaa:	99 23       	and	r25, r25
     aac:	24 f4       	brge	.+8      	; 0xab6 <main+0x438>
     aae:	88 27       	eor	r24, r24
     ab0:	99 27       	eor	r25, r25
     ab2:	8c 19       	sub	r24, r12
     ab4:	9d 09       	sbc	r25, r13
				if (local_motor_delay>2000)
     ab6:	bc 01       	movw	r22, r24
     ab8:	44 ef       	ldi	r20, 0xF4	; 244
     aba:	51 e0       	ldi	r21, 0x01	; 1
     abc:	84 9f       	mul	r24, r20
				{
					pwm_delay=local_motor_delay;
     abe:	90 01       	movw	r18, r0
     ac0:	85 9f       	mul	r24, r21
     ac2:	30 0d       	add	r19, r0
     ac4:	94 9f       	mul	r25, r20
				}
				int16_t reg_ = local_motor_delay;
				//printSI("ocr=",reg_);
				if ((absoulute_y<=0.8) || (final_angleY >90))
     ac6:	30 0d       	add	r19, r0
     ac8:	11 24       	eor	r1, r1
     aca:	c1 01       	movw	r24, r2
     acc:	82 1b       	sub	r24, r18
     ace:	93 0b       	sbc	r25, r19
     ad0:	81 3d       	cpi	r24, 0xD1	; 209
     ad2:	57 e0       	ldi	r21, 0x07	; 7
     ad4:	95 07       	cpc	r25, r21
     ad6:	20 f0       	brcs	.+8      	; 0xae0 <main+0x462>
     ad8:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <pwm_delay+0x1>
     adc:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <pwm_delay>
     ae0:	07 2e       	mov	r0, r23
     ae2:	00 0c       	add	r0, r0
     ae4:	88 0b       	sbc	r24, r24
     ae6:	99 0b       	sbc	r25, r25
     ae8:	4a d4       	rcall	.+2196   	; 0x137e <__floatsisf>
     aea:	2d ec       	ldi	r18, 0xCD	; 205
     aec:	3c ec       	ldi	r19, 0xCC	; 204
     aee:	4c e4       	ldi	r20, 0x4C	; 76
     af0:	5f e3       	ldi	r21, 0x3F	; 63
     af2:	a6 d3       	rcall	.+1868   	; 0x1240 <__cmpsf2>
     af4:	18 16       	cp	r1, r24
				{
					incr=0;
     af6:	4c f4       	brge	.+18     	; 0xb0a <main+0x48c>
     af8:	20 e0       	ldi	r18, 0x00	; 0
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	44 eb       	ldi	r20, 0xB4	; 180
     afe:	52 e4       	ldi	r21, 0x42	; 66
					//printf("\n");	
				}
				else 
					if (final_angleY>0.8)
     b00:	c5 01       	movw	r24, r10
     b02:	b4 01       	movw	r22, r8
     b04:	3d d5       	rcall	.+2682   	; 0x1580 <__gesf2>
     b06:	18 16       	cp	r1, r24
     b08:	2c f4       	brge	.+10     	; 0xb14 <main+0x496>
     b0a:	10 92 88 03 	sts	0x0388, r1	; 0x800388 <incr+0x1>
     b0e:	10 92 87 03 	sts	0x0387, r1	; 0x800387 <incr>
     b12:	38 ce       	rjmp	.-912    	; 0x784 <main+0x106>
					{
						cli();
     b14:	2d ec       	ldi	r18, 0xCD	; 205
						incr=1;
     b16:	3c ec       	ldi	r19, 0xCC	; 204
     b18:	4c e4       	ldi	r20, 0x4C	; 76
     b1a:	5f e3       	ldi	r21, 0x3F	; 63
     b1c:	c5 01       	movw	r24, r10
     b1e:	b4 01       	movw	r22, r8
     b20:	2f d5       	rcall	.+2654   	; 0x1580 <__gesf2>
						printf(" ");
     b22:	18 16       	cp	r1, r24
     b24:	64 f4       	brge	.+24     	; 0xb3e <main+0x4c0>
     b26:	f8 94       	cli
     b28:	81 e0       	ldi	r24, 0x01	; 1
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" yes\n");					
						sei();
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <incr+0x1>
					}
					else
					{	cli();
						incr=-1;
     b30:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <incr>
     b34:	80 e2       	ldi	r24, 0x20	; 32
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	db d6       	rcall	.+3510   	; 0x18f0 <putchar>
     b3a:	78 94       	sei
						printf(" ");
     b3c:	23 ce       	rjmp	.-954    	; 0x784 <main+0x106>
     b3e:	f8 94       	cli
     b40:	4f ef       	ldi	r20, 0xFF	; 255
     b42:	5f ef       	ldi	r21, 0xFF	; 255
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" no\n");
						sei();
     b44:	50 93 88 03 	sts	0x0388, r21	; 0x800388 <incr+0x1>
     b48:	40 93 87 03 	sts	0x0387, r20	; 0x800387 <incr>
     b4c:	80 e2       	ldi	r24, 0x20	; 32
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	cf d6       	rcall	.+3486   	; 0x18f0 <putchar>
     b52:	78 94       	sei
     b54:	17 ce       	rjmp	.-978    	; 0x784 <main+0x106>

00000b56 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     b56:	cf 93       	push	r28
     b58:	df 93       	push	r29
     b5a:	d8 2f       	mov	r29, r24
     b5c:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     b5e:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
     b60:	88 d1       	rcall	.+784    	; 0xe72 <i2c_start>
     b62:	8d 2f       	mov	r24, r29
	i2c_stop();
     b64:	dc d1       	rcall	.+952    	; 0xf1e <i2c_write>
     b66:	8c 2f       	mov	r24, r28
}
     b68:	da d1       	rcall	.+948    	; 0xf1e <i2c_write>
     b6a:	c9 d1       	rcall	.+914    	; 0xefe <i2c_stop>
     b6c:	df 91       	pop	r29
     b6e:	cf 91       	pop	r28
     b70:	08 95       	ret

00000b72 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     b72:	af 92       	push	r10
     b74:	bf 92       	push	r11
     b76:	cf 92       	push	r12
     b78:	df 92       	push	r13
     b7a:	ff 92       	push	r15
     b7c:	0f 93       	push	r16
     b7e:	1f 93       	push	r17
     b80:	cf 93       	push	r28
     b82:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     b84:	66 23       	and	r22, r22
     b86:	89 f1       	breq	.+98     	; 0xbea <mpu6050_readBytes+0x78>
     b88:	c5 2f       	mov	r28, r21
     b8a:	d4 2f       	mov	r29, r20
     b8c:	f6 2e       	mov	r15, r22
     b8e:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     b90:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
     b92:	6f d1       	rcall	.+734    	; 0xe72 <i2c_start>
     b94:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b96:	c3 d1       	rcall	.+902    	; 0xf1e <i2c_write>
     b98:	85 e3       	ldi	r24, 0x35	; 53
     b9a:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     b9c:	f1 f7       	brne	.-4      	; 0xb9a <mpu6050_readBytes+0x28>
     b9e:	00 00       	nop
     ba0:	81 ed       	ldi	r24, 0xD1	; 209
     ba2:	67 d1       	rcall	.+718    	; 0xe72 <i2c_start>
     ba4:	0d 2f       	mov	r16, r29
     ba6:	1c 2f       	mov	r17, r28
     ba8:	cc 24       	eor	r12, r12
     baa:	ca 94       	dec	r12
     bac:	cf 0c       	add	r12, r15
     bae:	d1 2c       	mov	r13, r1
     bb0:	ef ef       	ldi	r30, 0xFF	; 255
     bb2:	ce 1a       	sub	r12, r30
     bb4:	de 0a       	sbc	r13, r30
     bb6:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     bb8:	d0 e0       	ldi	r29, 0x00	; 0
     bba:	af 2c       	mov	r10, r15
     bbc:	b1 2c       	mov	r11, r1
     bbe:	f1 e0       	ldi	r31, 0x01	; 1
     bc0:	af 1a       	sub	r10, r31
     bc2:	b1 08       	sbc	r11, r1
     bc4:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     bc6:	bd 06       	cpc	r11, r29
     bc8:	21 f4       	brne	.+8      	; 0xbd2 <mpu6050_readBytes+0x60>
     bca:	e4 d1       	rcall	.+968    	; 0xf94 <i2c_readNak>
     bcc:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     bce:	80 83       	st	Z, r24
     bd0:	03 c0       	rjmp	.+6      	; 0xbd8 <mpu6050_readBytes+0x66>
     bd2:	c6 d1       	rcall	.+908    	; 0xf60 <i2c_readAck>
     bd4:	f8 01       	movw	r30, r16
     bd6:	80 83       	st	Z, r24
     bd8:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     bda:	0f 5f       	subi	r16, 0xFF	; 255
     bdc:	1f 4f       	sbci	r17, 0xFF	; 255
     bde:	cc 15       	cp	r28, r12
     be0:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     be2:	81 f7       	brne	.-32     	; 0xbc4 <mpu6050_readBytes+0x52>
     be4:	cf 2d       	mov	r28, r15
     be6:	8b d1       	rcall	.+790    	; 0xefe <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     be8:	01 c0       	rjmp	.+2      	; 0xbec <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     bea:	c0 e0       	ldi	r28, 0x00	; 0
     bec:	8c 2f       	mov	r24, r28
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	ff 90       	pop	r15
     bf8:	df 90       	pop	r13
     bfa:	cf 90       	pop	r12
     bfc:	bf 90       	pop	r11
     bfe:	af 90       	pop	r10
     c00:	08 95       	ret

00000c02 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     c02:	6f 92       	push	r6
     c04:	7f 92       	push	r7
     c06:	8f 92       	push	r8
     c08:	9f 92       	push	r9
     c0a:	af 92       	push	r10
     c0c:	bf 92       	push	r11
     c0e:	cf 92       	push	r12
     c10:	df 92       	push	r13
     c12:	ef 92       	push	r14
     c14:	ff 92       	push	r15
     c16:	0f 93       	push	r16
     c18:	1f 93       	push	r17
     c1a:	cf 93       	push	r28
     c1c:	df 93       	push	r29
     c1e:	cd b7       	in	r28, 0x3d	; 61
     c20:	de b7       	in	r29, 0x3e	; 62
     c22:	2e 97       	sbiw	r28, 0x0e	; 14
     c24:	0f b6       	in	r0, 0x3f	; 63
     c26:	f8 94       	cli
     c28:	de bf       	out	0x3e, r29	; 62
     c2a:	0f be       	out	0x3f, r0	; 63
     c2c:	cd bf       	out	0x3d, r28	; 61
     c2e:	4c 01       	movw	r8, r24
     c30:	5b 01       	movw	r10, r22
     c32:	6a 01       	movw	r12, r20
     c34:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     c36:	ae 01       	movw	r20, r28
     c38:	4f 5f       	subi	r20, 0xFF	; 255
     c3a:	5f 4f       	sbci	r21, 0xFF	; 255
     c3c:	6e e0       	ldi	r22, 0x0E	; 14
     c3e:	8b e3       	ldi	r24, 0x3B	; 59
     c40:	98 df       	rcall	.-208    	; 0xb72 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     c42:	89 81       	ldd	r24, Y+1	; 0x01
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	98 2f       	mov	r25, r24
     c48:	88 27       	eor	r24, r24
     c4a:	2a 81       	ldd	r18, Y+2	; 0x02
     c4c:	82 2b       	or	r24, r18
     c4e:	f4 01       	movw	r30, r8
     c50:	91 83       	std	Z+1, r25	; 0x01
     c52:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     c54:	8b 81       	ldd	r24, Y+3	; 0x03
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	98 2f       	mov	r25, r24
     c5a:	88 27       	eor	r24, r24
     c5c:	2c 81       	ldd	r18, Y+4	; 0x04
     c5e:	82 2b       	or	r24, r18
     c60:	f5 01       	movw	r30, r10
     c62:	91 83       	std	Z+1, r25	; 0x01
     c64:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     c66:	8d 81       	ldd	r24, Y+5	; 0x05
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	98 2f       	mov	r25, r24
     c6c:	88 27       	eor	r24, r24
     c6e:	2e 81       	ldd	r18, Y+6	; 0x06
     c70:	82 2b       	or	r24, r18
     c72:	f6 01       	movw	r30, r12
     c74:	91 83       	std	Z+1, r25	; 0x01
     c76:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     c78:	89 85       	ldd	r24, Y+9	; 0x09
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	98 2f       	mov	r25, r24
     c7e:	88 27       	eor	r24, r24
     c80:	2a 85       	ldd	r18, Y+10	; 0x0a
     c82:	82 2b       	or	r24, r18
     c84:	f3 01       	movw	r30, r6
     c86:	91 83       	std	Z+1, r25	; 0x01
     c88:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     c8a:	8b 85       	ldd	r24, Y+11	; 0x0b
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	98 2f       	mov	r25, r24
     c90:	88 27       	eor	r24, r24
     c92:	2c 85       	ldd	r18, Y+12	; 0x0c
     c94:	82 2b       	or	r24, r18
     c96:	f8 01       	movw	r30, r16
     c98:	91 83       	std	Z+1, r25	; 0x01
     c9a:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     c9c:	8d 85       	ldd	r24, Y+13	; 0x0d
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	98 2f       	mov	r25, r24
     ca2:	88 27       	eor	r24, r24
     ca4:	2e 85       	ldd	r18, Y+14	; 0x0e
     ca6:	82 2b       	or	r24, r18
     ca8:	f7 01       	movw	r30, r14
     caa:	91 83       	std	Z+1, r25	; 0x01
     cac:	80 83       	st	Z, r24
     cae:	2e 96       	adiw	r28, 0x0e	; 14
     cb0:	0f b6       	in	r0, 0x3f	; 63
     cb2:	f8 94       	cli
     cb4:	de bf       	out	0x3e, r29	; 62
     cb6:	0f be       	out	0x3f, r0	; 63
     cb8:	cd bf       	out	0x3d, r28	; 61
     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	1f 91       	pop	r17
     cc0:	0f 91       	pop	r16
     cc2:	ff 90       	pop	r15
     cc4:	ef 90       	pop	r14
     cc6:	df 90       	pop	r13
     cc8:	cf 90       	pop	r12
     cca:	bf 90       	pop	r11
     ccc:	af 90       	pop	r10
     cce:	9f 90       	pop	r9
     cd0:	8f 90       	pop	r8
     cd2:	7f 90       	pop	r7
     cd4:	6f 90       	pop	r6
     cd6:	08 95       	ret

00000cd8 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
     cd8:	e1 ea       	ldi	r30, 0xA1	; 161
     cda:	f0 e0       	ldi	r31, 0x00	; 0
     cdc:	80 81       	ld	r24, Z
     cde:	81 60       	ori	r24, 0x01	; 1
     ce0:	80 83       	st	Z, r24
     ce2:	e0 ea       	ldi	r30, 0xA0	; 160
     ce4:	f0 e0       	ldi	r31, 0x00	; 0
     ce6:	80 81       	ld	r24, Z
     ce8:	81 60       	ori	r24, 0x01	; 1
     cea:	80 83       	st	Z, r24
     cec:	80 81       	ld	r24, Z
     cee:	80 68       	ori	r24, 0x80	; 128
     cf0:	80 83       	st	Z, r24
     cf2:	80 81       	ld	r24, Z
     cf4:	80 62       	ori	r24, 0x20	; 32
     cf6:	80 83       	st	Z, r24
     cf8:	80 81       	ld	r24, Z
     cfa:	88 60       	ori	r24, 0x08	; 8
     cfc:	80 83       	st	Z, r24
     cfe:	08 95       	ret

00000d00 <setup_timer5>:
     d00:	e1 e2       	ldi	r30, 0x21	; 33
     d02:	f1 e0       	ldi	r31, 0x01	; 1
     d04:	80 81       	ld	r24, Z
     d06:	81 60       	ori	r24, 0x01	; 1
     d08:	80 83       	st	Z, r24
     d0a:	80 81       	ld	r24, Z
     d0c:	88 60       	ori	r24, 0x08	; 8
     d0e:	80 83       	st	Z, r24
     d10:	08 95       	ret

00000d12 <Enable_timer5_compare_interrupt>:
     d12:	e3 e7       	ldi	r30, 0x73	; 115
     d14:	f0 e0       	ldi	r31, 0x00	; 0
     d16:	80 81       	ld	r24, Z
     d18:	82 60       	ori	r24, 0x02	; 2
     d1a:	80 83       	st	Z, r24
     d1c:	08 95       	ret

00000d1e <setup_timer0>:
     d1e:	85 b5       	in	r24, 0x25	; 37
     d20:	81 60       	ori	r24, 0x01	; 1
     d22:	85 bd       	out	0x25, r24	; 37
     d24:	85 b5       	in	r24, 0x25	; 37
     d26:	82 60       	ori	r24, 0x02	; 2
     d28:	85 bd       	out	0x25, r24	; 37
     d2a:	08 95       	ret

00000d2c <Enable_timer0_overflow_interrupt>:
     d2c:	ee e6       	ldi	r30, 0x6E	; 110
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	80 81       	ld	r24, Z
     d32:	81 60       	ori	r24, 0x01	; 1
     d34:	80 83       	st	Z, r24
     d36:	08 95       	ret

00000d38 <micros>:
     d38:	3f b7       	in	r19, 0x3f	; 63
     d3a:	f8 94       	cli
     d3c:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <timer0_overflow_count>
     d40:	90 91 80 03 	lds	r25, 0x0380	; 0x800380 <timer0_overflow_count+0x1>
     d44:	a0 91 81 03 	lds	r26, 0x0381	; 0x800381 <timer0_overflow_count+0x2>
     d48:	b0 91 82 03 	lds	r27, 0x0382	; 0x800382 <timer0_overflow_count+0x3>
     d4c:	26 b5       	in	r18, 0x26	; 38
     d4e:	a8 9b       	sbis	0x15, 0	; 21
     d50:	05 c0       	rjmp	.+10     	; 0xd5c <micros+0x24>
     d52:	2f 3f       	cpi	r18, 0xFF	; 255
     d54:	19 f0       	breq	.+6      	; 0xd5c <micros+0x24>
     d56:	01 96       	adiw	r24, 0x01	; 1
     d58:	a1 1d       	adc	r26, r1
     d5a:	b1 1d       	adc	r27, r1
     d5c:	3f bf       	out	0x3f, r19	; 63
     d5e:	ba 2f       	mov	r27, r26
     d60:	a9 2f       	mov	r26, r25
     d62:	98 2f       	mov	r25, r24
     d64:	88 27       	eor	r24, r24
     d66:	82 0f       	add	r24, r18
     d68:	91 1d       	adc	r25, r1
     d6a:	a1 1d       	adc	r26, r1
     d6c:	b1 1d       	adc	r27, r1
     d6e:	bc 01       	movw	r22, r24
     d70:	cd 01       	movw	r24, r26
     d72:	66 0f       	add	r22, r22
     d74:	77 1f       	adc	r23, r23
     d76:	88 1f       	adc	r24, r24
     d78:	99 1f       	adc	r25, r25
     d7a:	66 0f       	add	r22, r22
     d7c:	77 1f       	adc	r23, r23
     d7e:	88 1f       	adc	r24, r24
     d80:	99 1f       	adc	r25, r25
     d82:	08 95       	ret

00000d84 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
     d84:	1f 92       	push	r1
     d86:	0f 92       	push	r0
     d88:	0f b6       	in	r0, 0x3f	; 63
     d8a:	0f 92       	push	r0
     d8c:	11 24       	eor	r1, r1
     d8e:	2f 93       	push	r18
     d90:	3f 93       	push	r19
     d92:	8f 93       	push	r24
     d94:	9f 93       	push	r25
     d96:	af 93       	push	r26
     d98:	bf 93       	push	r27
	unsigned long m = timer0_millis;
     d9a:	80 91 7b 03 	lds	r24, 0x037B	; 0x80037b <timer0_millis>
     d9e:	90 91 7c 03 	lds	r25, 0x037C	; 0x80037c <timer0_millis+0x1>
     da2:	a0 91 7d 03 	lds	r26, 0x037D	; 0x80037d <timer0_millis+0x2>
     da6:	b0 91 7e 03 	lds	r27, 0x037E	; 0x80037e <timer0_millis+0x3>
	unsigned char f = timer0_fract;
     daa:	30 91 7a 03 	lds	r19, 0x037A	; 0x80037a <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
     dae:	23 e0       	ldi	r18, 0x03	; 3
     db0:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
     db2:	2d 37       	cpi	r18, 0x7D	; 125
     db4:	20 f4       	brcc	.+8      	; 0xdbe <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	a1 1d       	adc	r26, r1
     dba:	b1 1d       	adc	r27, r1
     dbc:	05 c0       	rjmp	.+10     	; 0xdc8 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
     dbe:	26 e8       	ldi	r18, 0x86	; 134
     dc0:	23 0f       	add	r18, r19
		m += 1;
     dc2:	02 96       	adiw	r24, 0x02	; 2
     dc4:	a1 1d       	adc	r26, r1
     dc6:	b1 1d       	adc	r27, r1
	}


	timer0_fract = f;
     dc8:	20 93 7a 03 	sts	0x037A, r18	; 0x80037a <timer0_fract>
	timer0_millis = m;
     dcc:	80 93 7b 03 	sts	0x037B, r24	; 0x80037b <timer0_millis>
     dd0:	90 93 7c 03 	sts	0x037C, r25	; 0x80037c <timer0_millis+0x1>
     dd4:	a0 93 7d 03 	sts	0x037D, r26	; 0x80037d <timer0_millis+0x2>
     dd8:	b0 93 7e 03 	sts	0x037E, r27	; 0x80037e <timer0_millis+0x3>
	timer0_overflow_count++;
     ddc:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <timer0_overflow_count>
     de0:	90 91 80 03 	lds	r25, 0x0380	; 0x800380 <timer0_overflow_count+0x1>
     de4:	a0 91 81 03 	lds	r26, 0x0381	; 0x800381 <timer0_overflow_count+0x2>
     de8:	b0 91 82 03 	lds	r27, 0x0382	; 0x800382 <timer0_overflow_count+0x3>
     dec:	01 96       	adiw	r24, 0x01	; 1
     dee:	a1 1d       	adc	r26, r1
     df0:	b1 1d       	adc	r27, r1
     df2:	80 93 7f 03 	sts	0x037F, r24	; 0x80037f <timer0_overflow_count>
     df6:	90 93 80 03 	sts	0x0380, r25	; 0x800380 <timer0_overflow_count+0x1>
     dfa:	a0 93 81 03 	sts	0x0381, r26	; 0x800381 <timer0_overflow_count+0x2>
     dfe:	b0 93 82 03 	sts	0x0382, r27	; 0x800382 <timer0_overflow_count+0x3>
}
     e02:	bf 91       	pop	r27
     e04:	af 91       	pop	r26
     e06:	9f 91       	pop	r25
     e08:	8f 91       	pop	r24
     e0a:	3f 91       	pop	r19
     e0c:	2f 91       	pop	r18
     e0e:	0f 90       	pop	r0
     e10:	0f be       	out	0x3f, r0	; 63
     e12:	0f 90       	pop	r0
     e14:	1f 90       	pop	r1
     e16:	18 95       	reti

00000e18 <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
     e18:	1f 92       	push	r1
     e1a:	0f 92       	push	r0
     e1c:	0f b6       	in	r0, 0x3f	; 63
     e1e:	0f 92       	push	r0
     e20:	11 24       	eor	r1, r1
     e22:	0b b6       	in	r0, 0x3b	; 59
     e24:	0f 92       	push	r0
     e26:	2f 93       	push	r18
     e28:	3f 93       	push	r19
     e2a:	4f 93       	push	r20
     e2c:	5f 93       	push	r21
     e2e:	6f 93       	push	r22
     e30:	7f 93       	push	r23
     e32:	8f 93       	push	r24
     e34:	9f 93       	push	r25
     e36:	af 93       	push	r26
     e38:	bf 93       	push	r27
     e3a:	ef 93       	push	r30
	PWM_update();
     e3c:	ff 93       	push	r31
     e3e:	c3 d9       	rcall	.-3194   	; 0x1c6 <PWM_update>
     e40:	ff 91       	pop	r31
     e42:	ef 91       	pop	r30
     e44:	bf 91       	pop	r27
     e46:	af 91       	pop	r26
     e48:	9f 91       	pop	r25
     e4a:	8f 91       	pop	r24
     e4c:	7f 91       	pop	r23
     e4e:	6f 91       	pop	r22
     e50:	5f 91       	pop	r21
     e52:	4f 91       	pop	r20
     e54:	3f 91       	pop	r19
     e56:	2f 91       	pop	r18
     e58:	0f 90       	pop	r0
     e5a:	0b be       	out	0x3b, r0	; 59
     e5c:	0f 90       	pop	r0
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	0f 90       	pop	r0
     e62:	1f 90       	pop	r1
     e64:	18 95       	reti

00000e66 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     e66:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     e6a:	8c e0       	ldi	r24, 0x0C	; 12
     e6c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     e70:	08 95       	ret

00000e72 <i2c_start>:
     e72:	94 ea       	ldi	r25, 0xA4	; 164
     e74:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     e78:	4f ef       	ldi	r20, 0xFF	; 255
     e7a:	50 e0       	ldi	r21, 0x00	; 0
     e7c:	60 e0       	ldi	r22, 0x00	; 0
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	ec eb       	ldi	r30, 0xBC	; 188
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	90 81       	ld	r25, Z
     e86:	99 23       	and	r25, r25
     e88:	34 f0       	brlt	.+12     	; 0xe96 <i2c_start+0x24>
     e8a:	41 50       	subi	r20, 0x01	; 1
     e8c:	51 09       	sbc	r21, r1
     e8e:	61 09       	sbc	r22, r1
     e90:	71 09       	sbc	r23, r1
     e92:	c0 f7       	brcc	.-16     	; 0xe84 <i2c_start+0x12>
     e94:	04 c0       	rjmp	.+8      	; 0xe9e <i2c_start+0x2c>
     e96:	45 2b       	or	r20, r21
     e98:	46 2b       	or	r20, r22
     e9a:	47 2b       	or	r20, r23
     e9c:	41 f1       	breq	.+80     	; 0xeee <i2c_start+0x7c>
     e9e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     ea2:	98 7f       	andi	r25, 0xF8	; 248
     ea4:	98 30       	cpi	r25, 0x08	; 8
     ea6:	11 f0       	breq	.+4      	; 0xeac <i2c_start+0x3a>
     ea8:	90 31       	cpi	r25, 0x10	; 16
     eaa:	19 f5       	brne	.+70     	; 0xef2 <i2c_start+0x80>
     eac:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     eb0:	84 e8       	ldi	r24, 0x84	; 132
     eb2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     eb6:	8f ef       	ldi	r24, 0xFF	; 255
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	a0 e0       	ldi	r26, 0x00	; 0
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	ec eb       	ldi	r30, 0xBC	; 188
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	20 81       	ld	r18, Z
     ec4:	22 23       	and	r18, r18
     ec6:	2c f0       	brlt	.+10     	; 0xed2 <i2c_start+0x60>
     ec8:	01 97       	sbiw	r24, 0x01	; 1
     eca:	a1 09       	sbc	r26, r1
     ecc:	b1 09       	sbc	r27, r1
     ece:	c8 f7       	brcc	.-14     	; 0xec2 <i2c_start+0x50>
     ed0:	04 c0       	rjmp	.+8      	; 0xeda <i2c_start+0x68>
     ed2:	89 2b       	or	r24, r25
     ed4:	8a 2b       	or	r24, r26
     ed6:	8b 2b       	or	r24, r27
     ed8:	71 f0       	breq	.+28     	; 0xef6 <i2c_start+0x84>
     eda:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     ede:	98 7f       	andi	r25, 0xF8	; 248
     ee0:	98 31       	cpi	r25, 0x18	; 24
     ee2:	59 f0       	breq	.+22     	; 0xefa <i2c_start+0x88>
     ee4:	81 e0       	ldi	r24, 0x01	; 1
     ee6:	90 34       	cpi	r25, 0x40	; 64
     ee8:	49 f4       	brne	.+18     	; 0xefc <i2c_start+0x8a>
     eea:	80 e0       	ldi	r24, 0x00	; 0
     eec:	08 95       	ret
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	08 95       	ret
     ef2:	81 e0       	ldi	r24, 0x01	; 1
     ef4:	08 95       	ret
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	08 95       	ret
     efa:	80 e0       	ldi	r24, 0x00	; 0
     efc:	08 95       	ret

00000efe <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     efe:	84 e9       	ldi	r24, 0x94	; 148
     f00:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	ec eb       	ldi	r30, 0xBC	; 188
     f0a:	f0 e0       	ldi	r31, 0x00	; 0
     f0c:	20 81       	ld	r18, Z
     f0e:	24 ff       	sbrs	r18, 4
     f10:	05 c0       	rjmp	.+10     	; 0xf1c <i2c_stop+0x1e>
     f12:	01 96       	adiw	r24, 0x01	; 1
     f14:	81 15       	cp	r24, r1
     f16:	21 e0       	ldi	r18, 0x01	; 1
     f18:	92 07       	cpc	r25, r18
     f1a:	c1 f7       	brne	.-16     	; 0xf0c <i2c_stop+0xe>
     f1c:	08 95       	ret

00000f1e <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     f1e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     f22:	84 e8       	ldi	r24, 0x84	; 132
     f24:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     f28:	8f ef       	ldi	r24, 0xFF	; 255
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	a0 e0       	ldi	r26, 0x00	; 0
     f2e:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     f30:	ec eb       	ldi	r30, 0xBC	; 188
     f32:	f0 e0       	ldi	r31, 0x00	; 0
     f34:	20 81       	ld	r18, Z
     f36:	22 23       	and	r18, r18
     f38:	2c f0       	brlt	.+10     	; 0xf44 <i2c_write+0x26>
     f3a:	01 97       	sbiw	r24, 0x01	; 1
     f3c:	a1 09       	sbc	r26, r1
     f3e:	b1 09       	sbc	r27, r1
     f40:	c8 f7       	brcc	.-14     	; 0xf34 <i2c_write+0x16>
     f42:	04 c0       	rjmp	.+8      	; 0xf4c <i2c_write+0x2e>
	if(i2c_timer == 0)
     f44:	89 2b       	or	r24, r25
     f46:	8a 2b       	or	r24, r26
     f48:	8b 2b       	or	r24, r27
     f4a:	41 f0       	breq	.+16     	; 0xf5c <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     f4c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     f50:	98 7f       	andi	r25, 0xF8	; 248
     f52:	81 e0       	ldi	r24, 0x01	; 1
     f54:	98 32       	cpi	r25, 0x28	; 40
     f56:	19 f4       	brne	.+6      	; 0xf5e <i2c_write+0x40>
     f58:	80 e0       	ldi	r24, 0x00	; 0
     f5a:	08 95       	ret
     f5c:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     f5e:	08 95       	ret

00000f60 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     f60:	84 ec       	ldi	r24, 0xC4	; 196
     f62:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     f66:	8f ef       	ldi	r24, 0xFF	; 255
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	a0 e0       	ldi	r26, 0x00	; 0
     f6c:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     f6e:	ec eb       	ldi	r30, 0xBC	; 188
     f70:	f0 e0       	ldi	r31, 0x00	; 0
     f72:	20 81       	ld	r18, Z
     f74:	22 23       	and	r18, r18
     f76:	2c f0       	brlt	.+10     	; 0xf82 <i2c_readAck+0x22>
     f78:	01 97       	sbiw	r24, 0x01	; 1
     f7a:	a1 09       	sbc	r26, r1
     f7c:	b1 09       	sbc	r27, r1
     f7e:	c8 f7       	brcc	.-14     	; 0xf72 <i2c_readAck+0x12>
     f80:	04 c0       	rjmp	.+8      	; 0xf8a <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     f82:	89 2b       	or	r24, r25
     f84:	8a 2b       	or	r24, r26
     f86:	8b 2b       	or	r24, r27
     f88:	19 f0       	breq	.+6      	; 0xf90 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     f8a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     f8e:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     f90:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     f92:	08 95       	ret

00000f94 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     f94:	84 e8       	ldi	r24, 0x84	; 132
     f96:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     f9a:	8f ef       	ldi	r24, 0xFF	; 255
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	a0 e0       	ldi	r26, 0x00	; 0
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     fa2:	ec eb       	ldi	r30, 0xBC	; 188
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	20 81       	ld	r18, Z
     fa8:	22 23       	and	r18, r18
     faa:	2c f0       	brlt	.+10     	; 0xfb6 <i2c_readNak+0x22>
     fac:	01 97       	sbiw	r24, 0x01	; 1
     fae:	a1 09       	sbc	r26, r1
     fb0:	b1 09       	sbc	r27, r1
     fb2:	c8 f7       	brcc	.-14     	; 0xfa6 <i2c_readNak+0x12>
     fb4:	04 c0       	rjmp	.+8      	; 0xfbe <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     fb6:	89 2b       	or	r24, r25
     fb8:	8a 2b       	or	r24, r26
     fba:	8b 2b       	or	r24, r27
     fbc:	19 f0       	breq	.+6      	; 0xfc4 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     fbe:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     fc2:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     fc4:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     fc6:	08 95       	ret

00000fc8 <USART_Init>:
{
	char c[10];
	itoa(*value, c, 10);
	printf(c);
	printf("\n");
}
     fc8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     fcc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     fd0:	88 e0       	ldi	r24, 0x08	; 8
     fd2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     fd6:	8e e0       	ldi	r24, 0x0E	; 14
     fd8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     fdc:	08 95       	ret

00000fde <print16>:
     fde:	0f 93       	push	r16
     fe0:	1f 93       	push	r17
     fe2:	cf 93       	push	r28
     fe4:	df 93       	push	r29
     fe6:	cd b7       	in	r28, 0x3d	; 61
     fe8:	de b7       	in	r29, 0x3e	; 62
     fea:	2a 97       	sbiw	r28, 0x0a	; 10
     fec:	0f b6       	in	r0, 0x3f	; 63
     fee:	f8 94       	cli
     ff0:	de bf       	out	0x3e, r29	; 62
     ff2:	0f be       	out	0x3f, r0	; 63
     ff4:	cd bf       	out	0x3d, r28	; 61
     ff6:	4a e0       	ldi	r20, 0x0A	; 10
     ff8:	50 e0       	ldi	r21, 0x00	; 0
     ffa:	8e 01       	movw	r16, r28
     ffc:	0f 5f       	subi	r16, 0xFF	; 255
     ffe:	1f 4f       	sbci	r17, 0xFF	; 255
    1000:	b8 01       	movw	r22, r16
    1002:	fc 01       	movw	r30, r24
    1004:	80 81       	ld	r24, Z
    1006:	91 81       	ldd	r25, Z+1	; 0x01
    1008:	e9 d3       	rcall	.+2002   	; 0x17dc <itoa>
    100a:	1f 93       	push	r17
    100c:	0f 93       	push	r16
    100e:	5d d4       	rcall	.+2234   	; 0x18ca <printf>
    1010:	0f 90       	pop	r0
    1012:	0f 90       	pop	r0
    1014:	2a 96       	adiw	r28, 0x0a	; 10
    1016:	0f b6       	in	r0, 0x3f	; 63
    1018:	f8 94       	cli
    101a:	de bf       	out	0x3e, r29	; 62
    101c:	0f be       	out	0x3f, r0	; 63
    101e:	cd bf       	out	0x3d, r28	; 61
    1020:	df 91       	pop	r29
    1022:	cf 91       	pop	r28
    1024:	1f 91       	pop	r17
    1026:	0f 91       	pop	r16
    1028:	08 95       	ret

0000102a <uart_putchar>:

int uart_putchar(char c, FILE *stream)
{
    102a:	cf 93       	push	r28
    102c:	c8 2f       	mov	r28, r24
	if (c == '\n')
    102e:	8a 30       	cpi	r24, 0x0A	; 10
    1030:	11 f4       	brne	.+4      	; 0x1036 <uart_putchar+0xc>
	uart_putchar('\r', stream);
    1032:	8d e0       	ldi	r24, 0x0D	; 13
    1034:	fa df       	rcall	.-12     	; 0x102a <uart_putchar>
	while (!( UCSR0A & (1<<UDRE0)));
    1036:	e0 ec       	ldi	r30, 0xC0	; 192
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	80 81       	ld	r24, Z
    103c:	85 ff       	sbrs	r24, 5
    103e:	fd cf       	rjmp	.-6      	; 0x103a <uart_putchar+0x10>

	UDR0 = c;
    1040:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	return 0;
}
    1044:	80 e0       	ldi	r24, 0x00	; 0
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	cf 91       	pop	r28
    104a:	08 95       	ret

0000104c <printSI>:
void printSI(char c[20],int16_t intToPrint)
{
    104c:	cf 93       	push	r28
    104e:	df 93       	push	r29
    1050:	1f 92       	push	r1
    1052:	1f 92       	push	r1
    1054:	cd b7       	in	r28, 0x3d	; 61
    1056:	de b7       	in	r29, 0x3e	; 62
    1058:	7a 83       	std	Y+2, r23	; 0x02
    105a:	69 83       	std	Y+1, r22	; 0x01
	printf(c);
    105c:	9f 93       	push	r25
    105e:	8f 93       	push	r24
    1060:	34 d4       	rcall	.+2152   	; 0x18ca <printf>
	//printf(" ");
	print16(&intToPrint);
    1062:	ce 01       	movw	r24, r28
    1064:	01 96       	adiw	r24, 0x01	; 1
    1066:	bb df       	rcall	.-138    	; 0xfde <print16>
	printf("  ");
    1068:	85 e7       	ldi	r24, 0x75	; 117
    106a:	93 e0       	ldi	r25, 0x03	; 3
    106c:	9f 93       	push	r25
    106e:	8f 93       	push	r24
    1070:	2c d4       	rcall	.+2136   	; 0x18ca <printf>
    1072:	0f 90       	pop	r0
    1074:	0f 90       	pop	r0
    1076:	0f 90       	pop	r0
    1078:	0f 90       	pop	r0
    107a:	0f 90       	pop	r0
    107c:	0f 90       	pop	r0
    107e:	df 91       	pop	r29
    1080:	cf 91       	pop	r28
    1082:	08 95       	ret

00001084 <__subsf3>:
    1084:	50 58       	subi	r21, 0x80	; 128

00001086 <__addsf3>:
    1086:	bb 27       	eor	r27, r27
    1088:	aa 27       	eor	r26, r26
    108a:	0e d0       	rcall	.+28     	; 0x10a8 <__addsf3x>
    108c:	3f c2       	rjmp	.+1150   	; 0x150c <__fp_round>
    108e:	30 d2       	rcall	.+1120   	; 0x14f0 <__fp_pscA>
    1090:	30 f0       	brcs	.+12     	; 0x109e <__addsf3+0x18>
    1092:	35 d2       	rcall	.+1130   	; 0x14fe <__fp_pscB>
    1094:	20 f0       	brcs	.+8      	; 0x109e <__addsf3+0x18>
    1096:	31 f4       	brne	.+12     	; 0x10a4 <__addsf3+0x1e>
    1098:	9f 3f       	cpi	r25, 0xFF	; 255
    109a:	11 f4       	brne	.+4      	; 0x10a0 <__addsf3+0x1a>
    109c:	1e f4       	brtc	.+6      	; 0x10a4 <__addsf3+0x1e>
    109e:	ef c1       	rjmp	.+990    	; 0x147e <__fp_nan>
    10a0:	0e f4       	brtc	.+2      	; 0x10a4 <__addsf3+0x1e>
    10a2:	e0 95       	com	r30
    10a4:	e7 fb       	bst	r30, 7
    10a6:	e5 c1       	rjmp	.+970    	; 0x1472 <__fp_inf>

000010a8 <__addsf3x>:
    10a8:	e9 2f       	mov	r30, r25
    10aa:	41 d2       	rcall	.+1154   	; 0x152e <__fp_split3>
    10ac:	80 f3       	brcs	.-32     	; 0x108e <__addsf3+0x8>
    10ae:	ba 17       	cp	r27, r26
    10b0:	62 07       	cpc	r22, r18
    10b2:	73 07       	cpc	r23, r19
    10b4:	84 07       	cpc	r24, r20
    10b6:	95 07       	cpc	r25, r21
    10b8:	18 f0       	brcs	.+6      	; 0x10c0 <__addsf3x+0x18>
    10ba:	71 f4       	brne	.+28     	; 0x10d8 <__addsf3x+0x30>
    10bc:	9e f5       	brtc	.+102    	; 0x1124 <__addsf3x+0x7c>
    10be:	59 c2       	rjmp	.+1202   	; 0x1572 <__fp_zero>
    10c0:	0e f4       	brtc	.+2      	; 0x10c4 <__addsf3x+0x1c>
    10c2:	e0 95       	com	r30
    10c4:	0b 2e       	mov	r0, r27
    10c6:	ba 2f       	mov	r27, r26
    10c8:	a0 2d       	mov	r26, r0
    10ca:	0b 01       	movw	r0, r22
    10cc:	b9 01       	movw	r22, r18
    10ce:	90 01       	movw	r18, r0
    10d0:	0c 01       	movw	r0, r24
    10d2:	ca 01       	movw	r24, r20
    10d4:	a0 01       	movw	r20, r0
    10d6:	11 24       	eor	r1, r1
    10d8:	ff 27       	eor	r31, r31
    10da:	59 1b       	sub	r21, r25
    10dc:	99 f0       	breq	.+38     	; 0x1104 <__addsf3x+0x5c>
    10de:	59 3f       	cpi	r21, 0xF9	; 249
    10e0:	50 f4       	brcc	.+20     	; 0x10f6 <__addsf3x+0x4e>
    10e2:	50 3e       	cpi	r21, 0xE0	; 224
    10e4:	68 f1       	brcs	.+90     	; 0x1140 <__addsf3x+0x98>
    10e6:	1a 16       	cp	r1, r26
    10e8:	f0 40       	sbci	r31, 0x00	; 0
    10ea:	a2 2f       	mov	r26, r18
    10ec:	23 2f       	mov	r18, r19
    10ee:	34 2f       	mov	r19, r20
    10f0:	44 27       	eor	r20, r20
    10f2:	58 5f       	subi	r21, 0xF8	; 248
    10f4:	f3 cf       	rjmp	.-26     	; 0x10dc <__addsf3x+0x34>
    10f6:	46 95       	lsr	r20
    10f8:	37 95       	ror	r19
    10fa:	27 95       	ror	r18
    10fc:	a7 95       	ror	r26
    10fe:	f0 40       	sbci	r31, 0x00	; 0
    1100:	53 95       	inc	r21
    1102:	c9 f7       	brne	.-14     	; 0x10f6 <__addsf3x+0x4e>
    1104:	7e f4       	brtc	.+30     	; 0x1124 <__addsf3x+0x7c>
    1106:	1f 16       	cp	r1, r31
    1108:	ba 0b       	sbc	r27, r26
    110a:	62 0b       	sbc	r22, r18
    110c:	73 0b       	sbc	r23, r19
    110e:	84 0b       	sbc	r24, r20
    1110:	ba f0       	brmi	.+46     	; 0x1140 <__addsf3x+0x98>
    1112:	91 50       	subi	r25, 0x01	; 1
    1114:	a1 f0       	breq	.+40     	; 0x113e <__addsf3x+0x96>
    1116:	ff 0f       	add	r31, r31
    1118:	bb 1f       	adc	r27, r27
    111a:	66 1f       	adc	r22, r22
    111c:	77 1f       	adc	r23, r23
    111e:	88 1f       	adc	r24, r24
    1120:	c2 f7       	brpl	.-16     	; 0x1112 <__addsf3x+0x6a>
    1122:	0e c0       	rjmp	.+28     	; 0x1140 <__addsf3x+0x98>
    1124:	ba 0f       	add	r27, r26
    1126:	62 1f       	adc	r22, r18
    1128:	73 1f       	adc	r23, r19
    112a:	84 1f       	adc	r24, r20
    112c:	48 f4       	brcc	.+18     	; 0x1140 <__addsf3x+0x98>
    112e:	87 95       	ror	r24
    1130:	77 95       	ror	r23
    1132:	67 95       	ror	r22
    1134:	b7 95       	ror	r27
    1136:	f7 95       	ror	r31
    1138:	9e 3f       	cpi	r25, 0xFE	; 254
    113a:	08 f0       	brcs	.+2      	; 0x113e <__addsf3x+0x96>
    113c:	b3 cf       	rjmp	.-154    	; 0x10a4 <__addsf3+0x1e>
    113e:	93 95       	inc	r25
    1140:	88 0f       	add	r24, r24
    1142:	08 f0       	brcs	.+2      	; 0x1146 <__addsf3x+0x9e>
    1144:	99 27       	eor	r25, r25
    1146:	ee 0f       	add	r30, r30
    1148:	97 95       	ror	r25
    114a:	87 95       	ror	r24
    114c:	08 95       	ret

0000114e <asin>:
    114e:	9f 93       	push	r25
    1150:	9f 77       	andi	r25, 0x7F	; 127
    1152:	ee e3       	ldi	r30, 0x3E	; 62
    1154:	89 37       	cpi	r24, 0x79	; 121
    1156:	9e 07       	cpc	r25, r30
    1158:	20 f4       	brcc	.+8      	; 0x1162 <asin+0x14>
    115a:	e4 ee       	ldi	r30, 0xE4	; 228
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	b7 d1       	rcall	.+878    	; 0x14ce <__fp_powsodd>
    1160:	09 c0       	rjmp	.+18     	; 0x1174 <asin+0x26>
    1162:	48 d1       	rcall	.+656    	; 0x13f4 <__fp_arccos>
    1164:	90 58       	subi	r25, 0x80	; 128
    1166:	a2 ea       	ldi	r26, 0xA2	; 162
    1168:	2a ed       	ldi	r18, 0xDA	; 218
    116a:	3f e0       	ldi	r19, 0x0F	; 15
    116c:	49 ec       	ldi	r20, 0xC9	; 201
    116e:	5f e3       	ldi	r21, 0x3F	; 63
    1170:	9b df       	rcall	.-202    	; 0x10a8 <__addsf3x>
    1172:	cc d1       	rcall	.+920    	; 0x150c <__fp_round>
    1174:	0f 90       	pop	r0
    1176:	07 fc       	sbrc	r0, 7
    1178:	90 58       	subi	r25, 0x80	; 128
    117a:	08 95       	ret
    117c:	b9 d1       	rcall	.+882    	; 0x14f0 <__fp_pscA>
    117e:	58 f0       	brcs	.+22     	; 0x1196 <asin+0x48>
    1180:	80 e8       	ldi	r24, 0x80	; 128
    1182:	91 e0       	ldi	r25, 0x01	; 1
    1184:	09 f4       	brne	.+2      	; 0x1188 <asin+0x3a>
    1186:	9e ef       	ldi	r25, 0xFE	; 254
    1188:	ba d1       	rcall	.+884    	; 0x14fe <__fp_pscB>
    118a:	28 f0       	brcs	.+10     	; 0x1196 <asin+0x48>
    118c:	40 e8       	ldi	r20, 0x80	; 128
    118e:	51 e0       	ldi	r21, 0x01	; 1
    1190:	59 f4       	brne	.+22     	; 0x11a8 <atan2+0xe>
    1192:	5e ef       	ldi	r21, 0xFE	; 254
    1194:	09 c0       	rjmp	.+18     	; 0x11a8 <atan2+0xe>
    1196:	73 c1       	rjmp	.+742    	; 0x147e <__fp_nan>
    1198:	ec c1       	rjmp	.+984    	; 0x1572 <__fp_zero>

0000119a <atan2>:
    119a:	e9 2f       	mov	r30, r25
    119c:	e0 78       	andi	r30, 0x80	; 128
    119e:	c7 d1       	rcall	.+910    	; 0x152e <__fp_split3>
    11a0:	68 f3       	brcs	.-38     	; 0x117c <asin+0x2e>
    11a2:	09 2e       	mov	r0, r25
    11a4:	05 2a       	or	r0, r21
    11a6:	c1 f3       	breq	.-16     	; 0x1198 <asin+0x4a>
    11a8:	26 17       	cp	r18, r22
    11aa:	37 07       	cpc	r19, r23
    11ac:	48 07       	cpc	r20, r24
    11ae:	59 07       	cpc	r21, r25
    11b0:	38 f0       	brcs	.+14     	; 0x11c0 <atan2+0x26>
    11b2:	0e 2e       	mov	r0, r30
    11b4:	07 f8       	bld	r0, 7
    11b6:	e0 25       	eor	r30, r0
    11b8:	69 f0       	breq	.+26     	; 0x11d4 <atan2+0x3a>
    11ba:	e0 25       	eor	r30, r0
    11bc:	e0 64       	ori	r30, 0x40	; 64
    11be:	0a c0       	rjmp	.+20     	; 0x11d4 <atan2+0x3a>
    11c0:	ef 63       	ori	r30, 0x3F	; 63
    11c2:	07 f8       	bld	r0, 7
    11c4:	00 94       	com	r0
    11c6:	07 fa       	bst	r0, 7
    11c8:	db 01       	movw	r26, r22
    11ca:	b9 01       	movw	r22, r18
    11cc:	9d 01       	movw	r18, r26
    11ce:	dc 01       	movw	r26, r24
    11d0:	ca 01       	movw	r24, r20
    11d2:	ad 01       	movw	r20, r26
    11d4:	ef 93       	push	r30
    11d6:	47 d0       	rcall	.+142    	; 0x1266 <__divsf3_pse>
    11d8:	99 d1       	rcall	.+818    	; 0x150c <__fp_round>
    11da:	0a d0       	rcall	.+20     	; 0x11f0 <atan>
    11dc:	5f 91       	pop	r21
    11de:	55 23       	and	r21, r21
    11e0:	31 f0       	breq	.+12     	; 0x11ee <atan2+0x54>
    11e2:	2b ed       	ldi	r18, 0xDB	; 219
    11e4:	3f e0       	ldi	r19, 0x0F	; 15
    11e6:	49 e4       	ldi	r20, 0x49	; 73
    11e8:	50 fd       	sbrc	r21, 0
    11ea:	49 ec       	ldi	r20, 0xC9	; 201
    11ec:	4c cf       	rjmp	.-360    	; 0x1086 <__addsf3>
    11ee:	08 95       	ret

000011f0 <atan>:
    11f0:	df 93       	push	r29
    11f2:	dd 27       	eor	r29, r29
    11f4:	b9 2f       	mov	r27, r25
    11f6:	bf 77       	andi	r27, 0x7F	; 127
    11f8:	40 e8       	ldi	r20, 0x80	; 128
    11fa:	5f e3       	ldi	r21, 0x3F	; 63
    11fc:	16 16       	cp	r1, r22
    11fe:	17 06       	cpc	r1, r23
    1200:	48 07       	cpc	r20, r24
    1202:	5b 07       	cpc	r21, r27
    1204:	10 f4       	brcc	.+4      	; 0x120a <atan+0x1a>
    1206:	d9 2f       	mov	r29, r25
    1208:	bf d1       	rcall	.+894    	; 0x1588 <inverse>
    120a:	9f 93       	push	r25
    120c:	8f 93       	push	r24
    120e:	7f 93       	push	r23
    1210:	6f 93       	push	r22
    1212:	6c d2       	rcall	.+1240   	; 0x16ec <square>
    1214:	e8 ef       	ldi	r30, 0xF8	; 248
    1216:	f0 e0       	ldi	r31, 0x00	; 0
    1218:	35 d1       	rcall	.+618    	; 0x1484 <__fp_powser>
    121a:	78 d1       	rcall	.+752    	; 0x150c <__fp_round>
    121c:	2f 91       	pop	r18
    121e:	3f 91       	pop	r19
    1220:	4f 91       	pop	r20
    1222:	5f 91       	pop	r21
    1224:	c4 d1       	rcall	.+904    	; 0x15ae <__mulsf3x>
    1226:	dd 23       	and	r29, r29
    1228:	49 f0       	breq	.+18     	; 0x123c <atan+0x4c>
    122a:	90 58       	subi	r25, 0x80	; 128
    122c:	a2 ea       	ldi	r26, 0xA2	; 162
    122e:	2a ed       	ldi	r18, 0xDA	; 218
    1230:	3f e0       	ldi	r19, 0x0F	; 15
    1232:	49 ec       	ldi	r20, 0xC9	; 201
    1234:	5f e3       	ldi	r21, 0x3F	; 63
    1236:	d0 78       	andi	r29, 0x80	; 128
    1238:	5d 27       	eor	r21, r29
    123a:	36 df       	rcall	.-404    	; 0x10a8 <__addsf3x>
    123c:	df 91       	pop	r29
    123e:	66 c1       	rjmp	.+716    	; 0x150c <__fp_round>

00001240 <__cmpsf2>:
    1240:	f4 d0       	rcall	.+488    	; 0x142a <__fp_cmp>
    1242:	08 f4       	brcc	.+2      	; 0x1246 <__cmpsf2+0x6>
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	08 95       	ret

00001248 <__divsf3>:
    1248:	0c d0       	rcall	.+24     	; 0x1262 <__divsf3x>
    124a:	60 c1       	rjmp	.+704    	; 0x150c <__fp_round>
    124c:	58 d1       	rcall	.+688    	; 0x14fe <__fp_pscB>
    124e:	40 f0       	brcs	.+16     	; 0x1260 <__divsf3+0x18>
    1250:	4f d1       	rcall	.+670    	; 0x14f0 <__fp_pscA>
    1252:	30 f0       	brcs	.+12     	; 0x1260 <__divsf3+0x18>
    1254:	21 f4       	brne	.+8      	; 0x125e <__divsf3+0x16>
    1256:	5f 3f       	cpi	r21, 0xFF	; 255
    1258:	19 f0       	breq	.+6      	; 0x1260 <__divsf3+0x18>
    125a:	0b c1       	rjmp	.+534    	; 0x1472 <__fp_inf>
    125c:	51 11       	cpse	r21, r1
    125e:	8a c1       	rjmp	.+788    	; 0x1574 <__fp_szero>
    1260:	0e c1       	rjmp	.+540    	; 0x147e <__fp_nan>

00001262 <__divsf3x>:
    1262:	65 d1       	rcall	.+714    	; 0x152e <__fp_split3>
    1264:	98 f3       	brcs	.-26     	; 0x124c <__divsf3+0x4>

00001266 <__divsf3_pse>:
    1266:	99 23       	and	r25, r25
    1268:	c9 f3       	breq	.-14     	; 0x125c <__divsf3+0x14>
    126a:	55 23       	and	r21, r21
    126c:	b1 f3       	breq	.-20     	; 0x125a <__divsf3+0x12>
    126e:	95 1b       	sub	r25, r21
    1270:	55 0b       	sbc	r21, r21
    1272:	bb 27       	eor	r27, r27
    1274:	aa 27       	eor	r26, r26
    1276:	62 17       	cp	r22, r18
    1278:	73 07       	cpc	r23, r19
    127a:	84 07       	cpc	r24, r20
    127c:	38 f0       	brcs	.+14     	; 0x128c <__divsf3_pse+0x26>
    127e:	9f 5f       	subi	r25, 0xFF	; 255
    1280:	5f 4f       	sbci	r21, 0xFF	; 255
    1282:	22 0f       	add	r18, r18
    1284:	33 1f       	adc	r19, r19
    1286:	44 1f       	adc	r20, r20
    1288:	aa 1f       	adc	r26, r26
    128a:	a9 f3       	breq	.-22     	; 0x1276 <__divsf3_pse+0x10>
    128c:	33 d0       	rcall	.+102    	; 0x12f4 <__divsf3_pse+0x8e>
    128e:	0e 2e       	mov	r0, r30
    1290:	3a f0       	brmi	.+14     	; 0x12a0 <__divsf3_pse+0x3a>
    1292:	e0 e8       	ldi	r30, 0x80	; 128
    1294:	30 d0       	rcall	.+96     	; 0x12f6 <__divsf3_pse+0x90>
    1296:	91 50       	subi	r25, 0x01	; 1
    1298:	50 40       	sbci	r21, 0x00	; 0
    129a:	e6 95       	lsr	r30
    129c:	00 1c       	adc	r0, r0
    129e:	ca f7       	brpl	.-14     	; 0x1292 <__divsf3_pse+0x2c>
    12a0:	29 d0       	rcall	.+82     	; 0x12f4 <__divsf3_pse+0x8e>
    12a2:	fe 2f       	mov	r31, r30
    12a4:	27 d0       	rcall	.+78     	; 0x12f4 <__divsf3_pse+0x8e>
    12a6:	66 0f       	add	r22, r22
    12a8:	77 1f       	adc	r23, r23
    12aa:	88 1f       	adc	r24, r24
    12ac:	bb 1f       	adc	r27, r27
    12ae:	26 17       	cp	r18, r22
    12b0:	37 07       	cpc	r19, r23
    12b2:	48 07       	cpc	r20, r24
    12b4:	ab 07       	cpc	r26, r27
    12b6:	b0 e8       	ldi	r27, 0x80	; 128
    12b8:	09 f0       	breq	.+2      	; 0x12bc <__divsf3_pse+0x56>
    12ba:	bb 0b       	sbc	r27, r27
    12bc:	80 2d       	mov	r24, r0
    12be:	bf 01       	movw	r22, r30
    12c0:	ff 27       	eor	r31, r31
    12c2:	93 58       	subi	r25, 0x83	; 131
    12c4:	5f 4f       	sbci	r21, 0xFF	; 255
    12c6:	2a f0       	brmi	.+10     	; 0x12d2 <__divsf3_pse+0x6c>
    12c8:	9e 3f       	cpi	r25, 0xFE	; 254
    12ca:	51 05       	cpc	r21, r1
    12cc:	68 f0       	brcs	.+26     	; 0x12e8 <__divsf3_pse+0x82>
    12ce:	d1 c0       	rjmp	.+418    	; 0x1472 <__fp_inf>
    12d0:	51 c1       	rjmp	.+674    	; 0x1574 <__fp_szero>
    12d2:	5f 3f       	cpi	r21, 0xFF	; 255
    12d4:	ec f3       	brlt	.-6      	; 0x12d0 <__divsf3_pse+0x6a>
    12d6:	98 3e       	cpi	r25, 0xE8	; 232
    12d8:	dc f3       	brlt	.-10     	; 0x12d0 <__divsf3_pse+0x6a>
    12da:	86 95       	lsr	r24
    12dc:	77 95       	ror	r23
    12de:	67 95       	ror	r22
    12e0:	b7 95       	ror	r27
    12e2:	f7 95       	ror	r31
    12e4:	9f 5f       	subi	r25, 0xFF	; 255
    12e6:	c9 f7       	brne	.-14     	; 0x12da <__divsf3_pse+0x74>
    12e8:	88 0f       	add	r24, r24
    12ea:	91 1d       	adc	r25, r1
    12ec:	96 95       	lsr	r25
    12ee:	87 95       	ror	r24
    12f0:	97 f9       	bld	r25, 7
    12f2:	08 95       	ret
    12f4:	e1 e0       	ldi	r30, 0x01	; 1
    12f6:	66 0f       	add	r22, r22
    12f8:	77 1f       	adc	r23, r23
    12fa:	88 1f       	adc	r24, r24
    12fc:	bb 1f       	adc	r27, r27
    12fe:	62 17       	cp	r22, r18
    1300:	73 07       	cpc	r23, r19
    1302:	84 07       	cpc	r24, r20
    1304:	ba 07       	cpc	r27, r26
    1306:	20 f0       	brcs	.+8      	; 0x1310 <__divsf3_pse+0xaa>
    1308:	62 1b       	sub	r22, r18
    130a:	73 0b       	sbc	r23, r19
    130c:	84 0b       	sbc	r24, r20
    130e:	ba 0b       	sbc	r27, r26
    1310:	ee 1f       	adc	r30, r30
    1312:	88 f7       	brcc	.-30     	; 0x12f6 <__divsf3_pse+0x90>
    1314:	e0 95       	com	r30
    1316:	08 95       	ret

00001318 <__fixsfsi>:
    1318:	04 d0       	rcall	.+8      	; 0x1322 <__fixunssfsi>
    131a:	68 94       	set
    131c:	b1 11       	cpse	r27, r1
    131e:	2a c1       	rjmp	.+596    	; 0x1574 <__fp_szero>
    1320:	08 95       	ret

00001322 <__fixunssfsi>:
    1322:	0d d1       	rcall	.+538    	; 0x153e <__fp_splitA>
    1324:	88 f0       	brcs	.+34     	; 0x1348 <__fixunssfsi+0x26>
    1326:	9f 57       	subi	r25, 0x7F	; 127
    1328:	90 f0       	brcs	.+36     	; 0x134e <__fixunssfsi+0x2c>
    132a:	b9 2f       	mov	r27, r25
    132c:	99 27       	eor	r25, r25
    132e:	b7 51       	subi	r27, 0x17	; 23
    1330:	a0 f0       	brcs	.+40     	; 0x135a <__fixunssfsi+0x38>
    1332:	d1 f0       	breq	.+52     	; 0x1368 <__fixunssfsi+0x46>
    1334:	66 0f       	add	r22, r22
    1336:	77 1f       	adc	r23, r23
    1338:	88 1f       	adc	r24, r24
    133a:	99 1f       	adc	r25, r25
    133c:	1a f0       	brmi	.+6      	; 0x1344 <__fixunssfsi+0x22>
    133e:	ba 95       	dec	r27
    1340:	c9 f7       	brne	.-14     	; 0x1334 <__fixunssfsi+0x12>
    1342:	12 c0       	rjmp	.+36     	; 0x1368 <__fixunssfsi+0x46>
    1344:	b1 30       	cpi	r27, 0x01	; 1
    1346:	81 f0       	breq	.+32     	; 0x1368 <__fixunssfsi+0x46>
    1348:	14 d1       	rcall	.+552    	; 0x1572 <__fp_zero>
    134a:	b1 e0       	ldi	r27, 0x01	; 1
    134c:	08 95       	ret
    134e:	11 c1       	rjmp	.+546    	; 0x1572 <__fp_zero>
    1350:	67 2f       	mov	r22, r23
    1352:	78 2f       	mov	r23, r24
    1354:	88 27       	eor	r24, r24
    1356:	b8 5f       	subi	r27, 0xF8	; 248
    1358:	39 f0       	breq	.+14     	; 0x1368 <__fixunssfsi+0x46>
    135a:	b9 3f       	cpi	r27, 0xF9	; 249
    135c:	cc f3       	brlt	.-14     	; 0x1350 <__fixunssfsi+0x2e>
    135e:	86 95       	lsr	r24
    1360:	77 95       	ror	r23
    1362:	67 95       	ror	r22
    1364:	b3 95       	inc	r27
    1366:	d9 f7       	brne	.-10     	; 0x135e <__fixunssfsi+0x3c>
    1368:	3e f4       	brtc	.+14     	; 0x1378 <__fixunssfsi+0x56>
    136a:	90 95       	com	r25
    136c:	80 95       	com	r24
    136e:	70 95       	com	r23
    1370:	61 95       	neg	r22
    1372:	7f 4f       	sbci	r23, 0xFF	; 255
    1374:	8f 4f       	sbci	r24, 0xFF	; 255
    1376:	9f 4f       	sbci	r25, 0xFF	; 255
    1378:	08 95       	ret

0000137a <__floatunsisf>:
    137a:	e8 94       	clt
    137c:	09 c0       	rjmp	.+18     	; 0x1390 <__floatsisf+0x12>

0000137e <__floatsisf>:
    137e:	97 fb       	bst	r25, 7
    1380:	3e f4       	brtc	.+14     	; 0x1390 <__floatsisf+0x12>
    1382:	90 95       	com	r25
    1384:	80 95       	com	r24
    1386:	70 95       	com	r23
    1388:	61 95       	neg	r22
    138a:	7f 4f       	sbci	r23, 0xFF	; 255
    138c:	8f 4f       	sbci	r24, 0xFF	; 255
    138e:	9f 4f       	sbci	r25, 0xFF	; 255
    1390:	99 23       	and	r25, r25
    1392:	a9 f0       	breq	.+42     	; 0x13be <__floatsisf+0x40>
    1394:	f9 2f       	mov	r31, r25
    1396:	96 e9       	ldi	r25, 0x96	; 150
    1398:	bb 27       	eor	r27, r27
    139a:	93 95       	inc	r25
    139c:	f6 95       	lsr	r31
    139e:	87 95       	ror	r24
    13a0:	77 95       	ror	r23
    13a2:	67 95       	ror	r22
    13a4:	b7 95       	ror	r27
    13a6:	f1 11       	cpse	r31, r1
    13a8:	f8 cf       	rjmp	.-16     	; 0x139a <__floatsisf+0x1c>
    13aa:	fa f4       	brpl	.+62     	; 0x13ea <__floatsisf+0x6c>
    13ac:	bb 0f       	add	r27, r27
    13ae:	11 f4       	brne	.+4      	; 0x13b4 <__floatsisf+0x36>
    13b0:	60 ff       	sbrs	r22, 0
    13b2:	1b c0       	rjmp	.+54     	; 0x13ea <__floatsisf+0x6c>
    13b4:	6f 5f       	subi	r22, 0xFF	; 255
    13b6:	7f 4f       	sbci	r23, 0xFF	; 255
    13b8:	8f 4f       	sbci	r24, 0xFF	; 255
    13ba:	9f 4f       	sbci	r25, 0xFF	; 255
    13bc:	16 c0       	rjmp	.+44     	; 0x13ea <__floatsisf+0x6c>
    13be:	88 23       	and	r24, r24
    13c0:	11 f0       	breq	.+4      	; 0x13c6 <__floatsisf+0x48>
    13c2:	96 e9       	ldi	r25, 0x96	; 150
    13c4:	11 c0       	rjmp	.+34     	; 0x13e8 <__floatsisf+0x6a>
    13c6:	77 23       	and	r23, r23
    13c8:	21 f0       	breq	.+8      	; 0x13d2 <__floatsisf+0x54>
    13ca:	9e e8       	ldi	r25, 0x8E	; 142
    13cc:	87 2f       	mov	r24, r23
    13ce:	76 2f       	mov	r23, r22
    13d0:	05 c0       	rjmp	.+10     	; 0x13dc <__floatsisf+0x5e>
    13d2:	66 23       	and	r22, r22
    13d4:	71 f0       	breq	.+28     	; 0x13f2 <__floatsisf+0x74>
    13d6:	96 e8       	ldi	r25, 0x86	; 134
    13d8:	86 2f       	mov	r24, r22
    13da:	70 e0       	ldi	r23, 0x00	; 0
    13dc:	60 e0       	ldi	r22, 0x00	; 0
    13de:	2a f0       	brmi	.+10     	; 0x13ea <__floatsisf+0x6c>
    13e0:	9a 95       	dec	r25
    13e2:	66 0f       	add	r22, r22
    13e4:	77 1f       	adc	r23, r23
    13e6:	88 1f       	adc	r24, r24
    13e8:	da f7       	brpl	.-10     	; 0x13e0 <__floatsisf+0x62>
    13ea:	88 0f       	add	r24, r24
    13ec:	96 95       	lsr	r25
    13ee:	87 95       	ror	r24
    13f0:	97 f9       	bld	r25, 7
    13f2:	08 95       	ret

000013f4 <__fp_arccos>:
    13f4:	df 93       	push	r29
    13f6:	cf 93       	push	r28
    13f8:	1f 93       	push	r17
    13fa:	0f 93       	push	r16
    13fc:	8b 01       	movw	r16, r22
    13fe:	ec 01       	movw	r28, r24
    1400:	e5 e2       	ldi	r30, 0x25	; 37
    1402:	f1 e0       	ldi	r31, 0x01	; 1
    1404:	3f d0       	rcall	.+126    	; 0x1484 <__fp_powser>
    1406:	82 d0       	rcall	.+260    	; 0x150c <__fp_round>
    1408:	98 01       	movw	r18, r16
    140a:	ae 01       	movw	r20, r28
    140c:	8b 01       	movw	r16, r22
    140e:	ec 01       	movw	r28, r24
    1410:	60 e0       	ldi	r22, 0x00	; 0
    1412:	70 e0       	ldi	r23, 0x00	; 0
    1414:	80 e8       	ldi	r24, 0x80	; 128
    1416:	9f e3       	ldi	r25, 0x3F	; 63
    1418:	35 de       	rcall	.-918    	; 0x1084 <__subsf3>
    141a:	2a d1       	rcall	.+596    	; 0x1670 <sqrt>
    141c:	98 01       	movw	r18, r16
    141e:	ae 01       	movw	r20, r28
    1420:	0f 91       	pop	r16
    1422:	1f 91       	pop	r17
    1424:	cf 91       	pop	r28
    1426:	df 91       	pop	r29
    1428:	c2 c0       	rjmp	.+388    	; 0x15ae <__mulsf3x>

0000142a <__fp_cmp>:
    142a:	99 0f       	add	r25, r25
    142c:	00 08       	sbc	r0, r0
    142e:	55 0f       	add	r21, r21
    1430:	aa 0b       	sbc	r26, r26
    1432:	e0 e8       	ldi	r30, 0x80	; 128
    1434:	fe ef       	ldi	r31, 0xFE	; 254
    1436:	16 16       	cp	r1, r22
    1438:	17 06       	cpc	r1, r23
    143a:	e8 07       	cpc	r30, r24
    143c:	f9 07       	cpc	r31, r25
    143e:	c0 f0       	brcs	.+48     	; 0x1470 <__fp_cmp+0x46>
    1440:	12 16       	cp	r1, r18
    1442:	13 06       	cpc	r1, r19
    1444:	e4 07       	cpc	r30, r20
    1446:	f5 07       	cpc	r31, r21
    1448:	98 f0       	brcs	.+38     	; 0x1470 <__fp_cmp+0x46>
    144a:	62 1b       	sub	r22, r18
    144c:	73 0b       	sbc	r23, r19
    144e:	84 0b       	sbc	r24, r20
    1450:	95 0b       	sbc	r25, r21
    1452:	39 f4       	brne	.+14     	; 0x1462 <__fp_cmp+0x38>
    1454:	0a 26       	eor	r0, r26
    1456:	61 f0       	breq	.+24     	; 0x1470 <__fp_cmp+0x46>
    1458:	23 2b       	or	r18, r19
    145a:	24 2b       	or	r18, r20
    145c:	25 2b       	or	r18, r21
    145e:	21 f4       	brne	.+8      	; 0x1468 <__fp_cmp+0x3e>
    1460:	08 95       	ret
    1462:	0a 26       	eor	r0, r26
    1464:	09 f4       	brne	.+2      	; 0x1468 <__fp_cmp+0x3e>
    1466:	a1 40       	sbci	r26, 0x01	; 1
    1468:	a6 95       	lsr	r26
    146a:	8f ef       	ldi	r24, 0xFF	; 255
    146c:	81 1d       	adc	r24, r1
    146e:	81 1d       	adc	r24, r1
    1470:	08 95       	ret

00001472 <__fp_inf>:
    1472:	97 f9       	bld	r25, 7
    1474:	9f 67       	ori	r25, 0x7F	; 127
    1476:	80 e8       	ldi	r24, 0x80	; 128
    1478:	70 e0       	ldi	r23, 0x00	; 0
    147a:	60 e0       	ldi	r22, 0x00	; 0
    147c:	08 95       	ret

0000147e <__fp_nan>:
    147e:	9f ef       	ldi	r25, 0xFF	; 255
    1480:	80 ec       	ldi	r24, 0xC0	; 192
    1482:	08 95       	ret

00001484 <__fp_powser>:
    1484:	df 93       	push	r29
    1486:	cf 93       	push	r28
    1488:	1f 93       	push	r17
    148a:	0f 93       	push	r16
    148c:	ff 92       	push	r15
    148e:	ef 92       	push	r14
    1490:	df 92       	push	r13
    1492:	7b 01       	movw	r14, r22
    1494:	8c 01       	movw	r16, r24
    1496:	68 94       	set
    1498:	05 c0       	rjmp	.+10     	; 0x14a4 <__fp_powser+0x20>
    149a:	da 2e       	mov	r13, r26
    149c:	ef 01       	movw	r28, r30
    149e:	87 d0       	rcall	.+270    	; 0x15ae <__mulsf3x>
    14a0:	fe 01       	movw	r30, r28
    14a2:	e8 94       	clt
    14a4:	a5 91       	lpm	r26, Z+
    14a6:	25 91       	lpm	r18, Z+
    14a8:	35 91       	lpm	r19, Z+
    14aa:	45 91       	lpm	r20, Z+
    14ac:	55 91       	lpm	r21, Z+
    14ae:	ae f3       	brts	.-22     	; 0x149a <__fp_powser+0x16>
    14b0:	ef 01       	movw	r28, r30
    14b2:	fa dd       	rcall	.-1036   	; 0x10a8 <__addsf3x>
    14b4:	fe 01       	movw	r30, r28
    14b6:	97 01       	movw	r18, r14
    14b8:	a8 01       	movw	r20, r16
    14ba:	da 94       	dec	r13
    14bc:	79 f7       	brne	.-34     	; 0x149c <__fp_powser+0x18>
    14be:	df 90       	pop	r13
    14c0:	ef 90       	pop	r14
    14c2:	ff 90       	pop	r15
    14c4:	0f 91       	pop	r16
    14c6:	1f 91       	pop	r17
    14c8:	cf 91       	pop	r28
    14ca:	df 91       	pop	r29
    14cc:	08 95       	ret

000014ce <__fp_powsodd>:
    14ce:	9f 93       	push	r25
    14d0:	8f 93       	push	r24
    14d2:	7f 93       	push	r23
    14d4:	6f 93       	push	r22
    14d6:	ff 93       	push	r31
    14d8:	ef 93       	push	r30
    14da:	9b 01       	movw	r18, r22
    14dc:	ac 01       	movw	r20, r24
    14de:	5b d0       	rcall	.+182    	; 0x1596 <__mulsf3>
    14e0:	ef 91       	pop	r30
    14e2:	ff 91       	pop	r31
    14e4:	cf df       	rcall	.-98     	; 0x1484 <__fp_powser>
    14e6:	2f 91       	pop	r18
    14e8:	3f 91       	pop	r19
    14ea:	4f 91       	pop	r20
    14ec:	5f 91       	pop	r21
    14ee:	53 c0       	rjmp	.+166    	; 0x1596 <__mulsf3>

000014f0 <__fp_pscA>:
    14f0:	00 24       	eor	r0, r0
    14f2:	0a 94       	dec	r0
    14f4:	16 16       	cp	r1, r22
    14f6:	17 06       	cpc	r1, r23
    14f8:	18 06       	cpc	r1, r24
    14fa:	09 06       	cpc	r0, r25
    14fc:	08 95       	ret

000014fe <__fp_pscB>:
    14fe:	00 24       	eor	r0, r0
    1500:	0a 94       	dec	r0
    1502:	12 16       	cp	r1, r18
    1504:	13 06       	cpc	r1, r19
    1506:	14 06       	cpc	r1, r20
    1508:	05 06       	cpc	r0, r21
    150a:	08 95       	ret

0000150c <__fp_round>:
    150c:	09 2e       	mov	r0, r25
    150e:	03 94       	inc	r0
    1510:	00 0c       	add	r0, r0
    1512:	11 f4       	brne	.+4      	; 0x1518 <__fp_round+0xc>
    1514:	88 23       	and	r24, r24
    1516:	52 f0       	brmi	.+20     	; 0x152c <__fp_round+0x20>
    1518:	bb 0f       	add	r27, r27
    151a:	40 f4       	brcc	.+16     	; 0x152c <__fp_round+0x20>
    151c:	bf 2b       	or	r27, r31
    151e:	11 f4       	brne	.+4      	; 0x1524 <__fp_round+0x18>
    1520:	60 ff       	sbrs	r22, 0
    1522:	04 c0       	rjmp	.+8      	; 0x152c <__fp_round+0x20>
    1524:	6f 5f       	subi	r22, 0xFF	; 255
    1526:	7f 4f       	sbci	r23, 0xFF	; 255
    1528:	8f 4f       	sbci	r24, 0xFF	; 255
    152a:	9f 4f       	sbci	r25, 0xFF	; 255
    152c:	08 95       	ret

0000152e <__fp_split3>:
    152e:	57 fd       	sbrc	r21, 7
    1530:	90 58       	subi	r25, 0x80	; 128
    1532:	44 0f       	add	r20, r20
    1534:	55 1f       	adc	r21, r21
    1536:	59 f0       	breq	.+22     	; 0x154e <__fp_splitA+0x10>
    1538:	5f 3f       	cpi	r21, 0xFF	; 255
    153a:	71 f0       	breq	.+28     	; 0x1558 <__fp_splitA+0x1a>
    153c:	47 95       	ror	r20

0000153e <__fp_splitA>:
    153e:	88 0f       	add	r24, r24
    1540:	97 fb       	bst	r25, 7
    1542:	99 1f       	adc	r25, r25
    1544:	61 f0       	breq	.+24     	; 0x155e <__fp_splitA+0x20>
    1546:	9f 3f       	cpi	r25, 0xFF	; 255
    1548:	79 f0       	breq	.+30     	; 0x1568 <__fp_splitA+0x2a>
    154a:	87 95       	ror	r24
    154c:	08 95       	ret
    154e:	12 16       	cp	r1, r18
    1550:	13 06       	cpc	r1, r19
    1552:	14 06       	cpc	r1, r20
    1554:	55 1f       	adc	r21, r21
    1556:	f2 cf       	rjmp	.-28     	; 0x153c <__fp_split3+0xe>
    1558:	46 95       	lsr	r20
    155a:	f1 df       	rcall	.-30     	; 0x153e <__fp_splitA>
    155c:	08 c0       	rjmp	.+16     	; 0x156e <__fp_splitA+0x30>
    155e:	16 16       	cp	r1, r22
    1560:	17 06       	cpc	r1, r23
    1562:	18 06       	cpc	r1, r24
    1564:	99 1f       	adc	r25, r25
    1566:	f1 cf       	rjmp	.-30     	; 0x154a <__fp_splitA+0xc>
    1568:	86 95       	lsr	r24
    156a:	71 05       	cpc	r23, r1
    156c:	61 05       	cpc	r22, r1
    156e:	08 94       	sec
    1570:	08 95       	ret

00001572 <__fp_zero>:
    1572:	e8 94       	clt

00001574 <__fp_szero>:
    1574:	bb 27       	eor	r27, r27
    1576:	66 27       	eor	r22, r22
    1578:	77 27       	eor	r23, r23
    157a:	cb 01       	movw	r24, r22
    157c:	97 f9       	bld	r25, 7
    157e:	08 95       	ret

00001580 <__gesf2>:
    1580:	54 df       	rcall	.-344    	; 0x142a <__fp_cmp>
    1582:	08 f4       	brcc	.+2      	; 0x1586 <__gesf2+0x6>
    1584:	8f ef       	ldi	r24, 0xFF	; 255
    1586:	08 95       	ret

00001588 <inverse>:
    1588:	9b 01       	movw	r18, r22
    158a:	ac 01       	movw	r20, r24
    158c:	60 e0       	ldi	r22, 0x00	; 0
    158e:	70 e0       	ldi	r23, 0x00	; 0
    1590:	80 e8       	ldi	r24, 0x80	; 128
    1592:	9f e3       	ldi	r25, 0x3F	; 63
    1594:	59 ce       	rjmp	.-846    	; 0x1248 <__divsf3>

00001596 <__mulsf3>:
    1596:	0b d0       	rcall	.+22     	; 0x15ae <__mulsf3x>
    1598:	b9 cf       	rjmp	.-142    	; 0x150c <__fp_round>
    159a:	aa df       	rcall	.-172    	; 0x14f0 <__fp_pscA>
    159c:	28 f0       	brcs	.+10     	; 0x15a8 <__mulsf3+0x12>
    159e:	af df       	rcall	.-162    	; 0x14fe <__fp_pscB>
    15a0:	18 f0       	brcs	.+6      	; 0x15a8 <__mulsf3+0x12>
    15a2:	95 23       	and	r25, r21
    15a4:	09 f0       	breq	.+2      	; 0x15a8 <__mulsf3+0x12>
    15a6:	65 cf       	rjmp	.-310    	; 0x1472 <__fp_inf>
    15a8:	6a cf       	rjmp	.-300    	; 0x147e <__fp_nan>
    15aa:	11 24       	eor	r1, r1
    15ac:	e3 cf       	rjmp	.-58     	; 0x1574 <__fp_szero>

000015ae <__mulsf3x>:
    15ae:	bf df       	rcall	.-130    	; 0x152e <__fp_split3>
    15b0:	a0 f3       	brcs	.-24     	; 0x159a <__mulsf3+0x4>

000015b2 <__mulsf3_pse>:
    15b2:	95 9f       	mul	r25, r21
    15b4:	d1 f3       	breq	.-12     	; 0x15aa <__mulsf3+0x14>
    15b6:	95 0f       	add	r25, r21
    15b8:	50 e0       	ldi	r21, 0x00	; 0
    15ba:	55 1f       	adc	r21, r21
    15bc:	62 9f       	mul	r22, r18
    15be:	f0 01       	movw	r30, r0
    15c0:	72 9f       	mul	r23, r18
    15c2:	bb 27       	eor	r27, r27
    15c4:	f0 0d       	add	r31, r0
    15c6:	b1 1d       	adc	r27, r1
    15c8:	63 9f       	mul	r22, r19
    15ca:	aa 27       	eor	r26, r26
    15cc:	f0 0d       	add	r31, r0
    15ce:	b1 1d       	adc	r27, r1
    15d0:	aa 1f       	adc	r26, r26
    15d2:	64 9f       	mul	r22, r20
    15d4:	66 27       	eor	r22, r22
    15d6:	b0 0d       	add	r27, r0
    15d8:	a1 1d       	adc	r26, r1
    15da:	66 1f       	adc	r22, r22
    15dc:	82 9f       	mul	r24, r18
    15de:	22 27       	eor	r18, r18
    15e0:	b0 0d       	add	r27, r0
    15e2:	a1 1d       	adc	r26, r1
    15e4:	62 1f       	adc	r22, r18
    15e6:	73 9f       	mul	r23, r19
    15e8:	b0 0d       	add	r27, r0
    15ea:	a1 1d       	adc	r26, r1
    15ec:	62 1f       	adc	r22, r18
    15ee:	83 9f       	mul	r24, r19
    15f0:	a0 0d       	add	r26, r0
    15f2:	61 1d       	adc	r22, r1
    15f4:	22 1f       	adc	r18, r18
    15f6:	74 9f       	mul	r23, r20
    15f8:	33 27       	eor	r19, r19
    15fa:	a0 0d       	add	r26, r0
    15fc:	61 1d       	adc	r22, r1
    15fe:	23 1f       	adc	r18, r19
    1600:	84 9f       	mul	r24, r20
    1602:	60 0d       	add	r22, r0
    1604:	21 1d       	adc	r18, r1
    1606:	82 2f       	mov	r24, r18
    1608:	76 2f       	mov	r23, r22
    160a:	6a 2f       	mov	r22, r26
    160c:	11 24       	eor	r1, r1
    160e:	9f 57       	subi	r25, 0x7F	; 127
    1610:	50 40       	sbci	r21, 0x00	; 0
    1612:	8a f0       	brmi	.+34     	; 0x1636 <__mulsf3_pse+0x84>
    1614:	e1 f0       	breq	.+56     	; 0x164e <__mulsf3_pse+0x9c>
    1616:	88 23       	and	r24, r24
    1618:	4a f0       	brmi	.+18     	; 0x162c <__mulsf3_pse+0x7a>
    161a:	ee 0f       	add	r30, r30
    161c:	ff 1f       	adc	r31, r31
    161e:	bb 1f       	adc	r27, r27
    1620:	66 1f       	adc	r22, r22
    1622:	77 1f       	adc	r23, r23
    1624:	88 1f       	adc	r24, r24
    1626:	91 50       	subi	r25, 0x01	; 1
    1628:	50 40       	sbci	r21, 0x00	; 0
    162a:	a9 f7       	brne	.-22     	; 0x1616 <__mulsf3_pse+0x64>
    162c:	9e 3f       	cpi	r25, 0xFE	; 254
    162e:	51 05       	cpc	r21, r1
    1630:	70 f0       	brcs	.+28     	; 0x164e <__mulsf3_pse+0x9c>
    1632:	1f cf       	rjmp	.-450    	; 0x1472 <__fp_inf>
    1634:	9f cf       	rjmp	.-194    	; 0x1574 <__fp_szero>
    1636:	5f 3f       	cpi	r21, 0xFF	; 255
    1638:	ec f3       	brlt	.-6      	; 0x1634 <__mulsf3_pse+0x82>
    163a:	98 3e       	cpi	r25, 0xE8	; 232
    163c:	dc f3       	brlt	.-10     	; 0x1634 <__mulsf3_pse+0x82>
    163e:	86 95       	lsr	r24
    1640:	77 95       	ror	r23
    1642:	67 95       	ror	r22
    1644:	b7 95       	ror	r27
    1646:	f7 95       	ror	r31
    1648:	e7 95       	ror	r30
    164a:	9f 5f       	subi	r25, 0xFF	; 255
    164c:	c1 f7       	brne	.-16     	; 0x163e <__mulsf3_pse+0x8c>
    164e:	fe 2b       	or	r31, r30
    1650:	88 0f       	add	r24, r24
    1652:	91 1d       	adc	r25, r1
    1654:	96 95       	lsr	r25
    1656:	87 95       	ror	r24
    1658:	97 f9       	bld	r25, 7
    165a:	08 95       	ret

0000165c <sin>:
    165c:	9f 93       	push	r25
    165e:	5f d0       	rcall	.+190    	; 0x171e <__fp_rempio2>
    1660:	0f 90       	pop	r0
    1662:	07 fc       	sbrc	r0, 7
    1664:	ee 5f       	subi	r30, 0xFE	; 254
    1666:	82 c0       	rjmp	.+260    	; 0x176c <__fp_sinus>
    1668:	11 f4       	brne	.+4      	; 0x166e <sin+0x12>
    166a:	0e f4       	brtc	.+2      	; 0x166e <sin+0x12>
    166c:	08 cf       	rjmp	.-496    	; 0x147e <__fp_nan>
    166e:	41 c0       	rjmp	.+130    	; 0x16f2 <__fp_mpack>

00001670 <sqrt>:
    1670:	66 df       	rcall	.-308    	; 0x153e <__fp_splitA>
    1672:	d0 f3       	brcs	.-12     	; 0x1668 <sin+0xc>
    1674:	99 23       	and	r25, r25
    1676:	d9 f3       	breq	.-10     	; 0x166e <sin+0x12>
    1678:	ce f3       	brts	.-14     	; 0x166c <sin+0x10>
    167a:	9f 57       	subi	r25, 0x7F	; 127
    167c:	55 0b       	sbc	r21, r21
    167e:	87 ff       	sbrs	r24, 7
    1680:	46 d0       	rcall	.+140    	; 0x170e <__fp_norm2>
    1682:	00 24       	eor	r0, r0
    1684:	a0 e6       	ldi	r26, 0x60	; 96
    1686:	40 ea       	ldi	r20, 0xA0	; 160
    1688:	90 01       	movw	r18, r0
    168a:	80 58       	subi	r24, 0x80	; 128
    168c:	56 95       	lsr	r21
    168e:	97 95       	ror	r25
    1690:	28 f4       	brcc	.+10     	; 0x169c <sqrt+0x2c>
    1692:	80 5c       	subi	r24, 0xC0	; 192
    1694:	66 0f       	add	r22, r22
    1696:	77 1f       	adc	r23, r23
    1698:	88 1f       	adc	r24, r24
    169a:	20 f0       	brcs	.+8      	; 0x16a4 <sqrt+0x34>
    169c:	26 17       	cp	r18, r22
    169e:	37 07       	cpc	r19, r23
    16a0:	48 07       	cpc	r20, r24
    16a2:	30 f4       	brcc	.+12     	; 0x16b0 <sqrt+0x40>
    16a4:	62 1b       	sub	r22, r18
    16a6:	73 0b       	sbc	r23, r19
    16a8:	84 0b       	sbc	r24, r20
    16aa:	20 29       	or	r18, r0
    16ac:	31 29       	or	r19, r1
    16ae:	4a 2b       	or	r20, r26
    16b0:	a6 95       	lsr	r26
    16b2:	17 94       	ror	r1
    16b4:	07 94       	ror	r0
    16b6:	20 25       	eor	r18, r0
    16b8:	31 25       	eor	r19, r1
    16ba:	4a 27       	eor	r20, r26
    16bc:	58 f7       	brcc	.-42     	; 0x1694 <sqrt+0x24>
    16be:	66 0f       	add	r22, r22
    16c0:	77 1f       	adc	r23, r23
    16c2:	88 1f       	adc	r24, r24
    16c4:	20 f0       	brcs	.+8      	; 0x16ce <sqrt+0x5e>
    16c6:	26 17       	cp	r18, r22
    16c8:	37 07       	cpc	r19, r23
    16ca:	48 07       	cpc	r20, r24
    16cc:	30 f4       	brcc	.+12     	; 0x16da <sqrt+0x6a>
    16ce:	62 0b       	sbc	r22, r18
    16d0:	73 0b       	sbc	r23, r19
    16d2:	84 0b       	sbc	r24, r20
    16d4:	20 0d       	add	r18, r0
    16d6:	31 1d       	adc	r19, r1
    16d8:	41 1d       	adc	r20, r1
    16da:	a0 95       	com	r26
    16dc:	81 f7       	brne	.-32     	; 0x16be <sqrt+0x4e>
    16de:	b9 01       	movw	r22, r18
    16e0:	84 2f       	mov	r24, r20
    16e2:	91 58       	subi	r25, 0x81	; 129
    16e4:	88 0f       	add	r24, r24
    16e6:	96 95       	lsr	r25
    16e8:	87 95       	ror	r24
    16ea:	08 95       	ret

000016ec <square>:
    16ec:	9b 01       	movw	r18, r22
    16ee:	ac 01       	movw	r20, r24
    16f0:	52 cf       	rjmp	.-348    	; 0x1596 <__mulsf3>

000016f2 <__fp_mpack>:
    16f2:	9f 3f       	cpi	r25, 0xFF	; 255
    16f4:	31 f0       	breq	.+12     	; 0x1702 <__fp_mpack_finite+0xc>

000016f6 <__fp_mpack_finite>:
    16f6:	91 50       	subi	r25, 0x01	; 1
    16f8:	20 f4       	brcc	.+8      	; 0x1702 <__fp_mpack_finite+0xc>
    16fa:	87 95       	ror	r24
    16fc:	77 95       	ror	r23
    16fe:	67 95       	ror	r22
    1700:	b7 95       	ror	r27
    1702:	88 0f       	add	r24, r24
    1704:	91 1d       	adc	r25, r1
    1706:	96 95       	lsr	r25
    1708:	87 95       	ror	r24
    170a:	97 f9       	bld	r25, 7
    170c:	08 95       	ret

0000170e <__fp_norm2>:
    170e:	91 50       	subi	r25, 0x01	; 1
    1710:	50 40       	sbci	r21, 0x00	; 0
    1712:	66 0f       	add	r22, r22
    1714:	77 1f       	adc	r23, r23
    1716:	88 1f       	adc	r24, r24
    1718:	d2 f7       	brpl	.-12     	; 0x170e <__fp_norm2>
    171a:	08 95       	ret
    171c:	b0 ce       	rjmp	.-672    	; 0x147e <__fp_nan>

0000171e <__fp_rempio2>:
    171e:	0f df       	rcall	.-482    	; 0x153e <__fp_splitA>
    1720:	e8 f3       	brcs	.-6      	; 0x171c <__fp_norm2+0xe>
    1722:	e8 94       	clt
    1724:	e0 e0       	ldi	r30, 0x00	; 0
    1726:	bb 27       	eor	r27, r27
    1728:	9f 57       	subi	r25, 0x7F	; 127
    172a:	f0 f0       	brcs	.+60     	; 0x1768 <__fp_rempio2+0x4a>
    172c:	2a ed       	ldi	r18, 0xDA	; 218
    172e:	3f e0       	ldi	r19, 0x0F	; 15
    1730:	49 ec       	ldi	r20, 0xC9	; 201
    1732:	06 c0       	rjmp	.+12     	; 0x1740 <__fp_rempio2+0x22>
    1734:	ee 0f       	add	r30, r30
    1736:	bb 0f       	add	r27, r27
    1738:	66 1f       	adc	r22, r22
    173a:	77 1f       	adc	r23, r23
    173c:	88 1f       	adc	r24, r24
    173e:	28 f0       	brcs	.+10     	; 0x174a <__fp_rempio2+0x2c>
    1740:	b2 3a       	cpi	r27, 0xA2	; 162
    1742:	62 07       	cpc	r22, r18
    1744:	73 07       	cpc	r23, r19
    1746:	84 07       	cpc	r24, r20
    1748:	28 f0       	brcs	.+10     	; 0x1754 <__fp_rempio2+0x36>
    174a:	b2 5a       	subi	r27, 0xA2	; 162
    174c:	62 0b       	sbc	r22, r18
    174e:	73 0b       	sbc	r23, r19
    1750:	84 0b       	sbc	r24, r20
    1752:	e3 95       	inc	r30
    1754:	9a 95       	dec	r25
    1756:	72 f7       	brpl	.-36     	; 0x1734 <__fp_rempio2+0x16>
    1758:	80 38       	cpi	r24, 0x80	; 128
    175a:	30 f4       	brcc	.+12     	; 0x1768 <__fp_rempio2+0x4a>
    175c:	9a 95       	dec	r25
    175e:	bb 0f       	add	r27, r27
    1760:	66 1f       	adc	r22, r22
    1762:	77 1f       	adc	r23, r23
    1764:	88 1f       	adc	r24, r24
    1766:	d2 f7       	brpl	.-12     	; 0x175c <__fp_rempio2+0x3e>
    1768:	90 48       	sbci	r25, 0x80	; 128
    176a:	c5 cf       	rjmp	.-118    	; 0x16f6 <__fp_mpack_finite>

0000176c <__fp_sinus>:
    176c:	ef 93       	push	r30
    176e:	e0 ff       	sbrs	r30, 0
    1770:	06 c0       	rjmp	.+12     	; 0x177e <__fp_sinus+0x12>
    1772:	a2 ea       	ldi	r26, 0xA2	; 162
    1774:	2a ed       	ldi	r18, 0xDA	; 218
    1776:	3f e0       	ldi	r19, 0x0F	; 15
    1778:	49 ec       	ldi	r20, 0xC9	; 201
    177a:	5f eb       	ldi	r21, 0xBF	; 191
    177c:	95 dc       	rcall	.-1750   	; 0x10a8 <__addsf3x>
    177e:	c6 de       	rcall	.-628    	; 0x150c <__fp_round>
    1780:	0f 90       	pop	r0
    1782:	03 94       	inc	r0
    1784:	01 fc       	sbrc	r0, 1
    1786:	90 58       	subi	r25, 0x80	; 128
    1788:	ed e4       	ldi	r30, 0x4D	; 77
    178a:	f1 e0       	ldi	r31, 0x01	; 1
    178c:	a0 ce       	rjmp	.-704    	; 0x14ce <__fp_powsodd>

0000178e <__divmodhi4>:
    178e:	97 fb       	bst	r25, 7
    1790:	07 2e       	mov	r0, r23
    1792:	16 f4       	brtc	.+4      	; 0x1798 <__divmodhi4+0xa>
    1794:	00 94       	com	r0
    1796:	06 d0       	rcall	.+12     	; 0x17a4 <__divmodhi4_neg1>
    1798:	77 fd       	sbrc	r23, 7
    179a:	08 d0       	rcall	.+16     	; 0x17ac <__divmodhi4_neg2>
    179c:	0b d0       	rcall	.+22     	; 0x17b4 <__udivmodhi4>
    179e:	07 fc       	sbrc	r0, 7
    17a0:	05 d0       	rcall	.+10     	; 0x17ac <__divmodhi4_neg2>
    17a2:	3e f4       	brtc	.+14     	; 0x17b2 <__divmodhi4_exit>

000017a4 <__divmodhi4_neg1>:
    17a4:	90 95       	com	r25
    17a6:	81 95       	neg	r24
    17a8:	9f 4f       	sbci	r25, 0xFF	; 255
    17aa:	08 95       	ret

000017ac <__divmodhi4_neg2>:
    17ac:	70 95       	com	r23
    17ae:	61 95       	neg	r22
    17b0:	7f 4f       	sbci	r23, 0xFF	; 255

000017b2 <__divmodhi4_exit>:
    17b2:	08 95       	ret

000017b4 <__udivmodhi4>:
    17b4:	aa 1b       	sub	r26, r26
    17b6:	bb 1b       	sub	r27, r27
    17b8:	51 e1       	ldi	r21, 0x11	; 17
    17ba:	07 c0       	rjmp	.+14     	; 0x17ca <__udivmodhi4_ep>

000017bc <__udivmodhi4_loop>:
    17bc:	aa 1f       	adc	r26, r26
    17be:	bb 1f       	adc	r27, r27
    17c0:	a6 17       	cp	r26, r22
    17c2:	b7 07       	cpc	r27, r23
    17c4:	10 f0       	brcs	.+4      	; 0x17ca <__udivmodhi4_ep>
    17c6:	a6 1b       	sub	r26, r22
    17c8:	b7 0b       	sbc	r27, r23

000017ca <__udivmodhi4_ep>:
    17ca:	88 1f       	adc	r24, r24
    17cc:	99 1f       	adc	r25, r25
    17ce:	5a 95       	dec	r21
    17d0:	a9 f7       	brne	.-22     	; 0x17bc <__udivmodhi4_loop>
    17d2:	80 95       	com	r24
    17d4:	90 95       	com	r25
    17d6:	bc 01       	movw	r22, r24
    17d8:	cd 01       	movw	r24, r26
    17da:	08 95       	ret

000017dc <itoa>:
    17dc:	45 32       	cpi	r20, 0x25	; 37
    17de:	51 05       	cpc	r21, r1
    17e0:	18 f4       	brcc	.+6      	; 0x17e8 <itoa+0xc>
    17e2:	42 30       	cpi	r20, 0x02	; 2
    17e4:	08 f0       	brcs	.+2      	; 0x17e8 <itoa+0xc>
    17e6:	04 c0       	rjmp	.+8      	; 0x17f0 <__itoa_ncheck>
    17e8:	fb 01       	movw	r30, r22
    17ea:	10 82       	st	Z, r1
    17ec:	cb 01       	movw	r24, r22
    17ee:	08 95       	ret

000017f0 <__itoa_ncheck>:
    17f0:	bb 27       	eor	r27, r27
    17f2:	4a 30       	cpi	r20, 0x0A	; 10
    17f4:	31 f4       	brne	.+12     	; 0x1802 <__itoa_ncheck+0x12>
    17f6:	99 23       	and	r25, r25
    17f8:	22 f4       	brpl	.+8      	; 0x1802 <__itoa_ncheck+0x12>
    17fa:	bd e2       	ldi	r27, 0x2D	; 45
    17fc:	90 95       	com	r25
    17fe:	81 95       	neg	r24
    1800:	9f 4f       	sbci	r25, 0xFF	; 255
    1802:	01 c0       	rjmp	.+2      	; 0x1806 <__utoa_common>

00001804 <__utoa_ncheck>:
    1804:	bb 27       	eor	r27, r27

00001806 <__utoa_common>:
    1806:	fb 01       	movw	r30, r22
    1808:	55 27       	eor	r21, r21
    180a:	aa 27       	eor	r26, r26
    180c:	88 0f       	add	r24, r24
    180e:	99 1f       	adc	r25, r25
    1810:	aa 1f       	adc	r26, r26
    1812:	a4 17       	cp	r26, r20
    1814:	10 f0       	brcs	.+4      	; 0x181a <__utoa_common+0x14>
    1816:	a4 1b       	sub	r26, r20
    1818:	83 95       	inc	r24
    181a:	50 51       	subi	r21, 0x10	; 16
    181c:	b9 f7       	brne	.-18     	; 0x180c <__utoa_common+0x6>
    181e:	a0 5d       	subi	r26, 0xD0	; 208
    1820:	aa 33       	cpi	r26, 0x3A	; 58
    1822:	08 f0       	brcs	.+2      	; 0x1826 <__utoa_common+0x20>
    1824:	a9 5d       	subi	r26, 0xD9	; 217
    1826:	a1 93       	st	Z+, r26
    1828:	00 97       	sbiw	r24, 0x00	; 0
    182a:	79 f7       	brne	.-34     	; 0x180a <__utoa_common+0x4>
    182c:	b1 11       	cpse	r27, r1
    182e:	b1 93       	st	Z+, r27
    1830:	11 92       	st	Z+, r1
    1832:	cb 01       	movw	r24, r22
    1834:	b7 c3       	rjmp	.+1902   	; 0x1fa4 <strrev>

00001836 <fdevopen>:
    1836:	0f 93       	push	r16
    1838:	1f 93       	push	r17
    183a:	cf 93       	push	r28
    183c:	df 93       	push	r29
    183e:	00 97       	sbiw	r24, 0x00	; 0
    1840:	31 f4       	brne	.+12     	; 0x184e <fdevopen+0x18>
    1842:	61 15       	cp	r22, r1
    1844:	71 05       	cpc	r23, r1
    1846:	19 f4       	brne	.+6      	; 0x184e <fdevopen+0x18>
    1848:	80 e0       	ldi	r24, 0x00	; 0
    184a:	90 e0       	ldi	r25, 0x00	; 0
    184c:	39 c0       	rjmp	.+114    	; 0x18c0 <fdevopen+0x8a>
    184e:	8b 01       	movw	r16, r22
    1850:	ec 01       	movw	r28, r24
    1852:	6e e0       	ldi	r22, 0x0E	; 14
    1854:	70 e0       	ldi	r23, 0x00	; 0
    1856:	81 e0       	ldi	r24, 0x01	; 1
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	4c d2       	rcall	.+1176   	; 0x1cf4 <calloc>
    185c:	fc 01       	movw	r30, r24
    185e:	89 2b       	or	r24, r25
    1860:	99 f3       	breq	.-26     	; 0x1848 <fdevopen+0x12>
    1862:	80 e8       	ldi	r24, 0x80	; 128
    1864:	83 83       	std	Z+3, r24	; 0x03
    1866:	01 15       	cp	r16, r1
    1868:	11 05       	cpc	r17, r1
    186a:	71 f0       	breq	.+28     	; 0x1888 <fdevopen+0x52>
    186c:	13 87       	std	Z+11, r17	; 0x0b
    186e:	02 87       	std	Z+10, r16	; 0x0a
    1870:	81 e8       	ldi	r24, 0x81	; 129
    1872:	83 83       	std	Z+3, r24	; 0x03
    1874:	80 91 c1 03 	lds	r24, 0x03C1	; 0x8003c1 <__iob>
    1878:	90 91 c2 03 	lds	r25, 0x03C2	; 0x8003c2 <__iob+0x1>
    187c:	89 2b       	or	r24, r25
    187e:	21 f4       	brne	.+8      	; 0x1888 <fdevopen+0x52>
    1880:	f0 93 c2 03 	sts	0x03C2, r31	; 0x8003c2 <__iob+0x1>
    1884:	e0 93 c1 03 	sts	0x03C1, r30	; 0x8003c1 <__iob>
    1888:	20 97       	sbiw	r28, 0x00	; 0
    188a:	c9 f0       	breq	.+50     	; 0x18be <fdevopen+0x88>
    188c:	d1 87       	std	Z+9, r29	; 0x09
    188e:	c0 87       	std	Z+8, r28	; 0x08
    1890:	83 81       	ldd	r24, Z+3	; 0x03
    1892:	82 60       	ori	r24, 0x02	; 2
    1894:	83 83       	std	Z+3, r24	; 0x03
    1896:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <__iob+0x2>
    189a:	90 91 c4 03 	lds	r25, 0x03C4	; 0x8003c4 <__iob+0x3>
    189e:	89 2b       	or	r24, r25
    18a0:	71 f4       	brne	.+28     	; 0x18be <fdevopen+0x88>
    18a2:	f0 93 c4 03 	sts	0x03C4, r31	; 0x8003c4 <__iob+0x3>
    18a6:	e0 93 c3 03 	sts	0x03C3, r30	; 0x8003c3 <__iob+0x2>
    18aa:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <__iob+0x4>
    18ae:	90 91 c6 03 	lds	r25, 0x03C6	; 0x8003c6 <__iob+0x5>
    18b2:	89 2b       	or	r24, r25
    18b4:	21 f4       	brne	.+8      	; 0x18be <fdevopen+0x88>
    18b6:	f0 93 c6 03 	sts	0x03C6, r31	; 0x8003c6 <__iob+0x5>
    18ba:	e0 93 c5 03 	sts	0x03C5, r30	; 0x8003c5 <__iob+0x4>
    18be:	cf 01       	movw	r24, r30
    18c0:	df 91       	pop	r29
    18c2:	cf 91       	pop	r28
    18c4:	1f 91       	pop	r17
    18c6:	0f 91       	pop	r16
    18c8:	08 95       	ret

000018ca <printf>:
    18ca:	cf 93       	push	r28
    18cc:	df 93       	push	r29
    18ce:	cd b7       	in	r28, 0x3d	; 61
    18d0:	de b7       	in	r29, 0x3e	; 62
    18d2:	ae 01       	movw	r20, r28
    18d4:	4a 5f       	subi	r20, 0xFA	; 250
    18d6:	5f 4f       	sbci	r21, 0xFF	; 255
    18d8:	fa 01       	movw	r30, r20
    18da:	61 91       	ld	r22, Z+
    18dc:	71 91       	ld	r23, Z+
    18de:	af 01       	movw	r20, r30
    18e0:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <__iob+0x2>
    18e4:	90 91 c4 03 	lds	r25, 0x03C4	; 0x8003c4 <__iob+0x3>
    18e8:	08 d0       	rcall	.+16     	; 0x18fa <vfprintf>
    18ea:	df 91       	pop	r29
    18ec:	cf 91       	pop	r28
    18ee:	08 95       	ret

000018f0 <putchar>:
    18f0:	60 91 c3 03 	lds	r22, 0x03C3	; 0x8003c3 <__iob+0x2>
    18f4:	70 91 c4 03 	lds	r23, 0x03C4	; 0x8003c4 <__iob+0x3>
    18f8:	65 c3       	rjmp	.+1738   	; 0x1fc4 <fputc>

000018fa <vfprintf>:
    18fa:	2f 92       	push	r2
    18fc:	3f 92       	push	r3
    18fe:	4f 92       	push	r4
    1900:	5f 92       	push	r5
    1902:	6f 92       	push	r6
    1904:	7f 92       	push	r7
    1906:	8f 92       	push	r8
    1908:	9f 92       	push	r9
    190a:	af 92       	push	r10
    190c:	bf 92       	push	r11
    190e:	cf 92       	push	r12
    1910:	df 92       	push	r13
    1912:	ef 92       	push	r14
    1914:	ff 92       	push	r15
    1916:	0f 93       	push	r16
    1918:	1f 93       	push	r17
    191a:	cf 93       	push	r28
    191c:	df 93       	push	r29
    191e:	cd b7       	in	r28, 0x3d	; 61
    1920:	de b7       	in	r29, 0x3e	; 62
    1922:	2b 97       	sbiw	r28, 0x0b	; 11
    1924:	0f b6       	in	r0, 0x3f	; 63
    1926:	f8 94       	cli
    1928:	de bf       	out	0x3e, r29	; 62
    192a:	0f be       	out	0x3f, r0	; 63
    192c:	cd bf       	out	0x3d, r28	; 61
    192e:	6c 01       	movw	r12, r24
    1930:	7b 01       	movw	r14, r22
    1932:	8a 01       	movw	r16, r20
    1934:	fc 01       	movw	r30, r24
    1936:	17 82       	std	Z+7, r1	; 0x07
    1938:	16 82       	std	Z+6, r1	; 0x06
    193a:	83 81       	ldd	r24, Z+3	; 0x03
    193c:	81 ff       	sbrs	r24, 1
    193e:	bf c1       	rjmp	.+894    	; 0x1cbe <vfprintf+0x3c4>
    1940:	ce 01       	movw	r24, r28
    1942:	01 96       	adiw	r24, 0x01	; 1
    1944:	3c 01       	movw	r6, r24
    1946:	f6 01       	movw	r30, r12
    1948:	93 81       	ldd	r25, Z+3	; 0x03
    194a:	f7 01       	movw	r30, r14
    194c:	93 fd       	sbrc	r25, 3
    194e:	85 91       	lpm	r24, Z+
    1950:	93 ff       	sbrs	r25, 3
    1952:	81 91       	ld	r24, Z+
    1954:	7f 01       	movw	r14, r30
    1956:	88 23       	and	r24, r24
    1958:	09 f4       	brne	.+2      	; 0x195c <vfprintf+0x62>
    195a:	ad c1       	rjmp	.+858    	; 0x1cb6 <vfprintf+0x3bc>
    195c:	85 32       	cpi	r24, 0x25	; 37
    195e:	39 f4       	brne	.+14     	; 0x196e <vfprintf+0x74>
    1960:	93 fd       	sbrc	r25, 3
    1962:	85 91       	lpm	r24, Z+
    1964:	93 ff       	sbrs	r25, 3
    1966:	81 91       	ld	r24, Z+
    1968:	7f 01       	movw	r14, r30
    196a:	85 32       	cpi	r24, 0x25	; 37
    196c:	21 f4       	brne	.+8      	; 0x1976 <vfprintf+0x7c>
    196e:	b6 01       	movw	r22, r12
    1970:	90 e0       	ldi	r25, 0x00	; 0
    1972:	28 d3       	rcall	.+1616   	; 0x1fc4 <fputc>
    1974:	e8 cf       	rjmp	.-48     	; 0x1946 <vfprintf+0x4c>
    1976:	91 2c       	mov	r9, r1
    1978:	21 2c       	mov	r2, r1
    197a:	31 2c       	mov	r3, r1
    197c:	ff e1       	ldi	r31, 0x1F	; 31
    197e:	f3 15       	cp	r31, r3
    1980:	d8 f0       	brcs	.+54     	; 0x19b8 <vfprintf+0xbe>
    1982:	8b 32       	cpi	r24, 0x2B	; 43
    1984:	79 f0       	breq	.+30     	; 0x19a4 <vfprintf+0xaa>
    1986:	38 f4       	brcc	.+14     	; 0x1996 <vfprintf+0x9c>
    1988:	80 32       	cpi	r24, 0x20	; 32
    198a:	79 f0       	breq	.+30     	; 0x19aa <vfprintf+0xb0>
    198c:	83 32       	cpi	r24, 0x23	; 35
    198e:	a1 f4       	brne	.+40     	; 0x19b8 <vfprintf+0xbe>
    1990:	23 2d       	mov	r18, r3
    1992:	20 61       	ori	r18, 0x10	; 16
    1994:	1d c0       	rjmp	.+58     	; 0x19d0 <vfprintf+0xd6>
    1996:	8d 32       	cpi	r24, 0x2D	; 45
    1998:	61 f0       	breq	.+24     	; 0x19b2 <vfprintf+0xb8>
    199a:	80 33       	cpi	r24, 0x30	; 48
    199c:	69 f4       	brne	.+26     	; 0x19b8 <vfprintf+0xbe>
    199e:	23 2d       	mov	r18, r3
    19a0:	21 60       	ori	r18, 0x01	; 1
    19a2:	16 c0       	rjmp	.+44     	; 0x19d0 <vfprintf+0xd6>
    19a4:	83 2d       	mov	r24, r3
    19a6:	82 60       	ori	r24, 0x02	; 2
    19a8:	38 2e       	mov	r3, r24
    19aa:	e3 2d       	mov	r30, r3
    19ac:	e4 60       	ori	r30, 0x04	; 4
    19ae:	3e 2e       	mov	r3, r30
    19b0:	2a c0       	rjmp	.+84     	; 0x1a06 <vfprintf+0x10c>
    19b2:	f3 2d       	mov	r31, r3
    19b4:	f8 60       	ori	r31, 0x08	; 8
    19b6:	1d c0       	rjmp	.+58     	; 0x19f2 <vfprintf+0xf8>
    19b8:	37 fc       	sbrc	r3, 7
    19ba:	2d c0       	rjmp	.+90     	; 0x1a16 <vfprintf+0x11c>
    19bc:	20 ed       	ldi	r18, 0xD0	; 208
    19be:	28 0f       	add	r18, r24
    19c0:	2a 30       	cpi	r18, 0x0A	; 10
    19c2:	40 f0       	brcs	.+16     	; 0x19d4 <vfprintf+0xda>
    19c4:	8e 32       	cpi	r24, 0x2E	; 46
    19c6:	b9 f4       	brne	.+46     	; 0x19f6 <vfprintf+0xfc>
    19c8:	36 fc       	sbrc	r3, 6
    19ca:	75 c1       	rjmp	.+746    	; 0x1cb6 <vfprintf+0x3bc>
    19cc:	23 2d       	mov	r18, r3
    19ce:	20 64       	ori	r18, 0x40	; 64
    19d0:	32 2e       	mov	r3, r18
    19d2:	19 c0       	rjmp	.+50     	; 0x1a06 <vfprintf+0x10c>
    19d4:	36 fe       	sbrs	r3, 6
    19d6:	06 c0       	rjmp	.+12     	; 0x19e4 <vfprintf+0xea>
    19d8:	8a e0       	ldi	r24, 0x0A	; 10
    19da:	98 9e       	mul	r9, r24
    19dc:	20 0d       	add	r18, r0
    19de:	11 24       	eor	r1, r1
    19e0:	92 2e       	mov	r9, r18
    19e2:	11 c0       	rjmp	.+34     	; 0x1a06 <vfprintf+0x10c>
    19e4:	ea e0       	ldi	r30, 0x0A	; 10
    19e6:	2e 9e       	mul	r2, r30
    19e8:	20 0d       	add	r18, r0
    19ea:	11 24       	eor	r1, r1
    19ec:	22 2e       	mov	r2, r18
    19ee:	f3 2d       	mov	r31, r3
    19f0:	f0 62       	ori	r31, 0x20	; 32
    19f2:	3f 2e       	mov	r3, r31
    19f4:	08 c0       	rjmp	.+16     	; 0x1a06 <vfprintf+0x10c>
    19f6:	8c 36       	cpi	r24, 0x6C	; 108
    19f8:	21 f4       	brne	.+8      	; 0x1a02 <vfprintf+0x108>
    19fa:	83 2d       	mov	r24, r3
    19fc:	80 68       	ori	r24, 0x80	; 128
    19fe:	38 2e       	mov	r3, r24
    1a00:	02 c0       	rjmp	.+4      	; 0x1a06 <vfprintf+0x10c>
    1a02:	88 36       	cpi	r24, 0x68	; 104
    1a04:	41 f4       	brne	.+16     	; 0x1a16 <vfprintf+0x11c>
    1a06:	f7 01       	movw	r30, r14
    1a08:	93 fd       	sbrc	r25, 3
    1a0a:	85 91       	lpm	r24, Z+
    1a0c:	93 ff       	sbrs	r25, 3
    1a0e:	81 91       	ld	r24, Z+
    1a10:	7f 01       	movw	r14, r30
    1a12:	81 11       	cpse	r24, r1
    1a14:	b3 cf       	rjmp	.-154    	; 0x197c <vfprintf+0x82>
    1a16:	98 2f       	mov	r25, r24
    1a18:	9f 7d       	andi	r25, 0xDF	; 223
    1a1a:	95 54       	subi	r25, 0x45	; 69
    1a1c:	93 30       	cpi	r25, 0x03	; 3
    1a1e:	28 f4       	brcc	.+10     	; 0x1a2a <vfprintf+0x130>
    1a20:	0c 5f       	subi	r16, 0xFC	; 252
    1a22:	1f 4f       	sbci	r17, 0xFF	; 255
    1a24:	9f e3       	ldi	r25, 0x3F	; 63
    1a26:	99 83       	std	Y+1, r25	; 0x01
    1a28:	0d c0       	rjmp	.+26     	; 0x1a44 <vfprintf+0x14a>
    1a2a:	83 36       	cpi	r24, 0x63	; 99
    1a2c:	31 f0       	breq	.+12     	; 0x1a3a <vfprintf+0x140>
    1a2e:	83 37       	cpi	r24, 0x73	; 115
    1a30:	71 f0       	breq	.+28     	; 0x1a4e <vfprintf+0x154>
    1a32:	83 35       	cpi	r24, 0x53	; 83
    1a34:	09 f0       	breq	.+2      	; 0x1a38 <vfprintf+0x13e>
    1a36:	55 c0       	rjmp	.+170    	; 0x1ae2 <vfprintf+0x1e8>
    1a38:	20 c0       	rjmp	.+64     	; 0x1a7a <vfprintf+0x180>
    1a3a:	f8 01       	movw	r30, r16
    1a3c:	80 81       	ld	r24, Z
    1a3e:	89 83       	std	Y+1, r24	; 0x01
    1a40:	0e 5f       	subi	r16, 0xFE	; 254
    1a42:	1f 4f       	sbci	r17, 0xFF	; 255
    1a44:	88 24       	eor	r8, r8
    1a46:	83 94       	inc	r8
    1a48:	91 2c       	mov	r9, r1
    1a4a:	53 01       	movw	r10, r6
    1a4c:	12 c0       	rjmp	.+36     	; 0x1a72 <vfprintf+0x178>
    1a4e:	28 01       	movw	r4, r16
    1a50:	f2 e0       	ldi	r31, 0x02	; 2
    1a52:	4f 0e       	add	r4, r31
    1a54:	51 1c       	adc	r5, r1
    1a56:	f8 01       	movw	r30, r16
    1a58:	a0 80       	ld	r10, Z
    1a5a:	b1 80       	ldd	r11, Z+1	; 0x01
    1a5c:	36 fe       	sbrs	r3, 6
    1a5e:	03 c0       	rjmp	.+6      	; 0x1a66 <vfprintf+0x16c>
    1a60:	69 2d       	mov	r22, r9
    1a62:	70 e0       	ldi	r23, 0x00	; 0
    1a64:	02 c0       	rjmp	.+4      	; 0x1a6a <vfprintf+0x170>
    1a66:	6f ef       	ldi	r22, 0xFF	; 255
    1a68:	7f ef       	ldi	r23, 0xFF	; 255
    1a6a:	c5 01       	movw	r24, r10
    1a6c:	90 d2       	rcall	.+1312   	; 0x1f8e <strnlen>
    1a6e:	4c 01       	movw	r8, r24
    1a70:	82 01       	movw	r16, r4
    1a72:	f3 2d       	mov	r31, r3
    1a74:	ff 77       	andi	r31, 0x7F	; 127
    1a76:	3f 2e       	mov	r3, r31
    1a78:	15 c0       	rjmp	.+42     	; 0x1aa4 <vfprintf+0x1aa>
    1a7a:	28 01       	movw	r4, r16
    1a7c:	22 e0       	ldi	r18, 0x02	; 2
    1a7e:	42 0e       	add	r4, r18
    1a80:	51 1c       	adc	r5, r1
    1a82:	f8 01       	movw	r30, r16
    1a84:	a0 80       	ld	r10, Z
    1a86:	b1 80       	ldd	r11, Z+1	; 0x01
    1a88:	36 fe       	sbrs	r3, 6
    1a8a:	03 c0       	rjmp	.+6      	; 0x1a92 <vfprintf+0x198>
    1a8c:	69 2d       	mov	r22, r9
    1a8e:	70 e0       	ldi	r23, 0x00	; 0
    1a90:	02 c0       	rjmp	.+4      	; 0x1a96 <vfprintf+0x19c>
    1a92:	6f ef       	ldi	r22, 0xFF	; 255
    1a94:	7f ef       	ldi	r23, 0xFF	; 255
    1a96:	c5 01       	movw	r24, r10
    1a98:	68 d2       	rcall	.+1232   	; 0x1f6a <strnlen_P>
    1a9a:	4c 01       	movw	r8, r24
    1a9c:	f3 2d       	mov	r31, r3
    1a9e:	f0 68       	ori	r31, 0x80	; 128
    1aa0:	3f 2e       	mov	r3, r31
    1aa2:	82 01       	movw	r16, r4
    1aa4:	33 fc       	sbrc	r3, 3
    1aa6:	19 c0       	rjmp	.+50     	; 0x1ada <vfprintf+0x1e0>
    1aa8:	82 2d       	mov	r24, r2
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	88 16       	cp	r8, r24
    1aae:	99 06       	cpc	r9, r25
    1ab0:	a0 f4       	brcc	.+40     	; 0x1ada <vfprintf+0x1e0>
    1ab2:	b6 01       	movw	r22, r12
    1ab4:	80 e2       	ldi	r24, 0x20	; 32
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	85 d2       	rcall	.+1290   	; 0x1fc4 <fputc>
    1aba:	2a 94       	dec	r2
    1abc:	f5 cf       	rjmp	.-22     	; 0x1aa8 <vfprintf+0x1ae>
    1abe:	f5 01       	movw	r30, r10
    1ac0:	37 fc       	sbrc	r3, 7
    1ac2:	85 91       	lpm	r24, Z+
    1ac4:	37 fe       	sbrs	r3, 7
    1ac6:	81 91       	ld	r24, Z+
    1ac8:	5f 01       	movw	r10, r30
    1aca:	b6 01       	movw	r22, r12
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	7a d2       	rcall	.+1268   	; 0x1fc4 <fputc>
    1ad0:	21 10       	cpse	r2, r1
    1ad2:	2a 94       	dec	r2
    1ad4:	21 e0       	ldi	r18, 0x01	; 1
    1ad6:	82 1a       	sub	r8, r18
    1ad8:	91 08       	sbc	r9, r1
    1ada:	81 14       	cp	r8, r1
    1adc:	91 04       	cpc	r9, r1
    1ade:	79 f7       	brne	.-34     	; 0x1abe <vfprintf+0x1c4>
    1ae0:	e1 c0       	rjmp	.+450    	; 0x1ca4 <vfprintf+0x3aa>
    1ae2:	84 36       	cpi	r24, 0x64	; 100
    1ae4:	11 f0       	breq	.+4      	; 0x1aea <vfprintf+0x1f0>
    1ae6:	89 36       	cpi	r24, 0x69	; 105
    1ae8:	39 f5       	brne	.+78     	; 0x1b38 <vfprintf+0x23e>
    1aea:	f8 01       	movw	r30, r16
    1aec:	37 fe       	sbrs	r3, 7
    1aee:	07 c0       	rjmp	.+14     	; 0x1afe <vfprintf+0x204>
    1af0:	60 81       	ld	r22, Z
    1af2:	71 81       	ldd	r23, Z+1	; 0x01
    1af4:	82 81       	ldd	r24, Z+2	; 0x02
    1af6:	93 81       	ldd	r25, Z+3	; 0x03
    1af8:	0c 5f       	subi	r16, 0xFC	; 252
    1afa:	1f 4f       	sbci	r17, 0xFF	; 255
    1afc:	08 c0       	rjmp	.+16     	; 0x1b0e <vfprintf+0x214>
    1afe:	60 81       	ld	r22, Z
    1b00:	71 81       	ldd	r23, Z+1	; 0x01
    1b02:	07 2e       	mov	r0, r23
    1b04:	00 0c       	add	r0, r0
    1b06:	88 0b       	sbc	r24, r24
    1b08:	99 0b       	sbc	r25, r25
    1b0a:	0e 5f       	subi	r16, 0xFE	; 254
    1b0c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b0e:	f3 2d       	mov	r31, r3
    1b10:	ff 76       	andi	r31, 0x6F	; 111
    1b12:	3f 2e       	mov	r3, r31
    1b14:	97 ff       	sbrs	r25, 7
    1b16:	09 c0       	rjmp	.+18     	; 0x1b2a <vfprintf+0x230>
    1b18:	90 95       	com	r25
    1b1a:	80 95       	com	r24
    1b1c:	70 95       	com	r23
    1b1e:	61 95       	neg	r22
    1b20:	7f 4f       	sbci	r23, 0xFF	; 255
    1b22:	8f 4f       	sbci	r24, 0xFF	; 255
    1b24:	9f 4f       	sbci	r25, 0xFF	; 255
    1b26:	f0 68       	ori	r31, 0x80	; 128
    1b28:	3f 2e       	mov	r3, r31
    1b2a:	2a e0       	ldi	r18, 0x0A	; 10
    1b2c:	30 e0       	ldi	r19, 0x00	; 0
    1b2e:	a3 01       	movw	r20, r6
    1b30:	85 d2       	rcall	.+1290   	; 0x203c <__ultoa_invert>
    1b32:	88 2e       	mov	r8, r24
    1b34:	86 18       	sub	r8, r6
    1b36:	44 c0       	rjmp	.+136    	; 0x1bc0 <vfprintf+0x2c6>
    1b38:	85 37       	cpi	r24, 0x75	; 117
    1b3a:	31 f4       	brne	.+12     	; 0x1b48 <vfprintf+0x24e>
    1b3c:	23 2d       	mov	r18, r3
    1b3e:	2f 7e       	andi	r18, 0xEF	; 239
    1b40:	b2 2e       	mov	r11, r18
    1b42:	2a e0       	ldi	r18, 0x0A	; 10
    1b44:	30 e0       	ldi	r19, 0x00	; 0
    1b46:	25 c0       	rjmp	.+74     	; 0x1b92 <vfprintf+0x298>
    1b48:	93 2d       	mov	r25, r3
    1b4a:	99 7f       	andi	r25, 0xF9	; 249
    1b4c:	b9 2e       	mov	r11, r25
    1b4e:	8f 36       	cpi	r24, 0x6F	; 111
    1b50:	c1 f0       	breq	.+48     	; 0x1b82 <vfprintf+0x288>
    1b52:	18 f4       	brcc	.+6      	; 0x1b5a <vfprintf+0x260>
    1b54:	88 35       	cpi	r24, 0x58	; 88
    1b56:	79 f0       	breq	.+30     	; 0x1b76 <vfprintf+0x27c>
    1b58:	ae c0       	rjmp	.+348    	; 0x1cb6 <vfprintf+0x3bc>
    1b5a:	80 37       	cpi	r24, 0x70	; 112
    1b5c:	19 f0       	breq	.+6      	; 0x1b64 <vfprintf+0x26a>
    1b5e:	88 37       	cpi	r24, 0x78	; 120
    1b60:	21 f0       	breq	.+8      	; 0x1b6a <vfprintf+0x270>
    1b62:	a9 c0       	rjmp	.+338    	; 0x1cb6 <vfprintf+0x3bc>
    1b64:	e9 2f       	mov	r30, r25
    1b66:	e0 61       	ori	r30, 0x10	; 16
    1b68:	be 2e       	mov	r11, r30
    1b6a:	b4 fe       	sbrs	r11, 4
    1b6c:	0d c0       	rjmp	.+26     	; 0x1b88 <vfprintf+0x28e>
    1b6e:	fb 2d       	mov	r31, r11
    1b70:	f4 60       	ori	r31, 0x04	; 4
    1b72:	bf 2e       	mov	r11, r31
    1b74:	09 c0       	rjmp	.+18     	; 0x1b88 <vfprintf+0x28e>
    1b76:	34 fe       	sbrs	r3, 4
    1b78:	0a c0       	rjmp	.+20     	; 0x1b8e <vfprintf+0x294>
    1b7a:	29 2f       	mov	r18, r25
    1b7c:	26 60       	ori	r18, 0x06	; 6
    1b7e:	b2 2e       	mov	r11, r18
    1b80:	06 c0       	rjmp	.+12     	; 0x1b8e <vfprintf+0x294>
    1b82:	28 e0       	ldi	r18, 0x08	; 8
    1b84:	30 e0       	ldi	r19, 0x00	; 0
    1b86:	05 c0       	rjmp	.+10     	; 0x1b92 <vfprintf+0x298>
    1b88:	20 e1       	ldi	r18, 0x10	; 16
    1b8a:	30 e0       	ldi	r19, 0x00	; 0
    1b8c:	02 c0       	rjmp	.+4      	; 0x1b92 <vfprintf+0x298>
    1b8e:	20 e1       	ldi	r18, 0x10	; 16
    1b90:	32 e0       	ldi	r19, 0x02	; 2
    1b92:	f8 01       	movw	r30, r16
    1b94:	b7 fe       	sbrs	r11, 7
    1b96:	07 c0       	rjmp	.+14     	; 0x1ba6 <vfprintf+0x2ac>
    1b98:	60 81       	ld	r22, Z
    1b9a:	71 81       	ldd	r23, Z+1	; 0x01
    1b9c:	82 81       	ldd	r24, Z+2	; 0x02
    1b9e:	93 81       	ldd	r25, Z+3	; 0x03
    1ba0:	0c 5f       	subi	r16, 0xFC	; 252
    1ba2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba4:	06 c0       	rjmp	.+12     	; 0x1bb2 <vfprintf+0x2b8>
    1ba6:	60 81       	ld	r22, Z
    1ba8:	71 81       	ldd	r23, Z+1	; 0x01
    1baa:	80 e0       	ldi	r24, 0x00	; 0
    1bac:	90 e0       	ldi	r25, 0x00	; 0
    1bae:	0e 5f       	subi	r16, 0xFE	; 254
    1bb0:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb2:	a3 01       	movw	r20, r6
    1bb4:	43 d2       	rcall	.+1158   	; 0x203c <__ultoa_invert>
    1bb6:	88 2e       	mov	r8, r24
    1bb8:	86 18       	sub	r8, r6
    1bba:	fb 2d       	mov	r31, r11
    1bbc:	ff 77       	andi	r31, 0x7F	; 127
    1bbe:	3f 2e       	mov	r3, r31
    1bc0:	36 fe       	sbrs	r3, 6
    1bc2:	0d c0       	rjmp	.+26     	; 0x1bde <vfprintf+0x2e4>
    1bc4:	23 2d       	mov	r18, r3
    1bc6:	2e 7f       	andi	r18, 0xFE	; 254
    1bc8:	a2 2e       	mov	r10, r18
    1bca:	89 14       	cp	r8, r9
    1bcc:	58 f4       	brcc	.+22     	; 0x1be4 <vfprintf+0x2ea>
    1bce:	34 fe       	sbrs	r3, 4
    1bd0:	0b c0       	rjmp	.+22     	; 0x1be8 <vfprintf+0x2ee>
    1bd2:	32 fc       	sbrc	r3, 2
    1bd4:	09 c0       	rjmp	.+18     	; 0x1be8 <vfprintf+0x2ee>
    1bd6:	83 2d       	mov	r24, r3
    1bd8:	8e 7e       	andi	r24, 0xEE	; 238
    1bda:	a8 2e       	mov	r10, r24
    1bdc:	05 c0       	rjmp	.+10     	; 0x1be8 <vfprintf+0x2ee>
    1bde:	b8 2c       	mov	r11, r8
    1be0:	a3 2c       	mov	r10, r3
    1be2:	03 c0       	rjmp	.+6      	; 0x1bea <vfprintf+0x2f0>
    1be4:	b8 2c       	mov	r11, r8
    1be6:	01 c0       	rjmp	.+2      	; 0x1bea <vfprintf+0x2f0>
    1be8:	b9 2c       	mov	r11, r9
    1bea:	a4 fe       	sbrs	r10, 4
    1bec:	0f c0       	rjmp	.+30     	; 0x1c0c <vfprintf+0x312>
    1bee:	fe 01       	movw	r30, r28
    1bf0:	e8 0d       	add	r30, r8
    1bf2:	f1 1d       	adc	r31, r1
    1bf4:	80 81       	ld	r24, Z
    1bf6:	80 33       	cpi	r24, 0x30	; 48
    1bf8:	21 f4       	brne	.+8      	; 0x1c02 <vfprintf+0x308>
    1bfa:	9a 2d       	mov	r25, r10
    1bfc:	99 7e       	andi	r25, 0xE9	; 233
    1bfe:	a9 2e       	mov	r10, r25
    1c00:	09 c0       	rjmp	.+18     	; 0x1c14 <vfprintf+0x31a>
    1c02:	a2 fe       	sbrs	r10, 2
    1c04:	06 c0       	rjmp	.+12     	; 0x1c12 <vfprintf+0x318>
    1c06:	b3 94       	inc	r11
    1c08:	b3 94       	inc	r11
    1c0a:	04 c0       	rjmp	.+8      	; 0x1c14 <vfprintf+0x31a>
    1c0c:	8a 2d       	mov	r24, r10
    1c0e:	86 78       	andi	r24, 0x86	; 134
    1c10:	09 f0       	breq	.+2      	; 0x1c14 <vfprintf+0x31a>
    1c12:	b3 94       	inc	r11
    1c14:	a3 fc       	sbrc	r10, 3
    1c16:	10 c0       	rjmp	.+32     	; 0x1c38 <vfprintf+0x33e>
    1c18:	a0 fe       	sbrs	r10, 0
    1c1a:	06 c0       	rjmp	.+12     	; 0x1c28 <vfprintf+0x32e>
    1c1c:	b2 14       	cp	r11, r2
    1c1e:	80 f4       	brcc	.+32     	; 0x1c40 <vfprintf+0x346>
    1c20:	28 0c       	add	r2, r8
    1c22:	92 2c       	mov	r9, r2
    1c24:	9b 18       	sub	r9, r11
    1c26:	0d c0       	rjmp	.+26     	; 0x1c42 <vfprintf+0x348>
    1c28:	b2 14       	cp	r11, r2
    1c2a:	58 f4       	brcc	.+22     	; 0x1c42 <vfprintf+0x348>
    1c2c:	b6 01       	movw	r22, r12
    1c2e:	80 e2       	ldi	r24, 0x20	; 32
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	c8 d1       	rcall	.+912    	; 0x1fc4 <fputc>
    1c34:	b3 94       	inc	r11
    1c36:	f8 cf       	rjmp	.-16     	; 0x1c28 <vfprintf+0x32e>
    1c38:	b2 14       	cp	r11, r2
    1c3a:	18 f4       	brcc	.+6      	; 0x1c42 <vfprintf+0x348>
    1c3c:	2b 18       	sub	r2, r11
    1c3e:	02 c0       	rjmp	.+4      	; 0x1c44 <vfprintf+0x34a>
    1c40:	98 2c       	mov	r9, r8
    1c42:	21 2c       	mov	r2, r1
    1c44:	a4 fe       	sbrs	r10, 4
    1c46:	0f c0       	rjmp	.+30     	; 0x1c66 <vfprintf+0x36c>
    1c48:	b6 01       	movw	r22, r12
    1c4a:	80 e3       	ldi	r24, 0x30	; 48
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	ba d1       	rcall	.+884    	; 0x1fc4 <fputc>
    1c50:	a2 fe       	sbrs	r10, 2
    1c52:	16 c0       	rjmp	.+44     	; 0x1c80 <vfprintf+0x386>
    1c54:	a1 fc       	sbrc	r10, 1
    1c56:	03 c0       	rjmp	.+6      	; 0x1c5e <vfprintf+0x364>
    1c58:	88 e7       	ldi	r24, 0x78	; 120
    1c5a:	90 e0       	ldi	r25, 0x00	; 0
    1c5c:	02 c0       	rjmp	.+4      	; 0x1c62 <vfprintf+0x368>
    1c5e:	88 e5       	ldi	r24, 0x58	; 88
    1c60:	90 e0       	ldi	r25, 0x00	; 0
    1c62:	b6 01       	movw	r22, r12
    1c64:	0c c0       	rjmp	.+24     	; 0x1c7e <vfprintf+0x384>
    1c66:	8a 2d       	mov	r24, r10
    1c68:	86 78       	andi	r24, 0x86	; 134
    1c6a:	51 f0       	breq	.+20     	; 0x1c80 <vfprintf+0x386>
    1c6c:	a1 fe       	sbrs	r10, 1
    1c6e:	02 c0       	rjmp	.+4      	; 0x1c74 <vfprintf+0x37a>
    1c70:	8b e2       	ldi	r24, 0x2B	; 43
    1c72:	01 c0       	rjmp	.+2      	; 0x1c76 <vfprintf+0x37c>
    1c74:	80 e2       	ldi	r24, 0x20	; 32
    1c76:	a7 fc       	sbrc	r10, 7
    1c78:	8d e2       	ldi	r24, 0x2D	; 45
    1c7a:	b6 01       	movw	r22, r12
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	a2 d1       	rcall	.+836    	; 0x1fc4 <fputc>
    1c80:	89 14       	cp	r8, r9
    1c82:	30 f4       	brcc	.+12     	; 0x1c90 <vfprintf+0x396>
    1c84:	b6 01       	movw	r22, r12
    1c86:	80 e3       	ldi	r24, 0x30	; 48
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	9c d1       	rcall	.+824    	; 0x1fc4 <fputc>
    1c8c:	9a 94       	dec	r9
    1c8e:	f8 cf       	rjmp	.-16     	; 0x1c80 <vfprintf+0x386>
    1c90:	8a 94       	dec	r8
    1c92:	f3 01       	movw	r30, r6
    1c94:	e8 0d       	add	r30, r8
    1c96:	f1 1d       	adc	r31, r1
    1c98:	80 81       	ld	r24, Z
    1c9a:	b6 01       	movw	r22, r12
    1c9c:	90 e0       	ldi	r25, 0x00	; 0
    1c9e:	92 d1       	rcall	.+804    	; 0x1fc4 <fputc>
    1ca0:	81 10       	cpse	r8, r1
    1ca2:	f6 cf       	rjmp	.-20     	; 0x1c90 <vfprintf+0x396>
    1ca4:	22 20       	and	r2, r2
    1ca6:	09 f4       	brne	.+2      	; 0x1caa <vfprintf+0x3b0>
    1ca8:	4e ce       	rjmp	.-868    	; 0x1946 <vfprintf+0x4c>
    1caa:	b6 01       	movw	r22, r12
    1cac:	80 e2       	ldi	r24, 0x20	; 32
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	89 d1       	rcall	.+786    	; 0x1fc4 <fputc>
    1cb2:	2a 94       	dec	r2
    1cb4:	f7 cf       	rjmp	.-18     	; 0x1ca4 <vfprintf+0x3aa>
    1cb6:	f6 01       	movw	r30, r12
    1cb8:	86 81       	ldd	r24, Z+6	; 0x06
    1cba:	97 81       	ldd	r25, Z+7	; 0x07
    1cbc:	02 c0       	rjmp	.+4      	; 0x1cc2 <vfprintf+0x3c8>
    1cbe:	8f ef       	ldi	r24, 0xFF	; 255
    1cc0:	9f ef       	ldi	r25, 0xFF	; 255
    1cc2:	2b 96       	adiw	r28, 0x0b	; 11
    1cc4:	0f b6       	in	r0, 0x3f	; 63
    1cc6:	f8 94       	cli
    1cc8:	de bf       	out	0x3e, r29	; 62
    1cca:	0f be       	out	0x3f, r0	; 63
    1ccc:	cd bf       	out	0x3d, r28	; 61
    1cce:	df 91       	pop	r29
    1cd0:	cf 91       	pop	r28
    1cd2:	1f 91       	pop	r17
    1cd4:	0f 91       	pop	r16
    1cd6:	ff 90       	pop	r15
    1cd8:	ef 90       	pop	r14
    1cda:	df 90       	pop	r13
    1cdc:	cf 90       	pop	r12
    1cde:	bf 90       	pop	r11
    1ce0:	af 90       	pop	r10
    1ce2:	9f 90       	pop	r9
    1ce4:	8f 90       	pop	r8
    1ce6:	7f 90       	pop	r7
    1ce8:	6f 90       	pop	r6
    1cea:	5f 90       	pop	r5
    1cec:	4f 90       	pop	r4
    1cee:	3f 90       	pop	r3
    1cf0:	2f 90       	pop	r2
    1cf2:	08 95       	ret

00001cf4 <calloc>:
    1cf4:	0f 93       	push	r16
    1cf6:	1f 93       	push	r17
    1cf8:	cf 93       	push	r28
    1cfa:	df 93       	push	r29
    1cfc:	86 9f       	mul	r24, r22
    1cfe:	80 01       	movw	r16, r0
    1d00:	87 9f       	mul	r24, r23
    1d02:	10 0d       	add	r17, r0
    1d04:	96 9f       	mul	r25, r22
    1d06:	10 0d       	add	r17, r0
    1d08:	11 24       	eor	r1, r1
    1d0a:	c8 01       	movw	r24, r16
    1d0c:	0d d0       	rcall	.+26     	; 0x1d28 <malloc>
    1d0e:	ec 01       	movw	r28, r24
    1d10:	00 97       	sbiw	r24, 0x00	; 0
    1d12:	21 f0       	breq	.+8      	; 0x1d1c <calloc+0x28>
    1d14:	a8 01       	movw	r20, r16
    1d16:	60 e0       	ldi	r22, 0x00	; 0
    1d18:	70 e0       	ldi	r23, 0x00	; 0
    1d1a:	32 d1       	rcall	.+612    	; 0x1f80 <memset>
    1d1c:	ce 01       	movw	r24, r28
    1d1e:	df 91       	pop	r29
    1d20:	cf 91       	pop	r28
    1d22:	1f 91       	pop	r17
    1d24:	0f 91       	pop	r16
    1d26:	08 95       	ret

00001d28 <malloc>:
    1d28:	0f 93       	push	r16
    1d2a:	1f 93       	push	r17
    1d2c:	cf 93       	push	r28
    1d2e:	df 93       	push	r29
    1d30:	82 30       	cpi	r24, 0x02	; 2
    1d32:	91 05       	cpc	r25, r1
    1d34:	10 f4       	brcc	.+4      	; 0x1d3a <malloc+0x12>
    1d36:	82 e0       	ldi	r24, 0x02	; 2
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	e0 91 c9 03 	lds	r30, 0x03C9	; 0x8003c9 <__flp>
    1d3e:	f0 91 ca 03 	lds	r31, 0x03CA	; 0x8003ca <__flp+0x1>
    1d42:	20 e0       	ldi	r18, 0x00	; 0
    1d44:	30 e0       	ldi	r19, 0x00	; 0
    1d46:	a0 e0       	ldi	r26, 0x00	; 0
    1d48:	b0 e0       	ldi	r27, 0x00	; 0
    1d4a:	30 97       	sbiw	r30, 0x00	; 0
    1d4c:	19 f1       	breq	.+70     	; 0x1d94 <malloc+0x6c>
    1d4e:	40 81       	ld	r20, Z
    1d50:	51 81       	ldd	r21, Z+1	; 0x01
    1d52:	02 81       	ldd	r16, Z+2	; 0x02
    1d54:	13 81       	ldd	r17, Z+3	; 0x03
    1d56:	48 17       	cp	r20, r24
    1d58:	59 07       	cpc	r21, r25
    1d5a:	c8 f0       	brcs	.+50     	; 0x1d8e <malloc+0x66>
    1d5c:	84 17       	cp	r24, r20
    1d5e:	95 07       	cpc	r25, r21
    1d60:	69 f4       	brne	.+26     	; 0x1d7c <malloc+0x54>
    1d62:	10 97       	sbiw	r26, 0x00	; 0
    1d64:	31 f0       	breq	.+12     	; 0x1d72 <malloc+0x4a>
    1d66:	12 96       	adiw	r26, 0x02	; 2
    1d68:	0c 93       	st	X, r16
    1d6a:	12 97       	sbiw	r26, 0x02	; 2
    1d6c:	13 96       	adiw	r26, 0x03	; 3
    1d6e:	1c 93       	st	X, r17
    1d70:	27 c0       	rjmp	.+78     	; 0x1dc0 <malloc+0x98>
    1d72:	00 93 c9 03 	sts	0x03C9, r16	; 0x8003c9 <__flp>
    1d76:	10 93 ca 03 	sts	0x03CA, r17	; 0x8003ca <__flp+0x1>
    1d7a:	22 c0       	rjmp	.+68     	; 0x1dc0 <malloc+0x98>
    1d7c:	21 15       	cp	r18, r1
    1d7e:	31 05       	cpc	r19, r1
    1d80:	19 f0       	breq	.+6      	; 0x1d88 <malloc+0x60>
    1d82:	42 17       	cp	r20, r18
    1d84:	53 07       	cpc	r21, r19
    1d86:	18 f4       	brcc	.+6      	; 0x1d8e <malloc+0x66>
    1d88:	9a 01       	movw	r18, r20
    1d8a:	bd 01       	movw	r22, r26
    1d8c:	ef 01       	movw	r28, r30
    1d8e:	df 01       	movw	r26, r30
    1d90:	f8 01       	movw	r30, r16
    1d92:	db cf       	rjmp	.-74     	; 0x1d4a <malloc+0x22>
    1d94:	21 15       	cp	r18, r1
    1d96:	31 05       	cpc	r19, r1
    1d98:	f9 f0       	breq	.+62     	; 0x1dd8 <malloc+0xb0>
    1d9a:	28 1b       	sub	r18, r24
    1d9c:	39 0b       	sbc	r19, r25
    1d9e:	24 30       	cpi	r18, 0x04	; 4
    1da0:	31 05       	cpc	r19, r1
    1da2:	80 f4       	brcc	.+32     	; 0x1dc4 <malloc+0x9c>
    1da4:	8a 81       	ldd	r24, Y+2	; 0x02
    1da6:	9b 81       	ldd	r25, Y+3	; 0x03
    1da8:	61 15       	cp	r22, r1
    1daa:	71 05       	cpc	r23, r1
    1dac:	21 f0       	breq	.+8      	; 0x1db6 <malloc+0x8e>
    1dae:	fb 01       	movw	r30, r22
    1db0:	93 83       	std	Z+3, r25	; 0x03
    1db2:	82 83       	std	Z+2, r24	; 0x02
    1db4:	04 c0       	rjmp	.+8      	; 0x1dbe <malloc+0x96>
    1db6:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <__flp+0x1>
    1dba:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <__flp>
    1dbe:	fe 01       	movw	r30, r28
    1dc0:	32 96       	adiw	r30, 0x02	; 2
    1dc2:	44 c0       	rjmp	.+136    	; 0x1e4c <malloc+0x124>
    1dc4:	fe 01       	movw	r30, r28
    1dc6:	e2 0f       	add	r30, r18
    1dc8:	f3 1f       	adc	r31, r19
    1dca:	81 93       	st	Z+, r24
    1dcc:	91 93       	st	Z+, r25
    1dce:	22 50       	subi	r18, 0x02	; 2
    1dd0:	31 09       	sbc	r19, r1
    1dd2:	39 83       	std	Y+1, r19	; 0x01
    1dd4:	28 83       	st	Y, r18
    1dd6:	3a c0       	rjmp	.+116    	; 0x1e4c <malloc+0x124>
    1dd8:	20 91 c7 03 	lds	r18, 0x03C7	; 0x8003c7 <__brkval>
    1ddc:	30 91 c8 03 	lds	r19, 0x03C8	; 0x8003c8 <__brkval+0x1>
    1de0:	23 2b       	or	r18, r19
    1de2:	41 f4       	brne	.+16     	; 0x1df4 <malloc+0xcc>
    1de4:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1de8:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    1dec:	30 93 c8 03 	sts	0x03C8, r19	; 0x8003c8 <__brkval+0x1>
    1df0:	20 93 c7 03 	sts	0x03C7, r18	; 0x8003c7 <__brkval>
    1df4:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1df8:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    1dfc:	21 15       	cp	r18, r1
    1dfe:	31 05       	cpc	r19, r1
    1e00:	41 f4       	brne	.+16     	; 0x1e12 <malloc+0xea>
    1e02:	2d b7       	in	r18, 0x3d	; 61
    1e04:	3e b7       	in	r19, 0x3e	; 62
    1e06:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1e0a:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    1e0e:	24 1b       	sub	r18, r20
    1e10:	35 0b       	sbc	r19, r21
    1e12:	e0 91 c7 03 	lds	r30, 0x03C7	; 0x8003c7 <__brkval>
    1e16:	f0 91 c8 03 	lds	r31, 0x03C8	; 0x8003c8 <__brkval+0x1>
    1e1a:	e2 17       	cp	r30, r18
    1e1c:	f3 07       	cpc	r31, r19
    1e1e:	a0 f4       	brcc	.+40     	; 0x1e48 <malloc+0x120>
    1e20:	2e 1b       	sub	r18, r30
    1e22:	3f 0b       	sbc	r19, r31
    1e24:	28 17       	cp	r18, r24
    1e26:	39 07       	cpc	r19, r25
    1e28:	78 f0       	brcs	.+30     	; 0x1e48 <malloc+0x120>
    1e2a:	ac 01       	movw	r20, r24
    1e2c:	4e 5f       	subi	r20, 0xFE	; 254
    1e2e:	5f 4f       	sbci	r21, 0xFF	; 255
    1e30:	24 17       	cp	r18, r20
    1e32:	35 07       	cpc	r19, r21
    1e34:	48 f0       	brcs	.+18     	; 0x1e48 <malloc+0x120>
    1e36:	4e 0f       	add	r20, r30
    1e38:	5f 1f       	adc	r21, r31
    1e3a:	50 93 c8 03 	sts	0x03C8, r21	; 0x8003c8 <__brkval+0x1>
    1e3e:	40 93 c7 03 	sts	0x03C7, r20	; 0x8003c7 <__brkval>
    1e42:	81 93       	st	Z+, r24
    1e44:	91 93       	st	Z+, r25
    1e46:	02 c0       	rjmp	.+4      	; 0x1e4c <malloc+0x124>
    1e48:	e0 e0       	ldi	r30, 0x00	; 0
    1e4a:	f0 e0       	ldi	r31, 0x00	; 0
    1e4c:	cf 01       	movw	r24, r30
    1e4e:	df 91       	pop	r29
    1e50:	cf 91       	pop	r28
    1e52:	1f 91       	pop	r17
    1e54:	0f 91       	pop	r16
    1e56:	08 95       	ret

00001e58 <free>:
    1e58:	cf 93       	push	r28
    1e5a:	df 93       	push	r29
    1e5c:	00 97       	sbiw	r24, 0x00	; 0
    1e5e:	09 f4       	brne	.+2      	; 0x1e62 <free+0xa>
    1e60:	81 c0       	rjmp	.+258    	; 0x1f64 <free+0x10c>
    1e62:	fc 01       	movw	r30, r24
    1e64:	32 97       	sbiw	r30, 0x02	; 2
    1e66:	13 82       	std	Z+3, r1	; 0x03
    1e68:	12 82       	std	Z+2, r1	; 0x02
    1e6a:	a0 91 c9 03 	lds	r26, 0x03C9	; 0x8003c9 <__flp>
    1e6e:	b0 91 ca 03 	lds	r27, 0x03CA	; 0x8003ca <__flp+0x1>
    1e72:	10 97       	sbiw	r26, 0x00	; 0
    1e74:	81 f4       	brne	.+32     	; 0x1e96 <free+0x3e>
    1e76:	20 81       	ld	r18, Z
    1e78:	31 81       	ldd	r19, Z+1	; 0x01
    1e7a:	82 0f       	add	r24, r18
    1e7c:	93 1f       	adc	r25, r19
    1e7e:	20 91 c7 03 	lds	r18, 0x03C7	; 0x8003c7 <__brkval>
    1e82:	30 91 c8 03 	lds	r19, 0x03C8	; 0x8003c8 <__brkval+0x1>
    1e86:	28 17       	cp	r18, r24
    1e88:	39 07       	cpc	r19, r25
    1e8a:	51 f5       	brne	.+84     	; 0x1ee0 <free+0x88>
    1e8c:	f0 93 c8 03 	sts	0x03C8, r31	; 0x8003c8 <__brkval+0x1>
    1e90:	e0 93 c7 03 	sts	0x03C7, r30	; 0x8003c7 <__brkval>
    1e94:	67 c0       	rjmp	.+206    	; 0x1f64 <free+0x10c>
    1e96:	ed 01       	movw	r28, r26
    1e98:	20 e0       	ldi	r18, 0x00	; 0
    1e9a:	30 e0       	ldi	r19, 0x00	; 0
    1e9c:	ce 17       	cp	r28, r30
    1e9e:	df 07       	cpc	r29, r31
    1ea0:	40 f4       	brcc	.+16     	; 0x1eb2 <free+0x5a>
    1ea2:	4a 81       	ldd	r20, Y+2	; 0x02
    1ea4:	5b 81       	ldd	r21, Y+3	; 0x03
    1ea6:	9e 01       	movw	r18, r28
    1ea8:	41 15       	cp	r20, r1
    1eaa:	51 05       	cpc	r21, r1
    1eac:	f1 f0       	breq	.+60     	; 0x1eea <free+0x92>
    1eae:	ea 01       	movw	r28, r20
    1eb0:	f5 cf       	rjmp	.-22     	; 0x1e9c <free+0x44>
    1eb2:	d3 83       	std	Z+3, r29	; 0x03
    1eb4:	c2 83       	std	Z+2, r28	; 0x02
    1eb6:	40 81       	ld	r20, Z
    1eb8:	51 81       	ldd	r21, Z+1	; 0x01
    1eba:	84 0f       	add	r24, r20
    1ebc:	95 1f       	adc	r25, r21
    1ebe:	c8 17       	cp	r28, r24
    1ec0:	d9 07       	cpc	r29, r25
    1ec2:	59 f4       	brne	.+22     	; 0x1eda <free+0x82>
    1ec4:	88 81       	ld	r24, Y
    1ec6:	99 81       	ldd	r25, Y+1	; 0x01
    1ec8:	84 0f       	add	r24, r20
    1eca:	95 1f       	adc	r25, r21
    1ecc:	02 96       	adiw	r24, 0x02	; 2
    1ece:	91 83       	std	Z+1, r25	; 0x01
    1ed0:	80 83       	st	Z, r24
    1ed2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed4:	9b 81       	ldd	r25, Y+3	; 0x03
    1ed6:	93 83       	std	Z+3, r25	; 0x03
    1ed8:	82 83       	std	Z+2, r24	; 0x02
    1eda:	21 15       	cp	r18, r1
    1edc:	31 05       	cpc	r19, r1
    1ede:	29 f4       	brne	.+10     	; 0x1eea <free+0x92>
    1ee0:	f0 93 ca 03 	sts	0x03CA, r31	; 0x8003ca <__flp+0x1>
    1ee4:	e0 93 c9 03 	sts	0x03C9, r30	; 0x8003c9 <__flp>
    1ee8:	3d c0       	rjmp	.+122    	; 0x1f64 <free+0x10c>
    1eea:	e9 01       	movw	r28, r18
    1eec:	fb 83       	std	Y+3, r31	; 0x03
    1eee:	ea 83       	std	Y+2, r30	; 0x02
    1ef0:	49 91       	ld	r20, Y+
    1ef2:	59 91       	ld	r21, Y+
    1ef4:	c4 0f       	add	r28, r20
    1ef6:	d5 1f       	adc	r29, r21
    1ef8:	ec 17       	cp	r30, r28
    1efa:	fd 07       	cpc	r31, r29
    1efc:	61 f4       	brne	.+24     	; 0x1f16 <free+0xbe>
    1efe:	80 81       	ld	r24, Z
    1f00:	91 81       	ldd	r25, Z+1	; 0x01
    1f02:	84 0f       	add	r24, r20
    1f04:	95 1f       	adc	r25, r21
    1f06:	02 96       	adiw	r24, 0x02	; 2
    1f08:	e9 01       	movw	r28, r18
    1f0a:	99 83       	std	Y+1, r25	; 0x01
    1f0c:	88 83       	st	Y, r24
    1f0e:	82 81       	ldd	r24, Z+2	; 0x02
    1f10:	93 81       	ldd	r25, Z+3	; 0x03
    1f12:	9b 83       	std	Y+3, r25	; 0x03
    1f14:	8a 83       	std	Y+2, r24	; 0x02
    1f16:	e0 e0       	ldi	r30, 0x00	; 0
    1f18:	f0 e0       	ldi	r31, 0x00	; 0
    1f1a:	12 96       	adiw	r26, 0x02	; 2
    1f1c:	8d 91       	ld	r24, X+
    1f1e:	9c 91       	ld	r25, X
    1f20:	13 97       	sbiw	r26, 0x03	; 3
    1f22:	00 97       	sbiw	r24, 0x00	; 0
    1f24:	19 f0       	breq	.+6      	; 0x1f2c <free+0xd4>
    1f26:	fd 01       	movw	r30, r26
    1f28:	dc 01       	movw	r26, r24
    1f2a:	f7 cf       	rjmp	.-18     	; 0x1f1a <free+0xc2>
    1f2c:	8d 91       	ld	r24, X+
    1f2e:	9c 91       	ld	r25, X
    1f30:	11 97       	sbiw	r26, 0x01	; 1
    1f32:	9d 01       	movw	r18, r26
    1f34:	2e 5f       	subi	r18, 0xFE	; 254
    1f36:	3f 4f       	sbci	r19, 0xFF	; 255
    1f38:	82 0f       	add	r24, r18
    1f3a:	93 1f       	adc	r25, r19
    1f3c:	20 91 c7 03 	lds	r18, 0x03C7	; 0x8003c7 <__brkval>
    1f40:	30 91 c8 03 	lds	r19, 0x03C8	; 0x8003c8 <__brkval+0x1>
    1f44:	28 17       	cp	r18, r24
    1f46:	39 07       	cpc	r19, r25
    1f48:	69 f4       	brne	.+26     	; 0x1f64 <free+0x10c>
    1f4a:	30 97       	sbiw	r30, 0x00	; 0
    1f4c:	29 f4       	brne	.+10     	; 0x1f58 <free+0x100>
    1f4e:	10 92 ca 03 	sts	0x03CA, r1	; 0x8003ca <__flp+0x1>
    1f52:	10 92 c9 03 	sts	0x03C9, r1	; 0x8003c9 <__flp>
    1f56:	02 c0       	rjmp	.+4      	; 0x1f5c <free+0x104>
    1f58:	13 82       	std	Z+3, r1	; 0x03
    1f5a:	12 82       	std	Z+2, r1	; 0x02
    1f5c:	b0 93 c8 03 	sts	0x03C8, r27	; 0x8003c8 <__brkval+0x1>
    1f60:	a0 93 c7 03 	sts	0x03C7, r26	; 0x8003c7 <__brkval>
    1f64:	df 91       	pop	r29
    1f66:	cf 91       	pop	r28
    1f68:	08 95       	ret

00001f6a <strnlen_P>:
    1f6a:	fc 01       	movw	r30, r24
    1f6c:	05 90       	lpm	r0, Z+
    1f6e:	61 50       	subi	r22, 0x01	; 1
    1f70:	70 40       	sbci	r23, 0x00	; 0
    1f72:	01 10       	cpse	r0, r1
    1f74:	d8 f7       	brcc	.-10     	; 0x1f6c <strnlen_P+0x2>
    1f76:	80 95       	com	r24
    1f78:	90 95       	com	r25
    1f7a:	8e 0f       	add	r24, r30
    1f7c:	9f 1f       	adc	r25, r31
    1f7e:	08 95       	ret

00001f80 <memset>:
    1f80:	dc 01       	movw	r26, r24
    1f82:	01 c0       	rjmp	.+2      	; 0x1f86 <memset+0x6>
    1f84:	6d 93       	st	X+, r22
    1f86:	41 50       	subi	r20, 0x01	; 1
    1f88:	50 40       	sbci	r21, 0x00	; 0
    1f8a:	e0 f7       	brcc	.-8      	; 0x1f84 <memset+0x4>
    1f8c:	08 95       	ret

00001f8e <strnlen>:
    1f8e:	fc 01       	movw	r30, r24
    1f90:	61 50       	subi	r22, 0x01	; 1
    1f92:	70 40       	sbci	r23, 0x00	; 0
    1f94:	01 90       	ld	r0, Z+
    1f96:	01 10       	cpse	r0, r1
    1f98:	d8 f7       	brcc	.-10     	; 0x1f90 <strnlen+0x2>
    1f9a:	80 95       	com	r24
    1f9c:	90 95       	com	r25
    1f9e:	8e 0f       	add	r24, r30
    1fa0:	9f 1f       	adc	r25, r31
    1fa2:	08 95       	ret

00001fa4 <strrev>:
    1fa4:	dc 01       	movw	r26, r24
    1fa6:	fc 01       	movw	r30, r24
    1fa8:	67 2f       	mov	r22, r23
    1faa:	71 91       	ld	r23, Z+
    1fac:	77 23       	and	r23, r23
    1fae:	e1 f7       	brne	.-8      	; 0x1fa8 <strrev+0x4>
    1fb0:	32 97       	sbiw	r30, 0x02	; 2
    1fb2:	04 c0       	rjmp	.+8      	; 0x1fbc <strrev+0x18>
    1fb4:	7c 91       	ld	r23, X
    1fb6:	6d 93       	st	X+, r22
    1fb8:	70 83       	st	Z, r23
    1fba:	62 91       	ld	r22, -Z
    1fbc:	ae 17       	cp	r26, r30
    1fbe:	bf 07       	cpc	r27, r31
    1fc0:	c8 f3       	brcs	.-14     	; 0x1fb4 <strrev+0x10>
    1fc2:	08 95       	ret

00001fc4 <fputc>:
    1fc4:	0f 93       	push	r16
    1fc6:	1f 93       	push	r17
    1fc8:	cf 93       	push	r28
    1fca:	df 93       	push	r29
    1fcc:	fb 01       	movw	r30, r22
    1fce:	23 81       	ldd	r18, Z+3	; 0x03
    1fd0:	21 fd       	sbrc	r18, 1
    1fd2:	03 c0       	rjmp	.+6      	; 0x1fda <fputc+0x16>
    1fd4:	8f ef       	ldi	r24, 0xFF	; 255
    1fd6:	9f ef       	ldi	r25, 0xFF	; 255
    1fd8:	2c c0       	rjmp	.+88     	; 0x2032 <fputc+0x6e>
    1fda:	22 ff       	sbrs	r18, 2
    1fdc:	16 c0       	rjmp	.+44     	; 0x200a <fputc+0x46>
    1fde:	46 81       	ldd	r20, Z+6	; 0x06
    1fe0:	57 81       	ldd	r21, Z+7	; 0x07
    1fe2:	24 81       	ldd	r18, Z+4	; 0x04
    1fe4:	35 81       	ldd	r19, Z+5	; 0x05
    1fe6:	42 17       	cp	r20, r18
    1fe8:	53 07       	cpc	r21, r19
    1fea:	44 f4       	brge	.+16     	; 0x1ffc <fputc+0x38>
    1fec:	a0 81       	ld	r26, Z
    1fee:	b1 81       	ldd	r27, Z+1	; 0x01
    1ff0:	9d 01       	movw	r18, r26
    1ff2:	2f 5f       	subi	r18, 0xFF	; 255
    1ff4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ff6:	31 83       	std	Z+1, r19	; 0x01
    1ff8:	20 83       	st	Z, r18
    1ffa:	8c 93       	st	X, r24
    1ffc:	26 81       	ldd	r18, Z+6	; 0x06
    1ffe:	37 81       	ldd	r19, Z+7	; 0x07
    2000:	2f 5f       	subi	r18, 0xFF	; 255
    2002:	3f 4f       	sbci	r19, 0xFF	; 255
    2004:	37 83       	std	Z+7, r19	; 0x07
    2006:	26 83       	std	Z+6, r18	; 0x06
    2008:	14 c0       	rjmp	.+40     	; 0x2032 <fputc+0x6e>
    200a:	8b 01       	movw	r16, r22
    200c:	ec 01       	movw	r28, r24
    200e:	fb 01       	movw	r30, r22
    2010:	00 84       	ldd	r0, Z+8	; 0x08
    2012:	f1 85       	ldd	r31, Z+9	; 0x09
    2014:	e0 2d       	mov	r30, r0
    2016:	19 95       	eicall
    2018:	89 2b       	or	r24, r25
    201a:	e1 f6       	brne	.-72     	; 0x1fd4 <fputc+0x10>
    201c:	d8 01       	movw	r26, r16
    201e:	16 96       	adiw	r26, 0x06	; 6
    2020:	8d 91       	ld	r24, X+
    2022:	9c 91       	ld	r25, X
    2024:	17 97       	sbiw	r26, 0x07	; 7
    2026:	01 96       	adiw	r24, 0x01	; 1
    2028:	17 96       	adiw	r26, 0x07	; 7
    202a:	9c 93       	st	X, r25
    202c:	8e 93       	st	-X, r24
    202e:	16 97       	sbiw	r26, 0x06	; 6
    2030:	ce 01       	movw	r24, r28
    2032:	df 91       	pop	r29
    2034:	cf 91       	pop	r28
    2036:	1f 91       	pop	r17
    2038:	0f 91       	pop	r16
    203a:	08 95       	ret

0000203c <__ultoa_invert>:
    203c:	fa 01       	movw	r30, r20
    203e:	aa 27       	eor	r26, r26
    2040:	28 30       	cpi	r18, 0x08	; 8
    2042:	51 f1       	breq	.+84     	; 0x2098 <__ultoa_invert+0x5c>
    2044:	20 31       	cpi	r18, 0x10	; 16
    2046:	81 f1       	breq	.+96     	; 0x20a8 <__ultoa_invert+0x6c>
    2048:	e8 94       	clt
    204a:	6f 93       	push	r22
    204c:	6e 7f       	andi	r22, 0xFE	; 254
    204e:	6e 5f       	subi	r22, 0xFE	; 254
    2050:	7f 4f       	sbci	r23, 0xFF	; 255
    2052:	8f 4f       	sbci	r24, 0xFF	; 255
    2054:	9f 4f       	sbci	r25, 0xFF	; 255
    2056:	af 4f       	sbci	r26, 0xFF	; 255
    2058:	b1 e0       	ldi	r27, 0x01	; 1
    205a:	3e d0       	rcall	.+124    	; 0x20d8 <__ultoa_invert+0x9c>
    205c:	b4 e0       	ldi	r27, 0x04	; 4
    205e:	3c d0       	rcall	.+120    	; 0x20d8 <__ultoa_invert+0x9c>
    2060:	67 0f       	add	r22, r23
    2062:	78 1f       	adc	r23, r24
    2064:	89 1f       	adc	r24, r25
    2066:	9a 1f       	adc	r25, r26
    2068:	a1 1d       	adc	r26, r1
    206a:	68 0f       	add	r22, r24
    206c:	79 1f       	adc	r23, r25
    206e:	8a 1f       	adc	r24, r26
    2070:	91 1d       	adc	r25, r1
    2072:	a1 1d       	adc	r26, r1
    2074:	6a 0f       	add	r22, r26
    2076:	71 1d       	adc	r23, r1
    2078:	81 1d       	adc	r24, r1
    207a:	91 1d       	adc	r25, r1
    207c:	a1 1d       	adc	r26, r1
    207e:	20 d0       	rcall	.+64     	; 0x20c0 <__ultoa_invert+0x84>
    2080:	09 f4       	brne	.+2      	; 0x2084 <__ultoa_invert+0x48>
    2082:	68 94       	set
    2084:	3f 91       	pop	r19
    2086:	2a e0       	ldi	r18, 0x0A	; 10
    2088:	26 9f       	mul	r18, r22
    208a:	11 24       	eor	r1, r1
    208c:	30 19       	sub	r19, r0
    208e:	30 5d       	subi	r19, 0xD0	; 208
    2090:	31 93       	st	Z+, r19
    2092:	de f6       	brtc	.-74     	; 0x204a <__ultoa_invert+0xe>
    2094:	cf 01       	movw	r24, r30
    2096:	08 95       	ret
    2098:	46 2f       	mov	r20, r22
    209a:	47 70       	andi	r20, 0x07	; 7
    209c:	40 5d       	subi	r20, 0xD0	; 208
    209e:	41 93       	st	Z+, r20
    20a0:	b3 e0       	ldi	r27, 0x03	; 3
    20a2:	0f d0       	rcall	.+30     	; 0x20c2 <__ultoa_invert+0x86>
    20a4:	c9 f7       	brne	.-14     	; 0x2098 <__ultoa_invert+0x5c>
    20a6:	f6 cf       	rjmp	.-20     	; 0x2094 <__ultoa_invert+0x58>
    20a8:	46 2f       	mov	r20, r22
    20aa:	4f 70       	andi	r20, 0x0F	; 15
    20ac:	40 5d       	subi	r20, 0xD0	; 208
    20ae:	4a 33       	cpi	r20, 0x3A	; 58
    20b0:	18 f0       	brcs	.+6      	; 0x20b8 <__ultoa_invert+0x7c>
    20b2:	49 5d       	subi	r20, 0xD9	; 217
    20b4:	31 fd       	sbrc	r19, 1
    20b6:	40 52       	subi	r20, 0x20	; 32
    20b8:	41 93       	st	Z+, r20
    20ba:	02 d0       	rcall	.+4      	; 0x20c0 <__ultoa_invert+0x84>
    20bc:	a9 f7       	brne	.-22     	; 0x20a8 <__ultoa_invert+0x6c>
    20be:	ea cf       	rjmp	.-44     	; 0x2094 <__ultoa_invert+0x58>
    20c0:	b4 e0       	ldi	r27, 0x04	; 4
    20c2:	a6 95       	lsr	r26
    20c4:	97 95       	ror	r25
    20c6:	87 95       	ror	r24
    20c8:	77 95       	ror	r23
    20ca:	67 95       	ror	r22
    20cc:	ba 95       	dec	r27
    20ce:	c9 f7       	brne	.-14     	; 0x20c2 <__ultoa_invert+0x86>
    20d0:	00 97       	sbiw	r24, 0x00	; 0
    20d2:	61 05       	cpc	r22, r1
    20d4:	71 05       	cpc	r23, r1
    20d6:	08 95       	ret
    20d8:	9b 01       	movw	r18, r22
    20da:	ac 01       	movw	r20, r24
    20dc:	0a 2e       	mov	r0, r26
    20de:	06 94       	lsr	r0
    20e0:	57 95       	ror	r21
    20e2:	47 95       	ror	r20
    20e4:	37 95       	ror	r19
    20e6:	27 95       	ror	r18
    20e8:	ba 95       	dec	r27
    20ea:	c9 f7       	brne	.-14     	; 0x20de <__ultoa_invert+0xa2>
    20ec:	62 0f       	add	r22, r18
    20ee:	73 1f       	adc	r23, r19
    20f0:	84 1f       	adc	r24, r20
    20f2:	95 1f       	adc	r25, r21
    20f4:	a0 1d       	adc	r26, r0
    20f6:	08 95       	ret

000020f8 <_exit>:
    20f8:	f8 94       	cli

000020fa <__stop_program>:
    20fa:	ff cf       	rjmp	.-2      	; 0x20fa <__stop_program>
