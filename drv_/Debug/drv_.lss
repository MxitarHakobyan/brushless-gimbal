
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001ae  00800200  00002b3e  00002bd2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002b3e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000081  008003ae  008003ae  00002d80  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002d80  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ddc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000033ca  00000000  00000000  000030ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000017dc  00000000  00000000  00006476  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000183d  00000000  00000000  00007c52  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000830  00000000  00000000  00009490  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cc0  00000000  00000000  00009cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000023ba  00000000  00000000  0000a980  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  0000cd3a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 c8 09 	jmp	0x1390	; 0x1390 <__vector_17>
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 74 09 	jmp	0x12e8	; 0x12e8 <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__bad_interrupt>
      66:	00 00       	nop
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 be 09 	jmp	0x137c	; 0x137c <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2332>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	ee e3       	ldi	r30, 0x3E	; 62
     22c:	fb e2       	ldi	r31, 0x2B	; 43
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	ae 3a       	cpi	r26, 0xAE	; 174
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	ae ea       	ldi	r26, 0xAE	; 174
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	af 32       	cpi	r26, 0x2F	; 47
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	ed d4       	rcall	.+2522   	; 0xc2a <main>
     250:	0c 94 9d 15 	jmp	0x2b3a	; 0x2b3a <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
{	
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     256:	08 95       	ret

00000258 <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     258:	e0 91 b0 03 	lds	r30, 0x03B0	; 0x8003b0 <U_step>
     25c:	f0 91 b1 03 	lds	r31, 0x03B1	; 0x8003b1 <U_step+0x1>
     260:	ea 5f       	subi	r30, 0xFA	; 250
     262:	fd 4f       	sbci	r31, 0xFD	; 253
     264:	80 81       	ld	r24, Z
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     26c:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     270:	e0 91 75 03 	lds	r30, 0x0375	; 0x800375 <V_step>
     274:	f0 91 76 03 	lds	r31, 0x0376	; 0x800376 <V_step+0x1>
     278:	ea 5f       	subi	r30, 0xFA	; 250
     27a:	fd 4f       	sbci	r31, 0xFD	; 253
     27c:	80 81       	ld	r24, Z
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     284:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     288:	e0 91 73 03 	lds	r30, 0x0373	; 0x800373 <W_step>
     28c:	f0 91 74 03 	lds	r31, 0x0374	; 0x800374 <W_step+0x1>
     290:	ea 5f       	subi	r30, 0xFA	; 250
     292:	fd 4f       	sbci	r31, 0xFD	; 253
     294:	80 81       	ld	r24, Z
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     29c:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	//U_PWM=255;
	//V_PWM=170;
	//W_PWM=85;
	U_step=U_step+incr;
     2a0:	60 91 c3 03 	lds	r22, 0x03C3	; 0x8003c3 <incr>
     2a4:	70 91 c4 03 	lds	r23, 0x03C4	; 0x8003c4 <incr+0x1>
     2a8:	40 91 b0 03 	lds	r20, 0x03B0	; 0x8003b0 <U_step>
     2ac:	50 91 b1 03 	lds	r21, 0x03B1	; 0x8003b1 <U_step+0x1>
     2b0:	46 0f       	add	r20, r22
     2b2:	57 1f       	adc	r21, r23
     2b4:	50 93 b1 03 	sts	0x03B1, r21	; 0x8003b1 <U_step+0x1>
     2b8:	40 93 b0 03 	sts	0x03B0, r20	; 0x8003b0 <U_step>
	V_step=V_step+incr;
     2bc:	20 91 75 03 	lds	r18, 0x0375	; 0x800375 <V_step>
     2c0:	30 91 76 03 	lds	r19, 0x0376	; 0x800376 <V_step+0x1>
     2c4:	26 0f       	add	r18, r22
     2c6:	37 1f       	adc	r19, r23
     2c8:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     2cc:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step+incr;
     2d0:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <W_step>
     2d4:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <W_step+0x1>
     2d8:	86 0f       	add	r24, r22
     2da:	97 1f       	adc	r25, r23
     2dc:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     2e0:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	if(U_step > SINE_TABLE_SZ)
     2e4:	49 36       	cpi	r20, 0x69	; 105
     2e6:	61 e0       	ldi	r22, 0x01	; 1
     2e8:	56 07       	cpc	r21, r22
     2ea:	2c f0       	brlt	.+10     	; 0x2f6 <PWM_update+0x9e>
	U_step = 0;
     2ec:	10 92 b1 03 	sts	0x03B1, r1	; 0x8003b1 <U_step+0x1>
     2f0:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <U_step>
     2f4:	08 c0       	rjmp	.+16     	; 0x306 <PWM_update+0xae>
	if(U_step < 0)
     2f6:	55 23       	and	r21, r21
     2f8:	34 f4       	brge	.+12     	; 0x306 <PWM_update+0xae>
	U_step = SINE_TABLE_SZ;
     2fa:	48 e6       	ldi	r20, 0x68	; 104
     2fc:	51 e0       	ldi	r21, 0x01	; 1
     2fe:	50 93 b1 03 	sts	0x03B1, r21	; 0x8003b1 <U_step+0x1>
     302:	40 93 b0 03 	sts	0x03B0, r20	; 0x8003b0 <U_step>
	
	if(V_step > SINE_TABLE_SZ)
     306:	29 36       	cpi	r18, 0x69	; 105
     308:	41 e0       	ldi	r20, 0x01	; 1
     30a:	34 07       	cpc	r19, r20
     30c:	2c f0       	brlt	.+10     	; 0x318 <PWM_update+0xc0>
	V_step = 0;
     30e:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <V_step+0x1>
     312:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <V_step>
     316:	08 c0       	rjmp	.+16     	; 0x328 <PWM_update+0xd0>
	if(V_step < 0)
     318:	33 23       	and	r19, r19
     31a:	34 f4       	brge	.+12     	; 0x328 <PWM_update+0xd0>
	V_step = SINE_TABLE_SZ;
     31c:	28 e6       	ldi	r18, 0x68	; 104
     31e:	31 e0       	ldi	r19, 0x01	; 1
     320:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     324:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     328:	89 36       	cpi	r24, 0x69	; 105
     32a:	61 e0       	ldi	r22, 0x01	; 1
     32c:	96 07       	cpc	r25, r22
     32e:	2c f0       	brlt	.+10     	; 0x33a <PWM_update+0xe2>
	W_step = 0;
     330:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <W_step+0x1>
     334:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <W_step>
     338:	08 c0       	rjmp	.+16     	; 0x34a <PWM_update+0xf2>
	if(W_step < 0)
     33a:	99 23       	and	r25, r25
     33c:	34 f4       	brge	.+12     	; 0x34a <PWM_update+0xf2>
	W_step = SINE_TABLE_SZ;
     33e:	88 e6       	ldi	r24, 0x68	; 104
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     346:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	//printf("debug 0000000");
	INT_MOTOR_SPEED1=pwm_delay;
     34a:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <pwm_delay>
     34e:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <pwm_delay+0x1>
     352:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     356:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     35a:	08 95       	ret

0000035c <PWM_update_2>:
}
void PWM_update_2()//motor pwm update
{
	U1_PWM=pwmSin[U_step_2];
     35c:	e0 91 ae 03 	lds	r30, 0x03AE	; 0x8003ae <__data_end>
     360:	f0 91 af 03 	lds	r31, 0x03AF	; 0x8003af <__data_end+0x1>
     364:	ea 5f       	subi	r30, 0xFA	; 250
     366:	fd 4f       	sbci	r31, 0xFD	; 253
     368:	80 81       	ld	r24, Z
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     370:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	V1_PWM=pwmSin[V_step_2];
     374:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step_2>
     378:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step_2+0x1>
     37c:	ea 5f       	subi	r30, 0xFA	; 250
     37e:	fd 4f       	sbci	r31, 0xFD	; 253
     380:	80 81       	ld	r24, Z
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     388:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
	W1_PWM=pwmSin[W_step_2];
     38c:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step_2>
     390:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step_2+0x1>
     394:	ea 5f       	subi	r30, 0xFA	; 250
     396:	fd 4f       	sbci	r31, 0xFD	; 253
     398:	80 81       	ld	r24, Z
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     3a0:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
	U_step_2=U_step_2+incr_2;
     3a4:	60 91 c1 03 	lds	r22, 0x03C1	; 0x8003c1 <incr_2>
     3a8:	70 91 c2 03 	lds	r23, 0x03C2	; 0x8003c2 <incr_2+0x1>
     3ac:	40 91 ae 03 	lds	r20, 0x03AE	; 0x8003ae <__data_end>
     3b0:	50 91 af 03 	lds	r21, 0x03AF	; 0x8003af <__data_end+0x1>
     3b4:	46 0f       	add	r20, r22
     3b6:	57 1f       	adc	r21, r23
     3b8:	50 93 af 03 	sts	0x03AF, r21	; 0x8003af <__data_end+0x1>
     3bc:	40 93 ae 03 	sts	0x03AE, r20	; 0x8003ae <__data_end>
	V_step_2=V_step_2+incr_2;
     3c0:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step_2>
     3c4:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step_2+0x1>
     3c8:	26 0f       	add	r18, r22
     3ca:	37 1f       	adc	r19, r23
     3cc:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     3d0:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_2+incr_2;
     3d4:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step_2>
     3d8:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step_2+0x1>
     3dc:	86 0f       	add	r24, r22
     3de:	97 1f       	adc	r25, r23
     3e0:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     3e4:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	if(U_step_2 > SINE_TABLE_SZ)
     3e8:	49 36       	cpi	r20, 0x69	; 105
     3ea:	61 e0       	ldi	r22, 0x01	; 1
     3ec:	56 07       	cpc	r21, r22
     3ee:	2c f0       	brlt	.+10     	; 0x3fa <PWM_update_2+0x9e>
	U_step_2 = 0;
     3f0:	10 92 af 03 	sts	0x03AF, r1	; 0x8003af <__data_end+0x1>
     3f4:	10 92 ae 03 	sts	0x03AE, r1	; 0x8003ae <__data_end>
     3f8:	08 c0       	rjmp	.+16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	if(U_step_2 < 0)
     3fa:	55 23       	and	r21, r21
     3fc:	34 f4       	brge	.+12     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	U_step_2 = SINE_TABLE_SZ;
     3fe:	48 e6       	ldi	r20, 0x68	; 104
     400:	51 e0       	ldi	r21, 0x01	; 1
     402:	50 93 af 03 	sts	0x03AF, r21	; 0x8003af <__data_end+0x1>
     406:	40 93 ae 03 	sts	0x03AE, r20	; 0x8003ae <__data_end>
	
	if(V_step_2 > SINE_TABLE_SZ)
     40a:	29 36       	cpi	r18, 0x69	; 105
     40c:	41 e0       	ldi	r20, 0x01	; 1
     40e:	34 07       	cpc	r19, r20
     410:	2c f0       	brlt	.+10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
	V_step_2 = 0;
     412:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step_2+0x1>
     416:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step_2>
     41a:	08 c0       	rjmp	.+16     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
	if(V_step_2 < 0)
     41c:	33 23       	and	r19, r19
     41e:	34 f4       	brge	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
	V_step = SINE_TABLE_SZ;
     420:	28 e6       	ldi	r18, 0x68	; 104
     422:	31 e0       	ldi	r19, 0x01	; 1
     424:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     428:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step_2 > SINE_TABLE_SZ)
     42c:	89 36       	cpi	r24, 0x69	; 105
     42e:	61 e0       	ldi	r22, 0x01	; 1
     430:	96 07       	cpc	r25, r22
     432:	2c f0       	brlt	.+10     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
	W_step_2 = 0;
     434:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step_2+0x1>
     438:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step_2>
     43c:	08 c0       	rjmp	.+16     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
	if(W_step_2< 0)
     43e:	99 23       	and	r25, r25
     440:	34 f4       	brge	.+12     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
	W_step_2 = SINE_TABLE_SZ;
     442:	88 e6       	ldi	r24, 0x68	; 104
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     44a:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	//_delay_us(100);
	INT_MOTOR_SPEED2=pwm_delay_2;
     44e:	80 91 bb 03 	lds	r24, 0x03BB	; 0x8003bb <pwm_delay_2>
     452:	90 91 bc 03 	lds	r25, 0x03BC	; 0x8003bc <pwm_delay_2+0x1>
     456:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     45a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     45e:	08 95       	ret

00000460 <init_motor_gpio>:
	//printf("oopooo");
}
void init_motor_gpio()
{
	//setting pin mode to output for motor 1 
	sbi(DDRH,3);//digital 6 OC4A
     460:	e1 e0       	ldi	r30, 0x01	; 1
     462:	f1 e0       	ldi	r31, 0x01	; 1
     464:	80 81       	ld	r24, Z
     466:	88 60       	ori	r24, 0x08	; 8
     468:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     46a:	80 81       	ld	r24, Z
     46c:	80 61       	ori	r24, 0x10	; 16
     46e:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     470:	80 81       	ld	r24, Z
     472:	80 62       	ori	r24, 0x20	; 32
     474:	80 83       	st	Z, r24
	
	sbi(DDRA,0);//digital 22 EN1
     476:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     478:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     47a:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     47c:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     47e:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     480:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     482:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     484:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     486:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     488:	47 9a       	sbi	0x08, 7	; 8
	
	
	//setting pin mode to output for motor 2
	sbi(DDRE,4);//digital 2 OC3B
     48a:	6c 9a       	sbi	0x0d, 4	; 13
	sbi(DDRE,5);//digital 3 OC3C
     48c:	6d 9a       	sbi	0x0d, 5	; 13
	sbi(DDRE,3);//digital 5 OC3A
     48e:	6b 9a       	sbi	0x0d, 3	; 13
	
	sbi(DDRC,5);//digital 32 EN1
     490:	3d 9a       	sbi	0x07, 5	; 7
	sbi(DDRC,3);//digital 34 EN2
     492:	3b 9a       	sbi	0x07, 3	; 7
	sbi(DDRC,1);//digital 36 EN3
     494:	39 9a       	sbi	0x07, 1	; 7
	sbi(DDRD,7);//digital 38 sleep
     496:	57 9a       	sbi	0x0a, 7	; 10
	sbi(DDRG,1);//digital 40 nf, see drv8313
     498:	99 9a       	sbi	0x13, 1	; 19
	
	sbi(PORTC,5);//sleep HIGH
     49a:	45 9a       	sbi	0x08, 5	; 8
	sbi(PORTC,3);//nf HIGH
     49c:	43 9a       	sbi	0x08, 3	; 8
	sbi(PORTC,1);//EN1 HIGH
     49e:	41 9a       	sbi	0x08, 1	; 8
	sbi(PORTD,7);//EN2 HIGH
     4a0:	5f 9a       	sbi	0x0b, 7	; 11
	sbi(PORTG,1);//EN3 HIGH
     4a2:	a1 9a       	sbi	0x14, 1	; 20
     4a4:	08 95       	ret

000004a6 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     4a6:	4f 92       	push	r4
     4a8:	5f 92       	push	r5
     4aa:	6f 92       	push	r6
     4ac:	7f 92       	push	r7
     4ae:	8f 92       	push	r8
     4b0:	9f 92       	push	r9
     4b2:	af 92       	push	r10
     4b4:	bf 92       	push	r11
     4b6:	cf 92       	push	r12
     4b8:	df 92       	push	r13
     4ba:	ef 92       	push	r14
     4bc:	ff 92       	push	r15
     4be:	0f 93       	push	r16
     4c0:	1f 93       	push	r17
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	cd b7       	in	r28, 0x3d	; 61
     4c8:	de b7       	in	r29, 0x3e	; 62
     4ca:	6c 97       	sbiw	r28, 0x1c	; 28
     4cc:	0f b6       	in	r0, 0x3f	; 63
     4ce:	f8 94       	cli
     4d0:	de bf       	out	0x3e, r29	; 62
     4d2:	0f be       	out	0x3f, r0	; 63
     4d4:	cd bf       	out	0x3d, r28	; 61
     4d6:	69 8b       	std	Y+17, r22	; 0x11
     4d8:	7a 8b       	std	Y+18, r23	; 0x12
     4da:	8b 8b       	std	Y+19, r24	; 0x13
     4dc:	9c 8b       	std	Y+20, r25	; 0x14
     4de:	ca 01       	movw	r24, r20
     4e0:	b9 01       	movw	r22, r18
     4e2:	e9 82       	std	Y+1, r14	; 0x01
     4e4:	fa 82       	std	Y+2, r15	; 0x02
     4e6:	0b 83       	std	Y+3, r16	; 0x03
     4e8:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     4ea:	c0 90 d1 03 	lds	r12, 0x03D1	; 0x8003d1 <bias>
     4ee:	d0 90 d2 03 	lds	r13, 0x03D2	; 0x8003d2 <bias+0x1>
     4f2:	e0 90 d3 03 	lds	r14, 0x03D3	; 0x8003d3 <bias+0x2>
     4f6:	f0 90 d4 03 	lds	r15, 0x03D4	; 0x8003d4 <bias+0x3>
     4fa:	a7 01       	movw	r20, r14
     4fc:	96 01       	movw	r18, r12
     4fe:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__subsf3>
     502:	60 93 c9 03 	sts	0x03C9, r22	; 0x8003c9 <rate>
     506:	70 93 ca 03 	sts	0x03CA, r23	; 0x8003ca <rate+0x1>
     50a:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <rate+0x2>
     50e:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <rate+0x3>
	angle += dt * rate;
     512:	29 81       	ldd	r18, Y+1	; 0x01
     514:	3a 81       	ldd	r19, Y+2	; 0x02
     516:	4b 81       	ldd	r20, Y+3	; 0x03
     518:	5c 81       	ldd	r21, Y+4	; 0x04
     51a:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     51e:	20 91 f5 03 	lds	r18, 0x03F5	; 0x8003f5 <angle>
     522:	30 91 f6 03 	lds	r19, 0x03F6	; 0x8003f6 <angle+0x1>
     526:	40 91 f7 03 	lds	r20, 0x03F7	; 0x8003f7 <angle+0x2>
     52a:	50 91 f8 03 	lds	r21, 0x03F8	; 0x8003f8 <angle+0x3>
     52e:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__addsf3>
     532:	6d 8b       	std	Y+21, r22	; 0x15
     534:	7e 8b       	std	Y+22, r23	; 0x16
     536:	8f 8b       	std	Y+23, r24	; 0x17
     538:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     53a:	80 90 0d 04 	lds	r8, 0x040D	; 0x80040d <P+0xc>
     53e:	90 90 0e 04 	lds	r9, 0x040E	; 0x80040e <P+0xd>
     542:	a0 90 0f 04 	lds	r10, 0x040F	; 0x80040f <P+0xe>
     546:	b0 90 10 04 	lds	r11, 0x0410	; 0x800410 <P+0xf>
     54a:	a5 01       	movw	r20, r10
     54c:	94 01       	movw	r18, r8
     54e:	69 81       	ldd	r22, Y+1	; 0x01
     550:	7a 81       	ldd	r23, Y+2	; 0x02
     552:	8b 81       	ldd	r24, Y+3	; 0x03
     554:	9c 81       	ldd	r25, Y+4	; 0x04
     556:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     55a:	6d 83       	std	Y+5, r22	; 0x05
     55c:	7e 83       	std	Y+6, r23	; 0x06
     55e:	8f 83       	std	Y+7, r24	; 0x07
     560:	98 87       	std	Y+8, r25	; 0x08
     562:	40 90 05 04 	lds	r4, 0x0405	; 0x800405 <P+0x4>
     566:	50 90 06 04 	lds	r5, 0x0406	; 0x800406 <P+0x5>
     56a:	60 90 07 04 	lds	r6, 0x0407	; 0x800407 <P+0x6>
     56e:	70 90 08 04 	lds	r7, 0x0408	; 0x800408 <P+0x7>
     572:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <P+0x8>
     576:	90 91 0a 04 	lds	r25, 0x040A	; 0x80040a <P+0x9>
     57a:	a0 91 0b 04 	lds	r26, 0x040B	; 0x80040b <P+0xa>
     57e:	b0 91 0c 04 	lds	r27, 0x040C	; 0x80040c <P+0xb>
     582:	8d 87       	std	Y+13, r24	; 0x0d
     584:	9e 87       	std	Y+14, r25	; 0x0e
     586:	af 87       	std	Y+15, r26	; 0x0f
     588:	b8 8b       	std	Y+16, r27	; 0x10
     58a:	a3 01       	movw	r20, r6
     58c:	92 01       	movw	r18, r4
     58e:	6d 81       	ldd	r22, Y+5	; 0x05
     590:	7e 81       	ldd	r23, Y+6	; 0x06
     592:	8f 81       	ldd	r24, Y+7	; 0x07
     594:	98 85       	ldd	r25, Y+8	; 0x08
     596:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__subsf3>
     59a:	2d 85       	ldd	r18, Y+13	; 0x0d
     59c:	3e 85       	ldd	r19, Y+14	; 0x0e
     59e:	4f 85       	ldd	r20, Y+15	; 0x0f
     5a0:	58 89       	ldd	r21, Y+16	; 0x10
     5a2:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__subsf3>
     5a6:	20 91 cd 03 	lds	r18, 0x03CD	; 0x8003cd <Q_angle>
     5aa:	30 91 ce 03 	lds	r19, 0x03CE	; 0x8003ce <Q_angle+0x1>
     5ae:	40 91 cf 03 	lds	r20, 0x03CF	; 0x8003cf <Q_angle+0x2>
     5b2:	50 91 d0 03 	lds	r21, 0x03D0	; 0x8003d0 <Q_angle+0x3>
     5b6:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__addsf3>
     5ba:	29 81       	ldd	r18, Y+1	; 0x01
     5bc:	3a 81       	ldd	r19, Y+2	; 0x02
     5be:	4b 81       	ldd	r20, Y+3	; 0x03
     5c0:	5c 81       	ldd	r21, Y+4	; 0x04
     5c2:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     5c6:	a1 e0       	ldi	r26, 0x01	; 1
     5c8:	b4 e0       	ldi	r27, 0x04	; 4
     5ca:	2d 91       	ld	r18, X+
     5cc:	3d 91       	ld	r19, X+
     5ce:	4d 91       	ld	r20, X+
     5d0:	5c 91       	ld	r21, X
     5d2:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__addsf3>
     5d6:	69 87       	std	Y+9, r22	; 0x09
     5d8:	7a 87       	std	Y+10, r23	; 0x0a
     5da:	8b 87       	std	Y+11, r24	; 0x0b
     5dc:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     5de:	2d 81       	ldd	r18, Y+5	; 0x05
     5e0:	3e 81       	ldd	r19, Y+6	; 0x06
     5e2:	4f 81       	ldd	r20, Y+7	; 0x07
     5e4:	58 85       	ldd	r21, Y+8	; 0x08
     5e6:	c3 01       	movw	r24, r6
     5e8:	b2 01       	movw	r22, r4
     5ea:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__subsf3>
     5ee:	2b 01       	movw	r4, r22
     5f0:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     5f2:	2d 81       	ldd	r18, Y+5	; 0x05
     5f4:	3e 81       	ldd	r19, Y+6	; 0x06
     5f6:	4f 81       	ldd	r20, Y+7	; 0x07
     5f8:	58 85       	ldd	r21, Y+8	; 0x08
     5fa:	6d 85       	ldd	r22, Y+13	; 0x0d
     5fc:	7e 85       	ldd	r23, Y+14	; 0x0e
     5fe:	8f 85       	ldd	r24, Y+15	; 0x0f
     600:	98 89       	ldd	r25, Y+16	; 0x10
     602:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__subsf3>
     606:	6d 87       	std	Y+13, r22	; 0x0d
     608:	7e 87       	std	Y+14, r23	; 0x0e
     60a:	8f 87       	std	Y+15, r24	; 0x0f
     60c:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     60e:	20 91 c5 03 	lds	r18, 0x03C5	; 0x8003c5 <Q_bias>
     612:	30 91 c6 03 	lds	r19, 0x03C6	; 0x8003c6 <Q_bias+0x1>
     616:	40 91 c7 03 	lds	r20, 0x03C7	; 0x8003c7 <Q_bias+0x2>
     61a:	50 91 c8 03 	lds	r21, 0x03C8	; 0x8003c8 <Q_bias+0x3>
     61e:	69 81       	ldd	r22, Y+1	; 0x01
     620:	7a 81       	ldd	r23, Y+2	; 0x02
     622:	8b 81       	ldd	r24, Y+3	; 0x03
     624:	9c 81       	ldd	r25, Y+4	; 0x04
     626:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     62a:	a5 01       	movw	r20, r10
     62c:	94 01       	movw	r18, r8
     62e:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__addsf3>
     632:	69 8f       	std	Y+25, r22	; 0x19
     634:	7a 8f       	std	Y+26, r23	; 0x1a
     636:	8b 8f       	std	Y+27, r24	; 0x1b
     638:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     63a:	20 91 ed 03 	lds	r18, 0x03ED	; 0x8003ed <R_measure>
     63e:	30 91 ee 03 	lds	r19, 0x03EE	; 0x8003ee <R_measure+0x1>
     642:	40 91 ef 03 	lds	r20, 0x03EF	; 0x8003ef <R_measure+0x2>
     646:	50 91 f0 03 	lds	r21, 0x03F0	; 0x8003f0 <R_measure+0x3>
     64a:	69 85       	ldd	r22, Y+9	; 0x09
     64c:	7a 85       	ldd	r23, Y+10	; 0x0a
     64e:	8b 85       	ldd	r24, Y+11	; 0x0b
     650:	9c 85       	ldd	r25, Y+12	; 0x0c
     652:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__addsf3>
     656:	4b 01       	movw	r8, r22
     658:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     65a:	9b 01       	movw	r18, r22
     65c:	ac 01       	movw	r20, r24
     65e:	69 85       	ldd	r22, Y+9	; 0x09
     660:	7a 85       	ldd	r23, Y+10	; 0x0a
     662:	8b 85       	ldd	r24, Y+11	; 0x0b
     664:	9c 85       	ldd	r25, Y+12	; 0x0c
     666:	0e 94 28 0c 	call	0x1850	; 0x1850 <__divsf3>
     66a:	69 83       	std	Y+1, r22	; 0x01
     66c:	7a 83       	std	Y+2, r23	; 0x02
     66e:	8b 83       	std	Y+3, r24	; 0x03
     670:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     672:	a5 01       	movw	r20, r10
     674:	94 01       	movw	r18, r8
     676:	6d 85       	ldd	r22, Y+13	; 0x0d
     678:	7e 85       	ldd	r23, Y+14	; 0x0e
     67a:	8f 85       	ldd	r24, Y+15	; 0x0f
     67c:	98 89       	ldd	r25, Y+16	; 0x10
     67e:	0e 94 28 0c 	call	0x1850	; 0x1850 <__divsf3>
     682:	6d 83       	std	Y+5, r22	; 0x05
     684:	7e 83       	std	Y+6, r23	; 0x06
     686:	8f 83       	std	Y+7, r24	; 0x07
     688:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     68a:	2d 89       	ldd	r18, Y+21	; 0x15
     68c:	3e 89       	ldd	r19, Y+22	; 0x16
     68e:	4f 89       	ldd	r20, Y+23	; 0x17
     690:	58 8d       	ldd	r21, Y+24	; 0x18
     692:	69 89       	ldd	r22, Y+17	; 0x11
     694:	7a 89       	ldd	r23, Y+18	; 0x12
     696:	8b 89       	ldd	r24, Y+19	; 0x13
     698:	9c 89       	ldd	r25, Y+20	; 0x14
     69a:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__subsf3>
     69e:	69 8b       	std	Y+17, r22	; 0x11
     6a0:	7a 8b       	std	Y+18, r23	; 0x12
     6a2:	8b 8b       	std	Y+19, r24	; 0x13
     6a4:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     6a6:	9b 01       	movw	r18, r22
     6a8:	ac 01       	movw	r20, r24
     6aa:	69 81       	ldd	r22, Y+1	; 0x01
     6ac:	7a 81       	ldd	r23, Y+2	; 0x02
     6ae:	8b 81       	ldd	r24, Y+3	; 0x03
     6b0:	9c 81       	ldd	r25, Y+4	; 0x04
     6b2:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     6b6:	2d 89       	ldd	r18, Y+21	; 0x15
     6b8:	3e 89       	ldd	r19, Y+22	; 0x16
     6ba:	4f 89       	ldd	r20, Y+23	; 0x17
     6bc:	58 8d       	ldd	r21, Y+24	; 0x18
     6be:	fe d7       	rcall	.+4092   	; 0x16bc <__addsf3>
     6c0:	4b 01       	movw	r8, r22
     6c2:	5c 01       	movw	r10, r24
     6c4:	60 93 f5 03 	sts	0x03F5, r22	; 0x8003f5 <angle>
     6c8:	70 93 f6 03 	sts	0x03F6, r23	; 0x8003f6 <angle+0x1>
     6cc:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <angle+0x2>
     6d0:	90 93 f8 03 	sts	0x03F8, r25	; 0x8003f8 <angle+0x3>
	bias += K[1] * y;
     6d4:	29 89       	ldd	r18, Y+17	; 0x11
     6d6:	3a 89       	ldd	r19, Y+18	; 0x12
     6d8:	4b 89       	ldd	r20, Y+19	; 0x13
     6da:	5c 89       	ldd	r21, Y+20	; 0x14
     6dc:	6d 81       	ldd	r22, Y+5	; 0x05
     6de:	7e 81       	ldd	r23, Y+6	; 0x06
     6e0:	8f 81       	ldd	r24, Y+7	; 0x07
     6e2:	98 85       	ldd	r25, Y+8	; 0x08
     6e4:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     6e8:	a7 01       	movw	r20, r14
     6ea:	96 01       	movw	r18, r12
     6ec:	e7 d7       	rcall	.+4046   	; 0x16bc <__addsf3>
     6ee:	60 93 d1 03 	sts	0x03D1, r22	; 0x8003d1 <bias>
     6f2:	70 93 d2 03 	sts	0x03D2, r23	; 0x8003d2 <bias+0x1>
     6f6:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <bias+0x2>
     6fa:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     6fe:	29 81       	ldd	r18, Y+1	; 0x01
     700:	3a 81       	ldd	r19, Y+2	; 0x02
     702:	4b 81       	ldd	r20, Y+3	; 0x03
     704:	5c 81       	ldd	r21, Y+4	; 0x04
     706:	69 85       	ldd	r22, Y+9	; 0x09
     708:	7a 85       	ldd	r23, Y+10	; 0x0a
     70a:	8b 85       	ldd	r24, Y+11	; 0x0b
     70c:	9c 85       	ldd	r25, Y+12	; 0x0c
     70e:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     712:	9b 01       	movw	r18, r22
     714:	ac 01       	movw	r20, r24
     716:	69 85       	ldd	r22, Y+9	; 0x09
     718:	7a 85       	ldd	r23, Y+10	; 0x0a
     71a:	8b 85       	ldd	r24, Y+11	; 0x0b
     71c:	9c 85       	ldd	r25, Y+12	; 0x0c
     71e:	cd d7       	rcall	.+3994   	; 0x16ba <__subsf3>
     720:	e1 e0       	ldi	r30, 0x01	; 1
     722:	f4 e0       	ldi	r31, 0x04	; 4
     724:	60 83       	st	Z, r22
     726:	71 83       	std	Z+1, r23	; 0x01
     728:	82 83       	std	Z+2, r24	; 0x02
     72a:	93 83       	std	Z+3, r25	; 0x03
	P[0][1] -= K[0] * P01_temp;
     72c:	29 81       	ldd	r18, Y+1	; 0x01
     72e:	3a 81       	ldd	r19, Y+2	; 0x02
     730:	4b 81       	ldd	r20, Y+3	; 0x03
     732:	5c 81       	ldd	r21, Y+4	; 0x04
     734:	c3 01       	movw	r24, r6
     736:	b2 01       	movw	r22, r4
     738:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     73c:	9b 01       	movw	r18, r22
     73e:	ac 01       	movw	r20, r24
     740:	c3 01       	movw	r24, r6
     742:	b2 01       	movw	r22, r4
     744:	ba d7       	rcall	.+3956   	; 0x16ba <__subsf3>
     746:	60 93 05 04 	sts	0x0405, r22	; 0x800405 <P+0x4>
     74a:	70 93 06 04 	sts	0x0406, r23	; 0x800406 <P+0x5>
     74e:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <P+0x6>
     752:	90 93 08 04 	sts	0x0408, r25	; 0x800408 <P+0x7>
	P[1][0] -= K[1] * P00_temp;
     756:	2d 81       	ldd	r18, Y+5	; 0x05
     758:	3e 81       	ldd	r19, Y+6	; 0x06
     75a:	4f 81       	ldd	r20, Y+7	; 0x07
     75c:	58 85       	ldd	r21, Y+8	; 0x08
     75e:	69 85       	ldd	r22, Y+9	; 0x09
     760:	7a 85       	ldd	r23, Y+10	; 0x0a
     762:	8b 85       	ldd	r24, Y+11	; 0x0b
     764:	9c 85       	ldd	r25, Y+12	; 0x0c
     766:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     76a:	9b 01       	movw	r18, r22
     76c:	ac 01       	movw	r20, r24
     76e:	6d 85       	ldd	r22, Y+13	; 0x0d
     770:	7e 85       	ldd	r23, Y+14	; 0x0e
     772:	8f 85       	ldd	r24, Y+15	; 0x0f
     774:	98 89       	ldd	r25, Y+16	; 0x10
     776:	a1 d7       	rcall	.+3906   	; 0x16ba <__subsf3>
     778:	60 93 09 04 	sts	0x0409, r22	; 0x800409 <P+0x8>
     77c:	70 93 0a 04 	sts	0x040A, r23	; 0x80040a <P+0x9>
     780:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <P+0xa>
     784:	90 93 0c 04 	sts	0x040C, r25	; 0x80040c <P+0xb>
	P[1][1] -= K[1] * P01_temp;
     788:	2d 81       	ldd	r18, Y+5	; 0x05
     78a:	3e 81       	ldd	r19, Y+6	; 0x06
     78c:	4f 81       	ldd	r20, Y+7	; 0x07
     78e:	58 85       	ldd	r21, Y+8	; 0x08
     790:	c3 01       	movw	r24, r6
     792:	b2 01       	movw	r22, r4
     794:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     798:	9b 01       	movw	r18, r22
     79a:	ac 01       	movw	r20, r24
     79c:	69 8d       	ldd	r22, Y+25	; 0x19
     79e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     7a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7a4:	8a d7       	rcall	.+3860   	; 0x16ba <__subsf3>
     7a6:	60 93 0d 04 	sts	0x040D, r22	; 0x80040d <P+0xc>
     7aa:	70 93 0e 04 	sts	0x040E, r23	; 0x80040e <P+0xd>
     7ae:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <P+0xe>
     7b2:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <P+0xf>

	return angle;
};
     7b6:	c5 01       	movw	r24, r10
     7b8:	b4 01       	movw	r22, r8
     7ba:	6c 96       	adiw	r28, 0x1c	; 28
     7bc:	0f b6       	in	r0, 0x3f	; 63
     7be:	f8 94       	cli
     7c0:	de bf       	out	0x3e, r29	; 62
     7c2:	0f be       	out	0x3f, r0	; 63
     7c4:	cd bf       	out	0x3d, r28	; 61
     7c6:	df 91       	pop	r29
     7c8:	cf 91       	pop	r28
     7ca:	1f 91       	pop	r17
     7cc:	0f 91       	pop	r16
     7ce:	ff 90       	pop	r15
     7d0:	ef 90       	pop	r14
     7d2:	df 90       	pop	r13
     7d4:	cf 90       	pop	r12
     7d6:	bf 90       	pop	r11
     7d8:	af 90       	pop	r10
     7da:	9f 90       	pop	r9
     7dc:	8f 90       	pop	r8
     7de:	7f 90       	pop	r7
     7e0:	6f 90       	pop	r6
     7e2:	5f 90       	pop	r5
     7e4:	4f 90       	pop	r4
     7e6:	08 95       	ret

000007e8 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     7e8:	8f e6       	ldi	r24, 0x6F	; 111
     7ea:	92 e1       	ldi	r25, 0x12	; 18
     7ec:	a3 e8       	ldi	r26, 0x83	; 131
     7ee:	ba e3       	ldi	r27, 0x3A	; 58
     7f0:	80 93 cd 03 	sts	0x03CD, r24	; 0x8003cd <Q_angle>
     7f4:	90 93 ce 03 	sts	0x03CE, r25	; 0x8003ce <Q_angle+0x1>
     7f8:	a0 93 cf 03 	sts	0x03CF, r26	; 0x8003cf <Q_angle+0x2>
     7fc:	b0 93 d0 03 	sts	0x03D0, r27	; 0x8003d0 <Q_angle+0x3>
	Q_bias = 0.003f;
     800:	86 ea       	ldi	r24, 0xA6	; 166
     802:	9b e9       	ldi	r25, 0x9B	; 155
     804:	a4 e4       	ldi	r26, 0x44	; 68
     806:	bb e3       	ldi	r27, 0x3B	; 59
     808:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <Q_bias>
     80c:	90 93 c6 03 	sts	0x03C6, r25	; 0x8003c6 <Q_bias+0x1>
     810:	a0 93 c7 03 	sts	0x03C7, r26	; 0x8003c7 <Q_bias+0x2>
     814:	b0 93 c8 03 	sts	0x03C8, r27	; 0x8003c8 <Q_bias+0x3>
	R_measure = 0.03f;
     818:	8f e8       	ldi	r24, 0x8F	; 143
     81a:	92 ec       	ldi	r25, 0xC2	; 194
     81c:	a5 ef       	ldi	r26, 0xF5	; 245
     81e:	bc e3       	ldi	r27, 0x3C	; 60
     820:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <R_measure>
     824:	90 93 ee 03 	sts	0x03EE, r25	; 0x8003ee <R_measure+0x1>
     828:	a0 93 ef 03 	sts	0x03EF, r26	; 0x8003ef <R_measure+0x2>
     82c:	b0 93 f0 03 	sts	0x03F0, r27	; 0x8003f0 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     830:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <angle>
     834:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <angle+0x1>
     838:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <angle+0x2>
     83c:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <angle+0x3>
	bias = 0.0f; // Reset bias
     840:	10 92 d1 03 	sts	0x03D1, r1	; 0x8003d1 <bias>
     844:	10 92 d2 03 	sts	0x03D2, r1	; 0x8003d2 <bias+0x1>
     848:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <bias+0x2>
     84c:	10 92 d4 03 	sts	0x03D4, r1	; 0x8003d4 <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     850:	e1 e0       	ldi	r30, 0x01	; 1
     852:	f4 e0       	ldi	r31, 0x04	; 4
     854:	10 82       	st	Z, r1
     856:	11 82       	std	Z+1, r1	; 0x01
     858:	12 82       	std	Z+2, r1	; 0x02
     85a:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     85c:	14 82       	std	Z+4, r1	; 0x04
     85e:	15 82       	std	Z+5, r1	; 0x05
     860:	16 82       	std	Z+6, r1	; 0x06
     862:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     864:	10 86       	std	Z+8, r1	; 0x08
     866:	11 86       	std	Z+9, r1	; 0x09
     868:	12 86       	std	Z+10, r1	; 0x0a
     86a:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     86c:	14 86       	std	Z+12, r1	; 0x0c
     86e:	15 86       	std	Z+13, r1	; 0x0d
     870:	16 86       	std	Z+14, r1	; 0x0e
     872:	17 86       	std	Z+15, r1	; 0x0f
     874:	08 95       	ret

00000876 <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     876:	4f 92       	push	r4
     878:	5f 92       	push	r5
     87a:	6f 92       	push	r6
     87c:	7f 92       	push	r7
     87e:	8f 92       	push	r8
     880:	9f 92       	push	r9
     882:	af 92       	push	r10
     884:	bf 92       	push	r11
     886:	cf 92       	push	r12
     888:	df 92       	push	r13
     88a:	ef 92       	push	r14
     88c:	ff 92       	push	r15
     88e:	0f 93       	push	r16
     890:	1f 93       	push	r17
     892:	cf 93       	push	r28
     894:	df 93       	push	r29
     896:	cd b7       	in	r28, 0x3d	; 61
     898:	de b7       	in	r29, 0x3e	; 62
     89a:	6c 97       	sbiw	r28, 0x1c	; 28
     89c:	0f b6       	in	r0, 0x3f	; 63
     89e:	f8 94       	cli
     8a0:	de bf       	out	0x3e, r29	; 62
     8a2:	0f be       	out	0x3f, r0	; 63
     8a4:	cd bf       	out	0x3d, r28	; 61
     8a6:	69 8b       	std	Y+17, r22	; 0x11
     8a8:	7a 8b       	std	Y+18, r23	; 0x12
     8aa:	8b 8b       	std	Y+19, r24	; 0x13
     8ac:	9c 8b       	std	Y+20, r25	; 0x14
     8ae:	ca 01       	movw	r24, r20
     8b0:	b9 01       	movw	r22, r18
     8b2:	e9 82       	std	Y+1, r14	; 0x01
     8b4:	fa 82       	std	Y+2, r15	; 0x02
     8b6:	0b 83       	std	Y+3, r16	; 0x03
     8b8:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     8ba:	c0 90 f1 03 	lds	r12, 0x03F1	; 0x8003f1 <bias_1>
     8be:	d0 90 f2 03 	lds	r13, 0x03F2	; 0x8003f2 <bias_1+0x1>
     8c2:	e0 90 f3 03 	lds	r14, 0x03F3	; 0x8003f3 <bias_1+0x2>
     8c6:	f0 90 f4 03 	lds	r15, 0x03F4	; 0x8003f4 <bias_1+0x3>
     8ca:	a7 01       	movw	r20, r14
     8cc:	96 01       	movw	r18, r12
     8ce:	f5 d6       	rcall	.+3562   	; 0x16ba <__subsf3>
     8d0:	60 93 e9 03 	sts	0x03E9, r22	; 0x8003e9 <rate_1>
     8d4:	70 93 ea 03 	sts	0x03EA, r23	; 0x8003ea <rate_1+0x1>
     8d8:	80 93 eb 03 	sts	0x03EB, r24	; 0x8003eb <rate_1+0x2>
     8dc:	90 93 ec 03 	sts	0x03EC, r25	; 0x8003ec <rate_1+0x3>
	angle_1 += dt * rate_1;
     8e0:	29 81       	ldd	r18, Y+1	; 0x01
     8e2:	3a 81       	ldd	r19, Y+2	; 0x02
     8e4:	4b 81       	ldd	r20, Y+3	; 0x03
     8e6:	5c 81       	ldd	r21, Y+4	; 0x04
     8e8:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     8ec:	20 91 d5 03 	lds	r18, 0x03D5	; 0x8003d5 <angle_1>
     8f0:	30 91 d6 03 	lds	r19, 0x03D6	; 0x8003d6 <angle_1+0x1>
     8f4:	40 91 d7 03 	lds	r20, 0x03D7	; 0x8003d7 <angle_1+0x2>
     8f8:	50 91 d8 03 	lds	r21, 0x03D8	; 0x8003d8 <angle_1+0x3>
     8fc:	df d6       	rcall	.+3518   	; 0x16bc <__addsf3>
     8fe:	6d 8b       	std	Y+21, r22	; 0x15
     900:	7e 8b       	std	Y+22, r23	; 0x16
     902:	8f 8b       	std	Y+23, r24	; 0x17
     904:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     906:	80 90 e5 03 	lds	r8, 0x03E5	; 0x8003e5 <P_1+0xc>
     90a:	90 90 e6 03 	lds	r9, 0x03E6	; 0x8003e6 <P_1+0xd>
     90e:	a0 90 e7 03 	lds	r10, 0x03E7	; 0x8003e7 <P_1+0xe>
     912:	b0 90 e8 03 	lds	r11, 0x03E8	; 0x8003e8 <P_1+0xf>
     916:	a5 01       	movw	r20, r10
     918:	94 01       	movw	r18, r8
     91a:	69 81       	ldd	r22, Y+1	; 0x01
     91c:	7a 81       	ldd	r23, Y+2	; 0x02
     91e:	8b 81       	ldd	r24, Y+3	; 0x03
     920:	9c 81       	ldd	r25, Y+4	; 0x04
     922:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     926:	6d 83       	std	Y+5, r22	; 0x05
     928:	7e 83       	std	Y+6, r23	; 0x06
     92a:	8f 83       	std	Y+7, r24	; 0x07
     92c:	98 87       	std	Y+8, r25	; 0x08
     92e:	40 90 dd 03 	lds	r4, 0x03DD	; 0x8003dd <P_1+0x4>
     932:	50 90 de 03 	lds	r5, 0x03DE	; 0x8003de <P_1+0x5>
     936:	60 90 df 03 	lds	r6, 0x03DF	; 0x8003df <P_1+0x6>
     93a:	70 90 e0 03 	lds	r7, 0x03E0	; 0x8003e0 <P_1+0x7>
     93e:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <P_1+0x8>
     942:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <P_1+0x9>
     946:	a0 91 e3 03 	lds	r26, 0x03E3	; 0x8003e3 <P_1+0xa>
     94a:	b0 91 e4 03 	lds	r27, 0x03E4	; 0x8003e4 <P_1+0xb>
     94e:	8d 87       	std	Y+13, r24	; 0x0d
     950:	9e 87       	std	Y+14, r25	; 0x0e
     952:	af 87       	std	Y+15, r26	; 0x0f
     954:	b8 8b       	std	Y+16, r27	; 0x10
     956:	a3 01       	movw	r20, r6
     958:	92 01       	movw	r18, r4
     95a:	6d 81       	ldd	r22, Y+5	; 0x05
     95c:	7e 81       	ldd	r23, Y+6	; 0x06
     95e:	8f 81       	ldd	r24, Y+7	; 0x07
     960:	98 85       	ldd	r25, Y+8	; 0x08
     962:	ab d6       	rcall	.+3414   	; 0x16ba <__subsf3>
     964:	2d 85       	ldd	r18, Y+13	; 0x0d
     966:	3e 85       	ldd	r19, Y+14	; 0x0e
     968:	4f 85       	ldd	r20, Y+15	; 0x0f
     96a:	58 89       	ldd	r21, Y+16	; 0x10
     96c:	a6 d6       	rcall	.+3404   	; 0x16ba <__subsf3>
     96e:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <Q_angle_1>
     972:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <Q_angle_1+0x1>
     976:	40 91 13 04 	lds	r20, 0x0413	; 0x800413 <Q_angle_1+0x2>
     97a:	50 91 14 04 	lds	r21, 0x0414	; 0x800414 <Q_angle_1+0x3>
     97e:	9e d6       	rcall	.+3388   	; 0x16bc <__addsf3>
     980:	29 81       	ldd	r18, Y+1	; 0x01
     982:	3a 81       	ldd	r19, Y+2	; 0x02
     984:	4b 81       	ldd	r20, Y+3	; 0x03
     986:	5c 81       	ldd	r21, Y+4	; 0x04
     988:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     98c:	a9 ed       	ldi	r26, 0xD9	; 217
     98e:	b3 e0       	ldi	r27, 0x03	; 3
     990:	2d 91       	ld	r18, X+
     992:	3d 91       	ld	r19, X+
     994:	4d 91       	ld	r20, X+
     996:	5c 91       	ld	r21, X
     998:	91 d6       	rcall	.+3362   	; 0x16bc <__addsf3>
     99a:	69 87       	std	Y+9, r22	; 0x09
     99c:	7a 87       	std	Y+10, r23	; 0x0a
     99e:	8b 87       	std	Y+11, r24	; 0x0b
	P_1[0][1] -= dt * P_1[1][1];
     9a0:	9c 87       	std	Y+12, r25	; 0x0c
     9a2:	2d 81       	ldd	r18, Y+5	; 0x05
     9a4:	3e 81       	ldd	r19, Y+6	; 0x06
     9a6:	4f 81       	ldd	r20, Y+7	; 0x07
     9a8:	58 85       	ldd	r21, Y+8	; 0x08
     9aa:	c3 01       	movw	r24, r6
     9ac:	b2 01       	movw	r22, r4
     9ae:	85 d6       	rcall	.+3338   	; 0x16ba <__subsf3>
     9b0:	2b 01       	movw	r4, r22
	P_1[1][0] -= dt * P_1[1][1];
     9b2:	3c 01       	movw	r6, r24
     9b4:	2d 81       	ldd	r18, Y+5	; 0x05
     9b6:	3e 81       	ldd	r19, Y+6	; 0x06
     9b8:	4f 81       	ldd	r20, Y+7	; 0x07
     9ba:	58 85       	ldd	r21, Y+8	; 0x08
     9bc:	6d 85       	ldd	r22, Y+13	; 0x0d
     9be:	7e 85       	ldd	r23, Y+14	; 0x0e
     9c0:	8f 85       	ldd	r24, Y+15	; 0x0f
     9c2:	98 89       	ldd	r25, Y+16	; 0x10
     9c4:	7a d6       	rcall	.+3316   	; 0x16ba <__subsf3>
     9c6:	6d 87       	std	Y+13, r22	; 0x0d
     9c8:	7e 87       	std	Y+14, r23	; 0x0e
     9ca:	8f 87       	std	Y+15, r24	; 0x0f
	P_1[1][1] += Q_bias_1 * dt;
     9cc:	98 8b       	std	Y+16, r25	; 0x10
     9ce:	20 91 fd 03 	lds	r18, 0x03FD	; 0x8003fd <Q_bias_1>
     9d2:	30 91 fe 03 	lds	r19, 0x03FE	; 0x8003fe <Q_bias_1+0x1>
     9d6:	40 91 ff 03 	lds	r20, 0x03FF	; 0x8003ff <Q_bias_1+0x2>
     9da:	50 91 00 04 	lds	r21, 0x0400	; 0x800400 <Q_bias_1+0x3>
     9de:	69 81       	ldd	r22, Y+1	; 0x01
     9e0:	7a 81       	ldd	r23, Y+2	; 0x02
     9e2:	8b 81       	ldd	r24, Y+3	; 0x03
     9e4:	9c 81       	ldd	r25, Y+4	; 0x04
     9e6:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     9ea:	a5 01       	movw	r20, r10
     9ec:	94 01       	movw	r18, r8
     9ee:	66 d6       	rcall	.+3276   	; 0x16bc <__addsf3>
     9f0:	69 8f       	std	Y+25, r22	; 0x19
     9f2:	7a 8f       	std	Y+26, r23	; 0x1a
     9f4:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     9f6:	9c 8f       	std	Y+28, r25	; 0x1c
     9f8:	20 91 f9 03 	lds	r18, 0x03F9	; 0x8003f9 <R_measure_1>
     9fc:	30 91 fa 03 	lds	r19, 0x03FA	; 0x8003fa <R_measure_1+0x1>
     a00:	40 91 fb 03 	lds	r20, 0x03FB	; 0x8003fb <R_measure_1+0x2>
     a04:	50 91 fc 03 	lds	r21, 0x03FC	; 0x8003fc <R_measure_1+0x3>
     a08:	69 85       	ldd	r22, Y+9	; 0x09
     a0a:	7a 85       	ldd	r23, Y+10	; 0x0a
     a0c:	8b 85       	ldd	r24, Y+11	; 0x0b
     a0e:	9c 85       	ldd	r25, Y+12	; 0x0c
     a10:	55 d6       	rcall	.+3242   	; 0x16bc <__addsf3>
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     a12:	4b 01       	movw	r8, r22
     a14:	5c 01       	movw	r10, r24
     a16:	9b 01       	movw	r18, r22
     a18:	ac 01       	movw	r20, r24
     a1a:	69 85       	ldd	r22, Y+9	; 0x09
     a1c:	7a 85       	ldd	r23, Y+10	; 0x0a
     a1e:	8b 85       	ldd	r24, Y+11	; 0x0b
     a20:	9c 85       	ldd	r25, Y+12	; 0x0c
     a22:	16 d7       	rcall	.+3628   	; 0x1850 <__divsf3>
     a24:	69 83       	std	Y+1, r22	; 0x01
     a26:	7a 83       	std	Y+2, r23	; 0x02
	K_1[1] = P_1[1][0] / S_1;
     a28:	8b 83       	std	Y+3, r24	; 0x03
     a2a:	9c 83       	std	Y+4, r25	; 0x04
     a2c:	a5 01       	movw	r20, r10
     a2e:	94 01       	movw	r18, r8
     a30:	6d 85       	ldd	r22, Y+13	; 0x0d
     a32:	7e 85       	ldd	r23, Y+14	; 0x0e
     a34:	8f 85       	ldd	r24, Y+15	; 0x0f
     a36:	98 89       	ldd	r25, Y+16	; 0x10
     a38:	0b d7       	rcall	.+3606   	; 0x1850 <__divsf3>
     a3a:	6d 83       	std	Y+5, r22	; 0x05
     a3c:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     a3e:	8f 83       	std	Y+7, r24	; 0x07
     a40:	98 87       	std	Y+8, r25	; 0x08
     a42:	2d 89       	ldd	r18, Y+21	; 0x15
     a44:	3e 89       	ldd	r19, Y+22	; 0x16
     a46:	4f 89       	ldd	r20, Y+23	; 0x17
     a48:	58 8d       	ldd	r21, Y+24	; 0x18
     a4a:	69 89       	ldd	r22, Y+17	; 0x11
     a4c:	7a 89       	ldd	r23, Y+18	; 0x12
     a4e:	8b 89       	ldd	r24, Y+19	; 0x13
     a50:	9c 89       	ldd	r25, Y+20	; 0x14
     a52:	33 d6       	rcall	.+3174   	; 0x16ba <__subsf3>
     a54:	69 8b       	std	Y+17, r22	; 0x11
     a56:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     a58:	8b 8b       	std	Y+19, r24	; 0x13
     a5a:	9c 8b       	std	Y+20, r25	; 0x14
     a5c:	9b 01       	movw	r18, r22
     a5e:	ac 01       	movw	r20, r24
     a60:	69 81       	ldd	r22, Y+1	; 0x01
     a62:	7a 81       	ldd	r23, Y+2	; 0x02
     a64:	8b 81       	ldd	r24, Y+3	; 0x03
     a66:	9c 81       	ldd	r25, Y+4	; 0x04
     a68:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     a6c:	2d 89       	ldd	r18, Y+21	; 0x15
     a6e:	3e 89       	ldd	r19, Y+22	; 0x16
     a70:	4f 89       	ldd	r20, Y+23	; 0x17
     a72:	58 8d       	ldd	r21, Y+24	; 0x18
     a74:	23 d6       	rcall	.+3142   	; 0x16bc <__addsf3>
     a76:	4b 01       	movw	r8, r22
     a78:	5c 01       	movw	r10, r24
     a7a:	60 93 d5 03 	sts	0x03D5, r22	; 0x8003d5 <angle_1>
     a7e:	70 93 d6 03 	sts	0x03D6, r23	; 0x8003d6 <angle_1+0x1>
     a82:	80 93 d7 03 	sts	0x03D7, r24	; 0x8003d7 <angle_1+0x2>
	bias_1 += K_1[1] * y_1;
     a86:	90 93 d8 03 	sts	0x03D8, r25	; 0x8003d8 <angle_1+0x3>
     a8a:	29 89       	ldd	r18, Y+17	; 0x11
     a8c:	3a 89       	ldd	r19, Y+18	; 0x12
     a8e:	4b 89       	ldd	r20, Y+19	; 0x13
     a90:	5c 89       	ldd	r21, Y+20	; 0x14
     a92:	6d 81       	ldd	r22, Y+5	; 0x05
     a94:	7e 81       	ldd	r23, Y+6	; 0x06
     a96:	8f 81       	ldd	r24, Y+7	; 0x07
     a98:	98 85       	ldd	r25, Y+8	; 0x08
     a9a:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     a9e:	a7 01       	movw	r20, r14
     aa0:	96 01       	movw	r18, r12
     aa2:	0c d6       	rcall	.+3096   	; 0x16bc <__addsf3>
     aa4:	60 93 f1 03 	sts	0x03F1, r22	; 0x8003f1 <bias_1>
     aa8:	70 93 f2 03 	sts	0x03F2, r23	; 0x8003f2 <bias_1+0x1>
     aac:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <bias_1+0x2>
     ab0:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <bias_1+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     ab4:	29 81       	ldd	r18, Y+1	; 0x01
     ab6:	3a 81       	ldd	r19, Y+2	; 0x02
     ab8:	4b 81       	ldd	r20, Y+3	; 0x03
     aba:	5c 81       	ldd	r21, Y+4	; 0x04
     abc:	69 85       	ldd	r22, Y+9	; 0x09
     abe:	7a 85       	ldd	r23, Y+10	; 0x0a
     ac0:	8b 85       	ldd	r24, Y+11	; 0x0b
     ac2:	9c 85       	ldd	r25, Y+12	; 0x0c
     ac4:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     ac8:	9b 01       	movw	r18, r22
     aca:	ac 01       	movw	r20, r24
     acc:	69 85       	ldd	r22, Y+9	; 0x09
     ace:	7a 85       	ldd	r23, Y+10	; 0x0a
     ad0:	8b 85       	ldd	r24, Y+11	; 0x0b
     ad2:	9c 85       	ldd	r25, Y+12	; 0x0c
     ad4:	f2 d5       	rcall	.+3044   	; 0x16ba <__subsf3>
     ad6:	e9 ed       	ldi	r30, 0xD9	; 217
     ad8:	f3 e0       	ldi	r31, 0x03	; 3
     ada:	60 83       	st	Z, r22
     adc:	71 83       	std	Z+1, r23	; 0x01
	P_1[0][1] -= K_1[0] * P01_temp_1;
     ade:	82 83       	std	Z+2, r24	; 0x02
     ae0:	93 83       	std	Z+3, r25	; 0x03
     ae2:	29 81       	ldd	r18, Y+1	; 0x01
     ae4:	3a 81       	ldd	r19, Y+2	; 0x02
     ae6:	4b 81       	ldd	r20, Y+3	; 0x03
     ae8:	5c 81       	ldd	r21, Y+4	; 0x04
     aea:	c3 01       	movw	r24, r6
     aec:	b2 01       	movw	r22, r4
     aee:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     af2:	9b 01       	movw	r18, r22
     af4:	ac 01       	movw	r20, r24
     af6:	c3 01       	movw	r24, r6
     af8:	b2 01       	movw	r22, r4
     afa:	df d5       	rcall	.+3006   	; 0x16ba <__subsf3>
     afc:	60 93 dd 03 	sts	0x03DD, r22	; 0x8003dd <P_1+0x4>
     b00:	70 93 de 03 	sts	0x03DE, r23	; 0x8003de <P_1+0x5>
     b04:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <P_1+0x6>
	P_1[1][0] -= K_1[1] * P00_temp_1;
     b08:	90 93 e0 03 	sts	0x03E0, r25	; 0x8003e0 <P_1+0x7>
     b0c:	2d 81       	ldd	r18, Y+5	; 0x05
     b0e:	3e 81       	ldd	r19, Y+6	; 0x06
     b10:	4f 81       	ldd	r20, Y+7	; 0x07
     b12:	58 85       	ldd	r21, Y+8	; 0x08
     b14:	69 85       	ldd	r22, Y+9	; 0x09
     b16:	7a 85       	ldd	r23, Y+10	; 0x0a
     b18:	8b 85       	ldd	r24, Y+11	; 0x0b
     b1a:	9c 85       	ldd	r25, Y+12	; 0x0c
     b1c:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__mulsf3>
     b20:	9b 01       	movw	r18, r22
     b22:	ac 01       	movw	r20, r24
     b24:	6d 85       	ldd	r22, Y+13	; 0x0d
     b26:	7e 85       	ldd	r23, Y+14	; 0x0e
     b28:	8f 85       	ldd	r24, Y+15	; 0x0f
     b2a:	98 89       	ldd	r25, Y+16	; 0x10
     b2c:	c6 d5       	rcall	.+2956   	; 0x16ba <__subsf3>
     b2e:	60 93 e1 03 	sts	0x03E1, r22	; 0x8003e1 <P_1+0x8>
     b32:	70 93 e2 03 	sts	0x03E2, r23	; 0x8003e2 <P_1+0x9>
     b36:	80 93 e3 03 	sts	0x03E3, r24	; 0x8003e3 <P_1+0xa>
	P_1[1][1] -= K_1[1] * P01_temp_1;
     b3a:	90 93 e4 03 	sts	0x03E4, r25	; 0x8003e4 <P_1+0xb>
     b3e:	2d 81       	ldd	r18, Y+5	; 0x05
     b40:	3e 81       	ldd	r19, Y+6	; 0x06
     b42:	4f 81       	ldd	r20, Y+7	; 0x07
     b44:	58 85       	ldd	r21, Y+8	; 0x08
     b46:	c3 01       	movw	r24, r6
     b48:	b2 01       	movw	r22, r4
     b4a:	fd d7       	rcall	.+4090   	; 0x1b46 <__mulsf3>
     b4c:	9b 01       	movw	r18, r22
     b4e:	ac 01       	movw	r20, r24
     b50:	69 8d       	ldd	r22, Y+25	; 0x19
     b52:	7a 8d       	ldd	r23, Y+26	; 0x1a
     b54:	8b 8d       	ldd	r24, Y+27	; 0x1b
     b56:	9c 8d       	ldd	r25, Y+28	; 0x1c
     b58:	b0 d5       	rcall	.+2912   	; 0x16ba <__subsf3>
     b5a:	60 93 e5 03 	sts	0x03E5, r22	; 0x8003e5 <P_1+0xc>
     b5e:	70 93 e6 03 	sts	0x03E6, r23	; 0x8003e6 <P_1+0xd>
     b62:	80 93 e7 03 	sts	0x03E7, r24	; 0x8003e7 <P_1+0xe>
     b66:	90 93 e8 03 	sts	0x03E8, r25	; 0x8003e8 <P_1+0xf>

	return angle_1;
};
     b6a:	c5 01       	movw	r24, r10
     b6c:	b4 01       	movw	r22, r8
     b6e:	6c 96       	adiw	r28, 0x1c	; 28
     b70:	0f b6       	in	r0, 0x3f	; 63
     b72:	f8 94       	cli
     b74:	de bf       	out	0x3e, r29	; 62
     b76:	0f be       	out	0x3f, r0	; 63
     b78:	cd bf       	out	0x3d, r28	; 61
     b7a:	df 91       	pop	r29
     b7c:	cf 91       	pop	r28
     b7e:	1f 91       	pop	r17
     b80:	0f 91       	pop	r16
     b82:	ff 90       	pop	r15
     b84:	ef 90       	pop	r14
     b86:	df 90       	pop	r13
     b88:	cf 90       	pop	r12
     b8a:	bf 90       	pop	r11
     b8c:	af 90       	pop	r10
     b8e:	9f 90       	pop	r9
     b90:	8f 90       	pop	r8
     b92:	7f 90       	pop	r7
     b94:	6f 90       	pop	r6
     b96:	5f 90       	pop	r5
     b98:	4f 90       	pop	r4
     b9a:	08 95       	ret

00000b9c <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     b9c:	8f e6       	ldi	r24, 0x6F	; 111
     b9e:	92 e1       	ldi	r25, 0x12	; 18
     ba0:	a3 e8       	ldi	r26, 0x83	; 131
     ba2:	ba e3       	ldi	r27, 0x3A	; 58
     ba4:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <Q_angle_1>
     ba8:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <Q_angle_1+0x1>
     bac:	a0 93 13 04 	sts	0x0413, r26	; 0x800413 <Q_angle_1+0x2>
     bb0:	b0 93 14 04 	sts	0x0414, r27	; 0x800414 <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     bb4:	86 ea       	ldi	r24, 0xA6	; 166
     bb6:	9b e9       	ldi	r25, 0x9B	; 155
     bb8:	a4 e4       	ldi	r26, 0x44	; 68
     bba:	bb e3       	ldi	r27, 0x3B	; 59
     bbc:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <Q_bias_1>
     bc0:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <Q_bias_1+0x1>
     bc4:	a0 93 ff 03 	sts	0x03FF, r26	; 0x8003ff <Q_bias_1+0x2>
     bc8:	b0 93 00 04 	sts	0x0400, r27	; 0x800400 <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     bcc:	8f e8       	ldi	r24, 0x8F	; 143
     bce:	92 ec       	ldi	r25, 0xC2	; 194
     bd0:	a5 ef       	ldi	r26, 0xF5	; 245
     bd2:	bc e3       	ldi	r27, 0x3C	; 60
     bd4:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <R_measure_1>
     bd8:	90 93 fa 03 	sts	0x03FA, r25	; 0x8003fa <R_measure_1+0x1>
     bdc:	a0 93 fb 03 	sts	0x03FB, r26	; 0x8003fb <R_measure_1+0x2>
     be0:	b0 93 fc 03 	sts	0x03FC, r27	; 0x8003fc <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     be4:	10 92 d5 03 	sts	0x03D5, r1	; 0x8003d5 <angle_1>
     be8:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <angle_1+0x1>
     bec:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <angle_1+0x2>
     bf0:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     bf4:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <bias_1>
     bf8:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <bias_1+0x1>
     bfc:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <bias_1+0x2>
     c00:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     c04:	e9 ed       	ldi	r30, 0xD9	; 217
     c06:	f3 e0       	ldi	r31, 0x03	; 3
     c08:	10 82       	st	Z, r1
     c0a:	11 82       	std	Z+1, r1	; 0x01
     c0c:	12 82       	std	Z+2, r1	; 0x02
     c0e:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     c10:	14 82       	std	Z+4, r1	; 0x04
     c12:	15 82       	std	Z+5, r1	; 0x05
     c14:	16 82       	std	Z+6, r1	; 0x06
     c16:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     c18:	10 86       	std	Z+8, r1	; 0x08
     c1a:	11 86       	std	Z+9, r1	; 0x09
     c1c:	12 86       	std	Z+10, r1	; 0x0a
     c1e:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     c20:	14 86       	std	Z+12, r1	; 0x0c
     c22:	15 86       	std	Z+13, r1	; 0x0d
     c24:	16 86       	std	Z+14, r1	; 0x0e
     c26:	17 86       	std	Z+15, r1	; 0x0f
     c28:	08 95       	ret

00000c2a <main>:
uint8_t buffer[14];
bool loop_bool=true;
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd);
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     c2a:	cf 93       	push	r28
     c2c:	df 93       	push	r29
     c2e:	cd b7       	in	r28, 0x3d	; 61
     c30:	de b7       	in	r29, 0x3e	; 62
     c32:	a8 97       	sbiw	r28, 0x28	; 40
     c34:	0f b6       	in	r0, 0x3f	; 63
     c36:	f8 94       	cli
     c38:	de bf       	out	0x3e, r29	; 62
     c3a:	0f be       	out	0x3f, r0	; 63
     c3c:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     c3e:	10 92 b1 03 	sts	0x03B1, r1	; 0x8003b1 <U_step+0x1>
     c42:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <U_step>
	V_step=V_step_predefine;
     c46:	28 e7       	ldi	r18, 0x78	; 120
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     c4e:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step_predefine;
     c52:	80 ef       	ldi	r24, 0xF0	; 240
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     c5a:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	U_step_2=U_step_predefine;
     c5e:	10 92 af 03 	sts	0x03AF, r1	; 0x8003af <__data_end+0x1>
     c62:	10 92 ae 03 	sts	0x03AE, r1	; 0x8003ae <__data_end>
	V_step_2=V_step_predefine;
     c66:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     c6a:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_predefine;
     c6e:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     c72:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	incr=-1;
     c76:	8f ef       	ldi	r24, 0xFF	; 255
     c78:	9f ef       	ldi	r25, 0xFF	; 255
     c7a:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <incr+0x1>
     c7e:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <incr>
	incr_2=-1;
     c82:	90 93 c2 03 	sts	0x03C2, r25	; 0x8003c2 <incr_2+0x1>
     c86:	80 93 c1 03 	sts	0x03C1, r24	; 0x8003c1 <incr_2>
	pwm_delay=15000;
     c8a:	88 e9       	ldi	r24, 0x98	; 152
     c8c:	9a e3       	ldi	r25, 0x3A	; 58
     c8e:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <pwm_delay+0x1>
     c92:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <pwm_delay>
	pwm_delay_2=15000;
     c96:	90 93 bc 03 	sts	0x03BC, r25	; 0x8003bc <pwm_delay_2+0x1>
     c9a:	80 93 bb 03 	sts	0x03BB, r24	; 0x8003bb <pwm_delay_2>
	cli();
	init_gpio();
     c9e:	f8 94       	cli
     ca0:	da da       	rcall	.-2636   	; 0x256 <init_gpio>
     ca2:	de db       	rcall	.-2116   	; 0x460 <init_motor_gpio>
     ca4:	9d d3       	rcall	.+1850   	; 0x13e0 <i2c_init>
     ca6:	8c e0       	ldi	r24, 0x0C	; 12
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	4b d4       	rcall	.+2198   	; 0x1542 <USART_Init>
     cac:	60 e0       	ldi	r22, 0x00	; 0
     cae:	70 e0       	ldi	r23, 0x00	; 0
     cb0:	83 ed       	ldi	r24, 0xD3	; 211
     cb2:	9a e0       	ldi	r25, 0x0A	; 10
     cb4:	0e 94 21 13 	call	0x2642	; 0x2642 <fdevopen>
     cb8:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <uart_str+0x1>
     cbc:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <uart_str>
     cc0:	e0 d2       	rcall	.+1472   	; 0x1282 <setup_timer0>
     cc2:	e6 d2       	rcall	.+1484   	; 0x1290 <Enable_timer0_overflow_interrupt>
     cc4:	9e d2       	rcall	.+1340   	; 0x1202 <setup_timer4>
     cc6:	b1 d2       	rcall	.+1378   	; 0x122a <setup_timer3>
     cc8:	c4 d2       	rcall	.+1416   	; 0x1252 <setup_timer5>
     cca:	cc d2       	rcall	.+1432   	; 0x1264 <Enable_timer5_compare_interrupt>
     ccc:	d1 d2       	rcall	.+1442   	; 0x1270 <setup_timer1>
     cce:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <pwm_delay>
     cd2:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <pwm_delay+0x1>
     cd6:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     cda:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     cde:	80 91 bb 03 	lds	r24, 0x03BB	; 0x8003bb <pwm_delay_2>
     ce2:	90 91 bc 03 	lds	r25, 0x03BC	; 0x8003bc <pwm_delay_2+0x1>
     ce6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     cea:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     cee:	d6 d2       	rcall	.+1452   	; 0x129c <micros>
     cf0:	1b 01       	movw	r2, r22
     cf2:	2c 01       	movw	r4, r24
     cf4:	67 e0       	ldi	r22, 0x07	; 7
     cf6:	89 e1       	ldi	r24, 0x19	; 25
     cf8:	c3 d1       	rcall	.+902    	; 0x1080 <mpu6050_writeByte>
     cfa:	60 e0       	ldi	r22, 0x00	; 0
     cfc:	8a e1       	ldi	r24, 0x1A	; 26
     cfe:	c0 d1       	rcall	.+896    	; 0x1080 <mpu6050_writeByte>
     d00:	68 e0       	ldi	r22, 0x08	; 8
     d02:	8b e1       	ldi	r24, 0x1B	; 27
     d04:	bd d1       	rcall	.+890    	; 0x1080 <mpu6050_writeByte>
     d06:	60 e1       	ldi	r22, 0x10	; 16
     d08:	8c e1       	ldi	r24, 0x1C	; 28
     d0a:	ba d1       	rcall	.+884    	; 0x1080 <mpu6050_writeByte>
     d0c:	61 e0       	ldi	r22, 0x01	; 1
     d0e:	8b e6       	ldi	r24, 0x6B	; 107
     d10:	b7 d1       	rcall	.+878    	; 0x1080 <mpu6050_writeByte>
     d12:	6a dd       	rcall	.-1324   	; 0x7e8 <Kalman_init>
     d14:	43 df       	rcall	.-378    	; 0xb9c <Kalman_init_1>
     d16:	2f ef       	ldi	r18, 0xFF	; 255
     d18:	81 ee       	ldi	r24, 0xE1	; 225
     d1a:	94 e0       	ldi	r25, 0x04	; 4
     d1c:	21 50       	subi	r18, 0x01	; 1
     d1e:	80 40       	sbci	r24, 0x00	; 0
     d20:	90 40       	sbci	r25, 0x00	; 0
     d22:	e1 f7       	brne	.-8      	; 0xd1c <main+0xf2>
     d24:	00 c0       	rjmp	.+0      	; 0xd26 <main+0xfc>
     d26:	00 00       	nop
     d28:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <angle>
     d2c:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <angle+0x1>
     d30:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <angle+0x2>
     d34:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <angle+0x3>
     d38:	10 92 d5 03 	sts	0x03D5, r1	; 0x8003d5 <angle_1>
     d3c:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <angle_1+0x1>
     d40:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <angle_1+0x2>
     d44:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <angle_1+0x3>
     d48:	78 94       	sei
     d4a:	1d 8a       	std	Y+21, r1	; 0x15
     d4c:	1e 8a       	std	Y+22, r1	; 0x16
     d4e:	1f 8a       	std	Y+23, r1	; 0x17
     d50:	18 8e       	std	Y+24, r1	; 0x18
     d52:	04 c0       	rjmp	.+8      	; 0xd5c <main+0x132>
     d54:	6d a2       	std	Y+37, r6	; 0x25
     d56:	7e a2       	std	Y+38, r7	; 0x26
     d58:	cf a2       	std	Y+39, r12	; 0x27
     d5a:	d8 a6       	std	Y+40, r13	; 0x28
     d5c:	ce 01       	movw	r24, r28
     d5e:	05 96       	adiw	r24, 0x05	; 5
     d60:	7c 01       	movw	r14, r24
     d62:	8e 01       	movw	r16, r28
     d64:	0d 5f       	subi	r16, 0xFD	; 253
     d66:	1f 4f       	sbci	r17, 0xFF	; 255
     d68:	9e 01       	movw	r18, r28
     d6a:	2f 5f       	subi	r18, 0xFF	; 255
     d6c:	3f 4f       	sbci	r19, 0xFF	; 255
     d6e:	ae 01       	movw	r20, r28
     d70:	45 5f       	subi	r20, 0xF5	; 245
     d72:	5f 4f       	sbci	r21, 0xFF	; 255
     d74:	be 01       	movw	r22, r28
     d76:	67 5f       	subi	r22, 0xF7	; 247
     d78:	7f 4f       	sbci	r23, 0xFF	; 255
     d7a:	02 96       	adiw	r24, 0x02	; 2
     d7c:	d7 d1       	rcall	.+942    	; 0x112c <mpu6050_getRawData>
     d7e:	89 81       	ldd	r24, Y+1	; 0x01
     d80:	9a 81       	ldd	r25, Y+2	; 0x02
     d82:	84 59       	subi	r24, 0x94	; 148
     d84:	9f 4f       	sbci	r25, 0xFF	; 255
     d86:	9a 83       	std	Y+2, r25	; 0x02
     d88:	89 83       	std	Y+1, r24	; 0x01
     d8a:	8b 81       	ldd	r24, Y+3	; 0x03
     d8c:	9c 81       	ldd	r25, Y+4	; 0x04
     d8e:	80 52       	subi	r24, 0x20	; 32
     d90:	9f 4f       	sbci	r25, 0xFF	; 255
     d92:	9c 83       	std	Y+4, r25	; 0x04
     d94:	8b 83       	std	Y+3, r24	; 0x03
     d96:	8d 81       	ldd	r24, Y+5	; 0x05
     d98:	9e 81       	ldd	r25, Y+6	; 0x06
     d9a:	8f 58       	subi	r24, 0x8F	; 143
     d9c:	9d 4f       	sbci	r25, 0xFD	; 253
     d9e:	9e 83       	std	Y+6, r25	; 0x06
     da0:	8d 83       	std	Y+5, r24	; 0x05
     da2:	7c d2       	rcall	.+1272   	; 0x129c <micros>
     da4:	62 19       	sub	r22, r2
     da6:	73 09       	sbc	r23, r3
     da8:	84 09       	sbc	r24, r4
     daa:	95 09       	sbc	r25, r5
     dac:	ea d5       	rcall	.+3028   	; 0x1982 <__floatunsisf>
     dae:	20 e0       	ldi	r18, 0x00	; 0
     db0:	34 e2       	ldi	r19, 0x24	; 36
     db2:	44 e7       	ldi	r20, 0x74	; 116
     db4:	59 e4       	ldi	r21, 0x49	; 73
     db6:	4c d5       	rcall	.+2712   	; 0x1850 <__divsf3>
     db8:	69 8b       	std	Y+17, r22	; 0x11
     dba:	7a 8b       	std	Y+18, r23	; 0x12
     dbc:	8b 8b       	std	Y+19, r24	; 0x13
     dbe:	9c 8b       	std	Y+20, r25	; 0x14
     dc0:	6d d2       	rcall	.+1242   	; 0x129c <micros>
     dc2:	1b 01       	movw	r2, r22
     dc4:	2c 01       	movw	r4, r24
     dc6:	69 81       	ldd	r22, Y+1	; 0x01
     dc8:	7a 81       	ldd	r23, Y+2	; 0x02
     dca:	07 2e       	mov	r0, r23
     dcc:	00 0c       	add	r0, r0
     dce:	88 0b       	sbc	r24, r24
     dd0:	99 0b       	sbc	r25, r25
     dd2:	d9 d5       	rcall	.+2994   	; 0x1986 <__floatsisf>
     dd4:	20 e0       	ldi	r18, 0x00	; 0
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	43 e8       	ldi	r20, 0x83	; 131
     dda:	52 e4       	ldi	r21, 0x42	; 66
     ddc:	39 d5       	rcall	.+2674   	; 0x1850 <__divsf3>
     dde:	6d 8f       	std	Y+29, r22	; 0x1d
     de0:	7e 8f       	std	Y+30, r23	; 0x1e
     de2:	8f 8f       	std	Y+31, r24	; 0x1f
     de4:	98 a3       	std	Y+32, r25	; 0x20
     de6:	6b 81       	ldd	r22, Y+3	; 0x03
     de8:	7c 81       	ldd	r23, Y+4	; 0x04
     dea:	07 2e       	mov	r0, r23
     dec:	00 0c       	add	r0, r0
     dee:	88 0b       	sbc	r24, r24
     df0:	99 0b       	sbc	r25, r25
     df2:	c9 d5       	rcall	.+2962   	; 0x1986 <__floatsisf>
     df4:	20 e0       	ldi	r18, 0x00	; 0
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	43 e8       	ldi	r20, 0x83	; 131
     dfa:	52 e4       	ldi	r21, 0x42	; 66
     dfc:	29 d5       	rcall	.+2642   	; 0x1850 <__divsf3>
     dfe:	69 a3       	std	Y+33, r22	; 0x21
     e00:	7a a3       	std	Y+34, r23	; 0x22
     e02:	8b a3       	std	Y+35, r24	; 0x23
     e04:	9c a3       	std	Y+36, r25	; 0x24
     e06:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <loop_bool>
     e0a:	90 91 78 03 	lds	r25, 0x0378	; 0x800378 <loop_bool+0x1>
     e0e:	89 2b       	or	r24, r25
     e10:	21 f0       	breq	.+8      	; 0xe1a <main+0x1f0>
     e12:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <loop_bool+0x1>
     e16:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <loop_bool>
     e1a:	8b 84       	ldd	r8, Y+11	; 0x0b
     e1c:	9c 84       	ldd	r9, Y+12	; 0x0c
     e1e:	a9 84       	ldd	r10, Y+9	; 0x09
     e20:	ba 84       	ldd	r11, Y+10	; 0x0a
     e22:	b4 01       	movw	r22, r8
     e24:	09 2c       	mov	r0, r9
     e26:	00 0c       	add	r0, r0
     e28:	88 0b       	sbc	r24, r24
     e2a:	99 0b       	sbc	r25, r25
     e2c:	ac d5       	rcall	.+2904   	; 0x1986 <__floatsisf>
     e2e:	6b 01       	movw	r12, r22
     e30:	7c 01       	movw	r14, r24
     e32:	b5 01       	movw	r22, r10
     e34:	0b 2c       	mov	r0, r11
     e36:	00 0c       	add	r0, r0
     e38:	88 0b       	sbc	r24, r24
     e3a:	99 0b       	sbc	r25, r25
     e3c:	a4 d5       	rcall	.+2888   	; 0x1986 <__floatsisf>
     e3e:	a7 01       	movw	r20, r14
     e40:	96 01       	movw	r18, r12
     e42:	af d4       	rcall	.+2398   	; 0x17a2 <atan2>
     e44:	21 ee       	ldi	r18, 0xE1	; 225
     e46:	3e e2       	ldi	r19, 0x2E	; 46
     e48:	45 e6       	ldi	r20, 0x65	; 101
     e4a:	52 e4       	ldi	r21, 0x42	; 66
     e4c:	7c d6       	rcall	.+3320   	; 0x1b46 <__mulsf3>
     e4e:	69 8f       	std	Y+25, r22	; 0x19
     e50:	7a 8f       	std	Y+26, r23	; 0x1a
     e52:	8b 8f       	std	Y+27, r24	; 0x1b
     e54:	9c 8f       	std	Y+28, r25	; 0x1c
     e56:	c5 01       	movw	r24, r10
     e58:	64 e6       	ldi	r22, 0x64	; 100
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <__divmodhi4>
     e60:	07 2e       	mov	r0, r23
     e62:	00 0c       	add	r0, r0
     e64:	88 0b       	sbc	r24, r24
     e66:	99 0b       	sbc	r25, r25
     e68:	8e d5       	rcall	.+2844   	; 0x1986 <__floatsisf>
     e6a:	6d 87       	std	Y+13, r22	; 0x0d
     e6c:	7e 87       	std	Y+14, r23	; 0x0e
     e6e:	8f 87       	std	Y+15, r24	; 0x0f
     e70:	98 8b       	std	Y+16, r25	; 0x10
     e72:	c4 01       	movw	r24, r8
     e74:	64 e6       	ldi	r22, 0x64	; 100
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <__divmodhi4>
     e7c:	07 2e       	mov	r0, r23
     e7e:	00 0c       	add	r0, r0
     e80:	88 0b       	sbc	r24, r24
     e82:	99 0b       	sbc	r25, r25
     e84:	80 d5       	rcall	.+2816   	; 0x1986 <__floatsisf>
     e86:	6b 01       	movw	r12, r22
     e88:	7c 01       	movw	r14, r24
     e8a:	2d 85       	ldd	r18, Y+13	; 0x0d
     e8c:	3e 85       	ldd	r19, Y+14	; 0x0e
     e8e:	4f 85       	ldd	r20, Y+15	; 0x0f
     e90:	58 89       	ldd	r21, Y+16	; 0x10
     e92:	ca 01       	movw	r24, r20
     e94:	b9 01       	movw	r22, r18
     e96:	57 d6       	rcall	.+3246   	; 0x1b46 <__mulsf3>
     e98:	4b 01       	movw	r8, r22
     e9a:	5c 01       	movw	r10, r24
     e9c:	a7 01       	movw	r20, r14
     e9e:	96 01       	movw	r18, r12
     ea0:	c7 01       	movw	r24, r14
     ea2:	b6 01       	movw	r22, r12
     ea4:	50 d6       	rcall	.+3232   	; 0x1b46 <__mulsf3>
     ea6:	9b 01       	movw	r18, r22
     ea8:	ac 01       	movw	r20, r24
     eaa:	c5 01       	movw	r24, r10
     eac:	b4 01       	movw	r22, r8
     eae:	06 d4       	rcall	.+2060   	; 0x16bc <__addsf3>
     eb0:	b1 d6       	rcall	.+3426   	; 0x1c14 <sqrt>
     eb2:	20 e0       	ldi	r18, 0x00	; 0
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	48 ec       	ldi	r20, 0xC8	; 200
     eb8:	52 e4       	ldi	r21, 0x42	; 66
     eba:	45 d6       	rcall	.+3210   	; 0x1b46 <__mulsf3>
     ebc:	6b 01       	movw	r12, r22
     ebe:	7c 01       	movw	r14, r24
     ec0:	6f 81       	ldd	r22, Y+7	; 0x07
     ec2:	78 85       	ldd	r23, Y+8	; 0x08
     ec4:	07 2e       	mov	r0, r23
     ec6:	00 0c       	add	r0, r0
     ec8:	88 0b       	sbc	r24, r24
     eca:	99 0b       	sbc	r25, r25
     ecc:	5c d5       	rcall	.+2744   	; 0x1986 <__floatsisf>
     ece:	a7 01       	movw	r20, r14
     ed0:	96 01       	movw	r18, r12
     ed2:	67 d4       	rcall	.+2254   	; 0x17a2 <atan2>
     ed4:	21 ee       	ldi	r18, 0xE1	; 225
     ed6:	3e e2       	ldi	r19, 0x2E	; 46
     ed8:	45 e6       	ldi	r20, 0x65	; 101
     eda:	52 e4       	ldi	r21, 0x42	; 66
     edc:	34 d6       	rcall	.+3176   	; 0x1b46 <__mulsf3>
     ede:	4b 01       	movw	r8, r22
     ee0:	5c 01       	movw	r10, r24
     ee2:	e9 88       	ldd	r14, Y+17	; 0x11
     ee4:	fa 88       	ldd	r15, Y+18	; 0x12
     ee6:	0b 89       	ldd	r16, Y+19	; 0x13
     ee8:	1c 89       	ldd	r17, Y+20	; 0x14
     eea:	2d 8d       	ldd	r18, Y+29	; 0x1d
     eec:	3e 8d       	ldd	r19, Y+30	; 0x1e
     eee:	4f 8d       	ldd	r20, Y+31	; 0x1f
     ef0:	58 a1       	ldd	r21, Y+32	; 0x20
     ef2:	69 8d       	ldd	r22, Y+25	; 0x19
     ef4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     ef6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     ef8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     efa:	d5 da       	rcall	.-2646   	; 0x4a6 <getAngle>
     efc:	66 2e       	mov	r6, r22
     efe:	77 2e       	mov	r7, r23
     f00:	c8 2e       	mov	r12, r24
     f02:	d9 2e       	mov	r13, r25
     f04:	e9 88       	ldd	r14, Y+17	; 0x11
     f06:	fa 88       	ldd	r15, Y+18	; 0x12
     f08:	0b 89       	ldd	r16, Y+19	; 0x13
     f0a:	1c 89       	ldd	r17, Y+20	; 0x14
     f0c:	29 a1       	ldd	r18, Y+33	; 0x21
     f0e:	3a a1       	ldd	r19, Y+34	; 0x22
     f10:	4b a1       	ldd	r20, Y+35	; 0x23
     f12:	5c a1       	ldd	r21, Y+36	; 0x24
     f14:	c5 01       	movw	r24, r10
     f16:	b4 01       	movw	r22, r8
     f18:	ae dc       	rcall	.-1700   	; 0x876 <getAngle_1>
     f1a:	46 2d       	mov	r20, r6
     f1c:	57 2d       	mov	r21, r7
     f1e:	6c 2d       	mov	r22, r12
     f20:	7d 2d       	mov	r23, r13
     f22:	89 e7       	ldi	r24, 0x79	; 121
     f24:	93 e0       	ldi	r25, 0x03	; 3
     f26:	a7 d3       	rcall	.+1870   	; 0x1676 <printSD>
     f28:	49 8d       	ldd	r20, Y+25	; 0x19
     f2a:	5a 8d       	ldd	r21, Y+26	; 0x1a
     f2c:	6b 8d       	ldd	r22, Y+27	; 0x1b
     f2e:	7c 8d       	ldd	r23, Y+28	; 0x1c
     f30:	80 e8       	ldi	r24, 0x80	; 128
     f32:	93 e0       	ldi	r25, 0x03	; 3
     f34:	a0 d3       	rcall	.+1856   	; 0x1676 <printSD>
     f36:	b5 01       	movw	r22, r10
     f38:	a4 01       	movw	r20, r8
     f3a:	88 e8       	ldi	r24, 0x88	; 136
     f3c:	93 e0       	ldi	r25, 0x03	; 3
     f3e:	9b d3       	rcall	.+1846   	; 0x1676 <printSD>
     f40:	2f e8       	ldi	r18, 0x8F	; 143
     f42:	32 ec       	ldi	r19, 0xC2	; 194
     f44:	45 e7       	ldi	r20, 0x75	; 117
     f46:	5e e3       	ldi	r21, 0x3E	; 62
     f48:	66 2d       	mov	r22, r6
     f4a:	77 2d       	mov	r23, r7
     f4c:	8c 2d       	mov	r24, r12
     f4e:	9d 2d       	mov	r25, r13
     f50:	fa d5       	rcall	.+3060   	; 0x1b46 <__mulsf3>
     f52:	9b 01       	movw	r18, r22
     f54:	ac 01       	movw	r20, r24
     f56:	6d 89       	ldd	r22, Y+21	; 0x15
     f58:	7e 89       	ldd	r23, Y+22	; 0x16
     f5a:	8f 89       	ldd	r24, Y+23	; 0x17
     f5c:	98 8d       	ldd	r25, Y+24	; 0x18
     f5e:	ae d3       	rcall	.+1884   	; 0x16bc <__addsf3>
     f60:	6d 8b       	std	Y+21, r22	; 0x15
     f62:	7e 8b       	std	Y+22, r23	; 0x16
     f64:	8f 8b       	std	Y+23, r24	; 0x17
     f66:	98 8f       	std	Y+24, r25	; 0x18
     f68:	2d a1       	ldd	r18, Y+37	; 0x25
     f6a:	3e a1       	ldd	r19, Y+38	; 0x26
     f6c:	4f a1       	ldd	r20, Y+39	; 0x27
     f6e:	58 a5       	ldd	r21, Y+40	; 0x28
     f70:	66 2d       	mov	r22, r6
     f72:	77 2d       	mov	r23, r7
     f74:	8c 2d       	mov	r24, r12
     f76:	9d 2d       	mov	r25, r13
     f78:	a0 d3       	rcall	.+1856   	; 0x16ba <__subsf3>
     f7a:	29 89       	ldd	r18, Y+17	; 0x11
     f7c:	3a 89       	ldd	r19, Y+18	; 0x12
     f7e:	4b 89       	ldd	r20, Y+19	; 0x13
     f80:	5c 89       	ldd	r21, Y+20	; 0x14
     f82:	66 d4       	rcall	.+2252   	; 0x1850 <__divsf3>
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	40 ed       	ldi	r20, 0xD0	; 208
     f8a:	51 e4       	ldi	r21, 0x41	; 65
     f8c:	dc d5       	rcall	.+3000   	; 0x1b46 <__mulsf3>
     f8e:	4b 01       	movw	r8, r22
     f90:	5c 01       	movw	r10, r24
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	40 ec       	ldi	r20, 0xC0	; 192
     f98:	50 e4       	ldi	r21, 0x40	; 64
     f9a:	66 2d       	mov	r22, r6
     f9c:	77 2d       	mov	r23, r7
     f9e:	8c 2d       	mov	r24, r12
     fa0:	9d 2d       	mov	r25, r13
     fa2:	d1 d5       	rcall	.+2978   	; 0x1b46 <__mulsf3>
     fa4:	2d 89       	ldd	r18, Y+21	; 0x15
     fa6:	3e 89       	ldd	r19, Y+22	; 0x16
     fa8:	4f 89       	ldd	r20, Y+23	; 0x17
     faa:	58 8d       	ldd	r21, Y+24	; 0x18
     fac:	87 d3       	rcall	.+1806   	; 0x16bc <__addsf3>
     fae:	9b 01       	movw	r18, r22
     fb0:	ac 01       	movw	r20, r24
     fb2:	c5 01       	movw	r24, r10
     fb4:	b4 01       	movw	r22, r8
     fb6:	82 d3       	rcall	.+1796   	; 0x16bc <__addsf3>
     fb8:	4b 01       	movw	r8, r22
     fba:	5c 01       	movw	r10, r24
     fbc:	8a e0       	ldi	r24, 0x0A	; 10
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	0e 94 ba 13 	call	0x2774	; 0x2774 <putchar>
     fc4:	49 d9       	rcall	.-3438   	; 0x258 <PWM_update>
     fc6:	b5 01       	movw	r22, r10
     fc8:	a4 01       	movw	r20, r8
     fca:	81 e9       	ldi	r24, 0x91	; 145
     fcc:	93 e0       	ldi	r25, 0x03	; 3
     fce:	53 d3       	rcall	.+1702   	; 0x1676 <printSD>
     fd0:	66 2d       	mov	r22, r6
     fd2:	77 2d       	mov	r23, r7
     fd4:	8c 2d       	mov	r24, r12
     fd6:	9d 2d       	mov	r25, r13
     fd8:	a3 d4       	rcall	.+2374   	; 0x1920 <__fixsfsi>
     fda:	9b 01       	movw	r18, r22
     fdc:	77 23       	and	r23, r23
     fde:	24 f4       	brge	.+8      	; 0xfe8 <main+0x3be>
     fe0:	22 27       	eor	r18, r18
     fe2:	33 27       	eor	r19, r19
     fe4:	26 1b       	sub	r18, r22
     fe6:	37 0b       	sbc	r19, r23
     fe8:	79 01       	movw	r14, r18
     fea:	b9 01       	movw	r22, r18
     fec:	33 0f       	add	r19, r19
     fee:	88 0b       	sbc	r24, r24
     ff0:	99 0b       	sbc	r25, r25
     ff2:	c9 d4       	rcall	.+2450   	; 0x1986 <__floatsisf>
     ff4:	2c ee       	ldi	r18, 0xEC	; 236
     ff6:	31 e5       	ldi	r19, 0x51	; 81
     ff8:	48 e3       	ldi	r20, 0x38	; 56
     ffa:	5e e3       	ldi	r21, 0x3E	; 62
     ffc:	25 d4       	rcall	.+2122   	; 0x1848 <__cmpsf2>
     ffe:	18 16       	cp	r1, r24
    1000:	24 f4       	brge	.+8      	; 0x100a <main+0x3e0>
    1002:	9e e2       	ldi	r25, 0x2E	; 46
    1004:	e9 16       	cp	r14, r25
    1006:	f1 04       	cpc	r15, r1
    1008:	6c f0       	brlt	.+26     	; 0x1024 <main+0x3fa>
    100a:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <incr+0x1>
    100e:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <incr>
    1012:	88 e9       	ldi	r24, 0x98	; 152
    1014:	93 e0       	ldi	r25, 0x03	; 3
    1016:	9f 93       	push	r25
    1018:	8f 93       	push	r24
    101a:	0e 94 a7 13 	call	0x274e	; 0x274e <printf>
    101e:	0f 90       	pop	r0
    1020:	0f 90       	pop	r0
    1022:	98 ce       	rjmp	.-720    	; 0xd54 <main+0x12a>
    1024:	2c ee       	ldi	r18, 0xEC	; 236
    1026:	31 e5       	ldi	r19, 0x51	; 81
    1028:	48 e3       	ldi	r20, 0x38	; 56
    102a:	5e e3       	ldi	r21, 0x3E	; 62
    102c:	66 2d       	mov	r22, r6
    102e:	77 2d       	mov	r23, r7
    1030:	8c 2d       	mov	r24, r12
    1032:	9d 2d       	mov	r25, r13
    1034:	7d d5       	rcall	.+2810   	; 0x1b30 <__gesf2>
    1036:	18 16       	cp	r1, r24
    1038:	84 f4       	brge	.+32     	; 0x105a <main+0x430>
    103a:	c5 01       	movw	r24, r10
    103c:	b4 01       	movw	r22, r8
    103e:	70 d4       	rcall	.+2272   	; 0x1920 <__fixsfsi>
    1040:	cb 01       	movw	r24, r22
    1042:	68 ee       	ldi	r22, 0xE8	; 232
    1044:	73 e0       	ldi	r23, 0x03	; 3
    1046:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <__divmodhi4>
    104a:	70 93 c4 03 	sts	0x03C4, r23	; 0x8003c4 <incr+0x1>
    104e:	60 93 c3 03 	sts	0x03C3, r22	; 0x8003c3 <incr>
    1052:	80 ea       	ldi	r24, 0xA0	; 160
    1054:	93 e0       	ldi	r25, 0x03	; 3
    1056:	b8 d2       	rcall	.+1392   	; 0x15c8 <printSI>
    1058:	7d ce       	rjmp	.-774    	; 0xd54 <main+0x12a>
    105a:	c5 01       	movw	r24, r10
    105c:	b4 01       	movw	r22, r8
    105e:	60 d4       	rcall	.+2240   	; 0x1920 <__fixsfsi>
    1060:	88 27       	eor	r24, r24
    1062:	99 27       	eor	r25, r25
    1064:	86 1b       	sub	r24, r22
    1066:	97 0b       	sbc	r25, r23
    1068:	68 ee       	ldi	r22, 0xE8	; 232
    106a:	73 e0       	ldi	r23, 0x03	; 3
    106c:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <__divmodhi4>
    1070:	70 93 c4 03 	sts	0x03C4, r23	; 0x8003c4 <incr+0x1>
    1074:	60 93 c3 03 	sts	0x03C3, r22	; 0x8003c3 <incr>
    1078:	80 ea       	ldi	r24, 0xA0	; 160
    107a:	93 e0       	ldi	r25, 0x03	; 3
    107c:	a5 d2       	rcall	.+1354   	; 0x15c8 <printSI>
    107e:	6a ce       	rjmp	.-812    	; 0xd54 <main+0x12a>

00001080 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
    1080:	cf 93       	push	r28
    1082:	df 93       	push	r29
    1084:	d8 2f       	mov	r29, r24
    1086:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
    1088:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
    108a:	b0 d1       	rcall	.+864    	; 0x13ec <i2c_start>
    108c:	8d 2f       	mov	r24, r29
	i2c_stop();
    108e:	04 d2       	rcall	.+1032   	; 0x1498 <i2c_write>
    1090:	8c 2f       	mov	r24, r28
}
    1092:	02 d2       	rcall	.+1028   	; 0x1498 <i2c_write>
    1094:	f1 d1       	rcall	.+994    	; 0x1478 <i2c_stop>
    1096:	df 91       	pop	r29
    1098:	cf 91       	pop	r28
    109a:	08 95       	ret

0000109c <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
    109c:	af 92       	push	r10
    109e:	bf 92       	push	r11
    10a0:	cf 92       	push	r12
    10a2:	df 92       	push	r13
    10a4:	ff 92       	push	r15
    10a6:	0f 93       	push	r16
    10a8:	1f 93       	push	r17
    10aa:	cf 93       	push	r28
    10ac:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
    10ae:	66 23       	and	r22, r22
    10b0:	89 f1       	breq	.+98     	; 0x1114 <mpu6050_readBytes+0x78>
    10b2:	c5 2f       	mov	r28, r21
    10b4:	d4 2f       	mov	r29, r20
    10b6:	f6 2e       	mov	r15, r22
    10b8:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
    10ba:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
    10bc:	97 d1       	rcall	.+814    	; 0x13ec <i2c_start>
    10be:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10c0:	eb d1       	rcall	.+982    	; 0x1498 <i2c_write>
    10c2:	85 e3       	ldi	r24, 0x35	; 53
    10c4:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    10c6:	f1 f7       	brne	.-4      	; 0x10c4 <mpu6050_readBytes+0x28>
    10c8:	00 00       	nop
    10ca:	81 ed       	ldi	r24, 0xD1	; 209
    10cc:	8f d1       	rcall	.+798    	; 0x13ec <i2c_start>
    10ce:	0d 2f       	mov	r16, r29
    10d0:	1c 2f       	mov	r17, r28
    10d2:	cc 24       	eor	r12, r12
    10d4:	ca 94       	dec	r12
    10d6:	cf 0c       	add	r12, r15
    10d8:	d1 2c       	mov	r13, r1
    10da:	ef ef       	ldi	r30, 0xFF	; 255
    10dc:	ce 1a       	sub	r12, r30
    10de:	de 0a       	sbc	r13, r30
    10e0:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    10e2:	d0 e0       	ldi	r29, 0x00	; 0
    10e4:	af 2c       	mov	r10, r15
    10e6:	b1 2c       	mov	r11, r1
    10e8:	f1 e0       	ldi	r31, 0x01	; 1
    10ea:	af 1a       	sub	r10, r31
    10ec:	b1 08       	sbc	r11, r1
    10ee:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
    10f0:	bd 06       	cpc	r11, r29
    10f2:	21 f4       	brne	.+8      	; 0x10fc <mpu6050_readBytes+0x60>
    10f4:	0c d2       	rcall	.+1048   	; 0x150e <i2c_readNak>
    10f6:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
    10f8:	80 83       	st	Z, r24
    10fa:	03 c0       	rjmp	.+6      	; 0x1102 <mpu6050_readBytes+0x66>
    10fc:	ee d1       	rcall	.+988    	; 0x14da <i2c_readAck>
    10fe:	f8 01       	movw	r30, r16
    1100:	80 83       	st	Z, r24
    1102:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    1104:	0f 5f       	subi	r16, 0xFF	; 255
    1106:	1f 4f       	sbci	r17, 0xFF	; 255
    1108:	cc 15       	cp	r28, r12
    110a:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    110c:	81 f7       	brne	.-32     	; 0x10ee <mpu6050_readBytes+0x52>
    110e:	cf 2d       	mov	r28, r15
    1110:	b3 d1       	rcall	.+870    	; 0x1478 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    1112:	01 c0       	rjmp	.+2      	; 0x1116 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    1114:	c0 e0       	ldi	r28, 0x00	; 0
    1116:	8c 2f       	mov	r24, r28
    1118:	df 91       	pop	r29
    111a:	cf 91       	pop	r28
    111c:	1f 91       	pop	r17
    111e:	0f 91       	pop	r16
    1120:	ff 90       	pop	r15
    1122:	df 90       	pop	r13
    1124:	cf 90       	pop	r12
    1126:	bf 90       	pop	r11
    1128:	af 90       	pop	r10
    112a:	08 95       	ret

0000112c <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    112c:	6f 92       	push	r6
    112e:	7f 92       	push	r7
    1130:	8f 92       	push	r8
    1132:	9f 92       	push	r9
    1134:	af 92       	push	r10
    1136:	bf 92       	push	r11
    1138:	cf 92       	push	r12
    113a:	df 92       	push	r13
    113c:	ef 92       	push	r14
    113e:	ff 92       	push	r15
    1140:	0f 93       	push	r16
    1142:	1f 93       	push	r17
    1144:	cf 93       	push	r28
    1146:	df 93       	push	r29
    1148:	cd b7       	in	r28, 0x3d	; 61
    114a:	de b7       	in	r29, 0x3e	; 62
    114c:	2e 97       	sbiw	r28, 0x0e	; 14
    114e:	0f b6       	in	r0, 0x3f	; 63
    1150:	f8 94       	cli
    1152:	de bf       	out	0x3e, r29	; 62
    1154:	0f be       	out	0x3f, r0	; 63
    1156:	cd bf       	out	0x3d, r28	; 61
    1158:	4c 01       	movw	r8, r24
    115a:	5b 01       	movw	r10, r22
    115c:	6a 01       	movw	r12, r20
    115e:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    1160:	ae 01       	movw	r20, r28
    1162:	4f 5f       	subi	r20, 0xFF	; 255
    1164:	5f 4f       	sbci	r21, 0xFF	; 255
    1166:	6e e0       	ldi	r22, 0x0E	; 14
    1168:	8b e3       	ldi	r24, 0x3B	; 59
    116a:	98 df       	rcall	.-208    	; 0x109c <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    116c:	89 81       	ldd	r24, Y+1	; 0x01
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	98 2f       	mov	r25, r24
    1172:	88 27       	eor	r24, r24
    1174:	2a 81       	ldd	r18, Y+2	; 0x02
    1176:	82 2b       	or	r24, r18
    1178:	f4 01       	movw	r30, r8
    117a:	91 83       	std	Z+1, r25	; 0x01
    117c:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    117e:	8b 81       	ldd	r24, Y+3	; 0x03
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	98 2f       	mov	r25, r24
    1184:	88 27       	eor	r24, r24
    1186:	2c 81       	ldd	r18, Y+4	; 0x04
    1188:	82 2b       	or	r24, r18
    118a:	f5 01       	movw	r30, r10
    118c:	91 83       	std	Z+1, r25	; 0x01
    118e:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    1190:	8d 81       	ldd	r24, Y+5	; 0x05
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	98 2f       	mov	r25, r24
    1196:	88 27       	eor	r24, r24
    1198:	2e 81       	ldd	r18, Y+6	; 0x06
    119a:	82 2b       	or	r24, r18
    119c:	f6 01       	movw	r30, r12
    119e:	91 83       	std	Z+1, r25	; 0x01
    11a0:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    11a2:	89 85       	ldd	r24, Y+9	; 0x09
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	98 2f       	mov	r25, r24
    11a8:	88 27       	eor	r24, r24
    11aa:	2a 85       	ldd	r18, Y+10	; 0x0a
    11ac:	82 2b       	or	r24, r18
    11ae:	f3 01       	movw	r30, r6
    11b0:	91 83       	std	Z+1, r25	; 0x01
    11b2:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    11b4:	8b 85       	ldd	r24, Y+11	; 0x0b
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	98 2f       	mov	r25, r24
    11ba:	88 27       	eor	r24, r24
    11bc:	2c 85       	ldd	r18, Y+12	; 0x0c
    11be:	82 2b       	or	r24, r18
    11c0:	f8 01       	movw	r30, r16
    11c2:	91 83       	std	Z+1, r25	; 0x01
    11c4:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    11c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	98 2f       	mov	r25, r24
    11cc:	88 27       	eor	r24, r24
    11ce:	2e 85       	ldd	r18, Y+14	; 0x0e
    11d0:	82 2b       	or	r24, r18
    11d2:	f7 01       	movw	r30, r14
    11d4:	91 83       	std	Z+1, r25	; 0x01
    11d6:	80 83       	st	Z, r24
    11d8:	2e 96       	adiw	r28, 0x0e	; 14
    11da:	0f b6       	in	r0, 0x3f	; 63
    11dc:	f8 94       	cli
    11de:	de bf       	out	0x3e, r29	; 62
    11e0:	0f be       	out	0x3f, r0	; 63
    11e2:	cd bf       	out	0x3d, r28	; 61
    11e4:	df 91       	pop	r29
    11e6:	cf 91       	pop	r28
    11e8:	1f 91       	pop	r17
    11ea:	0f 91       	pop	r16
    11ec:	ff 90       	pop	r15
    11ee:	ef 90       	pop	r14
    11f0:	df 90       	pop	r13
    11f2:	cf 90       	pop	r12
    11f4:	bf 90       	pop	r11
    11f6:	af 90       	pop	r10
    11f8:	9f 90       	pop	r9
    11fa:	8f 90       	pop	r8
    11fc:	7f 90       	pop	r7
    11fe:	6f 90       	pop	r6
    1200:	08 95       	ret

00001202 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    1202:	e1 ea       	ldi	r30, 0xA1	; 161
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	80 81       	ld	r24, Z
    1208:	81 60       	ori	r24, 0x01	; 1
    120a:	80 83       	st	Z, r24
    120c:	e0 ea       	ldi	r30, 0xA0	; 160
    120e:	f0 e0       	ldi	r31, 0x00	; 0
    1210:	80 81       	ld	r24, Z
    1212:	81 60       	ori	r24, 0x01	; 1
    1214:	80 83       	st	Z, r24
    1216:	80 81       	ld	r24, Z
    1218:	80 68       	ori	r24, 0x80	; 128
    121a:	80 83       	st	Z, r24
    121c:	80 81       	ld	r24, Z
    121e:	80 62       	ori	r24, 0x20	; 32
    1220:	80 83       	st	Z, r24
    1222:	80 81       	ld	r24, Z
    1224:	88 60       	ori	r24, 0x08	; 8
    1226:	80 83       	st	Z, r24
    1228:	08 95       	ret

0000122a <setup_timer3>:
    122a:	e1 e9       	ldi	r30, 0x91	; 145
    122c:	f0 e0       	ldi	r31, 0x00	; 0
    122e:	80 81       	ld	r24, Z
    1230:	81 60       	ori	r24, 0x01	; 1
    1232:	80 83       	st	Z, r24
    1234:	e0 e9       	ldi	r30, 0x90	; 144
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	80 81       	ld	r24, Z
    123a:	81 60       	ori	r24, 0x01	; 1
    123c:	80 83       	st	Z, r24
    123e:	80 81       	ld	r24, Z
    1240:	80 68       	ori	r24, 0x80	; 128
    1242:	80 83       	st	Z, r24
    1244:	80 81       	ld	r24, Z
    1246:	80 62       	ori	r24, 0x20	; 32
    1248:	80 83       	st	Z, r24
    124a:	80 81       	ld	r24, Z
    124c:	88 60       	ori	r24, 0x08	; 8
    124e:	80 83       	st	Z, r24
    1250:	08 95       	ret

00001252 <setup_timer5>:
    1252:	e1 e2       	ldi	r30, 0x21	; 33
    1254:	f1 e0       	ldi	r31, 0x01	; 1
    1256:	80 81       	ld	r24, Z
    1258:	81 60       	ori	r24, 0x01	; 1
    125a:	80 83       	st	Z, r24
    125c:	80 81       	ld	r24, Z
    125e:	88 60       	ori	r24, 0x08	; 8
    1260:	80 83       	st	Z, r24
    1262:	08 95       	ret

00001264 <Enable_timer5_compare_interrupt>:
    1264:	e3 e7       	ldi	r30, 0x73	; 115
    1266:	f0 e0       	ldi	r31, 0x00	; 0
    1268:	80 81       	ld	r24, Z
    126a:	82 60       	ori	r24, 0x02	; 2
    126c:	80 83       	st	Z, r24
    126e:	08 95       	ret

00001270 <setup_timer1>:
    1270:	e1 e8       	ldi	r30, 0x81	; 129
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	80 81       	ld	r24, Z
    1276:	81 60       	ori	r24, 0x01	; 1
    1278:	80 83       	st	Z, r24
    127a:	80 81       	ld	r24, Z
    127c:	88 60       	ori	r24, 0x08	; 8
    127e:	80 83       	st	Z, r24
    1280:	08 95       	ret

00001282 <setup_timer0>:
    1282:	85 b5       	in	r24, 0x25	; 37
    1284:	81 60       	ori	r24, 0x01	; 1
    1286:	85 bd       	out	0x25, r24	; 37
    1288:	85 b5       	in	r24, 0x25	; 37
    128a:	82 60       	ori	r24, 0x02	; 2
    128c:	85 bd       	out	0x25, r24	; 37
    128e:	08 95       	ret

00001290 <Enable_timer0_overflow_interrupt>:
    1290:	ee e6       	ldi	r30, 0x6E	; 110
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	80 81       	ld	r24, Z
    1296:	81 60       	ori	r24, 0x01	; 1
    1298:	80 83       	st	Z, r24
    129a:	08 95       	ret

0000129c <micros>:
    129c:	3f b7       	in	r19, 0x3f	; 63
    129e:	f8 94       	cli
    12a0:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <timer0_overflow_count>
    12a4:	90 91 b8 03 	lds	r25, 0x03B8	; 0x8003b8 <timer0_overflow_count+0x1>
    12a8:	a0 91 b9 03 	lds	r26, 0x03B9	; 0x8003b9 <timer0_overflow_count+0x2>
    12ac:	b0 91 ba 03 	lds	r27, 0x03BA	; 0x8003ba <timer0_overflow_count+0x3>
    12b0:	26 b5       	in	r18, 0x26	; 38
    12b2:	a8 9b       	sbis	0x15, 0	; 21
    12b4:	05 c0       	rjmp	.+10     	; 0x12c0 <micros+0x24>
    12b6:	2f 3f       	cpi	r18, 0xFF	; 255
    12b8:	19 f0       	breq	.+6      	; 0x12c0 <micros+0x24>
    12ba:	01 96       	adiw	r24, 0x01	; 1
    12bc:	a1 1d       	adc	r26, r1
    12be:	b1 1d       	adc	r27, r1
    12c0:	3f bf       	out	0x3f, r19	; 63
    12c2:	ba 2f       	mov	r27, r26
    12c4:	a9 2f       	mov	r26, r25
    12c6:	98 2f       	mov	r25, r24
    12c8:	88 27       	eor	r24, r24
    12ca:	82 0f       	add	r24, r18
    12cc:	91 1d       	adc	r25, r1
    12ce:	a1 1d       	adc	r26, r1
    12d0:	b1 1d       	adc	r27, r1
    12d2:	bc 01       	movw	r22, r24
    12d4:	cd 01       	movw	r24, r26
    12d6:	66 0f       	add	r22, r22
    12d8:	77 1f       	adc	r23, r23
    12da:	88 1f       	adc	r24, r24
    12dc:	99 1f       	adc	r25, r25
    12de:	66 0f       	add	r22, r22
    12e0:	77 1f       	adc	r23, r23
    12e2:	88 1f       	adc	r24, r24
    12e4:	99 1f       	adc	r25, r25
    12e6:	08 95       	ret

000012e8 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    12e8:	1f 92       	push	r1
    12ea:	0f 92       	push	r0
    12ec:	0f b6       	in	r0, 0x3f	; 63
    12ee:	0f 92       	push	r0
    12f0:	11 24       	eor	r1, r1
    12f2:	2f 93       	push	r18
    12f4:	3f 93       	push	r19
    12f6:	8f 93       	push	r24
    12f8:	9f 93       	push	r25
    12fa:	af 93       	push	r26
    12fc:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    12fe:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <timer0_millis>
    1302:	90 91 b4 03 	lds	r25, 0x03B4	; 0x8003b4 <timer0_millis+0x1>
    1306:	a0 91 b5 03 	lds	r26, 0x03B5	; 0x8003b5 <timer0_millis+0x2>
    130a:	b0 91 b6 03 	lds	r27, 0x03B6	; 0x8003b6 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    130e:	30 91 b2 03 	lds	r19, 0x03B2	; 0x8003b2 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    1312:	23 e0       	ldi	r18, 0x03	; 3
    1314:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    1316:	2d 37       	cpi	r18, 0x7D	; 125
    1318:	20 f4       	brcc	.+8      	; 0x1322 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    131a:	01 96       	adiw	r24, 0x01	; 1
    131c:	a1 1d       	adc	r26, r1
    131e:	b1 1d       	adc	r27, r1
    1320:	05 c0       	rjmp	.+10     	; 0x132c <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    1322:	26 e8       	ldi	r18, 0x86	; 134
    1324:	23 0f       	add	r18, r19
		m += 1;
    1326:	02 96       	adiw	r24, 0x02	; 2
    1328:	a1 1d       	adc	r26, r1
    132a:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    132c:	20 93 b2 03 	sts	0x03B2, r18	; 0x8003b2 <timer0_fract>
	timer0_millis = m;
    1330:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <timer0_millis>
    1334:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <timer0_millis+0x1>
    1338:	a0 93 b5 03 	sts	0x03B5, r26	; 0x8003b5 <timer0_millis+0x2>
    133c:	b0 93 b6 03 	sts	0x03B6, r27	; 0x8003b6 <timer0_millis+0x3>
	timer0_overflow_count++;
    1340:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <timer0_overflow_count>
    1344:	90 91 b8 03 	lds	r25, 0x03B8	; 0x8003b8 <timer0_overflow_count+0x1>
    1348:	a0 91 b9 03 	lds	r26, 0x03B9	; 0x8003b9 <timer0_overflow_count+0x2>
    134c:	b0 91 ba 03 	lds	r27, 0x03BA	; 0x8003ba <timer0_overflow_count+0x3>
    1350:	01 96       	adiw	r24, 0x01	; 1
    1352:	a1 1d       	adc	r26, r1
    1354:	b1 1d       	adc	r27, r1
    1356:	80 93 b7 03 	sts	0x03B7, r24	; 0x8003b7 <timer0_overflow_count>
    135a:	90 93 b8 03 	sts	0x03B8, r25	; 0x8003b8 <timer0_overflow_count+0x1>
    135e:	a0 93 b9 03 	sts	0x03B9, r26	; 0x8003b9 <timer0_overflow_count+0x2>
    1362:	b0 93 ba 03 	sts	0x03BA, r27	; 0x8003ba <timer0_overflow_count+0x3>
}
    1366:	bf 91       	pop	r27
    1368:	af 91       	pop	r26
    136a:	9f 91       	pop	r25
    136c:	8f 91       	pop	r24
    136e:	3f 91       	pop	r19
    1370:	2f 91       	pop	r18
    1372:	0f 90       	pop	r0
    1374:	0f be       	out	0x3f, r0	; 63
    1376:	0f 90       	pop	r0
    1378:	1f 90       	pop	r1
    137a:	18 95       	reti

0000137c <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    137c:	1f 92       	push	r1
    137e:	0f 92       	push	r0
    1380:	0f b6       	in	r0, 0x3f	; 63
    1382:	0f 92       	push	r0
    1384:	11 24       	eor	r1, r1
	//PWM_update();
}
    1386:	0f 90       	pop	r0
    1388:	0f be       	out	0x3f, r0	; 63
    138a:	0f 90       	pop	r0
    138c:	1f 90       	pop	r1
    138e:	18 95       	reti

00001390 <__vector_17>:
ISR(TIMER1_COMPA_vect)//motor update interrupt routine
{
    1390:	1f 92       	push	r1
    1392:	0f 92       	push	r0
    1394:	0f b6       	in	r0, 0x3f	; 63
    1396:	0f 92       	push	r0
    1398:	11 24       	eor	r1, r1
    139a:	0b b6       	in	r0, 0x3b	; 59
    139c:	0f 92       	push	r0
    139e:	2f 93       	push	r18
    13a0:	3f 93       	push	r19
    13a2:	4f 93       	push	r20
    13a4:	5f 93       	push	r21
    13a6:	6f 93       	push	r22
    13a8:	7f 93       	push	r23
    13aa:	8f 93       	push	r24
    13ac:	9f 93       	push	r25
    13ae:	af 93       	push	r26
    13b0:	bf 93       	push	r27
    13b2:	ef 93       	push	r30
    13b4:	ff 93       	push	r31
	PWM_update_2();
    13b6:	0e 94 ae 01 	call	0x35c	; 0x35c <PWM_update_2>
    13ba:	ff 91       	pop	r31
    13bc:	ef 91       	pop	r30
    13be:	bf 91       	pop	r27
    13c0:	af 91       	pop	r26
    13c2:	9f 91       	pop	r25
    13c4:	8f 91       	pop	r24
    13c6:	7f 91       	pop	r23
    13c8:	6f 91       	pop	r22
    13ca:	5f 91       	pop	r21
    13cc:	4f 91       	pop	r20
    13ce:	3f 91       	pop	r19
    13d0:	2f 91       	pop	r18
    13d2:	0f 90       	pop	r0
    13d4:	0b be       	out	0x3b, r0	; 59
    13d6:	0f 90       	pop	r0
    13d8:	0f be       	out	0x3f, r0	; 63
    13da:	0f 90       	pop	r0
    13dc:	1f 90       	pop	r1
    13de:	18 95       	reti

000013e0 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    13e0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    13e4:	8c e0       	ldi	r24, 0x0C	; 12
    13e6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    13ea:	08 95       	ret

000013ec <i2c_start>:
    13ec:	94 ea       	ldi	r25, 0xA4	; 164
    13ee:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    13f2:	4f ef       	ldi	r20, 0xFF	; 255
    13f4:	50 e0       	ldi	r21, 0x00	; 0
    13f6:	60 e0       	ldi	r22, 0x00	; 0
    13f8:	70 e0       	ldi	r23, 0x00	; 0
    13fa:	ec eb       	ldi	r30, 0xBC	; 188
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	90 81       	ld	r25, Z
    1400:	99 23       	and	r25, r25
    1402:	34 f0       	brlt	.+12     	; 0x1410 <i2c_start+0x24>
    1404:	41 50       	subi	r20, 0x01	; 1
    1406:	51 09       	sbc	r21, r1
    1408:	61 09       	sbc	r22, r1
    140a:	71 09       	sbc	r23, r1
    140c:	c0 f7       	brcc	.-16     	; 0x13fe <i2c_start+0x12>
    140e:	04 c0       	rjmp	.+8      	; 0x1418 <i2c_start+0x2c>
    1410:	45 2b       	or	r20, r21
    1412:	46 2b       	or	r20, r22
    1414:	47 2b       	or	r20, r23
    1416:	41 f1       	breq	.+80     	; 0x1468 <i2c_start+0x7c>
    1418:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    141c:	98 7f       	andi	r25, 0xF8	; 248
    141e:	98 30       	cpi	r25, 0x08	; 8
    1420:	11 f0       	breq	.+4      	; 0x1426 <i2c_start+0x3a>
    1422:	90 31       	cpi	r25, 0x10	; 16
    1424:	19 f5       	brne	.+70     	; 0x146c <i2c_start+0x80>
    1426:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    142a:	84 e8       	ldi	r24, 0x84	; 132
    142c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1430:	8f ef       	ldi	r24, 0xFF	; 255
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	a0 e0       	ldi	r26, 0x00	; 0
    1436:	b0 e0       	ldi	r27, 0x00	; 0
    1438:	ec eb       	ldi	r30, 0xBC	; 188
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	20 81       	ld	r18, Z
    143e:	22 23       	and	r18, r18
    1440:	2c f0       	brlt	.+10     	; 0x144c <i2c_start+0x60>
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	a1 09       	sbc	r26, r1
    1446:	b1 09       	sbc	r27, r1
    1448:	c8 f7       	brcc	.-14     	; 0x143c <i2c_start+0x50>
    144a:	04 c0       	rjmp	.+8      	; 0x1454 <i2c_start+0x68>
    144c:	89 2b       	or	r24, r25
    144e:	8a 2b       	or	r24, r26
    1450:	8b 2b       	or	r24, r27
    1452:	71 f0       	breq	.+28     	; 0x1470 <i2c_start+0x84>
    1454:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1458:	98 7f       	andi	r25, 0xF8	; 248
    145a:	98 31       	cpi	r25, 0x18	; 24
    145c:	59 f0       	breq	.+22     	; 0x1474 <i2c_start+0x88>
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	90 34       	cpi	r25, 0x40	; 64
    1462:	49 f4       	brne	.+18     	; 0x1476 <i2c_start+0x8a>
    1464:	80 e0       	ldi	r24, 0x00	; 0
    1466:	08 95       	ret
    1468:	81 e0       	ldi	r24, 0x01	; 1
    146a:	08 95       	ret
    146c:	81 e0       	ldi	r24, 0x01	; 1
    146e:	08 95       	ret
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	08 95       	ret
    1474:	80 e0       	ldi	r24, 0x00	; 0
    1476:	08 95       	ret

00001478 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    1478:	84 e9       	ldi	r24, 0x94	; 148
    147a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    147e:	80 e0       	ldi	r24, 0x00	; 0
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	ec eb       	ldi	r30, 0xBC	; 188
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	20 81       	ld	r18, Z
    1488:	24 ff       	sbrs	r18, 4
    148a:	05 c0       	rjmp	.+10     	; 0x1496 <i2c_stop+0x1e>
    148c:	01 96       	adiw	r24, 0x01	; 1
    148e:	81 15       	cp	r24, r1
    1490:	21 e0       	ldi	r18, 0x01	; 1
    1492:	92 07       	cpc	r25, r18
    1494:	c1 f7       	brne	.-16     	; 0x1486 <i2c_stop+0xe>
    1496:	08 95       	ret

00001498 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    1498:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    149c:	84 e8       	ldi	r24, 0x84	; 132
    149e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    14a2:	8f ef       	ldi	r24, 0xFF	; 255
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	a0 e0       	ldi	r26, 0x00	; 0
    14a8:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    14aa:	ec eb       	ldi	r30, 0xBC	; 188
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	20 81       	ld	r18, Z
    14b0:	22 23       	and	r18, r18
    14b2:	2c f0       	brlt	.+10     	; 0x14be <i2c_write+0x26>
    14b4:	01 97       	sbiw	r24, 0x01	; 1
    14b6:	a1 09       	sbc	r26, r1
    14b8:	b1 09       	sbc	r27, r1
    14ba:	c8 f7       	brcc	.-14     	; 0x14ae <i2c_write+0x16>
    14bc:	04 c0       	rjmp	.+8      	; 0x14c6 <i2c_write+0x2e>
	if(i2c_timer == 0)
    14be:	89 2b       	or	r24, r25
    14c0:	8a 2b       	or	r24, r26
    14c2:	8b 2b       	or	r24, r27
    14c4:	41 f0       	breq	.+16     	; 0x14d6 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    14c6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    14ca:	98 7f       	andi	r25, 0xF8	; 248
    14cc:	81 e0       	ldi	r24, 0x01	; 1
    14ce:	98 32       	cpi	r25, 0x28	; 40
    14d0:	19 f4       	brne	.+6      	; 0x14d8 <i2c_write+0x40>
    14d2:	80 e0       	ldi	r24, 0x00	; 0
    14d4:	08 95       	ret
    14d6:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    14d8:	08 95       	ret

000014da <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    14da:	84 ec       	ldi	r24, 0xC4	; 196
    14dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    14e0:	8f ef       	ldi	r24, 0xFF	; 255
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	a0 e0       	ldi	r26, 0x00	; 0
    14e6:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    14e8:	ec eb       	ldi	r30, 0xBC	; 188
    14ea:	f0 e0       	ldi	r31, 0x00	; 0
    14ec:	20 81       	ld	r18, Z
    14ee:	22 23       	and	r18, r18
    14f0:	2c f0       	brlt	.+10     	; 0x14fc <i2c_readAck+0x22>
    14f2:	01 97       	sbiw	r24, 0x01	; 1
    14f4:	a1 09       	sbc	r26, r1
    14f6:	b1 09       	sbc	r27, r1
    14f8:	c8 f7       	brcc	.-14     	; 0x14ec <i2c_readAck+0x12>
    14fa:	04 c0       	rjmp	.+8      	; 0x1504 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    14fc:	89 2b       	or	r24, r25
    14fe:	8a 2b       	or	r24, r26
    1500:	8b 2b       	or	r24, r27
    1502:	19 f0       	breq	.+6      	; 0x150a <i2c_readAck+0x30>
		return 0;

    return TWDR;
    1504:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1508:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    150a:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    150c:	08 95       	ret

0000150e <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    150e:	84 e8       	ldi	r24, 0x84	; 132
    1510:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    1514:	8f ef       	ldi	r24, 0xFF	; 255
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	a0 e0       	ldi	r26, 0x00	; 0
    151a:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    151c:	ec eb       	ldi	r30, 0xBC	; 188
    151e:	f0 e0       	ldi	r31, 0x00	; 0
    1520:	20 81       	ld	r18, Z
    1522:	22 23       	and	r18, r18
    1524:	2c f0       	brlt	.+10     	; 0x1530 <i2c_readNak+0x22>
    1526:	01 97       	sbiw	r24, 0x01	; 1
    1528:	a1 09       	sbc	r26, r1
    152a:	b1 09       	sbc	r27, r1
    152c:	c8 f7       	brcc	.-14     	; 0x1520 <i2c_readNak+0x12>
    152e:	04 c0       	rjmp	.+8      	; 0x1538 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    1530:	89 2b       	or	r24, r25
    1532:	8a 2b       	or	r24, r26
    1534:	8b 2b       	or	r24, r27
    1536:	19 f0       	breq	.+6      	; 0x153e <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    1538:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    153c:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    153e:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    1540:	08 95       	ret

00001542 <USART_Init>:
{
	char c[10];
	itoa(*value, c, 10);
	printf(c);
	printf("\n");
}
    1542:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1546:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    154a:	88 e0       	ldi	r24, 0x08	; 8
    154c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    1550:	8e e0       	ldi	r24, 0x0E	; 14
    1552:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1556:	08 95       	ret

00001558 <print16>:
    1558:	0f 93       	push	r16
    155a:	1f 93       	push	r17
    155c:	cf 93       	push	r28
    155e:	df 93       	push	r29
    1560:	cd b7       	in	r28, 0x3d	; 61
    1562:	de b7       	in	r29, 0x3e	; 62
    1564:	2a 97       	sbiw	r28, 0x0a	; 10
    1566:	0f b6       	in	r0, 0x3f	; 63
    1568:	f8 94       	cli
    156a:	de bf       	out	0x3e, r29	; 62
    156c:	0f be       	out	0x3f, r0	; 63
    156e:	cd bf       	out	0x3d, r28	; 61
    1570:	4a e0       	ldi	r20, 0x0A	; 10
    1572:	8e 01       	movw	r16, r28
    1574:	0f 5f       	subi	r16, 0xFF	; 255
    1576:	1f 4f       	sbci	r17, 0xFF	; 255
    1578:	b8 01       	movw	r22, r16
    157a:	fc 01       	movw	r30, r24
    157c:	80 81       	ld	r24, Z
    157e:	91 81       	ldd	r25, Z+1	; 0x01
    1580:	0e 94 fe 12 	call	0x25fc	; 0x25fc <__itoa_ncheck>
    1584:	1f 93       	push	r17
    1586:	0f 93       	push	r16
    1588:	0e 94 a7 13 	call	0x274e	; 0x274e <printf>
    158c:	0f 90       	pop	r0
    158e:	0f 90       	pop	r0
    1590:	2a 96       	adiw	r28, 0x0a	; 10
    1592:	0f b6       	in	r0, 0x3f	; 63
    1594:	f8 94       	cli
    1596:	de bf       	out	0x3e, r29	; 62
    1598:	0f be       	out	0x3f, r0	; 63
    159a:	cd bf       	out	0x3d, r28	; 61
    159c:	df 91       	pop	r29
    159e:	cf 91       	pop	r28
    15a0:	1f 91       	pop	r17
    15a2:	0f 91       	pop	r16
    15a4:	08 95       	ret

000015a6 <uart_putchar>:

int uart_putchar(char c, FILE *stream)
{
    15a6:	cf 93       	push	r28
    15a8:	c8 2f       	mov	r28, r24
	if (c == '\n')
    15aa:	8a 30       	cpi	r24, 0x0A	; 10
    15ac:	11 f4       	brne	.+4      	; 0x15b2 <uart_putchar+0xc>
	uart_putchar('\r', stream);
    15ae:	8d e0       	ldi	r24, 0x0D	; 13
    15b0:	fa df       	rcall	.-12     	; 0x15a6 <uart_putchar>
	while (!( UCSR0A & (1<<UDRE0)));
    15b2:	e0 ec       	ldi	r30, 0xC0	; 192
    15b4:	f0 e0       	ldi	r31, 0x00	; 0
    15b6:	80 81       	ld	r24, Z
    15b8:	85 ff       	sbrs	r24, 5
    15ba:	fd cf       	rjmp	.-6      	; 0x15b6 <uart_putchar+0x10>

	UDR0 = c;
    15bc:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	return 0;
}
    15c0:	80 e0       	ldi	r24, 0x00	; 0
    15c2:	90 e0       	ldi	r25, 0x00	; 0
    15c4:	cf 91       	pop	r28
    15c6:	08 95       	ret

000015c8 <printSI>:
void printSI(char c[20],int16_t intToPrint)
{
    15c8:	cf 93       	push	r28
    15ca:	df 93       	push	r29
    15cc:	1f 92       	push	r1
    15ce:	1f 92       	push	r1
    15d0:	cd b7       	in	r28, 0x3d	; 61
    15d2:	de b7       	in	r29, 0x3e	; 62
    15d4:	7a 83       	std	Y+2, r23	; 0x02
    15d6:	69 83       	std	Y+1, r22	; 0x01
	printf(c);
    15d8:	9f 93       	push	r25
    15da:	8f 93       	push	r24
    15dc:	0e 94 a7 13 	call	0x274e	; 0x274e <printf>
	//printf(" ");
	print16(&intToPrint);
    15e0:	ce 01       	movw	r24, r28
    15e2:	01 96       	adiw	r24, 0x01	; 1
    15e4:	b9 df       	rcall	.-142    	; 0x1558 <print16>
	printf("  ");
    15e6:	88 ea       	ldi	r24, 0xA8	; 168
    15e8:	93 e0       	ldi	r25, 0x03	; 3
    15ea:	9f 93       	push	r25
    15ec:	8f 93       	push	r24
    15ee:	0e 94 a7 13 	call	0x274e	; 0x274e <printf>
}
    15f2:	0f 90       	pop	r0
    15f4:	0f 90       	pop	r0
    15f6:	0f 90       	pop	r0
    15f8:	0f 90       	pop	r0
    15fa:	0f 90       	pop	r0
    15fc:	0f 90       	pop	r0
    15fe:	df 91       	pop	r29
    1600:	cf 91       	pop	r28
    1602:	08 95       	ret

00001604 <printDouble>:
void printDouble(double *value)
{
    1604:	0f 93       	push	r16
    1606:	1f 93       	push	r17
    1608:	cf 93       	push	r28
    160a:	df 93       	push	r29
    160c:	cd b7       	in	r28, 0x3d	; 61
    160e:	de b7       	in	r29, 0x3e	; 62
    1610:	64 97       	sbiw	r28, 0x14	; 20
    1612:	0f b6       	in	r0, 0x3f	; 63
    1614:	f8 94       	cli
    1616:	de bf       	out	0x3e, r29	; 62
    1618:	0f be       	out	0x3f, r0	; 63
    161a:	cd bf       	out	0x3d, r28	; 61
    161c:	fc 01       	movw	r30, r24
	char c[20]={0};
    161e:	8e 01       	movw	r16, r28
    1620:	0f 5f       	subi	r16, 0xFF	; 255
    1622:	1f 4f       	sbci	r17, 0xFF	; 255
    1624:	84 e1       	ldi	r24, 0x14	; 20
    1626:	d8 01       	movw	r26, r16
    1628:	1d 92       	st	X+, r1
    162a:	8a 95       	dec	r24
    162c:	e9 f7       	brne	.-6      	; 0x1628 <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    162e:	83 81       	ldd	r24, Z+3	; 0x03
    1630:	8f 93       	push	r24
    1632:	82 81       	ldd	r24, Z+2	; 0x02
    1634:	8f 93       	push	r24
    1636:	81 81       	ldd	r24, Z+1	; 0x01
    1638:	8f 93       	push	r24
    163a:	80 81       	ld	r24, Z
    163c:	8f 93       	push	r24
    163e:	8b ea       	ldi	r24, 0xAB	; 171
    1640:	93 e0       	ldi	r25, 0x03	; 3
    1642:	9f 93       	push	r25
    1644:	8f 93       	push	r24
    1646:	1f 93       	push	r17
    1648:	0f 93       	push	r16
    164a:	0e 94 bf 13 	call	0x277e	; 0x277e <sprintf>
	printf(c);
    164e:	1f 93       	push	r17
    1650:	0f 93       	push	r16
    1652:	0e 94 a7 13 	call	0x274e	; 0x274e <printf>
}
    1656:	0f b6       	in	r0, 0x3f	; 63
    1658:	f8 94       	cli
    165a:	de bf       	out	0x3e, r29	; 62
    165c:	0f be       	out	0x3f, r0	; 63
    165e:	cd bf       	out	0x3d, r28	; 61
    1660:	64 96       	adiw	r28, 0x14	; 20
    1662:	0f b6       	in	r0, 0x3f	; 63
    1664:	f8 94       	cli
    1666:	de bf       	out	0x3e, r29	; 62
    1668:	0f be       	out	0x3f, r0	; 63
    166a:	cd bf       	out	0x3d, r28	; 61
    166c:	df 91       	pop	r29
    166e:	cf 91       	pop	r28
    1670:	1f 91       	pop	r17
    1672:	0f 91       	pop	r16
    1674:	08 95       	ret

00001676 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    1676:	cf 93       	push	r28
    1678:	df 93       	push	r29
    167a:	00 d0       	rcall	.+0      	; 0x167c <printSD+0x6>
    167c:	1f 92       	push	r1
    167e:	cd b7       	in	r28, 0x3d	; 61
    1680:	de b7       	in	r29, 0x3e	; 62
    1682:	49 83       	std	Y+1, r20	; 0x01
    1684:	5a 83       	std	Y+2, r21	; 0x02
    1686:	6b 83       	std	Y+3, r22	; 0x03
    1688:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    168a:	9f 93       	push	r25
    168c:	8f 93       	push	r24
    168e:	0e 94 a7 13 	call	0x274e	; 0x274e <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    1692:	ce 01       	movw	r24, r28
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	b6 df       	rcall	.-148    	; 0x1604 <printDouble>
	printf("  ");
    1698:	88 ea       	ldi	r24, 0xA8	; 168
    169a:	93 e0       	ldi	r25, 0x03	; 3
    169c:	9f 93       	push	r25
    169e:	8f 93       	push	r24
    16a0:	0e 94 a7 13 	call	0x274e	; 0x274e <printf>
    16a4:	0f 90       	pop	r0
    16a6:	0f 90       	pop	r0
    16a8:	0f 90       	pop	r0
    16aa:	0f 90       	pop	r0
    16ac:	0f 90       	pop	r0
    16ae:	0f 90       	pop	r0
    16b0:	0f 90       	pop	r0
    16b2:	0f 90       	pop	r0
    16b4:	df 91       	pop	r29
    16b6:	cf 91       	pop	r28
    16b8:	08 95       	ret

000016ba <__subsf3>:
    16ba:	50 58       	subi	r21, 0x80	; 128

000016bc <__addsf3>:
    16bc:	bb 27       	eor	r27, r27
    16be:	aa 27       	eor	r26, r26
    16c0:	0e d0       	rcall	.+28     	; 0x16de <__addsf3x>
    16c2:	fc c1       	rjmp	.+1016   	; 0x1abc <__fp_round>
    16c4:	ed d1       	rcall	.+986    	; 0x1aa0 <__fp_pscA>
    16c6:	30 f0       	brcs	.+12     	; 0x16d4 <__addsf3+0x18>
    16c8:	f2 d1       	rcall	.+996    	; 0x1aae <__fp_pscB>
    16ca:	20 f0       	brcs	.+8      	; 0x16d4 <__addsf3+0x18>
    16cc:	31 f4       	brne	.+12     	; 0x16da <__addsf3+0x1e>
    16ce:	9f 3f       	cpi	r25, 0xFF	; 255
    16d0:	11 f4       	brne	.+4      	; 0x16d6 <__addsf3+0x1a>
    16d2:	1e f4       	brtc	.+6      	; 0x16da <__addsf3+0x1e>
    16d4:	bd c1       	rjmp	.+890    	; 0x1a50 <__fp_nan>
    16d6:	0e f4       	brtc	.+2      	; 0x16da <__addsf3+0x1e>
    16d8:	e0 95       	com	r30
    16da:	e7 fb       	bst	r30, 7
    16dc:	b3 c1       	rjmp	.+870    	; 0x1a44 <__fp_inf>

000016de <__addsf3x>:
    16de:	e9 2f       	mov	r30, r25
    16e0:	fe d1       	rcall	.+1020   	; 0x1ade <__fp_split3>
    16e2:	80 f3       	brcs	.-32     	; 0x16c4 <__addsf3+0x8>
    16e4:	ba 17       	cp	r27, r26
    16e6:	62 07       	cpc	r22, r18
    16e8:	73 07       	cpc	r23, r19
    16ea:	84 07       	cpc	r24, r20
    16ec:	95 07       	cpc	r25, r21
    16ee:	18 f0       	brcs	.+6      	; 0x16f6 <__addsf3x+0x18>
    16f0:	71 f4       	brne	.+28     	; 0x170e <__addsf3x+0x30>
    16f2:	9e f5       	brtc	.+102    	; 0x175a <__addsf3x+0x7c>
    16f4:	16 c2       	rjmp	.+1068   	; 0x1b22 <__fp_zero>
    16f6:	0e f4       	brtc	.+2      	; 0x16fa <__addsf3x+0x1c>
    16f8:	e0 95       	com	r30
    16fa:	0b 2e       	mov	r0, r27
    16fc:	ba 2f       	mov	r27, r26
    16fe:	a0 2d       	mov	r26, r0
    1700:	0b 01       	movw	r0, r22
    1702:	b9 01       	movw	r22, r18
    1704:	90 01       	movw	r18, r0
    1706:	0c 01       	movw	r0, r24
    1708:	ca 01       	movw	r24, r20
    170a:	a0 01       	movw	r20, r0
    170c:	11 24       	eor	r1, r1
    170e:	ff 27       	eor	r31, r31
    1710:	59 1b       	sub	r21, r25
    1712:	99 f0       	breq	.+38     	; 0x173a <__addsf3x+0x5c>
    1714:	59 3f       	cpi	r21, 0xF9	; 249
    1716:	50 f4       	brcc	.+20     	; 0x172c <__addsf3x+0x4e>
    1718:	50 3e       	cpi	r21, 0xE0	; 224
    171a:	68 f1       	brcs	.+90     	; 0x1776 <__addsf3x+0x98>
    171c:	1a 16       	cp	r1, r26
    171e:	f0 40       	sbci	r31, 0x00	; 0
    1720:	a2 2f       	mov	r26, r18
    1722:	23 2f       	mov	r18, r19
    1724:	34 2f       	mov	r19, r20
    1726:	44 27       	eor	r20, r20
    1728:	58 5f       	subi	r21, 0xF8	; 248
    172a:	f3 cf       	rjmp	.-26     	; 0x1712 <__addsf3x+0x34>
    172c:	46 95       	lsr	r20
    172e:	37 95       	ror	r19
    1730:	27 95       	ror	r18
    1732:	a7 95       	ror	r26
    1734:	f0 40       	sbci	r31, 0x00	; 0
    1736:	53 95       	inc	r21
    1738:	c9 f7       	brne	.-14     	; 0x172c <__addsf3x+0x4e>
    173a:	7e f4       	brtc	.+30     	; 0x175a <__addsf3x+0x7c>
    173c:	1f 16       	cp	r1, r31
    173e:	ba 0b       	sbc	r27, r26
    1740:	62 0b       	sbc	r22, r18
    1742:	73 0b       	sbc	r23, r19
    1744:	84 0b       	sbc	r24, r20
    1746:	ba f0       	brmi	.+46     	; 0x1776 <__addsf3x+0x98>
    1748:	91 50       	subi	r25, 0x01	; 1
    174a:	a1 f0       	breq	.+40     	; 0x1774 <__addsf3x+0x96>
    174c:	ff 0f       	add	r31, r31
    174e:	bb 1f       	adc	r27, r27
    1750:	66 1f       	adc	r22, r22
    1752:	77 1f       	adc	r23, r23
    1754:	88 1f       	adc	r24, r24
    1756:	c2 f7       	brpl	.-16     	; 0x1748 <__addsf3x+0x6a>
    1758:	0e c0       	rjmp	.+28     	; 0x1776 <__addsf3x+0x98>
    175a:	ba 0f       	add	r27, r26
    175c:	62 1f       	adc	r22, r18
    175e:	73 1f       	adc	r23, r19
    1760:	84 1f       	adc	r24, r20
    1762:	48 f4       	brcc	.+18     	; 0x1776 <__addsf3x+0x98>
    1764:	87 95       	ror	r24
    1766:	77 95       	ror	r23
    1768:	67 95       	ror	r22
    176a:	b7 95       	ror	r27
    176c:	f7 95       	ror	r31
    176e:	9e 3f       	cpi	r25, 0xFE	; 254
    1770:	08 f0       	brcs	.+2      	; 0x1774 <__addsf3x+0x96>
    1772:	b3 cf       	rjmp	.-154    	; 0x16da <__addsf3+0x1e>
    1774:	93 95       	inc	r25
    1776:	88 0f       	add	r24, r24
    1778:	08 f0       	brcs	.+2      	; 0x177c <__addsf3x+0x9e>
    177a:	99 27       	eor	r25, r25
    177c:	ee 0f       	add	r30, r30
    177e:	97 95       	ror	r25
    1780:	87 95       	ror	r24
    1782:	08 95       	ret
    1784:	8d d1       	rcall	.+794    	; 0x1aa0 <__fp_pscA>
    1786:	58 f0       	brcs	.+22     	; 0x179e <__addsf3x+0xc0>
    1788:	80 e8       	ldi	r24, 0x80	; 128
    178a:	91 e0       	ldi	r25, 0x01	; 1
    178c:	09 f4       	brne	.+2      	; 0x1790 <__addsf3x+0xb2>
    178e:	9e ef       	ldi	r25, 0xFE	; 254
    1790:	8e d1       	rcall	.+796    	; 0x1aae <__fp_pscB>
    1792:	28 f0       	brcs	.+10     	; 0x179e <__addsf3x+0xc0>
    1794:	40 e8       	ldi	r20, 0x80	; 128
    1796:	51 e0       	ldi	r21, 0x01	; 1
    1798:	59 f4       	brne	.+22     	; 0x17b0 <atan2+0xe>
    179a:	5e ef       	ldi	r21, 0xFE	; 254
    179c:	09 c0       	rjmp	.+18     	; 0x17b0 <atan2+0xe>
    179e:	58 c1       	rjmp	.+688    	; 0x1a50 <__fp_nan>
    17a0:	c0 c1       	rjmp	.+896    	; 0x1b22 <__fp_zero>

000017a2 <atan2>:
    17a2:	e9 2f       	mov	r30, r25
    17a4:	e0 78       	andi	r30, 0x80	; 128
    17a6:	9b d1       	rcall	.+822    	; 0x1ade <__fp_split3>
    17a8:	68 f3       	brcs	.-38     	; 0x1784 <__addsf3x+0xa6>
    17aa:	09 2e       	mov	r0, r25
    17ac:	05 2a       	or	r0, r21
    17ae:	c1 f3       	breq	.-16     	; 0x17a0 <__addsf3x+0xc2>
    17b0:	26 17       	cp	r18, r22
    17b2:	37 07       	cpc	r19, r23
    17b4:	48 07       	cpc	r20, r24
    17b6:	59 07       	cpc	r21, r25
    17b8:	38 f0       	brcs	.+14     	; 0x17c8 <atan2+0x26>
    17ba:	0e 2e       	mov	r0, r30
    17bc:	07 f8       	bld	r0, 7
    17be:	e0 25       	eor	r30, r0
    17c0:	69 f0       	breq	.+26     	; 0x17dc <atan2+0x3a>
    17c2:	e0 25       	eor	r30, r0
    17c4:	e0 64       	ori	r30, 0x40	; 64
    17c6:	0a c0       	rjmp	.+20     	; 0x17dc <atan2+0x3a>
    17c8:	ef 63       	ori	r30, 0x3F	; 63
    17ca:	07 f8       	bld	r0, 7
    17cc:	00 94       	com	r0
    17ce:	07 fa       	bst	r0, 7
    17d0:	db 01       	movw	r26, r22
    17d2:	b9 01       	movw	r22, r18
    17d4:	9d 01       	movw	r18, r26
    17d6:	dc 01       	movw	r26, r24
    17d8:	ca 01       	movw	r24, r20
    17da:	ad 01       	movw	r20, r26
    17dc:	ef 93       	push	r30
    17de:	47 d0       	rcall	.+142    	; 0x186e <__divsf3_pse>
    17e0:	6d d1       	rcall	.+730    	; 0x1abc <__fp_round>
    17e2:	0a d0       	rcall	.+20     	; 0x17f8 <atan>
    17e4:	5f 91       	pop	r21
    17e6:	55 23       	and	r21, r21
    17e8:	31 f0       	breq	.+12     	; 0x17f6 <atan2+0x54>
    17ea:	2b ed       	ldi	r18, 0xDB	; 219
    17ec:	3f e0       	ldi	r19, 0x0F	; 15
    17ee:	49 e4       	ldi	r20, 0x49	; 73
    17f0:	50 fd       	sbrc	r21, 0
    17f2:	49 ec       	ldi	r20, 0xC9	; 201
    17f4:	63 cf       	rjmp	.-314    	; 0x16bc <__addsf3>
    17f6:	08 95       	ret

000017f8 <atan>:
    17f8:	df 93       	push	r29
    17fa:	dd 27       	eor	r29, r29
    17fc:	b9 2f       	mov	r27, r25
    17fe:	bf 77       	andi	r27, 0x7F	; 127
    1800:	40 e8       	ldi	r20, 0x80	; 128
    1802:	5f e3       	ldi	r21, 0x3F	; 63
    1804:	16 16       	cp	r1, r22
    1806:	17 06       	cpc	r1, r23
    1808:	48 07       	cpc	r20, r24
    180a:	5b 07       	cpc	r21, r27
    180c:	10 f4       	brcc	.+4      	; 0x1812 <atan+0x1a>
    180e:	d9 2f       	mov	r29, r25
    1810:	93 d1       	rcall	.+806    	; 0x1b38 <inverse>
    1812:	9f 93       	push	r25
    1814:	8f 93       	push	r24
    1816:	7f 93       	push	r23
    1818:	6f 93       	push	r22
    181a:	3a d2       	rcall	.+1140   	; 0x1c90 <square>
    181c:	e4 ee       	ldi	r30, 0xE4	; 228
    181e:	f0 e0       	ldi	r31, 0x00	; 0
    1820:	1a d1       	rcall	.+564    	; 0x1a56 <__fp_powser>
    1822:	4c d1       	rcall	.+664    	; 0x1abc <__fp_round>
    1824:	2f 91       	pop	r18
    1826:	3f 91       	pop	r19
    1828:	4f 91       	pop	r20
    182a:	5f 91       	pop	r21
    182c:	98 d1       	rcall	.+816    	; 0x1b5e <__mulsf3x>
    182e:	dd 23       	and	r29, r29
    1830:	49 f0       	breq	.+18     	; 0x1844 <atan+0x4c>
    1832:	90 58       	subi	r25, 0x80	; 128
    1834:	a2 ea       	ldi	r26, 0xA2	; 162
    1836:	2a ed       	ldi	r18, 0xDA	; 218
    1838:	3f e0       	ldi	r19, 0x0F	; 15
    183a:	49 ec       	ldi	r20, 0xC9	; 201
    183c:	5f e3       	ldi	r21, 0x3F	; 63
    183e:	d0 78       	andi	r29, 0x80	; 128
    1840:	5d 27       	eor	r21, r29
    1842:	4d df       	rcall	.-358    	; 0x16de <__addsf3x>
    1844:	df 91       	pop	r29
    1846:	3a c1       	rjmp	.+628    	; 0x1abc <__fp_round>

00001848 <__cmpsf2>:
    1848:	d9 d0       	rcall	.+434    	; 0x19fc <__fp_cmp>
    184a:	08 f4       	brcc	.+2      	; 0x184e <__cmpsf2+0x6>
    184c:	81 e0       	ldi	r24, 0x01	; 1
    184e:	08 95       	ret

00001850 <__divsf3>:
    1850:	0c d0       	rcall	.+24     	; 0x186a <__divsf3x>
    1852:	34 c1       	rjmp	.+616    	; 0x1abc <__fp_round>
    1854:	2c d1       	rcall	.+600    	; 0x1aae <__fp_pscB>
    1856:	40 f0       	brcs	.+16     	; 0x1868 <__divsf3+0x18>
    1858:	23 d1       	rcall	.+582    	; 0x1aa0 <__fp_pscA>
    185a:	30 f0       	brcs	.+12     	; 0x1868 <__divsf3+0x18>
    185c:	21 f4       	brne	.+8      	; 0x1866 <__divsf3+0x16>
    185e:	5f 3f       	cpi	r21, 0xFF	; 255
    1860:	19 f0       	breq	.+6      	; 0x1868 <__divsf3+0x18>
    1862:	f0 c0       	rjmp	.+480    	; 0x1a44 <__fp_inf>
    1864:	51 11       	cpse	r21, r1
    1866:	5e c1       	rjmp	.+700    	; 0x1b24 <__fp_szero>
    1868:	f3 c0       	rjmp	.+486    	; 0x1a50 <__fp_nan>

0000186a <__divsf3x>:
    186a:	39 d1       	rcall	.+626    	; 0x1ade <__fp_split3>
    186c:	98 f3       	brcs	.-26     	; 0x1854 <__divsf3+0x4>

0000186e <__divsf3_pse>:
    186e:	99 23       	and	r25, r25
    1870:	c9 f3       	breq	.-14     	; 0x1864 <__divsf3+0x14>
    1872:	55 23       	and	r21, r21
    1874:	b1 f3       	breq	.-20     	; 0x1862 <__divsf3+0x12>
    1876:	95 1b       	sub	r25, r21
    1878:	55 0b       	sbc	r21, r21
    187a:	bb 27       	eor	r27, r27
    187c:	aa 27       	eor	r26, r26
    187e:	62 17       	cp	r22, r18
    1880:	73 07       	cpc	r23, r19
    1882:	84 07       	cpc	r24, r20
    1884:	38 f0       	brcs	.+14     	; 0x1894 <__divsf3_pse+0x26>
    1886:	9f 5f       	subi	r25, 0xFF	; 255
    1888:	5f 4f       	sbci	r21, 0xFF	; 255
    188a:	22 0f       	add	r18, r18
    188c:	33 1f       	adc	r19, r19
    188e:	44 1f       	adc	r20, r20
    1890:	aa 1f       	adc	r26, r26
    1892:	a9 f3       	breq	.-22     	; 0x187e <__divsf3_pse+0x10>
    1894:	33 d0       	rcall	.+102    	; 0x18fc <__divsf3_pse+0x8e>
    1896:	0e 2e       	mov	r0, r30
    1898:	3a f0       	brmi	.+14     	; 0x18a8 <__divsf3_pse+0x3a>
    189a:	e0 e8       	ldi	r30, 0x80	; 128
    189c:	30 d0       	rcall	.+96     	; 0x18fe <__divsf3_pse+0x90>
    189e:	91 50       	subi	r25, 0x01	; 1
    18a0:	50 40       	sbci	r21, 0x00	; 0
    18a2:	e6 95       	lsr	r30
    18a4:	00 1c       	adc	r0, r0
    18a6:	ca f7       	brpl	.-14     	; 0x189a <__divsf3_pse+0x2c>
    18a8:	29 d0       	rcall	.+82     	; 0x18fc <__divsf3_pse+0x8e>
    18aa:	fe 2f       	mov	r31, r30
    18ac:	27 d0       	rcall	.+78     	; 0x18fc <__divsf3_pse+0x8e>
    18ae:	66 0f       	add	r22, r22
    18b0:	77 1f       	adc	r23, r23
    18b2:	88 1f       	adc	r24, r24
    18b4:	bb 1f       	adc	r27, r27
    18b6:	26 17       	cp	r18, r22
    18b8:	37 07       	cpc	r19, r23
    18ba:	48 07       	cpc	r20, r24
    18bc:	ab 07       	cpc	r26, r27
    18be:	b0 e8       	ldi	r27, 0x80	; 128
    18c0:	09 f0       	breq	.+2      	; 0x18c4 <__divsf3_pse+0x56>
    18c2:	bb 0b       	sbc	r27, r27
    18c4:	80 2d       	mov	r24, r0
    18c6:	bf 01       	movw	r22, r30
    18c8:	ff 27       	eor	r31, r31
    18ca:	93 58       	subi	r25, 0x83	; 131
    18cc:	5f 4f       	sbci	r21, 0xFF	; 255
    18ce:	2a f0       	brmi	.+10     	; 0x18da <__divsf3_pse+0x6c>
    18d0:	9e 3f       	cpi	r25, 0xFE	; 254
    18d2:	51 05       	cpc	r21, r1
    18d4:	68 f0       	brcs	.+26     	; 0x18f0 <__divsf3_pse+0x82>
    18d6:	b6 c0       	rjmp	.+364    	; 0x1a44 <__fp_inf>
    18d8:	25 c1       	rjmp	.+586    	; 0x1b24 <__fp_szero>
    18da:	5f 3f       	cpi	r21, 0xFF	; 255
    18dc:	ec f3       	brlt	.-6      	; 0x18d8 <__divsf3_pse+0x6a>
    18de:	98 3e       	cpi	r25, 0xE8	; 232
    18e0:	dc f3       	brlt	.-10     	; 0x18d8 <__divsf3_pse+0x6a>
    18e2:	86 95       	lsr	r24
    18e4:	77 95       	ror	r23
    18e6:	67 95       	ror	r22
    18e8:	b7 95       	ror	r27
    18ea:	f7 95       	ror	r31
    18ec:	9f 5f       	subi	r25, 0xFF	; 255
    18ee:	c9 f7       	brne	.-14     	; 0x18e2 <__divsf3_pse+0x74>
    18f0:	88 0f       	add	r24, r24
    18f2:	91 1d       	adc	r25, r1
    18f4:	96 95       	lsr	r25
    18f6:	87 95       	ror	r24
    18f8:	97 f9       	bld	r25, 7
    18fa:	08 95       	ret
    18fc:	e1 e0       	ldi	r30, 0x01	; 1
    18fe:	66 0f       	add	r22, r22
    1900:	77 1f       	adc	r23, r23
    1902:	88 1f       	adc	r24, r24
    1904:	bb 1f       	adc	r27, r27
    1906:	62 17       	cp	r22, r18
    1908:	73 07       	cpc	r23, r19
    190a:	84 07       	cpc	r24, r20
    190c:	ba 07       	cpc	r27, r26
    190e:	20 f0       	brcs	.+8      	; 0x1918 <__divsf3_pse+0xaa>
    1910:	62 1b       	sub	r22, r18
    1912:	73 0b       	sbc	r23, r19
    1914:	84 0b       	sbc	r24, r20
    1916:	ba 0b       	sbc	r27, r26
    1918:	ee 1f       	adc	r30, r30
    191a:	88 f7       	brcc	.-30     	; 0x18fe <__divsf3_pse+0x90>
    191c:	e0 95       	com	r30
    191e:	08 95       	ret

00001920 <__fixsfsi>:
    1920:	04 d0       	rcall	.+8      	; 0x192a <__fixunssfsi>
    1922:	68 94       	set
    1924:	b1 11       	cpse	r27, r1
    1926:	fe c0       	rjmp	.+508    	; 0x1b24 <__fp_szero>
    1928:	08 95       	ret

0000192a <__fixunssfsi>:
    192a:	e1 d0       	rcall	.+450    	; 0x1aee <__fp_splitA>
    192c:	88 f0       	brcs	.+34     	; 0x1950 <__fixunssfsi+0x26>
    192e:	9f 57       	subi	r25, 0x7F	; 127
    1930:	90 f0       	brcs	.+36     	; 0x1956 <__fixunssfsi+0x2c>
    1932:	b9 2f       	mov	r27, r25
    1934:	99 27       	eor	r25, r25
    1936:	b7 51       	subi	r27, 0x17	; 23
    1938:	a0 f0       	brcs	.+40     	; 0x1962 <__fixunssfsi+0x38>
    193a:	d1 f0       	breq	.+52     	; 0x1970 <__fixunssfsi+0x46>
    193c:	66 0f       	add	r22, r22
    193e:	77 1f       	adc	r23, r23
    1940:	88 1f       	adc	r24, r24
    1942:	99 1f       	adc	r25, r25
    1944:	1a f0       	brmi	.+6      	; 0x194c <__fixunssfsi+0x22>
    1946:	ba 95       	dec	r27
    1948:	c9 f7       	brne	.-14     	; 0x193c <__fixunssfsi+0x12>
    194a:	12 c0       	rjmp	.+36     	; 0x1970 <__fixunssfsi+0x46>
    194c:	b1 30       	cpi	r27, 0x01	; 1
    194e:	81 f0       	breq	.+32     	; 0x1970 <__fixunssfsi+0x46>
    1950:	e8 d0       	rcall	.+464    	; 0x1b22 <__fp_zero>
    1952:	b1 e0       	ldi	r27, 0x01	; 1
    1954:	08 95       	ret
    1956:	e5 c0       	rjmp	.+458    	; 0x1b22 <__fp_zero>
    1958:	67 2f       	mov	r22, r23
    195a:	78 2f       	mov	r23, r24
    195c:	88 27       	eor	r24, r24
    195e:	b8 5f       	subi	r27, 0xF8	; 248
    1960:	39 f0       	breq	.+14     	; 0x1970 <__fixunssfsi+0x46>
    1962:	b9 3f       	cpi	r27, 0xF9	; 249
    1964:	cc f3       	brlt	.-14     	; 0x1958 <__fixunssfsi+0x2e>
    1966:	86 95       	lsr	r24
    1968:	77 95       	ror	r23
    196a:	67 95       	ror	r22
    196c:	b3 95       	inc	r27
    196e:	d9 f7       	brne	.-10     	; 0x1966 <__fixunssfsi+0x3c>
    1970:	3e f4       	brtc	.+14     	; 0x1980 <__fixunssfsi+0x56>
    1972:	90 95       	com	r25
    1974:	80 95       	com	r24
    1976:	70 95       	com	r23
    1978:	61 95       	neg	r22
    197a:	7f 4f       	sbci	r23, 0xFF	; 255
    197c:	8f 4f       	sbci	r24, 0xFF	; 255
    197e:	9f 4f       	sbci	r25, 0xFF	; 255
    1980:	08 95       	ret

00001982 <__floatunsisf>:
    1982:	e8 94       	clt
    1984:	09 c0       	rjmp	.+18     	; 0x1998 <__floatsisf+0x12>

00001986 <__floatsisf>:
    1986:	97 fb       	bst	r25, 7
    1988:	3e f4       	brtc	.+14     	; 0x1998 <__floatsisf+0x12>
    198a:	90 95       	com	r25
    198c:	80 95       	com	r24
    198e:	70 95       	com	r23
    1990:	61 95       	neg	r22
    1992:	7f 4f       	sbci	r23, 0xFF	; 255
    1994:	8f 4f       	sbci	r24, 0xFF	; 255
    1996:	9f 4f       	sbci	r25, 0xFF	; 255
    1998:	99 23       	and	r25, r25
    199a:	a9 f0       	breq	.+42     	; 0x19c6 <__floatsisf+0x40>
    199c:	f9 2f       	mov	r31, r25
    199e:	96 e9       	ldi	r25, 0x96	; 150
    19a0:	bb 27       	eor	r27, r27
    19a2:	93 95       	inc	r25
    19a4:	f6 95       	lsr	r31
    19a6:	87 95       	ror	r24
    19a8:	77 95       	ror	r23
    19aa:	67 95       	ror	r22
    19ac:	b7 95       	ror	r27
    19ae:	f1 11       	cpse	r31, r1
    19b0:	f8 cf       	rjmp	.-16     	; 0x19a2 <__floatsisf+0x1c>
    19b2:	fa f4       	brpl	.+62     	; 0x19f2 <__floatsisf+0x6c>
    19b4:	bb 0f       	add	r27, r27
    19b6:	11 f4       	brne	.+4      	; 0x19bc <__floatsisf+0x36>
    19b8:	60 ff       	sbrs	r22, 0
    19ba:	1b c0       	rjmp	.+54     	; 0x19f2 <__floatsisf+0x6c>
    19bc:	6f 5f       	subi	r22, 0xFF	; 255
    19be:	7f 4f       	sbci	r23, 0xFF	; 255
    19c0:	8f 4f       	sbci	r24, 0xFF	; 255
    19c2:	9f 4f       	sbci	r25, 0xFF	; 255
    19c4:	16 c0       	rjmp	.+44     	; 0x19f2 <__floatsisf+0x6c>
    19c6:	88 23       	and	r24, r24
    19c8:	11 f0       	breq	.+4      	; 0x19ce <__floatsisf+0x48>
    19ca:	96 e9       	ldi	r25, 0x96	; 150
    19cc:	11 c0       	rjmp	.+34     	; 0x19f0 <__floatsisf+0x6a>
    19ce:	77 23       	and	r23, r23
    19d0:	21 f0       	breq	.+8      	; 0x19da <__floatsisf+0x54>
    19d2:	9e e8       	ldi	r25, 0x8E	; 142
    19d4:	87 2f       	mov	r24, r23
    19d6:	76 2f       	mov	r23, r22
    19d8:	05 c0       	rjmp	.+10     	; 0x19e4 <__floatsisf+0x5e>
    19da:	66 23       	and	r22, r22
    19dc:	71 f0       	breq	.+28     	; 0x19fa <__floatsisf+0x74>
    19de:	96 e8       	ldi	r25, 0x86	; 134
    19e0:	86 2f       	mov	r24, r22
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	60 e0       	ldi	r22, 0x00	; 0
    19e6:	2a f0       	brmi	.+10     	; 0x19f2 <__floatsisf+0x6c>
    19e8:	9a 95       	dec	r25
    19ea:	66 0f       	add	r22, r22
    19ec:	77 1f       	adc	r23, r23
    19ee:	88 1f       	adc	r24, r24
    19f0:	da f7       	brpl	.-10     	; 0x19e8 <__floatsisf+0x62>
    19f2:	88 0f       	add	r24, r24
    19f4:	96 95       	lsr	r25
    19f6:	87 95       	ror	r24
    19f8:	97 f9       	bld	r25, 7
    19fa:	08 95       	ret

000019fc <__fp_cmp>:
    19fc:	99 0f       	add	r25, r25
    19fe:	00 08       	sbc	r0, r0
    1a00:	55 0f       	add	r21, r21
    1a02:	aa 0b       	sbc	r26, r26
    1a04:	e0 e8       	ldi	r30, 0x80	; 128
    1a06:	fe ef       	ldi	r31, 0xFE	; 254
    1a08:	16 16       	cp	r1, r22
    1a0a:	17 06       	cpc	r1, r23
    1a0c:	e8 07       	cpc	r30, r24
    1a0e:	f9 07       	cpc	r31, r25
    1a10:	c0 f0       	brcs	.+48     	; 0x1a42 <__fp_cmp+0x46>
    1a12:	12 16       	cp	r1, r18
    1a14:	13 06       	cpc	r1, r19
    1a16:	e4 07       	cpc	r30, r20
    1a18:	f5 07       	cpc	r31, r21
    1a1a:	98 f0       	brcs	.+38     	; 0x1a42 <__fp_cmp+0x46>
    1a1c:	62 1b       	sub	r22, r18
    1a1e:	73 0b       	sbc	r23, r19
    1a20:	84 0b       	sbc	r24, r20
    1a22:	95 0b       	sbc	r25, r21
    1a24:	39 f4       	brne	.+14     	; 0x1a34 <__fp_cmp+0x38>
    1a26:	0a 26       	eor	r0, r26
    1a28:	61 f0       	breq	.+24     	; 0x1a42 <__fp_cmp+0x46>
    1a2a:	23 2b       	or	r18, r19
    1a2c:	24 2b       	or	r18, r20
    1a2e:	25 2b       	or	r18, r21
    1a30:	21 f4       	brne	.+8      	; 0x1a3a <__fp_cmp+0x3e>
    1a32:	08 95       	ret
    1a34:	0a 26       	eor	r0, r26
    1a36:	09 f4       	brne	.+2      	; 0x1a3a <__fp_cmp+0x3e>
    1a38:	a1 40       	sbci	r26, 0x01	; 1
    1a3a:	a6 95       	lsr	r26
    1a3c:	8f ef       	ldi	r24, 0xFF	; 255
    1a3e:	81 1d       	adc	r24, r1
    1a40:	81 1d       	adc	r24, r1
    1a42:	08 95       	ret

00001a44 <__fp_inf>:
    1a44:	97 f9       	bld	r25, 7
    1a46:	9f 67       	ori	r25, 0x7F	; 127
    1a48:	80 e8       	ldi	r24, 0x80	; 128
    1a4a:	70 e0       	ldi	r23, 0x00	; 0
    1a4c:	60 e0       	ldi	r22, 0x00	; 0
    1a4e:	08 95       	ret

00001a50 <__fp_nan>:
    1a50:	9f ef       	ldi	r25, 0xFF	; 255
    1a52:	80 ec       	ldi	r24, 0xC0	; 192
    1a54:	08 95       	ret

00001a56 <__fp_powser>:
    1a56:	df 93       	push	r29
    1a58:	cf 93       	push	r28
    1a5a:	1f 93       	push	r17
    1a5c:	0f 93       	push	r16
    1a5e:	ff 92       	push	r15
    1a60:	ef 92       	push	r14
    1a62:	df 92       	push	r13
    1a64:	7b 01       	movw	r14, r22
    1a66:	8c 01       	movw	r16, r24
    1a68:	68 94       	set
    1a6a:	05 c0       	rjmp	.+10     	; 0x1a76 <__fp_powser+0x20>
    1a6c:	da 2e       	mov	r13, r26
    1a6e:	ef 01       	movw	r28, r30
    1a70:	76 d0       	rcall	.+236    	; 0x1b5e <__mulsf3x>
    1a72:	fe 01       	movw	r30, r28
    1a74:	e8 94       	clt
    1a76:	a5 91       	lpm	r26, Z+
    1a78:	25 91       	lpm	r18, Z+
    1a7a:	35 91       	lpm	r19, Z+
    1a7c:	45 91       	lpm	r20, Z+
    1a7e:	55 91       	lpm	r21, Z+
    1a80:	ae f3       	brts	.-22     	; 0x1a6c <__fp_powser+0x16>
    1a82:	ef 01       	movw	r28, r30
    1a84:	2c de       	rcall	.-936    	; 0x16de <__addsf3x>
    1a86:	fe 01       	movw	r30, r28
    1a88:	97 01       	movw	r18, r14
    1a8a:	a8 01       	movw	r20, r16
    1a8c:	da 94       	dec	r13
    1a8e:	79 f7       	brne	.-34     	; 0x1a6e <__fp_powser+0x18>
    1a90:	df 90       	pop	r13
    1a92:	ef 90       	pop	r14
    1a94:	ff 90       	pop	r15
    1a96:	0f 91       	pop	r16
    1a98:	1f 91       	pop	r17
    1a9a:	cf 91       	pop	r28
    1a9c:	df 91       	pop	r29
    1a9e:	08 95       	ret

00001aa0 <__fp_pscA>:
    1aa0:	00 24       	eor	r0, r0
    1aa2:	0a 94       	dec	r0
    1aa4:	16 16       	cp	r1, r22
    1aa6:	17 06       	cpc	r1, r23
    1aa8:	18 06       	cpc	r1, r24
    1aaa:	09 06       	cpc	r0, r25
    1aac:	08 95       	ret

00001aae <__fp_pscB>:
    1aae:	00 24       	eor	r0, r0
    1ab0:	0a 94       	dec	r0
    1ab2:	12 16       	cp	r1, r18
    1ab4:	13 06       	cpc	r1, r19
    1ab6:	14 06       	cpc	r1, r20
    1ab8:	05 06       	cpc	r0, r21
    1aba:	08 95       	ret

00001abc <__fp_round>:
    1abc:	09 2e       	mov	r0, r25
    1abe:	03 94       	inc	r0
    1ac0:	00 0c       	add	r0, r0
    1ac2:	11 f4       	brne	.+4      	; 0x1ac8 <__fp_round+0xc>
    1ac4:	88 23       	and	r24, r24
    1ac6:	52 f0       	brmi	.+20     	; 0x1adc <__fp_round+0x20>
    1ac8:	bb 0f       	add	r27, r27
    1aca:	40 f4       	brcc	.+16     	; 0x1adc <__fp_round+0x20>
    1acc:	bf 2b       	or	r27, r31
    1ace:	11 f4       	brne	.+4      	; 0x1ad4 <__fp_round+0x18>
    1ad0:	60 ff       	sbrs	r22, 0
    1ad2:	04 c0       	rjmp	.+8      	; 0x1adc <__fp_round+0x20>
    1ad4:	6f 5f       	subi	r22, 0xFF	; 255
    1ad6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ad8:	8f 4f       	sbci	r24, 0xFF	; 255
    1ada:	9f 4f       	sbci	r25, 0xFF	; 255
    1adc:	08 95       	ret

00001ade <__fp_split3>:
    1ade:	57 fd       	sbrc	r21, 7
    1ae0:	90 58       	subi	r25, 0x80	; 128
    1ae2:	44 0f       	add	r20, r20
    1ae4:	55 1f       	adc	r21, r21
    1ae6:	59 f0       	breq	.+22     	; 0x1afe <__fp_splitA+0x10>
    1ae8:	5f 3f       	cpi	r21, 0xFF	; 255
    1aea:	71 f0       	breq	.+28     	; 0x1b08 <__fp_splitA+0x1a>
    1aec:	47 95       	ror	r20

00001aee <__fp_splitA>:
    1aee:	88 0f       	add	r24, r24
    1af0:	97 fb       	bst	r25, 7
    1af2:	99 1f       	adc	r25, r25
    1af4:	61 f0       	breq	.+24     	; 0x1b0e <__fp_splitA+0x20>
    1af6:	9f 3f       	cpi	r25, 0xFF	; 255
    1af8:	79 f0       	breq	.+30     	; 0x1b18 <__fp_splitA+0x2a>
    1afa:	87 95       	ror	r24
    1afc:	08 95       	ret
    1afe:	12 16       	cp	r1, r18
    1b00:	13 06       	cpc	r1, r19
    1b02:	14 06       	cpc	r1, r20
    1b04:	55 1f       	adc	r21, r21
    1b06:	f2 cf       	rjmp	.-28     	; 0x1aec <__fp_split3+0xe>
    1b08:	46 95       	lsr	r20
    1b0a:	f1 df       	rcall	.-30     	; 0x1aee <__fp_splitA>
    1b0c:	08 c0       	rjmp	.+16     	; 0x1b1e <__fp_splitA+0x30>
    1b0e:	16 16       	cp	r1, r22
    1b10:	17 06       	cpc	r1, r23
    1b12:	18 06       	cpc	r1, r24
    1b14:	99 1f       	adc	r25, r25
    1b16:	f1 cf       	rjmp	.-30     	; 0x1afa <__fp_splitA+0xc>
    1b18:	86 95       	lsr	r24
    1b1a:	71 05       	cpc	r23, r1
    1b1c:	61 05       	cpc	r22, r1
    1b1e:	08 94       	sec
    1b20:	08 95       	ret

00001b22 <__fp_zero>:
    1b22:	e8 94       	clt

00001b24 <__fp_szero>:
    1b24:	bb 27       	eor	r27, r27
    1b26:	66 27       	eor	r22, r22
    1b28:	77 27       	eor	r23, r23
    1b2a:	cb 01       	movw	r24, r22
    1b2c:	97 f9       	bld	r25, 7
    1b2e:	08 95       	ret

00001b30 <__gesf2>:
    1b30:	65 df       	rcall	.-310    	; 0x19fc <__fp_cmp>
    1b32:	08 f4       	brcc	.+2      	; 0x1b36 <__gesf2+0x6>
    1b34:	8f ef       	ldi	r24, 0xFF	; 255
    1b36:	08 95       	ret

00001b38 <inverse>:
    1b38:	9b 01       	movw	r18, r22
    1b3a:	ac 01       	movw	r20, r24
    1b3c:	60 e0       	ldi	r22, 0x00	; 0
    1b3e:	70 e0       	ldi	r23, 0x00	; 0
    1b40:	80 e8       	ldi	r24, 0x80	; 128
    1b42:	9f e3       	ldi	r25, 0x3F	; 63
    1b44:	85 ce       	rjmp	.-758    	; 0x1850 <__divsf3>

00001b46 <__mulsf3>:
    1b46:	0b d0       	rcall	.+22     	; 0x1b5e <__mulsf3x>
    1b48:	b9 cf       	rjmp	.-142    	; 0x1abc <__fp_round>
    1b4a:	aa df       	rcall	.-172    	; 0x1aa0 <__fp_pscA>
    1b4c:	28 f0       	brcs	.+10     	; 0x1b58 <__mulsf3+0x12>
    1b4e:	af df       	rcall	.-162    	; 0x1aae <__fp_pscB>
    1b50:	18 f0       	brcs	.+6      	; 0x1b58 <__mulsf3+0x12>
    1b52:	95 23       	and	r25, r21
    1b54:	09 f0       	breq	.+2      	; 0x1b58 <__mulsf3+0x12>
    1b56:	76 cf       	rjmp	.-276    	; 0x1a44 <__fp_inf>
    1b58:	7b cf       	rjmp	.-266    	; 0x1a50 <__fp_nan>
    1b5a:	11 24       	eor	r1, r1
    1b5c:	e3 cf       	rjmp	.-58     	; 0x1b24 <__fp_szero>

00001b5e <__mulsf3x>:
    1b5e:	bf df       	rcall	.-130    	; 0x1ade <__fp_split3>
    1b60:	a0 f3       	brcs	.-24     	; 0x1b4a <__mulsf3+0x4>

00001b62 <__mulsf3_pse>:
    1b62:	95 9f       	mul	r25, r21
    1b64:	d1 f3       	breq	.-12     	; 0x1b5a <__mulsf3+0x14>
    1b66:	95 0f       	add	r25, r21
    1b68:	50 e0       	ldi	r21, 0x00	; 0
    1b6a:	55 1f       	adc	r21, r21
    1b6c:	62 9f       	mul	r22, r18
    1b6e:	f0 01       	movw	r30, r0
    1b70:	72 9f       	mul	r23, r18
    1b72:	bb 27       	eor	r27, r27
    1b74:	f0 0d       	add	r31, r0
    1b76:	b1 1d       	adc	r27, r1
    1b78:	63 9f       	mul	r22, r19
    1b7a:	aa 27       	eor	r26, r26
    1b7c:	f0 0d       	add	r31, r0
    1b7e:	b1 1d       	adc	r27, r1
    1b80:	aa 1f       	adc	r26, r26
    1b82:	64 9f       	mul	r22, r20
    1b84:	66 27       	eor	r22, r22
    1b86:	b0 0d       	add	r27, r0
    1b88:	a1 1d       	adc	r26, r1
    1b8a:	66 1f       	adc	r22, r22
    1b8c:	82 9f       	mul	r24, r18
    1b8e:	22 27       	eor	r18, r18
    1b90:	b0 0d       	add	r27, r0
    1b92:	a1 1d       	adc	r26, r1
    1b94:	62 1f       	adc	r22, r18
    1b96:	73 9f       	mul	r23, r19
    1b98:	b0 0d       	add	r27, r0
    1b9a:	a1 1d       	adc	r26, r1
    1b9c:	62 1f       	adc	r22, r18
    1b9e:	83 9f       	mul	r24, r19
    1ba0:	a0 0d       	add	r26, r0
    1ba2:	61 1d       	adc	r22, r1
    1ba4:	22 1f       	adc	r18, r18
    1ba6:	74 9f       	mul	r23, r20
    1ba8:	33 27       	eor	r19, r19
    1baa:	a0 0d       	add	r26, r0
    1bac:	61 1d       	adc	r22, r1
    1bae:	23 1f       	adc	r18, r19
    1bb0:	84 9f       	mul	r24, r20
    1bb2:	60 0d       	add	r22, r0
    1bb4:	21 1d       	adc	r18, r1
    1bb6:	82 2f       	mov	r24, r18
    1bb8:	76 2f       	mov	r23, r22
    1bba:	6a 2f       	mov	r22, r26
    1bbc:	11 24       	eor	r1, r1
    1bbe:	9f 57       	subi	r25, 0x7F	; 127
    1bc0:	50 40       	sbci	r21, 0x00	; 0
    1bc2:	8a f0       	brmi	.+34     	; 0x1be6 <__mulsf3_pse+0x84>
    1bc4:	e1 f0       	breq	.+56     	; 0x1bfe <__mulsf3_pse+0x9c>
    1bc6:	88 23       	and	r24, r24
    1bc8:	4a f0       	brmi	.+18     	; 0x1bdc <__mulsf3_pse+0x7a>
    1bca:	ee 0f       	add	r30, r30
    1bcc:	ff 1f       	adc	r31, r31
    1bce:	bb 1f       	adc	r27, r27
    1bd0:	66 1f       	adc	r22, r22
    1bd2:	77 1f       	adc	r23, r23
    1bd4:	88 1f       	adc	r24, r24
    1bd6:	91 50       	subi	r25, 0x01	; 1
    1bd8:	50 40       	sbci	r21, 0x00	; 0
    1bda:	a9 f7       	brne	.-22     	; 0x1bc6 <__mulsf3_pse+0x64>
    1bdc:	9e 3f       	cpi	r25, 0xFE	; 254
    1bde:	51 05       	cpc	r21, r1
    1be0:	70 f0       	brcs	.+28     	; 0x1bfe <__mulsf3_pse+0x9c>
    1be2:	30 cf       	rjmp	.-416    	; 0x1a44 <__fp_inf>
    1be4:	9f cf       	rjmp	.-194    	; 0x1b24 <__fp_szero>
    1be6:	5f 3f       	cpi	r21, 0xFF	; 255
    1be8:	ec f3       	brlt	.-6      	; 0x1be4 <__mulsf3_pse+0x82>
    1bea:	98 3e       	cpi	r25, 0xE8	; 232
    1bec:	dc f3       	brlt	.-10     	; 0x1be4 <__mulsf3_pse+0x82>
    1bee:	86 95       	lsr	r24
    1bf0:	77 95       	ror	r23
    1bf2:	67 95       	ror	r22
    1bf4:	b7 95       	ror	r27
    1bf6:	f7 95       	ror	r31
    1bf8:	e7 95       	ror	r30
    1bfa:	9f 5f       	subi	r25, 0xFF	; 255
    1bfc:	c1 f7       	brne	.-16     	; 0x1bee <__mulsf3_pse+0x8c>
    1bfe:	fe 2b       	or	r31, r30
    1c00:	88 0f       	add	r24, r24
    1c02:	91 1d       	adc	r25, r1
    1c04:	96 95       	lsr	r25
    1c06:	87 95       	ror	r24
    1c08:	97 f9       	bld	r25, 7
    1c0a:	08 95       	ret
    1c0c:	11 f4       	brne	.+4      	; 0x1c12 <__mulsf3_pse+0xb0>
    1c0e:	0e f4       	brtc	.+2      	; 0x1c12 <__mulsf3_pse+0xb0>
    1c10:	1f cf       	rjmp	.-450    	; 0x1a50 <__fp_nan>
    1c12:	41 c0       	rjmp	.+130    	; 0x1c96 <__fp_mpack>

00001c14 <sqrt>:
    1c14:	6c df       	rcall	.-296    	; 0x1aee <__fp_splitA>
    1c16:	d0 f3       	brcs	.-12     	; 0x1c0c <__mulsf3_pse+0xaa>
    1c18:	99 23       	and	r25, r25
    1c1a:	d9 f3       	breq	.-10     	; 0x1c12 <__mulsf3_pse+0xb0>
    1c1c:	ce f3       	brts	.-14     	; 0x1c10 <__mulsf3_pse+0xae>
    1c1e:	9f 57       	subi	r25, 0x7F	; 127
    1c20:	55 0b       	sbc	r21, r21
    1c22:	87 ff       	sbrs	r24, 7
    1c24:	46 d0       	rcall	.+140    	; 0x1cb2 <__fp_norm2>
    1c26:	00 24       	eor	r0, r0
    1c28:	a0 e6       	ldi	r26, 0x60	; 96
    1c2a:	40 ea       	ldi	r20, 0xA0	; 160
    1c2c:	90 01       	movw	r18, r0
    1c2e:	80 58       	subi	r24, 0x80	; 128
    1c30:	56 95       	lsr	r21
    1c32:	97 95       	ror	r25
    1c34:	28 f4       	brcc	.+10     	; 0x1c40 <sqrt+0x2c>
    1c36:	80 5c       	subi	r24, 0xC0	; 192
    1c38:	66 0f       	add	r22, r22
    1c3a:	77 1f       	adc	r23, r23
    1c3c:	88 1f       	adc	r24, r24
    1c3e:	20 f0       	brcs	.+8      	; 0x1c48 <sqrt+0x34>
    1c40:	26 17       	cp	r18, r22
    1c42:	37 07       	cpc	r19, r23
    1c44:	48 07       	cpc	r20, r24
    1c46:	30 f4       	brcc	.+12     	; 0x1c54 <sqrt+0x40>
    1c48:	62 1b       	sub	r22, r18
    1c4a:	73 0b       	sbc	r23, r19
    1c4c:	84 0b       	sbc	r24, r20
    1c4e:	20 29       	or	r18, r0
    1c50:	31 29       	or	r19, r1
    1c52:	4a 2b       	or	r20, r26
    1c54:	a6 95       	lsr	r26
    1c56:	17 94       	ror	r1
    1c58:	07 94       	ror	r0
    1c5a:	20 25       	eor	r18, r0
    1c5c:	31 25       	eor	r19, r1
    1c5e:	4a 27       	eor	r20, r26
    1c60:	58 f7       	brcc	.-42     	; 0x1c38 <sqrt+0x24>
    1c62:	66 0f       	add	r22, r22
    1c64:	77 1f       	adc	r23, r23
    1c66:	88 1f       	adc	r24, r24
    1c68:	20 f0       	brcs	.+8      	; 0x1c72 <sqrt+0x5e>
    1c6a:	26 17       	cp	r18, r22
    1c6c:	37 07       	cpc	r19, r23
    1c6e:	48 07       	cpc	r20, r24
    1c70:	30 f4       	brcc	.+12     	; 0x1c7e <sqrt+0x6a>
    1c72:	62 0b       	sbc	r22, r18
    1c74:	73 0b       	sbc	r23, r19
    1c76:	84 0b       	sbc	r24, r20
    1c78:	20 0d       	add	r18, r0
    1c7a:	31 1d       	adc	r19, r1
    1c7c:	41 1d       	adc	r20, r1
    1c7e:	a0 95       	com	r26
    1c80:	81 f7       	brne	.-32     	; 0x1c62 <sqrt+0x4e>
    1c82:	b9 01       	movw	r22, r18
    1c84:	84 2f       	mov	r24, r20
    1c86:	91 58       	subi	r25, 0x81	; 129
    1c88:	88 0f       	add	r24, r24
    1c8a:	96 95       	lsr	r25
    1c8c:	87 95       	ror	r24
    1c8e:	08 95       	ret

00001c90 <square>:
    1c90:	9b 01       	movw	r18, r22
    1c92:	ac 01       	movw	r20, r24
    1c94:	58 cf       	rjmp	.-336    	; 0x1b46 <__mulsf3>

00001c96 <__fp_mpack>:
    1c96:	9f 3f       	cpi	r25, 0xFF	; 255
    1c98:	31 f0       	breq	.+12     	; 0x1ca6 <__fp_mpack_finite+0xc>

00001c9a <__fp_mpack_finite>:
    1c9a:	91 50       	subi	r25, 0x01	; 1
    1c9c:	20 f4       	brcc	.+8      	; 0x1ca6 <__fp_mpack_finite+0xc>
    1c9e:	87 95       	ror	r24
    1ca0:	77 95       	ror	r23
    1ca2:	67 95       	ror	r22
    1ca4:	b7 95       	ror	r27
    1ca6:	88 0f       	add	r24, r24
    1ca8:	91 1d       	adc	r25, r1
    1caa:	96 95       	lsr	r25
    1cac:	87 95       	ror	r24
    1cae:	97 f9       	bld	r25, 7
    1cb0:	08 95       	ret

00001cb2 <__fp_norm2>:
    1cb2:	91 50       	subi	r25, 0x01	; 1
    1cb4:	50 40       	sbci	r21, 0x00	; 0
    1cb6:	66 0f       	add	r22, r22
    1cb8:	77 1f       	adc	r23, r23
    1cba:	88 1f       	adc	r24, r24
    1cbc:	d2 f7       	brpl	.-12     	; 0x1cb2 <__fp_norm2>
    1cbe:	08 95       	ret

00001cc0 <vfprintf>:
    1cc0:	2f 92       	push	r2
    1cc2:	3f 92       	push	r3
    1cc4:	4f 92       	push	r4
    1cc6:	5f 92       	push	r5
    1cc8:	6f 92       	push	r6
    1cca:	7f 92       	push	r7
    1ccc:	8f 92       	push	r8
    1cce:	9f 92       	push	r9
    1cd0:	af 92       	push	r10
    1cd2:	bf 92       	push	r11
    1cd4:	cf 92       	push	r12
    1cd6:	df 92       	push	r13
    1cd8:	ef 92       	push	r14
    1cda:	ff 92       	push	r15
    1cdc:	0f 93       	push	r16
    1cde:	1f 93       	push	r17
    1ce0:	cf 93       	push	r28
    1ce2:	df 93       	push	r29
    1ce4:	cd b7       	in	r28, 0x3d	; 61
    1ce6:	de b7       	in	r29, 0x3e	; 62
    1ce8:	60 97       	sbiw	r28, 0x10	; 16
    1cea:	0f b6       	in	r0, 0x3f	; 63
    1cec:	f8 94       	cli
    1cee:	de bf       	out	0x3e, r29	; 62
    1cf0:	0f be       	out	0x3f, r0	; 63
    1cf2:	cd bf       	out	0x3d, r28	; 61
    1cf4:	7c 01       	movw	r14, r24
    1cf6:	1b 01       	movw	r2, r22
    1cf8:	6a 01       	movw	r12, r20
    1cfa:	fc 01       	movw	r30, r24
    1cfc:	17 82       	std	Z+7, r1	; 0x07
    1cfe:	16 82       	std	Z+6, r1	; 0x06
    1d00:	83 81       	ldd	r24, Z+3	; 0x03
    1d02:	81 ff       	sbrs	r24, 1
    1d04:	2a c3       	rjmp	.+1620   	; 0x235a <__stack+0x15b>
    1d06:	9e 01       	movw	r18, r28
    1d08:	2f 5f       	subi	r18, 0xFF	; 255
    1d0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d0c:	39 01       	movw	r6, r18
    1d0e:	f7 01       	movw	r30, r14
    1d10:	93 81       	ldd	r25, Z+3	; 0x03
    1d12:	f1 01       	movw	r30, r2
    1d14:	93 fd       	sbrc	r25, 3
    1d16:	85 91       	lpm	r24, Z+
    1d18:	93 ff       	sbrs	r25, 3
    1d1a:	81 91       	ld	r24, Z+
    1d1c:	1f 01       	movw	r2, r30
    1d1e:	88 23       	and	r24, r24
    1d20:	09 f4       	brne	.+2      	; 0x1d24 <vfprintf+0x64>
    1d22:	17 c3       	rjmp	.+1582   	; 0x2352 <__stack+0x153>
    1d24:	85 32       	cpi	r24, 0x25	; 37
    1d26:	39 f4       	brne	.+14     	; 0x1d36 <vfprintf+0x76>
    1d28:	93 fd       	sbrc	r25, 3
    1d2a:	85 91       	lpm	r24, Z+
    1d2c:	93 ff       	sbrs	r25, 3
    1d2e:	81 91       	ld	r24, Z+
    1d30:	1f 01       	movw	r2, r30
    1d32:	85 32       	cpi	r24, 0x25	; 37
    1d34:	31 f4       	brne	.+12     	; 0x1d42 <vfprintf+0x82>
    1d36:	b7 01       	movw	r22, r14
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	cd d4       	rcall	.+2458   	; 0x26d6 <fputc>
    1d3c:	56 01       	movw	r10, r12
    1d3e:	65 01       	movw	r12, r10
    1d40:	e6 cf       	rjmp	.-52     	; 0x1d0e <vfprintf+0x4e>
    1d42:	10 e0       	ldi	r17, 0x00	; 0
    1d44:	51 2c       	mov	r5, r1
    1d46:	91 2c       	mov	r9, r1
    1d48:	ff e1       	ldi	r31, 0x1F	; 31
    1d4a:	f9 15       	cp	r31, r9
    1d4c:	d8 f0       	brcs	.+54     	; 0x1d84 <vfprintf+0xc4>
    1d4e:	8b 32       	cpi	r24, 0x2B	; 43
    1d50:	79 f0       	breq	.+30     	; 0x1d70 <vfprintf+0xb0>
    1d52:	38 f4       	brcc	.+14     	; 0x1d62 <vfprintf+0xa2>
    1d54:	80 32       	cpi	r24, 0x20	; 32
    1d56:	79 f0       	breq	.+30     	; 0x1d76 <vfprintf+0xb6>
    1d58:	83 32       	cpi	r24, 0x23	; 35
    1d5a:	a1 f4       	brne	.+40     	; 0x1d84 <vfprintf+0xc4>
    1d5c:	f9 2d       	mov	r31, r9
    1d5e:	f0 61       	ori	r31, 0x10	; 16
    1d60:	2e c0       	rjmp	.+92     	; 0x1dbe <vfprintf+0xfe>
    1d62:	8d 32       	cpi	r24, 0x2D	; 45
    1d64:	61 f0       	breq	.+24     	; 0x1d7e <vfprintf+0xbe>
    1d66:	80 33       	cpi	r24, 0x30	; 48
    1d68:	69 f4       	brne	.+26     	; 0x1d84 <vfprintf+0xc4>
    1d6a:	29 2d       	mov	r18, r9
    1d6c:	21 60       	ori	r18, 0x01	; 1
    1d6e:	2d c0       	rjmp	.+90     	; 0x1dca <vfprintf+0x10a>
    1d70:	39 2d       	mov	r19, r9
    1d72:	32 60       	ori	r19, 0x02	; 2
    1d74:	93 2e       	mov	r9, r19
    1d76:	89 2d       	mov	r24, r9
    1d78:	84 60       	ori	r24, 0x04	; 4
    1d7a:	98 2e       	mov	r9, r24
    1d7c:	2a c0       	rjmp	.+84     	; 0x1dd2 <vfprintf+0x112>
    1d7e:	e9 2d       	mov	r30, r9
    1d80:	e8 60       	ori	r30, 0x08	; 8
    1d82:	15 c0       	rjmp	.+42     	; 0x1dae <vfprintf+0xee>
    1d84:	97 fc       	sbrc	r9, 7
    1d86:	2d c0       	rjmp	.+90     	; 0x1de2 <vfprintf+0x122>
    1d88:	20 ed       	ldi	r18, 0xD0	; 208
    1d8a:	28 0f       	add	r18, r24
    1d8c:	2a 30       	cpi	r18, 0x0A	; 10
    1d8e:	88 f4       	brcc	.+34     	; 0x1db2 <vfprintf+0xf2>
    1d90:	96 fe       	sbrs	r9, 6
    1d92:	06 c0       	rjmp	.+12     	; 0x1da0 <vfprintf+0xe0>
    1d94:	3a e0       	ldi	r19, 0x0A	; 10
    1d96:	13 9f       	mul	r17, r19
    1d98:	20 0d       	add	r18, r0
    1d9a:	11 24       	eor	r1, r1
    1d9c:	12 2f       	mov	r17, r18
    1d9e:	19 c0       	rjmp	.+50     	; 0x1dd2 <vfprintf+0x112>
    1da0:	8a e0       	ldi	r24, 0x0A	; 10
    1da2:	58 9e       	mul	r5, r24
    1da4:	20 0d       	add	r18, r0
    1da6:	11 24       	eor	r1, r1
    1da8:	52 2e       	mov	r5, r18
    1daa:	e9 2d       	mov	r30, r9
    1dac:	e0 62       	ori	r30, 0x20	; 32
    1dae:	9e 2e       	mov	r9, r30
    1db0:	10 c0       	rjmp	.+32     	; 0x1dd2 <vfprintf+0x112>
    1db2:	8e 32       	cpi	r24, 0x2E	; 46
    1db4:	31 f4       	brne	.+12     	; 0x1dc2 <vfprintf+0x102>
    1db6:	96 fc       	sbrc	r9, 6
    1db8:	cc c2       	rjmp	.+1432   	; 0x2352 <__stack+0x153>
    1dba:	f9 2d       	mov	r31, r9
    1dbc:	f0 64       	ori	r31, 0x40	; 64
    1dbe:	9f 2e       	mov	r9, r31
    1dc0:	08 c0       	rjmp	.+16     	; 0x1dd2 <vfprintf+0x112>
    1dc2:	8c 36       	cpi	r24, 0x6C	; 108
    1dc4:	21 f4       	brne	.+8      	; 0x1dce <vfprintf+0x10e>
    1dc6:	29 2d       	mov	r18, r9
    1dc8:	20 68       	ori	r18, 0x80	; 128
    1dca:	92 2e       	mov	r9, r18
    1dcc:	02 c0       	rjmp	.+4      	; 0x1dd2 <vfprintf+0x112>
    1dce:	88 36       	cpi	r24, 0x68	; 104
    1dd0:	41 f4       	brne	.+16     	; 0x1de2 <vfprintf+0x122>
    1dd2:	f1 01       	movw	r30, r2
    1dd4:	93 fd       	sbrc	r25, 3
    1dd6:	85 91       	lpm	r24, Z+
    1dd8:	93 ff       	sbrs	r25, 3
    1dda:	81 91       	ld	r24, Z+
    1ddc:	1f 01       	movw	r2, r30
    1dde:	81 11       	cpse	r24, r1
    1de0:	b3 cf       	rjmp	.-154    	; 0x1d48 <vfprintf+0x88>
    1de2:	9b eb       	ldi	r25, 0xBB	; 187
    1de4:	98 0f       	add	r25, r24
    1de6:	93 30       	cpi	r25, 0x03	; 3
    1de8:	20 f4       	brcc	.+8      	; 0x1df2 <vfprintf+0x132>
    1dea:	99 2d       	mov	r25, r9
    1dec:	90 61       	ori	r25, 0x10	; 16
    1dee:	80 5e       	subi	r24, 0xE0	; 224
    1df0:	07 c0       	rjmp	.+14     	; 0x1e00 <vfprintf+0x140>
    1df2:	9b e9       	ldi	r25, 0x9B	; 155
    1df4:	98 0f       	add	r25, r24
    1df6:	93 30       	cpi	r25, 0x03	; 3
    1df8:	08 f0       	brcs	.+2      	; 0x1dfc <vfprintf+0x13c>
    1dfa:	59 c1       	rjmp	.+690    	; 0x20ae <vfprintf+0x3ee>
    1dfc:	99 2d       	mov	r25, r9
    1dfe:	9f 7e       	andi	r25, 0xEF	; 239
    1e00:	96 ff       	sbrs	r25, 6
    1e02:	16 e0       	ldi	r17, 0x06	; 6
    1e04:	9f 73       	andi	r25, 0x3F	; 63
    1e06:	99 2e       	mov	r9, r25
    1e08:	85 36       	cpi	r24, 0x65	; 101
    1e0a:	19 f4       	brne	.+6      	; 0x1e12 <vfprintf+0x152>
    1e0c:	90 64       	ori	r25, 0x40	; 64
    1e0e:	99 2e       	mov	r9, r25
    1e10:	08 c0       	rjmp	.+16     	; 0x1e22 <vfprintf+0x162>
    1e12:	86 36       	cpi	r24, 0x66	; 102
    1e14:	21 f4       	brne	.+8      	; 0x1e1e <vfprintf+0x15e>
    1e16:	39 2f       	mov	r19, r25
    1e18:	30 68       	ori	r19, 0x80	; 128
    1e1a:	93 2e       	mov	r9, r19
    1e1c:	02 c0       	rjmp	.+4      	; 0x1e22 <vfprintf+0x162>
    1e1e:	11 11       	cpse	r17, r1
    1e20:	11 50       	subi	r17, 0x01	; 1
    1e22:	97 fe       	sbrs	r9, 7
    1e24:	07 c0       	rjmp	.+14     	; 0x1e34 <vfprintf+0x174>
    1e26:	1c 33       	cpi	r17, 0x3C	; 60
    1e28:	50 f4       	brcc	.+20     	; 0x1e3e <vfprintf+0x17e>
    1e2a:	44 24       	eor	r4, r4
    1e2c:	43 94       	inc	r4
    1e2e:	41 0e       	add	r4, r17
    1e30:	27 e0       	ldi	r18, 0x07	; 7
    1e32:	0b c0       	rjmp	.+22     	; 0x1e4a <vfprintf+0x18a>
    1e34:	18 30       	cpi	r17, 0x08	; 8
    1e36:	38 f0       	brcs	.+14     	; 0x1e46 <vfprintf+0x186>
    1e38:	27 e0       	ldi	r18, 0x07	; 7
    1e3a:	17 e0       	ldi	r17, 0x07	; 7
    1e3c:	05 c0       	rjmp	.+10     	; 0x1e48 <vfprintf+0x188>
    1e3e:	27 e0       	ldi	r18, 0x07	; 7
    1e40:	9c e3       	ldi	r25, 0x3C	; 60
    1e42:	49 2e       	mov	r4, r25
    1e44:	02 c0       	rjmp	.+4      	; 0x1e4a <vfprintf+0x18a>
    1e46:	21 2f       	mov	r18, r17
    1e48:	41 2c       	mov	r4, r1
    1e4a:	56 01       	movw	r10, r12
    1e4c:	84 e0       	ldi	r24, 0x04	; 4
    1e4e:	a8 0e       	add	r10, r24
    1e50:	b1 1c       	adc	r11, r1
    1e52:	f6 01       	movw	r30, r12
    1e54:	60 81       	ld	r22, Z
    1e56:	71 81       	ldd	r23, Z+1	; 0x01
    1e58:	82 81       	ldd	r24, Z+2	; 0x02
    1e5a:	93 81       	ldd	r25, Z+3	; 0x03
    1e5c:	04 2d       	mov	r16, r4
    1e5e:	a3 01       	movw	r20, r6
    1e60:	df d2       	rcall	.+1470   	; 0x2420 <__ftoa_engine>
    1e62:	6c 01       	movw	r12, r24
    1e64:	f9 81       	ldd	r31, Y+1	; 0x01
    1e66:	fc 87       	std	Y+12, r31	; 0x0c
    1e68:	f0 ff       	sbrs	r31, 0
    1e6a:	02 c0       	rjmp	.+4      	; 0x1e70 <vfprintf+0x1b0>
    1e6c:	f3 ff       	sbrs	r31, 3
    1e6e:	06 c0       	rjmp	.+12     	; 0x1e7c <vfprintf+0x1bc>
    1e70:	91 fc       	sbrc	r9, 1
    1e72:	06 c0       	rjmp	.+12     	; 0x1e80 <vfprintf+0x1c0>
    1e74:	92 fe       	sbrs	r9, 2
    1e76:	06 c0       	rjmp	.+12     	; 0x1e84 <vfprintf+0x1c4>
    1e78:	00 e2       	ldi	r16, 0x20	; 32
    1e7a:	05 c0       	rjmp	.+10     	; 0x1e86 <vfprintf+0x1c6>
    1e7c:	0d e2       	ldi	r16, 0x2D	; 45
    1e7e:	03 c0       	rjmp	.+6      	; 0x1e86 <vfprintf+0x1c6>
    1e80:	0b e2       	ldi	r16, 0x2B	; 43
    1e82:	01 c0       	rjmp	.+2      	; 0x1e86 <vfprintf+0x1c6>
    1e84:	00 e0       	ldi	r16, 0x00	; 0
    1e86:	8c 85       	ldd	r24, Y+12	; 0x0c
    1e88:	8c 70       	andi	r24, 0x0C	; 12
    1e8a:	19 f0       	breq	.+6      	; 0x1e92 <vfprintf+0x1d2>
    1e8c:	01 11       	cpse	r16, r1
    1e8e:	43 c2       	rjmp	.+1158   	; 0x2316 <__stack+0x117>
    1e90:	80 c2       	rjmp	.+1280   	; 0x2392 <__stack+0x193>
    1e92:	97 fe       	sbrs	r9, 7
    1e94:	10 c0       	rjmp	.+32     	; 0x1eb6 <vfprintf+0x1f6>
    1e96:	4c 0c       	add	r4, r12
    1e98:	fc 85       	ldd	r31, Y+12	; 0x0c
    1e9a:	f4 ff       	sbrs	r31, 4
    1e9c:	04 c0       	rjmp	.+8      	; 0x1ea6 <vfprintf+0x1e6>
    1e9e:	8a 81       	ldd	r24, Y+2	; 0x02
    1ea0:	81 33       	cpi	r24, 0x31	; 49
    1ea2:	09 f4       	brne	.+2      	; 0x1ea6 <vfprintf+0x1e6>
    1ea4:	4a 94       	dec	r4
    1ea6:	14 14       	cp	r1, r4
    1ea8:	74 f5       	brge	.+92     	; 0x1f06 <vfprintf+0x246>
    1eaa:	28 e0       	ldi	r18, 0x08	; 8
    1eac:	24 15       	cp	r18, r4
    1eae:	78 f5       	brcc	.+94     	; 0x1f0e <vfprintf+0x24e>
    1eb0:	88 e0       	ldi	r24, 0x08	; 8
    1eb2:	48 2e       	mov	r4, r24
    1eb4:	2c c0       	rjmp	.+88     	; 0x1f0e <vfprintf+0x24e>
    1eb6:	96 fc       	sbrc	r9, 6
    1eb8:	2a c0       	rjmp	.+84     	; 0x1f0e <vfprintf+0x24e>
    1eba:	81 2f       	mov	r24, r17
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	8c 15       	cp	r24, r12
    1ec0:	9d 05       	cpc	r25, r13
    1ec2:	9c f0       	brlt	.+38     	; 0x1eea <vfprintf+0x22a>
    1ec4:	3c ef       	ldi	r19, 0xFC	; 252
    1ec6:	c3 16       	cp	r12, r19
    1ec8:	3f ef       	ldi	r19, 0xFF	; 255
    1eca:	d3 06       	cpc	r13, r19
    1ecc:	74 f0       	brlt	.+28     	; 0x1eea <vfprintf+0x22a>
    1ece:	89 2d       	mov	r24, r9
    1ed0:	80 68       	ori	r24, 0x80	; 128
    1ed2:	98 2e       	mov	r9, r24
    1ed4:	0a c0       	rjmp	.+20     	; 0x1eea <vfprintf+0x22a>
    1ed6:	e2 e0       	ldi	r30, 0x02	; 2
    1ed8:	f0 e0       	ldi	r31, 0x00	; 0
    1eda:	ec 0f       	add	r30, r28
    1edc:	fd 1f       	adc	r31, r29
    1ede:	e1 0f       	add	r30, r17
    1ee0:	f1 1d       	adc	r31, r1
    1ee2:	80 81       	ld	r24, Z
    1ee4:	80 33       	cpi	r24, 0x30	; 48
    1ee6:	19 f4       	brne	.+6      	; 0x1eee <vfprintf+0x22e>
    1ee8:	11 50       	subi	r17, 0x01	; 1
    1eea:	11 11       	cpse	r17, r1
    1eec:	f4 cf       	rjmp	.-24     	; 0x1ed6 <vfprintf+0x216>
    1eee:	97 fe       	sbrs	r9, 7
    1ef0:	0e c0       	rjmp	.+28     	; 0x1f0e <vfprintf+0x24e>
    1ef2:	44 24       	eor	r4, r4
    1ef4:	43 94       	inc	r4
    1ef6:	41 0e       	add	r4, r17
    1ef8:	81 2f       	mov	r24, r17
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	c8 16       	cp	r12, r24
    1efe:	d9 06       	cpc	r13, r25
    1f00:	2c f4       	brge	.+10     	; 0x1f0c <vfprintf+0x24c>
    1f02:	1c 19       	sub	r17, r12
    1f04:	04 c0       	rjmp	.+8      	; 0x1f0e <vfprintf+0x24e>
    1f06:	44 24       	eor	r4, r4
    1f08:	43 94       	inc	r4
    1f0a:	01 c0       	rjmp	.+2      	; 0x1f0e <vfprintf+0x24e>
    1f0c:	10 e0       	ldi	r17, 0x00	; 0
    1f0e:	97 fe       	sbrs	r9, 7
    1f10:	06 c0       	rjmp	.+12     	; 0x1f1e <vfprintf+0x25e>
    1f12:	1c 14       	cp	r1, r12
    1f14:	1d 04       	cpc	r1, r13
    1f16:	34 f4       	brge	.+12     	; 0x1f24 <vfprintf+0x264>
    1f18:	c6 01       	movw	r24, r12
    1f1a:	01 96       	adiw	r24, 0x01	; 1
    1f1c:	05 c0       	rjmp	.+10     	; 0x1f28 <vfprintf+0x268>
    1f1e:	85 e0       	ldi	r24, 0x05	; 5
    1f20:	90 e0       	ldi	r25, 0x00	; 0
    1f22:	02 c0       	rjmp	.+4      	; 0x1f28 <vfprintf+0x268>
    1f24:	81 e0       	ldi	r24, 0x01	; 1
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	01 11       	cpse	r16, r1
    1f2a:	01 96       	adiw	r24, 0x01	; 1
    1f2c:	11 23       	and	r17, r17
    1f2e:	31 f0       	breq	.+12     	; 0x1f3c <vfprintf+0x27c>
    1f30:	21 2f       	mov	r18, r17
    1f32:	30 e0       	ldi	r19, 0x00	; 0
    1f34:	2f 5f       	subi	r18, 0xFF	; 255
    1f36:	3f 4f       	sbci	r19, 0xFF	; 255
    1f38:	82 0f       	add	r24, r18
    1f3a:	93 1f       	adc	r25, r19
    1f3c:	25 2d       	mov	r18, r5
    1f3e:	30 e0       	ldi	r19, 0x00	; 0
    1f40:	82 17       	cp	r24, r18
    1f42:	93 07       	cpc	r25, r19
    1f44:	14 f4       	brge	.+4      	; 0x1f4a <vfprintf+0x28a>
    1f46:	58 1a       	sub	r5, r24
    1f48:	01 c0       	rjmp	.+2      	; 0x1f4c <vfprintf+0x28c>
    1f4a:	51 2c       	mov	r5, r1
    1f4c:	89 2d       	mov	r24, r9
    1f4e:	89 70       	andi	r24, 0x09	; 9
    1f50:	41 f4       	brne	.+16     	; 0x1f62 <vfprintf+0x2a2>
    1f52:	55 20       	and	r5, r5
    1f54:	31 f0       	breq	.+12     	; 0x1f62 <vfprintf+0x2a2>
    1f56:	b7 01       	movw	r22, r14
    1f58:	80 e2       	ldi	r24, 0x20	; 32
    1f5a:	90 e0       	ldi	r25, 0x00	; 0
    1f5c:	bc d3       	rcall	.+1912   	; 0x26d6 <fputc>
    1f5e:	5a 94       	dec	r5
    1f60:	f8 cf       	rjmp	.-16     	; 0x1f52 <vfprintf+0x292>
    1f62:	00 23       	and	r16, r16
    1f64:	21 f0       	breq	.+8      	; 0x1f6e <vfprintf+0x2ae>
    1f66:	b7 01       	movw	r22, r14
    1f68:	80 2f       	mov	r24, r16
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	b4 d3       	rcall	.+1896   	; 0x26d6 <fputc>
    1f6e:	93 fc       	sbrc	r9, 3
    1f70:	08 c0       	rjmp	.+16     	; 0x1f82 <vfprintf+0x2c2>
    1f72:	55 20       	and	r5, r5
    1f74:	31 f0       	breq	.+12     	; 0x1f82 <vfprintf+0x2c2>
    1f76:	b7 01       	movw	r22, r14
    1f78:	80 e3       	ldi	r24, 0x30	; 48
    1f7a:	90 e0       	ldi	r25, 0x00	; 0
    1f7c:	ac d3       	rcall	.+1880   	; 0x26d6 <fputc>
    1f7e:	5a 94       	dec	r5
    1f80:	f8 cf       	rjmp	.-16     	; 0x1f72 <vfprintf+0x2b2>
    1f82:	97 fe       	sbrs	r9, 7
    1f84:	4a c0       	rjmp	.+148    	; 0x201a <vfprintf+0x35a>
    1f86:	46 01       	movw	r8, r12
    1f88:	d7 fe       	sbrs	r13, 7
    1f8a:	02 c0       	rjmp	.+4      	; 0x1f90 <vfprintf+0x2d0>
    1f8c:	81 2c       	mov	r8, r1
    1f8e:	91 2c       	mov	r9, r1
    1f90:	c6 01       	movw	r24, r12
    1f92:	88 19       	sub	r24, r8
    1f94:	99 09       	sbc	r25, r9
    1f96:	f3 01       	movw	r30, r6
    1f98:	e8 0f       	add	r30, r24
    1f9a:	f9 1f       	adc	r31, r25
    1f9c:	fe 87       	std	Y+14, r31	; 0x0e
    1f9e:	ed 87       	std	Y+13, r30	; 0x0d
    1fa0:	96 01       	movw	r18, r12
    1fa2:	24 19       	sub	r18, r4
    1fa4:	31 09       	sbc	r19, r1
    1fa6:	38 8b       	std	Y+16, r19	; 0x10
    1fa8:	2f 87       	std	Y+15, r18	; 0x0f
    1faa:	01 2f       	mov	r16, r17
    1fac:	10 e0       	ldi	r17, 0x00	; 0
    1fae:	11 95       	neg	r17
    1fb0:	01 95       	neg	r16
    1fb2:	11 09       	sbc	r17, r1
    1fb4:	3f ef       	ldi	r19, 0xFF	; 255
    1fb6:	83 16       	cp	r8, r19
    1fb8:	93 06       	cpc	r9, r19
    1fba:	21 f4       	brne	.+8      	; 0x1fc4 <vfprintf+0x304>
    1fbc:	b7 01       	movw	r22, r14
    1fbe:	8e e2       	ldi	r24, 0x2E	; 46
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	89 d3       	rcall	.+1810   	; 0x26d6 <fputc>
    1fc4:	c8 14       	cp	r12, r8
    1fc6:	d9 04       	cpc	r13, r9
    1fc8:	4c f0       	brlt	.+18     	; 0x1fdc <vfprintf+0x31c>
    1fca:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fcc:	98 89       	ldd	r25, Y+16	; 0x10
    1fce:	88 15       	cp	r24, r8
    1fd0:	99 05       	cpc	r25, r9
    1fd2:	24 f4       	brge	.+8      	; 0x1fdc <vfprintf+0x31c>
    1fd4:	ed 85       	ldd	r30, Y+13	; 0x0d
    1fd6:	fe 85       	ldd	r31, Y+14	; 0x0e
    1fd8:	81 81       	ldd	r24, Z+1	; 0x01
    1fda:	01 c0       	rjmp	.+2      	; 0x1fde <vfprintf+0x31e>
    1fdc:	80 e3       	ldi	r24, 0x30	; 48
    1fde:	f1 e0       	ldi	r31, 0x01	; 1
    1fe0:	8f 1a       	sub	r8, r31
    1fe2:	91 08       	sbc	r9, r1
    1fe4:	2d 85       	ldd	r18, Y+13	; 0x0d
    1fe6:	3e 85       	ldd	r19, Y+14	; 0x0e
    1fe8:	2f 5f       	subi	r18, 0xFF	; 255
    1fea:	3f 4f       	sbci	r19, 0xFF	; 255
    1fec:	3e 87       	std	Y+14, r19	; 0x0e
    1fee:	2d 87       	std	Y+13, r18	; 0x0d
    1ff0:	80 16       	cp	r8, r16
    1ff2:	91 06       	cpc	r9, r17
    1ff4:	24 f0       	brlt	.+8      	; 0x1ffe <vfprintf+0x33e>
    1ff6:	b7 01       	movw	r22, r14
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	6d d3       	rcall	.+1754   	; 0x26d6 <fputc>
    1ffc:	db cf       	rjmp	.-74     	; 0x1fb4 <vfprintf+0x2f4>
    1ffe:	c8 14       	cp	r12, r8
    2000:	d9 04       	cpc	r13, r9
    2002:	41 f4       	brne	.+16     	; 0x2014 <vfprintf+0x354>
    2004:	9a 81       	ldd	r25, Y+2	; 0x02
    2006:	96 33       	cpi	r25, 0x36	; 54
    2008:	20 f4       	brcc	.+8      	; 0x2012 <vfprintf+0x352>
    200a:	95 33       	cpi	r25, 0x35	; 53
    200c:	19 f4       	brne	.+6      	; 0x2014 <vfprintf+0x354>
    200e:	3c 85       	ldd	r19, Y+12	; 0x0c
    2010:	34 ff       	sbrs	r19, 4
    2012:	81 e3       	ldi	r24, 0x31	; 49
    2014:	b7 01       	movw	r22, r14
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	48 c0       	rjmp	.+144    	; 0x20aa <vfprintf+0x3ea>
    201a:	8a 81       	ldd	r24, Y+2	; 0x02
    201c:	81 33       	cpi	r24, 0x31	; 49
    201e:	19 f0       	breq	.+6      	; 0x2026 <vfprintf+0x366>
    2020:	9c 85       	ldd	r25, Y+12	; 0x0c
    2022:	9f 7e       	andi	r25, 0xEF	; 239
    2024:	9c 87       	std	Y+12, r25	; 0x0c
    2026:	b7 01       	movw	r22, r14
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	55 d3       	rcall	.+1706   	; 0x26d6 <fputc>
    202c:	11 11       	cpse	r17, r1
    202e:	05 c0       	rjmp	.+10     	; 0x203a <vfprintf+0x37a>
    2030:	94 fc       	sbrc	r9, 4
    2032:	16 c0       	rjmp	.+44     	; 0x2060 <vfprintf+0x3a0>
    2034:	85 e6       	ldi	r24, 0x65	; 101
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	15 c0       	rjmp	.+42     	; 0x2064 <vfprintf+0x3a4>
    203a:	b7 01       	movw	r22, r14
    203c:	8e e2       	ldi	r24, 0x2E	; 46
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	4a d3       	rcall	.+1684   	; 0x26d6 <fputc>
    2042:	1e 5f       	subi	r17, 0xFE	; 254
    2044:	82 e0       	ldi	r24, 0x02	; 2
    2046:	01 e0       	ldi	r16, 0x01	; 1
    2048:	08 0f       	add	r16, r24
    204a:	f3 01       	movw	r30, r6
    204c:	e8 0f       	add	r30, r24
    204e:	f1 1d       	adc	r31, r1
    2050:	80 81       	ld	r24, Z
    2052:	b7 01       	movw	r22, r14
    2054:	90 e0       	ldi	r25, 0x00	; 0
    2056:	3f d3       	rcall	.+1662   	; 0x26d6 <fputc>
    2058:	80 2f       	mov	r24, r16
    205a:	01 13       	cpse	r16, r17
    205c:	f4 cf       	rjmp	.-24     	; 0x2046 <vfprintf+0x386>
    205e:	e8 cf       	rjmp	.-48     	; 0x2030 <vfprintf+0x370>
    2060:	85 e4       	ldi	r24, 0x45	; 69
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	b7 01       	movw	r22, r14
    2066:	37 d3       	rcall	.+1646   	; 0x26d6 <fputc>
    2068:	d7 fc       	sbrc	r13, 7
    206a:	06 c0       	rjmp	.+12     	; 0x2078 <vfprintf+0x3b8>
    206c:	c1 14       	cp	r12, r1
    206e:	d1 04       	cpc	r13, r1
    2070:	41 f4       	brne	.+16     	; 0x2082 <vfprintf+0x3c2>
    2072:	ec 85       	ldd	r30, Y+12	; 0x0c
    2074:	e4 ff       	sbrs	r30, 4
    2076:	05 c0       	rjmp	.+10     	; 0x2082 <vfprintf+0x3c2>
    2078:	d1 94       	neg	r13
    207a:	c1 94       	neg	r12
    207c:	d1 08       	sbc	r13, r1
    207e:	8d e2       	ldi	r24, 0x2D	; 45
    2080:	01 c0       	rjmp	.+2      	; 0x2084 <vfprintf+0x3c4>
    2082:	8b e2       	ldi	r24, 0x2B	; 43
    2084:	b7 01       	movw	r22, r14
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	26 d3       	rcall	.+1612   	; 0x26d6 <fputc>
    208a:	80 e3       	ldi	r24, 0x30	; 48
    208c:	2a e0       	ldi	r18, 0x0A	; 10
    208e:	c2 16       	cp	r12, r18
    2090:	d1 04       	cpc	r13, r1
    2092:	2c f0       	brlt	.+10     	; 0x209e <vfprintf+0x3de>
    2094:	8f 5f       	subi	r24, 0xFF	; 255
    2096:	fa e0       	ldi	r31, 0x0A	; 10
    2098:	cf 1a       	sub	r12, r31
    209a:	d1 08       	sbc	r13, r1
    209c:	f7 cf       	rjmp	.-18     	; 0x208c <vfprintf+0x3cc>
    209e:	b7 01       	movw	r22, r14
    20a0:	90 e0       	ldi	r25, 0x00	; 0
    20a2:	19 d3       	rcall	.+1586   	; 0x26d6 <fputc>
    20a4:	b7 01       	movw	r22, r14
    20a6:	c6 01       	movw	r24, r12
    20a8:	c0 96       	adiw	r24, 0x30	; 48
    20aa:	15 d3       	rcall	.+1578   	; 0x26d6 <fputc>
    20ac:	49 c1       	rjmp	.+658    	; 0x2340 <__stack+0x141>
    20ae:	83 36       	cpi	r24, 0x63	; 99
    20b0:	31 f0       	breq	.+12     	; 0x20be <vfprintf+0x3fe>
    20b2:	83 37       	cpi	r24, 0x73	; 115
    20b4:	79 f0       	breq	.+30     	; 0x20d4 <vfprintf+0x414>
    20b6:	83 35       	cpi	r24, 0x53	; 83
    20b8:	09 f0       	breq	.+2      	; 0x20bc <vfprintf+0x3fc>
    20ba:	52 c0       	rjmp	.+164    	; 0x2160 <vfprintf+0x4a0>
    20bc:	1f c0       	rjmp	.+62     	; 0x20fc <vfprintf+0x43c>
    20be:	56 01       	movw	r10, r12
    20c0:	32 e0       	ldi	r19, 0x02	; 2
    20c2:	a3 0e       	add	r10, r19
    20c4:	b1 1c       	adc	r11, r1
    20c6:	f6 01       	movw	r30, r12
    20c8:	80 81       	ld	r24, Z
    20ca:	89 83       	std	Y+1, r24	; 0x01
    20cc:	01 e0       	ldi	r16, 0x01	; 1
    20ce:	10 e0       	ldi	r17, 0x00	; 0
    20d0:	63 01       	movw	r12, r6
    20d2:	11 c0       	rjmp	.+34     	; 0x20f6 <vfprintf+0x436>
    20d4:	56 01       	movw	r10, r12
    20d6:	f2 e0       	ldi	r31, 0x02	; 2
    20d8:	af 0e       	add	r10, r31
    20da:	b1 1c       	adc	r11, r1
    20dc:	f6 01       	movw	r30, r12
    20de:	c0 80       	ld	r12, Z
    20e0:	d1 80       	ldd	r13, Z+1	; 0x01
    20e2:	96 fe       	sbrs	r9, 6
    20e4:	03 c0       	rjmp	.+6      	; 0x20ec <vfprintf+0x42c>
    20e6:	61 2f       	mov	r22, r17
    20e8:	70 e0       	ldi	r23, 0x00	; 0
    20ea:	02 c0       	rjmp	.+4      	; 0x20f0 <vfprintf+0x430>
    20ec:	6f ef       	ldi	r22, 0xFF	; 255
    20ee:	7f ef       	ldi	r23, 0xFF	; 255
    20f0:	c6 01       	movw	r24, r12
    20f2:	79 d2       	rcall	.+1266   	; 0x25e6 <strnlen>
    20f4:	8c 01       	movw	r16, r24
    20f6:	f9 2d       	mov	r31, r9
    20f8:	ff 77       	andi	r31, 0x7F	; 127
    20fa:	13 c0       	rjmp	.+38     	; 0x2122 <vfprintf+0x462>
    20fc:	56 01       	movw	r10, r12
    20fe:	22 e0       	ldi	r18, 0x02	; 2
    2100:	a2 0e       	add	r10, r18
    2102:	b1 1c       	adc	r11, r1
    2104:	f6 01       	movw	r30, r12
    2106:	c0 80       	ld	r12, Z
    2108:	d1 80       	ldd	r13, Z+1	; 0x01
    210a:	96 fe       	sbrs	r9, 6
    210c:	03 c0       	rjmp	.+6      	; 0x2114 <vfprintf+0x454>
    210e:	61 2f       	mov	r22, r17
    2110:	70 e0       	ldi	r23, 0x00	; 0
    2112:	02 c0       	rjmp	.+4      	; 0x2118 <vfprintf+0x458>
    2114:	6f ef       	ldi	r22, 0xFF	; 255
    2116:	7f ef       	ldi	r23, 0xFF	; 255
    2118:	c6 01       	movw	r24, r12
    211a:	5a d2       	rcall	.+1204   	; 0x25d0 <strnlen_P>
    211c:	8c 01       	movw	r16, r24
    211e:	f9 2d       	mov	r31, r9
    2120:	f0 68       	ori	r31, 0x80	; 128
    2122:	9f 2e       	mov	r9, r31
    2124:	f3 fd       	sbrc	r31, 3
    2126:	18 c0       	rjmp	.+48     	; 0x2158 <vfprintf+0x498>
    2128:	85 2d       	mov	r24, r5
    212a:	90 e0       	ldi	r25, 0x00	; 0
    212c:	08 17       	cp	r16, r24
    212e:	19 07       	cpc	r17, r25
    2130:	98 f4       	brcc	.+38     	; 0x2158 <vfprintf+0x498>
    2132:	b7 01       	movw	r22, r14
    2134:	80 e2       	ldi	r24, 0x20	; 32
    2136:	90 e0       	ldi	r25, 0x00	; 0
    2138:	ce d2       	rcall	.+1436   	; 0x26d6 <fputc>
    213a:	5a 94       	dec	r5
    213c:	f5 cf       	rjmp	.-22     	; 0x2128 <vfprintf+0x468>
    213e:	f6 01       	movw	r30, r12
    2140:	97 fc       	sbrc	r9, 7
    2142:	85 91       	lpm	r24, Z+
    2144:	97 fe       	sbrs	r9, 7
    2146:	81 91       	ld	r24, Z+
    2148:	6f 01       	movw	r12, r30
    214a:	b7 01       	movw	r22, r14
    214c:	90 e0       	ldi	r25, 0x00	; 0
    214e:	c3 d2       	rcall	.+1414   	; 0x26d6 <fputc>
    2150:	51 10       	cpse	r5, r1
    2152:	5a 94       	dec	r5
    2154:	01 50       	subi	r16, 0x01	; 1
    2156:	11 09       	sbc	r17, r1
    2158:	01 15       	cp	r16, r1
    215a:	11 05       	cpc	r17, r1
    215c:	81 f7       	brne	.-32     	; 0x213e <vfprintf+0x47e>
    215e:	f0 c0       	rjmp	.+480    	; 0x2340 <__stack+0x141>
    2160:	84 36       	cpi	r24, 0x64	; 100
    2162:	11 f0       	breq	.+4      	; 0x2168 <vfprintf+0x4a8>
    2164:	89 36       	cpi	r24, 0x69	; 105
    2166:	59 f5       	brne	.+86     	; 0x21be <vfprintf+0x4fe>
    2168:	56 01       	movw	r10, r12
    216a:	97 fe       	sbrs	r9, 7
    216c:	09 c0       	rjmp	.+18     	; 0x2180 <vfprintf+0x4c0>
    216e:	24 e0       	ldi	r18, 0x04	; 4
    2170:	a2 0e       	add	r10, r18
    2172:	b1 1c       	adc	r11, r1
    2174:	f6 01       	movw	r30, r12
    2176:	60 81       	ld	r22, Z
    2178:	71 81       	ldd	r23, Z+1	; 0x01
    217a:	82 81       	ldd	r24, Z+2	; 0x02
    217c:	93 81       	ldd	r25, Z+3	; 0x03
    217e:	0a c0       	rjmp	.+20     	; 0x2194 <vfprintf+0x4d4>
    2180:	f2 e0       	ldi	r31, 0x02	; 2
    2182:	af 0e       	add	r10, r31
    2184:	b1 1c       	adc	r11, r1
    2186:	f6 01       	movw	r30, r12
    2188:	60 81       	ld	r22, Z
    218a:	71 81       	ldd	r23, Z+1	; 0x01
    218c:	07 2e       	mov	r0, r23
    218e:	00 0c       	add	r0, r0
    2190:	88 0b       	sbc	r24, r24
    2192:	99 0b       	sbc	r25, r25
    2194:	f9 2d       	mov	r31, r9
    2196:	ff 76       	andi	r31, 0x6F	; 111
    2198:	9f 2e       	mov	r9, r31
    219a:	97 ff       	sbrs	r25, 7
    219c:	09 c0       	rjmp	.+18     	; 0x21b0 <vfprintf+0x4f0>
    219e:	90 95       	com	r25
    21a0:	80 95       	com	r24
    21a2:	70 95       	com	r23
    21a4:	61 95       	neg	r22
    21a6:	7f 4f       	sbci	r23, 0xFF	; 255
    21a8:	8f 4f       	sbci	r24, 0xFF	; 255
    21aa:	9f 4f       	sbci	r25, 0xFF	; 255
    21ac:	f0 68       	ori	r31, 0x80	; 128
    21ae:	9f 2e       	mov	r9, r31
    21b0:	2a e0       	ldi	r18, 0x0A	; 10
    21b2:	30 e0       	ldi	r19, 0x00	; 0
    21b4:	a3 01       	movw	r20, r6
    21b6:	11 d3       	rcall	.+1570   	; 0x27da <__ultoa_invert>
    21b8:	c8 2e       	mov	r12, r24
    21ba:	c6 18       	sub	r12, r6
    21bc:	3e c0       	rjmp	.+124    	; 0x223a <__stack+0x3b>
    21be:	09 2d       	mov	r16, r9
    21c0:	85 37       	cpi	r24, 0x75	; 117
    21c2:	21 f4       	brne	.+8      	; 0x21cc <vfprintf+0x50c>
    21c4:	0f 7e       	andi	r16, 0xEF	; 239
    21c6:	2a e0       	ldi	r18, 0x0A	; 10
    21c8:	30 e0       	ldi	r19, 0x00	; 0
    21ca:	1d c0       	rjmp	.+58     	; 0x2206 <__stack+0x7>
    21cc:	09 7f       	andi	r16, 0xF9	; 249
    21ce:	8f 36       	cpi	r24, 0x6F	; 111
    21d0:	91 f0       	breq	.+36     	; 0x21f6 <vfprintf+0x536>
    21d2:	18 f4       	brcc	.+6      	; 0x21da <vfprintf+0x51a>
    21d4:	88 35       	cpi	r24, 0x58	; 88
    21d6:	59 f0       	breq	.+22     	; 0x21ee <vfprintf+0x52e>
    21d8:	bc c0       	rjmp	.+376    	; 0x2352 <__stack+0x153>
    21da:	80 37       	cpi	r24, 0x70	; 112
    21dc:	19 f0       	breq	.+6      	; 0x21e4 <vfprintf+0x524>
    21de:	88 37       	cpi	r24, 0x78	; 120
    21e0:	11 f0       	breq	.+4      	; 0x21e6 <vfprintf+0x526>
    21e2:	b7 c0       	rjmp	.+366    	; 0x2352 <__stack+0x153>
    21e4:	00 61       	ori	r16, 0x10	; 16
    21e6:	04 ff       	sbrs	r16, 4
    21e8:	09 c0       	rjmp	.+18     	; 0x21fc <vfprintf+0x53c>
    21ea:	04 60       	ori	r16, 0x04	; 4
    21ec:	07 c0       	rjmp	.+14     	; 0x21fc <vfprintf+0x53c>
    21ee:	94 fe       	sbrs	r9, 4
    21f0:	08 c0       	rjmp	.+16     	; 0x2202 <__stack+0x3>
    21f2:	06 60       	ori	r16, 0x06	; 6
    21f4:	06 c0       	rjmp	.+12     	; 0x2202 <__stack+0x3>
    21f6:	28 e0       	ldi	r18, 0x08	; 8
    21f8:	30 e0       	ldi	r19, 0x00	; 0
    21fa:	05 c0       	rjmp	.+10     	; 0x2206 <__stack+0x7>
    21fc:	20 e1       	ldi	r18, 0x10	; 16
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	02 c0       	rjmp	.+4      	; 0x2206 <__stack+0x7>
    2202:	20 e1       	ldi	r18, 0x10	; 16
    2204:	32 e0       	ldi	r19, 0x02	; 2
    2206:	56 01       	movw	r10, r12
    2208:	07 ff       	sbrs	r16, 7
    220a:	09 c0       	rjmp	.+18     	; 0x221e <__stack+0x1f>
    220c:	84 e0       	ldi	r24, 0x04	; 4
    220e:	a8 0e       	add	r10, r24
    2210:	b1 1c       	adc	r11, r1
    2212:	f6 01       	movw	r30, r12
    2214:	60 81       	ld	r22, Z
    2216:	71 81       	ldd	r23, Z+1	; 0x01
    2218:	82 81       	ldd	r24, Z+2	; 0x02
    221a:	93 81       	ldd	r25, Z+3	; 0x03
    221c:	08 c0       	rjmp	.+16     	; 0x222e <__stack+0x2f>
    221e:	f2 e0       	ldi	r31, 0x02	; 2
    2220:	af 0e       	add	r10, r31
    2222:	b1 1c       	adc	r11, r1
    2224:	f6 01       	movw	r30, r12
    2226:	60 81       	ld	r22, Z
    2228:	71 81       	ldd	r23, Z+1	; 0x01
    222a:	80 e0       	ldi	r24, 0x00	; 0
    222c:	90 e0       	ldi	r25, 0x00	; 0
    222e:	a3 01       	movw	r20, r6
    2230:	d4 d2       	rcall	.+1448   	; 0x27da <__ultoa_invert>
    2232:	c8 2e       	mov	r12, r24
    2234:	c6 18       	sub	r12, r6
    2236:	0f 77       	andi	r16, 0x7F	; 127
    2238:	90 2e       	mov	r9, r16
    223a:	96 fe       	sbrs	r9, 6
    223c:	0b c0       	rjmp	.+22     	; 0x2254 <__stack+0x55>
    223e:	09 2d       	mov	r16, r9
    2240:	0e 7f       	andi	r16, 0xFE	; 254
    2242:	c1 16       	cp	r12, r17
    2244:	50 f4       	brcc	.+20     	; 0x225a <__stack+0x5b>
    2246:	94 fe       	sbrs	r9, 4
    2248:	0a c0       	rjmp	.+20     	; 0x225e <__stack+0x5f>
    224a:	92 fc       	sbrc	r9, 2
    224c:	08 c0       	rjmp	.+16     	; 0x225e <__stack+0x5f>
    224e:	09 2d       	mov	r16, r9
    2250:	0e 7e       	andi	r16, 0xEE	; 238
    2252:	05 c0       	rjmp	.+10     	; 0x225e <__stack+0x5f>
    2254:	dc 2c       	mov	r13, r12
    2256:	09 2d       	mov	r16, r9
    2258:	03 c0       	rjmp	.+6      	; 0x2260 <__stack+0x61>
    225a:	dc 2c       	mov	r13, r12
    225c:	01 c0       	rjmp	.+2      	; 0x2260 <__stack+0x61>
    225e:	d1 2e       	mov	r13, r17
    2260:	04 ff       	sbrs	r16, 4
    2262:	0d c0       	rjmp	.+26     	; 0x227e <__stack+0x7f>
    2264:	fe 01       	movw	r30, r28
    2266:	ec 0d       	add	r30, r12
    2268:	f1 1d       	adc	r31, r1
    226a:	80 81       	ld	r24, Z
    226c:	80 33       	cpi	r24, 0x30	; 48
    226e:	11 f4       	brne	.+4      	; 0x2274 <__stack+0x75>
    2270:	09 7e       	andi	r16, 0xE9	; 233
    2272:	09 c0       	rjmp	.+18     	; 0x2286 <__stack+0x87>
    2274:	02 ff       	sbrs	r16, 2
    2276:	06 c0       	rjmp	.+12     	; 0x2284 <__stack+0x85>
    2278:	d3 94       	inc	r13
    227a:	d3 94       	inc	r13
    227c:	04 c0       	rjmp	.+8      	; 0x2286 <__stack+0x87>
    227e:	80 2f       	mov	r24, r16
    2280:	86 78       	andi	r24, 0x86	; 134
    2282:	09 f0       	breq	.+2      	; 0x2286 <__stack+0x87>
    2284:	d3 94       	inc	r13
    2286:	03 fd       	sbrc	r16, 3
    2288:	10 c0       	rjmp	.+32     	; 0x22aa <__stack+0xab>
    228a:	00 ff       	sbrs	r16, 0
    228c:	06 c0       	rjmp	.+12     	; 0x229a <__stack+0x9b>
    228e:	1c 2d       	mov	r17, r12
    2290:	d5 14       	cp	r13, r5
    2292:	78 f4       	brcc	.+30     	; 0x22b2 <__stack+0xb3>
    2294:	15 0d       	add	r17, r5
    2296:	1d 19       	sub	r17, r13
    2298:	0c c0       	rjmp	.+24     	; 0x22b2 <__stack+0xb3>
    229a:	d5 14       	cp	r13, r5
    229c:	50 f4       	brcc	.+20     	; 0x22b2 <__stack+0xb3>
    229e:	b7 01       	movw	r22, r14
    22a0:	80 e2       	ldi	r24, 0x20	; 32
    22a2:	90 e0       	ldi	r25, 0x00	; 0
    22a4:	18 d2       	rcall	.+1072   	; 0x26d6 <fputc>
    22a6:	d3 94       	inc	r13
    22a8:	f8 cf       	rjmp	.-16     	; 0x229a <__stack+0x9b>
    22aa:	d5 14       	cp	r13, r5
    22ac:	10 f4       	brcc	.+4      	; 0x22b2 <__stack+0xb3>
    22ae:	5d 18       	sub	r5, r13
    22b0:	01 c0       	rjmp	.+2      	; 0x22b4 <__stack+0xb5>
    22b2:	51 2c       	mov	r5, r1
    22b4:	04 ff       	sbrs	r16, 4
    22b6:	0f c0       	rjmp	.+30     	; 0x22d6 <__stack+0xd7>
    22b8:	b7 01       	movw	r22, r14
    22ba:	80 e3       	ldi	r24, 0x30	; 48
    22bc:	90 e0       	ldi	r25, 0x00	; 0
    22be:	0b d2       	rcall	.+1046   	; 0x26d6 <fputc>
    22c0:	02 ff       	sbrs	r16, 2
    22c2:	16 c0       	rjmp	.+44     	; 0x22f0 <__stack+0xf1>
    22c4:	01 fd       	sbrc	r16, 1
    22c6:	03 c0       	rjmp	.+6      	; 0x22ce <__stack+0xcf>
    22c8:	88 e7       	ldi	r24, 0x78	; 120
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	02 c0       	rjmp	.+4      	; 0x22d2 <__stack+0xd3>
    22ce:	88 e5       	ldi	r24, 0x58	; 88
    22d0:	90 e0       	ldi	r25, 0x00	; 0
    22d2:	b7 01       	movw	r22, r14
    22d4:	0c c0       	rjmp	.+24     	; 0x22ee <__stack+0xef>
    22d6:	80 2f       	mov	r24, r16
    22d8:	86 78       	andi	r24, 0x86	; 134
    22da:	51 f0       	breq	.+20     	; 0x22f0 <__stack+0xf1>
    22dc:	01 ff       	sbrs	r16, 1
    22de:	02 c0       	rjmp	.+4      	; 0x22e4 <__stack+0xe5>
    22e0:	8b e2       	ldi	r24, 0x2B	; 43
    22e2:	01 c0       	rjmp	.+2      	; 0x22e6 <__stack+0xe7>
    22e4:	80 e2       	ldi	r24, 0x20	; 32
    22e6:	07 fd       	sbrc	r16, 7
    22e8:	8d e2       	ldi	r24, 0x2D	; 45
    22ea:	b7 01       	movw	r22, r14
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	f3 d1       	rcall	.+998    	; 0x26d6 <fputc>
    22f0:	c1 16       	cp	r12, r17
    22f2:	30 f4       	brcc	.+12     	; 0x2300 <__stack+0x101>
    22f4:	b7 01       	movw	r22, r14
    22f6:	80 e3       	ldi	r24, 0x30	; 48
    22f8:	90 e0       	ldi	r25, 0x00	; 0
    22fa:	ed d1       	rcall	.+986    	; 0x26d6 <fputc>
    22fc:	11 50       	subi	r17, 0x01	; 1
    22fe:	f8 cf       	rjmp	.-16     	; 0x22f0 <__stack+0xf1>
    2300:	ca 94       	dec	r12
    2302:	f3 01       	movw	r30, r6
    2304:	ec 0d       	add	r30, r12
    2306:	f1 1d       	adc	r31, r1
    2308:	80 81       	ld	r24, Z
    230a:	b7 01       	movw	r22, r14
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	e3 d1       	rcall	.+966    	; 0x26d6 <fputc>
    2310:	c1 10       	cpse	r12, r1
    2312:	f6 cf       	rjmp	.-20     	; 0x2300 <__stack+0x101>
    2314:	15 c0       	rjmp	.+42     	; 0x2340 <__stack+0x141>
    2316:	f4 e0       	ldi	r31, 0x04	; 4
    2318:	f5 15       	cp	r31, r5
    231a:	50 f5       	brcc	.+84     	; 0x2370 <__stack+0x171>
    231c:	84 e0       	ldi	r24, 0x04	; 4
    231e:	58 1a       	sub	r5, r24
    2320:	93 fe       	sbrs	r9, 3
    2322:	1e c0       	rjmp	.+60     	; 0x2360 <__stack+0x161>
    2324:	01 11       	cpse	r16, r1
    2326:	25 c0       	rjmp	.+74     	; 0x2372 <__stack+0x173>
    2328:	2c 85       	ldd	r18, Y+12	; 0x0c
    232a:	23 ff       	sbrs	r18, 3
    232c:	27 c0       	rjmp	.+78     	; 0x237c <__stack+0x17d>
    232e:	02 e1       	ldi	r16, 0x12	; 18
    2330:	11 e0       	ldi	r17, 0x01	; 1
    2332:	39 2d       	mov	r19, r9
    2334:	30 71       	andi	r19, 0x10	; 16
    2336:	93 2e       	mov	r9, r19
    2338:	f8 01       	movw	r30, r16
    233a:	84 91       	lpm	r24, Z
    233c:	81 11       	cpse	r24, r1
    233e:	21 c0       	rjmp	.+66     	; 0x2382 <__stack+0x183>
    2340:	55 20       	and	r5, r5
    2342:	09 f4       	brne	.+2      	; 0x2346 <__stack+0x147>
    2344:	fc cc       	rjmp	.-1544   	; 0x1d3e <vfprintf+0x7e>
    2346:	b7 01       	movw	r22, r14
    2348:	80 e2       	ldi	r24, 0x20	; 32
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	c4 d1       	rcall	.+904    	; 0x26d6 <fputc>
    234e:	5a 94       	dec	r5
    2350:	f7 cf       	rjmp	.-18     	; 0x2340 <__stack+0x141>
    2352:	f7 01       	movw	r30, r14
    2354:	86 81       	ldd	r24, Z+6	; 0x06
    2356:	97 81       	ldd	r25, Z+7	; 0x07
    2358:	23 c0       	rjmp	.+70     	; 0x23a0 <__stack+0x1a1>
    235a:	8f ef       	ldi	r24, 0xFF	; 255
    235c:	9f ef       	ldi	r25, 0xFF	; 255
    235e:	20 c0       	rjmp	.+64     	; 0x23a0 <__stack+0x1a1>
    2360:	b7 01       	movw	r22, r14
    2362:	80 e2       	ldi	r24, 0x20	; 32
    2364:	90 e0       	ldi	r25, 0x00	; 0
    2366:	b7 d1       	rcall	.+878    	; 0x26d6 <fputc>
    2368:	5a 94       	dec	r5
    236a:	51 10       	cpse	r5, r1
    236c:	f9 cf       	rjmp	.-14     	; 0x2360 <__stack+0x161>
    236e:	da cf       	rjmp	.-76     	; 0x2324 <__stack+0x125>
    2370:	51 2c       	mov	r5, r1
    2372:	b7 01       	movw	r22, r14
    2374:	80 2f       	mov	r24, r16
    2376:	90 e0       	ldi	r25, 0x00	; 0
    2378:	ae d1       	rcall	.+860    	; 0x26d6 <fputc>
    237a:	d6 cf       	rjmp	.-84     	; 0x2328 <__stack+0x129>
    237c:	06 e1       	ldi	r16, 0x16	; 22
    237e:	11 e0       	ldi	r17, 0x01	; 1
    2380:	d8 cf       	rjmp	.-80     	; 0x2332 <__stack+0x133>
    2382:	91 10       	cpse	r9, r1
    2384:	80 52       	subi	r24, 0x20	; 32
    2386:	b7 01       	movw	r22, r14
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	a5 d1       	rcall	.+842    	; 0x26d6 <fputc>
    238c:	0f 5f       	subi	r16, 0xFF	; 255
    238e:	1f 4f       	sbci	r17, 0xFF	; 255
    2390:	d3 cf       	rjmp	.-90     	; 0x2338 <__stack+0x139>
    2392:	23 e0       	ldi	r18, 0x03	; 3
    2394:	25 15       	cp	r18, r5
    2396:	10 f4       	brcc	.+4      	; 0x239c <__stack+0x19d>
    2398:	83 e0       	ldi	r24, 0x03	; 3
    239a:	c1 cf       	rjmp	.-126    	; 0x231e <__stack+0x11f>
    239c:	51 2c       	mov	r5, r1
    239e:	c4 cf       	rjmp	.-120    	; 0x2328 <__stack+0x129>
    23a0:	60 96       	adiw	r28, 0x10	; 16
    23a2:	0f b6       	in	r0, 0x3f	; 63
    23a4:	f8 94       	cli
    23a6:	de bf       	out	0x3e, r29	; 62
    23a8:	0f be       	out	0x3f, r0	; 63
    23aa:	cd bf       	out	0x3d, r28	; 61
    23ac:	df 91       	pop	r29
    23ae:	cf 91       	pop	r28
    23b0:	1f 91       	pop	r17
    23b2:	0f 91       	pop	r16
    23b4:	ff 90       	pop	r15
    23b6:	ef 90       	pop	r14
    23b8:	df 90       	pop	r13
    23ba:	cf 90       	pop	r12
    23bc:	bf 90       	pop	r11
    23be:	af 90       	pop	r10
    23c0:	9f 90       	pop	r9
    23c2:	8f 90       	pop	r8
    23c4:	7f 90       	pop	r7
    23c6:	6f 90       	pop	r6
    23c8:	5f 90       	pop	r5
    23ca:	4f 90       	pop	r4
    23cc:	3f 90       	pop	r3
    23ce:	2f 90       	pop	r2
    23d0:	08 95       	ret

000023d2 <__divmodhi4>:
    23d2:	97 fb       	bst	r25, 7
    23d4:	07 2e       	mov	r0, r23
    23d6:	16 f4       	brtc	.+4      	; 0x23dc <__divmodhi4+0xa>
    23d8:	00 94       	com	r0
    23da:	06 d0       	rcall	.+12     	; 0x23e8 <__divmodhi4_neg1>
    23dc:	77 fd       	sbrc	r23, 7
    23de:	08 d0       	rcall	.+16     	; 0x23f0 <__divmodhi4_neg2>
    23e0:	0b d0       	rcall	.+22     	; 0x23f8 <__udivmodhi4>
    23e2:	07 fc       	sbrc	r0, 7
    23e4:	05 d0       	rcall	.+10     	; 0x23f0 <__divmodhi4_neg2>
    23e6:	3e f4       	brtc	.+14     	; 0x23f6 <__divmodhi4_exit>

000023e8 <__divmodhi4_neg1>:
    23e8:	90 95       	com	r25
    23ea:	81 95       	neg	r24
    23ec:	9f 4f       	sbci	r25, 0xFF	; 255
    23ee:	08 95       	ret

000023f0 <__divmodhi4_neg2>:
    23f0:	70 95       	com	r23
    23f2:	61 95       	neg	r22
    23f4:	7f 4f       	sbci	r23, 0xFF	; 255

000023f6 <__divmodhi4_exit>:
    23f6:	08 95       	ret

000023f8 <__udivmodhi4>:
    23f8:	aa 1b       	sub	r26, r26
    23fa:	bb 1b       	sub	r27, r27
    23fc:	51 e1       	ldi	r21, 0x11	; 17
    23fe:	07 c0       	rjmp	.+14     	; 0x240e <__udivmodhi4_ep>

00002400 <__udivmodhi4_loop>:
    2400:	aa 1f       	adc	r26, r26
    2402:	bb 1f       	adc	r27, r27
    2404:	a6 17       	cp	r26, r22
    2406:	b7 07       	cpc	r27, r23
    2408:	10 f0       	brcs	.+4      	; 0x240e <__udivmodhi4_ep>
    240a:	a6 1b       	sub	r26, r22
    240c:	b7 0b       	sbc	r27, r23

0000240e <__udivmodhi4_ep>:
    240e:	88 1f       	adc	r24, r24
    2410:	99 1f       	adc	r25, r25
    2412:	5a 95       	dec	r21
    2414:	a9 f7       	brne	.-22     	; 0x2400 <__udivmodhi4_loop>
    2416:	80 95       	com	r24
    2418:	90 95       	com	r25
    241a:	bc 01       	movw	r22, r24
    241c:	cd 01       	movw	r24, r26
    241e:	08 95       	ret

00002420 <__ftoa_engine>:
    2420:	28 30       	cpi	r18, 0x08	; 8
    2422:	08 f0       	brcs	.+2      	; 0x2426 <__ftoa_engine+0x6>
    2424:	27 e0       	ldi	r18, 0x07	; 7
    2426:	33 27       	eor	r19, r19
    2428:	da 01       	movw	r26, r20
    242a:	99 0f       	add	r25, r25
    242c:	31 1d       	adc	r19, r1
    242e:	87 fd       	sbrc	r24, 7
    2430:	91 60       	ori	r25, 0x01	; 1
    2432:	00 96       	adiw	r24, 0x00	; 0
    2434:	61 05       	cpc	r22, r1
    2436:	71 05       	cpc	r23, r1
    2438:	39 f4       	brne	.+14     	; 0x2448 <__ftoa_engine+0x28>
    243a:	32 60       	ori	r19, 0x02	; 2
    243c:	2e 5f       	subi	r18, 0xFE	; 254
    243e:	3d 93       	st	X+, r19
    2440:	30 e3       	ldi	r19, 0x30	; 48
    2442:	2a 95       	dec	r18
    2444:	e1 f7       	brne	.-8      	; 0x243e <__ftoa_engine+0x1e>
    2446:	08 95       	ret
    2448:	9f 3f       	cpi	r25, 0xFF	; 255
    244a:	30 f0       	brcs	.+12     	; 0x2458 <__ftoa_engine+0x38>
    244c:	80 38       	cpi	r24, 0x80	; 128
    244e:	71 05       	cpc	r23, r1
    2450:	61 05       	cpc	r22, r1
    2452:	09 f0       	breq	.+2      	; 0x2456 <__ftoa_engine+0x36>
    2454:	3c 5f       	subi	r19, 0xFC	; 252
    2456:	3c 5f       	subi	r19, 0xFC	; 252
    2458:	3d 93       	st	X+, r19
    245a:	91 30       	cpi	r25, 0x01	; 1
    245c:	08 f0       	brcs	.+2      	; 0x2460 <__ftoa_engine+0x40>
    245e:	80 68       	ori	r24, 0x80	; 128
    2460:	91 1d       	adc	r25, r1
    2462:	df 93       	push	r29
    2464:	cf 93       	push	r28
    2466:	1f 93       	push	r17
    2468:	0f 93       	push	r16
    246a:	ff 92       	push	r15
    246c:	ef 92       	push	r14
    246e:	19 2f       	mov	r17, r25
    2470:	98 7f       	andi	r25, 0xF8	; 248
    2472:	96 95       	lsr	r25
    2474:	e9 2f       	mov	r30, r25
    2476:	96 95       	lsr	r25
    2478:	96 95       	lsr	r25
    247a:	e9 0f       	add	r30, r25
    247c:	ff 27       	eor	r31, r31
    247e:	ec 58       	subi	r30, 0x8C	; 140
    2480:	fe 4f       	sbci	r31, 0xFE	; 254
    2482:	99 27       	eor	r25, r25
    2484:	33 27       	eor	r19, r19
    2486:	ee 24       	eor	r14, r14
    2488:	ff 24       	eor	r15, r15
    248a:	a7 01       	movw	r20, r14
    248c:	e7 01       	movw	r28, r14
    248e:	05 90       	lpm	r0, Z+
    2490:	08 94       	sec
    2492:	07 94       	ror	r0
    2494:	28 f4       	brcc	.+10     	; 0x24a0 <__ftoa_engine+0x80>
    2496:	36 0f       	add	r19, r22
    2498:	e7 1e       	adc	r14, r23
    249a:	f8 1e       	adc	r15, r24
    249c:	49 1f       	adc	r20, r25
    249e:	51 1d       	adc	r21, r1
    24a0:	66 0f       	add	r22, r22
    24a2:	77 1f       	adc	r23, r23
    24a4:	88 1f       	adc	r24, r24
    24a6:	99 1f       	adc	r25, r25
    24a8:	06 94       	lsr	r0
    24aa:	a1 f7       	brne	.-24     	; 0x2494 <__ftoa_engine+0x74>
    24ac:	05 90       	lpm	r0, Z+
    24ae:	07 94       	ror	r0
    24b0:	28 f4       	brcc	.+10     	; 0x24bc <__ftoa_engine+0x9c>
    24b2:	e7 0e       	add	r14, r23
    24b4:	f8 1e       	adc	r15, r24
    24b6:	49 1f       	adc	r20, r25
    24b8:	56 1f       	adc	r21, r22
    24ba:	c1 1d       	adc	r28, r1
    24bc:	77 0f       	add	r23, r23
    24be:	88 1f       	adc	r24, r24
    24c0:	99 1f       	adc	r25, r25
    24c2:	66 1f       	adc	r22, r22
    24c4:	06 94       	lsr	r0
    24c6:	a1 f7       	brne	.-24     	; 0x24b0 <__ftoa_engine+0x90>
    24c8:	05 90       	lpm	r0, Z+
    24ca:	07 94       	ror	r0
    24cc:	28 f4       	brcc	.+10     	; 0x24d8 <__ftoa_engine+0xb8>
    24ce:	f8 0e       	add	r15, r24
    24d0:	49 1f       	adc	r20, r25
    24d2:	56 1f       	adc	r21, r22
    24d4:	c7 1f       	adc	r28, r23
    24d6:	d1 1d       	adc	r29, r1
    24d8:	88 0f       	add	r24, r24
    24da:	99 1f       	adc	r25, r25
    24dc:	66 1f       	adc	r22, r22
    24de:	77 1f       	adc	r23, r23
    24e0:	06 94       	lsr	r0
    24e2:	a1 f7       	brne	.-24     	; 0x24cc <__ftoa_engine+0xac>
    24e4:	05 90       	lpm	r0, Z+
    24e6:	07 94       	ror	r0
    24e8:	20 f4       	brcc	.+8      	; 0x24f2 <__ftoa_engine+0xd2>
    24ea:	49 0f       	add	r20, r25
    24ec:	56 1f       	adc	r21, r22
    24ee:	c7 1f       	adc	r28, r23
    24f0:	d8 1f       	adc	r29, r24
    24f2:	99 0f       	add	r25, r25
    24f4:	66 1f       	adc	r22, r22
    24f6:	77 1f       	adc	r23, r23
    24f8:	88 1f       	adc	r24, r24
    24fa:	06 94       	lsr	r0
    24fc:	a9 f7       	brne	.-22     	; 0x24e8 <__ftoa_engine+0xc8>
    24fe:	84 91       	lpm	r24, Z
    2500:	10 95       	com	r17
    2502:	17 70       	andi	r17, 0x07	; 7
    2504:	41 f0       	breq	.+16     	; 0x2516 <__ftoa_engine+0xf6>
    2506:	d6 95       	lsr	r29
    2508:	c7 95       	ror	r28
    250a:	57 95       	ror	r21
    250c:	47 95       	ror	r20
    250e:	f7 94       	ror	r15
    2510:	e7 94       	ror	r14
    2512:	1a 95       	dec	r17
    2514:	c1 f7       	brne	.-16     	; 0x2506 <__ftoa_engine+0xe6>
    2516:	ea e1       	ldi	r30, 0x1A	; 26
    2518:	f1 e0       	ldi	r31, 0x01	; 1
    251a:	68 94       	set
    251c:	15 90       	lpm	r1, Z+
    251e:	15 91       	lpm	r17, Z+
    2520:	35 91       	lpm	r19, Z+
    2522:	65 91       	lpm	r22, Z+
    2524:	95 91       	lpm	r25, Z+
    2526:	05 90       	lpm	r0, Z+
    2528:	7f e2       	ldi	r23, 0x2F	; 47
    252a:	73 95       	inc	r23
    252c:	e1 18       	sub	r14, r1
    252e:	f1 0a       	sbc	r15, r17
    2530:	43 0b       	sbc	r20, r19
    2532:	56 0b       	sbc	r21, r22
    2534:	c9 0b       	sbc	r28, r25
    2536:	d0 09       	sbc	r29, r0
    2538:	c0 f7       	brcc	.-16     	; 0x252a <__ftoa_engine+0x10a>
    253a:	e1 0c       	add	r14, r1
    253c:	f1 1e       	adc	r15, r17
    253e:	43 1f       	adc	r20, r19
    2540:	56 1f       	adc	r21, r22
    2542:	c9 1f       	adc	r28, r25
    2544:	d0 1d       	adc	r29, r0
    2546:	7e f4       	brtc	.+30     	; 0x2566 <__ftoa_engine+0x146>
    2548:	70 33       	cpi	r23, 0x30	; 48
    254a:	11 f4       	brne	.+4      	; 0x2550 <__ftoa_engine+0x130>
    254c:	8a 95       	dec	r24
    254e:	e6 cf       	rjmp	.-52     	; 0x251c <__ftoa_engine+0xfc>
    2550:	e8 94       	clt
    2552:	01 50       	subi	r16, 0x01	; 1
    2554:	30 f0       	brcs	.+12     	; 0x2562 <__ftoa_engine+0x142>
    2556:	08 0f       	add	r16, r24
    2558:	0a f4       	brpl	.+2      	; 0x255c <__ftoa_engine+0x13c>
    255a:	00 27       	eor	r16, r16
    255c:	02 17       	cp	r16, r18
    255e:	08 f4       	brcc	.+2      	; 0x2562 <__ftoa_engine+0x142>
    2560:	20 2f       	mov	r18, r16
    2562:	23 95       	inc	r18
    2564:	02 2f       	mov	r16, r18
    2566:	7a 33       	cpi	r23, 0x3A	; 58
    2568:	28 f0       	brcs	.+10     	; 0x2574 <__ftoa_engine+0x154>
    256a:	79 e3       	ldi	r23, 0x39	; 57
    256c:	7d 93       	st	X+, r23
    256e:	2a 95       	dec	r18
    2570:	e9 f7       	brne	.-6      	; 0x256c <__ftoa_engine+0x14c>
    2572:	10 c0       	rjmp	.+32     	; 0x2594 <__ftoa_engine+0x174>
    2574:	7d 93       	st	X+, r23
    2576:	2a 95       	dec	r18
    2578:	89 f6       	brne	.-94     	; 0x251c <__ftoa_engine+0xfc>
    257a:	06 94       	lsr	r0
    257c:	97 95       	ror	r25
    257e:	67 95       	ror	r22
    2580:	37 95       	ror	r19
    2582:	17 95       	ror	r17
    2584:	17 94       	ror	r1
    2586:	e1 18       	sub	r14, r1
    2588:	f1 0a       	sbc	r15, r17
    258a:	43 0b       	sbc	r20, r19
    258c:	56 0b       	sbc	r21, r22
    258e:	c9 0b       	sbc	r28, r25
    2590:	d0 09       	sbc	r29, r0
    2592:	98 f0       	brcs	.+38     	; 0x25ba <__ftoa_engine+0x19a>
    2594:	23 95       	inc	r18
    2596:	7e 91       	ld	r23, -X
    2598:	73 95       	inc	r23
    259a:	7a 33       	cpi	r23, 0x3A	; 58
    259c:	08 f0       	brcs	.+2      	; 0x25a0 <__ftoa_engine+0x180>
    259e:	70 e3       	ldi	r23, 0x30	; 48
    25a0:	7c 93       	st	X, r23
    25a2:	20 13       	cpse	r18, r16
    25a4:	b8 f7       	brcc	.-18     	; 0x2594 <__ftoa_engine+0x174>
    25a6:	7e 91       	ld	r23, -X
    25a8:	70 61       	ori	r23, 0x10	; 16
    25aa:	7d 93       	st	X+, r23
    25ac:	30 f0       	brcs	.+12     	; 0x25ba <__ftoa_engine+0x19a>
    25ae:	83 95       	inc	r24
    25b0:	71 e3       	ldi	r23, 0x31	; 49
    25b2:	7d 93       	st	X+, r23
    25b4:	70 e3       	ldi	r23, 0x30	; 48
    25b6:	2a 95       	dec	r18
    25b8:	e1 f7       	brne	.-8      	; 0x25b2 <__ftoa_engine+0x192>
    25ba:	11 24       	eor	r1, r1
    25bc:	ef 90       	pop	r14
    25be:	ff 90       	pop	r15
    25c0:	0f 91       	pop	r16
    25c2:	1f 91       	pop	r17
    25c4:	cf 91       	pop	r28
    25c6:	df 91       	pop	r29
    25c8:	99 27       	eor	r25, r25
    25ca:	87 fd       	sbrc	r24, 7
    25cc:	90 95       	com	r25
    25ce:	08 95       	ret

000025d0 <strnlen_P>:
    25d0:	fc 01       	movw	r30, r24
    25d2:	05 90       	lpm	r0, Z+
    25d4:	61 50       	subi	r22, 0x01	; 1
    25d6:	70 40       	sbci	r23, 0x00	; 0
    25d8:	01 10       	cpse	r0, r1
    25da:	d8 f7       	brcc	.-10     	; 0x25d2 <strnlen_P+0x2>
    25dc:	80 95       	com	r24
    25de:	90 95       	com	r25
    25e0:	8e 0f       	add	r24, r30
    25e2:	9f 1f       	adc	r25, r31
    25e4:	08 95       	ret

000025e6 <strnlen>:
    25e6:	fc 01       	movw	r30, r24
    25e8:	61 50       	subi	r22, 0x01	; 1
    25ea:	70 40       	sbci	r23, 0x00	; 0
    25ec:	01 90       	ld	r0, Z+
    25ee:	01 10       	cpse	r0, r1
    25f0:	d8 f7       	brcc	.-10     	; 0x25e8 <strnlen+0x2>
    25f2:	80 95       	com	r24
    25f4:	90 95       	com	r25
    25f6:	8e 0f       	add	r24, r30
    25f8:	9f 1f       	adc	r25, r31
    25fa:	08 95       	ret

000025fc <__itoa_ncheck>:
    25fc:	bb 27       	eor	r27, r27
    25fe:	4a 30       	cpi	r20, 0x0A	; 10
    2600:	31 f4       	brne	.+12     	; 0x260e <__itoa_ncheck+0x12>
    2602:	99 23       	and	r25, r25
    2604:	22 f4       	brpl	.+8      	; 0x260e <__itoa_ncheck+0x12>
    2606:	bd e2       	ldi	r27, 0x2D	; 45
    2608:	90 95       	com	r25
    260a:	81 95       	neg	r24
    260c:	9f 4f       	sbci	r25, 0xFF	; 255
    260e:	01 c0       	rjmp	.+2      	; 0x2612 <__utoa_common>

00002610 <__utoa_ncheck>:
    2610:	bb 27       	eor	r27, r27

00002612 <__utoa_common>:
    2612:	fb 01       	movw	r30, r22
    2614:	55 27       	eor	r21, r21
    2616:	aa 27       	eor	r26, r26
    2618:	88 0f       	add	r24, r24
    261a:	99 1f       	adc	r25, r25
    261c:	aa 1f       	adc	r26, r26
    261e:	a4 17       	cp	r26, r20
    2620:	10 f0       	brcs	.+4      	; 0x2626 <__utoa_common+0x14>
    2622:	a4 1b       	sub	r26, r20
    2624:	83 95       	inc	r24
    2626:	50 51       	subi	r21, 0x10	; 16
    2628:	b9 f7       	brne	.-18     	; 0x2618 <__utoa_common+0x6>
    262a:	a0 5d       	subi	r26, 0xD0	; 208
    262c:	aa 33       	cpi	r26, 0x3A	; 58
    262e:	08 f0       	brcs	.+2      	; 0x2632 <__utoa_common+0x20>
    2630:	a9 5d       	subi	r26, 0xD9	; 217
    2632:	a1 93       	st	Z+, r26
    2634:	00 97       	sbiw	r24, 0x00	; 0
    2636:	79 f7       	brne	.-34     	; 0x2616 <__utoa_common+0x4>
    2638:	b1 11       	cpse	r27, r1
    263a:	b1 93       	st	Z+, r27
    263c:	11 92       	st	Z+, r1
    263e:	cb 01       	movw	r24, r22
    2640:	6c c2       	rjmp	.+1240   	; 0x2b1a <strrev>

00002642 <fdevopen>:
    2642:	0f 93       	push	r16
    2644:	1f 93       	push	r17
    2646:	cf 93       	push	r28
    2648:	df 93       	push	r29
    264a:	00 97       	sbiw	r24, 0x00	; 0
    264c:	31 f4       	brne	.+12     	; 0x265a <fdevopen+0x18>
    264e:	61 15       	cp	r22, r1
    2650:	71 05       	cpc	r23, r1
    2652:	19 f4       	brne	.+6      	; 0x265a <fdevopen+0x18>
    2654:	80 e0       	ldi	r24, 0x00	; 0
    2656:	90 e0       	ldi	r25, 0x00	; 0
    2658:	39 c0       	rjmp	.+114    	; 0x26cc <fdevopen+0x8a>
    265a:	8b 01       	movw	r16, r22
    265c:	ec 01       	movw	r28, r24
    265e:	6e e0       	ldi	r22, 0x0E	; 14
    2660:	70 e0       	ldi	r23, 0x00	; 0
    2662:	81 e0       	ldi	r24, 0x01	; 1
    2664:	90 e0       	ldi	r25, 0x00	; 0
    2666:	17 d1       	rcall	.+558    	; 0x2896 <calloc>
    2668:	fc 01       	movw	r30, r24
    266a:	89 2b       	or	r24, r25
    266c:	99 f3       	breq	.-26     	; 0x2654 <fdevopen+0x12>
    266e:	80 e8       	ldi	r24, 0x80	; 128
    2670:	83 83       	std	Z+3, r24	; 0x03
    2672:	01 15       	cp	r16, r1
    2674:	11 05       	cpc	r17, r1
    2676:	71 f0       	breq	.+28     	; 0x2694 <fdevopen+0x52>
    2678:	13 87       	std	Z+11, r17	; 0x0b
    267a:	02 87       	std	Z+10, r16	; 0x0a
    267c:	81 e8       	ldi	r24, 0x81	; 129
    267e:	83 83       	std	Z+3, r24	; 0x03
    2680:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <__iob>
    2684:	90 91 26 04 	lds	r25, 0x0426	; 0x800426 <__iob+0x1>
    2688:	89 2b       	or	r24, r25
    268a:	21 f4       	brne	.+8      	; 0x2694 <fdevopen+0x52>
    268c:	f0 93 26 04 	sts	0x0426, r31	; 0x800426 <__iob+0x1>
    2690:	e0 93 25 04 	sts	0x0425, r30	; 0x800425 <__iob>
    2694:	20 97       	sbiw	r28, 0x00	; 0
    2696:	c9 f0       	breq	.+50     	; 0x26ca <fdevopen+0x88>
    2698:	d1 87       	std	Z+9, r29	; 0x09
    269a:	c0 87       	std	Z+8, r28	; 0x08
    269c:	83 81       	ldd	r24, Z+3	; 0x03
    269e:	82 60       	ori	r24, 0x02	; 2
    26a0:	83 83       	std	Z+3, r24	; 0x03
    26a2:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <__iob+0x2>
    26a6:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <__iob+0x3>
    26aa:	89 2b       	or	r24, r25
    26ac:	71 f4       	brne	.+28     	; 0x26ca <fdevopen+0x88>
    26ae:	f0 93 28 04 	sts	0x0428, r31	; 0x800428 <__iob+0x3>
    26b2:	e0 93 27 04 	sts	0x0427, r30	; 0x800427 <__iob+0x2>
    26b6:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <__iob+0x4>
    26ba:	90 91 2a 04 	lds	r25, 0x042A	; 0x80042a <__iob+0x5>
    26be:	89 2b       	or	r24, r25
    26c0:	21 f4       	brne	.+8      	; 0x26ca <fdevopen+0x88>
    26c2:	f0 93 2a 04 	sts	0x042A, r31	; 0x80042a <__iob+0x5>
    26c6:	e0 93 29 04 	sts	0x0429, r30	; 0x800429 <__iob+0x4>
    26ca:	cf 01       	movw	r24, r30
    26cc:	df 91       	pop	r29
    26ce:	cf 91       	pop	r28
    26d0:	1f 91       	pop	r17
    26d2:	0f 91       	pop	r16
    26d4:	08 95       	ret

000026d6 <fputc>:
    26d6:	0f 93       	push	r16
    26d8:	1f 93       	push	r17
    26da:	cf 93       	push	r28
    26dc:	df 93       	push	r29
    26de:	fb 01       	movw	r30, r22
    26e0:	23 81       	ldd	r18, Z+3	; 0x03
    26e2:	21 fd       	sbrc	r18, 1
    26e4:	03 c0       	rjmp	.+6      	; 0x26ec <fputc+0x16>
    26e6:	8f ef       	ldi	r24, 0xFF	; 255
    26e8:	9f ef       	ldi	r25, 0xFF	; 255
    26ea:	2c c0       	rjmp	.+88     	; 0x2744 <fputc+0x6e>
    26ec:	22 ff       	sbrs	r18, 2
    26ee:	16 c0       	rjmp	.+44     	; 0x271c <fputc+0x46>
    26f0:	46 81       	ldd	r20, Z+6	; 0x06
    26f2:	57 81       	ldd	r21, Z+7	; 0x07
    26f4:	24 81       	ldd	r18, Z+4	; 0x04
    26f6:	35 81       	ldd	r19, Z+5	; 0x05
    26f8:	42 17       	cp	r20, r18
    26fa:	53 07       	cpc	r21, r19
    26fc:	44 f4       	brge	.+16     	; 0x270e <fputc+0x38>
    26fe:	a0 81       	ld	r26, Z
    2700:	b1 81       	ldd	r27, Z+1	; 0x01
    2702:	9d 01       	movw	r18, r26
    2704:	2f 5f       	subi	r18, 0xFF	; 255
    2706:	3f 4f       	sbci	r19, 0xFF	; 255
    2708:	31 83       	std	Z+1, r19	; 0x01
    270a:	20 83       	st	Z, r18
    270c:	8c 93       	st	X, r24
    270e:	26 81       	ldd	r18, Z+6	; 0x06
    2710:	37 81       	ldd	r19, Z+7	; 0x07
    2712:	2f 5f       	subi	r18, 0xFF	; 255
    2714:	3f 4f       	sbci	r19, 0xFF	; 255
    2716:	37 83       	std	Z+7, r19	; 0x07
    2718:	26 83       	std	Z+6, r18	; 0x06
    271a:	14 c0       	rjmp	.+40     	; 0x2744 <fputc+0x6e>
    271c:	8b 01       	movw	r16, r22
    271e:	ec 01       	movw	r28, r24
    2720:	fb 01       	movw	r30, r22
    2722:	00 84       	ldd	r0, Z+8	; 0x08
    2724:	f1 85       	ldd	r31, Z+9	; 0x09
    2726:	e0 2d       	mov	r30, r0
    2728:	19 95       	eicall
    272a:	89 2b       	or	r24, r25
    272c:	e1 f6       	brne	.-72     	; 0x26e6 <fputc+0x10>
    272e:	d8 01       	movw	r26, r16
    2730:	16 96       	adiw	r26, 0x06	; 6
    2732:	8d 91       	ld	r24, X+
    2734:	9c 91       	ld	r25, X
    2736:	17 97       	sbiw	r26, 0x07	; 7
    2738:	01 96       	adiw	r24, 0x01	; 1
    273a:	17 96       	adiw	r26, 0x07	; 7
    273c:	9c 93       	st	X, r25
    273e:	8e 93       	st	-X, r24
    2740:	16 97       	sbiw	r26, 0x06	; 6
    2742:	ce 01       	movw	r24, r28
    2744:	df 91       	pop	r29
    2746:	cf 91       	pop	r28
    2748:	1f 91       	pop	r17
    274a:	0f 91       	pop	r16
    274c:	08 95       	ret

0000274e <printf>:
    274e:	cf 93       	push	r28
    2750:	df 93       	push	r29
    2752:	cd b7       	in	r28, 0x3d	; 61
    2754:	de b7       	in	r29, 0x3e	; 62
    2756:	ae 01       	movw	r20, r28
    2758:	4a 5f       	subi	r20, 0xFA	; 250
    275a:	5f 4f       	sbci	r21, 0xFF	; 255
    275c:	fa 01       	movw	r30, r20
    275e:	61 91       	ld	r22, Z+
    2760:	71 91       	ld	r23, Z+
    2762:	af 01       	movw	r20, r30
    2764:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <__iob+0x2>
    2768:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <__iob+0x3>
    276c:	a9 da       	rcall	.-2734   	; 0x1cc0 <vfprintf>
    276e:	df 91       	pop	r29
    2770:	cf 91       	pop	r28
    2772:	08 95       	ret

00002774 <putchar>:
    2774:	60 91 27 04 	lds	r22, 0x0427	; 0x800427 <__iob+0x2>
    2778:	70 91 28 04 	lds	r23, 0x0428	; 0x800428 <__iob+0x3>
    277c:	ac cf       	rjmp	.-168    	; 0x26d6 <fputc>

0000277e <sprintf>:
    277e:	0f 93       	push	r16
    2780:	1f 93       	push	r17
    2782:	cf 93       	push	r28
    2784:	df 93       	push	r29
    2786:	cd b7       	in	r28, 0x3d	; 61
    2788:	de b7       	in	r29, 0x3e	; 62
    278a:	2e 97       	sbiw	r28, 0x0e	; 14
    278c:	0f b6       	in	r0, 0x3f	; 63
    278e:	f8 94       	cli
    2790:	de bf       	out	0x3e, r29	; 62
    2792:	0f be       	out	0x3f, r0	; 63
    2794:	cd bf       	out	0x3d, r28	; 61
    2796:	0e 89       	ldd	r16, Y+22	; 0x16
    2798:	1f 89       	ldd	r17, Y+23	; 0x17
    279a:	86 e0       	ldi	r24, 0x06	; 6
    279c:	8c 83       	std	Y+4, r24	; 0x04
    279e:	1a 83       	std	Y+2, r17	; 0x02
    27a0:	09 83       	std	Y+1, r16	; 0x01
    27a2:	8f ef       	ldi	r24, 0xFF	; 255
    27a4:	9f e7       	ldi	r25, 0x7F	; 127
    27a6:	9e 83       	std	Y+6, r25	; 0x06
    27a8:	8d 83       	std	Y+5, r24	; 0x05
    27aa:	ae 01       	movw	r20, r28
    27ac:	46 5e       	subi	r20, 0xE6	; 230
    27ae:	5f 4f       	sbci	r21, 0xFF	; 255
    27b0:	68 8d       	ldd	r22, Y+24	; 0x18
    27b2:	79 8d       	ldd	r23, Y+25	; 0x19
    27b4:	ce 01       	movw	r24, r28
    27b6:	01 96       	adiw	r24, 0x01	; 1
    27b8:	83 da       	rcall	.-2810   	; 0x1cc0 <vfprintf>
    27ba:	ef 81       	ldd	r30, Y+7	; 0x07
    27bc:	f8 85       	ldd	r31, Y+8	; 0x08
    27be:	e0 0f       	add	r30, r16
    27c0:	f1 1f       	adc	r31, r17
    27c2:	10 82       	st	Z, r1
    27c4:	2e 96       	adiw	r28, 0x0e	; 14
    27c6:	0f b6       	in	r0, 0x3f	; 63
    27c8:	f8 94       	cli
    27ca:	de bf       	out	0x3e, r29	; 62
    27cc:	0f be       	out	0x3f, r0	; 63
    27ce:	cd bf       	out	0x3d, r28	; 61
    27d0:	df 91       	pop	r29
    27d2:	cf 91       	pop	r28
    27d4:	1f 91       	pop	r17
    27d6:	0f 91       	pop	r16
    27d8:	08 95       	ret

000027da <__ultoa_invert>:
    27da:	fa 01       	movw	r30, r20
    27dc:	aa 27       	eor	r26, r26
    27de:	28 30       	cpi	r18, 0x08	; 8
    27e0:	51 f1       	breq	.+84     	; 0x2836 <__ultoa_invert+0x5c>
    27e2:	20 31       	cpi	r18, 0x10	; 16
    27e4:	81 f1       	breq	.+96     	; 0x2846 <__ultoa_invert+0x6c>
    27e6:	e8 94       	clt
    27e8:	6f 93       	push	r22
    27ea:	6e 7f       	andi	r22, 0xFE	; 254
    27ec:	6e 5f       	subi	r22, 0xFE	; 254
    27ee:	7f 4f       	sbci	r23, 0xFF	; 255
    27f0:	8f 4f       	sbci	r24, 0xFF	; 255
    27f2:	9f 4f       	sbci	r25, 0xFF	; 255
    27f4:	af 4f       	sbci	r26, 0xFF	; 255
    27f6:	b1 e0       	ldi	r27, 0x01	; 1
    27f8:	3e d0       	rcall	.+124    	; 0x2876 <__ultoa_invert+0x9c>
    27fa:	b4 e0       	ldi	r27, 0x04	; 4
    27fc:	3c d0       	rcall	.+120    	; 0x2876 <__ultoa_invert+0x9c>
    27fe:	67 0f       	add	r22, r23
    2800:	78 1f       	adc	r23, r24
    2802:	89 1f       	adc	r24, r25
    2804:	9a 1f       	adc	r25, r26
    2806:	a1 1d       	adc	r26, r1
    2808:	68 0f       	add	r22, r24
    280a:	79 1f       	adc	r23, r25
    280c:	8a 1f       	adc	r24, r26
    280e:	91 1d       	adc	r25, r1
    2810:	a1 1d       	adc	r26, r1
    2812:	6a 0f       	add	r22, r26
    2814:	71 1d       	adc	r23, r1
    2816:	81 1d       	adc	r24, r1
    2818:	91 1d       	adc	r25, r1
    281a:	a1 1d       	adc	r26, r1
    281c:	20 d0       	rcall	.+64     	; 0x285e <__ultoa_invert+0x84>
    281e:	09 f4       	brne	.+2      	; 0x2822 <__ultoa_invert+0x48>
    2820:	68 94       	set
    2822:	3f 91       	pop	r19
    2824:	2a e0       	ldi	r18, 0x0A	; 10
    2826:	26 9f       	mul	r18, r22
    2828:	11 24       	eor	r1, r1
    282a:	30 19       	sub	r19, r0
    282c:	30 5d       	subi	r19, 0xD0	; 208
    282e:	31 93       	st	Z+, r19
    2830:	de f6       	brtc	.-74     	; 0x27e8 <__ultoa_invert+0xe>
    2832:	cf 01       	movw	r24, r30
    2834:	08 95       	ret
    2836:	46 2f       	mov	r20, r22
    2838:	47 70       	andi	r20, 0x07	; 7
    283a:	40 5d       	subi	r20, 0xD0	; 208
    283c:	41 93       	st	Z+, r20
    283e:	b3 e0       	ldi	r27, 0x03	; 3
    2840:	0f d0       	rcall	.+30     	; 0x2860 <__ultoa_invert+0x86>
    2842:	c9 f7       	brne	.-14     	; 0x2836 <__ultoa_invert+0x5c>
    2844:	f6 cf       	rjmp	.-20     	; 0x2832 <__ultoa_invert+0x58>
    2846:	46 2f       	mov	r20, r22
    2848:	4f 70       	andi	r20, 0x0F	; 15
    284a:	40 5d       	subi	r20, 0xD0	; 208
    284c:	4a 33       	cpi	r20, 0x3A	; 58
    284e:	18 f0       	brcs	.+6      	; 0x2856 <__ultoa_invert+0x7c>
    2850:	49 5d       	subi	r20, 0xD9	; 217
    2852:	31 fd       	sbrc	r19, 1
    2854:	40 52       	subi	r20, 0x20	; 32
    2856:	41 93       	st	Z+, r20
    2858:	02 d0       	rcall	.+4      	; 0x285e <__ultoa_invert+0x84>
    285a:	a9 f7       	brne	.-22     	; 0x2846 <__ultoa_invert+0x6c>
    285c:	ea cf       	rjmp	.-44     	; 0x2832 <__ultoa_invert+0x58>
    285e:	b4 e0       	ldi	r27, 0x04	; 4
    2860:	a6 95       	lsr	r26
    2862:	97 95       	ror	r25
    2864:	87 95       	ror	r24
    2866:	77 95       	ror	r23
    2868:	67 95       	ror	r22
    286a:	ba 95       	dec	r27
    286c:	c9 f7       	brne	.-14     	; 0x2860 <__ultoa_invert+0x86>
    286e:	00 97       	sbiw	r24, 0x00	; 0
    2870:	61 05       	cpc	r22, r1
    2872:	71 05       	cpc	r23, r1
    2874:	08 95       	ret
    2876:	9b 01       	movw	r18, r22
    2878:	ac 01       	movw	r20, r24
    287a:	0a 2e       	mov	r0, r26
    287c:	06 94       	lsr	r0
    287e:	57 95       	ror	r21
    2880:	47 95       	ror	r20
    2882:	37 95       	ror	r19
    2884:	27 95       	ror	r18
    2886:	ba 95       	dec	r27
    2888:	c9 f7       	brne	.-14     	; 0x287c <__ultoa_invert+0xa2>
    288a:	62 0f       	add	r22, r18
    288c:	73 1f       	adc	r23, r19
    288e:	84 1f       	adc	r24, r20
    2890:	95 1f       	adc	r25, r21
    2892:	a0 1d       	adc	r26, r0
    2894:	08 95       	ret

00002896 <calloc>:
    2896:	0f 93       	push	r16
    2898:	1f 93       	push	r17
    289a:	cf 93       	push	r28
    289c:	df 93       	push	r29
    289e:	86 9f       	mul	r24, r22
    28a0:	80 01       	movw	r16, r0
    28a2:	87 9f       	mul	r24, r23
    28a4:	10 0d       	add	r17, r0
    28a6:	96 9f       	mul	r25, r22
    28a8:	10 0d       	add	r17, r0
    28aa:	11 24       	eor	r1, r1
    28ac:	c8 01       	movw	r24, r16
    28ae:	0d d0       	rcall	.+26     	; 0x28ca <malloc>
    28b0:	ec 01       	movw	r28, r24
    28b2:	00 97       	sbiw	r24, 0x00	; 0
    28b4:	21 f0       	breq	.+8      	; 0x28be <calloc+0x28>
    28b6:	a8 01       	movw	r20, r16
    28b8:	60 e0       	ldi	r22, 0x00	; 0
    28ba:	70 e0       	ldi	r23, 0x00	; 0
    28bc:	27 d1       	rcall	.+590    	; 0x2b0c <memset>
    28be:	ce 01       	movw	r24, r28
    28c0:	df 91       	pop	r29
    28c2:	cf 91       	pop	r28
    28c4:	1f 91       	pop	r17
    28c6:	0f 91       	pop	r16
    28c8:	08 95       	ret

000028ca <malloc>:
    28ca:	0f 93       	push	r16
    28cc:	1f 93       	push	r17
    28ce:	cf 93       	push	r28
    28d0:	df 93       	push	r29
    28d2:	82 30       	cpi	r24, 0x02	; 2
    28d4:	91 05       	cpc	r25, r1
    28d6:	10 f4       	brcc	.+4      	; 0x28dc <malloc+0x12>
    28d8:	82 e0       	ldi	r24, 0x02	; 2
    28da:	90 e0       	ldi	r25, 0x00	; 0
    28dc:	e0 91 2d 04 	lds	r30, 0x042D	; 0x80042d <__flp>
    28e0:	f0 91 2e 04 	lds	r31, 0x042E	; 0x80042e <__flp+0x1>
    28e4:	20 e0       	ldi	r18, 0x00	; 0
    28e6:	30 e0       	ldi	r19, 0x00	; 0
    28e8:	a0 e0       	ldi	r26, 0x00	; 0
    28ea:	b0 e0       	ldi	r27, 0x00	; 0
    28ec:	30 97       	sbiw	r30, 0x00	; 0
    28ee:	19 f1       	breq	.+70     	; 0x2936 <malloc+0x6c>
    28f0:	40 81       	ld	r20, Z
    28f2:	51 81       	ldd	r21, Z+1	; 0x01
    28f4:	02 81       	ldd	r16, Z+2	; 0x02
    28f6:	13 81       	ldd	r17, Z+3	; 0x03
    28f8:	48 17       	cp	r20, r24
    28fa:	59 07       	cpc	r21, r25
    28fc:	c8 f0       	brcs	.+50     	; 0x2930 <malloc+0x66>
    28fe:	84 17       	cp	r24, r20
    2900:	95 07       	cpc	r25, r21
    2902:	69 f4       	brne	.+26     	; 0x291e <malloc+0x54>
    2904:	10 97       	sbiw	r26, 0x00	; 0
    2906:	31 f0       	breq	.+12     	; 0x2914 <malloc+0x4a>
    2908:	12 96       	adiw	r26, 0x02	; 2
    290a:	0c 93       	st	X, r16
    290c:	12 97       	sbiw	r26, 0x02	; 2
    290e:	13 96       	adiw	r26, 0x03	; 3
    2910:	1c 93       	st	X, r17
    2912:	27 c0       	rjmp	.+78     	; 0x2962 <malloc+0x98>
    2914:	00 93 2d 04 	sts	0x042D, r16	; 0x80042d <__flp>
    2918:	10 93 2e 04 	sts	0x042E, r17	; 0x80042e <__flp+0x1>
    291c:	22 c0       	rjmp	.+68     	; 0x2962 <malloc+0x98>
    291e:	21 15       	cp	r18, r1
    2920:	31 05       	cpc	r19, r1
    2922:	19 f0       	breq	.+6      	; 0x292a <malloc+0x60>
    2924:	42 17       	cp	r20, r18
    2926:	53 07       	cpc	r21, r19
    2928:	18 f4       	brcc	.+6      	; 0x2930 <malloc+0x66>
    292a:	9a 01       	movw	r18, r20
    292c:	bd 01       	movw	r22, r26
    292e:	ef 01       	movw	r28, r30
    2930:	df 01       	movw	r26, r30
    2932:	f8 01       	movw	r30, r16
    2934:	db cf       	rjmp	.-74     	; 0x28ec <malloc+0x22>
    2936:	21 15       	cp	r18, r1
    2938:	31 05       	cpc	r19, r1
    293a:	f9 f0       	breq	.+62     	; 0x297a <malloc+0xb0>
    293c:	28 1b       	sub	r18, r24
    293e:	39 0b       	sbc	r19, r25
    2940:	24 30       	cpi	r18, 0x04	; 4
    2942:	31 05       	cpc	r19, r1
    2944:	80 f4       	brcc	.+32     	; 0x2966 <malloc+0x9c>
    2946:	8a 81       	ldd	r24, Y+2	; 0x02
    2948:	9b 81       	ldd	r25, Y+3	; 0x03
    294a:	61 15       	cp	r22, r1
    294c:	71 05       	cpc	r23, r1
    294e:	21 f0       	breq	.+8      	; 0x2958 <malloc+0x8e>
    2950:	fb 01       	movw	r30, r22
    2952:	93 83       	std	Z+3, r25	; 0x03
    2954:	82 83       	std	Z+2, r24	; 0x02
    2956:	04 c0       	rjmp	.+8      	; 0x2960 <malloc+0x96>
    2958:	90 93 2e 04 	sts	0x042E, r25	; 0x80042e <__flp+0x1>
    295c:	80 93 2d 04 	sts	0x042D, r24	; 0x80042d <__flp>
    2960:	fe 01       	movw	r30, r28
    2962:	32 96       	adiw	r30, 0x02	; 2
    2964:	44 c0       	rjmp	.+136    	; 0x29ee <malloc+0x124>
    2966:	fe 01       	movw	r30, r28
    2968:	e2 0f       	add	r30, r18
    296a:	f3 1f       	adc	r31, r19
    296c:	81 93       	st	Z+, r24
    296e:	91 93       	st	Z+, r25
    2970:	22 50       	subi	r18, 0x02	; 2
    2972:	31 09       	sbc	r19, r1
    2974:	39 83       	std	Y+1, r19	; 0x01
    2976:	28 83       	st	Y, r18
    2978:	3a c0       	rjmp	.+116    	; 0x29ee <malloc+0x124>
    297a:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <__brkval>
    297e:	30 91 2c 04 	lds	r19, 0x042C	; 0x80042c <__brkval+0x1>
    2982:	23 2b       	or	r18, r19
    2984:	41 f4       	brne	.+16     	; 0x2996 <malloc+0xcc>
    2986:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    298a:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    298e:	30 93 2c 04 	sts	0x042C, r19	; 0x80042c <__brkval+0x1>
    2992:	20 93 2b 04 	sts	0x042B, r18	; 0x80042b <__brkval>
    2996:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    299a:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    299e:	21 15       	cp	r18, r1
    29a0:	31 05       	cpc	r19, r1
    29a2:	41 f4       	brne	.+16     	; 0x29b4 <malloc+0xea>
    29a4:	2d b7       	in	r18, 0x3d	; 61
    29a6:	3e b7       	in	r19, 0x3e	; 62
    29a8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    29ac:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    29b0:	24 1b       	sub	r18, r20
    29b2:	35 0b       	sbc	r19, r21
    29b4:	e0 91 2b 04 	lds	r30, 0x042B	; 0x80042b <__brkval>
    29b8:	f0 91 2c 04 	lds	r31, 0x042C	; 0x80042c <__brkval+0x1>
    29bc:	e2 17       	cp	r30, r18
    29be:	f3 07       	cpc	r31, r19
    29c0:	a0 f4       	brcc	.+40     	; 0x29ea <malloc+0x120>
    29c2:	2e 1b       	sub	r18, r30
    29c4:	3f 0b       	sbc	r19, r31
    29c6:	28 17       	cp	r18, r24
    29c8:	39 07       	cpc	r19, r25
    29ca:	78 f0       	brcs	.+30     	; 0x29ea <malloc+0x120>
    29cc:	ac 01       	movw	r20, r24
    29ce:	4e 5f       	subi	r20, 0xFE	; 254
    29d0:	5f 4f       	sbci	r21, 0xFF	; 255
    29d2:	24 17       	cp	r18, r20
    29d4:	35 07       	cpc	r19, r21
    29d6:	48 f0       	brcs	.+18     	; 0x29ea <malloc+0x120>
    29d8:	4e 0f       	add	r20, r30
    29da:	5f 1f       	adc	r21, r31
    29dc:	50 93 2c 04 	sts	0x042C, r21	; 0x80042c <__brkval+0x1>
    29e0:	40 93 2b 04 	sts	0x042B, r20	; 0x80042b <__brkval>
    29e4:	81 93       	st	Z+, r24
    29e6:	91 93       	st	Z+, r25
    29e8:	02 c0       	rjmp	.+4      	; 0x29ee <malloc+0x124>
    29ea:	e0 e0       	ldi	r30, 0x00	; 0
    29ec:	f0 e0       	ldi	r31, 0x00	; 0
    29ee:	cf 01       	movw	r24, r30
    29f0:	df 91       	pop	r29
    29f2:	cf 91       	pop	r28
    29f4:	1f 91       	pop	r17
    29f6:	0f 91       	pop	r16
    29f8:	08 95       	ret

000029fa <free>:
    29fa:	cf 93       	push	r28
    29fc:	df 93       	push	r29
    29fe:	00 97       	sbiw	r24, 0x00	; 0
    2a00:	09 f4       	brne	.+2      	; 0x2a04 <free+0xa>
    2a02:	81 c0       	rjmp	.+258    	; 0x2b06 <free+0x10c>
    2a04:	fc 01       	movw	r30, r24
    2a06:	32 97       	sbiw	r30, 0x02	; 2
    2a08:	13 82       	std	Z+3, r1	; 0x03
    2a0a:	12 82       	std	Z+2, r1	; 0x02
    2a0c:	a0 91 2d 04 	lds	r26, 0x042D	; 0x80042d <__flp>
    2a10:	b0 91 2e 04 	lds	r27, 0x042E	; 0x80042e <__flp+0x1>
    2a14:	10 97       	sbiw	r26, 0x00	; 0
    2a16:	81 f4       	brne	.+32     	; 0x2a38 <free+0x3e>
    2a18:	20 81       	ld	r18, Z
    2a1a:	31 81       	ldd	r19, Z+1	; 0x01
    2a1c:	82 0f       	add	r24, r18
    2a1e:	93 1f       	adc	r25, r19
    2a20:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <__brkval>
    2a24:	30 91 2c 04 	lds	r19, 0x042C	; 0x80042c <__brkval+0x1>
    2a28:	28 17       	cp	r18, r24
    2a2a:	39 07       	cpc	r19, r25
    2a2c:	51 f5       	brne	.+84     	; 0x2a82 <free+0x88>
    2a2e:	f0 93 2c 04 	sts	0x042C, r31	; 0x80042c <__brkval+0x1>
    2a32:	e0 93 2b 04 	sts	0x042B, r30	; 0x80042b <__brkval>
    2a36:	67 c0       	rjmp	.+206    	; 0x2b06 <free+0x10c>
    2a38:	ed 01       	movw	r28, r26
    2a3a:	20 e0       	ldi	r18, 0x00	; 0
    2a3c:	30 e0       	ldi	r19, 0x00	; 0
    2a3e:	ce 17       	cp	r28, r30
    2a40:	df 07       	cpc	r29, r31
    2a42:	40 f4       	brcc	.+16     	; 0x2a54 <free+0x5a>
    2a44:	4a 81       	ldd	r20, Y+2	; 0x02
    2a46:	5b 81       	ldd	r21, Y+3	; 0x03
    2a48:	9e 01       	movw	r18, r28
    2a4a:	41 15       	cp	r20, r1
    2a4c:	51 05       	cpc	r21, r1
    2a4e:	f1 f0       	breq	.+60     	; 0x2a8c <free+0x92>
    2a50:	ea 01       	movw	r28, r20
    2a52:	f5 cf       	rjmp	.-22     	; 0x2a3e <free+0x44>
    2a54:	d3 83       	std	Z+3, r29	; 0x03
    2a56:	c2 83       	std	Z+2, r28	; 0x02
    2a58:	40 81       	ld	r20, Z
    2a5a:	51 81       	ldd	r21, Z+1	; 0x01
    2a5c:	84 0f       	add	r24, r20
    2a5e:	95 1f       	adc	r25, r21
    2a60:	c8 17       	cp	r28, r24
    2a62:	d9 07       	cpc	r29, r25
    2a64:	59 f4       	brne	.+22     	; 0x2a7c <free+0x82>
    2a66:	88 81       	ld	r24, Y
    2a68:	99 81       	ldd	r25, Y+1	; 0x01
    2a6a:	84 0f       	add	r24, r20
    2a6c:	95 1f       	adc	r25, r21
    2a6e:	02 96       	adiw	r24, 0x02	; 2
    2a70:	91 83       	std	Z+1, r25	; 0x01
    2a72:	80 83       	st	Z, r24
    2a74:	8a 81       	ldd	r24, Y+2	; 0x02
    2a76:	9b 81       	ldd	r25, Y+3	; 0x03
    2a78:	93 83       	std	Z+3, r25	; 0x03
    2a7a:	82 83       	std	Z+2, r24	; 0x02
    2a7c:	21 15       	cp	r18, r1
    2a7e:	31 05       	cpc	r19, r1
    2a80:	29 f4       	brne	.+10     	; 0x2a8c <free+0x92>
    2a82:	f0 93 2e 04 	sts	0x042E, r31	; 0x80042e <__flp+0x1>
    2a86:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <__flp>
    2a8a:	3d c0       	rjmp	.+122    	; 0x2b06 <free+0x10c>
    2a8c:	e9 01       	movw	r28, r18
    2a8e:	fb 83       	std	Y+3, r31	; 0x03
    2a90:	ea 83       	std	Y+2, r30	; 0x02
    2a92:	49 91       	ld	r20, Y+
    2a94:	59 91       	ld	r21, Y+
    2a96:	c4 0f       	add	r28, r20
    2a98:	d5 1f       	adc	r29, r21
    2a9a:	ec 17       	cp	r30, r28
    2a9c:	fd 07       	cpc	r31, r29
    2a9e:	61 f4       	brne	.+24     	; 0x2ab8 <free+0xbe>
    2aa0:	80 81       	ld	r24, Z
    2aa2:	91 81       	ldd	r25, Z+1	; 0x01
    2aa4:	84 0f       	add	r24, r20
    2aa6:	95 1f       	adc	r25, r21
    2aa8:	02 96       	adiw	r24, 0x02	; 2
    2aaa:	e9 01       	movw	r28, r18
    2aac:	99 83       	std	Y+1, r25	; 0x01
    2aae:	88 83       	st	Y, r24
    2ab0:	82 81       	ldd	r24, Z+2	; 0x02
    2ab2:	93 81       	ldd	r25, Z+3	; 0x03
    2ab4:	9b 83       	std	Y+3, r25	; 0x03
    2ab6:	8a 83       	std	Y+2, r24	; 0x02
    2ab8:	e0 e0       	ldi	r30, 0x00	; 0
    2aba:	f0 e0       	ldi	r31, 0x00	; 0
    2abc:	12 96       	adiw	r26, 0x02	; 2
    2abe:	8d 91       	ld	r24, X+
    2ac0:	9c 91       	ld	r25, X
    2ac2:	13 97       	sbiw	r26, 0x03	; 3
    2ac4:	00 97       	sbiw	r24, 0x00	; 0
    2ac6:	19 f0       	breq	.+6      	; 0x2ace <free+0xd4>
    2ac8:	fd 01       	movw	r30, r26
    2aca:	dc 01       	movw	r26, r24
    2acc:	f7 cf       	rjmp	.-18     	; 0x2abc <free+0xc2>
    2ace:	8d 91       	ld	r24, X+
    2ad0:	9c 91       	ld	r25, X
    2ad2:	11 97       	sbiw	r26, 0x01	; 1
    2ad4:	9d 01       	movw	r18, r26
    2ad6:	2e 5f       	subi	r18, 0xFE	; 254
    2ad8:	3f 4f       	sbci	r19, 0xFF	; 255
    2ada:	82 0f       	add	r24, r18
    2adc:	93 1f       	adc	r25, r19
    2ade:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <__brkval>
    2ae2:	30 91 2c 04 	lds	r19, 0x042C	; 0x80042c <__brkval+0x1>
    2ae6:	28 17       	cp	r18, r24
    2ae8:	39 07       	cpc	r19, r25
    2aea:	69 f4       	brne	.+26     	; 0x2b06 <free+0x10c>
    2aec:	30 97       	sbiw	r30, 0x00	; 0
    2aee:	29 f4       	brne	.+10     	; 0x2afa <free+0x100>
    2af0:	10 92 2e 04 	sts	0x042E, r1	; 0x80042e <__flp+0x1>
    2af4:	10 92 2d 04 	sts	0x042D, r1	; 0x80042d <__flp>
    2af8:	02 c0       	rjmp	.+4      	; 0x2afe <free+0x104>
    2afa:	13 82       	std	Z+3, r1	; 0x03
    2afc:	12 82       	std	Z+2, r1	; 0x02
    2afe:	b0 93 2c 04 	sts	0x042C, r27	; 0x80042c <__brkval+0x1>
    2b02:	a0 93 2b 04 	sts	0x042B, r26	; 0x80042b <__brkval>
    2b06:	df 91       	pop	r29
    2b08:	cf 91       	pop	r28
    2b0a:	08 95       	ret

00002b0c <memset>:
    2b0c:	dc 01       	movw	r26, r24
    2b0e:	01 c0       	rjmp	.+2      	; 0x2b12 <memset+0x6>
    2b10:	6d 93       	st	X+, r22
    2b12:	41 50       	subi	r20, 0x01	; 1
    2b14:	50 40       	sbci	r21, 0x00	; 0
    2b16:	e0 f7       	brcc	.-8      	; 0x2b10 <memset+0x4>
    2b18:	08 95       	ret

00002b1a <strrev>:
    2b1a:	dc 01       	movw	r26, r24
    2b1c:	fc 01       	movw	r30, r24
    2b1e:	67 2f       	mov	r22, r23
    2b20:	71 91       	ld	r23, Z+
    2b22:	77 23       	and	r23, r23
    2b24:	e1 f7       	brne	.-8      	; 0x2b1e <strrev+0x4>
    2b26:	32 97       	sbiw	r30, 0x02	; 2
    2b28:	04 c0       	rjmp	.+8      	; 0x2b32 <strrev+0x18>
    2b2a:	7c 91       	ld	r23, X
    2b2c:	6d 93       	st	X+, r22
    2b2e:	70 83       	st	Z, r23
    2b30:	62 91       	ld	r22, -Z
    2b32:	ae 17       	cp	r26, r30
    2b34:	bf 07       	cpc	r27, r31
    2b36:	c8 f3       	brcs	.-14     	; 0x2b2a <strrev+0x10>
    2b38:	08 95       	ret

00002b3a <_exit>:
    2b3a:	f8 94       	cli

00002b3c <__stop_program>:
    2b3c:	ff cf       	rjmp	.-2      	; 0x2b3c <__stop_program>
