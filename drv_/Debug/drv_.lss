
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000260  00800200  00001de0  00001e74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001de0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000027  00800460  00800460  000020d4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000020d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002130  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  00002170  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002628  00000000  00000000  00002328  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000129d  00000000  00000000  00004950  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010e6  00000000  00000000  00005bed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004d4  00000000  00000000  00006cd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b33  00000000  00000000  000071a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017b1  00000000  00000000  00007cdb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  0000948c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	9e c0       	rjmp	.+316    	; 0x13e <__ctors_end>
       2:	00 00       	nop
       4:	bc c0       	rjmp	.+376    	; 0x17e <__bad_interrupt>
       6:	00 00       	nop
       8:	ba c0       	rjmp	.+372    	; 0x17e <__bad_interrupt>
       a:	00 00       	nop
       c:	b8 c0       	rjmp	.+368    	; 0x17e <__bad_interrupt>
       e:	00 00       	nop
      10:	b6 c0       	rjmp	.+364    	; 0x17e <__bad_interrupt>
      12:	00 00       	nop
      14:	b4 c0       	rjmp	.+360    	; 0x17e <__bad_interrupt>
      16:	00 00       	nop
      18:	b2 c0       	rjmp	.+356    	; 0x17e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b0 c0       	rjmp	.+352    	; 0x17e <__bad_interrupt>
      1e:	00 00       	nop
      20:	ae c0       	rjmp	.+348    	; 0x17e <__bad_interrupt>
      22:	00 00       	nop
      24:	ac c0       	rjmp	.+344    	; 0x17e <__bad_interrupt>
      26:	00 00       	nop
      28:	aa c0       	rjmp	.+340    	; 0x17e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	a8 c0       	rjmp	.+336    	; 0x17e <__bad_interrupt>
      2e:	00 00       	nop
      30:	a6 c0       	rjmp	.+332    	; 0x17e <__bad_interrupt>
      32:	00 00       	nop
      34:	a4 c0       	rjmp	.+328    	; 0x17e <__bad_interrupt>
      36:	00 00       	nop
      38:	a2 c0       	rjmp	.+324    	; 0x17e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a0 c0       	rjmp	.+320    	; 0x17e <__bad_interrupt>
      3e:	00 00       	nop
      40:	9e c0       	rjmp	.+316    	; 0x17e <__bad_interrupt>
      42:	00 00       	nop
      44:	9c c0       	rjmp	.+312    	; 0x17e <__bad_interrupt>
      46:	00 00       	nop
      48:	9a c0       	rjmp	.+308    	; 0x17e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	98 c0       	rjmp	.+304    	; 0x17e <__bad_interrupt>
      4e:	00 00       	nop
      50:	96 c0       	rjmp	.+300    	; 0x17e <__bad_interrupt>
      52:	00 00       	nop
      54:	94 c0       	rjmp	.+296    	; 0x17e <__bad_interrupt>
      56:	00 00       	nop
      58:	92 c0       	rjmp	.+292    	; 0x17e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ae c0       	rjmp	.+348    	; 0x1ba <__vector_23>
      5e:	00 00       	nop
      60:	8e c0       	rjmp	.+284    	; 0x17e <__bad_interrupt>
      62:	00 00       	nop
      64:	8c c0       	rjmp	.+280    	; 0x17e <__bad_interrupt>
      66:	00 00       	nop
      68:	8a c0       	rjmp	.+276    	; 0x17e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	88 c0       	rjmp	.+272    	; 0x17e <__bad_interrupt>
      6e:	00 00       	nop
      70:	86 c0       	rjmp	.+268    	; 0x17e <__bad_interrupt>
      72:	00 00       	nop
      74:	84 c0       	rjmp	.+264    	; 0x17e <__bad_interrupt>
      76:	00 00       	nop
      78:	82 c0       	rjmp	.+260    	; 0x17e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	80 c0       	rjmp	.+256    	; 0x17e <__bad_interrupt>
      7e:	00 00       	nop
      80:	7e c0       	rjmp	.+252    	; 0x17e <__bad_interrupt>
      82:	00 00       	nop
      84:	7c c0       	rjmp	.+248    	; 0x17e <__bad_interrupt>
      86:	00 00       	nop
      88:	7a c0       	rjmp	.+244    	; 0x17e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	78 c0       	rjmp	.+240    	; 0x17e <__bad_interrupt>
      8e:	00 00       	nop
      90:	76 c0       	rjmp	.+236    	; 0x17e <__bad_interrupt>
      92:	00 00       	nop
      94:	74 c0       	rjmp	.+232    	; 0x17e <__bad_interrupt>
      96:	00 00       	nop
      98:	72 c0       	rjmp	.+228    	; 0x17e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	70 c0       	rjmp	.+224    	; 0x17e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	6e c0       	rjmp	.+220    	; 0x17e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	6c c0       	rjmp	.+216    	; 0x17e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	6a c0       	rjmp	.+212    	; 0x17e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	68 c0       	rjmp	.+208    	; 0x17e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	66 c0       	rjmp	.+204    	; 0x17e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	64 c0       	rjmp	.+200    	; 0x17e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	62 c0       	rjmp	.+196    	; 0x17e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	6b c1       	rjmp	.+726    	; 0x394 <__vector_47>
      be:	00 00       	nop
      c0:	5e c0       	rjmp	.+188    	; 0x17e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	5c c0       	rjmp	.+184    	; 0x17e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	5a c0       	rjmp	.+180    	; 0x17e <__bad_interrupt>
      ca:	00 00       	nop
      cc:	58 c0       	rjmp	.+176    	; 0x17e <__bad_interrupt>
      ce:	00 00       	nop
      d0:	56 c0       	rjmp	.+172    	; 0x17e <__bad_interrupt>
      d2:	00 00       	nop
      d4:	54 c0       	rjmp	.+168    	; 0x17e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	52 c0       	rjmp	.+164    	; 0x17e <__bad_interrupt>
      da:	00 00       	nop
      dc:	50 c0       	rjmp	.+160    	; 0x17e <__bad_interrupt>
      de:	00 00       	nop
      e0:	4e c0       	rjmp	.+156    	; 0x17e <__bad_interrupt>
      e2:	00 00       	nop
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	07 2c       	mov	r0, r7
      fa:	7a a5       	ldd	r23, Y+42	; 0x2a
      fc:	ba 6c       	ori	r27, 0xCA	; 202
      fe:	c5 90       	lpm	r12, Z+
     100:	da 3b       	cpi	r29, 0xBA	; 186
     102:	93 65       	ori	r25, 0x53	; 83
     104:	fc 8b       	std	Y+20, r31	; 0x14
     106:	bc 53       	subi	r27, 0x3C	; 60
     108:	f8 10       	cpse	r15, r8
     10a:	fd 3c       	cpi	r31, 0xCD	; 205
     10c:	56 92       	lac	Z, r5
     10e:	83 4d       	sbci	r24, 0xD3	; 211
     110:	bd 87       	std	Y+13, r27	; 0x0d
     112:	9d 3a       	cpi	r25, 0xAD	; 173
     114:	b6 3d       	cpi	r27, 0xD6	; 214
     116:	cb c9       	rjmp	.-3178   	; 0xfffff4ae <__eeprom_end+0xff7ef4ae>
     118:	bf 5b       	subi	r27, 0xBF	; 191
     11a:	be 73       	andi	r27, 0x3E	; 62
     11c:	da 0f       	add	r29, r26
     11e:	c9 3f       	cpi	r28, 0xF9	; 249
     120:	05 a8       	ldd	r0, Z+53	; 0x35
     122:	4c cd       	rjmp	.-1384   	; 0xfffffbbc <__eeprom_end+0xff7efbbc>
     124:	b2 d4       	rcall	.+2404   	; 0xa8a <mpu6050_writeByte+0x16>
     126:	4e b9       	out	0x0e, r20	; 14
     128:	38 36       	cpi	r19, 0x68	; 104
     12a:	a9 02       	muls	r26, r25
     12c:	0c 50       	subi	r16, 0x0C	; 12
     12e:	b9 91       	ld	r27, Y+
     130:	86 88       	ldd	r8, Z+22	; 0x16
     132:	08 3c       	cpi	r16, 0xC8	; 200
     134:	a6 aa       	std	Z+54, r10	; 0x36
     136:	aa 2a       	or	r10, r26
     138:	be 00       	.word	0x00be	; ????
     13a:	00 00       	nop
     13c:	80 3f       	cpi	r24, 0xF0	; 240

0000013e <__ctors_end>:
     13e:	11 24       	eor	r1, r1
     140:	1f be       	out	0x3f, r1	; 63
     142:	cf ef       	ldi	r28, 0xFF	; 255
     144:	d1 e2       	ldi	r29, 0x21	; 33
     146:	de bf       	out	0x3e, r29	; 62
     148:	cd bf       	out	0x3d, r28	; 61
     14a:	00 e0       	ldi	r16, 0x00	; 0
     14c:	0c bf       	out	0x3c, r16	; 60

0000014e <__do_copy_data>:
     14e:	14 e0       	ldi	r17, 0x04	; 4
     150:	a0 e0       	ldi	r26, 0x00	; 0
     152:	b2 e0       	ldi	r27, 0x02	; 2
     154:	e0 ee       	ldi	r30, 0xE0	; 224
     156:	fd e1       	ldi	r31, 0x1D	; 29
     158:	00 e0       	ldi	r16, 0x00	; 0
     15a:	0b bf       	out	0x3b, r16	; 59
     15c:	02 c0       	rjmp	.+4      	; 0x162 <__do_copy_data+0x14>
     15e:	07 90       	elpm	r0, Z+
     160:	0d 92       	st	X+, r0
     162:	a0 36       	cpi	r26, 0x60	; 96
     164:	b1 07       	cpc	r27, r17
     166:	d9 f7       	brne	.-10     	; 0x15e <__do_copy_data+0x10>

00000168 <__do_clear_bss>:
     168:	24 e0       	ldi	r18, 0x04	; 4
     16a:	a0 e6       	ldi	r26, 0x60	; 96
     16c:	b4 e0       	ldi	r27, 0x04	; 4
     16e:	01 c0       	rjmp	.+2      	; 0x172 <.do_clear_bss_start>

00000170 <.do_clear_bss_loop>:
     170:	1d 92       	st	X+, r1

00000172 <.do_clear_bss_start>:
     172:	a7 38       	cpi	r26, 0x87	; 135
     174:	b2 07       	cpc	r27, r18
     176:	e1 f7       	brne	.-8      	; 0x170 <.do_clear_bss_loop>
     178:	5b d1       	rcall	.+694    	; 0x430 <main>
     17a:	0c 94 ee 0e 	jmp	0x1ddc	; 0x1ddc <_exit>

0000017e <__bad_interrupt>:
     17e:	40 cf       	rjmp	.-384    	; 0x0 <__vectors>

00000180 <init_gpio>:
	*/
	//DDRB|=(1<<PB5);//LED13
	//sbi(DDRB,4);//digital 10
	//sbi(DDRB,5);//digital 11
	//sbi(DDRB,6);//digital 12
	sbi(DDRH,3);//digital 6 OC4A
     180:	e1 e0       	ldi	r30, 0x01	; 1
     182:	f1 e0       	ldi	r31, 0x01	; 1
     184:	80 81       	ld	r24, Z
     186:	88 60       	ori	r24, 0x08	; 8
     188:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     18a:	80 81       	ld	r24, Z
     18c:	80 61       	ori	r24, 0x10	; 16
     18e:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     190:	80 81       	ld	r24, Z
     192:	80 62       	ori	r24, 0x20	; 32
     194:	80 83       	st	Z, r24
     196:	08 95       	ret

00000198 <uart_putchar>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
     198:	cf 93       	push	r28
     19a:	c8 2f       	mov	r28, r24
     19c:	8a 30       	cpi	r24, 0x0A	; 10
     19e:	11 f4       	brne	.+4      	; 0x1a4 <uart_putchar+0xc>
     1a0:	8d e0       	ldi	r24, 0x0D	; 13
     1a2:	fa df       	rcall	.-12     	; 0x198 <uart_putchar>
     1a4:	e0 ec       	ldi	r30, 0xC0	; 192
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	85 ff       	sbrs	r24, 5
     1ac:	fd cf       	rjmp	.-6      	; 0x1a8 <uart_putchar+0x10>
     1ae:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <__vector_23>:
     1ba:	1f 92       	push	r1
     1bc:	0f 92       	push	r0
     1be:	0f b6       	in	r0, 0x3f	; 63
     1c0:	0f 92       	push	r0
     1c2:	11 24       	eor	r1, r1
     1c4:	2f 93       	push	r18
     1c6:	3f 93       	push	r19
     1c8:	8f 93       	push	r24
     1ca:	9f 93       	push	r25
     1cc:	af 93       	push	r26
     1ce:	bf 93       	push	r27
     1d0:	80 91 61 04 	lds	r24, 0x0461	; 0x800461 <timer0_millis>
     1d4:	90 91 62 04 	lds	r25, 0x0462	; 0x800462 <timer0_millis+0x1>
     1d8:	a0 91 63 04 	lds	r26, 0x0463	; 0x800463 <timer0_millis+0x2>
     1dc:	b0 91 64 04 	lds	r27, 0x0464	; 0x800464 <timer0_millis+0x3>
     1e0:	30 91 60 04 	lds	r19, 0x0460	; 0x800460 <__data_end>
     1e4:	23 e0       	ldi	r18, 0x03	; 3
     1e6:	23 0f       	add	r18, r19
     1e8:	2d 37       	cpi	r18, 0x7D	; 125
     1ea:	20 f4       	brcc	.+8      	; 0x1f4 <__vector_23+0x3a>
     1ec:	01 96       	adiw	r24, 0x01	; 1
     1ee:	a1 1d       	adc	r26, r1
     1f0:	b1 1d       	adc	r27, r1
     1f2:	05 c0       	rjmp	.+10     	; 0x1fe <__vector_23+0x44>
     1f4:	26 e8       	ldi	r18, 0x86	; 134
     1f6:	23 0f       	add	r18, r19
     1f8:	02 96       	adiw	r24, 0x02	; 2
     1fa:	a1 1d       	adc	r26, r1
     1fc:	b1 1d       	adc	r27, r1
     1fe:	20 93 60 04 	sts	0x0460, r18	; 0x800460 <__data_end>
     202:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <timer0_millis>
     206:	90 93 62 04 	sts	0x0462, r25	; 0x800462 <timer0_millis+0x1>
     20a:	a0 93 63 04 	sts	0x0463, r26	; 0x800463 <timer0_millis+0x2>
     20e:	b0 93 64 04 	sts	0x0464, r27	; 0x800464 <timer0_millis+0x3>
     212:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <timer0_overflow_count>
     216:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <timer0_overflow_count+0x1>
     21a:	a0 91 67 04 	lds	r26, 0x0467	; 0x800467 <timer0_overflow_count+0x2>
     21e:	b0 91 68 04 	lds	r27, 0x0468	; 0x800468 <timer0_overflow_count+0x3>
     222:	01 96       	adiw	r24, 0x01	; 1
     224:	a1 1d       	adc	r26, r1
     226:	b1 1d       	adc	r27, r1
     228:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <timer0_overflow_count>
     22c:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <timer0_overflow_count+0x1>
     230:	a0 93 67 04 	sts	0x0467, r26	; 0x800467 <timer0_overflow_count+0x2>
     234:	b0 93 68 04 	sts	0x0468, r27	; 0x800468 <timer0_overflow_count+0x3>
     238:	bf 91       	pop	r27
     23a:	af 91       	pop	r26
     23c:	9f 91       	pop	r25
     23e:	8f 91       	pop	r24
     240:	3f 91       	pop	r19
     242:	2f 91       	pop	r18
     244:	0f 90       	pop	r0
     246:	0f be       	out	0x3f, r0	; 63
     248:	0f 90       	pop	r0
     24a:	1f 90       	pop	r1
     24c:	18 95       	reti

0000024e <micros>:
     24e:	3f b7       	in	r19, 0x3f	; 63
     250:	f8 94       	cli
     252:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <timer0_overflow_count>
     256:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <timer0_overflow_count+0x1>
     25a:	a0 91 67 04 	lds	r26, 0x0467	; 0x800467 <timer0_overflow_count+0x2>
     25e:	b0 91 68 04 	lds	r27, 0x0468	; 0x800468 <timer0_overflow_count+0x3>
     262:	26 b5       	in	r18, 0x26	; 38
     264:	a8 9b       	sbis	0x15, 0	; 21
     266:	05 c0       	rjmp	.+10     	; 0x272 <micros+0x24>
     268:	2f 3f       	cpi	r18, 0xFF	; 255
     26a:	19 f0       	breq	.+6      	; 0x272 <micros+0x24>
     26c:	01 96       	adiw	r24, 0x01	; 1
     26e:	a1 1d       	adc	r26, r1
     270:	b1 1d       	adc	r27, r1
     272:	3f bf       	out	0x3f, r19	; 63
     274:	ba 2f       	mov	r27, r26
     276:	a9 2f       	mov	r26, r25
     278:	98 2f       	mov	r25, r24
     27a:	88 27       	eor	r24, r24
     27c:	82 0f       	add	r24, r18
     27e:	91 1d       	adc	r25, r1
     280:	a1 1d       	adc	r26, r1
     282:	b1 1d       	adc	r27, r1
     284:	bc 01       	movw	r22, r24
     286:	cd 01       	movw	r24, r26
     288:	66 0f       	add	r22, r22
     28a:	77 1f       	adc	r23, r23
     28c:	88 1f       	adc	r24, r24
     28e:	99 1f       	adc	r25, r25
     290:	66 0f       	add	r22, r22
     292:	77 1f       	adc	r23, r23
     294:	88 1f       	adc	r24, r24
     296:	99 1f       	adc	r25, r25
     298:	08 95       	ret

0000029a <PWM_update>:
{
	PWM_update();
}
void PWM_update()//motor pwm update 
{
	U_PWM=pwmSin[U_step];
     29a:	e0 91 69 04 	lds	r30, 0x0469	; 0x800469 <U_step>
     29e:	f0 91 6a 04 	lds	r31, 0x046A	; 0x80046a <U_step+0x1>
     2a2:	e8 5c       	subi	r30, 0xC8	; 200
     2a4:	fd 4f       	sbci	r31, 0xFD	; 253
     2a6:	80 81       	ld	r24, Z
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2ae:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     2b2:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <V_step>
     2b6:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <V_step+0x1>
     2ba:	e8 5c       	subi	r30, 0xC8	; 200
     2bc:	fd 4f       	sbci	r31, 0xFD	; 253
     2be:	80 81       	ld	r24, Z
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     2c6:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     2ca:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <W_step>
     2ce:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <W_step+0x1>
     2d2:	e8 5c       	subi	r30, 0xC8	; 200
     2d4:	fd 4f       	sbci	r31, 0xFD	; 253
     2d6:	80 81       	ld	r24, Z
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     2de:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     2e2:	60 91 0a 02 	lds	r22, 0x020A	; 0x80020a <incr>
     2e6:	70 91 0b 02 	lds	r23, 0x020B	; 0x80020b <incr+0x1>
     2ea:	40 91 69 04 	lds	r20, 0x0469	; 0x800469 <U_step>
     2ee:	50 91 6a 04 	lds	r21, 0x046A	; 0x80046a <U_step+0x1>
     2f2:	46 0f       	add	r20, r22
     2f4:	57 1f       	adc	r21, r23
     2f6:	50 93 6a 04 	sts	0x046A, r21	; 0x80046a <U_step+0x1>
     2fa:	40 93 69 04 	sts	0x0469, r20	; 0x800469 <U_step>
	V_step=V_step+incr;
     2fe:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <V_step>
     302:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <V_step+0x1>
     306:	26 0f       	add	r18, r22
     308:	37 1f       	adc	r19, r23
     30a:	30 93 0f 02 	sts	0x020F, r19	; 0x80020f <V_step+0x1>
     30e:	20 93 0e 02 	sts	0x020E, r18	; 0x80020e <V_step>
	W_step=W_step+incr;
     312:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <W_step>
     316:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <W_step+0x1>
     31a:	86 0f       	add	r24, r22
     31c:	97 1f       	adc	r25, r23
     31e:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <W_step+0x1>
     322:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <W_step>
	if(U_step > sinTableSize)  U_step = 0;
     326:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <sinTableSize>
     32a:	70 91 11 02 	lds	r23, 0x0211	; 0x800211 <sinTableSize+0x1>
     32e:	64 17       	cp	r22, r20
     330:	75 07       	cpc	r23, r21
     332:	2c f4       	brge	.+10     	; 0x33e <PWM_update+0xa4>
     334:	10 92 6a 04 	sts	0x046A, r1	; 0x80046a <U_step+0x1>
     338:	10 92 69 04 	sts	0x0469, r1	; 0x800469 <U_step>
     33c:	06 c0       	rjmp	.+12     	; 0x34a <PWM_update+0xb0>
	if(U_step < 0)  U_step = sinTableSize;
     33e:	55 23       	and	r21, r21
     340:	24 f4       	brge	.+8      	; 0x34a <PWM_update+0xb0>
     342:	70 93 6a 04 	sts	0x046A, r23	; 0x80046a <U_step+0x1>
     346:	60 93 69 04 	sts	0x0469, r22	; 0x800469 <U_step>
	
	if(V_step > sinTableSize)  V_step = 0;
     34a:	62 17       	cp	r22, r18
     34c:	73 07       	cpc	r23, r19
     34e:	2c f4       	brge	.+10     	; 0x35a <PWM_update+0xc0>
     350:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <V_step+0x1>
     354:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <V_step>
     358:	06 c0       	rjmp	.+12     	; 0x366 <PWM_update+0xcc>
	if(V_step < 0)  V_step = sinTableSize;
     35a:	33 23       	and	r19, r19
     35c:	24 f4       	brge	.+8      	; 0x366 <PWM_update+0xcc>
     35e:	70 93 0f 02 	sts	0x020F, r23	; 0x80020f <V_step+0x1>
     362:	60 93 0e 02 	sts	0x020E, r22	; 0x80020e <V_step>
	
	if(W_step > sinTableSize)  W_step = 0;
     366:	68 17       	cp	r22, r24
     368:	79 07       	cpc	r23, r25
     36a:	2c f4       	brge	.+10     	; 0x376 <PWM_update+0xdc>
     36c:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <W_step+0x1>
     370:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <W_step>
     374:	06 c0       	rjmp	.+12     	; 0x382 <PWM_update+0xe8>
	if(W_step < 0) W_step = sinTableSize;
     376:	99 23       	and	r25, r25
     378:	24 f4       	brge	.+8      	; 0x382 <PWM_update+0xe8>
     37a:	70 93 0d 02 	sts	0x020D, r23	; 0x80020d <W_step+0x1>
     37e:	60 93 0c 02 	sts	0x020C, r22	; 0x80020c <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     382:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <pwm_delay>
     386:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <pwm_delay+0x1>
     38a:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     38e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     392:	08 95       	ret

00000394 <__vector_47>:
	SREG = oldSREG;

	return m;
}
ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
     394:	1f 92       	push	r1
     396:	0f 92       	push	r0
     398:	0f b6       	in	r0, 0x3f	; 63
     39a:	0f 92       	push	r0
     39c:	11 24       	eor	r1, r1
     39e:	0b b6       	in	r0, 0x3b	; 59
     3a0:	0f 92       	push	r0
     3a2:	2f 93       	push	r18
     3a4:	3f 93       	push	r19
     3a6:	4f 93       	push	r20
     3a8:	5f 93       	push	r21
     3aa:	6f 93       	push	r22
     3ac:	7f 93       	push	r23
     3ae:	8f 93       	push	r24
     3b0:	9f 93       	push	r25
     3b2:	af 93       	push	r26
     3b4:	bf 93       	push	r27
     3b6:	ef 93       	push	r30
	PWM_update();
     3b8:	ff 93       	push	r31
}
     3ba:	6f df       	rcall	.-290    	; 0x29a <PWM_update>
     3bc:	ff 91       	pop	r31
     3be:	ef 91       	pop	r30
     3c0:	bf 91       	pop	r27
     3c2:	af 91       	pop	r26
     3c4:	9f 91       	pop	r25
     3c6:	8f 91       	pop	r24
     3c8:	7f 91       	pop	r23
     3ca:	6f 91       	pop	r22
     3cc:	5f 91       	pop	r21
     3ce:	4f 91       	pop	r20
     3d0:	3f 91       	pop	r19
     3d2:	2f 91       	pop	r18
     3d4:	0f 90       	pop	r0
     3d6:	0b be       	out	0x3b, r0	; 59
     3d8:	0f 90       	pop	r0
     3da:	0f be       	out	0x3f, r0	; 63
     3dc:	0f 90       	pop	r0
     3de:	1f 90       	pop	r1
     3e0:	18 95       	reti

000003e2 <print16>:
	OCR5A=pwm_delay;
}
void print16(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     3e2:	0f 93       	push	r16
     3e4:	1f 93       	push	r17
     3e6:	cf 93       	push	r28
     3e8:	df 93       	push	r29
     3ea:	cd b7       	in	r28, 0x3d	; 61
     3ec:	de b7       	in	r29, 0x3e	; 62
     3ee:	2a 97       	sbiw	r28, 0x0a	; 10
     3f0:	0f b6       	in	r0, 0x3f	; 63
     3f2:	f8 94       	cli
     3f4:	de bf       	out	0x3e, r29	; 62
     3f6:	0f be       	out	0x3f, r0	; 63
     3f8:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     3fa:	4a e0       	ldi	r20, 0x0A	; 10
     3fc:	8e 01       	movw	r16, r28
     3fe:	0f 5f       	subi	r16, 0xFF	; 255
     400:	1f 4f       	sbci	r17, 0xFF	; 255
     402:	b8 01       	movw	r22, r16
     404:	fc 01       	movw	r30, r24
     406:	80 81       	ld	r24, Z
     408:	91 81       	ldd	r25, Z+1	; 0x01
     40a:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     40e:	1f 93       	push	r17
     410:	0f 93       	push	r16
     412:	0e 94 a7 0a 	call	0x154e	; 0x154e <printf>
	//printf("\n");
}
     416:	0f 90       	pop	r0
     418:	0f 90       	pop	r0
     41a:	2a 96       	adiw	r28, 0x0a	; 10
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	f8 94       	cli
     420:	de bf       	out	0x3e, r29	; 62
     422:	0f be       	out	0x3f, r0	; 63
     424:	cd bf       	out	0x3d, r28	; 61
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	1f 91       	pop	r17
     42c:	0f 91       	pop	r16
     42e:	08 95       	ret

00000430 <main>:
//sizeof(pwmSin)/sizeof(int); // Find lookup table size
uint8_t phase = 60;//sinTableSize / 3;         // Find phase shift and initial A, B C phase values
uint16_t pwm_delay=2000;
bool loop_bool=true;
int main(void)
{	
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	cd b7       	in	r28, 0x3d	; 61
     436:	de b7       	in	r29, 0x3e	; 62
     438:	ae 97       	sbiw	r28, 0x2e	; 46
     43a:	0f b6       	in	r0, 0x3f	; 63
     43c:	f8 94       	cli
     43e:	de bf       	out	0x3e, r29	; 62
     440:	0f be       	out	0x3f, r0	; 63
     442:	cd bf       	out	0x3d, r28	; 61
	cli();
	init_gpio();
		#ifdef GYRO
			i2c_init();
     444:	f8 94       	cli
		#endif
	USART_Init(MY_UBRR);
     446:	9c de       	rcall	.-712    	; 0x180 <init_gpio>
     448:	0c d4       	rcall	.+2072   	; 0xc62 <i2c_init>
     44a:	8c e0       	ldi	r24, 0x0C	; 12
	uart_str = fdevopen(uart_putchar, NULL);
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	ba d4       	rcall	.+2420   	; 0xdc4 <USART_Init>
     450:	60 e0       	ldi	r22, 0x00	; 0
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	8c ec       	ldi	r24, 0xCC	; 204
     456:	90 e0       	ldi	r25, 0x00	; 0
		
	setup_timer0();
	Enable_timer0_overflow_interrupt();//micros
     458:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <fdevopen>
	
	setup_timer4();//pwm
     45c:	90 93 6c 04 	sts	0x046C, r25	; 0x80046c <uart_str+0x1>
	
	setup_timer5();
     460:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <uart_str>
	Enable_timer5_compare_interrupt();//motor
     464:	f1 d3       	rcall	.+2018   	; 0xc48 <setup_timer0>
     466:	f7 d3       	rcall	.+2030   	; 0xc56 <Enable_timer0_overflow_interrupt>

	OCR5A=4000;
     468:	cc d3       	rcall	.+1944   	; 0xc02 <setup_timer4>
     46a:	df d3       	rcall	.+1982   	; 0xc2a <setup_timer5>
     46c:	e7 d3       	rcall	.+1998   	; 0xc3c <Enable_timer5_compare_interrupt>
     46e:	80 ea       	ldi	r24, 0xA0	; 160
     470:	9f e0       	ldi	r25, 0x0F	; 15
     472:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
		double acc_total_vector=0;
		double angle_pitch_acc=0;
		double angle_roll_acc=0;
		bool set_gyro_angles=false;
			#ifdef CALIBERATED_DATA
				int32_t gyroX_calib_=0;
     476:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     47a:	1d 86       	std	Y+13, r1	; 0x0d
				int32_t gyroY_calib_=0;
     47c:	1e 86       	std	Y+14, r1	; 0x0e
     47e:	1f 86       	std	Y+15, r1	; 0x0f
     480:	18 8a       	std	Y+16, r1	; 0x10
     482:	19 8a       	std	Y+17, r1	; 0x11
				int32_t gyroZ_calib_=0;
     484:	1a 8a       	std	Y+18, r1	; 0x12
     486:	1b 8a       	std	Y+19, r1	; 0x13
     488:	1c 8a       	std	Y+20, r1	; 0x14
				//uint16_t gyroZ_angle_calib=0; 
				 
				 
				 
				
				mpu6050_calibrate_gyro(&gyroX_calib_,&gyroY_calib_,&gyroZ_calib_);
     48a:	1d 8a       	std	Y+21, r1	; 0x15
     48c:	1e 8a       	std	Y+22, r1	; 0x16
     48e:	1f 8a       	std	Y+23, r1	; 0x17
     490:	18 8e       	std	Y+24, r1	; 0x18
     492:	ae 01       	movw	r20, r28
     494:	4b 5e       	subi	r20, 0xEB	; 235
     496:	5f 4f       	sbci	r21, 0xFF	; 255
     498:	be 01       	movw	r22, r28
     49a:	6f 5e       	subi	r22, 0xEF	; 239
				int16_t gyroX_calib=gyroX_calib_;
     49c:	7f 4f       	sbci	r23, 0xFF	; 255
     49e:	ce 01       	movw	r24, r28
     4a0:	0d 96       	adiw	r24, 0x0d	; 13
				int16_t gyroY_calib=gyroY_calib_;
     4a2:	09 d2       	rcall	.+1042   	; 0x8b6 <mpu6050_calibrate_gyro>
     4a4:	2d 85       	ldd	r18, Y+13	; 0x0d
     4a6:	3e 85       	ldd	r19, Y+14	; 0x0e
				int16_t gyroZ_calib=gyroZ_calib_;
     4a8:	3c a7       	std	Y+44, r19	; 0x2c
				int16_t accelX_calib=accelX_calib_;
				int16_t accelY_calib=accelY_calib_;
				int16_t accelZ_calib=accelZ_calib_;				
				//mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     4aa:	2b a7       	std	Y+43, r18	; 0x2b
     4ac:	89 89       	ldd	r24, Y+17	; 0x11
     4ae:	9a 89       	ldd	r25, Y+18	; 0x12
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     4b0:	9e a7       	std	Y+46, r25	; 0x2e
     4b2:	8d a7       	std	Y+45, r24	; 0x2d
     4b4:	2d 88       	ldd	r2, Y+21	; 0x15
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     4b6:	3e 88       	ldd	r3, Y+22	; 0x16
     4b8:	67 e0       	ldi	r22, 0x07	; 7
     4ba:	89 e1       	ldi	r24, 0x19	; 25
     4bc:	db d2       	rcall	.+1462   	; 0xa74 <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     4be:	60 e0       	ldi	r22, 0x00	; 0
     4c0:	8a e1       	ldi	r24, 0x1A	; 26
     4c2:	d8 d2       	rcall	.+1456   	; 0xa74 <mpu6050_writeByte>
     4c4:	68 e0       	ldi	r22, 0x08	; 8
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     4c6:	8b e1       	ldi	r24, 0x1B	; 27
     4c8:	d5 d2       	rcall	.+1450   	; 0xa74 <mpu6050_writeByte>
     4ca:	60 e1       	ldi	r22, 0x10	; 16
     4cc:	8c e1       	ldi	r24, 0x1C	; 28
	#endif
	/*-----------------end mpu definition -----------------*/
	sei();
     4ce:	d2 d2       	rcall	.+1444   	; 0xa74 <mpu6050_writeByte>
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
		double angle_roll=0;
     4d0:	61 e0       	ldi	r22, 0x01	; 1
     4d2:	8b e6       	ldi	r24, 0x6B	; 107
     4d4:	cf d2       	rcall	.+1438   	; 0xa74 <mpu6050_writeByte>
     4d6:	78 94       	sei
		int16_t gyro_y;
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
     4d8:	1b 8e       	std	Y+27, r1	; 0x1b
     4da:	1c 8e       	std	Y+28, r1	; 0x1c
     4dc:	1d 8e       	std	Y+29, r1	; 0x1d
     4de:	1e 8e       	std	Y+30, r1	; 0x1e
	/*-----------------end mpu definition -----------------*/
	sei();
    while (1) 
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     4e0:	1f 8e       	std	Y+31, r1	; 0x1f
     4e2:	18 a2       	std	Y+32, r1	; 0x20
     4e4:	19 a2       	std	Y+33, r1	; 0x21
     4e6:	1a a2       	std	Y+34, r1	; 0x22
     4e8:	9e 01       	movw	r18, r28
     4ea:	2b 5f       	subi	r18, 0xFB	; 251
     4ec:	3f 4f       	sbci	r19, 0xFF	; 255
     4ee:	79 01       	movw	r14, r18
     4f0:	8e 01       	movw	r16, r28
     4f2:	0d 5f       	subi	r16, 0xFD	; 253
     4f4:	1f 4f       	sbci	r17, 0xFF	; 255
     4f6:	24 50       	subi	r18, 0x04	; 4
     4f8:	31 09       	sbc	r19, r1
     4fa:	ae 01       	movw	r20, r28
     4fc:	45 5f       	subi	r20, 0xF5	; 245
     4fe:	5f 4f       	sbci	r21, 0xFF	; 255
     500:	be 01       	movw	r22, r28
     502:	67 5f       	subi	r22, 0xF7	; 247
		#ifdef GYRO
			#ifdef CALIBERATED_DATA
				accX;
				accY;
				accZ;
				grX;
     504:	7f 4f       	sbci	r23, 0xFF	; 255
     506:	ce 01       	movw	r24, r28
     508:	07 96       	adiw	r24, 0x07	; 7
     50a:	10 d3       	rcall	.+1568   	; 0xb2c <mpu6050_getRawData>
     50c:	89 81       	ldd	r24, Y+1	; 0x01
     50e:	9a 81       	ldd	r25, Y+2	; 0x02
     510:	2b a5       	ldd	r18, Y+43	; 0x2b
				grY;
     512:	3c a5       	ldd	r19, Y+44	; 0x2c
     514:	82 1b       	sub	r24, r18
     516:	93 0b       	sbc	r25, r19
     518:	9a 83       	std	Y+2, r25	; 0x02
     51a:	89 83       	std	Y+1, r24	; 0x01
     51c:	8b 81       	ldd	r24, Y+3	; 0x03
     51e:	9c 81       	ldd	r25, Y+4	; 0x04
				grZ;
     520:	2d a5       	ldd	r18, Y+45	; 0x2d
     522:	3e a5       	ldd	r19, Y+46	; 0x2e
     524:	82 1b       	sub	r24, r18
     526:	93 0b       	sbc	r25, r19
     528:	9c 83       	std	Y+4, r25	; 0x04
     52a:	8b 83       	std	Y+3, r24	; 0x03
			printf("  ");
			printf("\n");
			/*--------end------*/			
		#else
			
			double dt = (double)((micros() - timer1));
     52c:	8d 81       	ldd	r24, Y+5	; 0x05
     52e:	9e 81       	ldd	r25, Y+6	; 0x06
     530:	82 19       	sub	r24, r2
     532:	93 09       	sbc	r25, r3
			timer1=micros();
     534:	9e 83       	std	Y+6, r25	; 0x06
     536:	8d 83       	std	Y+5, r24	; 0x05
     538:	8a de       	rcall	.-748    	; 0x24e <micros>
     53a:	6b 01       	movw	r12, r22
     53c:	7c 01       	movw	r14, r24
			//if(loop_bool)
			//{
			//	gyroYrate-=tpel;
			//	loop_bool=false;
			//}
			if (!loop_bool)
     53e:	87 de       	rcall	.-754    	; 0x24e <micros>
     540:	6f a3       	std	Y+39, r22	; 0x27
     542:	78 a7       	std	Y+40, r23	; 0x28
     544:	89 a7       	std	Y+41, r24	; 0x29
     546:	9a a7       	std	Y+42, r25	; 0x2a
     548:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <loop_bool>
			/*--------end------*/			
		#else
			
			double dt = (double)((micros() - timer1));
			timer1=micros();
			double hz=1000000/dt;
     54c:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <loop_bool+0x1>
     550:	89 2b       	or	r24, r25
     552:	09 f0       	breq	.+2      	; 0x556 <main+0x126>
     554:	45 c0       	rjmp	.+138    	; 0x5e0 <main+0x1b0>
     556:	c7 01       	movw	r24, r14
     558:	b6 01       	movw	r22, r12
     55a:	68 19       	sub	r22, r8
     55c:	79 09       	sbc	r23, r9
     55e:	8a 09       	sbc	r24, r10
     560:	9b 09       	sbc	r25, r11
     562:	4b d5       	rcall	.+2710   	; 0xffa <__floatunsisf>
     564:	9b 01       	movw	r18, r22
     566:	ac 01       	movw	r20, r24
			//	gyroYrate-=tpel;
			//	loop_bool=false;
			//}
			if (!loop_bool)
			{
				angle_pitch += gyroXrate; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	74 e2       	ldi	r23, 0x24	; 36
     56c:	84 e7       	ldi	r24, 0x74	; 116
     56e:	99 e4       	ldi	r25, 0x49	; 73
     570:	b0 d4       	rcall	.+2400   	; 0xed2 <__divsf3>
     572:	6b 01       	movw	r12, r22
     574:	7c 01       	movw	r14, r24
     576:	69 81       	ldd	r22, Y+1	; 0x01
     578:	7a 81       	ldd	r23, Y+2	; 0x02
     57a:	07 2e       	mov	r0, r23
     57c:	00 0c       	add	r0, r0
     57e:	88 0b       	sbc	r24, r24
     580:	99 0b       	sbc	r25, r25
     582:	3d d5       	rcall	.+2682   	; 0xffe <__floatsisf>
     584:	20 e0       	ldi	r18, 0x00	; 0
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	43 e8       	ldi	r20, 0x83	; 131
     58a:	52 e4       	ldi	r21, 0x42	; 66
     58c:	a2 d4       	rcall	.+2372   	; 0xed2 <__divsf3>
     58e:	a7 01       	movw	r20, r14
     590:	96 01       	movw	r18, r12
     592:	9f d4       	rcall	.+2366   	; 0xed2 <__divsf3>
     594:	9b 01       	movw	r18, r22
     596:	ac 01       	movw	r20, r24
     598:	6f 8d       	ldd	r22, Y+31	; 0x1f
				angle_roll += gyroYrate;  //Calculate the traveled roll angle and add this to the angle_roll variable			
     59a:	78 a1       	ldd	r23, Y+32	; 0x20
     59c:	89 a1       	ldd	r24, Y+33	; 0x21
     59e:	9a a1       	ldd	r25, Y+34	; 0x22
     5a0:	1d d4       	rcall	.+2106   	; 0xddc <__addsf3>
     5a2:	6f 8f       	std	Y+31, r22	; 0x1f
     5a4:	78 a3       	std	Y+32, r23	; 0x20
     5a6:	89 a3       	std	Y+33, r24	; 0x21
     5a8:	9a a3       	std	Y+34, r25	; 0x22
     5aa:	6b 81       	ldd	r22, Y+3	; 0x03
     5ac:	7c 81       	ldd	r23, Y+4	; 0x04
     5ae:	07 2e       	mov	r0, r23
     5b0:	00 0c       	add	r0, r0
     5b2:	88 0b       	sbc	r24, r24
     5b4:	99 0b       	sbc	r25, r25
     5b6:	23 d5       	rcall	.+2630   	; 0xffe <__floatsisf>
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	43 e8       	ldi	r20, 0x83	; 131
     5be:	52 e4       	ldi	r21, 0x42	; 66
     5c0:	88 d4       	rcall	.+2320   	; 0xed2 <__divsf3>
     5c2:	a7 01       	movw	r20, r14
     5c4:	96 01       	movw	r18, r12
     5c6:	85 d4       	rcall	.+2314   	; 0xed2 <__divsf3>
     5c8:	9b 01       	movw	r18, r22
     5ca:	ac 01       	movw	r20, r24
     5cc:	6b 8d       	ldd	r22, Y+27	; 0x1b
     5ce:	7c 8d       	ldd	r23, Y+28	; 0x1c
			}
			else
			{
				loop_bool=false;
     5d0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     5d2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     5d4:	03 d4       	rcall	.+2054   	; 0xddc <__addsf3>
     5d6:	6b 8f       	std	Y+27, r22	; 0x1b
			}
			
			
					//0.000001066 = 0.0000611 * (3.142(PI) / 180degr) The Arduino sin function is in radians
			angle_pitch += angle_roll * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the roll angle to the pitch angel
     5d8:	7c 8f       	std	Y+28, r23	; 0x1c
     5da:	8d 8f       	std	Y+29, r24	; 0x1d
     5dc:	9e 8f       	std	Y+30, r25	; 0x1e
     5de:	04 c0       	rjmp	.+8      	; 0x5e8 <main+0x1b8>
     5e0:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <loop_bool+0x1>
     5e4:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <loop_bool>
     5e8:	6d 81       	ldd	r22, Y+5	; 0x05
     5ea:	7e 81       	ldd	r23, Y+6	; 0x06
     5ec:	07 2e       	mov	r0, r23
     5ee:	00 0c       	add	r0, r0
     5f0:	88 0b       	sbc	r24, r24
     5f2:	99 0b       	sbc	r25, r25
     5f4:	04 d5       	rcall	.+2568   	; 0xffe <__floatsisf>
     5f6:	2b e7       	ldi	r18, 0x7B	; 123
     5f8:	33 e1       	ldi	r19, 0x13	; 19
     5fa:	4f e8       	ldi	r20, 0x8F	; 143
     5fc:	55 e3       	ldi	r21, 0x35	; 53
     5fe:	dc d5       	rcall	.+3000   	; 0x11b8 <__mulsf3>
     600:	3e d6       	rcall	.+3196   	; 0x127e <sin>
     602:	6b 01       	movw	r12, r22
     604:	7c 01       	movw	r14, r24
     606:	9b 01       	movw	r18, r22
     608:	ac 01       	movw	r20, r24
     60a:	6b 8d       	ldd	r22, Y+27	; 0x1b
     60c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     60e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     610:	9e 8d       	ldd	r25, Y+30	; 0x1e
     612:	d2 d5       	rcall	.+2980   	; 0x11b8 <__mulsf3>
     614:	9b 01       	movw	r18, r22
     616:	ac 01       	movw	r20, r24
     618:	6f 8d       	ldd	r22, Y+31	; 0x1f
			angle_roll -= angle_pitch * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the pitch angle to the roll angel
     61a:	78 a1       	ldd	r23, Y+32	; 0x20
     61c:	89 a1       	ldd	r24, Y+33	; 0x21
     61e:	9a a1       	ldd	r25, Y+34	; 0x22
     620:	dd d3       	rcall	.+1978   	; 0xddc <__addsf3>
     622:	6f 8f       	std	Y+31, r22	; 0x1f
     624:	78 a3       	std	Y+32, r23	; 0x20
     626:	89 a3       	std	Y+33, r24	; 0x21
     628:	9a a3       	std	Y+34, r25	; 0x22
     62a:	9b 01       	movw	r18, r22
     62c:	ac 01       	movw	r20, r24
     62e:	c7 01       	movw	r24, r14
     630:	b6 01       	movw	r22, r12
     632:	c2 d5       	rcall	.+2948   	; 0x11b8 <__mulsf3>
     634:	9b 01       	movw	r18, r22
			
			double temporar_accel_x=accel_x/100;
     636:	ac 01       	movw	r20, r24
     638:	6b 8d       	ldd	r22, Y+27	; 0x1b
     63a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     63c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     63e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     640:	cc d3       	rcall	.+1944   	; 0xdda <__subsf3>
     642:	6b 8f       	std	Y+27, r22	; 0x1b
     644:	7c 8f       	std	Y+28, r23	; 0x1c
     646:	8d 8f       	std	Y+29, r24	; 0x1d
     648:	9e 8f       	std	Y+30, r25	; 0x1e
     64a:	0f 81       	ldd	r16, Y+7	; 0x07
     64c:	18 85       	ldd	r17, Y+8	; 0x08
     64e:	c8 01       	movw	r24, r16
			double temporar_accel_y=accel_y/100;
     650:	64 e6       	ldi	r22, 0x64	; 100
     652:	70 e0       	ldi	r23, 0x00	; 0
     654:	aa d6       	rcall	.+3412   	; 0x13aa <__divmodhi4>
     656:	07 2e       	mov	r0, r23
     658:	00 0c       	add	r0, r0
     65a:	88 0b       	sbc	r24, r24
     65c:	99 0b       	sbc	r25, r25
     65e:	cf d4       	rcall	.+2462   	; 0xffe <__floatsisf>
     660:	2b 01       	movw	r4, r22
     662:	3c 01       	movw	r6, r24
     664:	89 85       	ldd	r24, Y+9	; 0x09
     666:	9a 85       	ldd	r25, Y+10	; 0x0a
			double temporar_accel_z=accel_z/100;
     668:	64 e6       	ldi	r22, 0x64	; 100
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	9e d6       	rcall	.+3388   	; 0x13aa <__divmodhi4>
     66e:	07 2e       	mov	r0, r23
     670:	00 0c       	add	r0, r0
     672:	88 0b       	sbc	r24, r24
     674:	99 0b       	sbc	r25, r25
     676:	c3 d4       	rcall	.+2438   	; 0xffe <__floatsisf>
     678:	4b 01       	movw	r8, r22
     67a:	5c 01       	movw	r10, r24
     67c:	8b 85       	ldd	r24, Y+11	; 0x0b
     67e:	9c 85       	ldd	r25, Y+12	; 0x0c
			
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
     680:	64 e6       	ldi	r22, 0x64	; 100
     682:	70 e0       	ldi	r23, 0x00	; 0
     684:	92 d6       	rcall	.+3364   	; 0x13aa <__divmodhi4>
     686:	07 2e       	mov	r0, r23
     688:	00 0c       	add	r0, r0
     68a:	88 0b       	sbc	r24, r24
     68c:	99 0b       	sbc	r25, r25
     68e:	b7 d4       	rcall	.+2414   	; 0xffe <__floatsisf>
     690:	6b 01       	movw	r12, r22
     692:	7c 01       	movw	r14, r24
     694:	a3 01       	movw	r20, r6
     696:	92 01       	movw	r18, r4
     698:	c3 01       	movw	r24, r6
     69a:	b2 01       	movw	r22, r4
     69c:	8d d5       	rcall	.+2842   	; 0x11b8 <__mulsf3>
     69e:	6b a3       	std	Y+35, r22	; 0x23
     6a0:	7c a3       	std	Y+36, r23	; 0x24
     6a2:	8d a3       	std	Y+37, r24	; 0x25
     6a4:	9e a3       	std	Y+38, r25	; 0x26
     6a6:	a5 01       	movw	r20, r10
     6a8:	94 01       	movw	r18, r8
     6aa:	c5 01       	movw	r24, r10
     6ac:	b4 01       	movw	r22, r8
     6ae:	84 d5       	rcall	.+2824   	; 0x11b8 <__mulsf3>
     6b0:	9b 01       	movw	r18, r22
     6b2:	ac 01       	movw	r20, r24
     6b4:	6b a1       	ldd	r22, Y+35	; 0x23
     6b6:	7c a1       	ldd	r23, Y+36	; 0x24
     6b8:	8d a1       	ldd	r24, Y+37	; 0x25
     6ba:	9e a1       	ldd	r25, Y+38	; 0x26
     6bc:	8f d3       	rcall	.+1822   	; 0xddc <__addsf3>
     6be:	6b a3       	std	Y+35, r22	; 0x23
     6c0:	7c a3       	std	Y+36, r23	; 0x24
     6c2:	8d a3       	std	Y+37, r24	; 0x25
     6c4:	9e a3       	std	Y+38, r25	; 0x26
     6c6:	a3 01       	movw	r20, r6
     6c8:	92 01       	movw	r18, r4
     6ca:	c3 01       	movw	r24, r6
     6cc:	b2 01       	movw	r22, r4
     6ce:	74 d5       	rcall	.+2792   	; 0x11b8 <__mulsf3>
     6d0:	2b 01       	movw	r4, r22
     6d2:	3c 01       	movw	r6, r24
     6d4:	a5 01       	movw	r20, r10
     6d6:	94 01       	movw	r18, r8
     6d8:	c5 01       	movw	r24, r10
     6da:	b4 01       	movw	r22, r8
     6dc:	6d d5       	rcall	.+2778   	; 0x11b8 <__mulsf3>
     6de:	9b 01       	movw	r18, r22
     6e0:	ac 01       	movw	r20, r24
     6e2:	c3 01       	movw	r24, r6
     6e4:	b2 01       	movw	r22, r4
     6e6:	7a d3       	rcall	.+1780   	; 0xddc <__addsf3>
					//57.296 = 1 / (3.142 / 180) The Arduino asin function is in radians
			acc_total_vector*=100;
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     6e8:	4b 01       	movw	r8, r22
     6ea:	5c 01       	movw	r10, r24
     6ec:	a7 01       	movw	r20, r14
     6ee:	96 01       	movw	r18, r12
     6f0:	c7 01       	movw	r24, r14
     6f2:	b6 01       	movw	r22, r12
     6f4:	61 d5       	rcall	.+2754   	; 0x11b8 <__mulsf3>
     6f6:	9b 01       	movw	r18, r22
     6f8:	ac 01       	movw	r20, r24
     6fa:	c5 01       	movw	r24, r10
     6fc:	b4 01       	movw	r22, r8
     6fe:	6e d3       	rcall	.+1756   	; 0xddc <__addsf3>
     700:	c8 d5       	rcall	.+2960   	; 0x1292 <sqrt>
     702:	6b 01       	movw	r12, r22
     704:	7c 01       	movw	r14, r24
     706:	b8 01       	movw	r22, r16
     708:	11 0f       	add	r17, r17
     70a:	88 0b       	sbc	r24, r24
     70c:	99 0b       	sbc	r25, r25
     70e:	77 d4       	rcall	.+2286   	; 0xffe <__floatsisf>
     710:	4b 01       	movw	r8, r22
     712:	5c 01       	movw	r10, r24
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	48 ec       	ldi	r20, 0xC8	; 200
     71a:	52 e4       	ldi	r21, 0x42	; 66
			
			
			
			uint16_t reg=angle_roll_acc;
     71c:	c7 01       	movw	r24, r14
     71e:	b6 01       	movw	r22, r12
			printf(" ");
     720:	4b d5       	rcall	.+2710   	; 0x11b8 <__mulsf3>
     722:	9b 01       	movw	r18, r22
     724:	ac 01       	movw	r20, r24
			printf("accelY= ");
     726:	c5 01       	movw	r24, r10
     728:	b4 01       	movw	r22, r8
     72a:	d3 d3       	rcall	.+1958   	; 0xed2 <__divsf3>
     72c:	bb d3       	rcall	.+1910   	; 0xea4 <asin>
			print16(&reg);
     72e:	2b e1       	ldi	r18, 0x1B	; 27
     730:	3f e2       	ldi	r19, 0x2F	; 47
			reg=angle_roll;
     732:	45 e6       	ldi	r20, 0x65	; 101
     734:	52 ec       	ldi	r21, 0xC2	; 194
     736:	40 d5       	rcall	.+2688   	; 0x11b8 <__mulsf3>
     738:	6b 01       	movw	r12, r22
     73a:	7c 01       	movw	r14, r24
     73c:	32 d4       	rcall	.+2148   	; 0xfa2 <__fixunssfsi>
     73e:	7a 8f       	std	Y+26, r23	; 0x1a
     740:	69 8f       	std	Y+25, r22	; 0x19
			printf(" ");
     742:	80 e2       	ldi	r24, 0x20	; 32
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	16 d7       	rcall	.+3628   	; 0x1574 <putchar>
     748:	82 e1       	ldi	r24, 0x12	; 18
			printf("gyroy_angle= ");
     74a:	92 e0       	ldi	r25, 0x02	; 2
     74c:	9f 93       	push	r25
     74e:	8f 93       	push	r24
     750:	fe d6       	rcall	.+3580   	; 0x154e <printf>
     752:	ce 01       	movw	r24, r28
     754:	49 96       	adiw	r24, 0x19	; 25
			print16(&reg);
     756:	45 de       	rcall	.-886    	; 0x3e2 <print16>
     758:	6b 8d       	ldd	r22, Y+27	; 0x1b
     75a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     75c:	8d 8d       	ldd	r24, Y+29	; 0x1d
			
			double final_angle=angle_roll*0.996+angle_roll_acc*0.004;
			reg=final_angle;
     75e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     760:	20 d4       	rcall	.+2112   	; 0xfa2 <__fixunssfsi>
     762:	7a 8f       	std	Y+26, r23	; 0x1a
     764:	69 8f       	std	Y+25, r22	; 0x19
     766:	80 e2       	ldi	r24, 0x20	; 32
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	04 d7       	rcall	.+3592   	; 0x1574 <putchar>
     76c:	8b e1       	ldi	r24, 0x1B	; 27
     76e:	92 e0       	ldi	r25, 0x02	; 2
     770:	9f 93       	push	r25
     772:	8f 93       	push	r24
     774:	ec d6       	rcall	.+3544   	; 0x154e <printf>
     776:	ce 01       	movw	r24, r28
     778:	49 96       	adiw	r24, 0x19	; 25
     77a:	33 de       	rcall	.-922    	; 0x3e2 <print16>
     77c:	2b ed       	ldi	r18, 0xDB	; 219
     77e:	39 ef       	ldi	r19, 0xF9	; 249
     780:	4e e7       	ldi	r20, 0x7E	; 126
     782:	5f e3       	ldi	r21, 0x3F	; 63
     784:	6b 8d       	ldd	r22, Y+27	; 0x1b
     786:	7c 8d       	ldd	r23, Y+28	; 0x1c
     788:	8d 8d       	ldd	r24, Y+29	; 0x1d
     78a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     78c:	15 d5       	rcall	.+2602   	; 0x11b8 <__mulsf3>
     78e:	4b 01       	movw	r8, r22
     790:	5c 01       	movw	r10, r24
     792:	2f e6       	ldi	r18, 0x6F	; 111
     794:	32 e1       	ldi	r19, 0x12	; 18
     796:	43 e8       	ldi	r20, 0x83	; 131
     798:	5b e3       	ldi	r21, 0x3B	; 59
			printf(" ");
     79a:	c7 01       	movw	r24, r14
     79c:	b6 01       	movw	r22, r12
     79e:	0c d5       	rcall	.+2584   	; 0x11b8 <__mulsf3>
     7a0:	9b 01       	movw	r18, r22
			printf("final_angleY= ");
     7a2:	ac 01       	movw	r20, r24
     7a4:	c5 01       	movw	r24, r10
     7a6:	b4 01       	movw	r22, r8
     7a8:	19 d3       	rcall	.+1586   	; 0xddc <__addsf3>
     7aa:	fb d3       	rcall	.+2038   	; 0xfa2 <__fixunssfsi>
     7ac:	7a 8f       	std	Y+26, r23	; 0x1a
			print16(&reg);
     7ae:	69 8f       	std	Y+25, r22	; 0x19
     7b0:	80 e2       	ldi	r24, 0x20	; 32
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	df d6       	rcall	.+3518   	; 0x1574 <putchar>
			//reg=micros()-timer1;
			//reg=dt;
			//printf(" ");
			//printf("hz= ");
			//print16(&reg);
			printf("\n");
     7b6:	89 e2       	ldi	r24, 0x29	; 41
     7b8:	92 e0       	ldi	r25, 0x02	; 2
     7ba:	9f 93       	push	r25
     7bc:	8f 93       	push	r24
			printf("\n");
			/*--------end------*/			
		#else
			
			double dt = (double)((micros() - timer1));
			timer1=micros();
     7be:	c7 d6       	rcall	.+3470   	; 0x154e <printf>
     7c0:	ce 01       	movw	r24, r28
     7c2:	49 96       	adiw	r24, 0x19	; 25
     7c4:	0e de       	rcall	.-996    	; 0x3e2 <print16>
			//	 set_gyro_angles = true;                                            //Set the IMU started flag
			//}
			
			#endif //PRINT_RAW_DATA			
		#endif //GYRO
	}
     7c6:	8a e0       	ldi	r24, 0x0A	; 10
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	d4 d6       	rcall	.+3496   	; 0x1574 <putchar>
     7cc:	8f a0       	ldd	r8, Y+39	; 0x27
     7ce:	98 a4       	ldd	r9, Y+40	; 0x28
     7d0:	a9 a4       	ldd	r10, Y+41	; 0x29
     7d2:	ba a4       	ldd	r11, Y+42	; 0x2a
     7d4:	0f 90       	pop	r0
     7d6:	0f 90       	pop	r0
     7d8:	0f 90       	pop	r0
     7da:	0f 90       	pop	r0
     7dc:	0f 90       	pop	r0
     7de:	0f 90       	pop	r0
     7e0:	83 ce       	rjmp	.-762    	; 0x4e8 <main+0xb8>

000007e2 <print16ln>:
}

void print16ln(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     7e2:	0f 93       	push	r16
     7e4:	1f 93       	push	r17
     7e6:	cf 93       	push	r28
     7e8:	df 93       	push	r29
     7ea:	cd b7       	in	r28, 0x3d	; 61
     7ec:	de b7       	in	r29, 0x3e	; 62
     7ee:	2a 97       	sbiw	r28, 0x0a	; 10
     7f0:	0f b6       	in	r0, 0x3f	; 63
     7f2:	f8 94       	cli
     7f4:	de bf       	out	0x3e, r29	; 62
     7f6:	0f be       	out	0x3f, r0	; 63
     7f8:	cd bf       	out	0x3d, r28	; 61
     7fa:	4a e0       	ldi	r20, 0x0A	; 10
     7fc:	8e 01       	movw	r16, r28
     7fe:	0f 5f       	subi	r16, 0xFF	; 255
     800:	1f 4f       	sbci	r17, 0xFF	; 255
     802:	b8 01       	movw	r22, r16
     804:	fc 01       	movw	r30, r24
     806:	80 81       	ld	r24, Z
     808:	91 81       	ldd	r25, Z+1	; 0x01
     80a:	34 d6       	rcall	.+3176   	; 0x1474 <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     80c:	1f 93       	push	r17
     80e:	0f 93       	push	r16
	printf("\n");
     810:	9e d6       	rcall	.+3388   	; 0x154e <printf>
     812:	8a e0       	ldi	r24, 0x0A	; 10
     814:	90 e0       	ldi	r25, 0x00	; 0
}
     816:	ae d6       	rcall	.+3420   	; 0x1574 <putchar>
     818:	0f 90       	pop	r0
     81a:	0f 90       	pop	r0
     81c:	2a 96       	adiw	r28, 0x0a	; 10
     81e:	0f b6       	in	r0, 0x3f	; 63
     820:	f8 94       	cli
     822:	de bf       	out	0x3e, r29	; 62
     824:	0f be       	out	0x3f, r0	; 63
     826:	cd bf       	out	0x3d, r28	; 61
     828:	df 91       	pop	r29
     82a:	cf 91       	pop	r28
     82c:	1f 91       	pop	r17
     82e:	0f 91       	pop	r16
     830:	08 95       	ret

00000832 <mpu6050_readByte>:
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     832:	cf 93       	push	r28
     834:	c8 2f       	mov	r28, r24
     836:	80 ed       	ldi	r24, 0xD0	; 208
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	19 d2       	rcall	.+1074   	; 0xc6e <i2c_start>
     83c:	8c 2f       	mov	r24, r28
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	6c d2       	rcall	.+1240   	; 0xd1a <i2c_write>
     842:	5b d2       	rcall	.+1206   	; 0xcfa <i2c_stop>
     844:	81 ed       	ldi	r24, 0xD1	; 209
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	12 d2       	rcall	.+1060   	; 0xc6e <i2c_start>
     84a:	a2 d2       	rcall	.+1348   	; 0xd90 <i2c_readNak>
     84c:	c8 2f       	mov	r28, r24
     84e:	55 d2       	rcall	.+1194   	; 0xcfa <i2c_stop>
     850:	8c 2f       	mov	r24, r28
     852:	cf 91       	pop	r28
     854:	08 95       	ret

00000856 <mpu6050_read_gyroX>:
     856:	cf 93       	push	r28
     858:	df 93       	push	r29
     85a:	83 e4       	ldi	r24, 0x43	; 67
     85c:	ea df       	rcall	.-44     	; 0x832 <mpu6050_readByte>
     85e:	c8 2f       	mov	r28, r24
     860:	d0 e0       	ldi	r29, 0x00	; 0
     862:	dc 2f       	mov	r29, r28
     864:	cc 27       	eor	r28, r28
     866:	84 e4       	ldi	r24, 0x44	; 68
     868:	e4 df       	rcall	.-56     	; 0x832 <mpu6050_readByte>
     86a:	9e 01       	movw	r18, r28
     86c:	28 2b       	or	r18, r24
     86e:	c9 01       	movw	r24, r18
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	08 95       	ret

00000876 <mpu6050_read_gyroY>:
     876:	cf 93       	push	r28
     878:	df 93       	push	r29
     87a:	85 e4       	ldi	r24, 0x45	; 69
     87c:	da df       	rcall	.-76     	; 0x832 <mpu6050_readByte>
     87e:	c8 2f       	mov	r28, r24
     880:	d0 e0       	ldi	r29, 0x00	; 0
     882:	dc 2f       	mov	r29, r28
     884:	cc 27       	eor	r28, r28
     886:	86 e4       	ldi	r24, 0x46	; 70
     888:	d4 df       	rcall	.-88     	; 0x832 <mpu6050_readByte>
     88a:	9e 01       	movw	r18, r28
     88c:	28 2b       	or	r18, r24
     88e:	c9 01       	movw	r24, r18
     890:	df 91       	pop	r29
     892:	cf 91       	pop	r28
     894:	08 95       	ret

00000896 <mpu6050_read_gyroZ>:
     896:	cf 93       	push	r28
     898:	df 93       	push	r29
     89a:	87 e4       	ldi	r24, 0x47	; 71
     89c:	ca df       	rcall	.-108    	; 0x832 <mpu6050_readByte>
     89e:	c8 2f       	mov	r28, r24
     8a0:	d0 e0       	ldi	r29, 0x00	; 0
     8a2:	dc 2f       	mov	r29, r28
     8a4:	cc 27       	eor	r28, r28
     8a6:	88 e4       	ldi	r24, 0x48	; 72
     8a8:	c4 df       	rcall	.-120    	; 0x832 <mpu6050_readByte>
     8aa:	9e 01       	movw	r18, r28
     8ac:	28 2b       	or	r18, r24
     8ae:	c9 01       	movw	r24, r18
     8b0:	df 91       	pop	r29
     8b2:	cf 91       	pop	r28
     8b4:	08 95       	ret

000008b6 <mpu6050_calibrate_gyro>:
     8b6:	cf 92       	push	r12
     8b8:	df 92       	push	r13
     8ba:	ef 92       	push	r14
     8bc:	ff 92       	push	r15
     8be:	0f 93       	push	r16
     8c0:	1f 93       	push	r17
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	6c 01       	movw	r12, r24
     8c8:	7b 01       	movw	r14, r22
     8ca:	8a 01       	movw	r16, r20
     8cc:	88 e1       	ldi	r24, 0x18	; 24
     8ce:	94 e0       	ldi	r25, 0x04	; 4
     8d0:	56 d6       	rcall	.+3244   	; 0x157e <puts>
     8d2:	c8 ec       	ldi	r28, 0xC8	; 200
     8d4:	d0 e0       	ldi	r29, 0x00	; 0
     8d6:	bf df       	rcall	.-130    	; 0x856 <mpu6050_read_gyroX>
     8d8:	f6 01       	movw	r30, r12
     8da:	40 81       	ld	r20, Z
     8dc:	51 81       	ldd	r21, Z+1	; 0x01
     8de:	62 81       	ldd	r22, Z+2	; 0x02
     8e0:	73 81       	ldd	r23, Z+3	; 0x03
     8e2:	48 0f       	add	r20, r24
     8e4:	59 1f       	adc	r21, r25
     8e6:	61 1d       	adc	r22, r1
     8e8:	71 1d       	adc	r23, r1
     8ea:	40 83       	st	Z, r20
     8ec:	51 83       	std	Z+1, r21	; 0x01
     8ee:	62 83       	std	Z+2, r22	; 0x02
     8f0:	73 83       	std	Z+3, r23	; 0x03
     8f2:	c1 df       	rcall	.-126    	; 0x876 <mpu6050_read_gyroY>
     8f4:	f7 01       	movw	r30, r14
     8f6:	40 81       	ld	r20, Z
     8f8:	51 81       	ldd	r21, Z+1	; 0x01
     8fa:	62 81       	ldd	r22, Z+2	; 0x02
     8fc:	73 81       	ldd	r23, Z+3	; 0x03
     8fe:	48 0f       	add	r20, r24
     900:	59 1f       	adc	r21, r25
     902:	61 1d       	adc	r22, r1
     904:	71 1d       	adc	r23, r1
     906:	40 83       	st	Z, r20
     908:	51 83       	std	Z+1, r21	; 0x01
     90a:	62 83       	std	Z+2, r22	; 0x02
     90c:	73 83       	std	Z+3, r23	; 0x03
     90e:	c3 df       	rcall	.-122    	; 0x896 <mpu6050_read_gyroZ>
     910:	f8 01       	movw	r30, r16
     912:	40 81       	ld	r20, Z
     914:	51 81       	ldd	r21, Z+1	; 0x01
     916:	62 81       	ldd	r22, Z+2	; 0x02
     918:	73 81       	ldd	r23, Z+3	; 0x03
     91a:	48 0f       	add	r20, r24
     91c:	59 1f       	adc	r21, r25
     91e:	61 1d       	adc	r22, r1
     920:	71 1d       	adc	r23, r1
     922:	40 83       	st	Z, r20
     924:	51 83       	std	Z+1, r21	; 0x01
     926:	62 83       	std	Z+2, r22	; 0x02
     928:	73 83       	std	Z+3, r23	; 0x03
     92a:	8f e3       	ldi	r24, 0x3F	; 63
     92c:	9f e1       	ldi	r25, 0x1F	; 31
     92e:	01 97       	sbiw	r24, 0x01	; 1
     930:	f1 f7       	brne	.-4      	; 0x92e <mpu6050_calibrate_gyro+0x78>
     932:	00 c0       	rjmp	.+0      	; 0x934 <mpu6050_calibrate_gyro+0x7e>
     934:	00 00       	nop
     936:	21 97       	sbiw	r28, 0x01	; 1
     938:	71 f6       	brne	.-100    	; 0x8d6 <mpu6050_calibrate_gyro+0x20>
     93a:	f6 01       	movw	r30, r12
     93c:	60 81       	ld	r22, Z
     93e:	71 81       	ldd	r23, Z+1	; 0x01
     940:	82 81       	ldd	r24, Z+2	; 0x02
     942:	93 81       	ldd	r25, Z+3	; 0x03
     944:	99 23       	and	r25, r25
     946:	ac f4       	brge	.+42     	; 0x972 <mpu6050_calibrate_gyro+0xbc>
     948:	9b 01       	movw	r18, r22
     94a:	77 23       	and	r23, r23
     94c:	24 f4       	brge	.+8      	; 0x956 <mpu6050_calibrate_gyro+0xa0>
     94e:	22 27       	eor	r18, r18
     950:	33 27       	eor	r19, r19
     952:	26 1b       	sub	r18, r22
     954:	37 0b       	sbc	r19, r23
     956:	c9 01       	movw	r24, r18
     958:	68 ec       	ldi	r22, 0xC8	; 200
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	26 d5       	rcall	.+2636   	; 0x13aa <__divmodhi4>
     95e:	cb 01       	movw	r24, r22
     960:	77 0f       	add	r23, r23
     962:	aa 0b       	sbc	r26, r26
     964:	bb 0b       	sbc	r27, r27
     966:	f6 01       	movw	r30, r12
     968:	80 83       	st	Z, r24
     96a:	91 83       	std	Z+1, r25	; 0x01
     96c:	a2 83       	std	Z+2, r26	; 0x02
     96e:	b3 83       	std	Z+3, r27	; 0x03
     970:	0a c0       	rjmp	.+20     	; 0x986 <mpu6050_calibrate_gyro+0xd0>
     972:	28 ec       	ldi	r18, 0xC8	; 200
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	40 e0       	ldi	r20, 0x00	; 0
     978:	50 e0       	ldi	r21, 0x00	; 0
     97a:	2a d5       	rcall	.+2644   	; 0x13d0 <__divmodsi4>
     97c:	f6 01       	movw	r30, r12
     97e:	20 83       	st	Z, r18
     980:	31 83       	std	Z+1, r19	; 0x01
     982:	42 83       	std	Z+2, r20	; 0x02
     984:	53 83       	std	Z+3, r21	; 0x03
     986:	f7 01       	movw	r30, r14
     988:	60 81       	ld	r22, Z
     98a:	71 81       	ldd	r23, Z+1	; 0x01
     98c:	82 81       	ldd	r24, Z+2	; 0x02
     98e:	93 81       	ldd	r25, Z+3	; 0x03
     990:	99 23       	and	r25, r25
     992:	ac f4       	brge	.+42     	; 0x9be <mpu6050_calibrate_gyro+0x108>
     994:	9b 01       	movw	r18, r22
     996:	77 23       	and	r23, r23
     998:	24 f4       	brge	.+8      	; 0x9a2 <mpu6050_calibrate_gyro+0xec>
     99a:	22 27       	eor	r18, r18
     99c:	33 27       	eor	r19, r19
     99e:	26 1b       	sub	r18, r22
     9a0:	37 0b       	sbc	r19, r23
     9a2:	c9 01       	movw	r24, r18
     9a4:	68 ec       	ldi	r22, 0xC8	; 200
     9a6:	70 e0       	ldi	r23, 0x00	; 0
     9a8:	00 d5       	rcall	.+2560   	; 0x13aa <__divmodhi4>
     9aa:	cb 01       	movw	r24, r22
     9ac:	77 0f       	add	r23, r23
     9ae:	aa 0b       	sbc	r26, r26
     9b0:	bb 0b       	sbc	r27, r27
     9b2:	f7 01       	movw	r30, r14
     9b4:	80 83       	st	Z, r24
     9b6:	91 83       	std	Z+1, r25	; 0x01
     9b8:	a2 83       	std	Z+2, r26	; 0x02
     9ba:	b3 83       	std	Z+3, r27	; 0x03
     9bc:	0a c0       	rjmp	.+20     	; 0x9d2 <mpu6050_calibrate_gyro+0x11c>
     9be:	28 ec       	ldi	r18, 0xC8	; 200
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	04 d5       	rcall	.+2568   	; 0x13d0 <__divmodsi4>
     9c8:	f7 01       	movw	r30, r14
     9ca:	20 83       	st	Z, r18
     9cc:	31 83       	std	Z+1, r19	; 0x01
     9ce:	42 83       	std	Z+2, r20	; 0x02
     9d0:	53 83       	std	Z+3, r21	; 0x03
     9d2:	f8 01       	movw	r30, r16
     9d4:	60 81       	ld	r22, Z
     9d6:	71 81       	ldd	r23, Z+1	; 0x01
     9d8:	82 81       	ldd	r24, Z+2	; 0x02
     9da:	93 81       	ldd	r25, Z+3	; 0x03
     9dc:	99 23       	and	r25, r25
     9de:	ac f4       	brge	.+42     	; 0xa0a <mpu6050_calibrate_gyro+0x154>
     9e0:	9b 01       	movw	r18, r22
     9e2:	77 23       	and	r23, r23
     9e4:	24 f4       	brge	.+8      	; 0x9ee <mpu6050_calibrate_gyro+0x138>
     9e6:	22 27       	eor	r18, r18
     9e8:	33 27       	eor	r19, r19
     9ea:	26 1b       	sub	r18, r22
     9ec:	37 0b       	sbc	r19, r23
     9ee:	c9 01       	movw	r24, r18
     9f0:	68 ec       	ldi	r22, 0xC8	; 200
     9f2:	70 e0       	ldi	r23, 0x00	; 0
     9f4:	da d4       	rcall	.+2484   	; 0x13aa <__divmodhi4>
     9f6:	cb 01       	movw	r24, r22
     9f8:	77 0f       	add	r23, r23
     9fa:	aa 0b       	sbc	r26, r26
     9fc:	bb 0b       	sbc	r27, r27
     9fe:	f8 01       	movw	r30, r16
     a00:	80 83       	st	Z, r24
     a02:	91 83       	std	Z+1, r25	; 0x01
     a04:	a2 83       	std	Z+2, r26	; 0x02
     a06:	b3 83       	std	Z+3, r27	; 0x03
     a08:	0a c0       	rjmp	.+20     	; 0xa1e <mpu6050_calibrate_gyro+0x168>
     a0a:	28 ec       	ldi	r18, 0xC8	; 200
     a0c:	30 e0       	ldi	r19, 0x00	; 0
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	50 e0       	ldi	r21, 0x00	; 0
     a12:	de d4       	rcall	.+2492   	; 0x13d0 <__divmodsi4>
     a14:	f8 01       	movw	r30, r16
     a16:	20 83       	st	Z, r18
     a18:	31 83       	std	Z+1, r19	; 0x01
     a1a:	42 83       	std	Z+2, r20	; 0x02
     a1c:	53 83       	std	Z+3, r21	; 0x03
     a1e:	8e e2       	ldi	r24, 0x2E	; 46
     a20:	94 e0       	ldi	r25, 0x04	; 4
     a22:	9f 93       	push	r25
     a24:	8f 93       	push	r24
     a26:	93 d5       	rcall	.+2854   	; 0x154e <printf>
     a28:	c6 01       	movw	r24, r12
     a2a:	db dc       	rcall	.-1610   	; 0x3e2 <print16>
     a2c:	cf e3       	ldi	r28, 0x3F	; 63
     a2e:	d4 e0       	ldi	r29, 0x04	; 4
     a30:	df 93       	push	r29
     a32:	cf 93       	push	r28
     a34:	8c d5       	rcall	.+2840   	; 0x154e <printf>
     a36:	c7 01       	movw	r24, r14
     a38:	d4 dc       	rcall	.-1624   	; 0x3e2 <print16>
     a3a:	df 93       	push	r29
     a3c:	cf 93       	push	r28
     a3e:	87 d5       	rcall	.+2830   	; 0x154e <printf>
     a40:	c8 01       	movw	r24, r16
     a42:	cf de       	rcall	.-610    	; 0x7e2 <print16ln>
     a44:	ef ef       	ldi	r30, 0xFF	; 255
     a46:	f3 ed       	ldi	r31, 0xD3	; 211
     a48:	20 e3       	ldi	r18, 0x30	; 48
     a4a:	e1 50       	subi	r30, 0x01	; 1
     a4c:	f0 40       	sbci	r31, 0x00	; 0
     a4e:	20 40       	sbci	r18, 0x00	; 0
     a50:	e1 f7       	brne	.-8      	; 0xa4a <mpu6050_calibrate_gyro+0x194>
     a52:	00 c0       	rjmp	.+0      	; 0xa54 <mpu6050_calibrate_gyro+0x19e>
     a54:	00 00       	nop
     a56:	0f 90       	pop	r0
     a58:	0f 90       	pop	r0
     a5a:	0f 90       	pop	r0
     a5c:	0f 90       	pop	r0
     a5e:	0f 90       	pop	r0
     a60:	0f 90       	pop	r0
     a62:	df 91       	pop	r29
     a64:	cf 91       	pop	r28
     a66:	1f 91       	pop	r17
     a68:	0f 91       	pop	r16
     a6a:	ff 90       	pop	r15
     a6c:	ef 90       	pop	r14
     a6e:	df 90       	pop	r13
     a70:	cf 90       	pop	r12
     a72:	08 95       	ret

00000a74 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     a74:	cf 93       	push	r28
     a76:	df 93       	push	r29
     a78:	d8 2f       	mov	r29, r24
     a7a:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     a7c:	80 ed       	ldi	r24, 0xD0	; 208
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	f6 d0       	rcall	.+492    	; 0xc6e <i2c_start>
	i2c_write(wereToWrite);
     a82:	8d 2f       	mov	r24, r29
     a84:	90 e0       	ldi	r25, 0x00	; 0
	i2c_write(byteToWrite);
     a86:	49 d1       	rcall	.+658    	; 0xd1a <i2c_write>
     a88:	8c 2f       	mov	r24, r28
	i2c_stop();
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	46 d1       	rcall	.+652    	; 0xd1a <i2c_write>
}
     a8e:	35 d1       	rcall	.+618    	; 0xcfa <i2c_stop>
     a90:	df 91       	pop	r29
     a92:	cf 91       	pop	r28
     a94:	08 95       	ret

00000a96 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     a96:	af 92       	push	r10
     a98:	bf 92       	push	r11
     a9a:	cf 92       	push	r12
     a9c:	df 92       	push	r13
     a9e:	ff 92       	push	r15
     aa0:	0f 93       	push	r16
     aa2:	1f 93       	push	r17
     aa4:	cf 93       	push	r28
     aa6:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     aa8:	66 23       	and	r22, r22
     aaa:	a1 f1       	breq	.+104    	; 0xb14 <mpu6050_readBytes+0x7e>
     aac:	c5 2f       	mov	r28, r21
     aae:	d4 2f       	mov	r29, r20
     ab0:	f6 2e       	mov	r15, r22
     ab2:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     ab4:	80 ed       	ldi	r24, 0xD0	; 208
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	da d0       	rcall	.+436    	; 0xc6e <i2c_start>
		i2c_write(regAddr);
     aba:	81 2f       	mov	r24, r17
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	2d d1       	rcall	.+602    	; 0xd1a <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ac0:	85 e3       	ldi	r24, 0x35	; 53
     ac2:	8a 95       	dec	r24
     ac4:	f1 f7       	brne	.-4      	; 0xac2 <mpu6050_readBytes+0x2c>
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     ac6:	00 00       	nop
     ac8:	81 ed       	ldi	r24, 0xD1	; 209
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	d0 d0       	rcall	.+416    	; 0xc6e <i2c_start>
     ace:	0d 2f       	mov	r16, r29
     ad0:	1c 2f       	mov	r17, r28
     ad2:	cc 24       	eor	r12, r12
     ad4:	ca 94       	dec	r12
     ad6:	cf 0c       	add	r12, r15
     ad8:	d1 2c       	mov	r13, r1
     ada:	ef ef       	ldi	r30, 0xFF	; 255
     adc:	ce 1a       	sub	r12, r30
     ade:	de 0a       	sbc	r13, r30
     ae0:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     ae2:	d0 e0       	ldi	r29, 0x00	; 0
     ae4:	af 2c       	mov	r10, r15
     ae6:	b1 2c       	mov	r11, r1
     ae8:	f1 e0       	ldi	r31, 0x01	; 1
     aea:	af 1a       	sub	r10, r31
     aec:	b1 08       	sbc	r11, r1
     aee:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     af0:	bd 06       	cpc	r11, r29
     af2:	21 f4       	brne	.+8      	; 0xafc <mpu6050_readBytes+0x66>
     af4:	4d d1       	rcall	.+666    	; 0xd90 <i2c_readNak>
     af6:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     af8:	80 83       	st	Z, r24
     afa:	03 c0       	rjmp	.+6      	; 0xb02 <mpu6050_readBytes+0x6c>
     afc:	2f d1       	rcall	.+606    	; 0xd5c <i2c_readAck>
     afe:	f8 01       	movw	r30, r16
     b00:	80 83       	st	Z, r24
     b02:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     b04:	0f 5f       	subi	r16, 0xFF	; 255
     b06:	1f 4f       	sbci	r17, 0xFF	; 255
     b08:	cc 15       	cp	r28, r12
     b0a:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     b0c:	81 f7       	brne	.-32     	; 0xaee <mpu6050_readBytes+0x58>
     b0e:	cf 2d       	mov	r28, r15
     b10:	f4 d0       	rcall	.+488    	; 0xcfa <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     b12:	01 c0       	rjmp	.+2      	; 0xb16 <mpu6050_readBytes+0x80>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     b14:	c0 e0       	ldi	r28, 0x00	; 0
     b16:	8c 2f       	mov	r24, r28
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	1f 91       	pop	r17
     b1e:	0f 91       	pop	r16
     b20:	ff 90       	pop	r15
     b22:	df 90       	pop	r13
     b24:	cf 90       	pop	r12
     b26:	bf 90       	pop	r11
     b28:	af 90       	pop	r10
     b2a:	08 95       	ret

00000b2c <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     b2c:	6f 92       	push	r6
     b2e:	7f 92       	push	r7
     b30:	8f 92       	push	r8
     b32:	9f 92       	push	r9
     b34:	af 92       	push	r10
     b36:	bf 92       	push	r11
     b38:	cf 92       	push	r12
     b3a:	df 92       	push	r13
     b3c:	ef 92       	push	r14
     b3e:	ff 92       	push	r15
     b40:	0f 93       	push	r16
     b42:	1f 93       	push	r17
     b44:	cf 93       	push	r28
     b46:	df 93       	push	r29
     b48:	cd b7       	in	r28, 0x3d	; 61
     b4a:	de b7       	in	r29, 0x3e	; 62
     b4c:	2e 97       	sbiw	r28, 0x0e	; 14
     b4e:	0f b6       	in	r0, 0x3f	; 63
     b50:	f8 94       	cli
     b52:	de bf       	out	0x3e, r29	; 62
     b54:	0f be       	out	0x3f, r0	; 63
     b56:	cd bf       	out	0x3d, r28	; 61
     b58:	4c 01       	movw	r8, r24
     b5a:	5b 01       	movw	r10, r22
     b5c:	6a 01       	movw	r12, r20
     b5e:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     b60:	ae 01       	movw	r20, r28
     b62:	4f 5f       	subi	r20, 0xFF	; 255
     b64:	5f 4f       	sbci	r21, 0xFF	; 255
     b66:	6e e0       	ldi	r22, 0x0E	; 14
     b68:	8b e3       	ldi	r24, 0x3B	; 59
     b6a:	95 df       	rcall	.-214    	; 0xa96 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     b6c:	89 81       	ldd	r24, Y+1	; 0x01
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	98 2f       	mov	r25, r24
     b72:	88 27       	eor	r24, r24
     b74:	2a 81       	ldd	r18, Y+2	; 0x02
     b76:	82 2b       	or	r24, r18
     b78:	f4 01       	movw	r30, r8
     b7a:	91 83       	std	Z+1, r25	; 0x01
     b7c:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     b7e:	8b 81       	ldd	r24, Y+3	; 0x03
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	98 2f       	mov	r25, r24
     b84:	88 27       	eor	r24, r24
     b86:	2c 81       	ldd	r18, Y+4	; 0x04
     b88:	82 2b       	or	r24, r18
     b8a:	f5 01       	movw	r30, r10
     b8c:	91 83       	std	Z+1, r25	; 0x01
     b8e:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     b90:	8d 81       	ldd	r24, Y+5	; 0x05
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	98 2f       	mov	r25, r24
     b96:	88 27       	eor	r24, r24
     b98:	2e 81       	ldd	r18, Y+6	; 0x06
     b9a:	82 2b       	or	r24, r18
     b9c:	f6 01       	movw	r30, r12
     b9e:	91 83       	std	Z+1, r25	; 0x01
     ba0:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     ba2:	89 85       	ldd	r24, Y+9	; 0x09
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	98 2f       	mov	r25, r24
     ba8:	88 27       	eor	r24, r24
     baa:	2a 85       	ldd	r18, Y+10	; 0x0a
     bac:	82 2b       	or	r24, r18
     bae:	f3 01       	movw	r30, r6
     bb0:	91 83       	std	Z+1, r25	; 0x01
     bb2:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     bb4:	8b 85       	ldd	r24, Y+11	; 0x0b
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	98 2f       	mov	r25, r24
     bba:	88 27       	eor	r24, r24
     bbc:	2c 85       	ldd	r18, Y+12	; 0x0c
     bbe:	82 2b       	or	r24, r18
     bc0:	f8 01       	movw	r30, r16
     bc2:	91 83       	std	Z+1, r25	; 0x01
     bc4:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     bc6:	8d 85       	ldd	r24, Y+13	; 0x0d
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	98 2f       	mov	r25, r24
     bcc:	88 27       	eor	r24, r24
     bce:	2e 85       	ldd	r18, Y+14	; 0x0e
     bd0:	82 2b       	or	r24, r18
     bd2:	f7 01       	movw	r30, r14
     bd4:	91 83       	std	Z+1, r25	; 0x01
     bd6:	80 83       	st	Z, r24
     bd8:	2e 96       	adiw	r28, 0x0e	; 14
     bda:	0f b6       	in	r0, 0x3f	; 63
     bdc:	f8 94       	cli
     bde:	de bf       	out	0x3e, r29	; 62
     be0:	0f be       	out	0x3f, r0	; 63
     be2:	cd bf       	out	0x3d, r28	; 61
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	1f 91       	pop	r17
     bea:	0f 91       	pop	r16
     bec:	ff 90       	pop	r15
     bee:	ef 90       	pop	r14
     bf0:	df 90       	pop	r13
     bf2:	cf 90       	pop	r12
     bf4:	bf 90       	pop	r11
     bf6:	af 90       	pop	r10
     bf8:	9f 90       	pop	r9
     bfa:	8f 90       	pop	r8
     bfc:	7f 90       	pop	r7
     bfe:	6f 90       	pop	r6
     c00:	08 95       	ret

00000c02 <setup_timer4>:

#define clockCyclesPerMicrosecond () ( F_CPU / 1000000L )

/*-----------Timter 1-----------*/
void setup_timer4(void){
    sbi (TCCR4B, CS40);//prescakaer 256
     c02:	e1 ea       	ldi	r30, 0xA1	; 161
     c04:	f0 e0       	ldi	r31, 0x00	; 0
     c06:	80 81       	ld	r24, Z
     c08:	81 60       	ori	r24, 0x01	; 1
     c0a:	80 83       	st	Z, r24
    sbi (TCCR4A, WGM40);//8 bit phase correct PWM
     c0c:	e0 ea       	ldi	r30, 0xA0	; 160
     c0e:	f0 e0       	ldi	r31, 0x00	; 0
     c10:	80 81       	ld	r24, Z
     c12:	81 60       	ori	r24, 0x01	; 1
     c14:	80 83       	st	Z, r24
	
	//sbi (TCCR4A,COM4A0);
	sbi (TCCR4A,COM4A1);
     c16:	80 81       	ld	r24, Z
     c18:	80 68       	ori	r24, 0x80	; 128
     c1a:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4B0);
	sbi (TCCR4A,COM4B1);
     c1c:	80 81       	ld	r24, Z
     c1e:	80 62       	ori	r24, 0x20	; 32
     c20:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4C0);
	sbi (TCCR4A,COM4C1);
     c22:	80 81       	ld	r24, Z
     c24:	88 60       	ori	r24, 0x08	; 8
     c26:	80 83       	st	Z, r24
     c28:	08 95       	ret

00000c2a <setup_timer5>:
}


/*-----------Timter 5-----------*/
void setup_timer5(void){
	sbi (TCCR5B, CS50);//only this 8
     c2a:	e1 e2       	ldi	r30, 0x21	; 33
     c2c:	f1 e0       	ldi	r31, 0x01	; 1
     c2e:	80 81       	ld	r24, Z
     c30:	81 60       	ori	r24, 0x01	; 1
     c32:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR5B, WGM52);//OCR4A compare interrupt
     c34:	80 81       	ld	r24, Z
     c36:	88 60       	ori	r24, 0x08	; 8
     c38:	80 83       	st	Z, r24
     c3a:	08 95       	ret

00000c3c <Enable_timer5_compare_interrupt>:
	
}
void Enable_timer5_compare_interrupt(){
	sbi (TIMSK5, OCIE5A);
     c3c:	e3 e7       	ldi	r30, 0x73	; 115
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	80 81       	ld	r24, Z
     c42:	82 60       	ori	r24, 0x02	; 2
     c44:	80 83       	st	Z, r24
     c46:	08 95       	ret

00000c48 <setup_timer0>:
}
/*-----------Timter 2-----------*/
void setup_timer0(void){
	sbi(TCCR0B,CS00);
     c48:	85 b5       	in	r24, 0x25	; 37
     c4a:	81 60       	ori	r24, 0x01	; 1
     c4c:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B,CS01);;//prescaler 64 , 250khz timer
     c4e:	85 b5       	in	r24, 0x25	; 37
     c50:	82 60       	ori	r24, 0x02	; 2
     c52:	85 bd       	out	0x25, r24	; 37
     c54:	08 95       	ret

00000c56 <Enable_timer0_overflow_interrupt>:
}
void Enable_timer0_overflow_interrupt(){
	sbi(TIMSK0,TOIE0);
     c56:	ee e6       	ldi	r30, 0x6E	; 110
     c58:	f0 e0       	ldi	r31, 0x00	; 0
     c5a:	80 81       	ld	r24, Z
     c5c:	81 60       	ori	r24, 0x01	; 1
     c5e:	80 83       	st	Z, r24
     c60:	08 95       	ret

00000c62 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     c62:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     c66:	8c e0       	ldi	r24, 0x0C	; 12
     c68:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     c6c:	08 95       	ret

00000c6e <i2c_start>:
     c6e:	94 ea       	ldi	r25, 0xA4	; 164
     c70:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     c74:	4f ef       	ldi	r20, 0xFF	; 255
     c76:	50 e0       	ldi	r21, 0x00	; 0
     c78:	60 e0       	ldi	r22, 0x00	; 0
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	ec eb       	ldi	r30, 0xBC	; 188
     c7e:	f0 e0       	ldi	r31, 0x00	; 0
     c80:	90 81       	ld	r25, Z
     c82:	99 23       	and	r25, r25
     c84:	34 f0       	brlt	.+12     	; 0xc92 <i2c_start+0x24>
     c86:	41 50       	subi	r20, 0x01	; 1
     c88:	51 09       	sbc	r21, r1
     c8a:	61 09       	sbc	r22, r1
     c8c:	71 09       	sbc	r23, r1
     c8e:	c0 f7       	brcc	.-16     	; 0xc80 <i2c_start+0x12>
     c90:	04 c0       	rjmp	.+8      	; 0xc9a <i2c_start+0x2c>
     c92:	45 2b       	or	r20, r21
     c94:	46 2b       	or	r20, r22
     c96:	47 2b       	or	r20, r23
     c98:	41 f1       	breq	.+80     	; 0xcea <i2c_start+0x7c>
     c9a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     c9e:	98 7f       	andi	r25, 0xF8	; 248
     ca0:	98 30       	cpi	r25, 0x08	; 8
     ca2:	11 f0       	breq	.+4      	; 0xca8 <i2c_start+0x3a>
     ca4:	90 31       	cpi	r25, 0x10	; 16
     ca6:	19 f5       	brne	.+70     	; 0xcee <i2c_start+0x80>
     ca8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     cac:	84 e8       	ldi	r24, 0x84	; 132
     cae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     cb2:	8f ef       	ldi	r24, 0xFF	; 255
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	a0 e0       	ldi	r26, 0x00	; 0
     cb8:	b0 e0       	ldi	r27, 0x00	; 0
     cba:	ec eb       	ldi	r30, 0xBC	; 188
     cbc:	f0 e0       	ldi	r31, 0x00	; 0
     cbe:	20 81       	ld	r18, Z
     cc0:	22 23       	and	r18, r18
     cc2:	2c f0       	brlt	.+10     	; 0xcce <i2c_start+0x60>
     cc4:	01 97       	sbiw	r24, 0x01	; 1
     cc6:	a1 09       	sbc	r26, r1
     cc8:	b1 09       	sbc	r27, r1
     cca:	c8 f7       	brcc	.-14     	; 0xcbe <i2c_start+0x50>
     ccc:	04 c0       	rjmp	.+8      	; 0xcd6 <i2c_start+0x68>
     cce:	89 2b       	or	r24, r25
     cd0:	8a 2b       	or	r24, r26
     cd2:	8b 2b       	or	r24, r27
     cd4:	71 f0       	breq	.+28     	; 0xcf2 <i2c_start+0x84>
     cd6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     cda:	98 7f       	andi	r25, 0xF8	; 248
     cdc:	98 31       	cpi	r25, 0x18	; 24
     cde:	59 f0       	breq	.+22     	; 0xcf6 <i2c_start+0x88>
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	90 34       	cpi	r25, 0x40	; 64
     ce4:	49 f4       	brne	.+18     	; 0xcf8 <i2c_start+0x8a>
     ce6:	80 e0       	ldi	r24, 0x00	; 0
     ce8:	08 95       	ret
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	08 95       	ret
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	08 95       	ret
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	08 95       	ret
     cf6:	80 e0       	ldi	r24, 0x00	; 0
     cf8:	08 95       	ret

00000cfa <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     cfa:	84 e9       	ldi	r24, 0x94	; 148
     cfc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	ec eb       	ldi	r30, 0xBC	; 188
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	20 81       	ld	r18, Z
     d0a:	24 ff       	sbrs	r18, 4
     d0c:	05 c0       	rjmp	.+10     	; 0xd18 <i2c_stop+0x1e>
     d0e:	01 96       	adiw	r24, 0x01	; 1
     d10:	81 15       	cp	r24, r1
     d12:	21 e0       	ldi	r18, 0x01	; 1
     d14:	92 07       	cpc	r25, r18
     d16:	c1 f7       	brne	.-16     	; 0xd08 <i2c_stop+0xe>
     d18:	08 95       	ret

00000d1a <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     d1a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     d1e:	84 e8       	ldi	r24, 0x84	; 132
     d20:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     d24:	8f ef       	ldi	r24, 0xFF	; 255
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	a0 e0       	ldi	r26, 0x00	; 0
     d2a:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     d2c:	ec eb       	ldi	r30, 0xBC	; 188
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	20 81       	ld	r18, Z
     d32:	22 23       	and	r18, r18
     d34:	2c f0       	brlt	.+10     	; 0xd40 <i2c_write+0x26>
     d36:	01 97       	sbiw	r24, 0x01	; 1
     d38:	a1 09       	sbc	r26, r1
     d3a:	b1 09       	sbc	r27, r1
     d3c:	c8 f7       	brcc	.-14     	; 0xd30 <i2c_write+0x16>
     d3e:	04 c0       	rjmp	.+8      	; 0xd48 <i2c_write+0x2e>
	if(i2c_timer == 0)
     d40:	89 2b       	or	r24, r25
     d42:	8a 2b       	or	r24, r26
     d44:	8b 2b       	or	r24, r27
     d46:	41 f0       	breq	.+16     	; 0xd58 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     d48:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     d4c:	98 7f       	andi	r25, 0xF8	; 248
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	98 32       	cpi	r25, 0x28	; 40
     d52:	19 f4       	brne	.+6      	; 0xd5a <i2c_write+0x40>
     d54:	80 e0       	ldi	r24, 0x00	; 0
     d56:	08 95       	ret
     d58:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     d5a:	08 95       	ret

00000d5c <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     d5c:	84 ec       	ldi	r24, 0xC4	; 196
     d5e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     d62:	8f ef       	ldi	r24, 0xFF	; 255
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	a0 e0       	ldi	r26, 0x00	; 0
     d68:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     d6a:	ec eb       	ldi	r30, 0xBC	; 188
     d6c:	f0 e0       	ldi	r31, 0x00	; 0
     d6e:	20 81       	ld	r18, Z
     d70:	22 23       	and	r18, r18
     d72:	2c f0       	brlt	.+10     	; 0xd7e <i2c_readAck+0x22>
     d74:	01 97       	sbiw	r24, 0x01	; 1
     d76:	a1 09       	sbc	r26, r1
     d78:	b1 09       	sbc	r27, r1
     d7a:	c8 f7       	brcc	.-14     	; 0xd6e <i2c_readAck+0x12>
     d7c:	04 c0       	rjmp	.+8      	; 0xd86 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     d7e:	89 2b       	or	r24, r25
     d80:	8a 2b       	or	r24, r26
     d82:	8b 2b       	or	r24, r27
     d84:	19 f0       	breq	.+6      	; 0xd8c <i2c_readAck+0x30>
		return 0;

    return TWDR;
     d86:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     d8a:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     d8c:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     d8e:	08 95       	ret

00000d90 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     d90:	84 e8       	ldi	r24, 0x84	; 132
     d92:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     d96:	8f ef       	ldi	r24, 0xFF	; 255
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	a0 e0       	ldi	r26, 0x00	; 0
     d9c:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     d9e:	ec eb       	ldi	r30, 0xBC	; 188
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	20 81       	ld	r18, Z
     da4:	22 23       	and	r18, r18
     da6:	2c f0       	brlt	.+10     	; 0xdb2 <i2c_readNak+0x22>
     da8:	01 97       	sbiw	r24, 0x01	; 1
     daa:	a1 09       	sbc	r26, r1
     dac:	b1 09       	sbc	r27, r1
     dae:	c8 f7       	brcc	.-14     	; 0xda2 <i2c_readNak+0x12>
     db0:	04 c0       	rjmp	.+8      	; 0xdba <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     db2:	89 2b       	or	r24, r25
     db4:	8a 2b       	or	r24, r26
     db6:	8b 2b       	or	r24, r27
     db8:	19 f0       	breq	.+6      	; 0xdc0 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     dba:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     dbe:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     dc0:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     dc2:	08 95       	ret

00000dc4 <USART_Init>:
#include <avr/io.h>
#include <stdio.h>
void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     dc4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)ubrr;
     dc8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	UCSR0B = (1<<TXEN0);// | (1<<TXCIE0);
     dcc:	88 e0       	ldi	r24, 0x08	; 8
     dce:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);//2 stop bit 8 bit
     dd2:	8e e0       	ldi	r24, 0x0E	; 14
     dd4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     dd8:	08 95       	ret

00000dda <__subsf3>:
     dda:	50 58       	subi	r21, 0x80	; 128

00000ddc <__addsf3>:
     ddc:	bb 27       	eor	r27, r27
     dde:	aa 27       	eor	r26, r26
     de0:	0e d0       	rcall	.+28     	; 0xdfe <__addsf3x>
     de2:	b0 c1       	rjmp	.+864    	; 0x1144 <__fp_round>
     de4:	a1 d1       	rcall	.+834    	; 0x1128 <__fp_pscA>
     de6:	30 f0       	brcs	.+12     	; 0xdf4 <__addsf3+0x18>
     de8:	a6 d1       	rcall	.+844    	; 0x1136 <__fp_pscB>
     dea:	20 f0       	brcs	.+8      	; 0xdf4 <__addsf3+0x18>
     dec:	31 f4       	brne	.+12     	; 0xdfa <__addsf3+0x1e>
     dee:	9f 3f       	cpi	r25, 0xFF	; 255
     df0:	11 f4       	brne	.+4      	; 0xdf6 <__addsf3+0x1a>
     df2:	1e f4       	brtc	.+6      	; 0xdfa <__addsf3+0x1e>
     df4:	60 c1       	rjmp	.+704    	; 0x10b6 <__fp_nan>
     df6:	0e f4       	brtc	.+2      	; 0xdfa <__addsf3+0x1e>
     df8:	e0 95       	com	r30
     dfa:	e7 fb       	bst	r30, 7
     dfc:	56 c1       	rjmp	.+684    	; 0x10aa <__fp_inf>

00000dfe <__addsf3x>:
     dfe:	e9 2f       	mov	r30, r25
     e00:	b2 d1       	rcall	.+868    	; 0x1166 <__fp_split3>
     e02:	80 f3       	brcs	.-32     	; 0xde4 <__addsf3+0x8>
     e04:	ba 17       	cp	r27, r26
     e06:	62 07       	cpc	r22, r18
     e08:	73 07       	cpc	r23, r19
     e0a:	84 07       	cpc	r24, r20
     e0c:	95 07       	cpc	r25, r21
     e0e:	18 f0       	brcs	.+6      	; 0xe16 <__addsf3x+0x18>
     e10:	71 f4       	brne	.+28     	; 0xe2e <__addsf3x+0x30>
     e12:	9e f5       	brtc	.+102    	; 0xe7a <__addsf3x+0x7c>
     e14:	ca c1       	rjmp	.+916    	; 0x11aa <__fp_zero>
     e16:	0e f4       	brtc	.+2      	; 0xe1a <__addsf3x+0x1c>
     e18:	e0 95       	com	r30
     e1a:	0b 2e       	mov	r0, r27
     e1c:	ba 2f       	mov	r27, r26
     e1e:	a0 2d       	mov	r26, r0
     e20:	0b 01       	movw	r0, r22
     e22:	b9 01       	movw	r22, r18
     e24:	90 01       	movw	r18, r0
     e26:	0c 01       	movw	r0, r24
     e28:	ca 01       	movw	r24, r20
     e2a:	a0 01       	movw	r20, r0
     e2c:	11 24       	eor	r1, r1
     e2e:	ff 27       	eor	r31, r31
     e30:	59 1b       	sub	r21, r25
     e32:	99 f0       	breq	.+38     	; 0xe5a <__addsf3x+0x5c>
     e34:	59 3f       	cpi	r21, 0xF9	; 249
     e36:	50 f4       	brcc	.+20     	; 0xe4c <__addsf3x+0x4e>
     e38:	50 3e       	cpi	r21, 0xE0	; 224
     e3a:	68 f1       	brcs	.+90     	; 0xe96 <__addsf3x+0x98>
     e3c:	1a 16       	cp	r1, r26
     e3e:	f0 40       	sbci	r31, 0x00	; 0
     e40:	a2 2f       	mov	r26, r18
     e42:	23 2f       	mov	r18, r19
     e44:	34 2f       	mov	r19, r20
     e46:	44 27       	eor	r20, r20
     e48:	58 5f       	subi	r21, 0xF8	; 248
     e4a:	f3 cf       	rjmp	.-26     	; 0xe32 <__addsf3x+0x34>
     e4c:	46 95       	lsr	r20
     e4e:	37 95       	ror	r19
     e50:	27 95       	ror	r18
     e52:	a7 95       	ror	r26
     e54:	f0 40       	sbci	r31, 0x00	; 0
     e56:	53 95       	inc	r21
     e58:	c9 f7       	brne	.-14     	; 0xe4c <__addsf3x+0x4e>
     e5a:	7e f4       	brtc	.+30     	; 0xe7a <__addsf3x+0x7c>
     e5c:	1f 16       	cp	r1, r31
     e5e:	ba 0b       	sbc	r27, r26
     e60:	62 0b       	sbc	r22, r18
     e62:	73 0b       	sbc	r23, r19
     e64:	84 0b       	sbc	r24, r20
     e66:	ba f0       	brmi	.+46     	; 0xe96 <__addsf3x+0x98>
     e68:	91 50       	subi	r25, 0x01	; 1
     e6a:	a1 f0       	breq	.+40     	; 0xe94 <__addsf3x+0x96>
     e6c:	ff 0f       	add	r31, r31
     e6e:	bb 1f       	adc	r27, r27
     e70:	66 1f       	adc	r22, r22
     e72:	77 1f       	adc	r23, r23
     e74:	88 1f       	adc	r24, r24
     e76:	c2 f7       	brpl	.-16     	; 0xe68 <__addsf3x+0x6a>
     e78:	0e c0       	rjmp	.+28     	; 0xe96 <__addsf3x+0x98>
     e7a:	ba 0f       	add	r27, r26
     e7c:	62 1f       	adc	r22, r18
     e7e:	73 1f       	adc	r23, r19
     e80:	84 1f       	adc	r24, r20
     e82:	48 f4       	brcc	.+18     	; 0xe96 <__addsf3x+0x98>
     e84:	87 95       	ror	r24
     e86:	77 95       	ror	r23
     e88:	67 95       	ror	r22
     e8a:	b7 95       	ror	r27
     e8c:	f7 95       	ror	r31
     e8e:	9e 3f       	cpi	r25, 0xFE	; 254
     e90:	08 f0       	brcs	.+2      	; 0xe94 <__addsf3x+0x96>
     e92:	b3 cf       	rjmp	.-154    	; 0xdfa <__addsf3+0x1e>
     e94:	93 95       	inc	r25
     e96:	88 0f       	add	r24, r24
     e98:	08 f0       	brcs	.+2      	; 0xe9c <__addsf3x+0x9e>
     e9a:	99 27       	eor	r25, r25
     e9c:	ee 0f       	add	r30, r30
     e9e:	97 95       	ror	r25
     ea0:	87 95       	ror	r24
     ea2:	08 95       	ret

00000ea4 <asin>:
     ea4:	9f 93       	push	r25
     ea6:	9f 77       	andi	r25, 0x7F	; 127
     ea8:	ee e3       	ldi	r30, 0x3E	; 62
     eaa:	89 37       	cpi	r24, 0x79	; 121
     eac:	9e 07       	cpc	r25, r30
     eae:	20 f4       	brcc	.+8      	; 0xeb8 <asin+0x14>
     eb0:	e4 ee       	ldi	r30, 0xE4	; 228
     eb2:	f0 e0       	ldi	r31, 0x00	; 0
     eb4:	28 d1       	rcall	.+592    	; 0x1106 <__fp_powsodd>
     eb6:	09 c0       	rjmp	.+18     	; 0xeca <asin+0x26>
     eb8:	dd d0       	rcall	.+442    	; 0x1074 <__fp_arccos>
     eba:	90 58       	subi	r25, 0x80	; 128
     ebc:	a2 ea       	ldi	r26, 0xA2	; 162
     ebe:	2a ed       	ldi	r18, 0xDA	; 218
     ec0:	3f e0       	ldi	r19, 0x0F	; 15
     ec2:	49 ec       	ldi	r20, 0xC9	; 201
     ec4:	5f e3       	ldi	r21, 0x3F	; 63
     ec6:	9b df       	rcall	.-202    	; 0xdfe <__addsf3x>
     ec8:	3d d1       	rcall	.+634    	; 0x1144 <__fp_round>
     eca:	0f 90       	pop	r0
     ecc:	07 fc       	sbrc	r0, 7
     ece:	90 58       	subi	r25, 0x80	; 128
     ed0:	08 95       	ret

00000ed2 <__divsf3>:
     ed2:	0c d0       	rcall	.+24     	; 0xeec <__divsf3x>
     ed4:	37 c1       	rjmp	.+622    	; 0x1144 <__fp_round>
     ed6:	2f d1       	rcall	.+606    	; 0x1136 <__fp_pscB>
     ed8:	40 f0       	brcs	.+16     	; 0xeea <__divsf3+0x18>
     eda:	26 d1       	rcall	.+588    	; 0x1128 <__fp_pscA>
     edc:	30 f0       	brcs	.+12     	; 0xeea <__divsf3+0x18>
     ede:	21 f4       	brne	.+8      	; 0xee8 <__divsf3+0x16>
     ee0:	5f 3f       	cpi	r21, 0xFF	; 255
     ee2:	19 f0       	breq	.+6      	; 0xeea <__divsf3+0x18>
     ee4:	e2 c0       	rjmp	.+452    	; 0x10aa <__fp_inf>
     ee6:	51 11       	cpse	r21, r1
     ee8:	61 c1       	rjmp	.+706    	; 0x11ac <__fp_szero>
     eea:	e5 c0       	rjmp	.+458    	; 0x10b6 <__fp_nan>

00000eec <__divsf3x>:
     eec:	3c d1       	rcall	.+632    	; 0x1166 <__fp_split3>
     eee:	98 f3       	brcs	.-26     	; 0xed6 <__divsf3+0x4>

00000ef0 <__divsf3_pse>:
     ef0:	99 23       	and	r25, r25
     ef2:	c9 f3       	breq	.-14     	; 0xee6 <__divsf3+0x14>
     ef4:	55 23       	and	r21, r21
     ef6:	b1 f3       	breq	.-20     	; 0xee4 <__divsf3+0x12>
     ef8:	95 1b       	sub	r25, r21
     efa:	55 0b       	sbc	r21, r21
     efc:	bb 27       	eor	r27, r27
     efe:	aa 27       	eor	r26, r26
     f00:	62 17       	cp	r22, r18
     f02:	73 07       	cpc	r23, r19
     f04:	84 07       	cpc	r24, r20
     f06:	38 f0       	brcs	.+14     	; 0xf16 <__divsf3_pse+0x26>
     f08:	9f 5f       	subi	r25, 0xFF	; 255
     f0a:	5f 4f       	sbci	r21, 0xFF	; 255
     f0c:	22 0f       	add	r18, r18
     f0e:	33 1f       	adc	r19, r19
     f10:	44 1f       	adc	r20, r20
     f12:	aa 1f       	adc	r26, r26
     f14:	a9 f3       	breq	.-22     	; 0xf00 <__divsf3_pse+0x10>
     f16:	33 d0       	rcall	.+102    	; 0xf7e <__divsf3_pse+0x8e>
     f18:	0e 2e       	mov	r0, r30
     f1a:	3a f0       	brmi	.+14     	; 0xf2a <__divsf3_pse+0x3a>
     f1c:	e0 e8       	ldi	r30, 0x80	; 128
     f1e:	30 d0       	rcall	.+96     	; 0xf80 <__divsf3_pse+0x90>
     f20:	91 50       	subi	r25, 0x01	; 1
     f22:	50 40       	sbci	r21, 0x00	; 0
     f24:	e6 95       	lsr	r30
     f26:	00 1c       	adc	r0, r0
     f28:	ca f7       	brpl	.-14     	; 0xf1c <__divsf3_pse+0x2c>
     f2a:	29 d0       	rcall	.+82     	; 0xf7e <__divsf3_pse+0x8e>
     f2c:	fe 2f       	mov	r31, r30
     f2e:	27 d0       	rcall	.+78     	; 0xf7e <__divsf3_pse+0x8e>
     f30:	66 0f       	add	r22, r22
     f32:	77 1f       	adc	r23, r23
     f34:	88 1f       	adc	r24, r24
     f36:	bb 1f       	adc	r27, r27
     f38:	26 17       	cp	r18, r22
     f3a:	37 07       	cpc	r19, r23
     f3c:	48 07       	cpc	r20, r24
     f3e:	ab 07       	cpc	r26, r27
     f40:	b0 e8       	ldi	r27, 0x80	; 128
     f42:	09 f0       	breq	.+2      	; 0xf46 <__divsf3_pse+0x56>
     f44:	bb 0b       	sbc	r27, r27
     f46:	80 2d       	mov	r24, r0
     f48:	bf 01       	movw	r22, r30
     f4a:	ff 27       	eor	r31, r31
     f4c:	93 58       	subi	r25, 0x83	; 131
     f4e:	5f 4f       	sbci	r21, 0xFF	; 255
     f50:	2a f0       	brmi	.+10     	; 0xf5c <__divsf3_pse+0x6c>
     f52:	9e 3f       	cpi	r25, 0xFE	; 254
     f54:	51 05       	cpc	r21, r1
     f56:	68 f0       	brcs	.+26     	; 0xf72 <__divsf3_pse+0x82>
     f58:	a8 c0       	rjmp	.+336    	; 0x10aa <__fp_inf>
     f5a:	28 c1       	rjmp	.+592    	; 0x11ac <__fp_szero>
     f5c:	5f 3f       	cpi	r21, 0xFF	; 255
     f5e:	ec f3       	brlt	.-6      	; 0xf5a <__divsf3_pse+0x6a>
     f60:	98 3e       	cpi	r25, 0xE8	; 232
     f62:	dc f3       	brlt	.-10     	; 0xf5a <__divsf3_pse+0x6a>
     f64:	86 95       	lsr	r24
     f66:	77 95       	ror	r23
     f68:	67 95       	ror	r22
     f6a:	b7 95       	ror	r27
     f6c:	f7 95       	ror	r31
     f6e:	9f 5f       	subi	r25, 0xFF	; 255
     f70:	c9 f7       	brne	.-14     	; 0xf64 <__divsf3_pse+0x74>
     f72:	88 0f       	add	r24, r24
     f74:	91 1d       	adc	r25, r1
     f76:	96 95       	lsr	r25
     f78:	87 95       	ror	r24
     f7a:	97 f9       	bld	r25, 7
     f7c:	08 95       	ret
     f7e:	e1 e0       	ldi	r30, 0x01	; 1
     f80:	66 0f       	add	r22, r22
     f82:	77 1f       	adc	r23, r23
     f84:	88 1f       	adc	r24, r24
     f86:	bb 1f       	adc	r27, r27
     f88:	62 17       	cp	r22, r18
     f8a:	73 07       	cpc	r23, r19
     f8c:	84 07       	cpc	r24, r20
     f8e:	ba 07       	cpc	r27, r26
     f90:	20 f0       	brcs	.+8      	; 0xf9a <__divsf3_pse+0xaa>
     f92:	62 1b       	sub	r22, r18
     f94:	73 0b       	sbc	r23, r19
     f96:	84 0b       	sbc	r24, r20
     f98:	ba 0b       	sbc	r27, r26
     f9a:	ee 1f       	adc	r30, r30
     f9c:	88 f7       	brcc	.-30     	; 0xf80 <__divsf3_pse+0x90>
     f9e:	e0 95       	com	r30
     fa0:	08 95       	ret

00000fa2 <__fixunssfsi>:
     fa2:	e9 d0       	rcall	.+466    	; 0x1176 <__fp_splitA>
     fa4:	88 f0       	brcs	.+34     	; 0xfc8 <__fixunssfsi+0x26>
     fa6:	9f 57       	subi	r25, 0x7F	; 127
     fa8:	90 f0       	brcs	.+36     	; 0xfce <__fixunssfsi+0x2c>
     faa:	b9 2f       	mov	r27, r25
     fac:	99 27       	eor	r25, r25
     fae:	b7 51       	subi	r27, 0x17	; 23
     fb0:	a0 f0       	brcs	.+40     	; 0xfda <__fixunssfsi+0x38>
     fb2:	d1 f0       	breq	.+52     	; 0xfe8 <__fixunssfsi+0x46>
     fb4:	66 0f       	add	r22, r22
     fb6:	77 1f       	adc	r23, r23
     fb8:	88 1f       	adc	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	1a f0       	brmi	.+6      	; 0xfc4 <__fixunssfsi+0x22>
     fbe:	ba 95       	dec	r27
     fc0:	c9 f7       	brne	.-14     	; 0xfb4 <__fixunssfsi+0x12>
     fc2:	12 c0       	rjmp	.+36     	; 0xfe8 <__fixunssfsi+0x46>
     fc4:	b1 30       	cpi	r27, 0x01	; 1
     fc6:	81 f0       	breq	.+32     	; 0xfe8 <__fixunssfsi+0x46>
     fc8:	f0 d0       	rcall	.+480    	; 0x11aa <__fp_zero>
     fca:	b1 e0       	ldi	r27, 0x01	; 1
     fcc:	08 95       	ret
     fce:	ed c0       	rjmp	.+474    	; 0x11aa <__fp_zero>
     fd0:	67 2f       	mov	r22, r23
     fd2:	78 2f       	mov	r23, r24
     fd4:	88 27       	eor	r24, r24
     fd6:	b8 5f       	subi	r27, 0xF8	; 248
     fd8:	39 f0       	breq	.+14     	; 0xfe8 <__fixunssfsi+0x46>
     fda:	b9 3f       	cpi	r27, 0xF9	; 249
     fdc:	cc f3       	brlt	.-14     	; 0xfd0 <__fixunssfsi+0x2e>
     fde:	86 95       	lsr	r24
     fe0:	77 95       	ror	r23
     fe2:	67 95       	ror	r22
     fe4:	b3 95       	inc	r27
     fe6:	d9 f7       	brne	.-10     	; 0xfde <__fixunssfsi+0x3c>
     fe8:	3e f4       	brtc	.+14     	; 0xff8 <__fixunssfsi+0x56>
     fea:	90 95       	com	r25
     fec:	80 95       	com	r24
     fee:	70 95       	com	r23
     ff0:	61 95       	neg	r22
     ff2:	7f 4f       	sbci	r23, 0xFF	; 255
     ff4:	8f 4f       	sbci	r24, 0xFF	; 255
     ff6:	9f 4f       	sbci	r25, 0xFF	; 255
     ff8:	08 95       	ret

00000ffa <__floatunsisf>:
     ffa:	e8 94       	clt
     ffc:	09 c0       	rjmp	.+18     	; 0x1010 <__floatsisf+0x12>

00000ffe <__floatsisf>:
     ffe:	97 fb       	bst	r25, 7
    1000:	3e f4       	brtc	.+14     	; 0x1010 <__floatsisf+0x12>
    1002:	90 95       	com	r25
    1004:	80 95       	com	r24
    1006:	70 95       	com	r23
    1008:	61 95       	neg	r22
    100a:	7f 4f       	sbci	r23, 0xFF	; 255
    100c:	8f 4f       	sbci	r24, 0xFF	; 255
    100e:	9f 4f       	sbci	r25, 0xFF	; 255
    1010:	99 23       	and	r25, r25
    1012:	a9 f0       	breq	.+42     	; 0x103e <__floatsisf+0x40>
    1014:	f9 2f       	mov	r31, r25
    1016:	96 e9       	ldi	r25, 0x96	; 150
    1018:	bb 27       	eor	r27, r27
    101a:	93 95       	inc	r25
    101c:	f6 95       	lsr	r31
    101e:	87 95       	ror	r24
    1020:	77 95       	ror	r23
    1022:	67 95       	ror	r22
    1024:	b7 95       	ror	r27
    1026:	f1 11       	cpse	r31, r1
    1028:	f8 cf       	rjmp	.-16     	; 0x101a <__floatsisf+0x1c>
    102a:	fa f4       	brpl	.+62     	; 0x106a <__floatsisf+0x6c>
    102c:	bb 0f       	add	r27, r27
    102e:	11 f4       	brne	.+4      	; 0x1034 <__floatsisf+0x36>
    1030:	60 ff       	sbrs	r22, 0
    1032:	1b c0       	rjmp	.+54     	; 0x106a <__floatsisf+0x6c>
    1034:	6f 5f       	subi	r22, 0xFF	; 255
    1036:	7f 4f       	sbci	r23, 0xFF	; 255
    1038:	8f 4f       	sbci	r24, 0xFF	; 255
    103a:	9f 4f       	sbci	r25, 0xFF	; 255
    103c:	16 c0       	rjmp	.+44     	; 0x106a <__floatsisf+0x6c>
    103e:	88 23       	and	r24, r24
    1040:	11 f0       	breq	.+4      	; 0x1046 <__floatsisf+0x48>
    1042:	96 e9       	ldi	r25, 0x96	; 150
    1044:	11 c0       	rjmp	.+34     	; 0x1068 <__floatsisf+0x6a>
    1046:	77 23       	and	r23, r23
    1048:	21 f0       	breq	.+8      	; 0x1052 <__floatsisf+0x54>
    104a:	9e e8       	ldi	r25, 0x8E	; 142
    104c:	87 2f       	mov	r24, r23
    104e:	76 2f       	mov	r23, r22
    1050:	05 c0       	rjmp	.+10     	; 0x105c <__floatsisf+0x5e>
    1052:	66 23       	and	r22, r22
    1054:	71 f0       	breq	.+28     	; 0x1072 <__floatsisf+0x74>
    1056:	96 e8       	ldi	r25, 0x86	; 134
    1058:	86 2f       	mov	r24, r22
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	60 e0       	ldi	r22, 0x00	; 0
    105e:	2a f0       	brmi	.+10     	; 0x106a <__floatsisf+0x6c>
    1060:	9a 95       	dec	r25
    1062:	66 0f       	add	r22, r22
    1064:	77 1f       	adc	r23, r23
    1066:	88 1f       	adc	r24, r24
    1068:	da f7       	brpl	.-10     	; 0x1060 <__floatsisf+0x62>
    106a:	88 0f       	add	r24, r24
    106c:	96 95       	lsr	r25
    106e:	87 95       	ror	r24
    1070:	97 f9       	bld	r25, 7
    1072:	08 95       	ret

00001074 <__fp_arccos>:
    1074:	df 93       	push	r29
    1076:	cf 93       	push	r28
    1078:	1f 93       	push	r17
    107a:	0f 93       	push	r16
    107c:	8b 01       	movw	r16, r22
    107e:	ec 01       	movw	r28, r24
    1080:	e8 ef       	ldi	r30, 0xF8	; 248
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	1b d0       	rcall	.+54     	; 0x10bc <__fp_powser>
    1086:	5e d0       	rcall	.+188    	; 0x1144 <__fp_round>
    1088:	98 01       	movw	r18, r16
    108a:	ae 01       	movw	r20, r28
    108c:	8b 01       	movw	r16, r22
    108e:	ec 01       	movw	r28, r24
    1090:	60 e0       	ldi	r22, 0x00	; 0
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	80 e8       	ldi	r24, 0x80	; 128
    1096:	9f e3       	ldi	r25, 0x3F	; 63
    1098:	a0 de       	rcall	.-704    	; 0xdda <__subsf3>
    109a:	fb d0       	rcall	.+502    	; 0x1292 <sqrt>
    109c:	98 01       	movw	r18, r16
    109e:	ae 01       	movw	r20, r28
    10a0:	0f 91       	pop	r16
    10a2:	1f 91       	pop	r17
    10a4:	cf 91       	pop	r28
    10a6:	df 91       	pop	r29
    10a8:	93 c0       	rjmp	.+294    	; 0x11d0 <__mulsf3x>

000010aa <__fp_inf>:
    10aa:	97 f9       	bld	r25, 7
    10ac:	9f 67       	ori	r25, 0x7F	; 127
    10ae:	80 e8       	ldi	r24, 0x80	; 128
    10b0:	70 e0       	ldi	r23, 0x00	; 0
    10b2:	60 e0       	ldi	r22, 0x00	; 0
    10b4:	08 95       	ret

000010b6 <__fp_nan>:
    10b6:	9f ef       	ldi	r25, 0xFF	; 255
    10b8:	80 ec       	ldi	r24, 0xC0	; 192
    10ba:	08 95       	ret

000010bc <__fp_powser>:
    10bc:	df 93       	push	r29
    10be:	cf 93       	push	r28
    10c0:	1f 93       	push	r17
    10c2:	0f 93       	push	r16
    10c4:	ff 92       	push	r15
    10c6:	ef 92       	push	r14
    10c8:	df 92       	push	r13
    10ca:	7b 01       	movw	r14, r22
    10cc:	8c 01       	movw	r16, r24
    10ce:	68 94       	set
    10d0:	05 c0       	rjmp	.+10     	; 0x10dc <__fp_powser+0x20>
    10d2:	da 2e       	mov	r13, r26
    10d4:	ef 01       	movw	r28, r30
    10d6:	7c d0       	rcall	.+248    	; 0x11d0 <__mulsf3x>
    10d8:	fe 01       	movw	r30, r28
    10da:	e8 94       	clt
    10dc:	a5 91       	lpm	r26, Z+
    10de:	25 91       	lpm	r18, Z+
    10e0:	35 91       	lpm	r19, Z+
    10e2:	45 91       	lpm	r20, Z+
    10e4:	55 91       	lpm	r21, Z+
    10e6:	ae f3       	brts	.-22     	; 0x10d2 <__fp_powser+0x16>
    10e8:	ef 01       	movw	r28, r30
    10ea:	89 de       	rcall	.-750    	; 0xdfe <__addsf3x>
    10ec:	fe 01       	movw	r30, r28
    10ee:	97 01       	movw	r18, r14
    10f0:	a8 01       	movw	r20, r16
    10f2:	da 94       	dec	r13
    10f4:	79 f7       	brne	.-34     	; 0x10d4 <__fp_powser+0x18>
    10f6:	df 90       	pop	r13
    10f8:	ef 90       	pop	r14
    10fa:	ff 90       	pop	r15
    10fc:	0f 91       	pop	r16
    10fe:	1f 91       	pop	r17
    1100:	cf 91       	pop	r28
    1102:	df 91       	pop	r29
    1104:	08 95       	ret

00001106 <__fp_powsodd>:
    1106:	9f 93       	push	r25
    1108:	8f 93       	push	r24
    110a:	7f 93       	push	r23
    110c:	6f 93       	push	r22
    110e:	ff 93       	push	r31
    1110:	ef 93       	push	r30
    1112:	9b 01       	movw	r18, r22
    1114:	ac 01       	movw	r20, r24
    1116:	50 d0       	rcall	.+160    	; 0x11b8 <__mulsf3>
    1118:	ef 91       	pop	r30
    111a:	ff 91       	pop	r31
    111c:	cf df       	rcall	.-98     	; 0x10bc <__fp_powser>
    111e:	2f 91       	pop	r18
    1120:	3f 91       	pop	r19
    1122:	4f 91       	pop	r20
    1124:	5f 91       	pop	r21
    1126:	48 c0       	rjmp	.+144    	; 0x11b8 <__mulsf3>

00001128 <__fp_pscA>:
    1128:	00 24       	eor	r0, r0
    112a:	0a 94       	dec	r0
    112c:	16 16       	cp	r1, r22
    112e:	17 06       	cpc	r1, r23
    1130:	18 06       	cpc	r1, r24
    1132:	09 06       	cpc	r0, r25
    1134:	08 95       	ret

00001136 <__fp_pscB>:
    1136:	00 24       	eor	r0, r0
    1138:	0a 94       	dec	r0
    113a:	12 16       	cp	r1, r18
    113c:	13 06       	cpc	r1, r19
    113e:	14 06       	cpc	r1, r20
    1140:	05 06       	cpc	r0, r21
    1142:	08 95       	ret

00001144 <__fp_round>:
    1144:	09 2e       	mov	r0, r25
    1146:	03 94       	inc	r0
    1148:	00 0c       	add	r0, r0
    114a:	11 f4       	brne	.+4      	; 0x1150 <__fp_round+0xc>
    114c:	88 23       	and	r24, r24
    114e:	52 f0       	brmi	.+20     	; 0x1164 <__fp_round+0x20>
    1150:	bb 0f       	add	r27, r27
    1152:	40 f4       	brcc	.+16     	; 0x1164 <__fp_round+0x20>
    1154:	bf 2b       	or	r27, r31
    1156:	11 f4       	brne	.+4      	; 0x115c <__fp_round+0x18>
    1158:	60 ff       	sbrs	r22, 0
    115a:	04 c0       	rjmp	.+8      	; 0x1164 <__fp_round+0x20>
    115c:	6f 5f       	subi	r22, 0xFF	; 255
    115e:	7f 4f       	sbci	r23, 0xFF	; 255
    1160:	8f 4f       	sbci	r24, 0xFF	; 255
    1162:	9f 4f       	sbci	r25, 0xFF	; 255
    1164:	08 95       	ret

00001166 <__fp_split3>:
    1166:	57 fd       	sbrc	r21, 7
    1168:	90 58       	subi	r25, 0x80	; 128
    116a:	44 0f       	add	r20, r20
    116c:	55 1f       	adc	r21, r21
    116e:	59 f0       	breq	.+22     	; 0x1186 <__fp_splitA+0x10>
    1170:	5f 3f       	cpi	r21, 0xFF	; 255
    1172:	71 f0       	breq	.+28     	; 0x1190 <__fp_splitA+0x1a>
    1174:	47 95       	ror	r20

00001176 <__fp_splitA>:
    1176:	88 0f       	add	r24, r24
    1178:	97 fb       	bst	r25, 7
    117a:	99 1f       	adc	r25, r25
    117c:	61 f0       	breq	.+24     	; 0x1196 <__fp_splitA+0x20>
    117e:	9f 3f       	cpi	r25, 0xFF	; 255
    1180:	79 f0       	breq	.+30     	; 0x11a0 <__fp_splitA+0x2a>
    1182:	87 95       	ror	r24
    1184:	08 95       	ret
    1186:	12 16       	cp	r1, r18
    1188:	13 06       	cpc	r1, r19
    118a:	14 06       	cpc	r1, r20
    118c:	55 1f       	adc	r21, r21
    118e:	f2 cf       	rjmp	.-28     	; 0x1174 <__fp_split3+0xe>
    1190:	46 95       	lsr	r20
    1192:	f1 df       	rcall	.-30     	; 0x1176 <__fp_splitA>
    1194:	08 c0       	rjmp	.+16     	; 0x11a6 <__fp_splitA+0x30>
    1196:	16 16       	cp	r1, r22
    1198:	17 06       	cpc	r1, r23
    119a:	18 06       	cpc	r1, r24
    119c:	99 1f       	adc	r25, r25
    119e:	f1 cf       	rjmp	.-30     	; 0x1182 <__fp_splitA+0xc>
    11a0:	86 95       	lsr	r24
    11a2:	71 05       	cpc	r23, r1
    11a4:	61 05       	cpc	r22, r1
    11a6:	08 94       	sec
    11a8:	08 95       	ret

000011aa <__fp_zero>:
    11aa:	e8 94       	clt

000011ac <__fp_szero>:
    11ac:	bb 27       	eor	r27, r27
    11ae:	66 27       	eor	r22, r22
    11b0:	77 27       	eor	r23, r23
    11b2:	cb 01       	movw	r24, r22
    11b4:	97 f9       	bld	r25, 7
    11b6:	08 95       	ret

000011b8 <__mulsf3>:
    11b8:	0b d0       	rcall	.+22     	; 0x11d0 <__mulsf3x>
    11ba:	c4 cf       	rjmp	.-120    	; 0x1144 <__fp_round>
    11bc:	b5 df       	rcall	.-150    	; 0x1128 <__fp_pscA>
    11be:	28 f0       	brcs	.+10     	; 0x11ca <__mulsf3+0x12>
    11c0:	ba df       	rcall	.-140    	; 0x1136 <__fp_pscB>
    11c2:	18 f0       	brcs	.+6      	; 0x11ca <__mulsf3+0x12>
    11c4:	95 23       	and	r25, r21
    11c6:	09 f0       	breq	.+2      	; 0x11ca <__mulsf3+0x12>
    11c8:	70 cf       	rjmp	.-288    	; 0x10aa <__fp_inf>
    11ca:	75 cf       	rjmp	.-278    	; 0x10b6 <__fp_nan>
    11cc:	11 24       	eor	r1, r1
    11ce:	ee cf       	rjmp	.-36     	; 0x11ac <__fp_szero>

000011d0 <__mulsf3x>:
    11d0:	ca df       	rcall	.-108    	; 0x1166 <__fp_split3>
    11d2:	a0 f3       	brcs	.-24     	; 0x11bc <__mulsf3+0x4>

000011d4 <__mulsf3_pse>:
    11d4:	95 9f       	mul	r25, r21
    11d6:	d1 f3       	breq	.-12     	; 0x11cc <__mulsf3+0x14>
    11d8:	95 0f       	add	r25, r21
    11da:	50 e0       	ldi	r21, 0x00	; 0
    11dc:	55 1f       	adc	r21, r21
    11de:	62 9f       	mul	r22, r18
    11e0:	f0 01       	movw	r30, r0
    11e2:	72 9f       	mul	r23, r18
    11e4:	bb 27       	eor	r27, r27
    11e6:	f0 0d       	add	r31, r0
    11e8:	b1 1d       	adc	r27, r1
    11ea:	63 9f       	mul	r22, r19
    11ec:	aa 27       	eor	r26, r26
    11ee:	f0 0d       	add	r31, r0
    11f0:	b1 1d       	adc	r27, r1
    11f2:	aa 1f       	adc	r26, r26
    11f4:	64 9f       	mul	r22, r20
    11f6:	66 27       	eor	r22, r22
    11f8:	b0 0d       	add	r27, r0
    11fa:	a1 1d       	adc	r26, r1
    11fc:	66 1f       	adc	r22, r22
    11fe:	82 9f       	mul	r24, r18
    1200:	22 27       	eor	r18, r18
    1202:	b0 0d       	add	r27, r0
    1204:	a1 1d       	adc	r26, r1
    1206:	62 1f       	adc	r22, r18
    1208:	73 9f       	mul	r23, r19
    120a:	b0 0d       	add	r27, r0
    120c:	a1 1d       	adc	r26, r1
    120e:	62 1f       	adc	r22, r18
    1210:	83 9f       	mul	r24, r19
    1212:	a0 0d       	add	r26, r0
    1214:	61 1d       	adc	r22, r1
    1216:	22 1f       	adc	r18, r18
    1218:	74 9f       	mul	r23, r20
    121a:	33 27       	eor	r19, r19
    121c:	a0 0d       	add	r26, r0
    121e:	61 1d       	adc	r22, r1
    1220:	23 1f       	adc	r18, r19
    1222:	84 9f       	mul	r24, r20
    1224:	60 0d       	add	r22, r0
    1226:	21 1d       	adc	r18, r1
    1228:	82 2f       	mov	r24, r18
    122a:	76 2f       	mov	r23, r22
    122c:	6a 2f       	mov	r22, r26
    122e:	11 24       	eor	r1, r1
    1230:	9f 57       	subi	r25, 0x7F	; 127
    1232:	50 40       	sbci	r21, 0x00	; 0
    1234:	8a f0       	brmi	.+34     	; 0x1258 <__mulsf3_pse+0x84>
    1236:	e1 f0       	breq	.+56     	; 0x1270 <__mulsf3_pse+0x9c>
    1238:	88 23       	and	r24, r24
    123a:	4a f0       	brmi	.+18     	; 0x124e <__mulsf3_pse+0x7a>
    123c:	ee 0f       	add	r30, r30
    123e:	ff 1f       	adc	r31, r31
    1240:	bb 1f       	adc	r27, r27
    1242:	66 1f       	adc	r22, r22
    1244:	77 1f       	adc	r23, r23
    1246:	88 1f       	adc	r24, r24
    1248:	91 50       	subi	r25, 0x01	; 1
    124a:	50 40       	sbci	r21, 0x00	; 0
    124c:	a9 f7       	brne	.-22     	; 0x1238 <__mulsf3_pse+0x64>
    124e:	9e 3f       	cpi	r25, 0xFE	; 254
    1250:	51 05       	cpc	r21, r1
    1252:	70 f0       	brcs	.+28     	; 0x1270 <__mulsf3_pse+0x9c>
    1254:	2a cf       	rjmp	.-428    	; 0x10aa <__fp_inf>
    1256:	aa cf       	rjmp	.-172    	; 0x11ac <__fp_szero>
    1258:	5f 3f       	cpi	r21, 0xFF	; 255
    125a:	ec f3       	brlt	.-6      	; 0x1256 <__mulsf3_pse+0x82>
    125c:	98 3e       	cpi	r25, 0xE8	; 232
    125e:	dc f3       	brlt	.-10     	; 0x1256 <__mulsf3_pse+0x82>
    1260:	86 95       	lsr	r24
    1262:	77 95       	ror	r23
    1264:	67 95       	ror	r22
    1266:	b7 95       	ror	r27
    1268:	f7 95       	ror	r31
    126a:	e7 95       	ror	r30
    126c:	9f 5f       	subi	r25, 0xFF	; 255
    126e:	c1 f7       	brne	.-16     	; 0x1260 <__mulsf3_pse+0x8c>
    1270:	fe 2b       	or	r31, r30
    1272:	88 0f       	add	r24, r24
    1274:	91 1d       	adc	r25, r1
    1276:	96 95       	lsr	r25
    1278:	87 95       	ror	r24
    127a:	97 f9       	bld	r25, 7
    127c:	08 95       	ret

0000127e <sin>:
    127e:	9f 93       	push	r25
    1280:	5c d0       	rcall	.+184    	; 0x133a <__fp_rempio2>
    1282:	0f 90       	pop	r0
    1284:	07 fc       	sbrc	r0, 7
    1286:	ee 5f       	subi	r30, 0xFE	; 254
    1288:	7f c0       	rjmp	.+254    	; 0x1388 <__fp_sinus>
    128a:	11 f4       	brne	.+4      	; 0x1290 <sin+0x12>
    128c:	0e f4       	brtc	.+2      	; 0x1290 <sin+0x12>
    128e:	13 cf       	rjmp	.-474    	; 0x10b6 <__fp_nan>
    1290:	3e c0       	rjmp	.+124    	; 0x130e <__fp_mpack>

00001292 <sqrt>:
    1292:	71 df       	rcall	.-286    	; 0x1176 <__fp_splitA>
    1294:	d0 f3       	brcs	.-12     	; 0x128a <sin+0xc>
    1296:	99 23       	and	r25, r25
    1298:	d9 f3       	breq	.-10     	; 0x1290 <sin+0x12>
    129a:	ce f3       	brts	.-14     	; 0x128e <sin+0x10>
    129c:	9f 57       	subi	r25, 0x7F	; 127
    129e:	55 0b       	sbc	r21, r21
    12a0:	87 ff       	sbrs	r24, 7
    12a2:	43 d0       	rcall	.+134    	; 0x132a <__fp_norm2>
    12a4:	00 24       	eor	r0, r0
    12a6:	a0 e6       	ldi	r26, 0x60	; 96
    12a8:	40 ea       	ldi	r20, 0xA0	; 160
    12aa:	90 01       	movw	r18, r0
    12ac:	80 58       	subi	r24, 0x80	; 128
    12ae:	56 95       	lsr	r21
    12b0:	97 95       	ror	r25
    12b2:	28 f4       	brcc	.+10     	; 0x12be <sqrt+0x2c>
    12b4:	80 5c       	subi	r24, 0xC0	; 192
    12b6:	66 0f       	add	r22, r22
    12b8:	77 1f       	adc	r23, r23
    12ba:	88 1f       	adc	r24, r24
    12bc:	20 f0       	brcs	.+8      	; 0x12c6 <sqrt+0x34>
    12be:	26 17       	cp	r18, r22
    12c0:	37 07       	cpc	r19, r23
    12c2:	48 07       	cpc	r20, r24
    12c4:	30 f4       	brcc	.+12     	; 0x12d2 <sqrt+0x40>
    12c6:	62 1b       	sub	r22, r18
    12c8:	73 0b       	sbc	r23, r19
    12ca:	84 0b       	sbc	r24, r20
    12cc:	20 29       	or	r18, r0
    12ce:	31 29       	or	r19, r1
    12d0:	4a 2b       	or	r20, r26
    12d2:	a6 95       	lsr	r26
    12d4:	17 94       	ror	r1
    12d6:	07 94       	ror	r0
    12d8:	20 25       	eor	r18, r0
    12da:	31 25       	eor	r19, r1
    12dc:	4a 27       	eor	r20, r26
    12de:	58 f7       	brcc	.-42     	; 0x12b6 <sqrt+0x24>
    12e0:	66 0f       	add	r22, r22
    12e2:	77 1f       	adc	r23, r23
    12e4:	88 1f       	adc	r24, r24
    12e6:	20 f0       	brcs	.+8      	; 0x12f0 <sqrt+0x5e>
    12e8:	26 17       	cp	r18, r22
    12ea:	37 07       	cpc	r19, r23
    12ec:	48 07       	cpc	r20, r24
    12ee:	30 f4       	brcc	.+12     	; 0x12fc <sqrt+0x6a>
    12f0:	62 0b       	sbc	r22, r18
    12f2:	73 0b       	sbc	r23, r19
    12f4:	84 0b       	sbc	r24, r20
    12f6:	20 0d       	add	r18, r0
    12f8:	31 1d       	adc	r19, r1
    12fa:	41 1d       	adc	r20, r1
    12fc:	a0 95       	com	r26
    12fe:	81 f7       	brne	.-32     	; 0x12e0 <sqrt+0x4e>
    1300:	b9 01       	movw	r22, r18
    1302:	84 2f       	mov	r24, r20
    1304:	91 58       	subi	r25, 0x81	; 129
    1306:	88 0f       	add	r24, r24
    1308:	96 95       	lsr	r25
    130a:	87 95       	ror	r24
    130c:	08 95       	ret

0000130e <__fp_mpack>:
    130e:	9f 3f       	cpi	r25, 0xFF	; 255
    1310:	31 f0       	breq	.+12     	; 0x131e <__fp_mpack_finite+0xc>

00001312 <__fp_mpack_finite>:
    1312:	91 50       	subi	r25, 0x01	; 1
    1314:	20 f4       	brcc	.+8      	; 0x131e <__fp_mpack_finite+0xc>
    1316:	87 95       	ror	r24
    1318:	77 95       	ror	r23
    131a:	67 95       	ror	r22
    131c:	b7 95       	ror	r27
    131e:	88 0f       	add	r24, r24
    1320:	91 1d       	adc	r25, r1
    1322:	96 95       	lsr	r25
    1324:	87 95       	ror	r24
    1326:	97 f9       	bld	r25, 7
    1328:	08 95       	ret

0000132a <__fp_norm2>:
    132a:	91 50       	subi	r25, 0x01	; 1
    132c:	50 40       	sbci	r21, 0x00	; 0
    132e:	66 0f       	add	r22, r22
    1330:	77 1f       	adc	r23, r23
    1332:	88 1f       	adc	r24, r24
    1334:	d2 f7       	brpl	.-12     	; 0x132a <__fp_norm2>
    1336:	08 95       	ret
    1338:	be ce       	rjmp	.-644    	; 0x10b6 <__fp_nan>

0000133a <__fp_rempio2>:
    133a:	1d df       	rcall	.-454    	; 0x1176 <__fp_splitA>
    133c:	e8 f3       	brcs	.-6      	; 0x1338 <__fp_norm2+0xe>
    133e:	e8 94       	clt
    1340:	e0 e0       	ldi	r30, 0x00	; 0
    1342:	bb 27       	eor	r27, r27
    1344:	9f 57       	subi	r25, 0x7F	; 127
    1346:	f0 f0       	brcs	.+60     	; 0x1384 <__fp_rempio2+0x4a>
    1348:	2a ed       	ldi	r18, 0xDA	; 218
    134a:	3f e0       	ldi	r19, 0x0F	; 15
    134c:	49 ec       	ldi	r20, 0xC9	; 201
    134e:	06 c0       	rjmp	.+12     	; 0x135c <__fp_rempio2+0x22>
    1350:	ee 0f       	add	r30, r30
    1352:	bb 0f       	add	r27, r27
    1354:	66 1f       	adc	r22, r22
    1356:	77 1f       	adc	r23, r23
    1358:	88 1f       	adc	r24, r24
    135a:	28 f0       	brcs	.+10     	; 0x1366 <__fp_rempio2+0x2c>
    135c:	b2 3a       	cpi	r27, 0xA2	; 162
    135e:	62 07       	cpc	r22, r18
    1360:	73 07       	cpc	r23, r19
    1362:	84 07       	cpc	r24, r20
    1364:	28 f0       	brcs	.+10     	; 0x1370 <__fp_rempio2+0x36>
    1366:	b2 5a       	subi	r27, 0xA2	; 162
    1368:	62 0b       	sbc	r22, r18
    136a:	73 0b       	sbc	r23, r19
    136c:	84 0b       	sbc	r24, r20
    136e:	e3 95       	inc	r30
    1370:	9a 95       	dec	r25
    1372:	72 f7       	brpl	.-36     	; 0x1350 <__fp_rempio2+0x16>
    1374:	80 38       	cpi	r24, 0x80	; 128
    1376:	30 f4       	brcc	.+12     	; 0x1384 <__fp_rempio2+0x4a>
    1378:	9a 95       	dec	r25
    137a:	bb 0f       	add	r27, r27
    137c:	66 1f       	adc	r22, r22
    137e:	77 1f       	adc	r23, r23
    1380:	88 1f       	adc	r24, r24
    1382:	d2 f7       	brpl	.-12     	; 0x1378 <__fp_rempio2+0x3e>
    1384:	90 48       	sbci	r25, 0x80	; 128
    1386:	c5 cf       	rjmp	.-118    	; 0x1312 <__fp_mpack_finite>

00001388 <__fp_sinus>:
    1388:	ef 93       	push	r30
    138a:	e0 ff       	sbrs	r30, 0
    138c:	06 c0       	rjmp	.+12     	; 0x139a <__fp_sinus+0x12>
    138e:	a2 ea       	ldi	r26, 0xA2	; 162
    1390:	2a ed       	ldi	r18, 0xDA	; 218
    1392:	3f e0       	ldi	r19, 0x0F	; 15
    1394:	49 ec       	ldi	r20, 0xC9	; 201
    1396:	5f eb       	ldi	r21, 0xBF	; 191
    1398:	32 dd       	rcall	.-1436   	; 0xdfe <__addsf3x>
    139a:	d4 de       	rcall	.-600    	; 0x1144 <__fp_round>
    139c:	0f 90       	pop	r0
    139e:	03 94       	inc	r0
    13a0:	01 fc       	sbrc	r0, 1
    13a2:	90 58       	subi	r25, 0x80	; 128
    13a4:	e0 e2       	ldi	r30, 0x20	; 32
    13a6:	f1 e0       	ldi	r31, 0x01	; 1
    13a8:	ae ce       	rjmp	.-676    	; 0x1106 <__fp_powsodd>

000013aa <__divmodhi4>:
    13aa:	97 fb       	bst	r25, 7
    13ac:	07 2e       	mov	r0, r23
    13ae:	16 f4       	brtc	.+4      	; 0x13b4 <__divmodhi4+0xa>
    13b0:	00 94       	com	r0
    13b2:	06 d0       	rcall	.+12     	; 0x13c0 <__divmodhi4_neg1>
    13b4:	77 fd       	sbrc	r23, 7
    13b6:	08 d0       	rcall	.+16     	; 0x13c8 <__divmodhi4_neg2>
    13b8:	27 d0       	rcall	.+78     	; 0x1408 <__udivmodhi4>
    13ba:	07 fc       	sbrc	r0, 7
    13bc:	05 d0       	rcall	.+10     	; 0x13c8 <__divmodhi4_neg2>
    13be:	3e f4       	brtc	.+14     	; 0x13ce <__divmodhi4_exit>

000013c0 <__divmodhi4_neg1>:
    13c0:	90 95       	com	r25
    13c2:	81 95       	neg	r24
    13c4:	9f 4f       	sbci	r25, 0xFF	; 255
    13c6:	08 95       	ret

000013c8 <__divmodhi4_neg2>:
    13c8:	70 95       	com	r23
    13ca:	61 95       	neg	r22
    13cc:	7f 4f       	sbci	r23, 0xFF	; 255

000013ce <__divmodhi4_exit>:
    13ce:	08 95       	ret

000013d0 <__divmodsi4>:
    13d0:	05 2e       	mov	r0, r21
    13d2:	97 fb       	bst	r25, 7
    13d4:	16 f4       	brtc	.+4      	; 0x13da <__divmodsi4+0xa>
    13d6:	00 94       	com	r0
    13d8:	0f d0       	rcall	.+30     	; 0x13f8 <__negsi2>
    13da:	57 fd       	sbrc	r21, 7
    13dc:	05 d0       	rcall	.+10     	; 0x13e8 <__divmodsi4_neg2>
    13de:	28 d0       	rcall	.+80     	; 0x1430 <__udivmodsi4>
    13e0:	07 fc       	sbrc	r0, 7
    13e2:	02 d0       	rcall	.+4      	; 0x13e8 <__divmodsi4_neg2>
    13e4:	46 f4       	brtc	.+16     	; 0x13f6 <__divmodsi4_exit>
    13e6:	08 c0       	rjmp	.+16     	; 0x13f8 <__negsi2>

000013e8 <__divmodsi4_neg2>:
    13e8:	50 95       	com	r21
    13ea:	40 95       	com	r20
    13ec:	30 95       	com	r19
    13ee:	21 95       	neg	r18
    13f0:	3f 4f       	sbci	r19, 0xFF	; 255
    13f2:	4f 4f       	sbci	r20, 0xFF	; 255
    13f4:	5f 4f       	sbci	r21, 0xFF	; 255

000013f6 <__divmodsi4_exit>:
    13f6:	08 95       	ret

000013f8 <__negsi2>:
    13f8:	90 95       	com	r25
    13fa:	80 95       	com	r24
    13fc:	70 95       	com	r23
    13fe:	61 95       	neg	r22
    1400:	7f 4f       	sbci	r23, 0xFF	; 255
    1402:	8f 4f       	sbci	r24, 0xFF	; 255
    1404:	9f 4f       	sbci	r25, 0xFF	; 255
    1406:	08 95       	ret

00001408 <__udivmodhi4>:
    1408:	aa 1b       	sub	r26, r26
    140a:	bb 1b       	sub	r27, r27
    140c:	51 e1       	ldi	r21, 0x11	; 17
    140e:	07 c0       	rjmp	.+14     	; 0x141e <__udivmodhi4_ep>

00001410 <__udivmodhi4_loop>:
    1410:	aa 1f       	adc	r26, r26
    1412:	bb 1f       	adc	r27, r27
    1414:	a6 17       	cp	r26, r22
    1416:	b7 07       	cpc	r27, r23
    1418:	10 f0       	brcs	.+4      	; 0x141e <__udivmodhi4_ep>
    141a:	a6 1b       	sub	r26, r22
    141c:	b7 0b       	sbc	r27, r23

0000141e <__udivmodhi4_ep>:
    141e:	88 1f       	adc	r24, r24
    1420:	99 1f       	adc	r25, r25
    1422:	5a 95       	dec	r21
    1424:	a9 f7       	brne	.-22     	; 0x1410 <__udivmodhi4_loop>
    1426:	80 95       	com	r24
    1428:	90 95       	com	r25
    142a:	bc 01       	movw	r22, r24
    142c:	cd 01       	movw	r24, r26
    142e:	08 95       	ret

00001430 <__udivmodsi4>:
    1430:	a1 e2       	ldi	r26, 0x21	; 33
    1432:	1a 2e       	mov	r1, r26
    1434:	aa 1b       	sub	r26, r26
    1436:	bb 1b       	sub	r27, r27
    1438:	fd 01       	movw	r30, r26
    143a:	0d c0       	rjmp	.+26     	; 0x1456 <__udivmodsi4_ep>

0000143c <__udivmodsi4_loop>:
    143c:	aa 1f       	adc	r26, r26
    143e:	bb 1f       	adc	r27, r27
    1440:	ee 1f       	adc	r30, r30
    1442:	ff 1f       	adc	r31, r31
    1444:	a2 17       	cp	r26, r18
    1446:	b3 07       	cpc	r27, r19
    1448:	e4 07       	cpc	r30, r20
    144a:	f5 07       	cpc	r31, r21
    144c:	20 f0       	brcs	.+8      	; 0x1456 <__udivmodsi4_ep>
    144e:	a2 1b       	sub	r26, r18
    1450:	b3 0b       	sbc	r27, r19
    1452:	e4 0b       	sbc	r30, r20
    1454:	f5 0b       	sbc	r31, r21

00001456 <__udivmodsi4_ep>:
    1456:	66 1f       	adc	r22, r22
    1458:	77 1f       	adc	r23, r23
    145a:	88 1f       	adc	r24, r24
    145c:	99 1f       	adc	r25, r25
    145e:	1a 94       	dec	r1
    1460:	69 f7       	brne	.-38     	; 0x143c <__udivmodsi4_loop>
    1462:	60 95       	com	r22
    1464:	70 95       	com	r23
    1466:	80 95       	com	r24
    1468:	90 95       	com	r25
    146a:	9b 01       	movw	r18, r22
    146c:	ac 01       	movw	r20, r24
    146e:	bd 01       	movw	r22, r26
    1470:	cf 01       	movw	r24, r30
    1472:	08 95       	ret

00001474 <__itoa_ncheck>:
    1474:	bb 27       	eor	r27, r27
    1476:	4a 30       	cpi	r20, 0x0A	; 10
    1478:	31 f4       	brne	.+12     	; 0x1486 <__itoa_ncheck+0x12>
    147a:	99 23       	and	r25, r25
    147c:	22 f4       	brpl	.+8      	; 0x1486 <__itoa_ncheck+0x12>
    147e:	bd e2       	ldi	r27, 0x2D	; 45
    1480:	90 95       	com	r25
    1482:	81 95       	neg	r24
    1484:	9f 4f       	sbci	r25, 0xFF	; 255
    1486:	01 c0       	rjmp	.+2      	; 0x148a <__utoa_common>

00001488 <__utoa_ncheck>:
    1488:	bb 27       	eor	r27, r27

0000148a <__utoa_common>:
    148a:	fb 01       	movw	r30, r22
    148c:	55 27       	eor	r21, r21
    148e:	aa 27       	eor	r26, r26
    1490:	88 0f       	add	r24, r24
    1492:	99 1f       	adc	r25, r25
    1494:	aa 1f       	adc	r26, r26
    1496:	a4 17       	cp	r26, r20
    1498:	10 f0       	brcs	.+4      	; 0x149e <__utoa_common+0x14>
    149a:	a4 1b       	sub	r26, r20
    149c:	83 95       	inc	r24
    149e:	50 51       	subi	r21, 0x10	; 16
    14a0:	b9 f7       	brne	.-18     	; 0x1490 <__utoa_common+0x6>
    14a2:	a0 5d       	subi	r26, 0xD0	; 208
    14a4:	aa 33       	cpi	r26, 0x3A	; 58
    14a6:	08 f0       	brcs	.+2      	; 0x14aa <__utoa_common+0x20>
    14a8:	a9 5d       	subi	r26, 0xD9	; 217
    14aa:	a1 93       	st	Z+, r26
    14ac:	00 97       	sbiw	r24, 0x00	; 0
    14ae:	79 f7       	brne	.-34     	; 0x148e <__utoa_common+0x4>
    14b0:	b1 11       	cpse	r27, r1
    14b2:	b1 93       	st	Z+, r27
    14b4:	11 92       	st	Z+, r1
    14b6:	cb 01       	movw	r24, r22
    14b8:	e7 c3       	rjmp	.+1998   	; 0x1c88 <strrev>

000014ba <fdevopen>:
    14ba:	0f 93       	push	r16
    14bc:	1f 93       	push	r17
    14be:	cf 93       	push	r28
    14c0:	df 93       	push	r29
    14c2:	00 97       	sbiw	r24, 0x00	; 0
    14c4:	31 f4       	brne	.+12     	; 0x14d2 <fdevopen+0x18>
    14c6:	61 15       	cp	r22, r1
    14c8:	71 05       	cpc	r23, r1
    14ca:	19 f4       	brne	.+6      	; 0x14d2 <fdevopen+0x18>
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	39 c0       	rjmp	.+114    	; 0x1544 <fdevopen+0x8a>
    14d2:	8b 01       	movw	r16, r22
    14d4:	ec 01       	movw	r28, r24
    14d6:	6e e0       	ldi	r22, 0x0E	; 14
    14d8:	70 e0       	ldi	r23, 0x00	; 0
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	7c d2       	rcall	.+1272   	; 0x19d8 <calloc>
    14e0:	fc 01       	movw	r30, r24
    14e2:	89 2b       	or	r24, r25
    14e4:	99 f3       	breq	.-26     	; 0x14cc <fdevopen+0x12>
    14e6:	80 e8       	ldi	r24, 0x80	; 128
    14e8:	83 83       	std	Z+3, r24	; 0x03
    14ea:	01 15       	cp	r16, r1
    14ec:	11 05       	cpc	r17, r1
    14ee:	71 f0       	breq	.+28     	; 0x150c <fdevopen+0x52>
    14f0:	13 87       	std	Z+11, r17	; 0x0b
    14f2:	02 87       	std	Z+10, r16	; 0x0a
    14f4:	81 e8       	ldi	r24, 0x81	; 129
    14f6:	83 83       	std	Z+3, r24	; 0x03
    14f8:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <__iob>
    14fc:	90 91 7e 04 	lds	r25, 0x047E	; 0x80047e <__iob+0x1>
    1500:	89 2b       	or	r24, r25
    1502:	21 f4       	brne	.+8      	; 0x150c <fdevopen+0x52>
    1504:	f0 93 7e 04 	sts	0x047E, r31	; 0x80047e <__iob+0x1>
    1508:	e0 93 7d 04 	sts	0x047D, r30	; 0x80047d <__iob>
    150c:	20 97       	sbiw	r28, 0x00	; 0
    150e:	c9 f0       	breq	.+50     	; 0x1542 <fdevopen+0x88>
    1510:	d1 87       	std	Z+9, r29	; 0x09
    1512:	c0 87       	std	Z+8, r28	; 0x08
    1514:	83 81       	ldd	r24, Z+3	; 0x03
    1516:	82 60       	ori	r24, 0x02	; 2
    1518:	83 83       	std	Z+3, r24	; 0x03
    151a:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <__iob+0x2>
    151e:	90 91 80 04 	lds	r25, 0x0480	; 0x800480 <__iob+0x3>
    1522:	89 2b       	or	r24, r25
    1524:	71 f4       	brne	.+28     	; 0x1542 <fdevopen+0x88>
    1526:	f0 93 80 04 	sts	0x0480, r31	; 0x800480 <__iob+0x3>
    152a:	e0 93 7f 04 	sts	0x047F, r30	; 0x80047f <__iob+0x2>
    152e:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <__iob+0x4>
    1532:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <__iob+0x5>
    1536:	89 2b       	or	r24, r25
    1538:	21 f4       	brne	.+8      	; 0x1542 <fdevopen+0x88>
    153a:	f0 93 82 04 	sts	0x0482, r31	; 0x800482 <__iob+0x5>
    153e:	e0 93 81 04 	sts	0x0481, r30	; 0x800481 <__iob+0x4>
    1542:	cf 01       	movw	r24, r30
    1544:	df 91       	pop	r29
    1546:	cf 91       	pop	r28
    1548:	1f 91       	pop	r17
    154a:	0f 91       	pop	r16
    154c:	08 95       	ret

0000154e <printf>:
    154e:	cf 93       	push	r28
    1550:	df 93       	push	r29
    1552:	cd b7       	in	r28, 0x3d	; 61
    1554:	de b7       	in	r29, 0x3e	; 62
    1556:	ae 01       	movw	r20, r28
    1558:	4a 5f       	subi	r20, 0xFA	; 250
    155a:	5f 4f       	sbci	r21, 0xFF	; 255
    155c:	fa 01       	movw	r30, r20
    155e:	61 91       	ld	r22, Z+
    1560:	71 91       	ld	r23, Z+
    1562:	af 01       	movw	r20, r30
    1564:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <__iob+0x2>
    1568:	90 91 80 04 	lds	r25, 0x0480	; 0x800480 <__iob+0x3>
    156c:	38 d0       	rcall	.+112    	; 0x15de <vfprintf>
    156e:	df 91       	pop	r29
    1570:	cf 91       	pop	r28
    1572:	08 95       	ret

00001574 <putchar>:
    1574:	60 91 7f 04 	lds	r22, 0x047F	; 0x80047f <__iob+0x2>
    1578:	70 91 80 04 	lds	r23, 0x0480	; 0x800480 <__iob+0x3>
    157c:	95 c3       	rjmp	.+1834   	; 0x1ca8 <fputc>

0000157e <puts>:
    157e:	0f 93       	push	r16
    1580:	1f 93       	push	r17
    1582:	cf 93       	push	r28
    1584:	df 93       	push	r29
    1586:	e0 91 7f 04 	lds	r30, 0x047F	; 0x80047f <__iob+0x2>
    158a:	f0 91 80 04 	lds	r31, 0x0480	; 0x800480 <__iob+0x3>
    158e:	23 81       	ldd	r18, Z+3	; 0x03
    1590:	21 ff       	sbrs	r18, 1
    1592:	1b c0       	rjmp	.+54     	; 0x15ca <puts+0x4c>
    1594:	8c 01       	movw	r16, r24
    1596:	d0 e0       	ldi	r29, 0x00	; 0
    1598:	c0 e0       	ldi	r28, 0x00	; 0
    159a:	f8 01       	movw	r30, r16
    159c:	81 91       	ld	r24, Z+
    159e:	8f 01       	movw	r16, r30
    15a0:	60 91 7f 04 	lds	r22, 0x047F	; 0x80047f <__iob+0x2>
    15a4:	70 91 80 04 	lds	r23, 0x0480	; 0x800480 <__iob+0x3>
    15a8:	db 01       	movw	r26, r22
    15aa:	18 96       	adiw	r26, 0x08	; 8
    15ac:	ed 91       	ld	r30, X+
    15ae:	fc 91       	ld	r31, X
    15b0:	19 97       	sbiw	r26, 0x09	; 9
    15b2:	88 23       	and	r24, r24
    15b4:	31 f0       	breq	.+12     	; 0x15c2 <puts+0x44>
    15b6:	19 95       	eicall
    15b8:	89 2b       	or	r24, r25
    15ba:	79 f3       	breq	.-34     	; 0x159a <puts+0x1c>
    15bc:	df ef       	ldi	r29, 0xFF	; 255
    15be:	cf ef       	ldi	r28, 0xFF	; 255
    15c0:	ec cf       	rjmp	.-40     	; 0x159a <puts+0x1c>
    15c2:	8a e0       	ldi	r24, 0x0A	; 10
    15c4:	19 95       	eicall
    15c6:	89 2b       	or	r24, r25
    15c8:	19 f0       	breq	.+6      	; 0x15d0 <puts+0x52>
    15ca:	8f ef       	ldi	r24, 0xFF	; 255
    15cc:	9f ef       	ldi	r25, 0xFF	; 255
    15ce:	02 c0       	rjmp	.+4      	; 0x15d4 <puts+0x56>
    15d0:	8d 2f       	mov	r24, r29
    15d2:	9c 2f       	mov	r25, r28
    15d4:	df 91       	pop	r29
    15d6:	cf 91       	pop	r28
    15d8:	1f 91       	pop	r17
    15da:	0f 91       	pop	r16
    15dc:	08 95       	ret

000015de <vfprintf>:
    15de:	2f 92       	push	r2
    15e0:	3f 92       	push	r3
    15e2:	4f 92       	push	r4
    15e4:	5f 92       	push	r5
    15e6:	6f 92       	push	r6
    15e8:	7f 92       	push	r7
    15ea:	8f 92       	push	r8
    15ec:	9f 92       	push	r9
    15ee:	af 92       	push	r10
    15f0:	bf 92       	push	r11
    15f2:	cf 92       	push	r12
    15f4:	df 92       	push	r13
    15f6:	ef 92       	push	r14
    15f8:	ff 92       	push	r15
    15fa:	0f 93       	push	r16
    15fc:	1f 93       	push	r17
    15fe:	cf 93       	push	r28
    1600:	df 93       	push	r29
    1602:	cd b7       	in	r28, 0x3d	; 61
    1604:	de b7       	in	r29, 0x3e	; 62
    1606:	2b 97       	sbiw	r28, 0x0b	; 11
    1608:	0f b6       	in	r0, 0x3f	; 63
    160a:	f8 94       	cli
    160c:	de bf       	out	0x3e, r29	; 62
    160e:	0f be       	out	0x3f, r0	; 63
    1610:	cd bf       	out	0x3d, r28	; 61
    1612:	6c 01       	movw	r12, r24
    1614:	7b 01       	movw	r14, r22
    1616:	8a 01       	movw	r16, r20
    1618:	fc 01       	movw	r30, r24
    161a:	17 82       	std	Z+7, r1	; 0x07
    161c:	16 82       	std	Z+6, r1	; 0x06
    161e:	83 81       	ldd	r24, Z+3	; 0x03
    1620:	81 ff       	sbrs	r24, 1
    1622:	bf c1       	rjmp	.+894    	; 0x19a2 <vfprintf+0x3c4>
    1624:	ce 01       	movw	r24, r28
    1626:	01 96       	adiw	r24, 0x01	; 1
    1628:	3c 01       	movw	r6, r24
    162a:	f6 01       	movw	r30, r12
    162c:	93 81       	ldd	r25, Z+3	; 0x03
    162e:	f7 01       	movw	r30, r14
    1630:	93 fd       	sbrc	r25, 3
    1632:	85 91       	lpm	r24, Z+
    1634:	93 ff       	sbrs	r25, 3
    1636:	81 91       	ld	r24, Z+
    1638:	7f 01       	movw	r14, r30
    163a:	88 23       	and	r24, r24
    163c:	09 f4       	brne	.+2      	; 0x1640 <vfprintf+0x62>
    163e:	ad c1       	rjmp	.+858    	; 0x199a <vfprintf+0x3bc>
    1640:	85 32       	cpi	r24, 0x25	; 37
    1642:	39 f4       	brne	.+14     	; 0x1652 <vfprintf+0x74>
    1644:	93 fd       	sbrc	r25, 3
    1646:	85 91       	lpm	r24, Z+
    1648:	93 ff       	sbrs	r25, 3
    164a:	81 91       	ld	r24, Z+
    164c:	7f 01       	movw	r14, r30
    164e:	85 32       	cpi	r24, 0x25	; 37
    1650:	21 f4       	brne	.+8      	; 0x165a <vfprintf+0x7c>
    1652:	b6 01       	movw	r22, r12
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	28 d3       	rcall	.+1616   	; 0x1ca8 <fputc>
    1658:	e8 cf       	rjmp	.-48     	; 0x162a <vfprintf+0x4c>
    165a:	91 2c       	mov	r9, r1
    165c:	21 2c       	mov	r2, r1
    165e:	31 2c       	mov	r3, r1
    1660:	ff e1       	ldi	r31, 0x1F	; 31
    1662:	f3 15       	cp	r31, r3
    1664:	d8 f0       	brcs	.+54     	; 0x169c <vfprintf+0xbe>
    1666:	8b 32       	cpi	r24, 0x2B	; 43
    1668:	79 f0       	breq	.+30     	; 0x1688 <vfprintf+0xaa>
    166a:	38 f4       	brcc	.+14     	; 0x167a <vfprintf+0x9c>
    166c:	80 32       	cpi	r24, 0x20	; 32
    166e:	79 f0       	breq	.+30     	; 0x168e <vfprintf+0xb0>
    1670:	83 32       	cpi	r24, 0x23	; 35
    1672:	a1 f4       	brne	.+40     	; 0x169c <vfprintf+0xbe>
    1674:	23 2d       	mov	r18, r3
    1676:	20 61       	ori	r18, 0x10	; 16
    1678:	1d c0       	rjmp	.+58     	; 0x16b4 <vfprintf+0xd6>
    167a:	8d 32       	cpi	r24, 0x2D	; 45
    167c:	61 f0       	breq	.+24     	; 0x1696 <vfprintf+0xb8>
    167e:	80 33       	cpi	r24, 0x30	; 48
    1680:	69 f4       	brne	.+26     	; 0x169c <vfprintf+0xbe>
    1682:	23 2d       	mov	r18, r3
    1684:	21 60       	ori	r18, 0x01	; 1
    1686:	16 c0       	rjmp	.+44     	; 0x16b4 <vfprintf+0xd6>
    1688:	83 2d       	mov	r24, r3
    168a:	82 60       	ori	r24, 0x02	; 2
    168c:	38 2e       	mov	r3, r24
    168e:	e3 2d       	mov	r30, r3
    1690:	e4 60       	ori	r30, 0x04	; 4
    1692:	3e 2e       	mov	r3, r30
    1694:	2a c0       	rjmp	.+84     	; 0x16ea <vfprintf+0x10c>
    1696:	f3 2d       	mov	r31, r3
    1698:	f8 60       	ori	r31, 0x08	; 8
    169a:	1d c0       	rjmp	.+58     	; 0x16d6 <vfprintf+0xf8>
    169c:	37 fc       	sbrc	r3, 7
    169e:	2d c0       	rjmp	.+90     	; 0x16fa <vfprintf+0x11c>
    16a0:	20 ed       	ldi	r18, 0xD0	; 208
    16a2:	28 0f       	add	r18, r24
    16a4:	2a 30       	cpi	r18, 0x0A	; 10
    16a6:	40 f0       	brcs	.+16     	; 0x16b8 <vfprintf+0xda>
    16a8:	8e 32       	cpi	r24, 0x2E	; 46
    16aa:	b9 f4       	brne	.+46     	; 0x16da <vfprintf+0xfc>
    16ac:	36 fc       	sbrc	r3, 6
    16ae:	75 c1       	rjmp	.+746    	; 0x199a <vfprintf+0x3bc>
    16b0:	23 2d       	mov	r18, r3
    16b2:	20 64       	ori	r18, 0x40	; 64
    16b4:	32 2e       	mov	r3, r18
    16b6:	19 c0       	rjmp	.+50     	; 0x16ea <vfprintf+0x10c>
    16b8:	36 fe       	sbrs	r3, 6
    16ba:	06 c0       	rjmp	.+12     	; 0x16c8 <vfprintf+0xea>
    16bc:	8a e0       	ldi	r24, 0x0A	; 10
    16be:	98 9e       	mul	r9, r24
    16c0:	20 0d       	add	r18, r0
    16c2:	11 24       	eor	r1, r1
    16c4:	92 2e       	mov	r9, r18
    16c6:	11 c0       	rjmp	.+34     	; 0x16ea <vfprintf+0x10c>
    16c8:	ea e0       	ldi	r30, 0x0A	; 10
    16ca:	2e 9e       	mul	r2, r30
    16cc:	20 0d       	add	r18, r0
    16ce:	11 24       	eor	r1, r1
    16d0:	22 2e       	mov	r2, r18
    16d2:	f3 2d       	mov	r31, r3
    16d4:	f0 62       	ori	r31, 0x20	; 32
    16d6:	3f 2e       	mov	r3, r31
    16d8:	08 c0       	rjmp	.+16     	; 0x16ea <vfprintf+0x10c>
    16da:	8c 36       	cpi	r24, 0x6C	; 108
    16dc:	21 f4       	brne	.+8      	; 0x16e6 <vfprintf+0x108>
    16de:	83 2d       	mov	r24, r3
    16e0:	80 68       	ori	r24, 0x80	; 128
    16e2:	38 2e       	mov	r3, r24
    16e4:	02 c0       	rjmp	.+4      	; 0x16ea <vfprintf+0x10c>
    16e6:	88 36       	cpi	r24, 0x68	; 104
    16e8:	41 f4       	brne	.+16     	; 0x16fa <vfprintf+0x11c>
    16ea:	f7 01       	movw	r30, r14
    16ec:	93 fd       	sbrc	r25, 3
    16ee:	85 91       	lpm	r24, Z+
    16f0:	93 ff       	sbrs	r25, 3
    16f2:	81 91       	ld	r24, Z+
    16f4:	7f 01       	movw	r14, r30
    16f6:	81 11       	cpse	r24, r1
    16f8:	b3 cf       	rjmp	.-154    	; 0x1660 <vfprintf+0x82>
    16fa:	98 2f       	mov	r25, r24
    16fc:	9f 7d       	andi	r25, 0xDF	; 223
    16fe:	95 54       	subi	r25, 0x45	; 69
    1700:	93 30       	cpi	r25, 0x03	; 3
    1702:	28 f4       	brcc	.+10     	; 0x170e <vfprintf+0x130>
    1704:	0c 5f       	subi	r16, 0xFC	; 252
    1706:	1f 4f       	sbci	r17, 0xFF	; 255
    1708:	9f e3       	ldi	r25, 0x3F	; 63
    170a:	99 83       	std	Y+1, r25	; 0x01
    170c:	0d c0       	rjmp	.+26     	; 0x1728 <vfprintf+0x14a>
    170e:	83 36       	cpi	r24, 0x63	; 99
    1710:	31 f0       	breq	.+12     	; 0x171e <vfprintf+0x140>
    1712:	83 37       	cpi	r24, 0x73	; 115
    1714:	71 f0       	breq	.+28     	; 0x1732 <vfprintf+0x154>
    1716:	83 35       	cpi	r24, 0x53	; 83
    1718:	09 f0       	breq	.+2      	; 0x171c <vfprintf+0x13e>
    171a:	55 c0       	rjmp	.+170    	; 0x17c6 <vfprintf+0x1e8>
    171c:	20 c0       	rjmp	.+64     	; 0x175e <vfprintf+0x180>
    171e:	f8 01       	movw	r30, r16
    1720:	80 81       	ld	r24, Z
    1722:	89 83       	std	Y+1, r24	; 0x01
    1724:	0e 5f       	subi	r16, 0xFE	; 254
    1726:	1f 4f       	sbci	r17, 0xFF	; 255
    1728:	88 24       	eor	r8, r8
    172a:	83 94       	inc	r8
    172c:	91 2c       	mov	r9, r1
    172e:	53 01       	movw	r10, r6
    1730:	12 c0       	rjmp	.+36     	; 0x1756 <vfprintf+0x178>
    1732:	28 01       	movw	r4, r16
    1734:	f2 e0       	ldi	r31, 0x02	; 2
    1736:	4f 0e       	add	r4, r31
    1738:	51 1c       	adc	r5, r1
    173a:	f8 01       	movw	r30, r16
    173c:	a0 80       	ld	r10, Z
    173e:	b1 80       	ldd	r11, Z+1	; 0x01
    1740:	36 fe       	sbrs	r3, 6
    1742:	03 c0       	rjmp	.+6      	; 0x174a <vfprintf+0x16c>
    1744:	69 2d       	mov	r22, r9
    1746:	70 e0       	ldi	r23, 0x00	; 0
    1748:	02 c0       	rjmp	.+4      	; 0x174e <vfprintf+0x170>
    174a:	6f ef       	ldi	r22, 0xFF	; 255
    174c:	7f ef       	ldi	r23, 0xFF	; 255
    174e:	c5 01       	movw	r24, r10
    1750:	90 d2       	rcall	.+1312   	; 0x1c72 <strnlen>
    1752:	4c 01       	movw	r8, r24
    1754:	82 01       	movw	r16, r4
    1756:	f3 2d       	mov	r31, r3
    1758:	ff 77       	andi	r31, 0x7F	; 127
    175a:	3f 2e       	mov	r3, r31
    175c:	15 c0       	rjmp	.+42     	; 0x1788 <vfprintf+0x1aa>
    175e:	28 01       	movw	r4, r16
    1760:	22 e0       	ldi	r18, 0x02	; 2
    1762:	42 0e       	add	r4, r18
    1764:	51 1c       	adc	r5, r1
    1766:	f8 01       	movw	r30, r16
    1768:	a0 80       	ld	r10, Z
    176a:	b1 80       	ldd	r11, Z+1	; 0x01
    176c:	36 fe       	sbrs	r3, 6
    176e:	03 c0       	rjmp	.+6      	; 0x1776 <vfprintf+0x198>
    1770:	69 2d       	mov	r22, r9
    1772:	70 e0       	ldi	r23, 0x00	; 0
    1774:	02 c0       	rjmp	.+4      	; 0x177a <vfprintf+0x19c>
    1776:	6f ef       	ldi	r22, 0xFF	; 255
    1778:	7f ef       	ldi	r23, 0xFF	; 255
    177a:	c5 01       	movw	r24, r10
    177c:	68 d2       	rcall	.+1232   	; 0x1c4e <strnlen_P>
    177e:	4c 01       	movw	r8, r24
    1780:	f3 2d       	mov	r31, r3
    1782:	f0 68       	ori	r31, 0x80	; 128
    1784:	3f 2e       	mov	r3, r31
    1786:	82 01       	movw	r16, r4
    1788:	33 fc       	sbrc	r3, 3
    178a:	19 c0       	rjmp	.+50     	; 0x17be <vfprintf+0x1e0>
    178c:	82 2d       	mov	r24, r2
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	88 16       	cp	r8, r24
    1792:	99 06       	cpc	r9, r25
    1794:	a0 f4       	brcc	.+40     	; 0x17be <vfprintf+0x1e0>
    1796:	b6 01       	movw	r22, r12
    1798:	80 e2       	ldi	r24, 0x20	; 32
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	85 d2       	rcall	.+1290   	; 0x1ca8 <fputc>
    179e:	2a 94       	dec	r2
    17a0:	f5 cf       	rjmp	.-22     	; 0x178c <vfprintf+0x1ae>
    17a2:	f5 01       	movw	r30, r10
    17a4:	37 fc       	sbrc	r3, 7
    17a6:	85 91       	lpm	r24, Z+
    17a8:	37 fe       	sbrs	r3, 7
    17aa:	81 91       	ld	r24, Z+
    17ac:	5f 01       	movw	r10, r30
    17ae:	b6 01       	movw	r22, r12
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	7a d2       	rcall	.+1268   	; 0x1ca8 <fputc>
    17b4:	21 10       	cpse	r2, r1
    17b6:	2a 94       	dec	r2
    17b8:	21 e0       	ldi	r18, 0x01	; 1
    17ba:	82 1a       	sub	r8, r18
    17bc:	91 08       	sbc	r9, r1
    17be:	81 14       	cp	r8, r1
    17c0:	91 04       	cpc	r9, r1
    17c2:	79 f7       	brne	.-34     	; 0x17a2 <vfprintf+0x1c4>
    17c4:	e1 c0       	rjmp	.+450    	; 0x1988 <vfprintf+0x3aa>
    17c6:	84 36       	cpi	r24, 0x64	; 100
    17c8:	11 f0       	breq	.+4      	; 0x17ce <vfprintf+0x1f0>
    17ca:	89 36       	cpi	r24, 0x69	; 105
    17cc:	39 f5       	brne	.+78     	; 0x181c <vfprintf+0x23e>
    17ce:	f8 01       	movw	r30, r16
    17d0:	37 fe       	sbrs	r3, 7
    17d2:	07 c0       	rjmp	.+14     	; 0x17e2 <vfprintf+0x204>
    17d4:	60 81       	ld	r22, Z
    17d6:	71 81       	ldd	r23, Z+1	; 0x01
    17d8:	82 81       	ldd	r24, Z+2	; 0x02
    17da:	93 81       	ldd	r25, Z+3	; 0x03
    17dc:	0c 5f       	subi	r16, 0xFC	; 252
    17de:	1f 4f       	sbci	r17, 0xFF	; 255
    17e0:	08 c0       	rjmp	.+16     	; 0x17f2 <vfprintf+0x214>
    17e2:	60 81       	ld	r22, Z
    17e4:	71 81       	ldd	r23, Z+1	; 0x01
    17e6:	07 2e       	mov	r0, r23
    17e8:	00 0c       	add	r0, r0
    17ea:	88 0b       	sbc	r24, r24
    17ec:	99 0b       	sbc	r25, r25
    17ee:	0e 5f       	subi	r16, 0xFE	; 254
    17f0:	1f 4f       	sbci	r17, 0xFF	; 255
    17f2:	f3 2d       	mov	r31, r3
    17f4:	ff 76       	andi	r31, 0x6F	; 111
    17f6:	3f 2e       	mov	r3, r31
    17f8:	97 ff       	sbrs	r25, 7
    17fa:	09 c0       	rjmp	.+18     	; 0x180e <vfprintf+0x230>
    17fc:	90 95       	com	r25
    17fe:	80 95       	com	r24
    1800:	70 95       	com	r23
    1802:	61 95       	neg	r22
    1804:	7f 4f       	sbci	r23, 0xFF	; 255
    1806:	8f 4f       	sbci	r24, 0xFF	; 255
    1808:	9f 4f       	sbci	r25, 0xFF	; 255
    180a:	f0 68       	ori	r31, 0x80	; 128
    180c:	3f 2e       	mov	r3, r31
    180e:	2a e0       	ldi	r18, 0x0A	; 10
    1810:	30 e0       	ldi	r19, 0x00	; 0
    1812:	a3 01       	movw	r20, r6
    1814:	85 d2       	rcall	.+1290   	; 0x1d20 <__ultoa_invert>
    1816:	88 2e       	mov	r8, r24
    1818:	86 18       	sub	r8, r6
    181a:	44 c0       	rjmp	.+136    	; 0x18a4 <vfprintf+0x2c6>
    181c:	85 37       	cpi	r24, 0x75	; 117
    181e:	31 f4       	brne	.+12     	; 0x182c <vfprintf+0x24e>
    1820:	23 2d       	mov	r18, r3
    1822:	2f 7e       	andi	r18, 0xEF	; 239
    1824:	b2 2e       	mov	r11, r18
    1826:	2a e0       	ldi	r18, 0x0A	; 10
    1828:	30 e0       	ldi	r19, 0x00	; 0
    182a:	25 c0       	rjmp	.+74     	; 0x1876 <vfprintf+0x298>
    182c:	93 2d       	mov	r25, r3
    182e:	99 7f       	andi	r25, 0xF9	; 249
    1830:	b9 2e       	mov	r11, r25
    1832:	8f 36       	cpi	r24, 0x6F	; 111
    1834:	c1 f0       	breq	.+48     	; 0x1866 <vfprintf+0x288>
    1836:	18 f4       	brcc	.+6      	; 0x183e <vfprintf+0x260>
    1838:	88 35       	cpi	r24, 0x58	; 88
    183a:	79 f0       	breq	.+30     	; 0x185a <vfprintf+0x27c>
    183c:	ae c0       	rjmp	.+348    	; 0x199a <vfprintf+0x3bc>
    183e:	80 37       	cpi	r24, 0x70	; 112
    1840:	19 f0       	breq	.+6      	; 0x1848 <vfprintf+0x26a>
    1842:	88 37       	cpi	r24, 0x78	; 120
    1844:	21 f0       	breq	.+8      	; 0x184e <vfprintf+0x270>
    1846:	a9 c0       	rjmp	.+338    	; 0x199a <vfprintf+0x3bc>
    1848:	e9 2f       	mov	r30, r25
    184a:	e0 61       	ori	r30, 0x10	; 16
    184c:	be 2e       	mov	r11, r30
    184e:	b4 fe       	sbrs	r11, 4
    1850:	0d c0       	rjmp	.+26     	; 0x186c <vfprintf+0x28e>
    1852:	fb 2d       	mov	r31, r11
    1854:	f4 60       	ori	r31, 0x04	; 4
    1856:	bf 2e       	mov	r11, r31
    1858:	09 c0       	rjmp	.+18     	; 0x186c <vfprintf+0x28e>
    185a:	34 fe       	sbrs	r3, 4
    185c:	0a c0       	rjmp	.+20     	; 0x1872 <vfprintf+0x294>
    185e:	29 2f       	mov	r18, r25
    1860:	26 60       	ori	r18, 0x06	; 6
    1862:	b2 2e       	mov	r11, r18
    1864:	06 c0       	rjmp	.+12     	; 0x1872 <vfprintf+0x294>
    1866:	28 e0       	ldi	r18, 0x08	; 8
    1868:	30 e0       	ldi	r19, 0x00	; 0
    186a:	05 c0       	rjmp	.+10     	; 0x1876 <vfprintf+0x298>
    186c:	20 e1       	ldi	r18, 0x10	; 16
    186e:	30 e0       	ldi	r19, 0x00	; 0
    1870:	02 c0       	rjmp	.+4      	; 0x1876 <vfprintf+0x298>
    1872:	20 e1       	ldi	r18, 0x10	; 16
    1874:	32 e0       	ldi	r19, 0x02	; 2
    1876:	f8 01       	movw	r30, r16
    1878:	b7 fe       	sbrs	r11, 7
    187a:	07 c0       	rjmp	.+14     	; 0x188a <vfprintf+0x2ac>
    187c:	60 81       	ld	r22, Z
    187e:	71 81       	ldd	r23, Z+1	; 0x01
    1880:	82 81       	ldd	r24, Z+2	; 0x02
    1882:	93 81       	ldd	r25, Z+3	; 0x03
    1884:	0c 5f       	subi	r16, 0xFC	; 252
    1886:	1f 4f       	sbci	r17, 0xFF	; 255
    1888:	06 c0       	rjmp	.+12     	; 0x1896 <vfprintf+0x2b8>
    188a:	60 81       	ld	r22, Z
    188c:	71 81       	ldd	r23, Z+1	; 0x01
    188e:	80 e0       	ldi	r24, 0x00	; 0
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	0e 5f       	subi	r16, 0xFE	; 254
    1894:	1f 4f       	sbci	r17, 0xFF	; 255
    1896:	a3 01       	movw	r20, r6
    1898:	43 d2       	rcall	.+1158   	; 0x1d20 <__ultoa_invert>
    189a:	88 2e       	mov	r8, r24
    189c:	86 18       	sub	r8, r6
    189e:	fb 2d       	mov	r31, r11
    18a0:	ff 77       	andi	r31, 0x7F	; 127
    18a2:	3f 2e       	mov	r3, r31
    18a4:	36 fe       	sbrs	r3, 6
    18a6:	0d c0       	rjmp	.+26     	; 0x18c2 <vfprintf+0x2e4>
    18a8:	23 2d       	mov	r18, r3
    18aa:	2e 7f       	andi	r18, 0xFE	; 254
    18ac:	a2 2e       	mov	r10, r18
    18ae:	89 14       	cp	r8, r9
    18b0:	58 f4       	brcc	.+22     	; 0x18c8 <vfprintf+0x2ea>
    18b2:	34 fe       	sbrs	r3, 4
    18b4:	0b c0       	rjmp	.+22     	; 0x18cc <vfprintf+0x2ee>
    18b6:	32 fc       	sbrc	r3, 2
    18b8:	09 c0       	rjmp	.+18     	; 0x18cc <vfprintf+0x2ee>
    18ba:	83 2d       	mov	r24, r3
    18bc:	8e 7e       	andi	r24, 0xEE	; 238
    18be:	a8 2e       	mov	r10, r24
    18c0:	05 c0       	rjmp	.+10     	; 0x18cc <vfprintf+0x2ee>
    18c2:	b8 2c       	mov	r11, r8
    18c4:	a3 2c       	mov	r10, r3
    18c6:	03 c0       	rjmp	.+6      	; 0x18ce <vfprintf+0x2f0>
    18c8:	b8 2c       	mov	r11, r8
    18ca:	01 c0       	rjmp	.+2      	; 0x18ce <vfprintf+0x2f0>
    18cc:	b9 2c       	mov	r11, r9
    18ce:	a4 fe       	sbrs	r10, 4
    18d0:	0f c0       	rjmp	.+30     	; 0x18f0 <vfprintf+0x312>
    18d2:	fe 01       	movw	r30, r28
    18d4:	e8 0d       	add	r30, r8
    18d6:	f1 1d       	adc	r31, r1
    18d8:	80 81       	ld	r24, Z
    18da:	80 33       	cpi	r24, 0x30	; 48
    18dc:	21 f4       	brne	.+8      	; 0x18e6 <vfprintf+0x308>
    18de:	9a 2d       	mov	r25, r10
    18e0:	99 7e       	andi	r25, 0xE9	; 233
    18e2:	a9 2e       	mov	r10, r25
    18e4:	09 c0       	rjmp	.+18     	; 0x18f8 <vfprintf+0x31a>
    18e6:	a2 fe       	sbrs	r10, 2
    18e8:	06 c0       	rjmp	.+12     	; 0x18f6 <vfprintf+0x318>
    18ea:	b3 94       	inc	r11
    18ec:	b3 94       	inc	r11
    18ee:	04 c0       	rjmp	.+8      	; 0x18f8 <vfprintf+0x31a>
    18f0:	8a 2d       	mov	r24, r10
    18f2:	86 78       	andi	r24, 0x86	; 134
    18f4:	09 f0       	breq	.+2      	; 0x18f8 <vfprintf+0x31a>
    18f6:	b3 94       	inc	r11
    18f8:	a3 fc       	sbrc	r10, 3
    18fa:	10 c0       	rjmp	.+32     	; 0x191c <vfprintf+0x33e>
    18fc:	a0 fe       	sbrs	r10, 0
    18fe:	06 c0       	rjmp	.+12     	; 0x190c <vfprintf+0x32e>
    1900:	b2 14       	cp	r11, r2
    1902:	80 f4       	brcc	.+32     	; 0x1924 <vfprintf+0x346>
    1904:	28 0c       	add	r2, r8
    1906:	92 2c       	mov	r9, r2
    1908:	9b 18       	sub	r9, r11
    190a:	0d c0       	rjmp	.+26     	; 0x1926 <vfprintf+0x348>
    190c:	b2 14       	cp	r11, r2
    190e:	58 f4       	brcc	.+22     	; 0x1926 <vfprintf+0x348>
    1910:	b6 01       	movw	r22, r12
    1912:	80 e2       	ldi	r24, 0x20	; 32
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	c8 d1       	rcall	.+912    	; 0x1ca8 <fputc>
    1918:	b3 94       	inc	r11
    191a:	f8 cf       	rjmp	.-16     	; 0x190c <vfprintf+0x32e>
    191c:	b2 14       	cp	r11, r2
    191e:	18 f4       	brcc	.+6      	; 0x1926 <vfprintf+0x348>
    1920:	2b 18       	sub	r2, r11
    1922:	02 c0       	rjmp	.+4      	; 0x1928 <vfprintf+0x34a>
    1924:	98 2c       	mov	r9, r8
    1926:	21 2c       	mov	r2, r1
    1928:	a4 fe       	sbrs	r10, 4
    192a:	0f c0       	rjmp	.+30     	; 0x194a <vfprintf+0x36c>
    192c:	b6 01       	movw	r22, r12
    192e:	80 e3       	ldi	r24, 0x30	; 48
    1930:	90 e0       	ldi	r25, 0x00	; 0
    1932:	ba d1       	rcall	.+884    	; 0x1ca8 <fputc>
    1934:	a2 fe       	sbrs	r10, 2
    1936:	16 c0       	rjmp	.+44     	; 0x1964 <vfprintf+0x386>
    1938:	a1 fc       	sbrc	r10, 1
    193a:	03 c0       	rjmp	.+6      	; 0x1942 <vfprintf+0x364>
    193c:	88 e7       	ldi	r24, 0x78	; 120
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	02 c0       	rjmp	.+4      	; 0x1946 <vfprintf+0x368>
    1942:	88 e5       	ldi	r24, 0x58	; 88
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	b6 01       	movw	r22, r12
    1948:	0c c0       	rjmp	.+24     	; 0x1962 <vfprintf+0x384>
    194a:	8a 2d       	mov	r24, r10
    194c:	86 78       	andi	r24, 0x86	; 134
    194e:	51 f0       	breq	.+20     	; 0x1964 <vfprintf+0x386>
    1950:	a1 fe       	sbrs	r10, 1
    1952:	02 c0       	rjmp	.+4      	; 0x1958 <vfprintf+0x37a>
    1954:	8b e2       	ldi	r24, 0x2B	; 43
    1956:	01 c0       	rjmp	.+2      	; 0x195a <vfprintf+0x37c>
    1958:	80 e2       	ldi	r24, 0x20	; 32
    195a:	a7 fc       	sbrc	r10, 7
    195c:	8d e2       	ldi	r24, 0x2D	; 45
    195e:	b6 01       	movw	r22, r12
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	a2 d1       	rcall	.+836    	; 0x1ca8 <fputc>
    1964:	89 14       	cp	r8, r9
    1966:	30 f4       	brcc	.+12     	; 0x1974 <vfprintf+0x396>
    1968:	b6 01       	movw	r22, r12
    196a:	80 e3       	ldi	r24, 0x30	; 48
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	9c d1       	rcall	.+824    	; 0x1ca8 <fputc>
    1970:	9a 94       	dec	r9
    1972:	f8 cf       	rjmp	.-16     	; 0x1964 <vfprintf+0x386>
    1974:	8a 94       	dec	r8
    1976:	f3 01       	movw	r30, r6
    1978:	e8 0d       	add	r30, r8
    197a:	f1 1d       	adc	r31, r1
    197c:	80 81       	ld	r24, Z
    197e:	b6 01       	movw	r22, r12
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	92 d1       	rcall	.+804    	; 0x1ca8 <fputc>
    1984:	81 10       	cpse	r8, r1
    1986:	f6 cf       	rjmp	.-20     	; 0x1974 <vfprintf+0x396>
    1988:	22 20       	and	r2, r2
    198a:	09 f4       	brne	.+2      	; 0x198e <vfprintf+0x3b0>
    198c:	4e ce       	rjmp	.-868    	; 0x162a <vfprintf+0x4c>
    198e:	b6 01       	movw	r22, r12
    1990:	80 e2       	ldi	r24, 0x20	; 32
    1992:	90 e0       	ldi	r25, 0x00	; 0
    1994:	89 d1       	rcall	.+786    	; 0x1ca8 <fputc>
    1996:	2a 94       	dec	r2
    1998:	f7 cf       	rjmp	.-18     	; 0x1988 <vfprintf+0x3aa>
    199a:	f6 01       	movw	r30, r12
    199c:	86 81       	ldd	r24, Z+6	; 0x06
    199e:	97 81       	ldd	r25, Z+7	; 0x07
    19a0:	02 c0       	rjmp	.+4      	; 0x19a6 <vfprintf+0x3c8>
    19a2:	8f ef       	ldi	r24, 0xFF	; 255
    19a4:	9f ef       	ldi	r25, 0xFF	; 255
    19a6:	2b 96       	adiw	r28, 0x0b	; 11
    19a8:	0f b6       	in	r0, 0x3f	; 63
    19aa:	f8 94       	cli
    19ac:	de bf       	out	0x3e, r29	; 62
    19ae:	0f be       	out	0x3f, r0	; 63
    19b0:	cd bf       	out	0x3d, r28	; 61
    19b2:	df 91       	pop	r29
    19b4:	cf 91       	pop	r28
    19b6:	1f 91       	pop	r17
    19b8:	0f 91       	pop	r16
    19ba:	ff 90       	pop	r15
    19bc:	ef 90       	pop	r14
    19be:	df 90       	pop	r13
    19c0:	cf 90       	pop	r12
    19c2:	bf 90       	pop	r11
    19c4:	af 90       	pop	r10
    19c6:	9f 90       	pop	r9
    19c8:	8f 90       	pop	r8
    19ca:	7f 90       	pop	r7
    19cc:	6f 90       	pop	r6
    19ce:	5f 90       	pop	r5
    19d0:	4f 90       	pop	r4
    19d2:	3f 90       	pop	r3
    19d4:	2f 90       	pop	r2
    19d6:	08 95       	ret

000019d8 <calloc>:
    19d8:	0f 93       	push	r16
    19da:	1f 93       	push	r17
    19dc:	cf 93       	push	r28
    19de:	df 93       	push	r29
    19e0:	86 9f       	mul	r24, r22
    19e2:	80 01       	movw	r16, r0
    19e4:	87 9f       	mul	r24, r23
    19e6:	10 0d       	add	r17, r0
    19e8:	96 9f       	mul	r25, r22
    19ea:	10 0d       	add	r17, r0
    19ec:	11 24       	eor	r1, r1
    19ee:	c8 01       	movw	r24, r16
    19f0:	0d d0       	rcall	.+26     	; 0x1a0c <malloc>
    19f2:	ec 01       	movw	r28, r24
    19f4:	00 97       	sbiw	r24, 0x00	; 0
    19f6:	21 f0       	breq	.+8      	; 0x1a00 <calloc+0x28>
    19f8:	a8 01       	movw	r20, r16
    19fa:	60 e0       	ldi	r22, 0x00	; 0
    19fc:	70 e0       	ldi	r23, 0x00	; 0
    19fe:	32 d1       	rcall	.+612    	; 0x1c64 <memset>
    1a00:	ce 01       	movw	r24, r28
    1a02:	df 91       	pop	r29
    1a04:	cf 91       	pop	r28
    1a06:	1f 91       	pop	r17
    1a08:	0f 91       	pop	r16
    1a0a:	08 95       	ret

00001a0c <malloc>:
    1a0c:	0f 93       	push	r16
    1a0e:	1f 93       	push	r17
    1a10:	cf 93       	push	r28
    1a12:	df 93       	push	r29
    1a14:	82 30       	cpi	r24, 0x02	; 2
    1a16:	91 05       	cpc	r25, r1
    1a18:	10 f4       	brcc	.+4      	; 0x1a1e <malloc+0x12>
    1a1a:	82 e0       	ldi	r24, 0x02	; 2
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	e0 91 85 04 	lds	r30, 0x0485	; 0x800485 <__flp>
    1a22:	f0 91 86 04 	lds	r31, 0x0486	; 0x800486 <__flp+0x1>
    1a26:	20 e0       	ldi	r18, 0x00	; 0
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	a0 e0       	ldi	r26, 0x00	; 0
    1a2c:	b0 e0       	ldi	r27, 0x00	; 0
    1a2e:	30 97       	sbiw	r30, 0x00	; 0
    1a30:	19 f1       	breq	.+70     	; 0x1a78 <malloc+0x6c>
    1a32:	40 81       	ld	r20, Z
    1a34:	51 81       	ldd	r21, Z+1	; 0x01
    1a36:	02 81       	ldd	r16, Z+2	; 0x02
    1a38:	13 81       	ldd	r17, Z+3	; 0x03
    1a3a:	48 17       	cp	r20, r24
    1a3c:	59 07       	cpc	r21, r25
    1a3e:	c8 f0       	brcs	.+50     	; 0x1a72 <malloc+0x66>
    1a40:	84 17       	cp	r24, r20
    1a42:	95 07       	cpc	r25, r21
    1a44:	69 f4       	brne	.+26     	; 0x1a60 <malloc+0x54>
    1a46:	10 97       	sbiw	r26, 0x00	; 0
    1a48:	31 f0       	breq	.+12     	; 0x1a56 <malloc+0x4a>
    1a4a:	12 96       	adiw	r26, 0x02	; 2
    1a4c:	0c 93       	st	X, r16
    1a4e:	12 97       	sbiw	r26, 0x02	; 2
    1a50:	13 96       	adiw	r26, 0x03	; 3
    1a52:	1c 93       	st	X, r17
    1a54:	27 c0       	rjmp	.+78     	; 0x1aa4 <malloc+0x98>
    1a56:	00 93 85 04 	sts	0x0485, r16	; 0x800485 <__flp>
    1a5a:	10 93 86 04 	sts	0x0486, r17	; 0x800486 <__flp+0x1>
    1a5e:	22 c0       	rjmp	.+68     	; 0x1aa4 <malloc+0x98>
    1a60:	21 15       	cp	r18, r1
    1a62:	31 05       	cpc	r19, r1
    1a64:	19 f0       	breq	.+6      	; 0x1a6c <malloc+0x60>
    1a66:	42 17       	cp	r20, r18
    1a68:	53 07       	cpc	r21, r19
    1a6a:	18 f4       	brcc	.+6      	; 0x1a72 <malloc+0x66>
    1a6c:	9a 01       	movw	r18, r20
    1a6e:	bd 01       	movw	r22, r26
    1a70:	ef 01       	movw	r28, r30
    1a72:	df 01       	movw	r26, r30
    1a74:	f8 01       	movw	r30, r16
    1a76:	db cf       	rjmp	.-74     	; 0x1a2e <malloc+0x22>
    1a78:	21 15       	cp	r18, r1
    1a7a:	31 05       	cpc	r19, r1
    1a7c:	f9 f0       	breq	.+62     	; 0x1abc <malloc+0xb0>
    1a7e:	28 1b       	sub	r18, r24
    1a80:	39 0b       	sbc	r19, r25
    1a82:	24 30       	cpi	r18, 0x04	; 4
    1a84:	31 05       	cpc	r19, r1
    1a86:	80 f4       	brcc	.+32     	; 0x1aa8 <malloc+0x9c>
    1a88:	8a 81       	ldd	r24, Y+2	; 0x02
    1a8a:	9b 81       	ldd	r25, Y+3	; 0x03
    1a8c:	61 15       	cp	r22, r1
    1a8e:	71 05       	cpc	r23, r1
    1a90:	21 f0       	breq	.+8      	; 0x1a9a <malloc+0x8e>
    1a92:	fb 01       	movw	r30, r22
    1a94:	93 83       	std	Z+3, r25	; 0x03
    1a96:	82 83       	std	Z+2, r24	; 0x02
    1a98:	04 c0       	rjmp	.+8      	; 0x1aa2 <malloc+0x96>
    1a9a:	90 93 86 04 	sts	0x0486, r25	; 0x800486 <__flp+0x1>
    1a9e:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <__flp>
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	32 96       	adiw	r30, 0x02	; 2
    1aa6:	44 c0       	rjmp	.+136    	; 0x1b30 <malloc+0x124>
    1aa8:	fe 01       	movw	r30, r28
    1aaa:	e2 0f       	add	r30, r18
    1aac:	f3 1f       	adc	r31, r19
    1aae:	81 93       	st	Z+, r24
    1ab0:	91 93       	st	Z+, r25
    1ab2:	22 50       	subi	r18, 0x02	; 2
    1ab4:	31 09       	sbc	r19, r1
    1ab6:	39 83       	std	Y+1, r19	; 0x01
    1ab8:	28 83       	st	Y, r18
    1aba:	3a c0       	rjmp	.+116    	; 0x1b30 <malloc+0x124>
    1abc:	20 91 83 04 	lds	r18, 0x0483	; 0x800483 <__brkval>
    1ac0:	30 91 84 04 	lds	r19, 0x0484	; 0x800484 <__brkval+0x1>
    1ac4:	23 2b       	or	r18, r19
    1ac6:	41 f4       	brne	.+16     	; 0x1ad8 <malloc+0xcc>
    1ac8:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1acc:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    1ad0:	30 93 84 04 	sts	0x0484, r19	; 0x800484 <__brkval+0x1>
    1ad4:	20 93 83 04 	sts	0x0483, r18	; 0x800483 <__brkval>
    1ad8:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1adc:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    1ae0:	21 15       	cp	r18, r1
    1ae2:	31 05       	cpc	r19, r1
    1ae4:	41 f4       	brne	.+16     	; 0x1af6 <malloc+0xea>
    1ae6:	2d b7       	in	r18, 0x3d	; 61
    1ae8:	3e b7       	in	r19, 0x3e	; 62
    1aea:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1aee:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    1af2:	24 1b       	sub	r18, r20
    1af4:	35 0b       	sbc	r19, r21
    1af6:	e0 91 83 04 	lds	r30, 0x0483	; 0x800483 <__brkval>
    1afa:	f0 91 84 04 	lds	r31, 0x0484	; 0x800484 <__brkval+0x1>
    1afe:	e2 17       	cp	r30, r18
    1b00:	f3 07       	cpc	r31, r19
    1b02:	a0 f4       	brcc	.+40     	; 0x1b2c <malloc+0x120>
    1b04:	2e 1b       	sub	r18, r30
    1b06:	3f 0b       	sbc	r19, r31
    1b08:	28 17       	cp	r18, r24
    1b0a:	39 07       	cpc	r19, r25
    1b0c:	78 f0       	brcs	.+30     	; 0x1b2c <malloc+0x120>
    1b0e:	ac 01       	movw	r20, r24
    1b10:	4e 5f       	subi	r20, 0xFE	; 254
    1b12:	5f 4f       	sbci	r21, 0xFF	; 255
    1b14:	24 17       	cp	r18, r20
    1b16:	35 07       	cpc	r19, r21
    1b18:	48 f0       	brcs	.+18     	; 0x1b2c <malloc+0x120>
    1b1a:	4e 0f       	add	r20, r30
    1b1c:	5f 1f       	adc	r21, r31
    1b1e:	50 93 84 04 	sts	0x0484, r21	; 0x800484 <__brkval+0x1>
    1b22:	40 93 83 04 	sts	0x0483, r20	; 0x800483 <__brkval>
    1b26:	81 93       	st	Z+, r24
    1b28:	91 93       	st	Z+, r25
    1b2a:	02 c0       	rjmp	.+4      	; 0x1b30 <malloc+0x124>
    1b2c:	e0 e0       	ldi	r30, 0x00	; 0
    1b2e:	f0 e0       	ldi	r31, 0x00	; 0
    1b30:	cf 01       	movw	r24, r30
    1b32:	df 91       	pop	r29
    1b34:	cf 91       	pop	r28
    1b36:	1f 91       	pop	r17
    1b38:	0f 91       	pop	r16
    1b3a:	08 95       	ret

00001b3c <free>:
    1b3c:	cf 93       	push	r28
    1b3e:	df 93       	push	r29
    1b40:	00 97       	sbiw	r24, 0x00	; 0
    1b42:	09 f4       	brne	.+2      	; 0x1b46 <free+0xa>
    1b44:	81 c0       	rjmp	.+258    	; 0x1c48 <free+0x10c>
    1b46:	fc 01       	movw	r30, r24
    1b48:	32 97       	sbiw	r30, 0x02	; 2
    1b4a:	13 82       	std	Z+3, r1	; 0x03
    1b4c:	12 82       	std	Z+2, r1	; 0x02
    1b4e:	a0 91 85 04 	lds	r26, 0x0485	; 0x800485 <__flp>
    1b52:	b0 91 86 04 	lds	r27, 0x0486	; 0x800486 <__flp+0x1>
    1b56:	10 97       	sbiw	r26, 0x00	; 0
    1b58:	81 f4       	brne	.+32     	; 0x1b7a <free+0x3e>
    1b5a:	20 81       	ld	r18, Z
    1b5c:	31 81       	ldd	r19, Z+1	; 0x01
    1b5e:	82 0f       	add	r24, r18
    1b60:	93 1f       	adc	r25, r19
    1b62:	20 91 83 04 	lds	r18, 0x0483	; 0x800483 <__brkval>
    1b66:	30 91 84 04 	lds	r19, 0x0484	; 0x800484 <__brkval+0x1>
    1b6a:	28 17       	cp	r18, r24
    1b6c:	39 07       	cpc	r19, r25
    1b6e:	51 f5       	brne	.+84     	; 0x1bc4 <free+0x88>
    1b70:	f0 93 84 04 	sts	0x0484, r31	; 0x800484 <__brkval+0x1>
    1b74:	e0 93 83 04 	sts	0x0483, r30	; 0x800483 <__brkval>
    1b78:	67 c0       	rjmp	.+206    	; 0x1c48 <free+0x10c>
    1b7a:	ed 01       	movw	r28, r26
    1b7c:	20 e0       	ldi	r18, 0x00	; 0
    1b7e:	30 e0       	ldi	r19, 0x00	; 0
    1b80:	ce 17       	cp	r28, r30
    1b82:	df 07       	cpc	r29, r31
    1b84:	40 f4       	brcc	.+16     	; 0x1b96 <free+0x5a>
    1b86:	4a 81       	ldd	r20, Y+2	; 0x02
    1b88:	5b 81       	ldd	r21, Y+3	; 0x03
    1b8a:	9e 01       	movw	r18, r28
    1b8c:	41 15       	cp	r20, r1
    1b8e:	51 05       	cpc	r21, r1
    1b90:	f1 f0       	breq	.+60     	; 0x1bce <free+0x92>
    1b92:	ea 01       	movw	r28, r20
    1b94:	f5 cf       	rjmp	.-22     	; 0x1b80 <free+0x44>
    1b96:	d3 83       	std	Z+3, r29	; 0x03
    1b98:	c2 83       	std	Z+2, r28	; 0x02
    1b9a:	40 81       	ld	r20, Z
    1b9c:	51 81       	ldd	r21, Z+1	; 0x01
    1b9e:	84 0f       	add	r24, r20
    1ba0:	95 1f       	adc	r25, r21
    1ba2:	c8 17       	cp	r28, r24
    1ba4:	d9 07       	cpc	r29, r25
    1ba6:	59 f4       	brne	.+22     	; 0x1bbe <free+0x82>
    1ba8:	88 81       	ld	r24, Y
    1baa:	99 81       	ldd	r25, Y+1	; 0x01
    1bac:	84 0f       	add	r24, r20
    1bae:	95 1f       	adc	r25, r21
    1bb0:	02 96       	adiw	r24, 0x02	; 2
    1bb2:	91 83       	std	Z+1, r25	; 0x01
    1bb4:	80 83       	st	Z, r24
    1bb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb8:	9b 81       	ldd	r25, Y+3	; 0x03
    1bba:	93 83       	std	Z+3, r25	; 0x03
    1bbc:	82 83       	std	Z+2, r24	; 0x02
    1bbe:	21 15       	cp	r18, r1
    1bc0:	31 05       	cpc	r19, r1
    1bc2:	29 f4       	brne	.+10     	; 0x1bce <free+0x92>
    1bc4:	f0 93 86 04 	sts	0x0486, r31	; 0x800486 <__flp+0x1>
    1bc8:	e0 93 85 04 	sts	0x0485, r30	; 0x800485 <__flp>
    1bcc:	3d c0       	rjmp	.+122    	; 0x1c48 <free+0x10c>
    1bce:	e9 01       	movw	r28, r18
    1bd0:	fb 83       	std	Y+3, r31	; 0x03
    1bd2:	ea 83       	std	Y+2, r30	; 0x02
    1bd4:	49 91       	ld	r20, Y+
    1bd6:	59 91       	ld	r21, Y+
    1bd8:	c4 0f       	add	r28, r20
    1bda:	d5 1f       	adc	r29, r21
    1bdc:	ec 17       	cp	r30, r28
    1bde:	fd 07       	cpc	r31, r29
    1be0:	61 f4       	brne	.+24     	; 0x1bfa <free+0xbe>
    1be2:	80 81       	ld	r24, Z
    1be4:	91 81       	ldd	r25, Z+1	; 0x01
    1be6:	84 0f       	add	r24, r20
    1be8:	95 1f       	adc	r25, r21
    1bea:	02 96       	adiw	r24, 0x02	; 2
    1bec:	e9 01       	movw	r28, r18
    1bee:	99 83       	std	Y+1, r25	; 0x01
    1bf0:	88 83       	st	Y, r24
    1bf2:	82 81       	ldd	r24, Z+2	; 0x02
    1bf4:	93 81       	ldd	r25, Z+3	; 0x03
    1bf6:	9b 83       	std	Y+3, r25	; 0x03
    1bf8:	8a 83       	std	Y+2, r24	; 0x02
    1bfa:	e0 e0       	ldi	r30, 0x00	; 0
    1bfc:	f0 e0       	ldi	r31, 0x00	; 0
    1bfe:	12 96       	adiw	r26, 0x02	; 2
    1c00:	8d 91       	ld	r24, X+
    1c02:	9c 91       	ld	r25, X
    1c04:	13 97       	sbiw	r26, 0x03	; 3
    1c06:	00 97       	sbiw	r24, 0x00	; 0
    1c08:	19 f0       	breq	.+6      	; 0x1c10 <free+0xd4>
    1c0a:	fd 01       	movw	r30, r26
    1c0c:	dc 01       	movw	r26, r24
    1c0e:	f7 cf       	rjmp	.-18     	; 0x1bfe <free+0xc2>
    1c10:	8d 91       	ld	r24, X+
    1c12:	9c 91       	ld	r25, X
    1c14:	11 97       	sbiw	r26, 0x01	; 1
    1c16:	9d 01       	movw	r18, r26
    1c18:	2e 5f       	subi	r18, 0xFE	; 254
    1c1a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c1c:	82 0f       	add	r24, r18
    1c1e:	93 1f       	adc	r25, r19
    1c20:	20 91 83 04 	lds	r18, 0x0483	; 0x800483 <__brkval>
    1c24:	30 91 84 04 	lds	r19, 0x0484	; 0x800484 <__brkval+0x1>
    1c28:	28 17       	cp	r18, r24
    1c2a:	39 07       	cpc	r19, r25
    1c2c:	69 f4       	brne	.+26     	; 0x1c48 <free+0x10c>
    1c2e:	30 97       	sbiw	r30, 0x00	; 0
    1c30:	29 f4       	brne	.+10     	; 0x1c3c <free+0x100>
    1c32:	10 92 86 04 	sts	0x0486, r1	; 0x800486 <__flp+0x1>
    1c36:	10 92 85 04 	sts	0x0485, r1	; 0x800485 <__flp>
    1c3a:	02 c0       	rjmp	.+4      	; 0x1c40 <free+0x104>
    1c3c:	13 82       	std	Z+3, r1	; 0x03
    1c3e:	12 82       	std	Z+2, r1	; 0x02
    1c40:	b0 93 84 04 	sts	0x0484, r27	; 0x800484 <__brkval+0x1>
    1c44:	a0 93 83 04 	sts	0x0483, r26	; 0x800483 <__brkval>
    1c48:	df 91       	pop	r29
    1c4a:	cf 91       	pop	r28
    1c4c:	08 95       	ret

00001c4e <strnlen_P>:
    1c4e:	fc 01       	movw	r30, r24
    1c50:	05 90       	lpm	r0, Z+
    1c52:	61 50       	subi	r22, 0x01	; 1
    1c54:	70 40       	sbci	r23, 0x00	; 0
    1c56:	01 10       	cpse	r0, r1
    1c58:	d8 f7       	brcc	.-10     	; 0x1c50 <strnlen_P+0x2>
    1c5a:	80 95       	com	r24
    1c5c:	90 95       	com	r25
    1c5e:	8e 0f       	add	r24, r30
    1c60:	9f 1f       	adc	r25, r31
    1c62:	08 95       	ret

00001c64 <memset>:
    1c64:	dc 01       	movw	r26, r24
    1c66:	01 c0       	rjmp	.+2      	; 0x1c6a <memset+0x6>
    1c68:	6d 93       	st	X+, r22
    1c6a:	41 50       	subi	r20, 0x01	; 1
    1c6c:	50 40       	sbci	r21, 0x00	; 0
    1c6e:	e0 f7       	brcc	.-8      	; 0x1c68 <memset+0x4>
    1c70:	08 95       	ret

00001c72 <strnlen>:
    1c72:	fc 01       	movw	r30, r24
    1c74:	61 50       	subi	r22, 0x01	; 1
    1c76:	70 40       	sbci	r23, 0x00	; 0
    1c78:	01 90       	ld	r0, Z+
    1c7a:	01 10       	cpse	r0, r1
    1c7c:	d8 f7       	brcc	.-10     	; 0x1c74 <strnlen+0x2>
    1c7e:	80 95       	com	r24
    1c80:	90 95       	com	r25
    1c82:	8e 0f       	add	r24, r30
    1c84:	9f 1f       	adc	r25, r31
    1c86:	08 95       	ret

00001c88 <strrev>:
    1c88:	dc 01       	movw	r26, r24
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	67 2f       	mov	r22, r23
    1c8e:	71 91       	ld	r23, Z+
    1c90:	77 23       	and	r23, r23
    1c92:	e1 f7       	brne	.-8      	; 0x1c8c <strrev+0x4>
    1c94:	32 97       	sbiw	r30, 0x02	; 2
    1c96:	04 c0       	rjmp	.+8      	; 0x1ca0 <strrev+0x18>
    1c98:	7c 91       	ld	r23, X
    1c9a:	6d 93       	st	X+, r22
    1c9c:	70 83       	st	Z, r23
    1c9e:	62 91       	ld	r22, -Z
    1ca0:	ae 17       	cp	r26, r30
    1ca2:	bf 07       	cpc	r27, r31
    1ca4:	c8 f3       	brcs	.-14     	; 0x1c98 <strrev+0x10>
    1ca6:	08 95       	ret

00001ca8 <fputc>:
    1ca8:	0f 93       	push	r16
    1caa:	1f 93       	push	r17
    1cac:	cf 93       	push	r28
    1cae:	df 93       	push	r29
    1cb0:	fb 01       	movw	r30, r22
    1cb2:	23 81       	ldd	r18, Z+3	; 0x03
    1cb4:	21 fd       	sbrc	r18, 1
    1cb6:	03 c0       	rjmp	.+6      	; 0x1cbe <fputc+0x16>
    1cb8:	8f ef       	ldi	r24, 0xFF	; 255
    1cba:	9f ef       	ldi	r25, 0xFF	; 255
    1cbc:	2c c0       	rjmp	.+88     	; 0x1d16 <fputc+0x6e>
    1cbe:	22 ff       	sbrs	r18, 2
    1cc0:	16 c0       	rjmp	.+44     	; 0x1cee <fputc+0x46>
    1cc2:	46 81       	ldd	r20, Z+6	; 0x06
    1cc4:	57 81       	ldd	r21, Z+7	; 0x07
    1cc6:	24 81       	ldd	r18, Z+4	; 0x04
    1cc8:	35 81       	ldd	r19, Z+5	; 0x05
    1cca:	42 17       	cp	r20, r18
    1ccc:	53 07       	cpc	r21, r19
    1cce:	44 f4       	brge	.+16     	; 0x1ce0 <fputc+0x38>
    1cd0:	a0 81       	ld	r26, Z
    1cd2:	b1 81       	ldd	r27, Z+1	; 0x01
    1cd4:	9d 01       	movw	r18, r26
    1cd6:	2f 5f       	subi	r18, 0xFF	; 255
    1cd8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cda:	31 83       	std	Z+1, r19	; 0x01
    1cdc:	20 83       	st	Z, r18
    1cde:	8c 93       	st	X, r24
    1ce0:	26 81       	ldd	r18, Z+6	; 0x06
    1ce2:	37 81       	ldd	r19, Z+7	; 0x07
    1ce4:	2f 5f       	subi	r18, 0xFF	; 255
    1ce6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ce8:	37 83       	std	Z+7, r19	; 0x07
    1cea:	26 83       	std	Z+6, r18	; 0x06
    1cec:	14 c0       	rjmp	.+40     	; 0x1d16 <fputc+0x6e>
    1cee:	8b 01       	movw	r16, r22
    1cf0:	ec 01       	movw	r28, r24
    1cf2:	fb 01       	movw	r30, r22
    1cf4:	00 84       	ldd	r0, Z+8	; 0x08
    1cf6:	f1 85       	ldd	r31, Z+9	; 0x09
    1cf8:	e0 2d       	mov	r30, r0
    1cfa:	19 95       	eicall
    1cfc:	89 2b       	or	r24, r25
    1cfe:	e1 f6       	brne	.-72     	; 0x1cb8 <fputc+0x10>
    1d00:	d8 01       	movw	r26, r16
    1d02:	16 96       	adiw	r26, 0x06	; 6
    1d04:	8d 91       	ld	r24, X+
    1d06:	9c 91       	ld	r25, X
    1d08:	17 97       	sbiw	r26, 0x07	; 7
    1d0a:	01 96       	adiw	r24, 0x01	; 1
    1d0c:	17 96       	adiw	r26, 0x07	; 7
    1d0e:	9c 93       	st	X, r25
    1d10:	8e 93       	st	-X, r24
    1d12:	16 97       	sbiw	r26, 0x06	; 6
    1d14:	ce 01       	movw	r24, r28
    1d16:	df 91       	pop	r29
    1d18:	cf 91       	pop	r28
    1d1a:	1f 91       	pop	r17
    1d1c:	0f 91       	pop	r16
    1d1e:	08 95       	ret

00001d20 <__ultoa_invert>:
    1d20:	fa 01       	movw	r30, r20
    1d22:	aa 27       	eor	r26, r26
    1d24:	28 30       	cpi	r18, 0x08	; 8
    1d26:	51 f1       	breq	.+84     	; 0x1d7c <__ultoa_invert+0x5c>
    1d28:	20 31       	cpi	r18, 0x10	; 16
    1d2a:	81 f1       	breq	.+96     	; 0x1d8c <__ultoa_invert+0x6c>
    1d2c:	e8 94       	clt
    1d2e:	6f 93       	push	r22
    1d30:	6e 7f       	andi	r22, 0xFE	; 254
    1d32:	6e 5f       	subi	r22, 0xFE	; 254
    1d34:	7f 4f       	sbci	r23, 0xFF	; 255
    1d36:	8f 4f       	sbci	r24, 0xFF	; 255
    1d38:	9f 4f       	sbci	r25, 0xFF	; 255
    1d3a:	af 4f       	sbci	r26, 0xFF	; 255
    1d3c:	b1 e0       	ldi	r27, 0x01	; 1
    1d3e:	3e d0       	rcall	.+124    	; 0x1dbc <__ultoa_invert+0x9c>
    1d40:	b4 e0       	ldi	r27, 0x04	; 4
    1d42:	3c d0       	rcall	.+120    	; 0x1dbc <__ultoa_invert+0x9c>
    1d44:	67 0f       	add	r22, r23
    1d46:	78 1f       	adc	r23, r24
    1d48:	89 1f       	adc	r24, r25
    1d4a:	9a 1f       	adc	r25, r26
    1d4c:	a1 1d       	adc	r26, r1
    1d4e:	68 0f       	add	r22, r24
    1d50:	79 1f       	adc	r23, r25
    1d52:	8a 1f       	adc	r24, r26
    1d54:	91 1d       	adc	r25, r1
    1d56:	a1 1d       	adc	r26, r1
    1d58:	6a 0f       	add	r22, r26
    1d5a:	71 1d       	adc	r23, r1
    1d5c:	81 1d       	adc	r24, r1
    1d5e:	91 1d       	adc	r25, r1
    1d60:	a1 1d       	adc	r26, r1
    1d62:	20 d0       	rcall	.+64     	; 0x1da4 <__ultoa_invert+0x84>
    1d64:	09 f4       	brne	.+2      	; 0x1d68 <__ultoa_invert+0x48>
    1d66:	68 94       	set
    1d68:	3f 91       	pop	r19
    1d6a:	2a e0       	ldi	r18, 0x0A	; 10
    1d6c:	26 9f       	mul	r18, r22
    1d6e:	11 24       	eor	r1, r1
    1d70:	30 19       	sub	r19, r0
    1d72:	30 5d       	subi	r19, 0xD0	; 208
    1d74:	31 93       	st	Z+, r19
    1d76:	de f6       	brtc	.-74     	; 0x1d2e <__ultoa_invert+0xe>
    1d78:	cf 01       	movw	r24, r30
    1d7a:	08 95       	ret
    1d7c:	46 2f       	mov	r20, r22
    1d7e:	47 70       	andi	r20, 0x07	; 7
    1d80:	40 5d       	subi	r20, 0xD0	; 208
    1d82:	41 93       	st	Z+, r20
    1d84:	b3 e0       	ldi	r27, 0x03	; 3
    1d86:	0f d0       	rcall	.+30     	; 0x1da6 <__ultoa_invert+0x86>
    1d88:	c9 f7       	brne	.-14     	; 0x1d7c <__ultoa_invert+0x5c>
    1d8a:	f6 cf       	rjmp	.-20     	; 0x1d78 <__ultoa_invert+0x58>
    1d8c:	46 2f       	mov	r20, r22
    1d8e:	4f 70       	andi	r20, 0x0F	; 15
    1d90:	40 5d       	subi	r20, 0xD0	; 208
    1d92:	4a 33       	cpi	r20, 0x3A	; 58
    1d94:	18 f0       	brcs	.+6      	; 0x1d9c <__ultoa_invert+0x7c>
    1d96:	49 5d       	subi	r20, 0xD9	; 217
    1d98:	31 fd       	sbrc	r19, 1
    1d9a:	40 52       	subi	r20, 0x20	; 32
    1d9c:	41 93       	st	Z+, r20
    1d9e:	02 d0       	rcall	.+4      	; 0x1da4 <__ultoa_invert+0x84>
    1da0:	a9 f7       	brne	.-22     	; 0x1d8c <__ultoa_invert+0x6c>
    1da2:	ea cf       	rjmp	.-44     	; 0x1d78 <__ultoa_invert+0x58>
    1da4:	b4 e0       	ldi	r27, 0x04	; 4
    1da6:	a6 95       	lsr	r26
    1da8:	97 95       	ror	r25
    1daa:	87 95       	ror	r24
    1dac:	77 95       	ror	r23
    1dae:	67 95       	ror	r22
    1db0:	ba 95       	dec	r27
    1db2:	c9 f7       	brne	.-14     	; 0x1da6 <__ultoa_invert+0x86>
    1db4:	00 97       	sbiw	r24, 0x00	; 0
    1db6:	61 05       	cpc	r22, r1
    1db8:	71 05       	cpc	r23, r1
    1dba:	08 95       	ret
    1dbc:	9b 01       	movw	r18, r22
    1dbe:	ac 01       	movw	r20, r24
    1dc0:	0a 2e       	mov	r0, r26
    1dc2:	06 94       	lsr	r0
    1dc4:	57 95       	ror	r21
    1dc6:	47 95       	ror	r20
    1dc8:	37 95       	ror	r19
    1dca:	27 95       	ror	r18
    1dcc:	ba 95       	dec	r27
    1dce:	c9 f7       	brne	.-14     	; 0x1dc2 <__ultoa_invert+0xa2>
    1dd0:	62 0f       	add	r22, r18
    1dd2:	73 1f       	adc	r23, r19
    1dd4:	84 1f       	adc	r24, r20
    1dd6:	95 1f       	adc	r25, r21
    1dd8:	a0 1d       	adc	r26, r0
    1dda:	08 95       	ret

00001ddc <_exit>:
    1ddc:	f8 94       	cli

00001dde <__stop_program>:
    1dde:	ff cf       	rjmp	.-2      	; 0x1dde <__stop_program>
