
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001a0  00800200  00002a9a  00002b2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a9a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000099  008003a0  008003a0  00002cce  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002cce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002d2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  00002d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003471  00000000  00000000  00003014  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001876  00000000  00000000  00006485  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018ca  00000000  00000000  00007cfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000858  00000000  00000000  000095c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cff  00000000  00000000  00009e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000226c  00000000  00000000  0000ab1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000cd8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <__vector_17>
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 9a 09 	jmp	0x1334	; 0x1334 <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__bad_interrupt>
      66:	00 00       	nop
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 e4 09 	jmp	0x13c8	; 0x13c8 <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2332>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	ea e9       	ldi	r30, 0x9A	; 154
     22c:	fa e2       	ldi	r31, 0x2A	; 42
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	a0 3a       	cpi	r26, 0xA0	; 160
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	a0 ea       	ldi	r26, 0xA0	; 160
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	a9 33       	cpi	r26, 0x39	; 57
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	71 d4       	rcall	.+2274   	; 0xb32 <main>
     250:	0c 94 4b 15 	jmp	0x2a96	; 0x2a96 <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
	if(W_step > SINE_TABLE_SZ)
	W_step = 0;
	if(W_step < 0)
	W_step = SINE_TABLE_SZ;
	//printf("debug 0000000");
	INT_MOTOR_SPEED1=pwm_delay;
     256:	08 95       	ret

00000258 <PWM_update_2>:
}
void PWM_update_2()//motor pwm update
{
	U1_PWM=pwmSin[U_step_2];
     258:	e0 91 a0 03 	lds	r30, 0x03A0	; 0x8003a0 <__data_end>
     25c:	f0 91 a1 03 	lds	r31, 0x03A1	; 0x8003a1 <__data_end+0x1>
     260:	ea 5f       	subi	r30, 0xFA	; 250
     262:	fd 4f       	sbci	r31, 0xFD	; 253
     264:	80 81       	ld	r24, Z
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     26c:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	V1_PWM=pwmSin[V_step_2];
     270:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step_2>
     274:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step_2+0x1>
     278:	ea 5f       	subi	r30, 0xFA	; 250
     27a:	fd 4f       	sbci	r31, 0xFD	; 253
     27c:	80 81       	ld	r24, Z
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     284:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
	W1_PWM=pwmSin[W_step_2];
     288:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step_2>
     28c:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step_2+0x1>
     290:	ea 5f       	subi	r30, 0xFA	; 250
     292:	fd 4f       	sbci	r31, 0xFD	; 253
     294:	80 81       	ld	r24, Z
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     29c:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
	U_step_2=U_step_2+incr_2;
     2a0:	60 91 b7 03 	lds	r22, 0x03B7	; 0x8003b7 <incr_2>
     2a4:	70 91 b8 03 	lds	r23, 0x03B8	; 0x8003b8 <incr_2+0x1>
     2a8:	40 91 a0 03 	lds	r20, 0x03A0	; 0x8003a0 <__data_end>
     2ac:	50 91 a1 03 	lds	r21, 0x03A1	; 0x8003a1 <__data_end+0x1>
     2b0:	46 0f       	add	r20, r22
     2b2:	57 1f       	adc	r21, r23
     2b4:	50 93 a1 03 	sts	0x03A1, r21	; 0x8003a1 <__data_end+0x1>
     2b8:	40 93 a0 03 	sts	0x03A0, r20	; 0x8003a0 <__data_end>
	V_step_2=V_step_2+incr_2;
     2bc:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step_2>
     2c0:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step_2+0x1>
     2c4:	26 0f       	add	r18, r22
     2c6:	37 1f       	adc	r19, r23
     2c8:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     2cc:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_2+incr_2;
     2d0:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step_2>
     2d4:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step_2+0x1>
     2d8:	86 0f       	add	r24, r22
     2da:	97 1f       	adc	r25, r23
     2dc:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     2e0:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	if(U_step_2 > SINE_TABLE_SZ)
     2e4:	49 36       	cpi	r20, 0x69	; 105
     2e6:	61 e0       	ldi	r22, 0x01	; 1
     2e8:	56 07       	cpc	r21, r22
     2ea:	2c f0       	brlt	.+10     	; 0x2f6 <PWM_update_2+0x9e>
	U_step_2 = 0;
     2ec:	10 92 a1 03 	sts	0x03A1, r1	; 0x8003a1 <__data_end+0x1>
     2f0:	10 92 a0 03 	sts	0x03A0, r1	; 0x8003a0 <__data_end>
     2f4:	08 c0       	rjmp	.+16     	; 0x306 <PWM_update_2+0xae>
	if(U_step_2 < 0)
     2f6:	55 23       	and	r21, r21
     2f8:	34 f4       	brge	.+12     	; 0x306 <PWM_update_2+0xae>
	U_step_2 = SINE_TABLE_SZ;
     2fa:	48 e6       	ldi	r20, 0x68	; 104
     2fc:	51 e0       	ldi	r21, 0x01	; 1
     2fe:	50 93 a1 03 	sts	0x03A1, r21	; 0x8003a1 <__data_end+0x1>
     302:	40 93 a0 03 	sts	0x03A0, r20	; 0x8003a0 <__data_end>
	
	if(V_step_2 > SINE_TABLE_SZ)
     306:	29 36       	cpi	r18, 0x69	; 105
     308:	41 e0       	ldi	r20, 0x01	; 1
     30a:	34 07       	cpc	r19, r20
     30c:	2c f0       	brlt	.+10     	; 0x318 <PWM_update_2+0xc0>
	V_step_2 = 0;
     30e:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step_2+0x1>
     312:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step_2>
     316:	08 c0       	rjmp	.+16     	; 0x328 <PWM_update_2+0xd0>
	if(V_step_2 < 0)
     318:	33 23       	and	r19, r19
     31a:	34 f4       	brge	.+12     	; 0x328 <PWM_update_2+0xd0>
	V_step = SINE_TABLE_SZ;
     31c:	28 e6       	ldi	r18, 0x68	; 104
     31e:	31 e0       	ldi	r19, 0x01	; 1
     320:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     324:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step_2 > SINE_TABLE_SZ)
     328:	89 36       	cpi	r24, 0x69	; 105
     32a:	61 e0       	ldi	r22, 0x01	; 1
     32c:	96 07       	cpc	r25, r22
     32e:	2c f0       	brlt	.+10     	; 0x33a <PWM_update_2+0xe2>
	W_step_2 = 0;
     330:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step_2+0x1>
     334:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step_2>
     338:	08 c0       	rjmp	.+16     	; 0x34a <PWM_update_2+0xf2>
	if(W_step_2< 0)
     33a:	99 23       	and	r25, r25
     33c:	34 f4       	brge	.+12     	; 0x34a <PWM_update_2+0xf2>
	W_step_2 = SINE_TABLE_SZ;
     33e:	88 e6       	ldi	r24, 0x68	; 104
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     346:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	//_delay_us(100);
	INT_MOTOR_SPEED2=pwm_delay_2;
     34a:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <pwm_delay_2>
     34e:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <pwm_delay_2+0x1>
     352:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     356:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     35a:	08 95       	ret

0000035c <init_motor_gpio>:
	//printf("oopooo");
}
void init_motor_gpio()
{
	//setting pin mode to output for motor 1 
	sbi(DDRH,3);//digital 6 OC4A
     35c:	e1 e0       	ldi	r30, 0x01	; 1
     35e:	f1 e0       	ldi	r31, 0x01	; 1
     360:	80 81       	ld	r24, Z
     362:	88 60       	ori	r24, 0x08	; 8
     364:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     366:	80 81       	ld	r24, Z
     368:	80 61       	ori	r24, 0x10	; 16
     36a:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     36c:	80 81       	ld	r24, Z
     36e:	80 62       	ori	r24, 0x20	; 32
     370:	80 83       	st	Z, r24
	
	sbi(DDRA,0);//digital 22 EN1
     372:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     374:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     376:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     378:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     37a:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     37c:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     37e:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     380:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     382:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     384:	47 9a       	sbi	0x08, 7	; 8
	
	
	//setting pin mode to output for motor 2
	sbi(DDRE,4);//digital 2 OC3B
     386:	6c 9a       	sbi	0x0d, 4	; 13
	sbi(DDRE,5);//digital 3 OC3C
     388:	6d 9a       	sbi	0x0d, 5	; 13
	sbi(DDRE,3);//digital 5 OC3A
     38a:	6b 9a       	sbi	0x0d, 3	; 13
	
	sbi(DDRC,5);//digital 32 EN1
     38c:	3d 9a       	sbi	0x07, 5	; 7
	sbi(DDRC,3);//digital 34 EN2
     38e:	3b 9a       	sbi	0x07, 3	; 7
	sbi(DDRC,1);//digital 36 EN3
     390:	39 9a       	sbi	0x07, 1	; 7
	sbi(DDRD,7);//digital 38 sleep
     392:	57 9a       	sbi	0x0a, 7	; 10
	sbi(DDRG,1);//digital 40 nf, see drv8313
     394:	99 9a       	sbi	0x13, 1	; 19
	
	sbi(PORTC,5);//sleep HIGH
     396:	45 9a       	sbi	0x08, 5	; 8
	sbi(PORTC,3);//nf HIGH
     398:	43 9a       	sbi	0x08, 3	; 8
	sbi(PORTC,1);//EN1 HIGH
     39a:	41 9a       	sbi	0x08, 1	; 8
	sbi(PORTD,7);//EN2 HIGH
     39c:	5f 9a       	sbi	0x0b, 7	; 11
	sbi(PORTG,1);//EN3 HIGH
     39e:	a1 9a       	sbi	0x14, 1	; 20
     3a0:	08 95       	ret

000003a2 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     3a2:	4f 92       	push	r4
     3a4:	5f 92       	push	r5
     3a6:	6f 92       	push	r6
     3a8:	7f 92       	push	r7
     3aa:	8f 92       	push	r8
     3ac:	9f 92       	push	r9
     3ae:	af 92       	push	r10
     3b0:	bf 92       	push	r11
     3b2:	cf 92       	push	r12
     3b4:	df 92       	push	r13
     3b6:	ef 92       	push	r14
     3b8:	ff 92       	push	r15
     3ba:	0f 93       	push	r16
     3bc:	1f 93       	push	r17
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	cd b7       	in	r28, 0x3d	; 61
     3c4:	de b7       	in	r29, 0x3e	; 62
     3c6:	6c 97       	sbiw	r28, 0x1c	; 28
     3c8:	0f b6       	in	r0, 0x3f	; 63
     3ca:	f8 94       	cli
     3cc:	de bf       	out	0x3e, r29	; 62
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	cd bf       	out	0x3d, r28	; 61
     3d2:	69 8b       	std	Y+17, r22	; 0x11
     3d4:	7a 8b       	std	Y+18, r23	; 0x12
     3d6:	8b 8b       	std	Y+19, r24	; 0x13
     3d8:	9c 8b       	std	Y+20, r25	; 0x14
     3da:	ca 01       	movw	r24, r20
     3dc:	b9 01       	movw	r22, r18
     3de:	e9 82       	std	Y+1, r14	; 0x01
     3e0:	fa 82       	std	Y+2, r15	; 0x02
     3e2:	0b 83       	std	Y+3, r16	; 0x03
     3e4:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     3e6:	c0 90 c7 03 	lds	r12, 0x03C7	; 0x8003c7 <bias>
     3ea:	d0 90 c8 03 	lds	r13, 0x03C8	; 0x8003c8 <bias+0x1>
     3ee:	e0 90 c9 03 	lds	r14, 0x03C9	; 0x8003c9 <bias+0x2>
     3f2:	f0 90 ca 03 	lds	r15, 0x03CA	; 0x8003ca <bias+0x3>
     3f6:	a7 01       	movw	r20, r14
     3f8:	96 01       	movw	r18, r12
     3fa:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     3fe:	60 93 bf 03 	sts	0x03BF, r22	; 0x8003bf <rate>
     402:	70 93 c0 03 	sts	0x03C0, r23	; 0x8003c0 <rate+0x1>
     406:	80 93 c1 03 	sts	0x03C1, r24	; 0x8003c1 <rate+0x2>
     40a:	90 93 c2 03 	sts	0x03C2, r25	; 0x8003c2 <rate+0x3>
	angle += dt * rate;
     40e:	29 81       	ldd	r18, Y+1	; 0x01
     410:	3a 81       	ldd	r19, Y+2	; 0x02
     412:	4b 81       	ldd	r20, Y+3	; 0x03
     414:	5c 81       	ldd	r21, Y+4	; 0x04
     416:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     41a:	20 91 eb 03 	lds	r18, 0x03EB	; 0x8003eb <angle>
     41e:	30 91 ec 03 	lds	r19, 0x03EC	; 0x8003ec <angle+0x1>
     422:	40 91 ed 03 	lds	r20, 0x03ED	; 0x8003ed <angle+0x2>
     426:	50 91 ee 03 	lds	r21, 0x03EE	; 0x8003ee <angle+0x3>
     42a:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
     42e:	6d 8b       	std	Y+21, r22	; 0x15
     430:	7e 8b       	std	Y+22, r23	; 0x16
     432:	8f 8b       	std	Y+23, r24	; 0x17
     434:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     436:	80 90 03 04 	lds	r8, 0x0403	; 0x800403 <P+0xc>
     43a:	90 90 04 04 	lds	r9, 0x0404	; 0x800404 <P+0xd>
     43e:	a0 90 05 04 	lds	r10, 0x0405	; 0x800405 <P+0xe>
     442:	b0 90 06 04 	lds	r11, 0x0406	; 0x800406 <P+0xf>
     446:	a5 01       	movw	r20, r10
     448:	94 01       	movw	r18, r8
     44a:	69 81       	ldd	r22, Y+1	; 0x01
     44c:	7a 81       	ldd	r23, Y+2	; 0x02
     44e:	8b 81       	ldd	r24, Y+3	; 0x03
     450:	9c 81       	ldd	r25, Y+4	; 0x04
     452:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     456:	6d 83       	std	Y+5, r22	; 0x05
     458:	7e 83       	std	Y+6, r23	; 0x06
     45a:	8f 83       	std	Y+7, r24	; 0x07
     45c:	98 87       	std	Y+8, r25	; 0x08
     45e:	40 90 fb 03 	lds	r4, 0x03FB	; 0x8003fb <P+0x4>
     462:	50 90 fc 03 	lds	r5, 0x03FC	; 0x8003fc <P+0x5>
     466:	60 90 fd 03 	lds	r6, 0x03FD	; 0x8003fd <P+0x6>
     46a:	70 90 fe 03 	lds	r7, 0x03FE	; 0x8003fe <P+0x7>
     46e:	80 91 ff 03 	lds	r24, 0x03FF	; 0x8003ff <P+0x8>
     472:	90 91 00 04 	lds	r25, 0x0400	; 0x800400 <P+0x9>
     476:	a0 91 01 04 	lds	r26, 0x0401	; 0x800401 <P+0xa>
     47a:	b0 91 02 04 	lds	r27, 0x0402	; 0x800402 <P+0xb>
     47e:	8d 87       	std	Y+13, r24	; 0x0d
     480:	9e 87       	std	Y+14, r25	; 0x0e
     482:	af 87       	std	Y+15, r26	; 0x0f
     484:	b8 8b       	std	Y+16, r27	; 0x10
     486:	a3 01       	movw	r20, r6
     488:	92 01       	movw	r18, r4
     48a:	6d 81       	ldd	r22, Y+5	; 0x05
     48c:	7e 81       	ldd	r23, Y+6	; 0x06
     48e:	8f 81       	ldd	r24, Y+7	; 0x07
     490:	98 85       	ldd	r25, Y+8	; 0x08
     492:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     496:	2d 85       	ldd	r18, Y+13	; 0x0d
     498:	3e 85       	ldd	r19, Y+14	; 0x0e
     49a:	4f 85       	ldd	r20, Y+15	; 0x0f
     49c:	58 89       	ldd	r21, Y+16	; 0x10
     49e:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     4a2:	20 91 c3 03 	lds	r18, 0x03C3	; 0x8003c3 <Q_angle>
     4a6:	30 91 c4 03 	lds	r19, 0x03C4	; 0x8003c4 <Q_angle+0x1>
     4aa:	40 91 c5 03 	lds	r20, 0x03C5	; 0x8003c5 <Q_angle+0x2>
     4ae:	50 91 c6 03 	lds	r21, 0x03C6	; 0x8003c6 <Q_angle+0x3>
     4b2:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
     4b6:	29 81       	ldd	r18, Y+1	; 0x01
     4b8:	3a 81       	ldd	r19, Y+2	; 0x02
     4ba:	4b 81       	ldd	r20, Y+3	; 0x03
     4bc:	5c 81       	ldd	r21, Y+4	; 0x04
     4be:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     4c2:	a7 ef       	ldi	r26, 0xF7	; 247
     4c4:	b3 e0       	ldi	r27, 0x03	; 3
     4c6:	2d 91       	ld	r18, X+
     4c8:	3d 91       	ld	r19, X+
     4ca:	4d 91       	ld	r20, X+
     4cc:	5c 91       	ld	r21, X
     4ce:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
     4d2:	69 87       	std	Y+9, r22	; 0x09
     4d4:	7a 87       	std	Y+10, r23	; 0x0a
     4d6:	8b 87       	std	Y+11, r24	; 0x0b
     4d8:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     4da:	2d 81       	ldd	r18, Y+5	; 0x05
     4dc:	3e 81       	ldd	r19, Y+6	; 0x06
     4de:	4f 81       	ldd	r20, Y+7	; 0x07
     4e0:	58 85       	ldd	r21, Y+8	; 0x08
     4e2:	c3 01       	movw	r24, r6
     4e4:	b2 01       	movw	r22, r4
     4e6:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     4ea:	2b 01       	movw	r4, r22
     4ec:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     4ee:	2d 81       	ldd	r18, Y+5	; 0x05
     4f0:	3e 81       	ldd	r19, Y+6	; 0x06
     4f2:	4f 81       	ldd	r20, Y+7	; 0x07
     4f4:	58 85       	ldd	r21, Y+8	; 0x08
     4f6:	6d 85       	ldd	r22, Y+13	; 0x0d
     4f8:	7e 85       	ldd	r23, Y+14	; 0x0e
     4fa:	8f 85       	ldd	r24, Y+15	; 0x0f
     4fc:	98 89       	ldd	r25, Y+16	; 0x10
     4fe:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     502:	6d 87       	std	Y+13, r22	; 0x0d
     504:	7e 87       	std	Y+14, r23	; 0x0e
     506:	8f 87       	std	Y+15, r24	; 0x0f
     508:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     50a:	20 91 bb 03 	lds	r18, 0x03BB	; 0x8003bb <Q_bias>
     50e:	30 91 bc 03 	lds	r19, 0x03BC	; 0x8003bc <Q_bias+0x1>
     512:	40 91 bd 03 	lds	r20, 0x03BD	; 0x8003bd <Q_bias+0x2>
     516:	50 91 be 03 	lds	r21, 0x03BE	; 0x8003be <Q_bias+0x3>
     51a:	69 81       	ldd	r22, Y+1	; 0x01
     51c:	7a 81       	ldd	r23, Y+2	; 0x02
     51e:	8b 81       	ldd	r24, Y+3	; 0x03
     520:	9c 81       	ldd	r25, Y+4	; 0x04
     522:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     526:	a5 01       	movw	r20, r10
     528:	94 01       	movw	r18, r8
     52a:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
     52e:	69 8f       	std	Y+25, r22	; 0x19
     530:	7a 8f       	std	Y+26, r23	; 0x1a
     532:	8b 8f       	std	Y+27, r24	; 0x1b
     534:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     536:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <R_measure>
     53a:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <R_measure+0x1>
     53e:	40 91 e5 03 	lds	r20, 0x03E5	; 0x8003e5 <R_measure+0x2>
     542:	50 91 e6 03 	lds	r21, 0x03E6	; 0x8003e6 <R_measure+0x3>
     546:	69 85       	ldd	r22, Y+9	; 0x09
     548:	7a 85       	ldd	r23, Y+10	; 0x0a
     54a:	8b 85       	ldd	r24, Y+11	; 0x0b
     54c:	9c 85       	ldd	r25, Y+12	; 0x0c
     54e:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
     552:	4b 01       	movw	r8, r22
     554:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     556:	9b 01       	movw	r18, r22
     558:	ac 01       	movw	r20, r24
     55a:	69 85       	ldd	r22, Y+9	; 0x09
     55c:	7a 85       	ldd	r23, Y+10	; 0x0a
     55e:	8b 85       	ldd	r24, Y+11	; 0x0b
     560:	9c 85       	ldd	r25, Y+12	; 0x0c
     562:	0e 94 09 0c 	call	0x1812	; 0x1812 <__divsf3>
     566:	69 83       	std	Y+1, r22	; 0x01
     568:	7a 83       	std	Y+2, r23	; 0x02
     56a:	8b 83       	std	Y+3, r24	; 0x03
     56c:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     56e:	a5 01       	movw	r20, r10
     570:	94 01       	movw	r18, r8
     572:	6d 85       	ldd	r22, Y+13	; 0x0d
     574:	7e 85       	ldd	r23, Y+14	; 0x0e
     576:	8f 85       	ldd	r24, Y+15	; 0x0f
     578:	98 89       	ldd	r25, Y+16	; 0x10
     57a:	0e 94 09 0c 	call	0x1812	; 0x1812 <__divsf3>
     57e:	6d 83       	std	Y+5, r22	; 0x05
     580:	7e 83       	std	Y+6, r23	; 0x06
     582:	8f 83       	std	Y+7, r24	; 0x07
     584:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     586:	2d 89       	ldd	r18, Y+21	; 0x15
     588:	3e 89       	ldd	r19, Y+22	; 0x16
     58a:	4f 89       	ldd	r20, Y+23	; 0x17
     58c:	58 8d       	ldd	r21, Y+24	; 0x18
     58e:	69 89       	ldd	r22, Y+17	; 0x11
     590:	7a 89       	ldd	r23, Y+18	; 0x12
     592:	8b 89       	ldd	r24, Y+19	; 0x13
     594:	9c 89       	ldd	r25, Y+20	; 0x14
     596:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     59a:	69 8b       	std	Y+17, r22	; 0x11
     59c:	7a 8b       	std	Y+18, r23	; 0x12
     59e:	8b 8b       	std	Y+19, r24	; 0x13
     5a0:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     5a2:	9b 01       	movw	r18, r22
     5a4:	ac 01       	movw	r20, r24
     5a6:	69 81       	ldd	r22, Y+1	; 0x01
     5a8:	7a 81       	ldd	r23, Y+2	; 0x02
     5aa:	8b 81       	ldd	r24, Y+3	; 0x03
     5ac:	9c 81       	ldd	r25, Y+4	; 0x04
     5ae:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     5b2:	2d 89       	ldd	r18, Y+21	; 0x15
     5b4:	3e 89       	ldd	r19, Y+22	; 0x16
     5b6:	4f 89       	ldd	r20, Y+23	; 0x17
     5b8:	58 8d       	ldd	r21, Y+24	; 0x18
     5ba:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
     5be:	4b 01       	movw	r8, r22
     5c0:	5c 01       	movw	r10, r24
     5c2:	60 93 eb 03 	sts	0x03EB, r22	; 0x8003eb <angle>
     5c6:	70 93 ec 03 	sts	0x03EC, r23	; 0x8003ec <angle+0x1>
     5ca:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <angle+0x2>
     5ce:	90 93 ee 03 	sts	0x03EE, r25	; 0x8003ee <angle+0x3>
	bias += K[1] * y;
     5d2:	29 89       	ldd	r18, Y+17	; 0x11
     5d4:	3a 89       	ldd	r19, Y+18	; 0x12
     5d6:	4b 89       	ldd	r20, Y+19	; 0x13
     5d8:	5c 89       	ldd	r21, Y+20	; 0x14
     5da:	6d 81       	ldd	r22, Y+5	; 0x05
     5dc:	7e 81       	ldd	r23, Y+6	; 0x06
     5de:	8f 81       	ldd	r24, Y+7	; 0x07
     5e0:	98 85       	ldd	r25, Y+8	; 0x08
     5e2:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     5e6:	a7 01       	movw	r20, r14
     5e8:	96 01       	movw	r18, r12
     5ea:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
     5ee:	60 93 c7 03 	sts	0x03C7, r22	; 0x8003c7 <bias>
     5f2:	70 93 c8 03 	sts	0x03C8, r23	; 0x8003c8 <bias+0x1>
     5f6:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <bias+0x2>
     5fa:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     5fe:	29 81       	ldd	r18, Y+1	; 0x01
     600:	3a 81       	ldd	r19, Y+2	; 0x02
     602:	4b 81       	ldd	r20, Y+3	; 0x03
     604:	5c 81       	ldd	r21, Y+4	; 0x04
     606:	69 85       	ldd	r22, Y+9	; 0x09
     608:	7a 85       	ldd	r23, Y+10	; 0x0a
     60a:	8b 85       	ldd	r24, Y+11	; 0x0b
     60c:	9c 85       	ldd	r25, Y+12	; 0x0c
     60e:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     612:	9b 01       	movw	r18, r22
     614:	ac 01       	movw	r20, r24
     616:	69 85       	ldd	r22, Y+9	; 0x09
     618:	7a 85       	ldd	r23, Y+10	; 0x0a
     61a:	8b 85       	ldd	r24, Y+11	; 0x0b
     61c:	9c 85       	ldd	r25, Y+12	; 0x0c
     61e:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     622:	e7 ef       	ldi	r30, 0xF7	; 247
     624:	f3 e0       	ldi	r31, 0x03	; 3
     626:	60 83       	st	Z, r22
     628:	71 83       	std	Z+1, r23	; 0x01
     62a:	82 83       	std	Z+2, r24	; 0x02
     62c:	93 83       	std	Z+3, r25	; 0x03
	P[0][1] -= K[0] * P01_temp;
     62e:	29 81       	ldd	r18, Y+1	; 0x01
     630:	3a 81       	ldd	r19, Y+2	; 0x02
     632:	4b 81       	ldd	r20, Y+3	; 0x03
     634:	5c 81       	ldd	r21, Y+4	; 0x04
     636:	c3 01       	movw	r24, r6
     638:	b2 01       	movw	r22, r4
     63a:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     63e:	9b 01       	movw	r18, r22
     640:	ac 01       	movw	r20, r24
     642:	c3 01       	movw	r24, r6
     644:	b2 01       	movw	r22, r4
     646:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     64a:	60 93 fb 03 	sts	0x03FB, r22	; 0x8003fb <P+0x4>
     64e:	70 93 fc 03 	sts	0x03FC, r23	; 0x8003fc <P+0x5>
     652:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <P+0x6>
     656:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <P+0x7>
	P[1][0] -= K[1] * P00_temp;
     65a:	2d 81       	ldd	r18, Y+5	; 0x05
     65c:	3e 81       	ldd	r19, Y+6	; 0x06
     65e:	4f 81       	ldd	r20, Y+7	; 0x07
     660:	58 85       	ldd	r21, Y+8	; 0x08
     662:	69 85       	ldd	r22, Y+9	; 0x09
     664:	7a 85       	ldd	r23, Y+10	; 0x0a
     666:	8b 85       	ldd	r24, Y+11	; 0x0b
     668:	9c 85       	ldd	r25, Y+12	; 0x0c
     66a:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     66e:	9b 01       	movw	r18, r22
     670:	ac 01       	movw	r20, r24
     672:	6d 85       	ldd	r22, Y+13	; 0x0d
     674:	7e 85       	ldd	r23, Y+14	; 0x0e
     676:	8f 85       	ldd	r24, Y+15	; 0x0f
     678:	98 89       	ldd	r25, Y+16	; 0x10
     67a:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     67e:	60 93 ff 03 	sts	0x03FF, r22	; 0x8003ff <P+0x8>
     682:	70 93 00 04 	sts	0x0400, r23	; 0x800400 <P+0x9>
     686:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <P+0xa>
     68a:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <P+0xb>
	P[1][1] -= K[1] * P01_temp;
     68e:	2d 81       	ldd	r18, Y+5	; 0x05
     690:	3e 81       	ldd	r19, Y+6	; 0x06
     692:	4f 81       	ldd	r20, Y+7	; 0x07
     694:	58 85       	ldd	r21, Y+8	; 0x08
     696:	c3 01       	movw	r24, r6
     698:	b2 01       	movw	r22, r4
     69a:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     69e:	9b 01       	movw	r18, r22
     6a0:	ac 01       	movw	r20, r24
     6a2:	69 8d       	ldd	r22, Y+25	; 0x19
     6a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     6a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     6a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6aa:	e8 d7       	rcall	.+4048   	; 0x167c <__subsf3>
     6ac:	60 93 03 04 	sts	0x0403, r22	; 0x800403 <P+0xc>
     6b0:	70 93 04 04 	sts	0x0404, r23	; 0x800404 <P+0xd>
     6b4:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <P+0xe>
     6b8:	90 93 06 04 	sts	0x0406, r25	; 0x800406 <P+0xf>

	return angle;
};
     6bc:	c5 01       	movw	r24, r10
     6be:	b4 01       	movw	r22, r8
     6c0:	6c 96       	adiw	r28, 0x1c	; 28
     6c2:	0f b6       	in	r0, 0x3f	; 63
     6c4:	f8 94       	cli
     6c6:	de bf       	out	0x3e, r29	; 62
     6c8:	0f be       	out	0x3f, r0	; 63
     6ca:	cd bf       	out	0x3d, r28	; 61
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	1f 91       	pop	r17
     6d2:	0f 91       	pop	r16
     6d4:	ff 90       	pop	r15
     6d6:	ef 90       	pop	r14
     6d8:	df 90       	pop	r13
     6da:	cf 90       	pop	r12
     6dc:	bf 90       	pop	r11
     6de:	af 90       	pop	r10
     6e0:	9f 90       	pop	r9
     6e2:	8f 90       	pop	r8
     6e4:	7f 90       	pop	r7
     6e6:	6f 90       	pop	r6
     6e8:	5f 90       	pop	r5
     6ea:	4f 90       	pop	r4
     6ec:	08 95       	ret

000006ee <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     6ee:	8f e6       	ldi	r24, 0x6F	; 111
     6f0:	92 e1       	ldi	r25, 0x12	; 18
     6f2:	a3 e8       	ldi	r26, 0x83	; 131
     6f4:	ba e3       	ldi	r27, 0x3A	; 58
     6f6:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <Q_angle>
     6fa:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <Q_angle+0x1>
     6fe:	a0 93 c5 03 	sts	0x03C5, r26	; 0x8003c5 <Q_angle+0x2>
     702:	b0 93 c6 03 	sts	0x03C6, r27	; 0x8003c6 <Q_angle+0x3>
	Q_bias = 0.003f;
     706:	86 ea       	ldi	r24, 0xA6	; 166
     708:	9b e9       	ldi	r25, 0x9B	; 155
     70a:	a4 e4       	ldi	r26, 0x44	; 68
     70c:	bb e3       	ldi	r27, 0x3B	; 59
     70e:	80 93 bb 03 	sts	0x03BB, r24	; 0x8003bb <Q_bias>
     712:	90 93 bc 03 	sts	0x03BC, r25	; 0x8003bc <Q_bias+0x1>
     716:	a0 93 bd 03 	sts	0x03BD, r26	; 0x8003bd <Q_bias+0x2>
     71a:	b0 93 be 03 	sts	0x03BE, r27	; 0x8003be <Q_bias+0x3>
	R_measure = 0.03f;
     71e:	8f e8       	ldi	r24, 0x8F	; 143
     720:	92 ec       	ldi	r25, 0xC2	; 194
     722:	a5 ef       	ldi	r26, 0xF5	; 245
     724:	bc e3       	ldi	r27, 0x3C	; 60
     726:	80 93 e3 03 	sts	0x03E3, r24	; 0x8003e3 <R_measure>
     72a:	90 93 e4 03 	sts	0x03E4, r25	; 0x8003e4 <R_measure+0x1>
     72e:	a0 93 e5 03 	sts	0x03E5, r26	; 0x8003e5 <R_measure+0x2>
     732:	b0 93 e6 03 	sts	0x03E6, r27	; 0x8003e6 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     736:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <angle>
     73a:	10 92 ec 03 	sts	0x03EC, r1	; 0x8003ec <angle+0x1>
     73e:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <angle+0x2>
     742:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <angle+0x3>
	bias = 0.0f; // Reset bias
     746:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <bias>
     74a:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <bias+0x1>
     74e:	10 92 c9 03 	sts	0x03C9, r1	; 0x8003c9 <bias+0x2>
     752:	10 92 ca 03 	sts	0x03CA, r1	; 0x8003ca <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     756:	e7 ef       	ldi	r30, 0xF7	; 247
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	10 82       	st	Z, r1
     75c:	11 82       	std	Z+1, r1	; 0x01
     75e:	12 82       	std	Z+2, r1	; 0x02
     760:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     762:	14 82       	std	Z+4, r1	; 0x04
     764:	15 82       	std	Z+5, r1	; 0x05
     766:	16 82       	std	Z+6, r1	; 0x06
     768:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     76a:	10 86       	std	Z+8, r1	; 0x08
     76c:	11 86       	std	Z+9, r1	; 0x09
     76e:	12 86       	std	Z+10, r1	; 0x0a
     770:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     772:	14 86       	std	Z+12, r1	; 0x0c
     774:	15 86       	std	Z+13, r1	; 0x0d
     776:	16 86       	std	Z+14, r1	; 0x0e
     778:	17 86       	std	Z+15, r1	; 0x0f
     77a:	08 95       	ret

0000077c <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     77c:	4f 92       	push	r4
     77e:	5f 92       	push	r5
     780:	6f 92       	push	r6
     782:	7f 92       	push	r7
     784:	8f 92       	push	r8
     786:	9f 92       	push	r9
     788:	af 92       	push	r10
     78a:	bf 92       	push	r11
     78c:	cf 92       	push	r12
     78e:	df 92       	push	r13
     790:	ef 92       	push	r14
     792:	ff 92       	push	r15
     794:	0f 93       	push	r16
     796:	1f 93       	push	r17
     798:	cf 93       	push	r28
     79a:	df 93       	push	r29
     79c:	cd b7       	in	r28, 0x3d	; 61
     79e:	de b7       	in	r29, 0x3e	; 62
     7a0:	6c 97       	sbiw	r28, 0x1c	; 28
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	f8 94       	cli
     7a6:	de bf       	out	0x3e, r29	; 62
     7a8:	0f be       	out	0x3f, r0	; 63
     7aa:	cd bf       	out	0x3d, r28	; 61
     7ac:	69 8b       	std	Y+17, r22	; 0x11
     7ae:	7a 8b       	std	Y+18, r23	; 0x12
     7b0:	8b 8b       	std	Y+19, r24	; 0x13
     7b2:	9c 8b       	std	Y+20, r25	; 0x14
     7b4:	ca 01       	movw	r24, r20
     7b6:	b9 01       	movw	r22, r18
     7b8:	e9 82       	std	Y+1, r14	; 0x01
     7ba:	fa 82       	std	Y+2, r15	; 0x02
     7bc:	0b 83       	std	Y+3, r16	; 0x03
     7be:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     7c0:	c0 90 e7 03 	lds	r12, 0x03E7	; 0x8003e7 <bias_1>
     7c4:	d0 90 e8 03 	lds	r13, 0x03E8	; 0x8003e8 <bias_1+0x1>
     7c8:	e0 90 e9 03 	lds	r14, 0x03E9	; 0x8003e9 <bias_1+0x2>
     7cc:	f0 90 ea 03 	lds	r15, 0x03EA	; 0x8003ea <bias_1+0x3>
     7d0:	a7 01       	movw	r20, r14
     7d2:	96 01       	movw	r18, r12
     7d4:	53 d7       	rcall	.+3750   	; 0x167c <__subsf3>
     7d6:	60 93 df 03 	sts	0x03DF, r22	; 0x8003df <rate_1>
     7da:	70 93 e0 03 	sts	0x03E0, r23	; 0x8003e0 <rate_1+0x1>
     7de:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <rate_1+0x2>
     7e2:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <rate_1+0x3>
	angle_1 += dt * rate_1;
     7e6:	29 81       	ldd	r18, Y+1	; 0x01
     7e8:	3a 81       	ldd	r19, Y+2	; 0x02
     7ea:	4b 81       	ldd	r20, Y+3	; 0x03
     7ec:	5c 81       	ldd	r21, Y+4	; 0x04
     7ee:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     7f2:	20 91 cb 03 	lds	r18, 0x03CB	; 0x8003cb <angle_1>
     7f6:	30 91 cc 03 	lds	r19, 0x03CC	; 0x8003cc <angle_1+0x1>
     7fa:	40 91 cd 03 	lds	r20, 0x03CD	; 0x8003cd <angle_1+0x2>
     7fe:	50 91 ce 03 	lds	r21, 0x03CE	; 0x8003ce <angle_1+0x3>
     802:	3d d7       	rcall	.+3706   	; 0x167e <__addsf3>
     804:	6d 8b       	std	Y+21, r22	; 0x15
     806:	7e 8b       	std	Y+22, r23	; 0x16
     808:	8f 8b       	std	Y+23, r24	; 0x17
     80a:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     80c:	80 90 db 03 	lds	r8, 0x03DB	; 0x8003db <P_1+0xc>
     810:	90 90 dc 03 	lds	r9, 0x03DC	; 0x8003dc <P_1+0xd>
     814:	a0 90 dd 03 	lds	r10, 0x03DD	; 0x8003dd <P_1+0xe>
     818:	b0 90 de 03 	lds	r11, 0x03DE	; 0x8003de <P_1+0xf>
     81c:	a5 01       	movw	r20, r10
     81e:	94 01       	movw	r18, r8
     820:	69 81       	ldd	r22, Y+1	; 0x01
     822:	7a 81       	ldd	r23, Y+2	; 0x02
     824:	8b 81       	ldd	r24, Y+3	; 0x03
     826:	9c 81       	ldd	r25, Y+4	; 0x04
     828:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     82c:	6d 83       	std	Y+5, r22	; 0x05
     82e:	7e 83       	std	Y+6, r23	; 0x06
     830:	8f 83       	std	Y+7, r24	; 0x07
     832:	98 87       	std	Y+8, r25	; 0x08
     834:	40 90 d3 03 	lds	r4, 0x03D3	; 0x8003d3 <P_1+0x4>
     838:	50 90 d4 03 	lds	r5, 0x03D4	; 0x8003d4 <P_1+0x5>
     83c:	60 90 d5 03 	lds	r6, 0x03D5	; 0x8003d5 <P_1+0x6>
     840:	70 90 d6 03 	lds	r7, 0x03D6	; 0x8003d6 <P_1+0x7>
     844:	80 91 d7 03 	lds	r24, 0x03D7	; 0x8003d7 <P_1+0x8>
     848:	90 91 d8 03 	lds	r25, 0x03D8	; 0x8003d8 <P_1+0x9>
     84c:	a0 91 d9 03 	lds	r26, 0x03D9	; 0x8003d9 <P_1+0xa>
     850:	b0 91 da 03 	lds	r27, 0x03DA	; 0x8003da <P_1+0xb>
     854:	8d 87       	std	Y+13, r24	; 0x0d
     856:	9e 87       	std	Y+14, r25	; 0x0e
     858:	af 87       	std	Y+15, r26	; 0x0f
     85a:	b8 8b       	std	Y+16, r27	; 0x10
     85c:	a3 01       	movw	r20, r6
     85e:	92 01       	movw	r18, r4
     860:	6d 81       	ldd	r22, Y+5	; 0x05
     862:	7e 81       	ldd	r23, Y+6	; 0x06
     864:	8f 81       	ldd	r24, Y+7	; 0x07
     866:	98 85       	ldd	r25, Y+8	; 0x08
     868:	09 d7       	rcall	.+3602   	; 0x167c <__subsf3>
     86a:	2d 85       	ldd	r18, Y+13	; 0x0d
     86c:	3e 85       	ldd	r19, Y+14	; 0x0e
     86e:	4f 85       	ldd	r20, Y+15	; 0x0f
     870:	58 89       	ldd	r21, Y+16	; 0x10
     872:	04 d7       	rcall	.+3592   	; 0x167c <__subsf3>
     874:	20 91 07 04 	lds	r18, 0x0407	; 0x800407 <Q_angle_1>
     878:	30 91 08 04 	lds	r19, 0x0408	; 0x800408 <Q_angle_1+0x1>
     87c:	40 91 09 04 	lds	r20, 0x0409	; 0x800409 <Q_angle_1+0x2>
     880:	50 91 0a 04 	lds	r21, 0x040A	; 0x80040a <Q_angle_1+0x3>
     884:	fc d6       	rcall	.+3576   	; 0x167e <__addsf3>
     886:	29 81       	ldd	r18, Y+1	; 0x01
     888:	3a 81       	ldd	r19, Y+2	; 0x02
     88a:	4b 81       	ldd	r20, Y+3	; 0x03
     88c:	5c 81       	ldd	r21, Y+4	; 0x04
     88e:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     892:	af ec       	ldi	r26, 0xCF	; 207
     894:	b3 e0       	ldi	r27, 0x03	; 3
     896:	2d 91       	ld	r18, X+
     898:	3d 91       	ld	r19, X+
     89a:	4d 91       	ld	r20, X+
     89c:	5c 91       	ld	r21, X
     89e:	ef d6       	rcall	.+3550   	; 0x167e <__addsf3>
     8a0:	69 87       	std	Y+9, r22	; 0x09
     8a2:	7a 87       	std	Y+10, r23	; 0x0a
     8a4:	8b 87       	std	Y+11, r24	; 0x0b
	P_1[0][1] -= dt * P_1[1][1];
     8a6:	9c 87       	std	Y+12, r25	; 0x0c
     8a8:	2d 81       	ldd	r18, Y+5	; 0x05
     8aa:	3e 81       	ldd	r19, Y+6	; 0x06
     8ac:	4f 81       	ldd	r20, Y+7	; 0x07
     8ae:	58 85       	ldd	r21, Y+8	; 0x08
     8b0:	c3 01       	movw	r24, r6
     8b2:	b2 01       	movw	r22, r4
     8b4:	e3 d6       	rcall	.+3526   	; 0x167c <__subsf3>
     8b6:	2b 01       	movw	r4, r22
	P_1[1][0] -= dt * P_1[1][1];
     8b8:	3c 01       	movw	r6, r24
     8ba:	2d 81       	ldd	r18, Y+5	; 0x05
     8bc:	3e 81       	ldd	r19, Y+6	; 0x06
     8be:	4f 81       	ldd	r20, Y+7	; 0x07
     8c0:	58 85       	ldd	r21, Y+8	; 0x08
     8c2:	6d 85       	ldd	r22, Y+13	; 0x0d
     8c4:	7e 85       	ldd	r23, Y+14	; 0x0e
     8c6:	8f 85       	ldd	r24, Y+15	; 0x0f
     8c8:	98 89       	ldd	r25, Y+16	; 0x10
     8ca:	d8 d6       	rcall	.+3504   	; 0x167c <__subsf3>
     8cc:	6d 87       	std	Y+13, r22	; 0x0d
     8ce:	7e 87       	std	Y+14, r23	; 0x0e
     8d0:	8f 87       	std	Y+15, r24	; 0x0f
	P_1[1][1] += Q_bias_1 * dt;
     8d2:	98 8b       	std	Y+16, r25	; 0x10
     8d4:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <Q_bias_1>
     8d8:	30 91 f4 03 	lds	r19, 0x03F4	; 0x8003f4 <Q_bias_1+0x1>
     8dc:	40 91 f5 03 	lds	r20, 0x03F5	; 0x8003f5 <Q_bias_1+0x2>
     8e0:	50 91 f6 03 	lds	r21, 0x03F6	; 0x8003f6 <Q_bias_1+0x3>
     8e4:	69 81       	ldd	r22, Y+1	; 0x01
     8e6:	7a 81       	ldd	r23, Y+2	; 0x02
     8e8:	8b 81       	ldd	r24, Y+3	; 0x03
     8ea:	9c 81       	ldd	r25, Y+4	; 0x04
     8ec:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     8f0:	a5 01       	movw	r20, r10
     8f2:	94 01       	movw	r18, r8
     8f4:	c4 d6       	rcall	.+3464   	; 0x167e <__addsf3>
     8f6:	69 8f       	std	Y+25, r22	; 0x19
     8f8:	7a 8f       	std	Y+26, r23	; 0x1a
     8fa:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     8fc:	9c 8f       	std	Y+28, r25	; 0x1c
     8fe:	20 91 ef 03 	lds	r18, 0x03EF	; 0x8003ef <R_measure_1>
     902:	30 91 f0 03 	lds	r19, 0x03F0	; 0x8003f0 <R_measure_1+0x1>
     906:	40 91 f1 03 	lds	r20, 0x03F1	; 0x8003f1 <R_measure_1+0x2>
     90a:	50 91 f2 03 	lds	r21, 0x03F2	; 0x8003f2 <R_measure_1+0x3>
     90e:	69 85       	ldd	r22, Y+9	; 0x09
     910:	7a 85       	ldd	r23, Y+10	; 0x0a
     912:	8b 85       	ldd	r24, Y+11	; 0x0b
     914:	9c 85       	ldd	r25, Y+12	; 0x0c
     916:	b3 d6       	rcall	.+3430   	; 0x167e <__addsf3>
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     918:	4b 01       	movw	r8, r22
     91a:	5c 01       	movw	r10, r24
     91c:	9b 01       	movw	r18, r22
     91e:	ac 01       	movw	r20, r24
     920:	69 85       	ldd	r22, Y+9	; 0x09
     922:	7a 85       	ldd	r23, Y+10	; 0x0a
     924:	8b 85       	ldd	r24, Y+11	; 0x0b
     926:	9c 85       	ldd	r25, Y+12	; 0x0c
     928:	74 d7       	rcall	.+3816   	; 0x1812 <__divsf3>
     92a:	69 83       	std	Y+1, r22	; 0x01
     92c:	7a 83       	std	Y+2, r23	; 0x02
	K_1[1] = P_1[1][0] / S_1;
     92e:	8b 83       	std	Y+3, r24	; 0x03
     930:	9c 83       	std	Y+4, r25	; 0x04
     932:	a5 01       	movw	r20, r10
     934:	94 01       	movw	r18, r8
     936:	6d 85       	ldd	r22, Y+13	; 0x0d
     938:	7e 85       	ldd	r23, Y+14	; 0x0e
     93a:	8f 85       	ldd	r24, Y+15	; 0x0f
     93c:	98 89       	ldd	r25, Y+16	; 0x10
     93e:	69 d7       	rcall	.+3794   	; 0x1812 <__divsf3>
     940:	6d 83       	std	Y+5, r22	; 0x05
     942:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     944:	8f 83       	std	Y+7, r24	; 0x07
     946:	98 87       	std	Y+8, r25	; 0x08
     948:	2d 89       	ldd	r18, Y+21	; 0x15
     94a:	3e 89       	ldd	r19, Y+22	; 0x16
     94c:	4f 89       	ldd	r20, Y+23	; 0x17
     94e:	58 8d       	ldd	r21, Y+24	; 0x18
     950:	69 89       	ldd	r22, Y+17	; 0x11
     952:	7a 89       	ldd	r23, Y+18	; 0x12
     954:	8b 89       	ldd	r24, Y+19	; 0x13
     956:	9c 89       	ldd	r25, Y+20	; 0x14
     958:	91 d6       	rcall	.+3362   	; 0x167c <__subsf3>
     95a:	69 8b       	std	Y+17, r22	; 0x11
     95c:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     95e:	8b 8b       	std	Y+19, r24	; 0x13
     960:	9c 8b       	std	Y+20, r25	; 0x14
     962:	9b 01       	movw	r18, r22
     964:	ac 01       	movw	r20, r24
     966:	69 81       	ldd	r22, Y+1	; 0x01
     968:	7a 81       	ldd	r23, Y+2	; 0x02
     96a:	8b 81       	ldd	r24, Y+3	; 0x03
     96c:	9c 81       	ldd	r25, Y+4	; 0x04
     96e:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     972:	2d 89       	ldd	r18, Y+21	; 0x15
     974:	3e 89       	ldd	r19, Y+22	; 0x16
     976:	4f 89       	ldd	r20, Y+23	; 0x17
     978:	58 8d       	ldd	r21, Y+24	; 0x18
     97a:	81 d6       	rcall	.+3330   	; 0x167e <__addsf3>
     97c:	4b 01       	movw	r8, r22
     97e:	5c 01       	movw	r10, r24
     980:	60 93 cb 03 	sts	0x03CB, r22	; 0x8003cb <angle_1>
     984:	70 93 cc 03 	sts	0x03CC, r23	; 0x8003cc <angle_1+0x1>
     988:	80 93 cd 03 	sts	0x03CD, r24	; 0x8003cd <angle_1+0x2>
	bias_1 += K_1[1] * y_1;
     98c:	90 93 ce 03 	sts	0x03CE, r25	; 0x8003ce <angle_1+0x3>
     990:	29 89       	ldd	r18, Y+17	; 0x11
     992:	3a 89       	ldd	r19, Y+18	; 0x12
     994:	4b 89       	ldd	r20, Y+19	; 0x13
     996:	5c 89       	ldd	r21, Y+20	; 0x14
     998:	6d 81       	ldd	r22, Y+5	; 0x05
     99a:	7e 81       	ldd	r23, Y+6	; 0x06
     99c:	8f 81       	ldd	r24, Y+7	; 0x07
     99e:	98 85       	ldd	r25, Y+8	; 0x08
     9a0:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     9a4:	a7 01       	movw	r20, r14
     9a6:	96 01       	movw	r18, r12
     9a8:	6a d6       	rcall	.+3284   	; 0x167e <__addsf3>
     9aa:	60 93 e7 03 	sts	0x03E7, r22	; 0x8003e7 <bias_1>
     9ae:	70 93 e8 03 	sts	0x03E8, r23	; 0x8003e8 <bias_1+0x1>
     9b2:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <bias_1+0x2>
     9b6:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <bias_1+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     9ba:	29 81       	ldd	r18, Y+1	; 0x01
     9bc:	3a 81       	ldd	r19, Y+2	; 0x02
     9be:	4b 81       	ldd	r20, Y+3	; 0x03
     9c0:	5c 81       	ldd	r21, Y+4	; 0x04
     9c2:	69 85       	ldd	r22, Y+9	; 0x09
     9c4:	7a 85       	ldd	r23, Y+10	; 0x0a
     9c6:	8b 85       	ldd	r24, Y+11	; 0x0b
     9c8:	9c 85       	ldd	r25, Y+12	; 0x0c
     9ca:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     9ce:	9b 01       	movw	r18, r22
     9d0:	ac 01       	movw	r20, r24
     9d2:	69 85       	ldd	r22, Y+9	; 0x09
     9d4:	7a 85       	ldd	r23, Y+10	; 0x0a
     9d6:	8b 85       	ldd	r24, Y+11	; 0x0b
     9d8:	9c 85       	ldd	r25, Y+12	; 0x0c
     9da:	50 d6       	rcall	.+3232   	; 0x167c <__subsf3>
     9dc:	ef ec       	ldi	r30, 0xCF	; 207
     9de:	f3 e0       	ldi	r31, 0x03	; 3
     9e0:	60 83       	st	Z, r22
     9e2:	71 83       	std	Z+1, r23	; 0x01
	P_1[0][1] -= K_1[0] * P01_temp_1;
     9e4:	82 83       	std	Z+2, r24	; 0x02
     9e6:	93 83       	std	Z+3, r25	; 0x03
     9e8:	29 81       	ldd	r18, Y+1	; 0x01
     9ea:	3a 81       	ldd	r19, Y+2	; 0x02
     9ec:	4b 81       	ldd	r20, Y+3	; 0x03
     9ee:	5c 81       	ldd	r21, Y+4	; 0x04
     9f0:	c3 01       	movw	r24, r6
     9f2:	b2 01       	movw	r22, r4
     9f4:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     9f8:	9b 01       	movw	r18, r22
     9fa:	ac 01       	movw	r20, r24
     9fc:	c3 01       	movw	r24, r6
     9fe:	b2 01       	movw	r22, r4
     a00:	3d d6       	rcall	.+3194   	; 0x167c <__subsf3>
     a02:	60 93 d3 03 	sts	0x03D3, r22	; 0x8003d3 <P_1+0x4>
     a06:	70 93 d4 03 	sts	0x03D4, r23	; 0x8003d4 <P_1+0x5>
     a0a:	80 93 d5 03 	sts	0x03D5, r24	; 0x8003d5 <P_1+0x6>
	P_1[1][0] -= K_1[1] * P00_temp_1;
     a0e:	90 93 d6 03 	sts	0x03D6, r25	; 0x8003d6 <P_1+0x7>
     a12:	2d 81       	ldd	r18, Y+5	; 0x05
     a14:	3e 81       	ldd	r19, Y+6	; 0x06
     a16:	4f 81       	ldd	r20, Y+7	; 0x07
     a18:	58 85       	ldd	r21, Y+8	; 0x08
     a1a:	69 85       	ldd	r22, Y+9	; 0x09
     a1c:	7a 85       	ldd	r23, Y+10	; 0x0a
     a1e:	8b 85       	ldd	r24, Y+11	; 0x0b
     a20:	9c 85       	ldd	r25, Y+12	; 0x0c
     a22:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     a26:	9b 01       	movw	r18, r22
     a28:	ac 01       	movw	r20, r24
     a2a:	6d 85       	ldd	r22, Y+13	; 0x0d
     a2c:	7e 85       	ldd	r23, Y+14	; 0x0e
     a2e:	8f 85       	ldd	r24, Y+15	; 0x0f
     a30:	98 89       	ldd	r25, Y+16	; 0x10
     a32:	24 d6       	rcall	.+3144   	; 0x167c <__subsf3>
     a34:	60 93 d7 03 	sts	0x03D7, r22	; 0x8003d7 <P_1+0x8>
     a38:	70 93 d8 03 	sts	0x03D8, r23	; 0x8003d8 <P_1+0x9>
     a3c:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <P_1+0xa>
	P_1[1][1] -= K_1[1] * P01_temp_1;
     a40:	90 93 da 03 	sts	0x03DA, r25	; 0x8003da <P_1+0xb>
     a44:	2d 81       	ldd	r18, Y+5	; 0x05
     a46:	3e 81       	ldd	r19, Y+6	; 0x06
     a48:	4f 81       	ldd	r20, Y+7	; 0x07
     a4a:	58 85       	ldd	r21, Y+8	; 0x08
     a4c:	c3 01       	movw	r24, r6
     a4e:	b2 01       	movw	r22, r4
     a50:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     a54:	9b 01       	movw	r18, r22
     a56:	ac 01       	movw	r20, r24
     a58:	69 8d       	ldd	r22, Y+25	; 0x19
     a5a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a5c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a5e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a60:	0d d6       	rcall	.+3098   	; 0x167c <__subsf3>
     a62:	60 93 db 03 	sts	0x03DB, r22	; 0x8003db <P_1+0xc>
     a66:	70 93 dc 03 	sts	0x03DC, r23	; 0x8003dc <P_1+0xd>
     a6a:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <P_1+0xe>
     a6e:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <P_1+0xf>

	return angle_1;
};
     a72:	c5 01       	movw	r24, r10
     a74:	b4 01       	movw	r22, r8
     a76:	6c 96       	adiw	r28, 0x1c	; 28
     a78:	0f b6       	in	r0, 0x3f	; 63
     a7a:	f8 94       	cli
     a7c:	de bf       	out	0x3e, r29	; 62
     a7e:	0f be       	out	0x3f, r0	; 63
     a80:	cd bf       	out	0x3d, r28	; 61
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	1f 91       	pop	r17
     a88:	0f 91       	pop	r16
     a8a:	ff 90       	pop	r15
     a8c:	ef 90       	pop	r14
     a8e:	df 90       	pop	r13
     a90:	cf 90       	pop	r12
     a92:	bf 90       	pop	r11
     a94:	af 90       	pop	r10
     a96:	9f 90       	pop	r9
     a98:	8f 90       	pop	r8
     a9a:	7f 90       	pop	r7
     a9c:	6f 90       	pop	r6
     a9e:	5f 90       	pop	r5
     aa0:	4f 90       	pop	r4
     aa2:	08 95       	ret

00000aa4 <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     aa4:	8f e6       	ldi	r24, 0x6F	; 111
     aa6:	92 e1       	ldi	r25, 0x12	; 18
     aa8:	a3 e8       	ldi	r26, 0x83	; 131
     aaa:	ba e3       	ldi	r27, 0x3A	; 58
     aac:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <Q_angle_1>
     ab0:	90 93 08 04 	sts	0x0408, r25	; 0x800408 <Q_angle_1+0x1>
     ab4:	a0 93 09 04 	sts	0x0409, r26	; 0x800409 <Q_angle_1+0x2>
     ab8:	b0 93 0a 04 	sts	0x040A, r27	; 0x80040a <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     abc:	86 ea       	ldi	r24, 0xA6	; 166
     abe:	9b e9       	ldi	r25, 0x9B	; 155
     ac0:	a4 e4       	ldi	r26, 0x44	; 68
     ac2:	bb e3       	ldi	r27, 0x3B	; 59
     ac4:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <Q_bias_1>
     ac8:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <Q_bias_1+0x1>
     acc:	a0 93 f5 03 	sts	0x03F5, r26	; 0x8003f5 <Q_bias_1+0x2>
     ad0:	b0 93 f6 03 	sts	0x03F6, r27	; 0x8003f6 <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     ad4:	8f e8       	ldi	r24, 0x8F	; 143
     ad6:	92 ec       	ldi	r25, 0xC2	; 194
     ad8:	a5 ef       	ldi	r26, 0xF5	; 245
     ada:	bc e3       	ldi	r27, 0x3C	; 60
     adc:	80 93 ef 03 	sts	0x03EF, r24	; 0x8003ef <R_measure_1>
     ae0:	90 93 f0 03 	sts	0x03F0, r25	; 0x8003f0 <R_measure_1+0x1>
     ae4:	a0 93 f1 03 	sts	0x03F1, r26	; 0x8003f1 <R_measure_1+0x2>
     ae8:	b0 93 f2 03 	sts	0x03F2, r27	; 0x8003f2 <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     aec:	10 92 cb 03 	sts	0x03CB, r1	; 0x8003cb <angle_1>
     af0:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <angle_1+0x1>
     af4:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <angle_1+0x2>
     af8:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     afc:	10 92 e7 03 	sts	0x03E7, r1	; 0x8003e7 <bias_1>
     b00:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <bias_1+0x1>
     b04:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <bias_1+0x2>
     b08:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     b0c:	ef ec       	ldi	r30, 0xCF	; 207
     b0e:	f3 e0       	ldi	r31, 0x03	; 3
     b10:	10 82       	st	Z, r1
     b12:	11 82       	std	Z+1, r1	; 0x01
     b14:	12 82       	std	Z+2, r1	; 0x02
     b16:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     b18:	14 82       	std	Z+4, r1	; 0x04
     b1a:	15 82       	std	Z+5, r1	; 0x05
     b1c:	16 82       	std	Z+6, r1	; 0x06
     b1e:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     b20:	10 86       	std	Z+8, r1	; 0x08
     b22:	11 86       	std	Z+9, r1	; 0x09
     b24:	12 86       	std	Z+10, r1	; 0x0a
     b26:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     b28:	14 86       	std	Z+12, r1	; 0x0c
     b2a:	15 86       	std	Z+13, r1	; 0x0d
     b2c:	16 86       	std	Z+14, r1	; 0x0e
     b2e:	17 86       	std	Z+15, r1	; 0x0f
     b30:	08 95       	ret

00000b32 <main>:
float kalman_angle_roll;
float kalman_angle_pitch;

/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     b32:	cf 93       	push	r28
     b34:	df 93       	push	r29
     b36:	cd b7       	in	r28, 0x3d	; 61
     b38:	de b7       	in	r29, 0x3e	; 62
     b3a:	6c 97       	sbiw	r28, 0x1c	; 28
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	f8 94       	cli
     b40:	de bf       	out	0x3e, r29	; 62
     b42:	0f be       	out	0x3f, r0	; 63
     b44:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     b46:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <U_step+0x1>
     b4a:	10 92 a2 03 	sts	0x03A2, r1	; 0x8003a2 <U_step>
	V_step=V_step_predefine;
     b4e:	28 e7       	ldi	r18, 0x78	; 120
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     b56:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step_predefine;
     b5a:	80 ef       	ldi	r24, 0xF0	; 240
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     b62:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	U_step_2=U_step_predefine;
     b66:	10 92 a1 03 	sts	0x03A1, r1	; 0x8003a1 <__data_end+0x1>
     b6a:	10 92 a0 03 	sts	0x03A0, r1	; 0x8003a0 <__data_end>
	V_step_2=V_step_predefine;
     b6e:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     b72:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_predefine;
     b76:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     b7a:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	incr=-1;
     b7e:	8f ef       	ldi	r24, 0xFF	; 255
     b80:	9f ef       	ldi	r25, 0xFF	; 255
     b82:	90 93 ba 03 	sts	0x03BA, r25	; 0x8003ba <incr+0x1>
     b86:	80 93 b9 03 	sts	0x03B9, r24	; 0x8003b9 <incr>
	incr_2=-1;
     b8a:	90 93 b8 03 	sts	0x03B8, r25	; 0x8003b8 <incr_2+0x1>
     b8e:	80 93 b7 03 	sts	0x03B7, r24	; 0x8003b7 <incr_2>
	pwm_delay=15000;
     b92:	88 e9       	ldi	r24, 0x98	; 152
     b94:	9a e3       	ldi	r25, 0x3A	; 58
     b96:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <pwm_delay+0x1>
     b9a:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <pwm_delay>
	pwm_delay_2=15000;
     b9e:	90 93 b2 03 	sts	0x03B2, r25	; 0x8003b2 <pwm_delay_2+0x1>
     ba2:	80 93 b1 03 	sts	0x03B1, r24	; 0x8003b1 <pwm_delay_2>
	cli();
	init_gpio();
     ba6:	f8 94       	cli
     ba8:	56 db       	rcall	.-2388   	; 0x256 <init_gpio>
     baa:	d8 db       	rcall	.-2128   	; 0x35c <init_motor_gpio>
     bac:	3f d4       	rcall	.+2174   	; 0x142c <i2c_init>
     bae:	8c e0       	ldi	r24, 0x0C	; 12
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	ed d4       	rcall	.+2522   	; 0x158e <USART_Init>
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	70 e0       	ldi	r23, 0x00	; 0
     bb8:	82 ed       	ldi	r24, 0xD2	; 210
     bba:	9a e0       	ldi	r25, 0x0A	; 10
     bbc:	0e 94 df 12 	call	0x25be	; 0x25be <fdevopen>
     bc0:	90 93 0c 04 	sts	0x040C, r25	; 0x80040c <uart_str+0x1>
     bc4:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <uart_str>
     bc8:	82 d3       	rcall	.+1796   	; 0x12ce <setup_timer0>
     bca:	88 d3       	rcall	.+1808   	; 0x12dc <Enable_timer0_overflow_interrupt>
     bcc:	40 d3       	rcall	.+1664   	; 0x124e <setup_timer4>
     bce:	53 d3       	rcall	.+1702   	; 0x1276 <setup_timer3>
     bd0:	66 d3       	rcall	.+1740   	; 0x129e <setup_timer5>
     bd2:	6e d3       	rcall	.+1756   	; 0x12b0 <Enable_timer5_compare_interrupt>
     bd4:	73 d3       	rcall	.+1766   	; 0x12bc <setup_timer1>
     bd6:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <pwm_delay>
     bda:	90 91 b4 03 	lds	r25, 0x03B4	; 0x8003b4 <pwm_delay+0x1>
     bde:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     be2:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     be6:	80 91 b1 03 	lds	r24, 0x03B1	; 0x8003b1 <pwm_delay_2>
     bea:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <pwm_delay_2+0x1>
     bee:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     bf2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     bf6:	78 d3       	rcall	.+1776   	; 0x12e8 <micros>
     bf8:	6d 87       	std	Y+13, r22	; 0x0d
     bfa:	7e 87       	std	Y+14, r23	; 0x0e
     bfc:	8f 87       	std	Y+15, r24	; 0x0f
     bfe:	98 8b       	std	Y+16, r25	; 0x10
     c00:	67 e0       	ldi	r22, 0x07	; 7
     c02:	89 e1       	ldi	r24, 0x19	; 25
     c04:	dc d1       	rcall	.+952    	; 0xfbe <mpu6050_writeByte>
     c06:	60 e0       	ldi	r22, 0x00	; 0
     c08:	8a e1       	ldi	r24, 0x1A	; 26
     c0a:	d9 d1       	rcall	.+946    	; 0xfbe <mpu6050_writeByte>
     c0c:	68 e0       	ldi	r22, 0x08	; 8
     c0e:	8b e1       	ldi	r24, 0x1B	; 27
     c10:	d6 d1       	rcall	.+940    	; 0xfbe <mpu6050_writeByte>
     c12:	60 e1       	ldi	r22, 0x10	; 16
     c14:	8c e1       	ldi	r24, 0x1C	; 28
     c16:	d3 d1       	rcall	.+934    	; 0xfbe <mpu6050_writeByte>
     c18:	61 e0       	ldi	r22, 0x01	; 1
     c1a:	8b e6       	ldi	r24, 0x6B	; 107
     c1c:	d0 d1       	rcall	.+928    	; 0xfbe <mpu6050_writeByte>
     c1e:	67 dd       	rcall	.-1330   	; 0x6ee <Kalman_init>
     c20:	41 df       	rcall	.-382    	; 0xaa4 <Kalman_init_1>
     c22:	2f ef       	ldi	r18, 0xFF	; 255
     c24:	31 ee       	ldi	r19, 0xE1	; 225
     c26:	44 e0       	ldi	r20, 0x04	; 4
     c28:	21 50       	subi	r18, 0x01	; 1
     c2a:	30 40       	sbci	r19, 0x00	; 0
     c2c:	40 40       	sbci	r20, 0x00	; 0
     c2e:	e1 f7       	brne	.-8      	; 0xc28 <main+0xf6>
     c30:	00 c0       	rjmp	.+0      	; 0xc32 <main+0x100>
     c32:	00 00       	nop
     c34:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <angle>
     c38:	10 92 ec 03 	sts	0x03EC, r1	; 0x8003ec <angle+0x1>
     c3c:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <angle+0x2>
     c40:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <angle+0x3>
     c44:	10 92 cb 03 	sts	0x03CB, r1	; 0x8003cb <angle_1>
     c48:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <angle_1+0x1>
     c4c:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <angle_1+0x2>
     c50:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <angle_1+0x3>
     c54:	78 94       	sei
     c56:	0f 2e       	mov	r0, r31
     c58:	f4 e6       	ldi	r31, 0x64	; 100
     c5a:	2f 2e       	mov	r2, r31
     c5c:	31 2c       	mov	r3, r1
     c5e:	f0 2d       	mov	r31, r0
     c60:	ce 01       	movw	r24, r28
     c62:	05 96       	adiw	r24, 0x05	; 5
     c64:	7c 01       	movw	r14, r24
     c66:	8e 01       	movw	r16, r28
     c68:	0d 5f       	subi	r16, 0xFD	; 253
     c6a:	1f 4f       	sbci	r17, 0xFF	; 255
     c6c:	9e 01       	movw	r18, r28
     c6e:	2f 5f       	subi	r18, 0xFF	; 255
     c70:	3f 4f       	sbci	r19, 0xFF	; 255
     c72:	ae 01       	movw	r20, r28
     c74:	45 5f       	subi	r20, 0xF5	; 245
     c76:	5f 4f       	sbci	r21, 0xFF	; 255
     c78:	be 01       	movw	r22, r28
     c7a:	67 5f       	subi	r22, 0xF7	; 247
     c7c:	7f 4f       	sbci	r23, 0xFF	; 255
     c7e:	02 96       	adiw	r24, 0x02	; 2
     c80:	f4 d1       	rcall	.+1000   	; 0x106a <mpu6050_getRawData>
     c82:	89 81       	ldd	r24, Y+1	; 0x01
     c84:	9a 81       	ldd	r25, Y+2	; 0x02
     c86:	84 59       	subi	r24, 0x94	; 148
     c88:	9f 4f       	sbci	r25, 0xFF	; 255
     c8a:	9a 83       	std	Y+2, r25	; 0x02
     c8c:	89 83       	std	Y+1, r24	; 0x01
     c8e:	8b 81       	ldd	r24, Y+3	; 0x03
     c90:	9c 81       	ldd	r25, Y+4	; 0x04
     c92:	80 52       	subi	r24, 0x20	; 32
     c94:	9f 4f       	sbci	r25, 0xFF	; 255
     c96:	9c 83       	std	Y+4, r25	; 0x04
     c98:	8b 83       	std	Y+3, r24	; 0x03
     c9a:	8d 81       	ldd	r24, Y+5	; 0x05
     c9c:	9e 81       	ldd	r25, Y+6	; 0x06
     c9e:	8f 58       	subi	r24, 0x8F	; 143
     ca0:	9d 4f       	sbci	r25, 0xFD	; 253
     ca2:	9e 83       	std	Y+6, r25	; 0x06
     ca4:	8d 83       	std	Y+5, r24	; 0x05
     ca6:	20 d3       	rcall	.+1600   	; 0x12e8 <micros>
     ca8:	2d 85       	ldd	r18, Y+13	; 0x0d
     caa:	3e 85       	ldd	r19, Y+14	; 0x0e
     cac:	4f 85       	ldd	r20, Y+15	; 0x0f
     cae:	58 89       	ldd	r21, Y+16	; 0x10
     cb0:	62 1b       	sub	r22, r18
     cb2:	73 0b       	sbc	r23, r19
     cb4:	84 0b       	sbc	r24, r20
     cb6:	95 0b       	sbc	r25, r21
     cb8:	45 d6       	rcall	.+3210   	; 0x1944 <__floatunsisf>
     cba:	20 e0       	ldi	r18, 0x00	; 0
     cbc:	34 e2       	ldi	r19, 0x24	; 36
     cbe:	44 e7       	ldi	r20, 0x74	; 116
     cc0:	59 e4       	ldi	r21, 0x49	; 73
     cc2:	a7 d5       	rcall	.+2894   	; 0x1812 <__divsf3>
     cc4:	60 93 27 04 	sts	0x0427, r22	; 0x800427 <dt>
     cc8:	70 93 28 04 	sts	0x0428, r23	; 0x800428 <dt+0x1>
     ccc:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <dt+0x2>
     cd0:	90 93 2a 04 	sts	0x042A, r25	; 0x80042a <dt+0x3>
     cd4:	09 d3       	rcall	.+1554   	; 0x12e8 <micros>
     cd6:	6d 87       	std	Y+13, r22	; 0x0d
     cd8:	7e 87       	std	Y+14, r23	; 0x0e
     cda:	8f 87       	std	Y+15, r24	; 0x0f
     cdc:	98 8b       	std	Y+16, r25	; 0x10
     cde:	69 81       	ldd	r22, Y+1	; 0x01
     ce0:	7a 81       	ldd	r23, Y+2	; 0x02
     ce2:	07 2e       	mov	r0, r23
     ce4:	00 0c       	add	r0, r0
     ce6:	88 0b       	sbc	r24, r24
     ce8:	99 0b       	sbc	r25, r25
     cea:	2e d6       	rcall	.+3164   	; 0x1948 <__floatsisf>
     cec:	20 e0       	ldi	r18, 0x00	; 0
     cee:	30 e0       	ldi	r19, 0x00	; 0
     cf0:	43 e8       	ldi	r20, 0x83	; 131
     cf2:	52 e4       	ldi	r21, 0x42	; 66
     cf4:	8e d5       	rcall	.+2844   	; 0x1812 <__divsf3>
     cf6:	69 8b       	std	Y+17, r22	; 0x11
     cf8:	7a 8b       	std	Y+18, r23	; 0x12
     cfa:	8b 8b       	std	Y+19, r24	; 0x13
     cfc:	9c 8b       	std	Y+20, r25	; 0x14
     cfe:	6b 81       	ldd	r22, Y+3	; 0x03
     d00:	7c 81       	ldd	r23, Y+4	; 0x04
     d02:	07 2e       	mov	r0, r23
     d04:	00 0c       	add	r0, r0
     d06:	88 0b       	sbc	r24, r24
     d08:	99 0b       	sbc	r25, r25
     d0a:	1e d6       	rcall	.+3132   	; 0x1948 <__floatsisf>
     d0c:	20 e0       	ldi	r18, 0x00	; 0
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	43 e8       	ldi	r20, 0x83	; 131
     d12:	52 e4       	ldi	r21, 0x42	; 66
     d14:	7e d5       	rcall	.+2812   	; 0x1812 <__divsf3>
     d16:	6d 8b       	std	Y+21, r22	; 0x15
     d18:	7e 8b       	std	Y+22, r23	; 0x16
     d1a:	8f 8b       	std	Y+23, r24	; 0x17
     d1c:	98 8f       	std	Y+24, r25	; 0x18
     d1e:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <loop_bool>
     d22:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <loop_bool+0x1>
     d26:	89 2b       	or	r24, r25
     d28:	21 f0       	breq	.+8      	; 0xd32 <main+0x200>
     d2a:	10 92 84 03 	sts	0x0384, r1	; 0x800384 <loop_bool+0x1>
     d2e:	10 92 83 03 	sts	0x0383, r1	; 0x800383 <loop_bool>
     d32:	eb 84       	ldd	r14, Y+11	; 0x0b
     d34:	fc 84       	ldd	r15, Y+12	; 0x0c
     d36:	c9 84       	ldd	r12, Y+9	; 0x09
     d38:	da 84       	ldd	r13, Y+10	; 0x0a
     d3a:	b7 01       	movw	r22, r14
     d3c:	0f 2c       	mov	r0, r15
     d3e:	00 0c       	add	r0, r0
     d40:	88 0b       	sbc	r24, r24
     d42:	99 0b       	sbc	r25, r25
     d44:	01 d6       	rcall	.+3074   	; 0x1948 <__floatsisf>
     d46:	4b 01       	movw	r8, r22
     d48:	5c 01       	movw	r10, r24
     d4a:	b6 01       	movw	r22, r12
     d4c:	0d 2c       	mov	r0, r13
     d4e:	00 0c       	add	r0, r0
     d50:	88 0b       	sbc	r24, r24
     d52:	99 0b       	sbc	r25, r25
     d54:	f9 d5       	rcall	.+3058   	; 0x1948 <__floatsisf>
     d56:	a5 01       	movw	r20, r10
     d58:	94 01       	movw	r18, r8
     d5a:	04 d5       	rcall	.+2568   	; 0x1764 <atan2>
     d5c:	69 8f       	std	Y+25, r22	; 0x19
     d5e:	7a 8f       	std	Y+26, r23	; 0x1a
     d60:	8b 8f       	std	Y+27, r24	; 0x1b
     d62:	9c 8f       	std	Y+28, r25	; 0x1c
     d64:	c6 01       	movw	r24, r12
     d66:	b1 01       	movw	r22, r2
     d68:	0e 94 ca 11 	call	0x2394	; 0x2394 <__divmodhi4>
     d6c:	07 2e       	mov	r0, r23
     d6e:	00 0c       	add	r0, r0
     d70:	88 0b       	sbc	r24, r24
     d72:	99 0b       	sbc	r25, r25
     d74:	e9 d5       	rcall	.+3026   	; 0x1948 <__floatsisf>
     d76:	4b 01       	movw	r8, r22
     d78:	5c 01       	movw	r10, r24
     d7a:	c7 01       	movw	r24, r14
     d7c:	b1 01       	movw	r22, r2
     d7e:	0e 94 ca 11 	call	0x2394	; 0x2394 <__divmodhi4>
     d82:	07 2e       	mov	r0, r23
     d84:	00 0c       	add	r0, r0
     d86:	88 0b       	sbc	r24, r24
     d88:	99 0b       	sbc	r25, r25
     d8a:	de d5       	rcall	.+3004   	; 0x1948 <__floatsisf>
     d8c:	6b 01       	movw	r12, r22
     d8e:	7c 01       	movw	r14, r24
     d90:	a5 01       	movw	r20, r10
     d92:	94 01       	movw	r18, r8
     d94:	c5 01       	movw	r24, r10
     d96:	b4 01       	movw	r22, r8
     d98:	b7 d6       	rcall	.+3438   	; 0x1b08 <__mulsf3>
     d9a:	4b 01       	movw	r8, r22
     d9c:	5c 01       	movw	r10, r24
     d9e:	a7 01       	movw	r20, r14
     da0:	96 01       	movw	r18, r12
     da2:	c7 01       	movw	r24, r14
     da4:	b6 01       	movw	r22, r12
     da6:	b0 d6       	rcall	.+3424   	; 0x1b08 <__mulsf3>
     da8:	9b 01       	movw	r18, r22
     daa:	ac 01       	movw	r20, r24
     dac:	c5 01       	movw	r24, r10
     dae:	b4 01       	movw	r22, r8
     db0:	66 d4       	rcall	.+2252   	; 0x167e <__addsf3>
     db2:	11 d7       	rcall	.+3618   	; 0x1bd6 <sqrt>
     db4:	20 e0       	ldi	r18, 0x00	; 0
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	48 ec       	ldi	r20, 0xC8	; 200
     dba:	52 e4       	ldi	r21, 0x42	; 66
     dbc:	a5 d6       	rcall	.+3402   	; 0x1b08 <__mulsf3>
     dbe:	6b 01       	movw	r12, r22
     dc0:	7c 01       	movw	r14, r24
     dc2:	6f 81       	ldd	r22, Y+7	; 0x07
     dc4:	78 85       	ldd	r23, Y+8	; 0x08
     dc6:	07 2e       	mov	r0, r23
     dc8:	00 0c       	add	r0, r0
     dca:	88 0b       	sbc	r24, r24
     dcc:	99 0b       	sbc	r25, r25
     dce:	bc d5       	rcall	.+2936   	; 0x1948 <__floatsisf>
     dd0:	a7 01       	movw	r20, r14
     dd2:	96 01       	movw	r18, r12
     dd4:	c7 d4       	rcall	.+2446   	; 0x1764 <atan2>
     dd6:	4b 01       	movw	r8, r22
     dd8:	5c 01       	movw	r10, r24
     dda:	c0 90 27 04 	lds	r12, 0x0427	; 0x800427 <dt>
     dde:	d0 90 28 04 	lds	r13, 0x0428	; 0x800428 <dt+0x1>
     de2:	e0 90 29 04 	lds	r14, 0x0429	; 0x800429 <dt+0x2>
     de6:	f0 90 2a 04 	lds	r15, 0x042A	; 0x80042a <dt+0x3>
     dea:	21 ee       	ldi	r18, 0xE1	; 225
     dec:	3e e2       	ldi	r19, 0x2E	; 46
     dee:	45 e6       	ldi	r20, 0x65	; 101
     df0:	52 e4       	ldi	r21, 0x42	; 66
     df2:	69 8d       	ldd	r22, Y+25	; 0x19
     df4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     df6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     df8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     dfa:	86 d6       	rcall	.+3340   	; 0x1b08 <__mulsf3>
     dfc:	87 01       	movw	r16, r14
     dfe:	76 01       	movw	r14, r12
     e00:	29 89       	ldd	r18, Y+17	; 0x11
     e02:	3a 89       	ldd	r19, Y+18	; 0x12
     e04:	4b 89       	ldd	r20, Y+19	; 0x13
     e06:	5c 89       	ldd	r21, Y+20	; 0x14
     e08:	cc da       	rcall	.-2664   	; 0x3a2 <getAngle>
     e0a:	60 93 2b 04 	sts	0x042B, r22	; 0x80042b <kalman_angle_roll>
     e0e:	70 93 2c 04 	sts	0x042C, r23	; 0x80042c <kalman_angle_roll+0x1>
     e12:	80 93 2d 04 	sts	0x042D, r24	; 0x80042d <kalman_angle_roll+0x2>
     e16:	90 93 2e 04 	sts	0x042E, r25	; 0x80042e <kalman_angle_roll+0x3>
     e1a:	c0 90 27 04 	lds	r12, 0x0427	; 0x800427 <dt>
     e1e:	d0 90 28 04 	lds	r13, 0x0428	; 0x800428 <dt+0x1>
     e22:	e0 90 29 04 	lds	r14, 0x0429	; 0x800429 <dt+0x2>
     e26:	f0 90 2a 04 	lds	r15, 0x042A	; 0x80042a <dt+0x3>
     e2a:	21 ee       	ldi	r18, 0xE1	; 225
     e2c:	3e e2       	ldi	r19, 0x2E	; 46
     e2e:	45 e6       	ldi	r20, 0x65	; 101
     e30:	52 e4       	ldi	r21, 0x42	; 66
     e32:	c5 01       	movw	r24, r10
     e34:	b4 01       	movw	r22, r8
     e36:	68 d6       	rcall	.+3280   	; 0x1b08 <__mulsf3>
     e38:	87 01       	movw	r16, r14
     e3a:	76 01       	movw	r14, r12
     e3c:	2d 89       	ldd	r18, Y+21	; 0x15
     e3e:	3e 89       	ldd	r19, Y+22	; 0x16
     e40:	4f 89       	ldd	r20, Y+23	; 0x17
     e42:	58 8d       	ldd	r21, Y+24	; 0x18
     e44:	9b dc       	rcall	.-1738   	; 0x77c <getAngle_1>
     e46:	60 93 11 04 	sts	0x0411, r22	; 0x800411 <kalman_angle_pitch>
     e4a:	70 93 12 04 	sts	0x0412, r23	; 0x800412 <kalman_angle_pitch+0x1>
     e4e:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <kalman_angle_pitch+0x2>
     e52:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <kalman_angle_pitch+0x3>
     e56:	40 91 2b 04 	lds	r20, 0x042B	; 0x80042b <kalman_angle_roll>
     e5a:	50 91 2c 04 	lds	r21, 0x042C	; 0x80042c <kalman_angle_roll+0x1>
     e5e:	60 91 2d 04 	lds	r22, 0x042D	; 0x80042d <kalman_angle_roll+0x2>
     e62:	70 91 2e 04 	lds	r23, 0x042E	; 0x80042e <kalman_angle_roll+0x3>
     e66:	85 e8       	ldi	r24, 0x85	; 133
     e68:	93 e0       	ldi	r25, 0x03	; 3
     e6a:	e6 d3       	rcall	.+1996   	; 0x1638 <printSD>
     e6c:	40 91 a4 03 	lds	r20, 0x03A4	; 0x8003a4 <pid_i_roll>
     e70:	50 91 a5 03 	lds	r21, 0x03A5	; 0x8003a5 <pid_i_roll+0x1>
     e74:	60 91 a6 03 	lds	r22, 0x03A6	; 0x8003a6 <pid_i_roll+0x2>
     e78:	70 91 a7 03 	lds	r23, 0x03A7	; 0x8003a7 <pid_i_roll+0x3>
     e7c:	8c e8       	ldi	r24, 0x8C	; 140
     e7e:	93 e0       	ldi	r25, 0x03	; 3
     e80:	db d3       	rcall	.+1974   	; 0x1638 <printSD>
     e82:	a0 90 27 04 	lds	r10, 0x0427	; 0x800427 <dt>
     e86:	b0 90 28 04 	lds	r11, 0x0428	; 0x800428 <dt+0x1>
     e8a:	c0 90 29 04 	lds	r12, 0x0429	; 0x800429 <dt+0x2>
     e8e:	d0 90 2a 04 	lds	r13, 0x042A	; 0x80042a <dt+0x3>
     e92:	60 91 2b 04 	lds	r22, 0x042B	; 0x80042b <kalman_angle_roll>
     e96:	70 91 2c 04 	lds	r23, 0x042C	; 0x80042c <kalman_angle_roll+0x1>
     e9a:	80 91 2d 04 	lds	r24, 0x042D	; 0x80042d <kalman_angle_roll+0x2>
     e9e:	90 91 2e 04 	lds	r25, 0x042E	; 0x80042e <kalman_angle_roll+0x3>
     ea2:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <kd_roll+0x3>
     ea6:	2f 93       	push	r18
     ea8:	20 91 79 03 	lds	r18, 0x0379	; 0x800379 <kd_roll+0x2>
     eac:	2f 93       	push	r18
     eae:	20 91 78 03 	lds	r18, 0x0378	; 0x800378 <kd_roll+0x1>
     eb2:	2f 93       	push	r18
     eb4:	20 91 77 03 	lds	r18, 0x0377	; 0x800377 <kd_roll>
     eb8:	2f 93       	push	r18
     eba:	20 91 7e 03 	lds	r18, 0x037E	; 0x80037e <ki_roll+0x3>
     ebe:	2f 93       	push	r18
     ec0:	20 91 7d 03 	lds	r18, 0x037D	; 0x80037d <ki_roll+0x2>
     ec4:	2f 93       	push	r18
     ec6:	20 91 7c 03 	lds	r18, 0x037C	; 0x80037c <ki_roll+0x1>
     eca:	2f 93       	push	r18
     ecc:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <ki_roll>
     ed0:	2f 93       	push	r18
     ed2:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <kp_roll+0x3>
     ed6:	2f 93       	push	r18
     ed8:	20 91 81 03 	lds	r18, 0x0381	; 0x800381 <kp_roll+0x2>
     edc:	2f 93       	push	r18
     ede:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <kp_roll+0x1>
     ee2:	2f 93       	push	r18
     ee4:	20 91 7f 03 	lds	r18, 0x037F	; 0x80037f <kp_roll>
     ee8:	2f 93       	push	r18
     eea:	0f 2e       	mov	r0, r31
     eec:	fd e0       	ldi	r31, 0x0D	; 13
     eee:	ef 2e       	mov	r14, r31
     ef0:	f4 e0       	ldi	r31, 0x04	; 4
     ef2:	ff 2e       	mov	r15, r31
     ef4:	f0 2d       	mov	r31, r0
     ef6:	04 ea       	ldi	r16, 0xA4	; 164
     ef8:	13 e0       	ldi	r17, 0x03	; 3
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	a9 01       	movw	r20, r18
     f00:	1f d1       	rcall	.+574    	; 0x1140 <Compute_PID>
     f02:	6b 01       	movw	r12, r22
     f04:	7c 01       	movw	r14, r24
     f06:	ab 01       	movw	r20, r22
     f08:	bc 01       	movw	r22, r24
     f0a:	83 e9       	ldi	r24, 0x93	; 147
     f0c:	93 e0       	ldi	r25, 0x03	; 3
     f0e:	94 d3       	rcall	.+1832   	; 0x1638 <printSD>
     f10:	8a e0       	ldi	r24, 0x0A	; 10
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	0e 94 78 13 	call	0x26f0	; 0x26f0 <putchar>
     f18:	40 90 2b 04 	lds	r4, 0x042B	; 0x80042b <kalman_angle_roll>
     f1c:	50 90 2c 04 	lds	r5, 0x042C	; 0x80042c <kalman_angle_roll+0x1>
     f20:	60 90 2d 04 	lds	r6, 0x042D	; 0x80042d <kalman_angle_roll+0x2>
     f24:	70 90 2e 04 	lds	r7, 0x042E	; 0x80042e <kalman_angle_roll+0x3>
     f28:	c3 01       	movw	r24, r6
     f2a:	b2 01       	movw	r22, r4
     f2c:	da d4       	rcall	.+2484   	; 0x18e2 <__fixsfsi>
     f2e:	9b 01       	movw	r18, r22
     f30:	77 23       	and	r23, r23
     f32:	24 f4       	brge	.+8      	; 0xf3c <main+0x40a>
     f34:	22 27       	eor	r18, r18
     f36:	33 27       	eor	r19, r19
     f38:	26 1b       	sub	r18, r22
     f3a:	37 0b       	sbc	r19, r23
     f3c:	59 01       	movw	r10, r18
     f3e:	b9 01       	movw	r22, r18
     f40:	33 0f       	add	r19, r19
     f42:	88 0b       	sbc	r24, r24
     f44:	99 0b       	sbc	r25, r25
     f46:	00 d5       	rcall	.+2560   	; 0x1948 <__floatsisf>
     f48:	0f b6       	in	r0, 0x3f	; 63
     f4a:	f8 94       	cli
     f4c:	de bf       	out	0x3e, r29	; 62
     f4e:	0f be       	out	0x3f, r0	; 63
     f50:	cd bf       	out	0x3d, r28	; 61
     f52:	2c ee       	ldi	r18, 0xEC	; 236
     f54:	31 e5       	ldi	r19, 0x51	; 81
     f56:	48 e3       	ldi	r20, 0x38	; 56
     f58:	5e e3       	ldi	r21, 0x3E	; 62
     f5a:	57 d4       	rcall	.+2222   	; 0x180a <__cmpsf2>
     f5c:	18 16       	cp	r1, r24
     f5e:	24 f4       	brge	.+8      	; 0xf68 <main+0x436>
     f60:	5e e2       	ldi	r21, 0x2E	; 46
     f62:	a5 16       	cp	r10, r21
     f64:	b1 04       	cpc	r11, r1
     f66:	2c f0       	brlt	.+10     	; 0xf72 <main+0x440>
     f68:	10 92 ba 03 	sts	0x03BA, r1	; 0x8003ba <incr+0x1>
     f6c:	10 92 b9 03 	sts	0x03B9, r1	; 0x8003b9 <incr>
     f70:	77 ce       	rjmp	.-786    	; 0xc60 <main+0x12e>
     f72:	2c ee       	ldi	r18, 0xEC	; 236
     f74:	31 e5       	ldi	r19, 0x51	; 81
     f76:	48 e3       	ldi	r20, 0x38	; 56
     f78:	5e e3       	ldi	r21, 0x3E	; 62
     f7a:	c3 01       	movw	r24, r6
     f7c:	b2 01       	movw	r22, r4
     f7e:	b9 d5       	rcall	.+2930   	; 0x1af2 <__gesf2>
     f80:	18 16       	cp	r1, r24
     f82:	6c f4       	brge	.+26     	; 0xf9e <main+0x46c>
     f84:	c7 01       	movw	r24, r14
     f86:	b6 01       	movw	r22, r12
     f88:	ac d4       	rcall	.+2392   	; 0x18e2 <__fixsfsi>
     f8a:	cb 01       	movw	r24, r22
     f8c:	68 ee       	ldi	r22, 0xE8	; 232
     f8e:	73 e0       	ldi	r23, 0x03	; 3
     f90:	0e 94 ca 11 	call	0x2394	; 0x2394 <__divmodhi4>
     f94:	70 93 ba 03 	sts	0x03BA, r23	; 0x8003ba <incr+0x1>
     f98:	60 93 b9 03 	sts	0x03B9, r22	; 0x8003b9 <incr>
     f9c:	61 ce       	rjmp	.-830    	; 0xc60 <main+0x12e>
     f9e:	c7 01       	movw	r24, r14
     fa0:	b6 01       	movw	r22, r12
     fa2:	9f d4       	rcall	.+2366   	; 0x18e2 <__fixsfsi>
     fa4:	88 27       	eor	r24, r24
     fa6:	99 27       	eor	r25, r25
     fa8:	86 1b       	sub	r24, r22
     faa:	97 0b       	sbc	r25, r23
     fac:	68 ee       	ldi	r22, 0xE8	; 232
     fae:	73 e0       	ldi	r23, 0x03	; 3
     fb0:	0e 94 ca 11 	call	0x2394	; 0x2394 <__divmodhi4>
     fb4:	70 93 ba 03 	sts	0x03BA, r23	; 0x8003ba <incr+0x1>
     fb8:	60 93 b9 03 	sts	0x03B9, r22	; 0x8003b9 <incr>
     fbc:	51 ce       	rjmp	.-862    	; 0xc60 <main+0x12e>

00000fbe <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     fbe:	cf 93       	push	r28
     fc0:	df 93       	push	r29
     fc2:	d8 2f       	mov	r29, r24
     fc4:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     fc6:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
     fc8:	37 d2       	rcall	.+1134   	; 0x1438 <i2c_start>
     fca:	8d 2f       	mov	r24, r29
	i2c_stop();
     fcc:	8b d2       	rcall	.+1302   	; 0x14e4 <i2c_write>
     fce:	8c 2f       	mov	r24, r28
}
     fd0:	89 d2       	rcall	.+1298   	; 0x14e4 <i2c_write>
     fd2:	78 d2       	rcall	.+1264   	; 0x14c4 <i2c_stop>
     fd4:	df 91       	pop	r29
     fd6:	cf 91       	pop	r28
     fd8:	08 95       	ret

00000fda <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     fda:	af 92       	push	r10
     fdc:	bf 92       	push	r11
     fde:	cf 92       	push	r12
     fe0:	df 92       	push	r13
     fe2:	ff 92       	push	r15
     fe4:	0f 93       	push	r16
     fe6:	1f 93       	push	r17
     fe8:	cf 93       	push	r28
     fea:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     fec:	66 23       	and	r22, r22
     fee:	89 f1       	breq	.+98     	; 0x1052 <mpu6050_readBytes+0x78>
     ff0:	c5 2f       	mov	r28, r21
     ff2:	d4 2f       	mov	r29, r20
     ff4:	f6 2e       	mov	r15, r22
     ff6:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     ff8:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
     ffa:	1e d2       	rcall	.+1084   	; 0x1438 <i2c_start>
     ffc:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ffe:	72 d2       	rcall	.+1252   	; 0x14e4 <i2c_write>
    1000:	85 e3       	ldi	r24, 0x35	; 53
    1002:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    1004:	f1 f7       	brne	.-4      	; 0x1002 <mpu6050_readBytes+0x28>
    1006:	00 00       	nop
    1008:	81 ed       	ldi	r24, 0xD1	; 209
    100a:	16 d2       	rcall	.+1068   	; 0x1438 <i2c_start>
    100c:	0d 2f       	mov	r16, r29
    100e:	1c 2f       	mov	r17, r28
    1010:	cc 24       	eor	r12, r12
    1012:	ca 94       	dec	r12
    1014:	cf 0c       	add	r12, r15
    1016:	d1 2c       	mov	r13, r1
    1018:	ef ef       	ldi	r30, 0xFF	; 255
    101a:	ce 1a       	sub	r12, r30
    101c:	de 0a       	sbc	r13, r30
    101e:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    1020:	d0 e0       	ldi	r29, 0x00	; 0
    1022:	af 2c       	mov	r10, r15
    1024:	b1 2c       	mov	r11, r1
    1026:	f1 e0       	ldi	r31, 0x01	; 1
    1028:	af 1a       	sub	r10, r31
    102a:	b1 08       	sbc	r11, r1
    102c:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
    102e:	bd 06       	cpc	r11, r29
    1030:	21 f4       	brne	.+8      	; 0x103a <mpu6050_readBytes+0x60>
    1032:	93 d2       	rcall	.+1318   	; 0x155a <i2c_readNak>
    1034:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
    1036:	80 83       	st	Z, r24
    1038:	03 c0       	rjmp	.+6      	; 0x1040 <mpu6050_readBytes+0x66>
    103a:	75 d2       	rcall	.+1258   	; 0x1526 <i2c_readAck>
    103c:	f8 01       	movw	r30, r16
    103e:	80 83       	st	Z, r24
    1040:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    1042:	0f 5f       	subi	r16, 0xFF	; 255
    1044:	1f 4f       	sbci	r17, 0xFF	; 255
    1046:	cc 15       	cp	r28, r12
    1048:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    104a:	81 f7       	brne	.-32     	; 0x102c <mpu6050_readBytes+0x52>
    104c:	cf 2d       	mov	r28, r15
    104e:	3a d2       	rcall	.+1140   	; 0x14c4 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    1050:	01 c0       	rjmp	.+2      	; 0x1054 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    1052:	c0 e0       	ldi	r28, 0x00	; 0
    1054:	8c 2f       	mov	r24, r28
    1056:	df 91       	pop	r29
    1058:	cf 91       	pop	r28
    105a:	1f 91       	pop	r17
    105c:	0f 91       	pop	r16
    105e:	ff 90       	pop	r15
    1060:	df 90       	pop	r13
    1062:	cf 90       	pop	r12
    1064:	bf 90       	pop	r11
    1066:	af 90       	pop	r10
    1068:	08 95       	ret

0000106a <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    106a:	6f 92       	push	r6
    106c:	7f 92       	push	r7
    106e:	8f 92       	push	r8
    1070:	9f 92       	push	r9
    1072:	af 92       	push	r10
    1074:	bf 92       	push	r11
    1076:	cf 92       	push	r12
    1078:	df 92       	push	r13
    107a:	ef 92       	push	r14
    107c:	ff 92       	push	r15
    107e:	0f 93       	push	r16
    1080:	1f 93       	push	r17
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	cd b7       	in	r28, 0x3d	; 61
    1088:	de b7       	in	r29, 0x3e	; 62
    108a:	2e 97       	sbiw	r28, 0x0e	; 14
    108c:	0f b6       	in	r0, 0x3f	; 63
    108e:	f8 94       	cli
    1090:	de bf       	out	0x3e, r29	; 62
    1092:	0f be       	out	0x3f, r0	; 63
    1094:	cd bf       	out	0x3d, r28	; 61
    1096:	4c 01       	movw	r8, r24
    1098:	5b 01       	movw	r10, r22
    109a:	6a 01       	movw	r12, r20
    109c:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    109e:	ae 01       	movw	r20, r28
    10a0:	4f 5f       	subi	r20, 0xFF	; 255
    10a2:	5f 4f       	sbci	r21, 0xFF	; 255
    10a4:	6e e0       	ldi	r22, 0x0E	; 14
    10a6:	8b e3       	ldi	r24, 0x3B	; 59
    10a8:	98 df       	rcall	.-208    	; 0xfda <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    10aa:	89 81       	ldd	r24, Y+1	; 0x01
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	98 2f       	mov	r25, r24
    10b0:	88 27       	eor	r24, r24
    10b2:	2a 81       	ldd	r18, Y+2	; 0x02
    10b4:	82 2b       	or	r24, r18
    10b6:	f4 01       	movw	r30, r8
    10b8:	91 83       	std	Z+1, r25	; 0x01
    10ba:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    10bc:	8b 81       	ldd	r24, Y+3	; 0x03
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	98 2f       	mov	r25, r24
    10c2:	88 27       	eor	r24, r24
    10c4:	2c 81       	ldd	r18, Y+4	; 0x04
    10c6:	82 2b       	or	r24, r18
    10c8:	f5 01       	movw	r30, r10
    10ca:	91 83       	std	Z+1, r25	; 0x01
    10cc:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    10ce:	8d 81       	ldd	r24, Y+5	; 0x05
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	98 2f       	mov	r25, r24
    10d4:	88 27       	eor	r24, r24
    10d6:	2e 81       	ldd	r18, Y+6	; 0x06
    10d8:	82 2b       	or	r24, r18
    10da:	f6 01       	movw	r30, r12
    10dc:	91 83       	std	Z+1, r25	; 0x01
    10de:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    10e0:	89 85       	ldd	r24, Y+9	; 0x09
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	98 2f       	mov	r25, r24
    10e6:	88 27       	eor	r24, r24
    10e8:	2a 85       	ldd	r18, Y+10	; 0x0a
    10ea:	82 2b       	or	r24, r18
    10ec:	f3 01       	movw	r30, r6
    10ee:	91 83       	std	Z+1, r25	; 0x01
    10f0:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    10f2:	8b 85       	ldd	r24, Y+11	; 0x0b
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	98 2f       	mov	r25, r24
    10f8:	88 27       	eor	r24, r24
    10fa:	2c 85       	ldd	r18, Y+12	; 0x0c
    10fc:	82 2b       	or	r24, r18
    10fe:	f8 01       	movw	r30, r16
    1100:	91 83       	std	Z+1, r25	; 0x01
    1102:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    1104:	8d 85       	ldd	r24, Y+13	; 0x0d
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	98 2f       	mov	r25, r24
    110a:	88 27       	eor	r24, r24
    110c:	2e 85       	ldd	r18, Y+14	; 0x0e
    110e:	82 2b       	or	r24, r18
    1110:	f7 01       	movw	r30, r14
    1112:	91 83       	std	Z+1, r25	; 0x01
    1114:	80 83       	st	Z, r24
    1116:	2e 96       	adiw	r28, 0x0e	; 14
    1118:	0f b6       	in	r0, 0x3f	; 63
    111a:	f8 94       	cli
    111c:	de bf       	out	0x3e, r29	; 62
    111e:	0f be       	out	0x3f, r0	; 63
    1120:	cd bf       	out	0x3d, r28	; 61
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	1f 91       	pop	r17
    1128:	0f 91       	pop	r16
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	df 90       	pop	r13
    1130:	cf 90       	pop	r12
    1132:	bf 90       	pop	r11
    1134:	af 90       	pop	r10
    1136:	9f 90       	pop	r9
    1138:	8f 90       	pop	r8
    113a:	7f 90       	pop	r7
    113c:	6f 90       	pop	r6
    113e:	08 95       	ret

00001140 <Compute_PID>:
 * Created: 9/24/2017 10:52:39 AM
 *  Author: rafja
 */ 
#include "PID.h"
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd)
{
    1140:	2f 92       	push	r2
    1142:	3f 92       	push	r3
    1144:	4f 92       	push	r4
    1146:	5f 92       	push	r5
    1148:	6f 92       	push	r6
    114a:	7f 92       	push	r7
    114c:	8f 92       	push	r8
    114e:	9f 92       	push	r9
    1150:	af 92       	push	r10
    1152:	bf 92       	push	r11
    1154:	cf 92       	push	r12
    1156:	df 92       	push	r13
    1158:	ef 92       	push	r14
    115a:	ff 92       	push	r15
    115c:	0f 93       	push	r16
    115e:	1f 93       	push	r17
    1160:	cf 93       	push	r28
    1162:	df 93       	push	r29
    1164:	00 d0       	rcall	.+0      	; 0x1166 <Compute_PID+0x26>
    1166:	1f 92       	push	r1
    1168:	cd b7       	in	r28, 0x3d	; 61
    116a:	de b7       	in	r29, 0x3e	; 62
	double error = angle-desired_angle;
    116c:	17 01       	movw	r2, r14
    116e:	86 d2       	rcall	.+1292   	; 0x167c <__subsf3>
    1170:	69 83       	std	Y+1, r22	; 0x01
    1172:	7a 83       	std	Y+2, r23	; 0x02
    1174:	8b 83       	std	Y+3, r24	; 0x03
	double pid_p = kp*error;
    1176:	9c 83       	std	Y+4, r25	; 0x04
    1178:	2a 8d       	ldd	r18, Y+26	; 0x1a
    117a:	3b 8d       	ldd	r19, Y+27	; 0x1b
    117c:	4c 8d       	ldd	r20, Y+28	; 0x1c
    117e:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1180:	c3 d4       	rcall	.+2438   	; 0x1b08 <__mulsf3>
    1182:	2b 01       	movw	r4, r22
	if (abs(error)>3)
    1184:	3c 01       	movw	r6, r24
    1186:	69 81       	ldd	r22, Y+1	; 0x01
    1188:	7a 81       	ldd	r23, Y+2	; 0x02
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	9c 81       	ldd	r25, Y+4	; 0x04
    118e:	a9 d3       	rcall	.+1874   	; 0x18e2 <__fixsfsi>
    1190:	9b 01       	movw	r18, r22
    1192:	77 23       	and	r23, r23
    1194:	24 f4       	brge	.+8      	; 0x119e <Compute_PID+0x5e>
    1196:	22 27       	eor	r18, r18
    1198:	33 27       	eor	r19, r19
    119a:	26 1b       	sub	r18, r22
    119c:	37 0b       	sbc	r19, r23
    119e:	24 30       	cpi	r18, 0x04	; 4
    11a0:	31 05       	cpc	r19, r1
	{
		*pid_i=*pid_i+(ki*error);	
    11a2:	b4 f0       	brlt	.+44     	; 0x11d0 <Compute_PID+0x90>
    11a4:	2e 8d       	ldd	r18, Y+30	; 0x1e
    11a6:	3f 8d       	ldd	r19, Y+31	; 0x1f
    11a8:	48 a1       	ldd	r20, Y+32	; 0x20
    11aa:	59 a1       	ldd	r21, Y+33	; 0x21
    11ac:	69 81       	ldd	r22, Y+1	; 0x01
    11ae:	7a 81       	ldd	r23, Y+2	; 0x02
    11b0:	8b 81       	ldd	r24, Y+3	; 0x03
    11b2:	9c 81       	ldd	r25, Y+4	; 0x04
    11b4:	a9 d4       	rcall	.+2386   	; 0x1b08 <__mulsf3>
    11b6:	9b 01       	movw	r18, r22
    11b8:	ac 01       	movw	r20, r24
    11ba:	d8 01       	movw	r26, r16
    11bc:	6d 91       	ld	r22, X+
    11be:	7d 91       	ld	r23, X+
    11c0:	8d 91       	ld	r24, X+
    11c2:	9c 91       	ld	r25, X
    11c4:	5c d2       	rcall	.+1208   	; 0x167e <__addsf3>
    11c6:	f8 01       	movw	r30, r16
    11c8:	60 83       	st	Z, r22
    11ca:	71 83       	std	Z+1, r23	; 0x01
    11cc:	82 83       	std	Z+2, r24	; 0x02
	}
	double pid_d = kd*((error - *previous_error)/dt);
    11ce:	93 83       	std	Z+3, r25	; 0x03
    11d0:	d1 01       	movw	r26, r2
    11d2:	2d 91       	ld	r18, X+
    11d4:	3d 91       	ld	r19, X+
    11d6:	4d 91       	ld	r20, X+
    11d8:	5c 91       	ld	r21, X
    11da:	69 81       	ldd	r22, Y+1	; 0x01
    11dc:	7a 81       	ldd	r23, Y+2	; 0x02
    11de:	8b 81       	ldd	r24, Y+3	; 0x03
    11e0:	9c 81       	ldd	r25, Y+4	; 0x04
    11e2:	4c d2       	rcall	.+1176   	; 0x167c <__subsf3>
    11e4:	a6 01       	movw	r20, r12
    11e6:	95 01       	movw	r18, r10
    11e8:	14 d3       	rcall	.+1576   	; 0x1812 <__divsf3>
    11ea:	2a a1       	ldd	r18, Y+34	; 0x22
    11ec:	3b a1       	ldd	r19, Y+35	; 0x23
    11ee:	4c a1       	ldd	r20, Y+36	; 0x24
    11f0:	5d a1       	ldd	r21, Y+37	; 0x25
    11f2:	8a d4       	rcall	.+2324   	; 0x1b08 <__mulsf3>
    11f4:	4b 01       	movw	r8, r22
	*previous_error=error;
    11f6:	5c 01       	movw	r10, r24
    11f8:	89 81       	ldd	r24, Y+1	; 0x01
    11fa:	9a 81       	ldd	r25, Y+2	; 0x02
    11fc:	ab 81       	ldd	r26, Y+3	; 0x03
    11fe:	bc 81       	ldd	r27, Y+4	; 0x04
    1200:	f1 01       	movw	r30, r2
    1202:	80 83       	st	Z, r24
    1204:	91 83       	std	Z+1, r25	; 0x01
	
	return pid_p + (*pid_i) + pid_d;
    1206:	a2 83       	std	Z+2, r26	; 0x02
    1208:	b3 83       	std	Z+3, r27	; 0x03
    120a:	d8 01       	movw	r26, r16
    120c:	2d 91       	ld	r18, X+
    120e:	3d 91       	ld	r19, X+
    1210:	4d 91       	ld	r20, X+
    1212:	5c 91       	ld	r21, X
    1214:	c3 01       	movw	r24, r6
    1216:	b2 01       	movw	r22, r4
    1218:	32 d2       	rcall	.+1124   	; 0x167e <__addsf3>
    121a:	a5 01       	movw	r20, r10
    121c:	94 01       	movw	r18, r8
    121e:	2f d2       	rcall	.+1118   	; 0x167e <__addsf3>
    1220:	0f 90       	pop	r0
    1222:	0f 90       	pop	r0
    1224:	0f 90       	pop	r0
    1226:	0f 90       	pop	r0
    1228:	df 91       	pop	r29
    122a:	cf 91       	pop	r28
    122c:	1f 91       	pop	r17
    122e:	0f 91       	pop	r16
    1230:	ff 90       	pop	r15
    1232:	ef 90       	pop	r14
    1234:	df 90       	pop	r13
    1236:	cf 90       	pop	r12
    1238:	bf 90       	pop	r11
    123a:	af 90       	pop	r10
    123c:	9f 90       	pop	r9
    123e:	8f 90       	pop	r8
    1240:	7f 90       	pop	r7
    1242:	6f 90       	pop	r6
    1244:	5f 90       	pop	r5
    1246:	4f 90       	pop	r4
    1248:	3f 90       	pop	r3
    124a:	2f 90       	pop	r2
    124c:	08 95       	ret

0000124e <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    124e:	e1 ea       	ldi	r30, 0xA1	; 161
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	80 81       	ld	r24, Z
    1254:	81 60       	ori	r24, 0x01	; 1
    1256:	80 83       	st	Z, r24
    1258:	e0 ea       	ldi	r30, 0xA0	; 160
    125a:	f0 e0       	ldi	r31, 0x00	; 0
    125c:	80 81       	ld	r24, Z
    125e:	81 60       	ori	r24, 0x01	; 1
    1260:	80 83       	st	Z, r24
    1262:	80 81       	ld	r24, Z
    1264:	80 68       	ori	r24, 0x80	; 128
    1266:	80 83       	st	Z, r24
    1268:	80 81       	ld	r24, Z
    126a:	80 62       	ori	r24, 0x20	; 32
    126c:	80 83       	st	Z, r24
    126e:	80 81       	ld	r24, Z
    1270:	88 60       	ori	r24, 0x08	; 8
    1272:	80 83       	st	Z, r24
    1274:	08 95       	ret

00001276 <setup_timer3>:
    1276:	e1 e9       	ldi	r30, 0x91	; 145
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	80 81       	ld	r24, Z
    127c:	81 60       	ori	r24, 0x01	; 1
    127e:	80 83       	st	Z, r24
    1280:	e0 e9       	ldi	r30, 0x90	; 144
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	80 81       	ld	r24, Z
    1286:	81 60       	ori	r24, 0x01	; 1
    1288:	80 83       	st	Z, r24
    128a:	80 81       	ld	r24, Z
    128c:	80 68       	ori	r24, 0x80	; 128
    128e:	80 83       	st	Z, r24
    1290:	80 81       	ld	r24, Z
    1292:	80 62       	ori	r24, 0x20	; 32
    1294:	80 83       	st	Z, r24
    1296:	80 81       	ld	r24, Z
    1298:	88 60       	ori	r24, 0x08	; 8
    129a:	80 83       	st	Z, r24
    129c:	08 95       	ret

0000129e <setup_timer5>:
    129e:	e1 e2       	ldi	r30, 0x21	; 33
    12a0:	f1 e0       	ldi	r31, 0x01	; 1
    12a2:	80 81       	ld	r24, Z
    12a4:	81 60       	ori	r24, 0x01	; 1
    12a6:	80 83       	st	Z, r24
    12a8:	80 81       	ld	r24, Z
    12aa:	88 60       	ori	r24, 0x08	; 8
    12ac:	80 83       	st	Z, r24
    12ae:	08 95       	ret

000012b0 <Enable_timer5_compare_interrupt>:
    12b0:	e3 e7       	ldi	r30, 0x73	; 115
    12b2:	f0 e0       	ldi	r31, 0x00	; 0
    12b4:	80 81       	ld	r24, Z
    12b6:	82 60       	ori	r24, 0x02	; 2
    12b8:	80 83       	st	Z, r24
    12ba:	08 95       	ret

000012bc <setup_timer1>:
    12bc:	e1 e8       	ldi	r30, 0x81	; 129
    12be:	f0 e0       	ldi	r31, 0x00	; 0
    12c0:	80 81       	ld	r24, Z
    12c2:	81 60       	ori	r24, 0x01	; 1
    12c4:	80 83       	st	Z, r24
    12c6:	80 81       	ld	r24, Z
    12c8:	88 60       	ori	r24, 0x08	; 8
    12ca:	80 83       	st	Z, r24
    12cc:	08 95       	ret

000012ce <setup_timer0>:
    12ce:	85 b5       	in	r24, 0x25	; 37
    12d0:	81 60       	ori	r24, 0x01	; 1
    12d2:	85 bd       	out	0x25, r24	; 37
    12d4:	85 b5       	in	r24, 0x25	; 37
    12d6:	82 60       	ori	r24, 0x02	; 2
    12d8:	85 bd       	out	0x25, r24	; 37
    12da:	08 95       	ret

000012dc <Enable_timer0_overflow_interrupt>:
    12dc:	ee e6       	ldi	r30, 0x6E	; 110
    12de:	f0 e0       	ldi	r31, 0x00	; 0
    12e0:	80 81       	ld	r24, Z
    12e2:	81 60       	ori	r24, 0x01	; 1
    12e4:	80 83       	st	Z, r24
    12e6:	08 95       	ret

000012e8 <micros>:
    12e8:	3f b7       	in	r19, 0x3f	; 63
    12ea:	f8 94       	cli
    12ec:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <timer0_overflow_count>
    12f0:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <timer0_overflow_count+0x1>
    12f4:	a0 91 af 03 	lds	r26, 0x03AF	; 0x8003af <timer0_overflow_count+0x2>
    12f8:	b0 91 b0 03 	lds	r27, 0x03B0	; 0x8003b0 <timer0_overflow_count+0x3>
    12fc:	26 b5       	in	r18, 0x26	; 38
    12fe:	a8 9b       	sbis	0x15, 0	; 21
    1300:	05 c0       	rjmp	.+10     	; 0x130c <micros+0x24>
    1302:	2f 3f       	cpi	r18, 0xFF	; 255
    1304:	19 f0       	breq	.+6      	; 0x130c <micros+0x24>
    1306:	01 96       	adiw	r24, 0x01	; 1
    1308:	a1 1d       	adc	r26, r1
    130a:	b1 1d       	adc	r27, r1
    130c:	3f bf       	out	0x3f, r19	; 63
    130e:	ba 2f       	mov	r27, r26
    1310:	a9 2f       	mov	r26, r25
    1312:	98 2f       	mov	r25, r24
    1314:	88 27       	eor	r24, r24
    1316:	82 0f       	add	r24, r18
    1318:	91 1d       	adc	r25, r1
    131a:	a1 1d       	adc	r26, r1
    131c:	b1 1d       	adc	r27, r1
    131e:	bc 01       	movw	r22, r24
    1320:	cd 01       	movw	r24, r26
    1322:	66 0f       	add	r22, r22
    1324:	77 1f       	adc	r23, r23
    1326:	88 1f       	adc	r24, r24
    1328:	99 1f       	adc	r25, r25
    132a:	66 0f       	add	r22, r22
    132c:	77 1f       	adc	r23, r23
    132e:	88 1f       	adc	r24, r24
    1330:	99 1f       	adc	r25, r25
    1332:	08 95       	ret

00001334 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    1334:	1f 92       	push	r1
    1336:	0f 92       	push	r0
    1338:	0f b6       	in	r0, 0x3f	; 63
    133a:	0f 92       	push	r0
    133c:	11 24       	eor	r1, r1
    133e:	2f 93       	push	r18
    1340:	3f 93       	push	r19
    1342:	8f 93       	push	r24
    1344:	9f 93       	push	r25
    1346:	af 93       	push	r26
    1348:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    134a:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <timer0_millis>
    134e:	90 91 aa 03 	lds	r25, 0x03AA	; 0x8003aa <timer0_millis+0x1>
    1352:	a0 91 ab 03 	lds	r26, 0x03AB	; 0x8003ab <timer0_millis+0x2>
    1356:	b0 91 ac 03 	lds	r27, 0x03AC	; 0x8003ac <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    135a:	30 91 a8 03 	lds	r19, 0x03A8	; 0x8003a8 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    135e:	23 e0       	ldi	r18, 0x03	; 3
    1360:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    1362:	2d 37       	cpi	r18, 0x7D	; 125
    1364:	20 f4       	brcc	.+8      	; 0x136e <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    1366:	01 96       	adiw	r24, 0x01	; 1
    1368:	a1 1d       	adc	r26, r1
    136a:	b1 1d       	adc	r27, r1
    136c:	05 c0       	rjmp	.+10     	; 0x1378 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    136e:	26 e8       	ldi	r18, 0x86	; 134
    1370:	23 0f       	add	r18, r19
		m += 1;
    1372:	02 96       	adiw	r24, 0x02	; 2
    1374:	a1 1d       	adc	r26, r1
    1376:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    1378:	20 93 a8 03 	sts	0x03A8, r18	; 0x8003a8 <timer0_fract>
	timer0_millis = m;
    137c:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <timer0_millis>
    1380:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <timer0_millis+0x1>
    1384:	a0 93 ab 03 	sts	0x03AB, r26	; 0x8003ab <timer0_millis+0x2>
    1388:	b0 93 ac 03 	sts	0x03AC, r27	; 0x8003ac <timer0_millis+0x3>
	timer0_overflow_count++;
    138c:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <timer0_overflow_count>
    1390:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <timer0_overflow_count+0x1>
    1394:	a0 91 af 03 	lds	r26, 0x03AF	; 0x8003af <timer0_overflow_count+0x2>
    1398:	b0 91 b0 03 	lds	r27, 0x03B0	; 0x8003b0 <timer0_overflow_count+0x3>
    139c:	01 96       	adiw	r24, 0x01	; 1
    139e:	a1 1d       	adc	r26, r1
    13a0:	b1 1d       	adc	r27, r1
    13a2:	80 93 ad 03 	sts	0x03AD, r24	; 0x8003ad <timer0_overflow_count>
    13a6:	90 93 ae 03 	sts	0x03AE, r25	; 0x8003ae <timer0_overflow_count+0x1>
    13aa:	a0 93 af 03 	sts	0x03AF, r26	; 0x8003af <timer0_overflow_count+0x2>
    13ae:	b0 93 b0 03 	sts	0x03B0, r27	; 0x8003b0 <timer0_overflow_count+0x3>
}
    13b2:	bf 91       	pop	r27
    13b4:	af 91       	pop	r26
    13b6:	9f 91       	pop	r25
    13b8:	8f 91       	pop	r24
    13ba:	3f 91       	pop	r19
    13bc:	2f 91       	pop	r18
    13be:	0f 90       	pop	r0
    13c0:	0f be       	out	0x3f, r0	; 63
    13c2:	0f 90       	pop	r0
    13c4:	1f 90       	pop	r1
    13c6:	18 95       	reti

000013c8 <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    13c8:	1f 92       	push	r1
    13ca:	0f 92       	push	r0
    13cc:	0f b6       	in	r0, 0x3f	; 63
    13ce:	0f 92       	push	r0
    13d0:	11 24       	eor	r1, r1
	//PWM_update();
}
    13d2:	0f 90       	pop	r0
    13d4:	0f be       	out	0x3f, r0	; 63
    13d6:	0f 90       	pop	r0
    13d8:	1f 90       	pop	r1
    13da:	18 95       	reti

000013dc <__vector_17>:
ISR(TIMER1_COMPA_vect)//motor update interrupt routine
{
    13dc:	1f 92       	push	r1
    13de:	0f 92       	push	r0
    13e0:	0f b6       	in	r0, 0x3f	; 63
    13e2:	0f 92       	push	r0
    13e4:	11 24       	eor	r1, r1
    13e6:	0b b6       	in	r0, 0x3b	; 59
    13e8:	0f 92       	push	r0
    13ea:	2f 93       	push	r18
    13ec:	3f 93       	push	r19
    13ee:	4f 93       	push	r20
    13f0:	5f 93       	push	r21
    13f2:	6f 93       	push	r22
    13f4:	7f 93       	push	r23
    13f6:	8f 93       	push	r24
    13f8:	9f 93       	push	r25
    13fa:	af 93       	push	r26
    13fc:	bf 93       	push	r27
    13fe:	ef 93       	push	r30
    1400:	ff 93       	push	r31
	PWM_update_2();
    1402:	0e 94 2c 01 	call	0x258	; 0x258 <PWM_update_2>
    1406:	ff 91       	pop	r31
    1408:	ef 91       	pop	r30
    140a:	bf 91       	pop	r27
    140c:	af 91       	pop	r26
    140e:	9f 91       	pop	r25
    1410:	8f 91       	pop	r24
    1412:	7f 91       	pop	r23
    1414:	6f 91       	pop	r22
    1416:	5f 91       	pop	r21
    1418:	4f 91       	pop	r20
    141a:	3f 91       	pop	r19
    141c:	2f 91       	pop	r18
    141e:	0f 90       	pop	r0
    1420:	0b be       	out	0x3b, r0	; 59
    1422:	0f 90       	pop	r0
    1424:	0f be       	out	0x3f, r0	; 63
    1426:	0f 90       	pop	r0
    1428:	1f 90       	pop	r1
    142a:	18 95       	reti

0000142c <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    142c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1430:	8c e0       	ldi	r24, 0x0C	; 12
    1432:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    1436:	08 95       	ret

00001438 <i2c_start>:
    1438:	94 ea       	ldi	r25, 0xA4	; 164
    143a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    143e:	4f ef       	ldi	r20, 0xFF	; 255
    1440:	50 e0       	ldi	r21, 0x00	; 0
    1442:	60 e0       	ldi	r22, 0x00	; 0
    1444:	70 e0       	ldi	r23, 0x00	; 0
    1446:	ec eb       	ldi	r30, 0xBC	; 188
    1448:	f0 e0       	ldi	r31, 0x00	; 0
    144a:	90 81       	ld	r25, Z
    144c:	99 23       	and	r25, r25
    144e:	34 f0       	brlt	.+12     	; 0x145c <i2c_start+0x24>
    1450:	41 50       	subi	r20, 0x01	; 1
    1452:	51 09       	sbc	r21, r1
    1454:	61 09       	sbc	r22, r1
    1456:	71 09       	sbc	r23, r1
    1458:	c0 f7       	brcc	.-16     	; 0x144a <i2c_start+0x12>
    145a:	04 c0       	rjmp	.+8      	; 0x1464 <i2c_start+0x2c>
    145c:	45 2b       	or	r20, r21
    145e:	46 2b       	or	r20, r22
    1460:	47 2b       	or	r20, r23
    1462:	41 f1       	breq	.+80     	; 0x14b4 <i2c_start+0x7c>
    1464:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1468:	98 7f       	andi	r25, 0xF8	; 248
    146a:	98 30       	cpi	r25, 0x08	; 8
    146c:	11 f0       	breq	.+4      	; 0x1472 <i2c_start+0x3a>
    146e:	90 31       	cpi	r25, 0x10	; 16
    1470:	19 f5       	brne	.+70     	; 0x14b8 <i2c_start+0x80>
    1472:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1476:	84 e8       	ldi	r24, 0x84	; 132
    1478:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    147c:	8f ef       	ldi	r24, 0xFF	; 255
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	a0 e0       	ldi	r26, 0x00	; 0
    1482:	b0 e0       	ldi	r27, 0x00	; 0
    1484:	ec eb       	ldi	r30, 0xBC	; 188
    1486:	f0 e0       	ldi	r31, 0x00	; 0
    1488:	20 81       	ld	r18, Z
    148a:	22 23       	and	r18, r18
    148c:	2c f0       	brlt	.+10     	; 0x1498 <i2c_start+0x60>
    148e:	01 97       	sbiw	r24, 0x01	; 1
    1490:	a1 09       	sbc	r26, r1
    1492:	b1 09       	sbc	r27, r1
    1494:	c8 f7       	brcc	.-14     	; 0x1488 <i2c_start+0x50>
    1496:	04 c0       	rjmp	.+8      	; 0x14a0 <i2c_start+0x68>
    1498:	89 2b       	or	r24, r25
    149a:	8a 2b       	or	r24, r26
    149c:	8b 2b       	or	r24, r27
    149e:	71 f0       	breq	.+28     	; 0x14bc <i2c_start+0x84>
    14a0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    14a4:	98 7f       	andi	r25, 0xF8	; 248
    14a6:	98 31       	cpi	r25, 0x18	; 24
    14a8:	59 f0       	breq	.+22     	; 0x14c0 <i2c_start+0x88>
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	90 34       	cpi	r25, 0x40	; 64
    14ae:	49 f4       	brne	.+18     	; 0x14c2 <i2c_start+0x8a>
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	08 95       	ret
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	08 95       	ret
    14b8:	81 e0       	ldi	r24, 0x01	; 1
    14ba:	08 95       	ret
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	08 95       	ret
    14c0:	80 e0       	ldi	r24, 0x00	; 0
    14c2:	08 95       	ret

000014c4 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    14c4:	84 e9       	ldi	r24, 0x94	; 148
    14c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    14ca:	80 e0       	ldi	r24, 0x00	; 0
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	ec eb       	ldi	r30, 0xBC	; 188
    14d0:	f0 e0       	ldi	r31, 0x00	; 0
    14d2:	20 81       	ld	r18, Z
    14d4:	24 ff       	sbrs	r18, 4
    14d6:	05 c0       	rjmp	.+10     	; 0x14e2 <i2c_stop+0x1e>
    14d8:	01 96       	adiw	r24, 0x01	; 1
    14da:	81 15       	cp	r24, r1
    14dc:	21 e0       	ldi	r18, 0x01	; 1
    14de:	92 07       	cpc	r25, r18
    14e0:	c1 f7       	brne	.-16     	; 0x14d2 <i2c_stop+0xe>
    14e2:	08 95       	ret

000014e4 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    14e4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    14e8:	84 e8       	ldi	r24, 0x84	; 132
    14ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    14ee:	8f ef       	ldi	r24, 0xFF	; 255
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	a0 e0       	ldi	r26, 0x00	; 0
    14f4:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    14f6:	ec eb       	ldi	r30, 0xBC	; 188
    14f8:	f0 e0       	ldi	r31, 0x00	; 0
    14fa:	20 81       	ld	r18, Z
    14fc:	22 23       	and	r18, r18
    14fe:	2c f0       	brlt	.+10     	; 0x150a <i2c_write+0x26>
    1500:	01 97       	sbiw	r24, 0x01	; 1
    1502:	a1 09       	sbc	r26, r1
    1504:	b1 09       	sbc	r27, r1
    1506:	c8 f7       	brcc	.-14     	; 0x14fa <i2c_write+0x16>
    1508:	04 c0       	rjmp	.+8      	; 0x1512 <i2c_write+0x2e>
	if(i2c_timer == 0)
    150a:	89 2b       	or	r24, r25
    150c:	8a 2b       	or	r24, r26
    150e:	8b 2b       	or	r24, r27
    1510:	41 f0       	breq	.+16     	; 0x1522 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    1512:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    1516:	98 7f       	andi	r25, 0xF8	; 248
    1518:	81 e0       	ldi	r24, 0x01	; 1
    151a:	98 32       	cpi	r25, 0x28	; 40
    151c:	19 f4       	brne	.+6      	; 0x1524 <i2c_write+0x40>
    151e:	80 e0       	ldi	r24, 0x00	; 0
    1520:	08 95       	ret
    1522:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    1524:	08 95       	ret

00001526 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    1526:	84 ec       	ldi	r24, 0xC4	; 196
    1528:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    152c:	8f ef       	ldi	r24, 0xFF	; 255
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	a0 e0       	ldi	r26, 0x00	; 0
    1532:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1534:	ec eb       	ldi	r30, 0xBC	; 188
    1536:	f0 e0       	ldi	r31, 0x00	; 0
    1538:	20 81       	ld	r18, Z
    153a:	22 23       	and	r18, r18
    153c:	2c f0       	brlt	.+10     	; 0x1548 <i2c_readAck+0x22>
    153e:	01 97       	sbiw	r24, 0x01	; 1
    1540:	a1 09       	sbc	r26, r1
    1542:	b1 09       	sbc	r27, r1
    1544:	c8 f7       	brcc	.-14     	; 0x1538 <i2c_readAck+0x12>
    1546:	04 c0       	rjmp	.+8      	; 0x1550 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    1548:	89 2b       	or	r24, r25
    154a:	8a 2b       	or	r24, r26
    154c:	8b 2b       	or	r24, r27
    154e:	19 f0       	breq	.+6      	; 0x1556 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    1550:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1554:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    1556:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    1558:	08 95       	ret

0000155a <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    155a:	84 e8       	ldi	r24, 0x84	; 132
    155c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    1560:	8f ef       	ldi	r24, 0xFF	; 255
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	a0 e0       	ldi	r26, 0x00	; 0
    1566:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1568:	ec eb       	ldi	r30, 0xBC	; 188
    156a:	f0 e0       	ldi	r31, 0x00	; 0
    156c:	20 81       	ld	r18, Z
    156e:	22 23       	and	r18, r18
    1570:	2c f0       	brlt	.+10     	; 0x157c <i2c_readNak+0x22>
    1572:	01 97       	sbiw	r24, 0x01	; 1
    1574:	a1 09       	sbc	r26, r1
    1576:	b1 09       	sbc	r27, r1
    1578:	c8 f7       	brcc	.-14     	; 0x156c <i2c_readNak+0x12>
    157a:	04 c0       	rjmp	.+8      	; 0x1584 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    157c:	89 2b       	or	r24, r25
    157e:	8a 2b       	or	r24, r26
    1580:	8b 2b       	or	r24, r27
    1582:	19 f0       	breq	.+6      	; 0x158a <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    1584:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1588:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    158a:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    158c:	08 95       	ret

0000158e <USART_Init>:
{
	printf(c);
	//printf(" ");
	print16(&intToPrint);
	printf("  ");
}
    158e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1592:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1596:	88 e0       	ldi	r24, 0x08	; 8
    1598:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    159c:	8e e0       	ldi	r24, 0x0E	; 14
    159e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    15a2:	08 95       	ret

000015a4 <uart_putchar>:
    15a4:	cf 93       	push	r28
    15a6:	c8 2f       	mov	r28, r24
    15a8:	8a 30       	cpi	r24, 0x0A	; 10
    15aa:	11 f4       	brne	.+4      	; 0x15b0 <uart_putchar+0xc>
    15ac:	8d e0       	ldi	r24, 0x0D	; 13
    15ae:	fa df       	rcall	.-12     	; 0x15a4 <uart_putchar>
    15b0:	e0 ec       	ldi	r30, 0xC0	; 192
    15b2:	f0 e0       	ldi	r31, 0x00	; 0
    15b4:	80 81       	ld	r24, Z
    15b6:	85 ff       	sbrs	r24, 5
    15b8:	fd cf       	rjmp	.-6      	; 0x15b4 <uart_putchar+0x10>
    15ba:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    15be:	80 e0       	ldi	r24, 0x00	; 0
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	cf 91       	pop	r28
    15c4:	08 95       	ret

000015c6 <printDouble>:
void printDouble(double *value)
{
    15c6:	0f 93       	push	r16
    15c8:	1f 93       	push	r17
    15ca:	cf 93       	push	r28
    15cc:	df 93       	push	r29
    15ce:	cd b7       	in	r28, 0x3d	; 61
    15d0:	de b7       	in	r29, 0x3e	; 62
    15d2:	64 97       	sbiw	r28, 0x14	; 20
    15d4:	0f b6       	in	r0, 0x3f	; 63
    15d6:	f8 94       	cli
    15d8:	de bf       	out	0x3e, r29	; 62
    15da:	0f be       	out	0x3f, r0	; 63
    15dc:	cd bf       	out	0x3d, r28	; 61
    15de:	fc 01       	movw	r30, r24
	char c[20]={0};
    15e0:	8e 01       	movw	r16, r28
    15e2:	0f 5f       	subi	r16, 0xFF	; 255
    15e4:	1f 4f       	sbci	r17, 0xFF	; 255
    15e6:	84 e1       	ldi	r24, 0x14	; 20
    15e8:	d8 01       	movw	r26, r16
    15ea:	1d 92       	st	X+, r1
    15ec:	8a 95       	dec	r24
    15ee:	e9 f7       	brne	.-6      	; 0x15ea <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    15f0:	83 81       	ldd	r24, Z+3	; 0x03
    15f2:	8f 93       	push	r24
    15f4:	82 81       	ldd	r24, Z+2	; 0x02
    15f6:	8f 93       	push	r24
    15f8:	81 81       	ldd	r24, Z+1	; 0x01
    15fa:	8f 93       	push	r24
    15fc:	80 81       	ld	r24, Z
    15fe:	8f 93       	push	r24
    1600:	8d e9       	ldi	r24, 0x9D	; 157
    1602:	93 e0       	ldi	r25, 0x03	; 3
    1604:	9f 93       	push	r25
    1606:	8f 93       	push	r24
    1608:	1f 93       	push	r17
    160a:	0f 93       	push	r16
    160c:	0e 94 7d 13 	call	0x26fa	; 0x26fa <sprintf>
	printf(c);
    1610:	1f 93       	push	r17
    1612:	0f 93       	push	r16
    1614:	0e 94 65 13 	call	0x26ca	; 0x26ca <printf>
}
    1618:	0f b6       	in	r0, 0x3f	; 63
    161a:	f8 94       	cli
    161c:	de bf       	out	0x3e, r29	; 62
    161e:	0f be       	out	0x3f, r0	; 63
    1620:	cd bf       	out	0x3d, r28	; 61
    1622:	64 96       	adiw	r28, 0x14	; 20
    1624:	0f b6       	in	r0, 0x3f	; 63
    1626:	f8 94       	cli
    1628:	de bf       	out	0x3e, r29	; 62
    162a:	0f be       	out	0x3f, r0	; 63
    162c:	cd bf       	out	0x3d, r28	; 61
    162e:	df 91       	pop	r29
    1630:	cf 91       	pop	r28
    1632:	1f 91       	pop	r17
    1634:	0f 91       	pop	r16
    1636:	08 95       	ret

00001638 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    1638:	cf 93       	push	r28
    163a:	df 93       	push	r29
    163c:	00 d0       	rcall	.+0      	; 0x163e <printSD+0x6>
    163e:	1f 92       	push	r1
    1640:	cd b7       	in	r28, 0x3d	; 61
    1642:	de b7       	in	r29, 0x3e	; 62
    1644:	49 83       	std	Y+1, r20	; 0x01
    1646:	5a 83       	std	Y+2, r21	; 0x02
    1648:	6b 83       	std	Y+3, r22	; 0x03
    164a:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    164c:	9f 93       	push	r25
    164e:	8f 93       	push	r24
    1650:	0e 94 65 13 	call	0x26ca	; 0x26ca <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    1654:	ce 01       	movw	r24, r28
    1656:	01 96       	adiw	r24, 0x01	; 1
    1658:	b6 df       	rcall	.-148    	; 0x15c6 <printDouble>
	printf("  ");
    165a:	8a e9       	ldi	r24, 0x9A	; 154
    165c:	93 e0       	ldi	r25, 0x03	; 3
    165e:	9f 93       	push	r25
    1660:	8f 93       	push	r24
    1662:	0e 94 65 13 	call	0x26ca	; 0x26ca <printf>
    1666:	0f 90       	pop	r0
    1668:	0f 90       	pop	r0
    166a:	0f 90       	pop	r0
    166c:	0f 90       	pop	r0
    166e:	0f 90       	pop	r0
    1670:	0f 90       	pop	r0
    1672:	0f 90       	pop	r0
    1674:	0f 90       	pop	r0
    1676:	df 91       	pop	r29
    1678:	cf 91       	pop	r28
    167a:	08 95       	ret

0000167c <__subsf3>:
    167c:	50 58       	subi	r21, 0x80	; 128

0000167e <__addsf3>:
    167e:	bb 27       	eor	r27, r27
    1680:	aa 27       	eor	r26, r26
    1682:	0e d0       	rcall	.+28     	; 0x16a0 <__addsf3x>
    1684:	fc c1       	rjmp	.+1016   	; 0x1a7e <__fp_round>
    1686:	ed d1       	rcall	.+986    	; 0x1a62 <__fp_pscA>
    1688:	30 f0       	brcs	.+12     	; 0x1696 <__addsf3+0x18>
    168a:	f2 d1       	rcall	.+996    	; 0x1a70 <__fp_pscB>
    168c:	20 f0       	brcs	.+8      	; 0x1696 <__addsf3+0x18>
    168e:	31 f4       	brne	.+12     	; 0x169c <__addsf3+0x1e>
    1690:	9f 3f       	cpi	r25, 0xFF	; 255
    1692:	11 f4       	brne	.+4      	; 0x1698 <__addsf3+0x1a>
    1694:	1e f4       	brtc	.+6      	; 0x169c <__addsf3+0x1e>
    1696:	bd c1       	rjmp	.+890    	; 0x1a12 <__fp_nan>
    1698:	0e f4       	brtc	.+2      	; 0x169c <__addsf3+0x1e>
    169a:	e0 95       	com	r30
    169c:	e7 fb       	bst	r30, 7
    169e:	b3 c1       	rjmp	.+870    	; 0x1a06 <__fp_inf>

000016a0 <__addsf3x>:
    16a0:	e9 2f       	mov	r30, r25
    16a2:	fe d1       	rcall	.+1020   	; 0x1aa0 <__fp_split3>
    16a4:	80 f3       	brcs	.-32     	; 0x1686 <__addsf3+0x8>
    16a6:	ba 17       	cp	r27, r26
    16a8:	62 07       	cpc	r22, r18
    16aa:	73 07       	cpc	r23, r19
    16ac:	84 07       	cpc	r24, r20
    16ae:	95 07       	cpc	r25, r21
    16b0:	18 f0       	brcs	.+6      	; 0x16b8 <__addsf3x+0x18>
    16b2:	71 f4       	brne	.+28     	; 0x16d0 <__addsf3x+0x30>
    16b4:	9e f5       	brtc	.+102    	; 0x171c <__addsf3x+0x7c>
    16b6:	16 c2       	rjmp	.+1068   	; 0x1ae4 <__fp_zero>
    16b8:	0e f4       	brtc	.+2      	; 0x16bc <__addsf3x+0x1c>
    16ba:	e0 95       	com	r30
    16bc:	0b 2e       	mov	r0, r27
    16be:	ba 2f       	mov	r27, r26
    16c0:	a0 2d       	mov	r26, r0
    16c2:	0b 01       	movw	r0, r22
    16c4:	b9 01       	movw	r22, r18
    16c6:	90 01       	movw	r18, r0
    16c8:	0c 01       	movw	r0, r24
    16ca:	ca 01       	movw	r24, r20
    16cc:	a0 01       	movw	r20, r0
    16ce:	11 24       	eor	r1, r1
    16d0:	ff 27       	eor	r31, r31
    16d2:	59 1b       	sub	r21, r25
    16d4:	99 f0       	breq	.+38     	; 0x16fc <__addsf3x+0x5c>
    16d6:	59 3f       	cpi	r21, 0xF9	; 249
    16d8:	50 f4       	brcc	.+20     	; 0x16ee <__addsf3x+0x4e>
    16da:	50 3e       	cpi	r21, 0xE0	; 224
    16dc:	68 f1       	brcs	.+90     	; 0x1738 <__addsf3x+0x98>
    16de:	1a 16       	cp	r1, r26
    16e0:	f0 40       	sbci	r31, 0x00	; 0
    16e2:	a2 2f       	mov	r26, r18
    16e4:	23 2f       	mov	r18, r19
    16e6:	34 2f       	mov	r19, r20
    16e8:	44 27       	eor	r20, r20
    16ea:	58 5f       	subi	r21, 0xF8	; 248
    16ec:	f3 cf       	rjmp	.-26     	; 0x16d4 <__addsf3x+0x34>
    16ee:	46 95       	lsr	r20
    16f0:	37 95       	ror	r19
    16f2:	27 95       	ror	r18
    16f4:	a7 95       	ror	r26
    16f6:	f0 40       	sbci	r31, 0x00	; 0
    16f8:	53 95       	inc	r21
    16fa:	c9 f7       	brne	.-14     	; 0x16ee <__addsf3x+0x4e>
    16fc:	7e f4       	brtc	.+30     	; 0x171c <__addsf3x+0x7c>
    16fe:	1f 16       	cp	r1, r31
    1700:	ba 0b       	sbc	r27, r26
    1702:	62 0b       	sbc	r22, r18
    1704:	73 0b       	sbc	r23, r19
    1706:	84 0b       	sbc	r24, r20
    1708:	ba f0       	brmi	.+46     	; 0x1738 <__addsf3x+0x98>
    170a:	91 50       	subi	r25, 0x01	; 1
    170c:	a1 f0       	breq	.+40     	; 0x1736 <__addsf3x+0x96>
    170e:	ff 0f       	add	r31, r31
    1710:	bb 1f       	adc	r27, r27
    1712:	66 1f       	adc	r22, r22
    1714:	77 1f       	adc	r23, r23
    1716:	88 1f       	adc	r24, r24
    1718:	c2 f7       	brpl	.-16     	; 0x170a <__addsf3x+0x6a>
    171a:	0e c0       	rjmp	.+28     	; 0x1738 <__addsf3x+0x98>
    171c:	ba 0f       	add	r27, r26
    171e:	62 1f       	adc	r22, r18
    1720:	73 1f       	adc	r23, r19
    1722:	84 1f       	adc	r24, r20
    1724:	48 f4       	brcc	.+18     	; 0x1738 <__addsf3x+0x98>
    1726:	87 95       	ror	r24
    1728:	77 95       	ror	r23
    172a:	67 95       	ror	r22
    172c:	b7 95       	ror	r27
    172e:	f7 95       	ror	r31
    1730:	9e 3f       	cpi	r25, 0xFE	; 254
    1732:	08 f0       	brcs	.+2      	; 0x1736 <__addsf3x+0x96>
    1734:	b3 cf       	rjmp	.-154    	; 0x169c <__addsf3+0x1e>
    1736:	93 95       	inc	r25
    1738:	88 0f       	add	r24, r24
    173a:	08 f0       	brcs	.+2      	; 0x173e <__addsf3x+0x9e>
    173c:	99 27       	eor	r25, r25
    173e:	ee 0f       	add	r30, r30
    1740:	97 95       	ror	r25
    1742:	87 95       	ror	r24
    1744:	08 95       	ret
    1746:	8d d1       	rcall	.+794    	; 0x1a62 <__fp_pscA>
    1748:	58 f0       	brcs	.+22     	; 0x1760 <__addsf3x+0xc0>
    174a:	80 e8       	ldi	r24, 0x80	; 128
    174c:	91 e0       	ldi	r25, 0x01	; 1
    174e:	09 f4       	brne	.+2      	; 0x1752 <__addsf3x+0xb2>
    1750:	9e ef       	ldi	r25, 0xFE	; 254
    1752:	8e d1       	rcall	.+796    	; 0x1a70 <__fp_pscB>
    1754:	28 f0       	brcs	.+10     	; 0x1760 <__addsf3x+0xc0>
    1756:	40 e8       	ldi	r20, 0x80	; 128
    1758:	51 e0       	ldi	r21, 0x01	; 1
    175a:	59 f4       	brne	.+22     	; 0x1772 <atan2+0xe>
    175c:	5e ef       	ldi	r21, 0xFE	; 254
    175e:	09 c0       	rjmp	.+18     	; 0x1772 <atan2+0xe>
    1760:	58 c1       	rjmp	.+688    	; 0x1a12 <__fp_nan>
    1762:	c0 c1       	rjmp	.+896    	; 0x1ae4 <__fp_zero>

00001764 <atan2>:
    1764:	e9 2f       	mov	r30, r25
    1766:	e0 78       	andi	r30, 0x80	; 128
    1768:	9b d1       	rcall	.+822    	; 0x1aa0 <__fp_split3>
    176a:	68 f3       	brcs	.-38     	; 0x1746 <__addsf3x+0xa6>
    176c:	09 2e       	mov	r0, r25
    176e:	05 2a       	or	r0, r21
    1770:	c1 f3       	breq	.-16     	; 0x1762 <__addsf3x+0xc2>
    1772:	26 17       	cp	r18, r22
    1774:	37 07       	cpc	r19, r23
    1776:	48 07       	cpc	r20, r24
    1778:	59 07       	cpc	r21, r25
    177a:	38 f0       	brcs	.+14     	; 0x178a <atan2+0x26>
    177c:	0e 2e       	mov	r0, r30
    177e:	07 f8       	bld	r0, 7
    1780:	e0 25       	eor	r30, r0
    1782:	69 f0       	breq	.+26     	; 0x179e <atan2+0x3a>
    1784:	e0 25       	eor	r30, r0
    1786:	e0 64       	ori	r30, 0x40	; 64
    1788:	0a c0       	rjmp	.+20     	; 0x179e <atan2+0x3a>
    178a:	ef 63       	ori	r30, 0x3F	; 63
    178c:	07 f8       	bld	r0, 7
    178e:	00 94       	com	r0
    1790:	07 fa       	bst	r0, 7
    1792:	db 01       	movw	r26, r22
    1794:	b9 01       	movw	r22, r18
    1796:	9d 01       	movw	r18, r26
    1798:	dc 01       	movw	r26, r24
    179a:	ca 01       	movw	r24, r20
    179c:	ad 01       	movw	r20, r26
    179e:	ef 93       	push	r30
    17a0:	47 d0       	rcall	.+142    	; 0x1830 <__divsf3_pse>
    17a2:	6d d1       	rcall	.+730    	; 0x1a7e <__fp_round>
    17a4:	0a d0       	rcall	.+20     	; 0x17ba <atan>
    17a6:	5f 91       	pop	r21
    17a8:	55 23       	and	r21, r21
    17aa:	31 f0       	breq	.+12     	; 0x17b8 <atan2+0x54>
    17ac:	2b ed       	ldi	r18, 0xDB	; 219
    17ae:	3f e0       	ldi	r19, 0x0F	; 15
    17b0:	49 e4       	ldi	r20, 0x49	; 73
    17b2:	50 fd       	sbrc	r21, 0
    17b4:	49 ec       	ldi	r20, 0xC9	; 201
    17b6:	63 cf       	rjmp	.-314    	; 0x167e <__addsf3>
    17b8:	08 95       	ret

000017ba <atan>:
    17ba:	df 93       	push	r29
    17bc:	dd 27       	eor	r29, r29
    17be:	b9 2f       	mov	r27, r25
    17c0:	bf 77       	andi	r27, 0x7F	; 127
    17c2:	40 e8       	ldi	r20, 0x80	; 128
    17c4:	5f e3       	ldi	r21, 0x3F	; 63
    17c6:	16 16       	cp	r1, r22
    17c8:	17 06       	cpc	r1, r23
    17ca:	48 07       	cpc	r20, r24
    17cc:	5b 07       	cpc	r21, r27
    17ce:	10 f4       	brcc	.+4      	; 0x17d4 <atan+0x1a>
    17d0:	d9 2f       	mov	r29, r25
    17d2:	93 d1       	rcall	.+806    	; 0x1afa <inverse>
    17d4:	9f 93       	push	r25
    17d6:	8f 93       	push	r24
    17d8:	7f 93       	push	r23
    17da:	6f 93       	push	r22
    17dc:	3a d2       	rcall	.+1140   	; 0x1c52 <square>
    17de:	e4 ee       	ldi	r30, 0xE4	; 228
    17e0:	f0 e0       	ldi	r31, 0x00	; 0
    17e2:	1a d1       	rcall	.+564    	; 0x1a18 <__fp_powser>
    17e4:	4c d1       	rcall	.+664    	; 0x1a7e <__fp_round>
    17e6:	2f 91       	pop	r18
    17e8:	3f 91       	pop	r19
    17ea:	4f 91       	pop	r20
    17ec:	5f 91       	pop	r21
    17ee:	98 d1       	rcall	.+816    	; 0x1b20 <__mulsf3x>
    17f0:	dd 23       	and	r29, r29
    17f2:	49 f0       	breq	.+18     	; 0x1806 <atan+0x4c>
    17f4:	90 58       	subi	r25, 0x80	; 128
    17f6:	a2 ea       	ldi	r26, 0xA2	; 162
    17f8:	2a ed       	ldi	r18, 0xDA	; 218
    17fa:	3f e0       	ldi	r19, 0x0F	; 15
    17fc:	49 ec       	ldi	r20, 0xC9	; 201
    17fe:	5f e3       	ldi	r21, 0x3F	; 63
    1800:	d0 78       	andi	r29, 0x80	; 128
    1802:	5d 27       	eor	r21, r29
    1804:	4d df       	rcall	.-358    	; 0x16a0 <__addsf3x>
    1806:	df 91       	pop	r29
    1808:	3a c1       	rjmp	.+628    	; 0x1a7e <__fp_round>

0000180a <__cmpsf2>:
    180a:	d9 d0       	rcall	.+434    	; 0x19be <__fp_cmp>
    180c:	08 f4       	brcc	.+2      	; 0x1810 <__cmpsf2+0x6>
    180e:	81 e0       	ldi	r24, 0x01	; 1
    1810:	08 95       	ret

00001812 <__divsf3>:
    1812:	0c d0       	rcall	.+24     	; 0x182c <__divsf3x>
    1814:	34 c1       	rjmp	.+616    	; 0x1a7e <__fp_round>
    1816:	2c d1       	rcall	.+600    	; 0x1a70 <__fp_pscB>
    1818:	40 f0       	brcs	.+16     	; 0x182a <__divsf3+0x18>
    181a:	23 d1       	rcall	.+582    	; 0x1a62 <__fp_pscA>
    181c:	30 f0       	brcs	.+12     	; 0x182a <__divsf3+0x18>
    181e:	21 f4       	brne	.+8      	; 0x1828 <__divsf3+0x16>
    1820:	5f 3f       	cpi	r21, 0xFF	; 255
    1822:	19 f0       	breq	.+6      	; 0x182a <__divsf3+0x18>
    1824:	f0 c0       	rjmp	.+480    	; 0x1a06 <__fp_inf>
    1826:	51 11       	cpse	r21, r1
    1828:	5e c1       	rjmp	.+700    	; 0x1ae6 <__fp_szero>
    182a:	f3 c0       	rjmp	.+486    	; 0x1a12 <__fp_nan>

0000182c <__divsf3x>:
    182c:	39 d1       	rcall	.+626    	; 0x1aa0 <__fp_split3>
    182e:	98 f3       	brcs	.-26     	; 0x1816 <__divsf3+0x4>

00001830 <__divsf3_pse>:
    1830:	99 23       	and	r25, r25
    1832:	c9 f3       	breq	.-14     	; 0x1826 <__divsf3+0x14>
    1834:	55 23       	and	r21, r21
    1836:	b1 f3       	breq	.-20     	; 0x1824 <__divsf3+0x12>
    1838:	95 1b       	sub	r25, r21
    183a:	55 0b       	sbc	r21, r21
    183c:	bb 27       	eor	r27, r27
    183e:	aa 27       	eor	r26, r26
    1840:	62 17       	cp	r22, r18
    1842:	73 07       	cpc	r23, r19
    1844:	84 07       	cpc	r24, r20
    1846:	38 f0       	brcs	.+14     	; 0x1856 <__divsf3_pse+0x26>
    1848:	9f 5f       	subi	r25, 0xFF	; 255
    184a:	5f 4f       	sbci	r21, 0xFF	; 255
    184c:	22 0f       	add	r18, r18
    184e:	33 1f       	adc	r19, r19
    1850:	44 1f       	adc	r20, r20
    1852:	aa 1f       	adc	r26, r26
    1854:	a9 f3       	breq	.-22     	; 0x1840 <__divsf3_pse+0x10>
    1856:	33 d0       	rcall	.+102    	; 0x18be <__divsf3_pse+0x8e>
    1858:	0e 2e       	mov	r0, r30
    185a:	3a f0       	brmi	.+14     	; 0x186a <__divsf3_pse+0x3a>
    185c:	e0 e8       	ldi	r30, 0x80	; 128
    185e:	30 d0       	rcall	.+96     	; 0x18c0 <__divsf3_pse+0x90>
    1860:	91 50       	subi	r25, 0x01	; 1
    1862:	50 40       	sbci	r21, 0x00	; 0
    1864:	e6 95       	lsr	r30
    1866:	00 1c       	adc	r0, r0
    1868:	ca f7       	brpl	.-14     	; 0x185c <__divsf3_pse+0x2c>
    186a:	29 d0       	rcall	.+82     	; 0x18be <__divsf3_pse+0x8e>
    186c:	fe 2f       	mov	r31, r30
    186e:	27 d0       	rcall	.+78     	; 0x18be <__divsf3_pse+0x8e>
    1870:	66 0f       	add	r22, r22
    1872:	77 1f       	adc	r23, r23
    1874:	88 1f       	adc	r24, r24
    1876:	bb 1f       	adc	r27, r27
    1878:	26 17       	cp	r18, r22
    187a:	37 07       	cpc	r19, r23
    187c:	48 07       	cpc	r20, r24
    187e:	ab 07       	cpc	r26, r27
    1880:	b0 e8       	ldi	r27, 0x80	; 128
    1882:	09 f0       	breq	.+2      	; 0x1886 <__divsf3_pse+0x56>
    1884:	bb 0b       	sbc	r27, r27
    1886:	80 2d       	mov	r24, r0
    1888:	bf 01       	movw	r22, r30
    188a:	ff 27       	eor	r31, r31
    188c:	93 58       	subi	r25, 0x83	; 131
    188e:	5f 4f       	sbci	r21, 0xFF	; 255
    1890:	2a f0       	brmi	.+10     	; 0x189c <__divsf3_pse+0x6c>
    1892:	9e 3f       	cpi	r25, 0xFE	; 254
    1894:	51 05       	cpc	r21, r1
    1896:	68 f0       	brcs	.+26     	; 0x18b2 <__divsf3_pse+0x82>
    1898:	b6 c0       	rjmp	.+364    	; 0x1a06 <__fp_inf>
    189a:	25 c1       	rjmp	.+586    	; 0x1ae6 <__fp_szero>
    189c:	5f 3f       	cpi	r21, 0xFF	; 255
    189e:	ec f3       	brlt	.-6      	; 0x189a <__divsf3_pse+0x6a>
    18a0:	98 3e       	cpi	r25, 0xE8	; 232
    18a2:	dc f3       	brlt	.-10     	; 0x189a <__divsf3_pse+0x6a>
    18a4:	86 95       	lsr	r24
    18a6:	77 95       	ror	r23
    18a8:	67 95       	ror	r22
    18aa:	b7 95       	ror	r27
    18ac:	f7 95       	ror	r31
    18ae:	9f 5f       	subi	r25, 0xFF	; 255
    18b0:	c9 f7       	brne	.-14     	; 0x18a4 <__divsf3_pse+0x74>
    18b2:	88 0f       	add	r24, r24
    18b4:	91 1d       	adc	r25, r1
    18b6:	96 95       	lsr	r25
    18b8:	87 95       	ror	r24
    18ba:	97 f9       	bld	r25, 7
    18bc:	08 95       	ret
    18be:	e1 e0       	ldi	r30, 0x01	; 1
    18c0:	66 0f       	add	r22, r22
    18c2:	77 1f       	adc	r23, r23
    18c4:	88 1f       	adc	r24, r24
    18c6:	bb 1f       	adc	r27, r27
    18c8:	62 17       	cp	r22, r18
    18ca:	73 07       	cpc	r23, r19
    18cc:	84 07       	cpc	r24, r20
    18ce:	ba 07       	cpc	r27, r26
    18d0:	20 f0       	brcs	.+8      	; 0x18da <__divsf3_pse+0xaa>
    18d2:	62 1b       	sub	r22, r18
    18d4:	73 0b       	sbc	r23, r19
    18d6:	84 0b       	sbc	r24, r20
    18d8:	ba 0b       	sbc	r27, r26
    18da:	ee 1f       	adc	r30, r30
    18dc:	88 f7       	brcc	.-30     	; 0x18c0 <__divsf3_pse+0x90>
    18de:	e0 95       	com	r30
    18e0:	08 95       	ret

000018e2 <__fixsfsi>:
    18e2:	04 d0       	rcall	.+8      	; 0x18ec <__fixunssfsi>
    18e4:	68 94       	set
    18e6:	b1 11       	cpse	r27, r1
    18e8:	fe c0       	rjmp	.+508    	; 0x1ae6 <__fp_szero>
    18ea:	08 95       	ret

000018ec <__fixunssfsi>:
    18ec:	e1 d0       	rcall	.+450    	; 0x1ab0 <__fp_splitA>
    18ee:	88 f0       	brcs	.+34     	; 0x1912 <__fixunssfsi+0x26>
    18f0:	9f 57       	subi	r25, 0x7F	; 127
    18f2:	90 f0       	brcs	.+36     	; 0x1918 <__fixunssfsi+0x2c>
    18f4:	b9 2f       	mov	r27, r25
    18f6:	99 27       	eor	r25, r25
    18f8:	b7 51       	subi	r27, 0x17	; 23
    18fa:	a0 f0       	brcs	.+40     	; 0x1924 <__fixunssfsi+0x38>
    18fc:	d1 f0       	breq	.+52     	; 0x1932 <__fixunssfsi+0x46>
    18fe:	66 0f       	add	r22, r22
    1900:	77 1f       	adc	r23, r23
    1902:	88 1f       	adc	r24, r24
    1904:	99 1f       	adc	r25, r25
    1906:	1a f0       	brmi	.+6      	; 0x190e <__fixunssfsi+0x22>
    1908:	ba 95       	dec	r27
    190a:	c9 f7       	brne	.-14     	; 0x18fe <__fixunssfsi+0x12>
    190c:	12 c0       	rjmp	.+36     	; 0x1932 <__fixunssfsi+0x46>
    190e:	b1 30       	cpi	r27, 0x01	; 1
    1910:	81 f0       	breq	.+32     	; 0x1932 <__fixunssfsi+0x46>
    1912:	e8 d0       	rcall	.+464    	; 0x1ae4 <__fp_zero>
    1914:	b1 e0       	ldi	r27, 0x01	; 1
    1916:	08 95       	ret
    1918:	e5 c0       	rjmp	.+458    	; 0x1ae4 <__fp_zero>
    191a:	67 2f       	mov	r22, r23
    191c:	78 2f       	mov	r23, r24
    191e:	88 27       	eor	r24, r24
    1920:	b8 5f       	subi	r27, 0xF8	; 248
    1922:	39 f0       	breq	.+14     	; 0x1932 <__fixunssfsi+0x46>
    1924:	b9 3f       	cpi	r27, 0xF9	; 249
    1926:	cc f3       	brlt	.-14     	; 0x191a <__fixunssfsi+0x2e>
    1928:	86 95       	lsr	r24
    192a:	77 95       	ror	r23
    192c:	67 95       	ror	r22
    192e:	b3 95       	inc	r27
    1930:	d9 f7       	brne	.-10     	; 0x1928 <__fixunssfsi+0x3c>
    1932:	3e f4       	brtc	.+14     	; 0x1942 <__fixunssfsi+0x56>
    1934:	90 95       	com	r25
    1936:	80 95       	com	r24
    1938:	70 95       	com	r23
    193a:	61 95       	neg	r22
    193c:	7f 4f       	sbci	r23, 0xFF	; 255
    193e:	8f 4f       	sbci	r24, 0xFF	; 255
    1940:	9f 4f       	sbci	r25, 0xFF	; 255
    1942:	08 95       	ret

00001944 <__floatunsisf>:
    1944:	e8 94       	clt
    1946:	09 c0       	rjmp	.+18     	; 0x195a <__floatsisf+0x12>

00001948 <__floatsisf>:
    1948:	97 fb       	bst	r25, 7
    194a:	3e f4       	brtc	.+14     	; 0x195a <__floatsisf+0x12>
    194c:	90 95       	com	r25
    194e:	80 95       	com	r24
    1950:	70 95       	com	r23
    1952:	61 95       	neg	r22
    1954:	7f 4f       	sbci	r23, 0xFF	; 255
    1956:	8f 4f       	sbci	r24, 0xFF	; 255
    1958:	9f 4f       	sbci	r25, 0xFF	; 255
    195a:	99 23       	and	r25, r25
    195c:	a9 f0       	breq	.+42     	; 0x1988 <__floatsisf+0x40>
    195e:	f9 2f       	mov	r31, r25
    1960:	96 e9       	ldi	r25, 0x96	; 150
    1962:	bb 27       	eor	r27, r27
    1964:	93 95       	inc	r25
    1966:	f6 95       	lsr	r31
    1968:	87 95       	ror	r24
    196a:	77 95       	ror	r23
    196c:	67 95       	ror	r22
    196e:	b7 95       	ror	r27
    1970:	f1 11       	cpse	r31, r1
    1972:	f8 cf       	rjmp	.-16     	; 0x1964 <__floatsisf+0x1c>
    1974:	fa f4       	brpl	.+62     	; 0x19b4 <__floatsisf+0x6c>
    1976:	bb 0f       	add	r27, r27
    1978:	11 f4       	brne	.+4      	; 0x197e <__floatsisf+0x36>
    197a:	60 ff       	sbrs	r22, 0
    197c:	1b c0       	rjmp	.+54     	; 0x19b4 <__floatsisf+0x6c>
    197e:	6f 5f       	subi	r22, 0xFF	; 255
    1980:	7f 4f       	sbci	r23, 0xFF	; 255
    1982:	8f 4f       	sbci	r24, 0xFF	; 255
    1984:	9f 4f       	sbci	r25, 0xFF	; 255
    1986:	16 c0       	rjmp	.+44     	; 0x19b4 <__floatsisf+0x6c>
    1988:	88 23       	and	r24, r24
    198a:	11 f0       	breq	.+4      	; 0x1990 <__floatsisf+0x48>
    198c:	96 e9       	ldi	r25, 0x96	; 150
    198e:	11 c0       	rjmp	.+34     	; 0x19b2 <__floatsisf+0x6a>
    1990:	77 23       	and	r23, r23
    1992:	21 f0       	breq	.+8      	; 0x199c <__floatsisf+0x54>
    1994:	9e e8       	ldi	r25, 0x8E	; 142
    1996:	87 2f       	mov	r24, r23
    1998:	76 2f       	mov	r23, r22
    199a:	05 c0       	rjmp	.+10     	; 0x19a6 <__floatsisf+0x5e>
    199c:	66 23       	and	r22, r22
    199e:	71 f0       	breq	.+28     	; 0x19bc <__floatsisf+0x74>
    19a0:	96 e8       	ldi	r25, 0x86	; 134
    19a2:	86 2f       	mov	r24, r22
    19a4:	70 e0       	ldi	r23, 0x00	; 0
    19a6:	60 e0       	ldi	r22, 0x00	; 0
    19a8:	2a f0       	brmi	.+10     	; 0x19b4 <__floatsisf+0x6c>
    19aa:	9a 95       	dec	r25
    19ac:	66 0f       	add	r22, r22
    19ae:	77 1f       	adc	r23, r23
    19b0:	88 1f       	adc	r24, r24
    19b2:	da f7       	brpl	.-10     	; 0x19aa <__floatsisf+0x62>
    19b4:	88 0f       	add	r24, r24
    19b6:	96 95       	lsr	r25
    19b8:	87 95       	ror	r24
    19ba:	97 f9       	bld	r25, 7
    19bc:	08 95       	ret

000019be <__fp_cmp>:
    19be:	99 0f       	add	r25, r25
    19c0:	00 08       	sbc	r0, r0
    19c2:	55 0f       	add	r21, r21
    19c4:	aa 0b       	sbc	r26, r26
    19c6:	e0 e8       	ldi	r30, 0x80	; 128
    19c8:	fe ef       	ldi	r31, 0xFE	; 254
    19ca:	16 16       	cp	r1, r22
    19cc:	17 06       	cpc	r1, r23
    19ce:	e8 07       	cpc	r30, r24
    19d0:	f9 07       	cpc	r31, r25
    19d2:	c0 f0       	brcs	.+48     	; 0x1a04 <__fp_cmp+0x46>
    19d4:	12 16       	cp	r1, r18
    19d6:	13 06       	cpc	r1, r19
    19d8:	e4 07       	cpc	r30, r20
    19da:	f5 07       	cpc	r31, r21
    19dc:	98 f0       	brcs	.+38     	; 0x1a04 <__fp_cmp+0x46>
    19de:	62 1b       	sub	r22, r18
    19e0:	73 0b       	sbc	r23, r19
    19e2:	84 0b       	sbc	r24, r20
    19e4:	95 0b       	sbc	r25, r21
    19e6:	39 f4       	brne	.+14     	; 0x19f6 <__fp_cmp+0x38>
    19e8:	0a 26       	eor	r0, r26
    19ea:	61 f0       	breq	.+24     	; 0x1a04 <__fp_cmp+0x46>
    19ec:	23 2b       	or	r18, r19
    19ee:	24 2b       	or	r18, r20
    19f0:	25 2b       	or	r18, r21
    19f2:	21 f4       	brne	.+8      	; 0x19fc <__fp_cmp+0x3e>
    19f4:	08 95       	ret
    19f6:	0a 26       	eor	r0, r26
    19f8:	09 f4       	brne	.+2      	; 0x19fc <__fp_cmp+0x3e>
    19fa:	a1 40       	sbci	r26, 0x01	; 1
    19fc:	a6 95       	lsr	r26
    19fe:	8f ef       	ldi	r24, 0xFF	; 255
    1a00:	81 1d       	adc	r24, r1
    1a02:	81 1d       	adc	r24, r1
    1a04:	08 95       	ret

00001a06 <__fp_inf>:
    1a06:	97 f9       	bld	r25, 7
    1a08:	9f 67       	ori	r25, 0x7F	; 127
    1a0a:	80 e8       	ldi	r24, 0x80	; 128
    1a0c:	70 e0       	ldi	r23, 0x00	; 0
    1a0e:	60 e0       	ldi	r22, 0x00	; 0
    1a10:	08 95       	ret

00001a12 <__fp_nan>:
    1a12:	9f ef       	ldi	r25, 0xFF	; 255
    1a14:	80 ec       	ldi	r24, 0xC0	; 192
    1a16:	08 95       	ret

00001a18 <__fp_powser>:
    1a18:	df 93       	push	r29
    1a1a:	cf 93       	push	r28
    1a1c:	1f 93       	push	r17
    1a1e:	0f 93       	push	r16
    1a20:	ff 92       	push	r15
    1a22:	ef 92       	push	r14
    1a24:	df 92       	push	r13
    1a26:	7b 01       	movw	r14, r22
    1a28:	8c 01       	movw	r16, r24
    1a2a:	68 94       	set
    1a2c:	05 c0       	rjmp	.+10     	; 0x1a38 <__fp_powser+0x20>
    1a2e:	da 2e       	mov	r13, r26
    1a30:	ef 01       	movw	r28, r30
    1a32:	76 d0       	rcall	.+236    	; 0x1b20 <__mulsf3x>
    1a34:	fe 01       	movw	r30, r28
    1a36:	e8 94       	clt
    1a38:	a5 91       	lpm	r26, Z+
    1a3a:	25 91       	lpm	r18, Z+
    1a3c:	35 91       	lpm	r19, Z+
    1a3e:	45 91       	lpm	r20, Z+
    1a40:	55 91       	lpm	r21, Z+
    1a42:	ae f3       	brts	.-22     	; 0x1a2e <__fp_powser+0x16>
    1a44:	ef 01       	movw	r28, r30
    1a46:	2c de       	rcall	.-936    	; 0x16a0 <__addsf3x>
    1a48:	fe 01       	movw	r30, r28
    1a4a:	97 01       	movw	r18, r14
    1a4c:	a8 01       	movw	r20, r16
    1a4e:	da 94       	dec	r13
    1a50:	79 f7       	brne	.-34     	; 0x1a30 <__fp_powser+0x18>
    1a52:	df 90       	pop	r13
    1a54:	ef 90       	pop	r14
    1a56:	ff 90       	pop	r15
    1a58:	0f 91       	pop	r16
    1a5a:	1f 91       	pop	r17
    1a5c:	cf 91       	pop	r28
    1a5e:	df 91       	pop	r29
    1a60:	08 95       	ret

00001a62 <__fp_pscA>:
    1a62:	00 24       	eor	r0, r0
    1a64:	0a 94       	dec	r0
    1a66:	16 16       	cp	r1, r22
    1a68:	17 06       	cpc	r1, r23
    1a6a:	18 06       	cpc	r1, r24
    1a6c:	09 06       	cpc	r0, r25
    1a6e:	08 95       	ret

00001a70 <__fp_pscB>:
    1a70:	00 24       	eor	r0, r0
    1a72:	0a 94       	dec	r0
    1a74:	12 16       	cp	r1, r18
    1a76:	13 06       	cpc	r1, r19
    1a78:	14 06       	cpc	r1, r20
    1a7a:	05 06       	cpc	r0, r21
    1a7c:	08 95       	ret

00001a7e <__fp_round>:
    1a7e:	09 2e       	mov	r0, r25
    1a80:	03 94       	inc	r0
    1a82:	00 0c       	add	r0, r0
    1a84:	11 f4       	brne	.+4      	; 0x1a8a <__fp_round+0xc>
    1a86:	88 23       	and	r24, r24
    1a88:	52 f0       	brmi	.+20     	; 0x1a9e <__fp_round+0x20>
    1a8a:	bb 0f       	add	r27, r27
    1a8c:	40 f4       	brcc	.+16     	; 0x1a9e <__fp_round+0x20>
    1a8e:	bf 2b       	or	r27, r31
    1a90:	11 f4       	brne	.+4      	; 0x1a96 <__fp_round+0x18>
    1a92:	60 ff       	sbrs	r22, 0
    1a94:	04 c0       	rjmp	.+8      	; 0x1a9e <__fp_round+0x20>
    1a96:	6f 5f       	subi	r22, 0xFF	; 255
    1a98:	7f 4f       	sbci	r23, 0xFF	; 255
    1a9a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a9c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a9e:	08 95       	ret

00001aa0 <__fp_split3>:
    1aa0:	57 fd       	sbrc	r21, 7
    1aa2:	90 58       	subi	r25, 0x80	; 128
    1aa4:	44 0f       	add	r20, r20
    1aa6:	55 1f       	adc	r21, r21
    1aa8:	59 f0       	breq	.+22     	; 0x1ac0 <__fp_splitA+0x10>
    1aaa:	5f 3f       	cpi	r21, 0xFF	; 255
    1aac:	71 f0       	breq	.+28     	; 0x1aca <__fp_splitA+0x1a>
    1aae:	47 95       	ror	r20

00001ab0 <__fp_splitA>:
    1ab0:	88 0f       	add	r24, r24
    1ab2:	97 fb       	bst	r25, 7
    1ab4:	99 1f       	adc	r25, r25
    1ab6:	61 f0       	breq	.+24     	; 0x1ad0 <__fp_splitA+0x20>
    1ab8:	9f 3f       	cpi	r25, 0xFF	; 255
    1aba:	79 f0       	breq	.+30     	; 0x1ada <__fp_splitA+0x2a>
    1abc:	87 95       	ror	r24
    1abe:	08 95       	ret
    1ac0:	12 16       	cp	r1, r18
    1ac2:	13 06       	cpc	r1, r19
    1ac4:	14 06       	cpc	r1, r20
    1ac6:	55 1f       	adc	r21, r21
    1ac8:	f2 cf       	rjmp	.-28     	; 0x1aae <__fp_split3+0xe>
    1aca:	46 95       	lsr	r20
    1acc:	f1 df       	rcall	.-30     	; 0x1ab0 <__fp_splitA>
    1ace:	08 c0       	rjmp	.+16     	; 0x1ae0 <__fp_splitA+0x30>
    1ad0:	16 16       	cp	r1, r22
    1ad2:	17 06       	cpc	r1, r23
    1ad4:	18 06       	cpc	r1, r24
    1ad6:	99 1f       	adc	r25, r25
    1ad8:	f1 cf       	rjmp	.-30     	; 0x1abc <__fp_splitA+0xc>
    1ada:	86 95       	lsr	r24
    1adc:	71 05       	cpc	r23, r1
    1ade:	61 05       	cpc	r22, r1
    1ae0:	08 94       	sec
    1ae2:	08 95       	ret

00001ae4 <__fp_zero>:
    1ae4:	e8 94       	clt

00001ae6 <__fp_szero>:
    1ae6:	bb 27       	eor	r27, r27
    1ae8:	66 27       	eor	r22, r22
    1aea:	77 27       	eor	r23, r23
    1aec:	cb 01       	movw	r24, r22
    1aee:	97 f9       	bld	r25, 7
    1af0:	08 95       	ret

00001af2 <__gesf2>:
    1af2:	65 df       	rcall	.-310    	; 0x19be <__fp_cmp>
    1af4:	08 f4       	brcc	.+2      	; 0x1af8 <__gesf2+0x6>
    1af6:	8f ef       	ldi	r24, 0xFF	; 255
    1af8:	08 95       	ret

00001afa <inverse>:
    1afa:	9b 01       	movw	r18, r22
    1afc:	ac 01       	movw	r20, r24
    1afe:	60 e0       	ldi	r22, 0x00	; 0
    1b00:	70 e0       	ldi	r23, 0x00	; 0
    1b02:	80 e8       	ldi	r24, 0x80	; 128
    1b04:	9f e3       	ldi	r25, 0x3F	; 63
    1b06:	85 ce       	rjmp	.-758    	; 0x1812 <__divsf3>

00001b08 <__mulsf3>:
    1b08:	0b d0       	rcall	.+22     	; 0x1b20 <__mulsf3x>
    1b0a:	b9 cf       	rjmp	.-142    	; 0x1a7e <__fp_round>
    1b0c:	aa df       	rcall	.-172    	; 0x1a62 <__fp_pscA>
    1b0e:	28 f0       	brcs	.+10     	; 0x1b1a <__mulsf3+0x12>
    1b10:	af df       	rcall	.-162    	; 0x1a70 <__fp_pscB>
    1b12:	18 f0       	brcs	.+6      	; 0x1b1a <__mulsf3+0x12>
    1b14:	95 23       	and	r25, r21
    1b16:	09 f0       	breq	.+2      	; 0x1b1a <__mulsf3+0x12>
    1b18:	76 cf       	rjmp	.-276    	; 0x1a06 <__fp_inf>
    1b1a:	7b cf       	rjmp	.-266    	; 0x1a12 <__fp_nan>
    1b1c:	11 24       	eor	r1, r1
    1b1e:	e3 cf       	rjmp	.-58     	; 0x1ae6 <__fp_szero>

00001b20 <__mulsf3x>:
    1b20:	bf df       	rcall	.-130    	; 0x1aa0 <__fp_split3>
    1b22:	a0 f3       	brcs	.-24     	; 0x1b0c <__mulsf3+0x4>

00001b24 <__mulsf3_pse>:
    1b24:	95 9f       	mul	r25, r21
    1b26:	d1 f3       	breq	.-12     	; 0x1b1c <__mulsf3+0x14>
    1b28:	95 0f       	add	r25, r21
    1b2a:	50 e0       	ldi	r21, 0x00	; 0
    1b2c:	55 1f       	adc	r21, r21
    1b2e:	62 9f       	mul	r22, r18
    1b30:	f0 01       	movw	r30, r0
    1b32:	72 9f       	mul	r23, r18
    1b34:	bb 27       	eor	r27, r27
    1b36:	f0 0d       	add	r31, r0
    1b38:	b1 1d       	adc	r27, r1
    1b3a:	63 9f       	mul	r22, r19
    1b3c:	aa 27       	eor	r26, r26
    1b3e:	f0 0d       	add	r31, r0
    1b40:	b1 1d       	adc	r27, r1
    1b42:	aa 1f       	adc	r26, r26
    1b44:	64 9f       	mul	r22, r20
    1b46:	66 27       	eor	r22, r22
    1b48:	b0 0d       	add	r27, r0
    1b4a:	a1 1d       	adc	r26, r1
    1b4c:	66 1f       	adc	r22, r22
    1b4e:	82 9f       	mul	r24, r18
    1b50:	22 27       	eor	r18, r18
    1b52:	b0 0d       	add	r27, r0
    1b54:	a1 1d       	adc	r26, r1
    1b56:	62 1f       	adc	r22, r18
    1b58:	73 9f       	mul	r23, r19
    1b5a:	b0 0d       	add	r27, r0
    1b5c:	a1 1d       	adc	r26, r1
    1b5e:	62 1f       	adc	r22, r18
    1b60:	83 9f       	mul	r24, r19
    1b62:	a0 0d       	add	r26, r0
    1b64:	61 1d       	adc	r22, r1
    1b66:	22 1f       	adc	r18, r18
    1b68:	74 9f       	mul	r23, r20
    1b6a:	33 27       	eor	r19, r19
    1b6c:	a0 0d       	add	r26, r0
    1b6e:	61 1d       	adc	r22, r1
    1b70:	23 1f       	adc	r18, r19
    1b72:	84 9f       	mul	r24, r20
    1b74:	60 0d       	add	r22, r0
    1b76:	21 1d       	adc	r18, r1
    1b78:	82 2f       	mov	r24, r18
    1b7a:	76 2f       	mov	r23, r22
    1b7c:	6a 2f       	mov	r22, r26
    1b7e:	11 24       	eor	r1, r1
    1b80:	9f 57       	subi	r25, 0x7F	; 127
    1b82:	50 40       	sbci	r21, 0x00	; 0
    1b84:	8a f0       	brmi	.+34     	; 0x1ba8 <__mulsf3_pse+0x84>
    1b86:	e1 f0       	breq	.+56     	; 0x1bc0 <__mulsf3_pse+0x9c>
    1b88:	88 23       	and	r24, r24
    1b8a:	4a f0       	brmi	.+18     	; 0x1b9e <__mulsf3_pse+0x7a>
    1b8c:	ee 0f       	add	r30, r30
    1b8e:	ff 1f       	adc	r31, r31
    1b90:	bb 1f       	adc	r27, r27
    1b92:	66 1f       	adc	r22, r22
    1b94:	77 1f       	adc	r23, r23
    1b96:	88 1f       	adc	r24, r24
    1b98:	91 50       	subi	r25, 0x01	; 1
    1b9a:	50 40       	sbci	r21, 0x00	; 0
    1b9c:	a9 f7       	brne	.-22     	; 0x1b88 <__mulsf3_pse+0x64>
    1b9e:	9e 3f       	cpi	r25, 0xFE	; 254
    1ba0:	51 05       	cpc	r21, r1
    1ba2:	70 f0       	brcs	.+28     	; 0x1bc0 <__mulsf3_pse+0x9c>
    1ba4:	30 cf       	rjmp	.-416    	; 0x1a06 <__fp_inf>
    1ba6:	9f cf       	rjmp	.-194    	; 0x1ae6 <__fp_szero>
    1ba8:	5f 3f       	cpi	r21, 0xFF	; 255
    1baa:	ec f3       	brlt	.-6      	; 0x1ba6 <__mulsf3_pse+0x82>
    1bac:	98 3e       	cpi	r25, 0xE8	; 232
    1bae:	dc f3       	brlt	.-10     	; 0x1ba6 <__mulsf3_pse+0x82>
    1bb0:	86 95       	lsr	r24
    1bb2:	77 95       	ror	r23
    1bb4:	67 95       	ror	r22
    1bb6:	b7 95       	ror	r27
    1bb8:	f7 95       	ror	r31
    1bba:	e7 95       	ror	r30
    1bbc:	9f 5f       	subi	r25, 0xFF	; 255
    1bbe:	c1 f7       	brne	.-16     	; 0x1bb0 <__mulsf3_pse+0x8c>
    1bc0:	fe 2b       	or	r31, r30
    1bc2:	88 0f       	add	r24, r24
    1bc4:	91 1d       	adc	r25, r1
    1bc6:	96 95       	lsr	r25
    1bc8:	87 95       	ror	r24
    1bca:	97 f9       	bld	r25, 7
    1bcc:	08 95       	ret
    1bce:	11 f4       	brne	.+4      	; 0x1bd4 <__mulsf3_pse+0xb0>
    1bd0:	0e f4       	brtc	.+2      	; 0x1bd4 <__mulsf3_pse+0xb0>
    1bd2:	1f cf       	rjmp	.-450    	; 0x1a12 <__fp_nan>
    1bd4:	41 c0       	rjmp	.+130    	; 0x1c58 <__fp_mpack>

00001bd6 <sqrt>:
    1bd6:	6c df       	rcall	.-296    	; 0x1ab0 <__fp_splitA>
    1bd8:	d0 f3       	brcs	.-12     	; 0x1bce <__mulsf3_pse+0xaa>
    1bda:	99 23       	and	r25, r25
    1bdc:	d9 f3       	breq	.-10     	; 0x1bd4 <__mulsf3_pse+0xb0>
    1bde:	ce f3       	brts	.-14     	; 0x1bd2 <__mulsf3_pse+0xae>
    1be0:	9f 57       	subi	r25, 0x7F	; 127
    1be2:	55 0b       	sbc	r21, r21
    1be4:	87 ff       	sbrs	r24, 7
    1be6:	46 d0       	rcall	.+140    	; 0x1c74 <__fp_norm2>
    1be8:	00 24       	eor	r0, r0
    1bea:	a0 e6       	ldi	r26, 0x60	; 96
    1bec:	40 ea       	ldi	r20, 0xA0	; 160
    1bee:	90 01       	movw	r18, r0
    1bf0:	80 58       	subi	r24, 0x80	; 128
    1bf2:	56 95       	lsr	r21
    1bf4:	97 95       	ror	r25
    1bf6:	28 f4       	brcc	.+10     	; 0x1c02 <sqrt+0x2c>
    1bf8:	80 5c       	subi	r24, 0xC0	; 192
    1bfa:	66 0f       	add	r22, r22
    1bfc:	77 1f       	adc	r23, r23
    1bfe:	88 1f       	adc	r24, r24
    1c00:	20 f0       	brcs	.+8      	; 0x1c0a <sqrt+0x34>
    1c02:	26 17       	cp	r18, r22
    1c04:	37 07       	cpc	r19, r23
    1c06:	48 07       	cpc	r20, r24
    1c08:	30 f4       	brcc	.+12     	; 0x1c16 <sqrt+0x40>
    1c0a:	62 1b       	sub	r22, r18
    1c0c:	73 0b       	sbc	r23, r19
    1c0e:	84 0b       	sbc	r24, r20
    1c10:	20 29       	or	r18, r0
    1c12:	31 29       	or	r19, r1
    1c14:	4a 2b       	or	r20, r26
    1c16:	a6 95       	lsr	r26
    1c18:	17 94       	ror	r1
    1c1a:	07 94       	ror	r0
    1c1c:	20 25       	eor	r18, r0
    1c1e:	31 25       	eor	r19, r1
    1c20:	4a 27       	eor	r20, r26
    1c22:	58 f7       	brcc	.-42     	; 0x1bfa <sqrt+0x24>
    1c24:	66 0f       	add	r22, r22
    1c26:	77 1f       	adc	r23, r23
    1c28:	88 1f       	adc	r24, r24
    1c2a:	20 f0       	brcs	.+8      	; 0x1c34 <sqrt+0x5e>
    1c2c:	26 17       	cp	r18, r22
    1c2e:	37 07       	cpc	r19, r23
    1c30:	48 07       	cpc	r20, r24
    1c32:	30 f4       	brcc	.+12     	; 0x1c40 <sqrt+0x6a>
    1c34:	62 0b       	sbc	r22, r18
    1c36:	73 0b       	sbc	r23, r19
    1c38:	84 0b       	sbc	r24, r20
    1c3a:	20 0d       	add	r18, r0
    1c3c:	31 1d       	adc	r19, r1
    1c3e:	41 1d       	adc	r20, r1
    1c40:	a0 95       	com	r26
    1c42:	81 f7       	brne	.-32     	; 0x1c24 <sqrt+0x4e>
    1c44:	b9 01       	movw	r22, r18
    1c46:	84 2f       	mov	r24, r20
    1c48:	91 58       	subi	r25, 0x81	; 129
    1c4a:	88 0f       	add	r24, r24
    1c4c:	96 95       	lsr	r25
    1c4e:	87 95       	ror	r24
    1c50:	08 95       	ret

00001c52 <square>:
    1c52:	9b 01       	movw	r18, r22
    1c54:	ac 01       	movw	r20, r24
    1c56:	58 cf       	rjmp	.-336    	; 0x1b08 <__mulsf3>

00001c58 <__fp_mpack>:
    1c58:	9f 3f       	cpi	r25, 0xFF	; 255
    1c5a:	31 f0       	breq	.+12     	; 0x1c68 <__fp_mpack_finite+0xc>

00001c5c <__fp_mpack_finite>:
    1c5c:	91 50       	subi	r25, 0x01	; 1
    1c5e:	20 f4       	brcc	.+8      	; 0x1c68 <__fp_mpack_finite+0xc>
    1c60:	87 95       	ror	r24
    1c62:	77 95       	ror	r23
    1c64:	67 95       	ror	r22
    1c66:	b7 95       	ror	r27
    1c68:	88 0f       	add	r24, r24
    1c6a:	91 1d       	adc	r25, r1
    1c6c:	96 95       	lsr	r25
    1c6e:	87 95       	ror	r24
    1c70:	97 f9       	bld	r25, 7
    1c72:	08 95       	ret

00001c74 <__fp_norm2>:
    1c74:	91 50       	subi	r25, 0x01	; 1
    1c76:	50 40       	sbci	r21, 0x00	; 0
    1c78:	66 0f       	add	r22, r22
    1c7a:	77 1f       	adc	r23, r23
    1c7c:	88 1f       	adc	r24, r24
    1c7e:	d2 f7       	brpl	.-12     	; 0x1c74 <__fp_norm2>
    1c80:	08 95       	ret

00001c82 <vfprintf>:
    1c82:	2f 92       	push	r2
    1c84:	3f 92       	push	r3
    1c86:	4f 92       	push	r4
    1c88:	5f 92       	push	r5
    1c8a:	6f 92       	push	r6
    1c8c:	7f 92       	push	r7
    1c8e:	8f 92       	push	r8
    1c90:	9f 92       	push	r9
    1c92:	af 92       	push	r10
    1c94:	bf 92       	push	r11
    1c96:	cf 92       	push	r12
    1c98:	df 92       	push	r13
    1c9a:	ef 92       	push	r14
    1c9c:	ff 92       	push	r15
    1c9e:	0f 93       	push	r16
    1ca0:	1f 93       	push	r17
    1ca2:	cf 93       	push	r28
    1ca4:	df 93       	push	r29
    1ca6:	cd b7       	in	r28, 0x3d	; 61
    1ca8:	de b7       	in	r29, 0x3e	; 62
    1caa:	60 97       	sbiw	r28, 0x10	; 16
    1cac:	0f b6       	in	r0, 0x3f	; 63
    1cae:	f8 94       	cli
    1cb0:	de bf       	out	0x3e, r29	; 62
    1cb2:	0f be       	out	0x3f, r0	; 63
    1cb4:	cd bf       	out	0x3d, r28	; 61
    1cb6:	7c 01       	movw	r14, r24
    1cb8:	1b 01       	movw	r2, r22
    1cba:	6a 01       	movw	r12, r20
    1cbc:	fc 01       	movw	r30, r24
    1cbe:	17 82       	std	Z+7, r1	; 0x07
    1cc0:	16 82       	std	Z+6, r1	; 0x06
    1cc2:	83 81       	ldd	r24, Z+3	; 0x03
    1cc4:	81 ff       	sbrs	r24, 1
    1cc6:	2a c3       	rjmp	.+1620   	; 0x231c <__stack+0x11d>
    1cc8:	9e 01       	movw	r18, r28
    1cca:	2f 5f       	subi	r18, 0xFF	; 255
    1ccc:	3f 4f       	sbci	r19, 0xFF	; 255
    1cce:	39 01       	movw	r6, r18
    1cd0:	f7 01       	movw	r30, r14
    1cd2:	93 81       	ldd	r25, Z+3	; 0x03
    1cd4:	f1 01       	movw	r30, r2
    1cd6:	93 fd       	sbrc	r25, 3
    1cd8:	85 91       	lpm	r24, Z+
    1cda:	93 ff       	sbrs	r25, 3
    1cdc:	81 91       	ld	r24, Z+
    1cde:	1f 01       	movw	r2, r30
    1ce0:	88 23       	and	r24, r24
    1ce2:	09 f4       	brne	.+2      	; 0x1ce6 <vfprintf+0x64>
    1ce4:	17 c3       	rjmp	.+1582   	; 0x2314 <__stack+0x115>
    1ce6:	85 32       	cpi	r24, 0x25	; 37
    1ce8:	39 f4       	brne	.+14     	; 0x1cf8 <vfprintf+0x76>
    1cea:	93 fd       	sbrc	r25, 3
    1cec:	85 91       	lpm	r24, Z+
    1cee:	93 ff       	sbrs	r25, 3
    1cf0:	81 91       	ld	r24, Z+
    1cf2:	1f 01       	movw	r2, r30
    1cf4:	85 32       	cpi	r24, 0x25	; 37
    1cf6:	31 f4       	brne	.+12     	; 0x1d04 <vfprintf+0x82>
    1cf8:	b7 01       	movw	r22, r14
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	aa d4       	rcall	.+2388   	; 0x2652 <fputc>
    1cfe:	56 01       	movw	r10, r12
    1d00:	65 01       	movw	r12, r10
    1d02:	e6 cf       	rjmp	.-52     	; 0x1cd0 <vfprintf+0x4e>
    1d04:	10 e0       	ldi	r17, 0x00	; 0
    1d06:	51 2c       	mov	r5, r1
    1d08:	91 2c       	mov	r9, r1
    1d0a:	ff e1       	ldi	r31, 0x1F	; 31
    1d0c:	f9 15       	cp	r31, r9
    1d0e:	d8 f0       	brcs	.+54     	; 0x1d46 <vfprintf+0xc4>
    1d10:	8b 32       	cpi	r24, 0x2B	; 43
    1d12:	79 f0       	breq	.+30     	; 0x1d32 <vfprintf+0xb0>
    1d14:	38 f4       	brcc	.+14     	; 0x1d24 <vfprintf+0xa2>
    1d16:	80 32       	cpi	r24, 0x20	; 32
    1d18:	79 f0       	breq	.+30     	; 0x1d38 <vfprintf+0xb6>
    1d1a:	83 32       	cpi	r24, 0x23	; 35
    1d1c:	a1 f4       	brne	.+40     	; 0x1d46 <vfprintf+0xc4>
    1d1e:	f9 2d       	mov	r31, r9
    1d20:	f0 61       	ori	r31, 0x10	; 16
    1d22:	2e c0       	rjmp	.+92     	; 0x1d80 <vfprintf+0xfe>
    1d24:	8d 32       	cpi	r24, 0x2D	; 45
    1d26:	61 f0       	breq	.+24     	; 0x1d40 <vfprintf+0xbe>
    1d28:	80 33       	cpi	r24, 0x30	; 48
    1d2a:	69 f4       	brne	.+26     	; 0x1d46 <vfprintf+0xc4>
    1d2c:	29 2d       	mov	r18, r9
    1d2e:	21 60       	ori	r18, 0x01	; 1
    1d30:	2d c0       	rjmp	.+90     	; 0x1d8c <vfprintf+0x10a>
    1d32:	39 2d       	mov	r19, r9
    1d34:	32 60       	ori	r19, 0x02	; 2
    1d36:	93 2e       	mov	r9, r19
    1d38:	89 2d       	mov	r24, r9
    1d3a:	84 60       	ori	r24, 0x04	; 4
    1d3c:	98 2e       	mov	r9, r24
    1d3e:	2a c0       	rjmp	.+84     	; 0x1d94 <vfprintf+0x112>
    1d40:	e9 2d       	mov	r30, r9
    1d42:	e8 60       	ori	r30, 0x08	; 8
    1d44:	15 c0       	rjmp	.+42     	; 0x1d70 <vfprintf+0xee>
    1d46:	97 fc       	sbrc	r9, 7
    1d48:	2d c0       	rjmp	.+90     	; 0x1da4 <vfprintf+0x122>
    1d4a:	20 ed       	ldi	r18, 0xD0	; 208
    1d4c:	28 0f       	add	r18, r24
    1d4e:	2a 30       	cpi	r18, 0x0A	; 10
    1d50:	88 f4       	brcc	.+34     	; 0x1d74 <vfprintf+0xf2>
    1d52:	96 fe       	sbrs	r9, 6
    1d54:	06 c0       	rjmp	.+12     	; 0x1d62 <vfprintf+0xe0>
    1d56:	3a e0       	ldi	r19, 0x0A	; 10
    1d58:	13 9f       	mul	r17, r19
    1d5a:	20 0d       	add	r18, r0
    1d5c:	11 24       	eor	r1, r1
    1d5e:	12 2f       	mov	r17, r18
    1d60:	19 c0       	rjmp	.+50     	; 0x1d94 <vfprintf+0x112>
    1d62:	8a e0       	ldi	r24, 0x0A	; 10
    1d64:	58 9e       	mul	r5, r24
    1d66:	20 0d       	add	r18, r0
    1d68:	11 24       	eor	r1, r1
    1d6a:	52 2e       	mov	r5, r18
    1d6c:	e9 2d       	mov	r30, r9
    1d6e:	e0 62       	ori	r30, 0x20	; 32
    1d70:	9e 2e       	mov	r9, r30
    1d72:	10 c0       	rjmp	.+32     	; 0x1d94 <vfprintf+0x112>
    1d74:	8e 32       	cpi	r24, 0x2E	; 46
    1d76:	31 f4       	brne	.+12     	; 0x1d84 <vfprintf+0x102>
    1d78:	96 fc       	sbrc	r9, 6
    1d7a:	cc c2       	rjmp	.+1432   	; 0x2314 <__stack+0x115>
    1d7c:	f9 2d       	mov	r31, r9
    1d7e:	f0 64       	ori	r31, 0x40	; 64
    1d80:	9f 2e       	mov	r9, r31
    1d82:	08 c0       	rjmp	.+16     	; 0x1d94 <vfprintf+0x112>
    1d84:	8c 36       	cpi	r24, 0x6C	; 108
    1d86:	21 f4       	brne	.+8      	; 0x1d90 <vfprintf+0x10e>
    1d88:	29 2d       	mov	r18, r9
    1d8a:	20 68       	ori	r18, 0x80	; 128
    1d8c:	92 2e       	mov	r9, r18
    1d8e:	02 c0       	rjmp	.+4      	; 0x1d94 <vfprintf+0x112>
    1d90:	88 36       	cpi	r24, 0x68	; 104
    1d92:	41 f4       	brne	.+16     	; 0x1da4 <vfprintf+0x122>
    1d94:	f1 01       	movw	r30, r2
    1d96:	93 fd       	sbrc	r25, 3
    1d98:	85 91       	lpm	r24, Z+
    1d9a:	93 ff       	sbrs	r25, 3
    1d9c:	81 91       	ld	r24, Z+
    1d9e:	1f 01       	movw	r2, r30
    1da0:	81 11       	cpse	r24, r1
    1da2:	b3 cf       	rjmp	.-154    	; 0x1d0a <vfprintf+0x88>
    1da4:	9b eb       	ldi	r25, 0xBB	; 187
    1da6:	98 0f       	add	r25, r24
    1da8:	93 30       	cpi	r25, 0x03	; 3
    1daa:	20 f4       	brcc	.+8      	; 0x1db4 <vfprintf+0x132>
    1dac:	99 2d       	mov	r25, r9
    1dae:	90 61       	ori	r25, 0x10	; 16
    1db0:	80 5e       	subi	r24, 0xE0	; 224
    1db2:	07 c0       	rjmp	.+14     	; 0x1dc2 <vfprintf+0x140>
    1db4:	9b e9       	ldi	r25, 0x9B	; 155
    1db6:	98 0f       	add	r25, r24
    1db8:	93 30       	cpi	r25, 0x03	; 3
    1dba:	08 f0       	brcs	.+2      	; 0x1dbe <vfprintf+0x13c>
    1dbc:	59 c1       	rjmp	.+690    	; 0x2070 <vfprintf+0x3ee>
    1dbe:	99 2d       	mov	r25, r9
    1dc0:	9f 7e       	andi	r25, 0xEF	; 239
    1dc2:	96 ff       	sbrs	r25, 6
    1dc4:	16 e0       	ldi	r17, 0x06	; 6
    1dc6:	9f 73       	andi	r25, 0x3F	; 63
    1dc8:	99 2e       	mov	r9, r25
    1dca:	85 36       	cpi	r24, 0x65	; 101
    1dcc:	19 f4       	brne	.+6      	; 0x1dd4 <vfprintf+0x152>
    1dce:	90 64       	ori	r25, 0x40	; 64
    1dd0:	99 2e       	mov	r9, r25
    1dd2:	08 c0       	rjmp	.+16     	; 0x1de4 <vfprintf+0x162>
    1dd4:	86 36       	cpi	r24, 0x66	; 102
    1dd6:	21 f4       	brne	.+8      	; 0x1de0 <vfprintf+0x15e>
    1dd8:	39 2f       	mov	r19, r25
    1dda:	30 68       	ori	r19, 0x80	; 128
    1ddc:	93 2e       	mov	r9, r19
    1dde:	02 c0       	rjmp	.+4      	; 0x1de4 <vfprintf+0x162>
    1de0:	11 11       	cpse	r17, r1
    1de2:	11 50       	subi	r17, 0x01	; 1
    1de4:	97 fe       	sbrs	r9, 7
    1de6:	07 c0       	rjmp	.+14     	; 0x1df6 <vfprintf+0x174>
    1de8:	1c 33       	cpi	r17, 0x3C	; 60
    1dea:	50 f4       	brcc	.+20     	; 0x1e00 <vfprintf+0x17e>
    1dec:	44 24       	eor	r4, r4
    1dee:	43 94       	inc	r4
    1df0:	41 0e       	add	r4, r17
    1df2:	27 e0       	ldi	r18, 0x07	; 7
    1df4:	0b c0       	rjmp	.+22     	; 0x1e0c <vfprintf+0x18a>
    1df6:	18 30       	cpi	r17, 0x08	; 8
    1df8:	38 f0       	brcs	.+14     	; 0x1e08 <vfprintf+0x186>
    1dfa:	27 e0       	ldi	r18, 0x07	; 7
    1dfc:	17 e0       	ldi	r17, 0x07	; 7
    1dfe:	05 c0       	rjmp	.+10     	; 0x1e0a <vfprintf+0x188>
    1e00:	27 e0       	ldi	r18, 0x07	; 7
    1e02:	9c e3       	ldi	r25, 0x3C	; 60
    1e04:	49 2e       	mov	r4, r25
    1e06:	02 c0       	rjmp	.+4      	; 0x1e0c <vfprintf+0x18a>
    1e08:	21 2f       	mov	r18, r17
    1e0a:	41 2c       	mov	r4, r1
    1e0c:	56 01       	movw	r10, r12
    1e0e:	84 e0       	ldi	r24, 0x04	; 4
    1e10:	a8 0e       	add	r10, r24
    1e12:	b1 1c       	adc	r11, r1
    1e14:	f6 01       	movw	r30, r12
    1e16:	60 81       	ld	r22, Z
    1e18:	71 81       	ldd	r23, Z+1	; 0x01
    1e1a:	82 81       	ldd	r24, Z+2	; 0x02
    1e1c:	93 81       	ldd	r25, Z+3	; 0x03
    1e1e:	04 2d       	mov	r16, r4
    1e20:	a3 01       	movw	r20, r6
    1e22:	df d2       	rcall	.+1470   	; 0x23e2 <__ftoa_engine>
    1e24:	6c 01       	movw	r12, r24
    1e26:	f9 81       	ldd	r31, Y+1	; 0x01
    1e28:	fc 87       	std	Y+12, r31	; 0x0c
    1e2a:	f0 ff       	sbrs	r31, 0
    1e2c:	02 c0       	rjmp	.+4      	; 0x1e32 <vfprintf+0x1b0>
    1e2e:	f3 ff       	sbrs	r31, 3
    1e30:	06 c0       	rjmp	.+12     	; 0x1e3e <vfprintf+0x1bc>
    1e32:	91 fc       	sbrc	r9, 1
    1e34:	06 c0       	rjmp	.+12     	; 0x1e42 <vfprintf+0x1c0>
    1e36:	92 fe       	sbrs	r9, 2
    1e38:	06 c0       	rjmp	.+12     	; 0x1e46 <vfprintf+0x1c4>
    1e3a:	00 e2       	ldi	r16, 0x20	; 32
    1e3c:	05 c0       	rjmp	.+10     	; 0x1e48 <vfprintf+0x1c6>
    1e3e:	0d e2       	ldi	r16, 0x2D	; 45
    1e40:	03 c0       	rjmp	.+6      	; 0x1e48 <vfprintf+0x1c6>
    1e42:	0b e2       	ldi	r16, 0x2B	; 43
    1e44:	01 c0       	rjmp	.+2      	; 0x1e48 <vfprintf+0x1c6>
    1e46:	00 e0       	ldi	r16, 0x00	; 0
    1e48:	8c 85       	ldd	r24, Y+12	; 0x0c
    1e4a:	8c 70       	andi	r24, 0x0C	; 12
    1e4c:	19 f0       	breq	.+6      	; 0x1e54 <vfprintf+0x1d2>
    1e4e:	01 11       	cpse	r16, r1
    1e50:	43 c2       	rjmp	.+1158   	; 0x22d8 <__stack+0xd9>
    1e52:	80 c2       	rjmp	.+1280   	; 0x2354 <__stack+0x155>
    1e54:	97 fe       	sbrs	r9, 7
    1e56:	10 c0       	rjmp	.+32     	; 0x1e78 <vfprintf+0x1f6>
    1e58:	4c 0c       	add	r4, r12
    1e5a:	fc 85       	ldd	r31, Y+12	; 0x0c
    1e5c:	f4 ff       	sbrs	r31, 4
    1e5e:	04 c0       	rjmp	.+8      	; 0x1e68 <vfprintf+0x1e6>
    1e60:	8a 81       	ldd	r24, Y+2	; 0x02
    1e62:	81 33       	cpi	r24, 0x31	; 49
    1e64:	09 f4       	brne	.+2      	; 0x1e68 <vfprintf+0x1e6>
    1e66:	4a 94       	dec	r4
    1e68:	14 14       	cp	r1, r4
    1e6a:	74 f5       	brge	.+92     	; 0x1ec8 <vfprintf+0x246>
    1e6c:	28 e0       	ldi	r18, 0x08	; 8
    1e6e:	24 15       	cp	r18, r4
    1e70:	78 f5       	brcc	.+94     	; 0x1ed0 <vfprintf+0x24e>
    1e72:	88 e0       	ldi	r24, 0x08	; 8
    1e74:	48 2e       	mov	r4, r24
    1e76:	2c c0       	rjmp	.+88     	; 0x1ed0 <vfprintf+0x24e>
    1e78:	96 fc       	sbrc	r9, 6
    1e7a:	2a c0       	rjmp	.+84     	; 0x1ed0 <vfprintf+0x24e>
    1e7c:	81 2f       	mov	r24, r17
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	8c 15       	cp	r24, r12
    1e82:	9d 05       	cpc	r25, r13
    1e84:	9c f0       	brlt	.+38     	; 0x1eac <vfprintf+0x22a>
    1e86:	3c ef       	ldi	r19, 0xFC	; 252
    1e88:	c3 16       	cp	r12, r19
    1e8a:	3f ef       	ldi	r19, 0xFF	; 255
    1e8c:	d3 06       	cpc	r13, r19
    1e8e:	74 f0       	brlt	.+28     	; 0x1eac <vfprintf+0x22a>
    1e90:	89 2d       	mov	r24, r9
    1e92:	80 68       	ori	r24, 0x80	; 128
    1e94:	98 2e       	mov	r9, r24
    1e96:	0a c0       	rjmp	.+20     	; 0x1eac <vfprintf+0x22a>
    1e98:	e2 e0       	ldi	r30, 0x02	; 2
    1e9a:	f0 e0       	ldi	r31, 0x00	; 0
    1e9c:	ec 0f       	add	r30, r28
    1e9e:	fd 1f       	adc	r31, r29
    1ea0:	e1 0f       	add	r30, r17
    1ea2:	f1 1d       	adc	r31, r1
    1ea4:	80 81       	ld	r24, Z
    1ea6:	80 33       	cpi	r24, 0x30	; 48
    1ea8:	19 f4       	brne	.+6      	; 0x1eb0 <vfprintf+0x22e>
    1eaa:	11 50       	subi	r17, 0x01	; 1
    1eac:	11 11       	cpse	r17, r1
    1eae:	f4 cf       	rjmp	.-24     	; 0x1e98 <vfprintf+0x216>
    1eb0:	97 fe       	sbrs	r9, 7
    1eb2:	0e c0       	rjmp	.+28     	; 0x1ed0 <vfprintf+0x24e>
    1eb4:	44 24       	eor	r4, r4
    1eb6:	43 94       	inc	r4
    1eb8:	41 0e       	add	r4, r17
    1eba:	81 2f       	mov	r24, r17
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	c8 16       	cp	r12, r24
    1ec0:	d9 06       	cpc	r13, r25
    1ec2:	2c f4       	brge	.+10     	; 0x1ece <vfprintf+0x24c>
    1ec4:	1c 19       	sub	r17, r12
    1ec6:	04 c0       	rjmp	.+8      	; 0x1ed0 <vfprintf+0x24e>
    1ec8:	44 24       	eor	r4, r4
    1eca:	43 94       	inc	r4
    1ecc:	01 c0       	rjmp	.+2      	; 0x1ed0 <vfprintf+0x24e>
    1ece:	10 e0       	ldi	r17, 0x00	; 0
    1ed0:	97 fe       	sbrs	r9, 7
    1ed2:	06 c0       	rjmp	.+12     	; 0x1ee0 <vfprintf+0x25e>
    1ed4:	1c 14       	cp	r1, r12
    1ed6:	1d 04       	cpc	r1, r13
    1ed8:	34 f4       	brge	.+12     	; 0x1ee6 <vfprintf+0x264>
    1eda:	c6 01       	movw	r24, r12
    1edc:	01 96       	adiw	r24, 0x01	; 1
    1ede:	05 c0       	rjmp	.+10     	; 0x1eea <vfprintf+0x268>
    1ee0:	85 e0       	ldi	r24, 0x05	; 5
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	02 c0       	rjmp	.+4      	; 0x1eea <vfprintf+0x268>
    1ee6:	81 e0       	ldi	r24, 0x01	; 1
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	01 11       	cpse	r16, r1
    1eec:	01 96       	adiw	r24, 0x01	; 1
    1eee:	11 23       	and	r17, r17
    1ef0:	31 f0       	breq	.+12     	; 0x1efe <vfprintf+0x27c>
    1ef2:	21 2f       	mov	r18, r17
    1ef4:	30 e0       	ldi	r19, 0x00	; 0
    1ef6:	2f 5f       	subi	r18, 0xFF	; 255
    1ef8:	3f 4f       	sbci	r19, 0xFF	; 255
    1efa:	82 0f       	add	r24, r18
    1efc:	93 1f       	adc	r25, r19
    1efe:	25 2d       	mov	r18, r5
    1f00:	30 e0       	ldi	r19, 0x00	; 0
    1f02:	82 17       	cp	r24, r18
    1f04:	93 07       	cpc	r25, r19
    1f06:	14 f4       	brge	.+4      	; 0x1f0c <vfprintf+0x28a>
    1f08:	58 1a       	sub	r5, r24
    1f0a:	01 c0       	rjmp	.+2      	; 0x1f0e <vfprintf+0x28c>
    1f0c:	51 2c       	mov	r5, r1
    1f0e:	89 2d       	mov	r24, r9
    1f10:	89 70       	andi	r24, 0x09	; 9
    1f12:	41 f4       	brne	.+16     	; 0x1f24 <vfprintf+0x2a2>
    1f14:	55 20       	and	r5, r5
    1f16:	31 f0       	breq	.+12     	; 0x1f24 <vfprintf+0x2a2>
    1f18:	b7 01       	movw	r22, r14
    1f1a:	80 e2       	ldi	r24, 0x20	; 32
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	99 d3       	rcall	.+1842   	; 0x2652 <fputc>
    1f20:	5a 94       	dec	r5
    1f22:	f8 cf       	rjmp	.-16     	; 0x1f14 <vfprintf+0x292>
    1f24:	00 23       	and	r16, r16
    1f26:	21 f0       	breq	.+8      	; 0x1f30 <vfprintf+0x2ae>
    1f28:	b7 01       	movw	r22, r14
    1f2a:	80 2f       	mov	r24, r16
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	91 d3       	rcall	.+1826   	; 0x2652 <fputc>
    1f30:	93 fc       	sbrc	r9, 3
    1f32:	08 c0       	rjmp	.+16     	; 0x1f44 <vfprintf+0x2c2>
    1f34:	55 20       	and	r5, r5
    1f36:	31 f0       	breq	.+12     	; 0x1f44 <vfprintf+0x2c2>
    1f38:	b7 01       	movw	r22, r14
    1f3a:	80 e3       	ldi	r24, 0x30	; 48
    1f3c:	90 e0       	ldi	r25, 0x00	; 0
    1f3e:	89 d3       	rcall	.+1810   	; 0x2652 <fputc>
    1f40:	5a 94       	dec	r5
    1f42:	f8 cf       	rjmp	.-16     	; 0x1f34 <vfprintf+0x2b2>
    1f44:	97 fe       	sbrs	r9, 7
    1f46:	4a c0       	rjmp	.+148    	; 0x1fdc <vfprintf+0x35a>
    1f48:	46 01       	movw	r8, r12
    1f4a:	d7 fe       	sbrs	r13, 7
    1f4c:	02 c0       	rjmp	.+4      	; 0x1f52 <vfprintf+0x2d0>
    1f4e:	81 2c       	mov	r8, r1
    1f50:	91 2c       	mov	r9, r1
    1f52:	c6 01       	movw	r24, r12
    1f54:	88 19       	sub	r24, r8
    1f56:	99 09       	sbc	r25, r9
    1f58:	f3 01       	movw	r30, r6
    1f5a:	e8 0f       	add	r30, r24
    1f5c:	f9 1f       	adc	r31, r25
    1f5e:	fe 87       	std	Y+14, r31	; 0x0e
    1f60:	ed 87       	std	Y+13, r30	; 0x0d
    1f62:	96 01       	movw	r18, r12
    1f64:	24 19       	sub	r18, r4
    1f66:	31 09       	sbc	r19, r1
    1f68:	38 8b       	std	Y+16, r19	; 0x10
    1f6a:	2f 87       	std	Y+15, r18	; 0x0f
    1f6c:	01 2f       	mov	r16, r17
    1f6e:	10 e0       	ldi	r17, 0x00	; 0
    1f70:	11 95       	neg	r17
    1f72:	01 95       	neg	r16
    1f74:	11 09       	sbc	r17, r1
    1f76:	3f ef       	ldi	r19, 0xFF	; 255
    1f78:	83 16       	cp	r8, r19
    1f7a:	93 06       	cpc	r9, r19
    1f7c:	21 f4       	brne	.+8      	; 0x1f86 <vfprintf+0x304>
    1f7e:	b7 01       	movw	r22, r14
    1f80:	8e e2       	ldi	r24, 0x2E	; 46
    1f82:	90 e0       	ldi	r25, 0x00	; 0
    1f84:	66 d3       	rcall	.+1740   	; 0x2652 <fputc>
    1f86:	c8 14       	cp	r12, r8
    1f88:	d9 04       	cpc	r13, r9
    1f8a:	4c f0       	brlt	.+18     	; 0x1f9e <vfprintf+0x31c>
    1f8c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f8e:	98 89       	ldd	r25, Y+16	; 0x10
    1f90:	88 15       	cp	r24, r8
    1f92:	99 05       	cpc	r25, r9
    1f94:	24 f4       	brge	.+8      	; 0x1f9e <vfprintf+0x31c>
    1f96:	ed 85       	ldd	r30, Y+13	; 0x0d
    1f98:	fe 85       	ldd	r31, Y+14	; 0x0e
    1f9a:	81 81       	ldd	r24, Z+1	; 0x01
    1f9c:	01 c0       	rjmp	.+2      	; 0x1fa0 <vfprintf+0x31e>
    1f9e:	80 e3       	ldi	r24, 0x30	; 48
    1fa0:	f1 e0       	ldi	r31, 0x01	; 1
    1fa2:	8f 1a       	sub	r8, r31
    1fa4:	91 08       	sbc	r9, r1
    1fa6:	2d 85       	ldd	r18, Y+13	; 0x0d
    1fa8:	3e 85       	ldd	r19, Y+14	; 0x0e
    1faa:	2f 5f       	subi	r18, 0xFF	; 255
    1fac:	3f 4f       	sbci	r19, 0xFF	; 255
    1fae:	3e 87       	std	Y+14, r19	; 0x0e
    1fb0:	2d 87       	std	Y+13, r18	; 0x0d
    1fb2:	80 16       	cp	r8, r16
    1fb4:	91 06       	cpc	r9, r17
    1fb6:	24 f0       	brlt	.+8      	; 0x1fc0 <vfprintf+0x33e>
    1fb8:	b7 01       	movw	r22, r14
    1fba:	90 e0       	ldi	r25, 0x00	; 0
    1fbc:	4a d3       	rcall	.+1684   	; 0x2652 <fputc>
    1fbe:	db cf       	rjmp	.-74     	; 0x1f76 <vfprintf+0x2f4>
    1fc0:	c8 14       	cp	r12, r8
    1fc2:	d9 04       	cpc	r13, r9
    1fc4:	41 f4       	brne	.+16     	; 0x1fd6 <vfprintf+0x354>
    1fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc8:	96 33       	cpi	r25, 0x36	; 54
    1fca:	20 f4       	brcc	.+8      	; 0x1fd4 <vfprintf+0x352>
    1fcc:	95 33       	cpi	r25, 0x35	; 53
    1fce:	19 f4       	brne	.+6      	; 0x1fd6 <vfprintf+0x354>
    1fd0:	3c 85       	ldd	r19, Y+12	; 0x0c
    1fd2:	34 ff       	sbrs	r19, 4
    1fd4:	81 e3       	ldi	r24, 0x31	; 49
    1fd6:	b7 01       	movw	r22, r14
    1fd8:	90 e0       	ldi	r25, 0x00	; 0
    1fda:	48 c0       	rjmp	.+144    	; 0x206c <vfprintf+0x3ea>
    1fdc:	8a 81       	ldd	r24, Y+2	; 0x02
    1fde:	81 33       	cpi	r24, 0x31	; 49
    1fe0:	19 f0       	breq	.+6      	; 0x1fe8 <vfprintf+0x366>
    1fe2:	9c 85       	ldd	r25, Y+12	; 0x0c
    1fe4:	9f 7e       	andi	r25, 0xEF	; 239
    1fe6:	9c 87       	std	Y+12, r25	; 0x0c
    1fe8:	b7 01       	movw	r22, r14
    1fea:	90 e0       	ldi	r25, 0x00	; 0
    1fec:	32 d3       	rcall	.+1636   	; 0x2652 <fputc>
    1fee:	11 11       	cpse	r17, r1
    1ff0:	05 c0       	rjmp	.+10     	; 0x1ffc <vfprintf+0x37a>
    1ff2:	94 fc       	sbrc	r9, 4
    1ff4:	16 c0       	rjmp	.+44     	; 0x2022 <vfprintf+0x3a0>
    1ff6:	85 e6       	ldi	r24, 0x65	; 101
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	15 c0       	rjmp	.+42     	; 0x2026 <vfprintf+0x3a4>
    1ffc:	b7 01       	movw	r22, r14
    1ffe:	8e e2       	ldi	r24, 0x2E	; 46
    2000:	90 e0       	ldi	r25, 0x00	; 0
    2002:	27 d3       	rcall	.+1614   	; 0x2652 <fputc>
    2004:	1e 5f       	subi	r17, 0xFE	; 254
    2006:	82 e0       	ldi	r24, 0x02	; 2
    2008:	01 e0       	ldi	r16, 0x01	; 1
    200a:	08 0f       	add	r16, r24
    200c:	f3 01       	movw	r30, r6
    200e:	e8 0f       	add	r30, r24
    2010:	f1 1d       	adc	r31, r1
    2012:	80 81       	ld	r24, Z
    2014:	b7 01       	movw	r22, r14
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	1c d3       	rcall	.+1592   	; 0x2652 <fputc>
    201a:	80 2f       	mov	r24, r16
    201c:	01 13       	cpse	r16, r17
    201e:	f4 cf       	rjmp	.-24     	; 0x2008 <vfprintf+0x386>
    2020:	e8 cf       	rjmp	.-48     	; 0x1ff2 <vfprintf+0x370>
    2022:	85 e4       	ldi	r24, 0x45	; 69
    2024:	90 e0       	ldi	r25, 0x00	; 0
    2026:	b7 01       	movw	r22, r14
    2028:	14 d3       	rcall	.+1576   	; 0x2652 <fputc>
    202a:	d7 fc       	sbrc	r13, 7
    202c:	06 c0       	rjmp	.+12     	; 0x203a <vfprintf+0x3b8>
    202e:	c1 14       	cp	r12, r1
    2030:	d1 04       	cpc	r13, r1
    2032:	41 f4       	brne	.+16     	; 0x2044 <vfprintf+0x3c2>
    2034:	ec 85       	ldd	r30, Y+12	; 0x0c
    2036:	e4 ff       	sbrs	r30, 4
    2038:	05 c0       	rjmp	.+10     	; 0x2044 <vfprintf+0x3c2>
    203a:	d1 94       	neg	r13
    203c:	c1 94       	neg	r12
    203e:	d1 08       	sbc	r13, r1
    2040:	8d e2       	ldi	r24, 0x2D	; 45
    2042:	01 c0       	rjmp	.+2      	; 0x2046 <vfprintf+0x3c4>
    2044:	8b e2       	ldi	r24, 0x2B	; 43
    2046:	b7 01       	movw	r22, r14
    2048:	90 e0       	ldi	r25, 0x00	; 0
    204a:	03 d3       	rcall	.+1542   	; 0x2652 <fputc>
    204c:	80 e3       	ldi	r24, 0x30	; 48
    204e:	2a e0       	ldi	r18, 0x0A	; 10
    2050:	c2 16       	cp	r12, r18
    2052:	d1 04       	cpc	r13, r1
    2054:	2c f0       	brlt	.+10     	; 0x2060 <vfprintf+0x3de>
    2056:	8f 5f       	subi	r24, 0xFF	; 255
    2058:	fa e0       	ldi	r31, 0x0A	; 10
    205a:	cf 1a       	sub	r12, r31
    205c:	d1 08       	sbc	r13, r1
    205e:	f7 cf       	rjmp	.-18     	; 0x204e <vfprintf+0x3cc>
    2060:	b7 01       	movw	r22, r14
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	f6 d2       	rcall	.+1516   	; 0x2652 <fputc>
    2066:	b7 01       	movw	r22, r14
    2068:	c6 01       	movw	r24, r12
    206a:	c0 96       	adiw	r24, 0x30	; 48
    206c:	f2 d2       	rcall	.+1508   	; 0x2652 <fputc>
    206e:	49 c1       	rjmp	.+658    	; 0x2302 <__stack+0x103>
    2070:	83 36       	cpi	r24, 0x63	; 99
    2072:	31 f0       	breq	.+12     	; 0x2080 <vfprintf+0x3fe>
    2074:	83 37       	cpi	r24, 0x73	; 115
    2076:	79 f0       	breq	.+30     	; 0x2096 <vfprintf+0x414>
    2078:	83 35       	cpi	r24, 0x53	; 83
    207a:	09 f0       	breq	.+2      	; 0x207e <vfprintf+0x3fc>
    207c:	52 c0       	rjmp	.+164    	; 0x2122 <vfprintf+0x4a0>
    207e:	1f c0       	rjmp	.+62     	; 0x20be <vfprintf+0x43c>
    2080:	56 01       	movw	r10, r12
    2082:	32 e0       	ldi	r19, 0x02	; 2
    2084:	a3 0e       	add	r10, r19
    2086:	b1 1c       	adc	r11, r1
    2088:	f6 01       	movw	r30, r12
    208a:	80 81       	ld	r24, Z
    208c:	89 83       	std	Y+1, r24	; 0x01
    208e:	01 e0       	ldi	r16, 0x01	; 1
    2090:	10 e0       	ldi	r17, 0x00	; 0
    2092:	63 01       	movw	r12, r6
    2094:	11 c0       	rjmp	.+34     	; 0x20b8 <vfprintf+0x436>
    2096:	56 01       	movw	r10, r12
    2098:	f2 e0       	ldi	r31, 0x02	; 2
    209a:	af 0e       	add	r10, r31
    209c:	b1 1c       	adc	r11, r1
    209e:	f6 01       	movw	r30, r12
    20a0:	c0 80       	ld	r12, Z
    20a2:	d1 80       	ldd	r13, Z+1	; 0x01
    20a4:	96 fe       	sbrs	r9, 6
    20a6:	03 c0       	rjmp	.+6      	; 0x20ae <vfprintf+0x42c>
    20a8:	61 2f       	mov	r22, r17
    20aa:	70 e0       	ldi	r23, 0x00	; 0
    20ac:	02 c0       	rjmp	.+4      	; 0x20b2 <vfprintf+0x430>
    20ae:	6f ef       	ldi	r22, 0xFF	; 255
    20b0:	7f ef       	ldi	r23, 0xFF	; 255
    20b2:	c6 01       	movw	r24, r12
    20b4:	79 d2       	rcall	.+1266   	; 0x25a8 <strnlen>
    20b6:	8c 01       	movw	r16, r24
    20b8:	f9 2d       	mov	r31, r9
    20ba:	ff 77       	andi	r31, 0x7F	; 127
    20bc:	13 c0       	rjmp	.+38     	; 0x20e4 <vfprintf+0x462>
    20be:	56 01       	movw	r10, r12
    20c0:	22 e0       	ldi	r18, 0x02	; 2
    20c2:	a2 0e       	add	r10, r18
    20c4:	b1 1c       	adc	r11, r1
    20c6:	f6 01       	movw	r30, r12
    20c8:	c0 80       	ld	r12, Z
    20ca:	d1 80       	ldd	r13, Z+1	; 0x01
    20cc:	96 fe       	sbrs	r9, 6
    20ce:	03 c0       	rjmp	.+6      	; 0x20d6 <vfprintf+0x454>
    20d0:	61 2f       	mov	r22, r17
    20d2:	70 e0       	ldi	r23, 0x00	; 0
    20d4:	02 c0       	rjmp	.+4      	; 0x20da <vfprintf+0x458>
    20d6:	6f ef       	ldi	r22, 0xFF	; 255
    20d8:	7f ef       	ldi	r23, 0xFF	; 255
    20da:	c6 01       	movw	r24, r12
    20dc:	5a d2       	rcall	.+1204   	; 0x2592 <strnlen_P>
    20de:	8c 01       	movw	r16, r24
    20e0:	f9 2d       	mov	r31, r9
    20e2:	f0 68       	ori	r31, 0x80	; 128
    20e4:	9f 2e       	mov	r9, r31
    20e6:	f3 fd       	sbrc	r31, 3
    20e8:	18 c0       	rjmp	.+48     	; 0x211a <vfprintf+0x498>
    20ea:	85 2d       	mov	r24, r5
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	08 17       	cp	r16, r24
    20f0:	19 07       	cpc	r17, r25
    20f2:	98 f4       	brcc	.+38     	; 0x211a <vfprintf+0x498>
    20f4:	b7 01       	movw	r22, r14
    20f6:	80 e2       	ldi	r24, 0x20	; 32
    20f8:	90 e0       	ldi	r25, 0x00	; 0
    20fa:	ab d2       	rcall	.+1366   	; 0x2652 <fputc>
    20fc:	5a 94       	dec	r5
    20fe:	f5 cf       	rjmp	.-22     	; 0x20ea <vfprintf+0x468>
    2100:	f6 01       	movw	r30, r12
    2102:	97 fc       	sbrc	r9, 7
    2104:	85 91       	lpm	r24, Z+
    2106:	97 fe       	sbrs	r9, 7
    2108:	81 91       	ld	r24, Z+
    210a:	6f 01       	movw	r12, r30
    210c:	b7 01       	movw	r22, r14
    210e:	90 e0       	ldi	r25, 0x00	; 0
    2110:	a0 d2       	rcall	.+1344   	; 0x2652 <fputc>
    2112:	51 10       	cpse	r5, r1
    2114:	5a 94       	dec	r5
    2116:	01 50       	subi	r16, 0x01	; 1
    2118:	11 09       	sbc	r17, r1
    211a:	01 15       	cp	r16, r1
    211c:	11 05       	cpc	r17, r1
    211e:	81 f7       	brne	.-32     	; 0x2100 <vfprintf+0x47e>
    2120:	f0 c0       	rjmp	.+480    	; 0x2302 <__stack+0x103>
    2122:	84 36       	cpi	r24, 0x64	; 100
    2124:	11 f0       	breq	.+4      	; 0x212a <vfprintf+0x4a8>
    2126:	89 36       	cpi	r24, 0x69	; 105
    2128:	59 f5       	brne	.+86     	; 0x2180 <vfprintf+0x4fe>
    212a:	56 01       	movw	r10, r12
    212c:	97 fe       	sbrs	r9, 7
    212e:	09 c0       	rjmp	.+18     	; 0x2142 <vfprintf+0x4c0>
    2130:	24 e0       	ldi	r18, 0x04	; 4
    2132:	a2 0e       	add	r10, r18
    2134:	b1 1c       	adc	r11, r1
    2136:	f6 01       	movw	r30, r12
    2138:	60 81       	ld	r22, Z
    213a:	71 81       	ldd	r23, Z+1	; 0x01
    213c:	82 81       	ldd	r24, Z+2	; 0x02
    213e:	93 81       	ldd	r25, Z+3	; 0x03
    2140:	0a c0       	rjmp	.+20     	; 0x2156 <vfprintf+0x4d4>
    2142:	f2 e0       	ldi	r31, 0x02	; 2
    2144:	af 0e       	add	r10, r31
    2146:	b1 1c       	adc	r11, r1
    2148:	f6 01       	movw	r30, r12
    214a:	60 81       	ld	r22, Z
    214c:	71 81       	ldd	r23, Z+1	; 0x01
    214e:	07 2e       	mov	r0, r23
    2150:	00 0c       	add	r0, r0
    2152:	88 0b       	sbc	r24, r24
    2154:	99 0b       	sbc	r25, r25
    2156:	f9 2d       	mov	r31, r9
    2158:	ff 76       	andi	r31, 0x6F	; 111
    215a:	9f 2e       	mov	r9, r31
    215c:	97 ff       	sbrs	r25, 7
    215e:	09 c0       	rjmp	.+18     	; 0x2172 <vfprintf+0x4f0>
    2160:	90 95       	com	r25
    2162:	80 95       	com	r24
    2164:	70 95       	com	r23
    2166:	61 95       	neg	r22
    2168:	7f 4f       	sbci	r23, 0xFF	; 255
    216a:	8f 4f       	sbci	r24, 0xFF	; 255
    216c:	9f 4f       	sbci	r25, 0xFF	; 255
    216e:	f0 68       	ori	r31, 0x80	; 128
    2170:	9f 2e       	mov	r9, r31
    2172:	2a e0       	ldi	r18, 0x0A	; 10
    2174:	30 e0       	ldi	r19, 0x00	; 0
    2176:	a3 01       	movw	r20, r6
    2178:	ee d2       	rcall	.+1500   	; 0x2756 <__ultoa_invert>
    217a:	c8 2e       	mov	r12, r24
    217c:	c6 18       	sub	r12, r6
    217e:	3e c0       	rjmp	.+124    	; 0x21fc <vfprintf+0x57a>
    2180:	09 2d       	mov	r16, r9
    2182:	85 37       	cpi	r24, 0x75	; 117
    2184:	21 f4       	brne	.+8      	; 0x218e <vfprintf+0x50c>
    2186:	0f 7e       	andi	r16, 0xEF	; 239
    2188:	2a e0       	ldi	r18, 0x0A	; 10
    218a:	30 e0       	ldi	r19, 0x00	; 0
    218c:	1d c0       	rjmp	.+58     	; 0x21c8 <vfprintf+0x546>
    218e:	09 7f       	andi	r16, 0xF9	; 249
    2190:	8f 36       	cpi	r24, 0x6F	; 111
    2192:	91 f0       	breq	.+36     	; 0x21b8 <vfprintf+0x536>
    2194:	18 f4       	brcc	.+6      	; 0x219c <vfprintf+0x51a>
    2196:	88 35       	cpi	r24, 0x58	; 88
    2198:	59 f0       	breq	.+22     	; 0x21b0 <vfprintf+0x52e>
    219a:	bc c0       	rjmp	.+376    	; 0x2314 <__stack+0x115>
    219c:	80 37       	cpi	r24, 0x70	; 112
    219e:	19 f0       	breq	.+6      	; 0x21a6 <vfprintf+0x524>
    21a0:	88 37       	cpi	r24, 0x78	; 120
    21a2:	11 f0       	breq	.+4      	; 0x21a8 <vfprintf+0x526>
    21a4:	b7 c0       	rjmp	.+366    	; 0x2314 <__stack+0x115>
    21a6:	00 61       	ori	r16, 0x10	; 16
    21a8:	04 ff       	sbrs	r16, 4
    21aa:	09 c0       	rjmp	.+18     	; 0x21be <vfprintf+0x53c>
    21ac:	04 60       	ori	r16, 0x04	; 4
    21ae:	07 c0       	rjmp	.+14     	; 0x21be <vfprintf+0x53c>
    21b0:	94 fe       	sbrs	r9, 4
    21b2:	08 c0       	rjmp	.+16     	; 0x21c4 <vfprintf+0x542>
    21b4:	06 60       	ori	r16, 0x06	; 6
    21b6:	06 c0       	rjmp	.+12     	; 0x21c4 <vfprintf+0x542>
    21b8:	28 e0       	ldi	r18, 0x08	; 8
    21ba:	30 e0       	ldi	r19, 0x00	; 0
    21bc:	05 c0       	rjmp	.+10     	; 0x21c8 <vfprintf+0x546>
    21be:	20 e1       	ldi	r18, 0x10	; 16
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	02 c0       	rjmp	.+4      	; 0x21c8 <vfprintf+0x546>
    21c4:	20 e1       	ldi	r18, 0x10	; 16
    21c6:	32 e0       	ldi	r19, 0x02	; 2
    21c8:	56 01       	movw	r10, r12
    21ca:	07 ff       	sbrs	r16, 7
    21cc:	09 c0       	rjmp	.+18     	; 0x21e0 <vfprintf+0x55e>
    21ce:	84 e0       	ldi	r24, 0x04	; 4
    21d0:	a8 0e       	add	r10, r24
    21d2:	b1 1c       	adc	r11, r1
    21d4:	f6 01       	movw	r30, r12
    21d6:	60 81       	ld	r22, Z
    21d8:	71 81       	ldd	r23, Z+1	; 0x01
    21da:	82 81       	ldd	r24, Z+2	; 0x02
    21dc:	93 81       	ldd	r25, Z+3	; 0x03
    21de:	08 c0       	rjmp	.+16     	; 0x21f0 <vfprintf+0x56e>
    21e0:	f2 e0       	ldi	r31, 0x02	; 2
    21e2:	af 0e       	add	r10, r31
    21e4:	b1 1c       	adc	r11, r1
    21e6:	f6 01       	movw	r30, r12
    21e8:	60 81       	ld	r22, Z
    21ea:	71 81       	ldd	r23, Z+1	; 0x01
    21ec:	80 e0       	ldi	r24, 0x00	; 0
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	a3 01       	movw	r20, r6
    21f2:	b1 d2       	rcall	.+1378   	; 0x2756 <__ultoa_invert>
    21f4:	c8 2e       	mov	r12, r24
    21f6:	c6 18       	sub	r12, r6
    21f8:	0f 77       	andi	r16, 0x7F	; 127
    21fa:	90 2e       	mov	r9, r16
    21fc:	96 fe       	sbrs	r9, 6
    21fe:	0b c0       	rjmp	.+22     	; 0x2216 <__stack+0x17>
    2200:	09 2d       	mov	r16, r9
    2202:	0e 7f       	andi	r16, 0xFE	; 254
    2204:	c1 16       	cp	r12, r17
    2206:	50 f4       	brcc	.+20     	; 0x221c <__stack+0x1d>
    2208:	94 fe       	sbrs	r9, 4
    220a:	0a c0       	rjmp	.+20     	; 0x2220 <__stack+0x21>
    220c:	92 fc       	sbrc	r9, 2
    220e:	08 c0       	rjmp	.+16     	; 0x2220 <__stack+0x21>
    2210:	09 2d       	mov	r16, r9
    2212:	0e 7e       	andi	r16, 0xEE	; 238
    2214:	05 c0       	rjmp	.+10     	; 0x2220 <__stack+0x21>
    2216:	dc 2c       	mov	r13, r12
    2218:	09 2d       	mov	r16, r9
    221a:	03 c0       	rjmp	.+6      	; 0x2222 <__stack+0x23>
    221c:	dc 2c       	mov	r13, r12
    221e:	01 c0       	rjmp	.+2      	; 0x2222 <__stack+0x23>
    2220:	d1 2e       	mov	r13, r17
    2222:	04 ff       	sbrs	r16, 4
    2224:	0d c0       	rjmp	.+26     	; 0x2240 <__stack+0x41>
    2226:	fe 01       	movw	r30, r28
    2228:	ec 0d       	add	r30, r12
    222a:	f1 1d       	adc	r31, r1
    222c:	80 81       	ld	r24, Z
    222e:	80 33       	cpi	r24, 0x30	; 48
    2230:	11 f4       	brne	.+4      	; 0x2236 <__stack+0x37>
    2232:	09 7e       	andi	r16, 0xE9	; 233
    2234:	09 c0       	rjmp	.+18     	; 0x2248 <__stack+0x49>
    2236:	02 ff       	sbrs	r16, 2
    2238:	06 c0       	rjmp	.+12     	; 0x2246 <__stack+0x47>
    223a:	d3 94       	inc	r13
    223c:	d3 94       	inc	r13
    223e:	04 c0       	rjmp	.+8      	; 0x2248 <__stack+0x49>
    2240:	80 2f       	mov	r24, r16
    2242:	86 78       	andi	r24, 0x86	; 134
    2244:	09 f0       	breq	.+2      	; 0x2248 <__stack+0x49>
    2246:	d3 94       	inc	r13
    2248:	03 fd       	sbrc	r16, 3
    224a:	10 c0       	rjmp	.+32     	; 0x226c <__stack+0x6d>
    224c:	00 ff       	sbrs	r16, 0
    224e:	06 c0       	rjmp	.+12     	; 0x225c <__stack+0x5d>
    2250:	1c 2d       	mov	r17, r12
    2252:	d5 14       	cp	r13, r5
    2254:	78 f4       	brcc	.+30     	; 0x2274 <__stack+0x75>
    2256:	15 0d       	add	r17, r5
    2258:	1d 19       	sub	r17, r13
    225a:	0c c0       	rjmp	.+24     	; 0x2274 <__stack+0x75>
    225c:	d5 14       	cp	r13, r5
    225e:	50 f4       	brcc	.+20     	; 0x2274 <__stack+0x75>
    2260:	b7 01       	movw	r22, r14
    2262:	80 e2       	ldi	r24, 0x20	; 32
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	f5 d1       	rcall	.+1002   	; 0x2652 <fputc>
    2268:	d3 94       	inc	r13
    226a:	f8 cf       	rjmp	.-16     	; 0x225c <__stack+0x5d>
    226c:	d5 14       	cp	r13, r5
    226e:	10 f4       	brcc	.+4      	; 0x2274 <__stack+0x75>
    2270:	5d 18       	sub	r5, r13
    2272:	01 c0       	rjmp	.+2      	; 0x2276 <__stack+0x77>
    2274:	51 2c       	mov	r5, r1
    2276:	04 ff       	sbrs	r16, 4
    2278:	0f c0       	rjmp	.+30     	; 0x2298 <__stack+0x99>
    227a:	b7 01       	movw	r22, r14
    227c:	80 e3       	ldi	r24, 0x30	; 48
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	e8 d1       	rcall	.+976    	; 0x2652 <fputc>
    2282:	02 ff       	sbrs	r16, 2
    2284:	16 c0       	rjmp	.+44     	; 0x22b2 <__stack+0xb3>
    2286:	01 fd       	sbrc	r16, 1
    2288:	03 c0       	rjmp	.+6      	; 0x2290 <__stack+0x91>
    228a:	88 e7       	ldi	r24, 0x78	; 120
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	02 c0       	rjmp	.+4      	; 0x2294 <__stack+0x95>
    2290:	88 e5       	ldi	r24, 0x58	; 88
    2292:	90 e0       	ldi	r25, 0x00	; 0
    2294:	b7 01       	movw	r22, r14
    2296:	0c c0       	rjmp	.+24     	; 0x22b0 <__stack+0xb1>
    2298:	80 2f       	mov	r24, r16
    229a:	86 78       	andi	r24, 0x86	; 134
    229c:	51 f0       	breq	.+20     	; 0x22b2 <__stack+0xb3>
    229e:	01 ff       	sbrs	r16, 1
    22a0:	02 c0       	rjmp	.+4      	; 0x22a6 <__stack+0xa7>
    22a2:	8b e2       	ldi	r24, 0x2B	; 43
    22a4:	01 c0       	rjmp	.+2      	; 0x22a8 <__stack+0xa9>
    22a6:	80 e2       	ldi	r24, 0x20	; 32
    22a8:	07 fd       	sbrc	r16, 7
    22aa:	8d e2       	ldi	r24, 0x2D	; 45
    22ac:	b7 01       	movw	r22, r14
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	d0 d1       	rcall	.+928    	; 0x2652 <fputc>
    22b2:	c1 16       	cp	r12, r17
    22b4:	30 f4       	brcc	.+12     	; 0x22c2 <__stack+0xc3>
    22b6:	b7 01       	movw	r22, r14
    22b8:	80 e3       	ldi	r24, 0x30	; 48
    22ba:	90 e0       	ldi	r25, 0x00	; 0
    22bc:	ca d1       	rcall	.+916    	; 0x2652 <fputc>
    22be:	11 50       	subi	r17, 0x01	; 1
    22c0:	f8 cf       	rjmp	.-16     	; 0x22b2 <__stack+0xb3>
    22c2:	ca 94       	dec	r12
    22c4:	f3 01       	movw	r30, r6
    22c6:	ec 0d       	add	r30, r12
    22c8:	f1 1d       	adc	r31, r1
    22ca:	80 81       	ld	r24, Z
    22cc:	b7 01       	movw	r22, r14
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	c0 d1       	rcall	.+896    	; 0x2652 <fputc>
    22d2:	c1 10       	cpse	r12, r1
    22d4:	f6 cf       	rjmp	.-20     	; 0x22c2 <__stack+0xc3>
    22d6:	15 c0       	rjmp	.+42     	; 0x2302 <__stack+0x103>
    22d8:	f4 e0       	ldi	r31, 0x04	; 4
    22da:	f5 15       	cp	r31, r5
    22dc:	50 f5       	brcc	.+84     	; 0x2332 <__stack+0x133>
    22de:	84 e0       	ldi	r24, 0x04	; 4
    22e0:	58 1a       	sub	r5, r24
    22e2:	93 fe       	sbrs	r9, 3
    22e4:	1e c0       	rjmp	.+60     	; 0x2322 <__stack+0x123>
    22e6:	01 11       	cpse	r16, r1
    22e8:	25 c0       	rjmp	.+74     	; 0x2334 <__stack+0x135>
    22ea:	2c 85       	ldd	r18, Y+12	; 0x0c
    22ec:	23 ff       	sbrs	r18, 3
    22ee:	27 c0       	rjmp	.+78     	; 0x233e <__stack+0x13f>
    22f0:	02 e1       	ldi	r16, 0x12	; 18
    22f2:	11 e0       	ldi	r17, 0x01	; 1
    22f4:	39 2d       	mov	r19, r9
    22f6:	30 71       	andi	r19, 0x10	; 16
    22f8:	93 2e       	mov	r9, r19
    22fa:	f8 01       	movw	r30, r16
    22fc:	84 91       	lpm	r24, Z
    22fe:	81 11       	cpse	r24, r1
    2300:	21 c0       	rjmp	.+66     	; 0x2344 <__stack+0x145>
    2302:	55 20       	and	r5, r5
    2304:	09 f4       	brne	.+2      	; 0x2308 <__stack+0x109>
    2306:	fc cc       	rjmp	.-1544   	; 0x1d00 <vfprintf+0x7e>
    2308:	b7 01       	movw	r22, r14
    230a:	80 e2       	ldi	r24, 0x20	; 32
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	a1 d1       	rcall	.+834    	; 0x2652 <fputc>
    2310:	5a 94       	dec	r5
    2312:	f7 cf       	rjmp	.-18     	; 0x2302 <__stack+0x103>
    2314:	f7 01       	movw	r30, r14
    2316:	86 81       	ldd	r24, Z+6	; 0x06
    2318:	97 81       	ldd	r25, Z+7	; 0x07
    231a:	23 c0       	rjmp	.+70     	; 0x2362 <__stack+0x163>
    231c:	8f ef       	ldi	r24, 0xFF	; 255
    231e:	9f ef       	ldi	r25, 0xFF	; 255
    2320:	20 c0       	rjmp	.+64     	; 0x2362 <__stack+0x163>
    2322:	b7 01       	movw	r22, r14
    2324:	80 e2       	ldi	r24, 0x20	; 32
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	94 d1       	rcall	.+808    	; 0x2652 <fputc>
    232a:	5a 94       	dec	r5
    232c:	51 10       	cpse	r5, r1
    232e:	f9 cf       	rjmp	.-14     	; 0x2322 <__stack+0x123>
    2330:	da cf       	rjmp	.-76     	; 0x22e6 <__stack+0xe7>
    2332:	51 2c       	mov	r5, r1
    2334:	b7 01       	movw	r22, r14
    2336:	80 2f       	mov	r24, r16
    2338:	90 e0       	ldi	r25, 0x00	; 0
    233a:	8b d1       	rcall	.+790    	; 0x2652 <fputc>
    233c:	d6 cf       	rjmp	.-84     	; 0x22ea <__stack+0xeb>
    233e:	06 e1       	ldi	r16, 0x16	; 22
    2340:	11 e0       	ldi	r17, 0x01	; 1
    2342:	d8 cf       	rjmp	.-80     	; 0x22f4 <__stack+0xf5>
    2344:	91 10       	cpse	r9, r1
    2346:	80 52       	subi	r24, 0x20	; 32
    2348:	b7 01       	movw	r22, r14
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	82 d1       	rcall	.+772    	; 0x2652 <fputc>
    234e:	0f 5f       	subi	r16, 0xFF	; 255
    2350:	1f 4f       	sbci	r17, 0xFF	; 255
    2352:	d3 cf       	rjmp	.-90     	; 0x22fa <__stack+0xfb>
    2354:	23 e0       	ldi	r18, 0x03	; 3
    2356:	25 15       	cp	r18, r5
    2358:	10 f4       	brcc	.+4      	; 0x235e <__stack+0x15f>
    235a:	83 e0       	ldi	r24, 0x03	; 3
    235c:	c1 cf       	rjmp	.-126    	; 0x22e0 <__stack+0xe1>
    235e:	51 2c       	mov	r5, r1
    2360:	c4 cf       	rjmp	.-120    	; 0x22ea <__stack+0xeb>
    2362:	60 96       	adiw	r28, 0x10	; 16
    2364:	0f b6       	in	r0, 0x3f	; 63
    2366:	f8 94       	cli
    2368:	de bf       	out	0x3e, r29	; 62
    236a:	0f be       	out	0x3f, r0	; 63
    236c:	cd bf       	out	0x3d, r28	; 61
    236e:	df 91       	pop	r29
    2370:	cf 91       	pop	r28
    2372:	1f 91       	pop	r17
    2374:	0f 91       	pop	r16
    2376:	ff 90       	pop	r15
    2378:	ef 90       	pop	r14
    237a:	df 90       	pop	r13
    237c:	cf 90       	pop	r12
    237e:	bf 90       	pop	r11
    2380:	af 90       	pop	r10
    2382:	9f 90       	pop	r9
    2384:	8f 90       	pop	r8
    2386:	7f 90       	pop	r7
    2388:	6f 90       	pop	r6
    238a:	5f 90       	pop	r5
    238c:	4f 90       	pop	r4
    238e:	3f 90       	pop	r3
    2390:	2f 90       	pop	r2
    2392:	08 95       	ret

00002394 <__divmodhi4>:
    2394:	97 fb       	bst	r25, 7
    2396:	07 2e       	mov	r0, r23
    2398:	16 f4       	brtc	.+4      	; 0x239e <__divmodhi4+0xa>
    239a:	00 94       	com	r0
    239c:	06 d0       	rcall	.+12     	; 0x23aa <__divmodhi4_neg1>
    239e:	77 fd       	sbrc	r23, 7
    23a0:	08 d0       	rcall	.+16     	; 0x23b2 <__divmodhi4_neg2>
    23a2:	0b d0       	rcall	.+22     	; 0x23ba <__udivmodhi4>
    23a4:	07 fc       	sbrc	r0, 7
    23a6:	05 d0       	rcall	.+10     	; 0x23b2 <__divmodhi4_neg2>
    23a8:	3e f4       	brtc	.+14     	; 0x23b8 <__divmodhi4_exit>

000023aa <__divmodhi4_neg1>:
    23aa:	90 95       	com	r25
    23ac:	81 95       	neg	r24
    23ae:	9f 4f       	sbci	r25, 0xFF	; 255
    23b0:	08 95       	ret

000023b2 <__divmodhi4_neg2>:
    23b2:	70 95       	com	r23
    23b4:	61 95       	neg	r22
    23b6:	7f 4f       	sbci	r23, 0xFF	; 255

000023b8 <__divmodhi4_exit>:
    23b8:	08 95       	ret

000023ba <__udivmodhi4>:
    23ba:	aa 1b       	sub	r26, r26
    23bc:	bb 1b       	sub	r27, r27
    23be:	51 e1       	ldi	r21, 0x11	; 17
    23c0:	07 c0       	rjmp	.+14     	; 0x23d0 <__udivmodhi4_ep>

000023c2 <__udivmodhi4_loop>:
    23c2:	aa 1f       	adc	r26, r26
    23c4:	bb 1f       	adc	r27, r27
    23c6:	a6 17       	cp	r26, r22
    23c8:	b7 07       	cpc	r27, r23
    23ca:	10 f0       	brcs	.+4      	; 0x23d0 <__udivmodhi4_ep>
    23cc:	a6 1b       	sub	r26, r22
    23ce:	b7 0b       	sbc	r27, r23

000023d0 <__udivmodhi4_ep>:
    23d0:	88 1f       	adc	r24, r24
    23d2:	99 1f       	adc	r25, r25
    23d4:	5a 95       	dec	r21
    23d6:	a9 f7       	brne	.-22     	; 0x23c2 <__udivmodhi4_loop>
    23d8:	80 95       	com	r24
    23da:	90 95       	com	r25
    23dc:	bc 01       	movw	r22, r24
    23de:	cd 01       	movw	r24, r26
    23e0:	08 95       	ret

000023e2 <__ftoa_engine>:
    23e2:	28 30       	cpi	r18, 0x08	; 8
    23e4:	08 f0       	brcs	.+2      	; 0x23e8 <__ftoa_engine+0x6>
    23e6:	27 e0       	ldi	r18, 0x07	; 7
    23e8:	33 27       	eor	r19, r19
    23ea:	da 01       	movw	r26, r20
    23ec:	99 0f       	add	r25, r25
    23ee:	31 1d       	adc	r19, r1
    23f0:	87 fd       	sbrc	r24, 7
    23f2:	91 60       	ori	r25, 0x01	; 1
    23f4:	00 96       	adiw	r24, 0x00	; 0
    23f6:	61 05       	cpc	r22, r1
    23f8:	71 05       	cpc	r23, r1
    23fa:	39 f4       	brne	.+14     	; 0x240a <__ftoa_engine+0x28>
    23fc:	32 60       	ori	r19, 0x02	; 2
    23fe:	2e 5f       	subi	r18, 0xFE	; 254
    2400:	3d 93       	st	X+, r19
    2402:	30 e3       	ldi	r19, 0x30	; 48
    2404:	2a 95       	dec	r18
    2406:	e1 f7       	brne	.-8      	; 0x2400 <__ftoa_engine+0x1e>
    2408:	08 95       	ret
    240a:	9f 3f       	cpi	r25, 0xFF	; 255
    240c:	30 f0       	brcs	.+12     	; 0x241a <__ftoa_engine+0x38>
    240e:	80 38       	cpi	r24, 0x80	; 128
    2410:	71 05       	cpc	r23, r1
    2412:	61 05       	cpc	r22, r1
    2414:	09 f0       	breq	.+2      	; 0x2418 <__ftoa_engine+0x36>
    2416:	3c 5f       	subi	r19, 0xFC	; 252
    2418:	3c 5f       	subi	r19, 0xFC	; 252
    241a:	3d 93       	st	X+, r19
    241c:	91 30       	cpi	r25, 0x01	; 1
    241e:	08 f0       	brcs	.+2      	; 0x2422 <__ftoa_engine+0x40>
    2420:	80 68       	ori	r24, 0x80	; 128
    2422:	91 1d       	adc	r25, r1
    2424:	df 93       	push	r29
    2426:	cf 93       	push	r28
    2428:	1f 93       	push	r17
    242a:	0f 93       	push	r16
    242c:	ff 92       	push	r15
    242e:	ef 92       	push	r14
    2430:	19 2f       	mov	r17, r25
    2432:	98 7f       	andi	r25, 0xF8	; 248
    2434:	96 95       	lsr	r25
    2436:	e9 2f       	mov	r30, r25
    2438:	96 95       	lsr	r25
    243a:	96 95       	lsr	r25
    243c:	e9 0f       	add	r30, r25
    243e:	ff 27       	eor	r31, r31
    2440:	ec 58       	subi	r30, 0x8C	; 140
    2442:	fe 4f       	sbci	r31, 0xFE	; 254
    2444:	99 27       	eor	r25, r25
    2446:	33 27       	eor	r19, r19
    2448:	ee 24       	eor	r14, r14
    244a:	ff 24       	eor	r15, r15
    244c:	a7 01       	movw	r20, r14
    244e:	e7 01       	movw	r28, r14
    2450:	05 90       	lpm	r0, Z+
    2452:	08 94       	sec
    2454:	07 94       	ror	r0
    2456:	28 f4       	brcc	.+10     	; 0x2462 <__ftoa_engine+0x80>
    2458:	36 0f       	add	r19, r22
    245a:	e7 1e       	adc	r14, r23
    245c:	f8 1e       	adc	r15, r24
    245e:	49 1f       	adc	r20, r25
    2460:	51 1d       	adc	r21, r1
    2462:	66 0f       	add	r22, r22
    2464:	77 1f       	adc	r23, r23
    2466:	88 1f       	adc	r24, r24
    2468:	99 1f       	adc	r25, r25
    246a:	06 94       	lsr	r0
    246c:	a1 f7       	brne	.-24     	; 0x2456 <__ftoa_engine+0x74>
    246e:	05 90       	lpm	r0, Z+
    2470:	07 94       	ror	r0
    2472:	28 f4       	brcc	.+10     	; 0x247e <__ftoa_engine+0x9c>
    2474:	e7 0e       	add	r14, r23
    2476:	f8 1e       	adc	r15, r24
    2478:	49 1f       	adc	r20, r25
    247a:	56 1f       	adc	r21, r22
    247c:	c1 1d       	adc	r28, r1
    247e:	77 0f       	add	r23, r23
    2480:	88 1f       	adc	r24, r24
    2482:	99 1f       	adc	r25, r25
    2484:	66 1f       	adc	r22, r22
    2486:	06 94       	lsr	r0
    2488:	a1 f7       	brne	.-24     	; 0x2472 <__ftoa_engine+0x90>
    248a:	05 90       	lpm	r0, Z+
    248c:	07 94       	ror	r0
    248e:	28 f4       	brcc	.+10     	; 0x249a <__ftoa_engine+0xb8>
    2490:	f8 0e       	add	r15, r24
    2492:	49 1f       	adc	r20, r25
    2494:	56 1f       	adc	r21, r22
    2496:	c7 1f       	adc	r28, r23
    2498:	d1 1d       	adc	r29, r1
    249a:	88 0f       	add	r24, r24
    249c:	99 1f       	adc	r25, r25
    249e:	66 1f       	adc	r22, r22
    24a0:	77 1f       	adc	r23, r23
    24a2:	06 94       	lsr	r0
    24a4:	a1 f7       	brne	.-24     	; 0x248e <__ftoa_engine+0xac>
    24a6:	05 90       	lpm	r0, Z+
    24a8:	07 94       	ror	r0
    24aa:	20 f4       	brcc	.+8      	; 0x24b4 <__ftoa_engine+0xd2>
    24ac:	49 0f       	add	r20, r25
    24ae:	56 1f       	adc	r21, r22
    24b0:	c7 1f       	adc	r28, r23
    24b2:	d8 1f       	adc	r29, r24
    24b4:	99 0f       	add	r25, r25
    24b6:	66 1f       	adc	r22, r22
    24b8:	77 1f       	adc	r23, r23
    24ba:	88 1f       	adc	r24, r24
    24bc:	06 94       	lsr	r0
    24be:	a9 f7       	brne	.-22     	; 0x24aa <__ftoa_engine+0xc8>
    24c0:	84 91       	lpm	r24, Z
    24c2:	10 95       	com	r17
    24c4:	17 70       	andi	r17, 0x07	; 7
    24c6:	41 f0       	breq	.+16     	; 0x24d8 <__ftoa_engine+0xf6>
    24c8:	d6 95       	lsr	r29
    24ca:	c7 95       	ror	r28
    24cc:	57 95       	ror	r21
    24ce:	47 95       	ror	r20
    24d0:	f7 94       	ror	r15
    24d2:	e7 94       	ror	r14
    24d4:	1a 95       	dec	r17
    24d6:	c1 f7       	brne	.-16     	; 0x24c8 <__ftoa_engine+0xe6>
    24d8:	ea e1       	ldi	r30, 0x1A	; 26
    24da:	f1 e0       	ldi	r31, 0x01	; 1
    24dc:	68 94       	set
    24de:	15 90       	lpm	r1, Z+
    24e0:	15 91       	lpm	r17, Z+
    24e2:	35 91       	lpm	r19, Z+
    24e4:	65 91       	lpm	r22, Z+
    24e6:	95 91       	lpm	r25, Z+
    24e8:	05 90       	lpm	r0, Z+
    24ea:	7f e2       	ldi	r23, 0x2F	; 47
    24ec:	73 95       	inc	r23
    24ee:	e1 18       	sub	r14, r1
    24f0:	f1 0a       	sbc	r15, r17
    24f2:	43 0b       	sbc	r20, r19
    24f4:	56 0b       	sbc	r21, r22
    24f6:	c9 0b       	sbc	r28, r25
    24f8:	d0 09       	sbc	r29, r0
    24fa:	c0 f7       	brcc	.-16     	; 0x24ec <__ftoa_engine+0x10a>
    24fc:	e1 0c       	add	r14, r1
    24fe:	f1 1e       	adc	r15, r17
    2500:	43 1f       	adc	r20, r19
    2502:	56 1f       	adc	r21, r22
    2504:	c9 1f       	adc	r28, r25
    2506:	d0 1d       	adc	r29, r0
    2508:	7e f4       	brtc	.+30     	; 0x2528 <__ftoa_engine+0x146>
    250a:	70 33       	cpi	r23, 0x30	; 48
    250c:	11 f4       	brne	.+4      	; 0x2512 <__ftoa_engine+0x130>
    250e:	8a 95       	dec	r24
    2510:	e6 cf       	rjmp	.-52     	; 0x24de <__ftoa_engine+0xfc>
    2512:	e8 94       	clt
    2514:	01 50       	subi	r16, 0x01	; 1
    2516:	30 f0       	brcs	.+12     	; 0x2524 <__ftoa_engine+0x142>
    2518:	08 0f       	add	r16, r24
    251a:	0a f4       	brpl	.+2      	; 0x251e <__ftoa_engine+0x13c>
    251c:	00 27       	eor	r16, r16
    251e:	02 17       	cp	r16, r18
    2520:	08 f4       	brcc	.+2      	; 0x2524 <__ftoa_engine+0x142>
    2522:	20 2f       	mov	r18, r16
    2524:	23 95       	inc	r18
    2526:	02 2f       	mov	r16, r18
    2528:	7a 33       	cpi	r23, 0x3A	; 58
    252a:	28 f0       	brcs	.+10     	; 0x2536 <__ftoa_engine+0x154>
    252c:	79 e3       	ldi	r23, 0x39	; 57
    252e:	7d 93       	st	X+, r23
    2530:	2a 95       	dec	r18
    2532:	e9 f7       	brne	.-6      	; 0x252e <__ftoa_engine+0x14c>
    2534:	10 c0       	rjmp	.+32     	; 0x2556 <__ftoa_engine+0x174>
    2536:	7d 93       	st	X+, r23
    2538:	2a 95       	dec	r18
    253a:	89 f6       	brne	.-94     	; 0x24de <__ftoa_engine+0xfc>
    253c:	06 94       	lsr	r0
    253e:	97 95       	ror	r25
    2540:	67 95       	ror	r22
    2542:	37 95       	ror	r19
    2544:	17 95       	ror	r17
    2546:	17 94       	ror	r1
    2548:	e1 18       	sub	r14, r1
    254a:	f1 0a       	sbc	r15, r17
    254c:	43 0b       	sbc	r20, r19
    254e:	56 0b       	sbc	r21, r22
    2550:	c9 0b       	sbc	r28, r25
    2552:	d0 09       	sbc	r29, r0
    2554:	98 f0       	brcs	.+38     	; 0x257c <__ftoa_engine+0x19a>
    2556:	23 95       	inc	r18
    2558:	7e 91       	ld	r23, -X
    255a:	73 95       	inc	r23
    255c:	7a 33       	cpi	r23, 0x3A	; 58
    255e:	08 f0       	brcs	.+2      	; 0x2562 <__ftoa_engine+0x180>
    2560:	70 e3       	ldi	r23, 0x30	; 48
    2562:	7c 93       	st	X, r23
    2564:	20 13       	cpse	r18, r16
    2566:	b8 f7       	brcc	.-18     	; 0x2556 <__ftoa_engine+0x174>
    2568:	7e 91       	ld	r23, -X
    256a:	70 61       	ori	r23, 0x10	; 16
    256c:	7d 93       	st	X+, r23
    256e:	30 f0       	brcs	.+12     	; 0x257c <__ftoa_engine+0x19a>
    2570:	83 95       	inc	r24
    2572:	71 e3       	ldi	r23, 0x31	; 49
    2574:	7d 93       	st	X+, r23
    2576:	70 e3       	ldi	r23, 0x30	; 48
    2578:	2a 95       	dec	r18
    257a:	e1 f7       	brne	.-8      	; 0x2574 <__ftoa_engine+0x192>
    257c:	11 24       	eor	r1, r1
    257e:	ef 90       	pop	r14
    2580:	ff 90       	pop	r15
    2582:	0f 91       	pop	r16
    2584:	1f 91       	pop	r17
    2586:	cf 91       	pop	r28
    2588:	df 91       	pop	r29
    258a:	99 27       	eor	r25, r25
    258c:	87 fd       	sbrc	r24, 7
    258e:	90 95       	com	r25
    2590:	08 95       	ret

00002592 <strnlen_P>:
    2592:	fc 01       	movw	r30, r24
    2594:	05 90       	lpm	r0, Z+
    2596:	61 50       	subi	r22, 0x01	; 1
    2598:	70 40       	sbci	r23, 0x00	; 0
    259a:	01 10       	cpse	r0, r1
    259c:	d8 f7       	brcc	.-10     	; 0x2594 <strnlen_P+0x2>
    259e:	80 95       	com	r24
    25a0:	90 95       	com	r25
    25a2:	8e 0f       	add	r24, r30
    25a4:	9f 1f       	adc	r25, r31
    25a6:	08 95       	ret

000025a8 <strnlen>:
    25a8:	fc 01       	movw	r30, r24
    25aa:	61 50       	subi	r22, 0x01	; 1
    25ac:	70 40       	sbci	r23, 0x00	; 0
    25ae:	01 90       	ld	r0, Z+
    25b0:	01 10       	cpse	r0, r1
    25b2:	d8 f7       	brcc	.-10     	; 0x25aa <strnlen+0x2>
    25b4:	80 95       	com	r24
    25b6:	90 95       	com	r25
    25b8:	8e 0f       	add	r24, r30
    25ba:	9f 1f       	adc	r25, r31
    25bc:	08 95       	ret

000025be <fdevopen>:
    25be:	0f 93       	push	r16
    25c0:	1f 93       	push	r17
    25c2:	cf 93       	push	r28
    25c4:	df 93       	push	r29
    25c6:	00 97       	sbiw	r24, 0x00	; 0
    25c8:	31 f4       	brne	.+12     	; 0x25d6 <fdevopen+0x18>
    25ca:	61 15       	cp	r22, r1
    25cc:	71 05       	cpc	r23, r1
    25ce:	19 f4       	brne	.+6      	; 0x25d6 <fdevopen+0x18>
    25d0:	80 e0       	ldi	r24, 0x00	; 0
    25d2:	90 e0       	ldi	r25, 0x00	; 0
    25d4:	39 c0       	rjmp	.+114    	; 0x2648 <fdevopen+0x8a>
    25d6:	8b 01       	movw	r16, r22
    25d8:	ec 01       	movw	r28, r24
    25da:	6e e0       	ldi	r22, 0x0E	; 14
    25dc:	70 e0       	ldi	r23, 0x00	; 0
    25de:	81 e0       	ldi	r24, 0x01	; 1
    25e0:	90 e0       	ldi	r25, 0x00	; 0
    25e2:	17 d1       	rcall	.+558    	; 0x2812 <calloc>
    25e4:	fc 01       	movw	r30, r24
    25e6:	89 2b       	or	r24, r25
    25e8:	99 f3       	breq	.-26     	; 0x25d0 <fdevopen+0x12>
    25ea:	80 e8       	ldi	r24, 0x80	; 128
    25ec:	83 83       	std	Z+3, r24	; 0x03
    25ee:	01 15       	cp	r16, r1
    25f0:	11 05       	cpc	r17, r1
    25f2:	71 f0       	breq	.+28     	; 0x2610 <fdevopen+0x52>
    25f4:	13 87       	std	Z+11, r17	; 0x0b
    25f6:	02 87       	std	Z+10, r16	; 0x0a
    25f8:	81 e8       	ldi	r24, 0x81	; 129
    25fa:	83 83       	std	Z+3, r24	; 0x03
    25fc:	80 91 2f 04 	lds	r24, 0x042F	; 0x80042f <__iob>
    2600:	90 91 30 04 	lds	r25, 0x0430	; 0x800430 <__iob+0x1>
    2604:	89 2b       	or	r24, r25
    2606:	21 f4       	brne	.+8      	; 0x2610 <fdevopen+0x52>
    2608:	f0 93 30 04 	sts	0x0430, r31	; 0x800430 <__iob+0x1>
    260c:	e0 93 2f 04 	sts	0x042F, r30	; 0x80042f <__iob>
    2610:	20 97       	sbiw	r28, 0x00	; 0
    2612:	c9 f0       	breq	.+50     	; 0x2646 <fdevopen+0x88>
    2614:	d1 87       	std	Z+9, r29	; 0x09
    2616:	c0 87       	std	Z+8, r28	; 0x08
    2618:	83 81       	ldd	r24, Z+3	; 0x03
    261a:	82 60       	ori	r24, 0x02	; 2
    261c:	83 83       	std	Z+3, r24	; 0x03
    261e:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <__iob+0x2>
    2622:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <__iob+0x3>
    2626:	89 2b       	or	r24, r25
    2628:	71 f4       	brne	.+28     	; 0x2646 <fdevopen+0x88>
    262a:	f0 93 32 04 	sts	0x0432, r31	; 0x800432 <__iob+0x3>
    262e:	e0 93 31 04 	sts	0x0431, r30	; 0x800431 <__iob+0x2>
    2632:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <__iob+0x4>
    2636:	90 91 34 04 	lds	r25, 0x0434	; 0x800434 <__iob+0x5>
    263a:	89 2b       	or	r24, r25
    263c:	21 f4       	brne	.+8      	; 0x2646 <fdevopen+0x88>
    263e:	f0 93 34 04 	sts	0x0434, r31	; 0x800434 <__iob+0x5>
    2642:	e0 93 33 04 	sts	0x0433, r30	; 0x800433 <__iob+0x4>
    2646:	cf 01       	movw	r24, r30
    2648:	df 91       	pop	r29
    264a:	cf 91       	pop	r28
    264c:	1f 91       	pop	r17
    264e:	0f 91       	pop	r16
    2650:	08 95       	ret

00002652 <fputc>:
    2652:	0f 93       	push	r16
    2654:	1f 93       	push	r17
    2656:	cf 93       	push	r28
    2658:	df 93       	push	r29
    265a:	fb 01       	movw	r30, r22
    265c:	23 81       	ldd	r18, Z+3	; 0x03
    265e:	21 fd       	sbrc	r18, 1
    2660:	03 c0       	rjmp	.+6      	; 0x2668 <fputc+0x16>
    2662:	8f ef       	ldi	r24, 0xFF	; 255
    2664:	9f ef       	ldi	r25, 0xFF	; 255
    2666:	2c c0       	rjmp	.+88     	; 0x26c0 <fputc+0x6e>
    2668:	22 ff       	sbrs	r18, 2
    266a:	16 c0       	rjmp	.+44     	; 0x2698 <fputc+0x46>
    266c:	46 81       	ldd	r20, Z+6	; 0x06
    266e:	57 81       	ldd	r21, Z+7	; 0x07
    2670:	24 81       	ldd	r18, Z+4	; 0x04
    2672:	35 81       	ldd	r19, Z+5	; 0x05
    2674:	42 17       	cp	r20, r18
    2676:	53 07       	cpc	r21, r19
    2678:	44 f4       	brge	.+16     	; 0x268a <fputc+0x38>
    267a:	a0 81       	ld	r26, Z
    267c:	b1 81       	ldd	r27, Z+1	; 0x01
    267e:	9d 01       	movw	r18, r26
    2680:	2f 5f       	subi	r18, 0xFF	; 255
    2682:	3f 4f       	sbci	r19, 0xFF	; 255
    2684:	31 83       	std	Z+1, r19	; 0x01
    2686:	20 83       	st	Z, r18
    2688:	8c 93       	st	X, r24
    268a:	26 81       	ldd	r18, Z+6	; 0x06
    268c:	37 81       	ldd	r19, Z+7	; 0x07
    268e:	2f 5f       	subi	r18, 0xFF	; 255
    2690:	3f 4f       	sbci	r19, 0xFF	; 255
    2692:	37 83       	std	Z+7, r19	; 0x07
    2694:	26 83       	std	Z+6, r18	; 0x06
    2696:	14 c0       	rjmp	.+40     	; 0x26c0 <fputc+0x6e>
    2698:	8b 01       	movw	r16, r22
    269a:	ec 01       	movw	r28, r24
    269c:	fb 01       	movw	r30, r22
    269e:	00 84       	ldd	r0, Z+8	; 0x08
    26a0:	f1 85       	ldd	r31, Z+9	; 0x09
    26a2:	e0 2d       	mov	r30, r0
    26a4:	19 95       	eicall
    26a6:	89 2b       	or	r24, r25
    26a8:	e1 f6       	brne	.-72     	; 0x2662 <fputc+0x10>
    26aa:	d8 01       	movw	r26, r16
    26ac:	16 96       	adiw	r26, 0x06	; 6
    26ae:	8d 91       	ld	r24, X+
    26b0:	9c 91       	ld	r25, X
    26b2:	17 97       	sbiw	r26, 0x07	; 7
    26b4:	01 96       	adiw	r24, 0x01	; 1
    26b6:	17 96       	adiw	r26, 0x07	; 7
    26b8:	9c 93       	st	X, r25
    26ba:	8e 93       	st	-X, r24
    26bc:	16 97       	sbiw	r26, 0x06	; 6
    26be:	ce 01       	movw	r24, r28
    26c0:	df 91       	pop	r29
    26c2:	cf 91       	pop	r28
    26c4:	1f 91       	pop	r17
    26c6:	0f 91       	pop	r16
    26c8:	08 95       	ret

000026ca <printf>:
    26ca:	cf 93       	push	r28
    26cc:	df 93       	push	r29
    26ce:	cd b7       	in	r28, 0x3d	; 61
    26d0:	de b7       	in	r29, 0x3e	; 62
    26d2:	ae 01       	movw	r20, r28
    26d4:	4a 5f       	subi	r20, 0xFA	; 250
    26d6:	5f 4f       	sbci	r21, 0xFF	; 255
    26d8:	fa 01       	movw	r30, r20
    26da:	61 91       	ld	r22, Z+
    26dc:	71 91       	ld	r23, Z+
    26de:	af 01       	movw	r20, r30
    26e0:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <__iob+0x2>
    26e4:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <__iob+0x3>
    26e8:	cc da       	rcall	.-2664   	; 0x1c82 <vfprintf>
    26ea:	df 91       	pop	r29
    26ec:	cf 91       	pop	r28
    26ee:	08 95       	ret

000026f0 <putchar>:
    26f0:	60 91 31 04 	lds	r22, 0x0431	; 0x800431 <__iob+0x2>
    26f4:	70 91 32 04 	lds	r23, 0x0432	; 0x800432 <__iob+0x3>
    26f8:	ac cf       	rjmp	.-168    	; 0x2652 <fputc>

000026fa <sprintf>:
    26fa:	0f 93       	push	r16
    26fc:	1f 93       	push	r17
    26fe:	cf 93       	push	r28
    2700:	df 93       	push	r29
    2702:	cd b7       	in	r28, 0x3d	; 61
    2704:	de b7       	in	r29, 0x3e	; 62
    2706:	2e 97       	sbiw	r28, 0x0e	; 14
    2708:	0f b6       	in	r0, 0x3f	; 63
    270a:	f8 94       	cli
    270c:	de bf       	out	0x3e, r29	; 62
    270e:	0f be       	out	0x3f, r0	; 63
    2710:	cd bf       	out	0x3d, r28	; 61
    2712:	0e 89       	ldd	r16, Y+22	; 0x16
    2714:	1f 89       	ldd	r17, Y+23	; 0x17
    2716:	86 e0       	ldi	r24, 0x06	; 6
    2718:	8c 83       	std	Y+4, r24	; 0x04
    271a:	1a 83       	std	Y+2, r17	; 0x02
    271c:	09 83       	std	Y+1, r16	; 0x01
    271e:	8f ef       	ldi	r24, 0xFF	; 255
    2720:	9f e7       	ldi	r25, 0x7F	; 127
    2722:	9e 83       	std	Y+6, r25	; 0x06
    2724:	8d 83       	std	Y+5, r24	; 0x05
    2726:	ae 01       	movw	r20, r28
    2728:	46 5e       	subi	r20, 0xE6	; 230
    272a:	5f 4f       	sbci	r21, 0xFF	; 255
    272c:	68 8d       	ldd	r22, Y+24	; 0x18
    272e:	79 8d       	ldd	r23, Y+25	; 0x19
    2730:	ce 01       	movw	r24, r28
    2732:	01 96       	adiw	r24, 0x01	; 1
    2734:	a6 da       	rcall	.-2740   	; 0x1c82 <vfprintf>
    2736:	ef 81       	ldd	r30, Y+7	; 0x07
    2738:	f8 85       	ldd	r31, Y+8	; 0x08
    273a:	e0 0f       	add	r30, r16
    273c:	f1 1f       	adc	r31, r17
    273e:	10 82       	st	Z, r1
    2740:	2e 96       	adiw	r28, 0x0e	; 14
    2742:	0f b6       	in	r0, 0x3f	; 63
    2744:	f8 94       	cli
    2746:	de bf       	out	0x3e, r29	; 62
    2748:	0f be       	out	0x3f, r0	; 63
    274a:	cd bf       	out	0x3d, r28	; 61
    274c:	df 91       	pop	r29
    274e:	cf 91       	pop	r28
    2750:	1f 91       	pop	r17
    2752:	0f 91       	pop	r16
    2754:	08 95       	ret

00002756 <__ultoa_invert>:
    2756:	fa 01       	movw	r30, r20
    2758:	aa 27       	eor	r26, r26
    275a:	28 30       	cpi	r18, 0x08	; 8
    275c:	51 f1       	breq	.+84     	; 0x27b2 <__ultoa_invert+0x5c>
    275e:	20 31       	cpi	r18, 0x10	; 16
    2760:	81 f1       	breq	.+96     	; 0x27c2 <__ultoa_invert+0x6c>
    2762:	e8 94       	clt
    2764:	6f 93       	push	r22
    2766:	6e 7f       	andi	r22, 0xFE	; 254
    2768:	6e 5f       	subi	r22, 0xFE	; 254
    276a:	7f 4f       	sbci	r23, 0xFF	; 255
    276c:	8f 4f       	sbci	r24, 0xFF	; 255
    276e:	9f 4f       	sbci	r25, 0xFF	; 255
    2770:	af 4f       	sbci	r26, 0xFF	; 255
    2772:	b1 e0       	ldi	r27, 0x01	; 1
    2774:	3e d0       	rcall	.+124    	; 0x27f2 <__ultoa_invert+0x9c>
    2776:	b4 e0       	ldi	r27, 0x04	; 4
    2778:	3c d0       	rcall	.+120    	; 0x27f2 <__ultoa_invert+0x9c>
    277a:	67 0f       	add	r22, r23
    277c:	78 1f       	adc	r23, r24
    277e:	89 1f       	adc	r24, r25
    2780:	9a 1f       	adc	r25, r26
    2782:	a1 1d       	adc	r26, r1
    2784:	68 0f       	add	r22, r24
    2786:	79 1f       	adc	r23, r25
    2788:	8a 1f       	adc	r24, r26
    278a:	91 1d       	adc	r25, r1
    278c:	a1 1d       	adc	r26, r1
    278e:	6a 0f       	add	r22, r26
    2790:	71 1d       	adc	r23, r1
    2792:	81 1d       	adc	r24, r1
    2794:	91 1d       	adc	r25, r1
    2796:	a1 1d       	adc	r26, r1
    2798:	20 d0       	rcall	.+64     	; 0x27da <__ultoa_invert+0x84>
    279a:	09 f4       	brne	.+2      	; 0x279e <__ultoa_invert+0x48>
    279c:	68 94       	set
    279e:	3f 91       	pop	r19
    27a0:	2a e0       	ldi	r18, 0x0A	; 10
    27a2:	26 9f       	mul	r18, r22
    27a4:	11 24       	eor	r1, r1
    27a6:	30 19       	sub	r19, r0
    27a8:	30 5d       	subi	r19, 0xD0	; 208
    27aa:	31 93       	st	Z+, r19
    27ac:	de f6       	brtc	.-74     	; 0x2764 <__ultoa_invert+0xe>
    27ae:	cf 01       	movw	r24, r30
    27b0:	08 95       	ret
    27b2:	46 2f       	mov	r20, r22
    27b4:	47 70       	andi	r20, 0x07	; 7
    27b6:	40 5d       	subi	r20, 0xD0	; 208
    27b8:	41 93       	st	Z+, r20
    27ba:	b3 e0       	ldi	r27, 0x03	; 3
    27bc:	0f d0       	rcall	.+30     	; 0x27dc <__ultoa_invert+0x86>
    27be:	c9 f7       	brne	.-14     	; 0x27b2 <__ultoa_invert+0x5c>
    27c0:	f6 cf       	rjmp	.-20     	; 0x27ae <__ultoa_invert+0x58>
    27c2:	46 2f       	mov	r20, r22
    27c4:	4f 70       	andi	r20, 0x0F	; 15
    27c6:	40 5d       	subi	r20, 0xD0	; 208
    27c8:	4a 33       	cpi	r20, 0x3A	; 58
    27ca:	18 f0       	brcs	.+6      	; 0x27d2 <__ultoa_invert+0x7c>
    27cc:	49 5d       	subi	r20, 0xD9	; 217
    27ce:	31 fd       	sbrc	r19, 1
    27d0:	40 52       	subi	r20, 0x20	; 32
    27d2:	41 93       	st	Z+, r20
    27d4:	02 d0       	rcall	.+4      	; 0x27da <__ultoa_invert+0x84>
    27d6:	a9 f7       	brne	.-22     	; 0x27c2 <__ultoa_invert+0x6c>
    27d8:	ea cf       	rjmp	.-44     	; 0x27ae <__ultoa_invert+0x58>
    27da:	b4 e0       	ldi	r27, 0x04	; 4
    27dc:	a6 95       	lsr	r26
    27de:	97 95       	ror	r25
    27e0:	87 95       	ror	r24
    27e2:	77 95       	ror	r23
    27e4:	67 95       	ror	r22
    27e6:	ba 95       	dec	r27
    27e8:	c9 f7       	brne	.-14     	; 0x27dc <__ultoa_invert+0x86>
    27ea:	00 97       	sbiw	r24, 0x00	; 0
    27ec:	61 05       	cpc	r22, r1
    27ee:	71 05       	cpc	r23, r1
    27f0:	08 95       	ret
    27f2:	9b 01       	movw	r18, r22
    27f4:	ac 01       	movw	r20, r24
    27f6:	0a 2e       	mov	r0, r26
    27f8:	06 94       	lsr	r0
    27fa:	57 95       	ror	r21
    27fc:	47 95       	ror	r20
    27fe:	37 95       	ror	r19
    2800:	27 95       	ror	r18
    2802:	ba 95       	dec	r27
    2804:	c9 f7       	brne	.-14     	; 0x27f8 <__ultoa_invert+0xa2>
    2806:	62 0f       	add	r22, r18
    2808:	73 1f       	adc	r23, r19
    280a:	84 1f       	adc	r24, r20
    280c:	95 1f       	adc	r25, r21
    280e:	a0 1d       	adc	r26, r0
    2810:	08 95       	ret

00002812 <calloc>:
    2812:	0f 93       	push	r16
    2814:	1f 93       	push	r17
    2816:	cf 93       	push	r28
    2818:	df 93       	push	r29
    281a:	86 9f       	mul	r24, r22
    281c:	80 01       	movw	r16, r0
    281e:	87 9f       	mul	r24, r23
    2820:	10 0d       	add	r17, r0
    2822:	96 9f       	mul	r25, r22
    2824:	10 0d       	add	r17, r0
    2826:	11 24       	eor	r1, r1
    2828:	c8 01       	movw	r24, r16
    282a:	0d d0       	rcall	.+26     	; 0x2846 <malloc>
    282c:	ec 01       	movw	r28, r24
    282e:	00 97       	sbiw	r24, 0x00	; 0
    2830:	21 f0       	breq	.+8      	; 0x283a <calloc+0x28>
    2832:	a8 01       	movw	r20, r16
    2834:	60 e0       	ldi	r22, 0x00	; 0
    2836:	70 e0       	ldi	r23, 0x00	; 0
    2838:	27 d1       	rcall	.+590    	; 0x2a88 <memset>
    283a:	ce 01       	movw	r24, r28
    283c:	df 91       	pop	r29
    283e:	cf 91       	pop	r28
    2840:	1f 91       	pop	r17
    2842:	0f 91       	pop	r16
    2844:	08 95       	ret

00002846 <malloc>:
    2846:	0f 93       	push	r16
    2848:	1f 93       	push	r17
    284a:	cf 93       	push	r28
    284c:	df 93       	push	r29
    284e:	82 30       	cpi	r24, 0x02	; 2
    2850:	91 05       	cpc	r25, r1
    2852:	10 f4       	brcc	.+4      	; 0x2858 <malloc+0x12>
    2854:	82 e0       	ldi	r24, 0x02	; 2
    2856:	90 e0       	ldi	r25, 0x00	; 0
    2858:	e0 91 37 04 	lds	r30, 0x0437	; 0x800437 <__flp>
    285c:	f0 91 38 04 	lds	r31, 0x0438	; 0x800438 <__flp+0x1>
    2860:	20 e0       	ldi	r18, 0x00	; 0
    2862:	30 e0       	ldi	r19, 0x00	; 0
    2864:	a0 e0       	ldi	r26, 0x00	; 0
    2866:	b0 e0       	ldi	r27, 0x00	; 0
    2868:	30 97       	sbiw	r30, 0x00	; 0
    286a:	19 f1       	breq	.+70     	; 0x28b2 <malloc+0x6c>
    286c:	40 81       	ld	r20, Z
    286e:	51 81       	ldd	r21, Z+1	; 0x01
    2870:	02 81       	ldd	r16, Z+2	; 0x02
    2872:	13 81       	ldd	r17, Z+3	; 0x03
    2874:	48 17       	cp	r20, r24
    2876:	59 07       	cpc	r21, r25
    2878:	c8 f0       	brcs	.+50     	; 0x28ac <malloc+0x66>
    287a:	84 17       	cp	r24, r20
    287c:	95 07       	cpc	r25, r21
    287e:	69 f4       	brne	.+26     	; 0x289a <malloc+0x54>
    2880:	10 97       	sbiw	r26, 0x00	; 0
    2882:	31 f0       	breq	.+12     	; 0x2890 <malloc+0x4a>
    2884:	12 96       	adiw	r26, 0x02	; 2
    2886:	0c 93       	st	X, r16
    2888:	12 97       	sbiw	r26, 0x02	; 2
    288a:	13 96       	adiw	r26, 0x03	; 3
    288c:	1c 93       	st	X, r17
    288e:	27 c0       	rjmp	.+78     	; 0x28de <malloc+0x98>
    2890:	00 93 37 04 	sts	0x0437, r16	; 0x800437 <__flp>
    2894:	10 93 38 04 	sts	0x0438, r17	; 0x800438 <__flp+0x1>
    2898:	22 c0       	rjmp	.+68     	; 0x28de <malloc+0x98>
    289a:	21 15       	cp	r18, r1
    289c:	31 05       	cpc	r19, r1
    289e:	19 f0       	breq	.+6      	; 0x28a6 <malloc+0x60>
    28a0:	42 17       	cp	r20, r18
    28a2:	53 07       	cpc	r21, r19
    28a4:	18 f4       	brcc	.+6      	; 0x28ac <malloc+0x66>
    28a6:	9a 01       	movw	r18, r20
    28a8:	bd 01       	movw	r22, r26
    28aa:	ef 01       	movw	r28, r30
    28ac:	df 01       	movw	r26, r30
    28ae:	f8 01       	movw	r30, r16
    28b0:	db cf       	rjmp	.-74     	; 0x2868 <malloc+0x22>
    28b2:	21 15       	cp	r18, r1
    28b4:	31 05       	cpc	r19, r1
    28b6:	f9 f0       	breq	.+62     	; 0x28f6 <malloc+0xb0>
    28b8:	28 1b       	sub	r18, r24
    28ba:	39 0b       	sbc	r19, r25
    28bc:	24 30       	cpi	r18, 0x04	; 4
    28be:	31 05       	cpc	r19, r1
    28c0:	80 f4       	brcc	.+32     	; 0x28e2 <malloc+0x9c>
    28c2:	8a 81       	ldd	r24, Y+2	; 0x02
    28c4:	9b 81       	ldd	r25, Y+3	; 0x03
    28c6:	61 15       	cp	r22, r1
    28c8:	71 05       	cpc	r23, r1
    28ca:	21 f0       	breq	.+8      	; 0x28d4 <malloc+0x8e>
    28cc:	fb 01       	movw	r30, r22
    28ce:	93 83       	std	Z+3, r25	; 0x03
    28d0:	82 83       	std	Z+2, r24	; 0x02
    28d2:	04 c0       	rjmp	.+8      	; 0x28dc <malloc+0x96>
    28d4:	90 93 38 04 	sts	0x0438, r25	; 0x800438 <__flp+0x1>
    28d8:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <__flp>
    28dc:	fe 01       	movw	r30, r28
    28de:	32 96       	adiw	r30, 0x02	; 2
    28e0:	44 c0       	rjmp	.+136    	; 0x296a <malloc+0x124>
    28e2:	fe 01       	movw	r30, r28
    28e4:	e2 0f       	add	r30, r18
    28e6:	f3 1f       	adc	r31, r19
    28e8:	81 93       	st	Z+, r24
    28ea:	91 93       	st	Z+, r25
    28ec:	22 50       	subi	r18, 0x02	; 2
    28ee:	31 09       	sbc	r19, r1
    28f0:	39 83       	std	Y+1, r19	; 0x01
    28f2:	28 83       	st	Y, r18
    28f4:	3a c0       	rjmp	.+116    	; 0x296a <malloc+0x124>
    28f6:	20 91 35 04 	lds	r18, 0x0435	; 0x800435 <__brkval>
    28fa:	30 91 36 04 	lds	r19, 0x0436	; 0x800436 <__brkval+0x1>
    28fe:	23 2b       	or	r18, r19
    2900:	41 f4       	brne	.+16     	; 0x2912 <malloc+0xcc>
    2902:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2906:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    290a:	30 93 36 04 	sts	0x0436, r19	; 0x800436 <__brkval+0x1>
    290e:	20 93 35 04 	sts	0x0435, r18	; 0x800435 <__brkval>
    2912:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2916:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    291a:	21 15       	cp	r18, r1
    291c:	31 05       	cpc	r19, r1
    291e:	41 f4       	brne	.+16     	; 0x2930 <malloc+0xea>
    2920:	2d b7       	in	r18, 0x3d	; 61
    2922:	3e b7       	in	r19, 0x3e	; 62
    2924:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2928:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    292c:	24 1b       	sub	r18, r20
    292e:	35 0b       	sbc	r19, r21
    2930:	e0 91 35 04 	lds	r30, 0x0435	; 0x800435 <__brkval>
    2934:	f0 91 36 04 	lds	r31, 0x0436	; 0x800436 <__brkval+0x1>
    2938:	e2 17       	cp	r30, r18
    293a:	f3 07       	cpc	r31, r19
    293c:	a0 f4       	brcc	.+40     	; 0x2966 <malloc+0x120>
    293e:	2e 1b       	sub	r18, r30
    2940:	3f 0b       	sbc	r19, r31
    2942:	28 17       	cp	r18, r24
    2944:	39 07       	cpc	r19, r25
    2946:	78 f0       	brcs	.+30     	; 0x2966 <malloc+0x120>
    2948:	ac 01       	movw	r20, r24
    294a:	4e 5f       	subi	r20, 0xFE	; 254
    294c:	5f 4f       	sbci	r21, 0xFF	; 255
    294e:	24 17       	cp	r18, r20
    2950:	35 07       	cpc	r19, r21
    2952:	48 f0       	brcs	.+18     	; 0x2966 <malloc+0x120>
    2954:	4e 0f       	add	r20, r30
    2956:	5f 1f       	adc	r21, r31
    2958:	50 93 36 04 	sts	0x0436, r21	; 0x800436 <__brkval+0x1>
    295c:	40 93 35 04 	sts	0x0435, r20	; 0x800435 <__brkval>
    2960:	81 93       	st	Z+, r24
    2962:	91 93       	st	Z+, r25
    2964:	02 c0       	rjmp	.+4      	; 0x296a <malloc+0x124>
    2966:	e0 e0       	ldi	r30, 0x00	; 0
    2968:	f0 e0       	ldi	r31, 0x00	; 0
    296a:	cf 01       	movw	r24, r30
    296c:	df 91       	pop	r29
    296e:	cf 91       	pop	r28
    2970:	1f 91       	pop	r17
    2972:	0f 91       	pop	r16
    2974:	08 95       	ret

00002976 <free>:
    2976:	cf 93       	push	r28
    2978:	df 93       	push	r29
    297a:	00 97       	sbiw	r24, 0x00	; 0
    297c:	09 f4       	brne	.+2      	; 0x2980 <free+0xa>
    297e:	81 c0       	rjmp	.+258    	; 0x2a82 <free+0x10c>
    2980:	fc 01       	movw	r30, r24
    2982:	32 97       	sbiw	r30, 0x02	; 2
    2984:	13 82       	std	Z+3, r1	; 0x03
    2986:	12 82       	std	Z+2, r1	; 0x02
    2988:	a0 91 37 04 	lds	r26, 0x0437	; 0x800437 <__flp>
    298c:	b0 91 38 04 	lds	r27, 0x0438	; 0x800438 <__flp+0x1>
    2990:	10 97       	sbiw	r26, 0x00	; 0
    2992:	81 f4       	brne	.+32     	; 0x29b4 <free+0x3e>
    2994:	20 81       	ld	r18, Z
    2996:	31 81       	ldd	r19, Z+1	; 0x01
    2998:	82 0f       	add	r24, r18
    299a:	93 1f       	adc	r25, r19
    299c:	20 91 35 04 	lds	r18, 0x0435	; 0x800435 <__brkval>
    29a0:	30 91 36 04 	lds	r19, 0x0436	; 0x800436 <__brkval+0x1>
    29a4:	28 17       	cp	r18, r24
    29a6:	39 07       	cpc	r19, r25
    29a8:	51 f5       	brne	.+84     	; 0x29fe <free+0x88>
    29aa:	f0 93 36 04 	sts	0x0436, r31	; 0x800436 <__brkval+0x1>
    29ae:	e0 93 35 04 	sts	0x0435, r30	; 0x800435 <__brkval>
    29b2:	67 c0       	rjmp	.+206    	; 0x2a82 <free+0x10c>
    29b4:	ed 01       	movw	r28, r26
    29b6:	20 e0       	ldi	r18, 0x00	; 0
    29b8:	30 e0       	ldi	r19, 0x00	; 0
    29ba:	ce 17       	cp	r28, r30
    29bc:	df 07       	cpc	r29, r31
    29be:	40 f4       	brcc	.+16     	; 0x29d0 <free+0x5a>
    29c0:	4a 81       	ldd	r20, Y+2	; 0x02
    29c2:	5b 81       	ldd	r21, Y+3	; 0x03
    29c4:	9e 01       	movw	r18, r28
    29c6:	41 15       	cp	r20, r1
    29c8:	51 05       	cpc	r21, r1
    29ca:	f1 f0       	breq	.+60     	; 0x2a08 <free+0x92>
    29cc:	ea 01       	movw	r28, r20
    29ce:	f5 cf       	rjmp	.-22     	; 0x29ba <free+0x44>
    29d0:	d3 83       	std	Z+3, r29	; 0x03
    29d2:	c2 83       	std	Z+2, r28	; 0x02
    29d4:	40 81       	ld	r20, Z
    29d6:	51 81       	ldd	r21, Z+1	; 0x01
    29d8:	84 0f       	add	r24, r20
    29da:	95 1f       	adc	r25, r21
    29dc:	c8 17       	cp	r28, r24
    29de:	d9 07       	cpc	r29, r25
    29e0:	59 f4       	brne	.+22     	; 0x29f8 <free+0x82>
    29e2:	88 81       	ld	r24, Y
    29e4:	99 81       	ldd	r25, Y+1	; 0x01
    29e6:	84 0f       	add	r24, r20
    29e8:	95 1f       	adc	r25, r21
    29ea:	02 96       	adiw	r24, 0x02	; 2
    29ec:	91 83       	std	Z+1, r25	; 0x01
    29ee:	80 83       	st	Z, r24
    29f0:	8a 81       	ldd	r24, Y+2	; 0x02
    29f2:	9b 81       	ldd	r25, Y+3	; 0x03
    29f4:	93 83       	std	Z+3, r25	; 0x03
    29f6:	82 83       	std	Z+2, r24	; 0x02
    29f8:	21 15       	cp	r18, r1
    29fa:	31 05       	cpc	r19, r1
    29fc:	29 f4       	brne	.+10     	; 0x2a08 <free+0x92>
    29fe:	f0 93 38 04 	sts	0x0438, r31	; 0x800438 <__flp+0x1>
    2a02:	e0 93 37 04 	sts	0x0437, r30	; 0x800437 <__flp>
    2a06:	3d c0       	rjmp	.+122    	; 0x2a82 <free+0x10c>
    2a08:	e9 01       	movw	r28, r18
    2a0a:	fb 83       	std	Y+3, r31	; 0x03
    2a0c:	ea 83       	std	Y+2, r30	; 0x02
    2a0e:	49 91       	ld	r20, Y+
    2a10:	59 91       	ld	r21, Y+
    2a12:	c4 0f       	add	r28, r20
    2a14:	d5 1f       	adc	r29, r21
    2a16:	ec 17       	cp	r30, r28
    2a18:	fd 07       	cpc	r31, r29
    2a1a:	61 f4       	brne	.+24     	; 0x2a34 <free+0xbe>
    2a1c:	80 81       	ld	r24, Z
    2a1e:	91 81       	ldd	r25, Z+1	; 0x01
    2a20:	84 0f       	add	r24, r20
    2a22:	95 1f       	adc	r25, r21
    2a24:	02 96       	adiw	r24, 0x02	; 2
    2a26:	e9 01       	movw	r28, r18
    2a28:	99 83       	std	Y+1, r25	; 0x01
    2a2a:	88 83       	st	Y, r24
    2a2c:	82 81       	ldd	r24, Z+2	; 0x02
    2a2e:	93 81       	ldd	r25, Z+3	; 0x03
    2a30:	9b 83       	std	Y+3, r25	; 0x03
    2a32:	8a 83       	std	Y+2, r24	; 0x02
    2a34:	e0 e0       	ldi	r30, 0x00	; 0
    2a36:	f0 e0       	ldi	r31, 0x00	; 0
    2a38:	12 96       	adiw	r26, 0x02	; 2
    2a3a:	8d 91       	ld	r24, X+
    2a3c:	9c 91       	ld	r25, X
    2a3e:	13 97       	sbiw	r26, 0x03	; 3
    2a40:	00 97       	sbiw	r24, 0x00	; 0
    2a42:	19 f0       	breq	.+6      	; 0x2a4a <free+0xd4>
    2a44:	fd 01       	movw	r30, r26
    2a46:	dc 01       	movw	r26, r24
    2a48:	f7 cf       	rjmp	.-18     	; 0x2a38 <free+0xc2>
    2a4a:	8d 91       	ld	r24, X+
    2a4c:	9c 91       	ld	r25, X
    2a4e:	11 97       	sbiw	r26, 0x01	; 1
    2a50:	9d 01       	movw	r18, r26
    2a52:	2e 5f       	subi	r18, 0xFE	; 254
    2a54:	3f 4f       	sbci	r19, 0xFF	; 255
    2a56:	82 0f       	add	r24, r18
    2a58:	93 1f       	adc	r25, r19
    2a5a:	20 91 35 04 	lds	r18, 0x0435	; 0x800435 <__brkval>
    2a5e:	30 91 36 04 	lds	r19, 0x0436	; 0x800436 <__brkval+0x1>
    2a62:	28 17       	cp	r18, r24
    2a64:	39 07       	cpc	r19, r25
    2a66:	69 f4       	brne	.+26     	; 0x2a82 <free+0x10c>
    2a68:	30 97       	sbiw	r30, 0x00	; 0
    2a6a:	29 f4       	brne	.+10     	; 0x2a76 <free+0x100>
    2a6c:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <__flp+0x1>
    2a70:	10 92 37 04 	sts	0x0437, r1	; 0x800437 <__flp>
    2a74:	02 c0       	rjmp	.+4      	; 0x2a7a <free+0x104>
    2a76:	13 82       	std	Z+3, r1	; 0x03
    2a78:	12 82       	std	Z+2, r1	; 0x02
    2a7a:	b0 93 36 04 	sts	0x0436, r27	; 0x800436 <__brkval+0x1>
    2a7e:	a0 93 35 04 	sts	0x0435, r26	; 0x800435 <__brkval>
    2a82:	df 91       	pop	r29
    2a84:	cf 91       	pop	r28
    2a86:	08 95       	ret

00002a88 <memset>:
    2a88:	dc 01       	movw	r26, r24
    2a8a:	01 c0       	rjmp	.+2      	; 0x2a8e <memset+0x6>
    2a8c:	6d 93       	st	X+, r22
    2a8e:	41 50       	subi	r20, 0x01	; 1
    2a90:	50 40       	sbci	r21, 0x00	; 0
    2a92:	e0 f7       	brcc	.-8      	; 0x2a8c <memset+0x4>
    2a94:	08 95       	ret

00002a96 <_exit>:
    2a96:	f8 94       	cli

00002a98 <__stop_program>:
    2a98:	ff cf       	rjmp	.-2      	; 0x2a98 <__stop_program>
