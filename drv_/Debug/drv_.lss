
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000019a  00800200  00002890  00002924  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002890  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007b  0080039a  0080039a  00002abe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002abe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002b1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  00002b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000032be  00000000  00000000  00002dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001897  00000000  00000000  00006082  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001540  00000000  00000000  00007919  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007d8  00000000  00000000  00008e5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c4e  00000000  00000000  00009634  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000022aa  00000000  00000000  0000a282  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000c52c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	07 c1       	rjmp	.+526    	; 0x254 <__bad_interrupt>
      46:	00 00       	nop
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__bad_interrupt>
      66:	00 00       	nop
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2240>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	e0 e9       	ldi	r30, 0x90	; 144
     22c:	f8 e2       	ldi	r31, 0x28	; 40
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	aa 39       	cpi	r26, 0x9A	; 154
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	aa e9       	ldi	r26, 0x9A	; 154
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	a5 31       	cpi	r26, 0x15	; 21
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	49 d4       	rcall	.+2194   	; 0xae2 <main>
     250:	0c 94 46 14 	jmp	0x288c	; 0x288c <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
{
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     256:	e1 e0       	ldi	r30, 0x01	; 1
     258:	f1 e0       	ldi	r31, 0x01	; 1
     25a:	80 81       	ld	r24, Z
     25c:	88 60       	ori	r24, 0x08	; 8
     25e:	80 83       	st	Z, r24
     260:	80 81       	ld	r24, Z
     262:	80 61       	ori	r24, 0x10	; 16
     264:	80 83       	st	Z, r24
     266:	80 81       	ld	r24, Z
     268:	80 62       	ori	r24, 0x20	; 32
     26a:	80 83       	st	Z, r24
     26c:	08 95       	ret

0000026e <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     26e:	e0 91 9a 03 	lds	r30, 0x039A	; 0x80039a <__data_end>
     272:	f0 91 9b 03 	lds	r31, 0x039B	; 0x80039b <__data_end+0x1>
     276:	ea 5f       	subi	r30, 0xFA	; 250
     278:	fd 4f       	sbci	r31, 0xFD	; 253
     27a:	80 81       	ld	r24, Z
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     282:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     286:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step>
     28a:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step+0x1>
     28e:	ea 5f       	subi	r30, 0xFA	; 250
     290:	fd 4f       	sbci	r31, 0xFD	; 253
     292:	80 81       	ld	r24, Z
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     29a:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     29e:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step>
     2a2:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step+0x1>
     2a6:	ea 5f       	subi	r30, 0xFA	; 250
     2a8:	fd 4f       	sbci	r31, 0xFD	; 253
     2aa:	80 81       	ld	r24, Z
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     2b2:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     2b6:	60 91 a9 03 	lds	r22, 0x03A9	; 0x8003a9 <incr>
     2ba:	70 91 aa 03 	lds	r23, 0x03AA	; 0x8003aa <incr+0x1>
     2be:	40 91 9a 03 	lds	r20, 0x039A	; 0x80039a <__data_end>
     2c2:	50 91 9b 03 	lds	r21, 0x039B	; 0x80039b <__data_end+0x1>
     2c6:	46 0f       	add	r20, r22
     2c8:	57 1f       	adc	r21, r23
     2ca:	50 93 9b 03 	sts	0x039B, r21	; 0x80039b <__data_end+0x1>
     2ce:	40 93 9a 03 	sts	0x039A, r20	; 0x80039a <__data_end>
	V_step=V_step+incr;
     2d2:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     2d6:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     2da:	26 0f       	add	r18, r22
     2dc:	37 1f       	adc	r19, r23
     2de:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     2e2:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	W_step=W_step+incr;
     2e6:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     2ea:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     2ee:	86 0f       	add	r24, r22
     2f0:	97 1f       	adc	r25, r23
     2f2:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     2f6:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	if(U_step > SINE_TABLE_SZ)
     2fa:	49 36       	cpi	r20, 0x69	; 105
     2fc:	51 40       	sbci	r21, 0x01	; 1
     2fe:	2c f0       	brlt	.+10     	; 0x30a <PWM_update+0x9c>
	U_step = 0;
     300:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <__data_end+0x1>
     304:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <__data_end>
     308:	0c c0       	rjmp	.+24     	; 0x322 <PWM_update+0xb4>
	if(U_step < 0)
     30a:	40 91 9a 03 	lds	r20, 0x039A	; 0x80039a <__data_end>
     30e:	50 91 9b 03 	lds	r21, 0x039B	; 0x80039b <__data_end+0x1>
     312:	55 23       	and	r21, r21
     314:	34 f4       	brge	.+12     	; 0x322 <PWM_update+0xb4>
	U_step = SINE_TABLE_SZ;
     316:	48 e6       	ldi	r20, 0x68	; 104
     318:	51 e0       	ldi	r21, 0x01	; 1
     31a:	50 93 9b 03 	sts	0x039B, r21	; 0x80039b <__data_end+0x1>
     31e:	40 93 9a 03 	sts	0x039A, r20	; 0x80039a <__data_end>
	
	if(V_step > SINE_TABLE_SZ)
     322:	29 36       	cpi	r18, 0x69	; 105
     324:	31 40       	sbci	r19, 0x01	; 1
     326:	2c f0       	brlt	.+10     	; 0x332 <PWM_update+0xc4>
	V_step = 0;
     328:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step+0x1>
     32c:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step>
     330:	0c c0       	rjmp	.+24     	; 0x34a <PWM_update+0xdc>
	if(V_step < 0)
     332:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     336:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     33a:	33 23       	and	r19, r19
     33c:	34 f4       	brge	.+12     	; 0x34a <PWM_update+0xdc>
	V_step = SINE_TABLE_SZ;
     33e:	28 e6       	ldi	r18, 0x68	; 104
     340:	31 e0       	ldi	r19, 0x01	; 1
     342:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     346:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     34a:	89 36       	cpi	r24, 0x69	; 105
     34c:	91 40       	sbci	r25, 0x01	; 1
     34e:	2c f0       	brlt	.+10     	; 0x35a <PWM_update+0xec>
	W_step = 0;
     350:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step+0x1>
     354:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step>
     358:	0c c0       	rjmp	.+24     	; 0x372 <PWM_update+0x104>
	if(W_step < 0)
     35a:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     35e:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     362:	99 23       	and	r25, r25
     364:	34 f4       	brge	.+12     	; 0x372 <PWM_update+0x104>
	W_step = SINE_TABLE_SZ;
     366:	88 e6       	ldi	r24, 0x68	; 104
     368:	91 e0       	ldi	r25, 0x01	; 1
     36a:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     36e:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     372:	80 91 a5 03 	lds	r24, 0x03A5	; 0x8003a5 <pwm_delay>
     376:	90 91 a6 03 	lds	r25, 0x03A6	; 0x8003a6 <pwm_delay+0x1>
     37a:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     37e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     382:	08 95       	ret

00000384 <init_motor_gpio>:
}
void init_motor_gpio()
{
	//setting pin mode to output
	sbi(DDRA,0);//digital 22 EN1
     384:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     386:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     388:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     38a:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     38c:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     38e:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     390:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     392:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     394:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     396:	47 9a       	sbi	0x08, 7	; 8
     398:	08 95       	ret

0000039a <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     39a:	4f 92       	push	r4
     39c:	5f 92       	push	r5
     39e:	6f 92       	push	r6
     3a0:	7f 92       	push	r7
     3a2:	8f 92       	push	r8
     3a4:	9f 92       	push	r9
     3a6:	af 92       	push	r10
     3a8:	bf 92       	push	r11
     3aa:	cf 92       	push	r12
     3ac:	df 92       	push	r13
     3ae:	ef 92       	push	r14
     3b0:	ff 92       	push	r15
     3b2:	0f 93       	push	r16
     3b4:	1f 93       	push	r17
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	cd b7       	in	r28, 0x3d	; 61
     3bc:	de b7       	in	r29, 0x3e	; 62
     3be:	6c 97       	sbiw	r28, 0x1c	; 28
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	de bf       	out	0x3e, r29	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	cd bf       	out	0x3d, r28	; 61
     3ca:	69 8b       	std	Y+17, r22	; 0x11
     3cc:	7a 8b       	std	Y+18, r23	; 0x12
     3ce:	8b 8b       	std	Y+19, r24	; 0x13
     3d0:	9c 8b       	std	Y+20, r25	; 0x14
     3d2:	ca 01       	movw	r24, r20
     3d4:	b9 01       	movw	r22, r18
     3d6:	e9 82       	std	Y+1, r14	; 0x01
     3d8:	fa 82       	std	Y+2, r15	; 0x02
     3da:	0b 83       	std	Y+3, r16	; 0x03
     3dc:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     3de:	c0 90 b7 03 	lds	r12, 0x03B7	; 0x8003b7 <bias>
     3e2:	d0 90 b8 03 	lds	r13, 0x03B8	; 0x8003b8 <bias+0x1>
     3e6:	e0 90 b9 03 	lds	r14, 0x03B9	; 0x8003b9 <bias+0x2>
     3ea:	f0 90 ba 03 	lds	r15, 0x03BA	; 0x8003ba <bias+0x3>
     3ee:	a7 01       	movw	r20, r14
     3f0:	96 01       	movw	r18, r12
     3f2:	0e 94 35 0a 	call	0x146a	; 0x146a <__subsf3>
     3f6:	60 93 af 03 	sts	0x03AF, r22	; 0x8003af <rate>
     3fa:	70 93 b0 03 	sts	0x03B0, r23	; 0x8003b0 <rate+0x1>
     3fe:	80 93 b1 03 	sts	0x03B1, r24	; 0x8003b1 <rate+0x2>
     402:	90 93 b2 03 	sts	0x03B2, r25	; 0x8003b2 <rate+0x3>
	angle += dt * rate;
     406:	29 81       	ldd	r18, Y+1	; 0x01
     408:	3a 81       	ldd	r19, Y+2	; 0x02
     40a:	4b 81       	ldd	r20, Y+3	; 0x03
     40c:	5c 81       	ldd	r21, Y+4	; 0x04
     40e:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     412:	20 91 db 03 	lds	r18, 0x03DB	; 0x8003db <angle>
     416:	30 91 dc 03 	lds	r19, 0x03DC	; 0x8003dc <angle+0x1>
     41a:	40 91 dd 03 	lds	r20, 0x03DD	; 0x8003dd <angle+0x2>
     41e:	50 91 de 03 	lds	r21, 0x03DE	; 0x8003de <angle+0x3>
     422:	0e 94 36 0a 	call	0x146c	; 0x146c <__addsf3>
     426:	6d 8b       	std	Y+21, r22	; 0x15
     428:	7e 8b       	std	Y+22, r23	; 0x16
     42a:	8f 8b       	std	Y+23, r24	; 0x17
     42c:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     42e:	07 ee       	ldi	r16, 0xE7	; 231
     430:	13 e0       	ldi	r17, 0x03	; 3
     432:	d8 01       	movw	r26, r16
     434:	1c 96       	adiw	r26, 0x0c	; 12
     436:	8d 90       	ld	r8, X+
     438:	9d 90       	ld	r9, X+
     43a:	ad 90       	ld	r10, X+
     43c:	bc 90       	ld	r11, X
     43e:	1f 97       	sbiw	r26, 0x0f	; 15
     440:	29 81       	ldd	r18, Y+1	; 0x01
     442:	3a 81       	ldd	r19, Y+2	; 0x02
     444:	4b 81       	ldd	r20, Y+3	; 0x03
     446:	5c 81       	ldd	r21, Y+4	; 0x04
     448:	c5 01       	movw	r24, r10
     44a:	b4 01       	movw	r22, r8
     44c:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     450:	6d 83       	std	Y+5, r22	; 0x05
     452:	7e 83       	std	Y+6, r23	; 0x06
     454:	8f 83       	std	Y+7, r24	; 0x07
     456:	98 87       	std	Y+8, r25	; 0x08
     458:	f8 01       	movw	r30, r16
     45a:	44 80       	ldd	r4, Z+4	; 0x04
     45c:	55 80       	ldd	r5, Z+5	; 0x05
     45e:	66 80       	ldd	r6, Z+6	; 0x06
     460:	77 80       	ldd	r7, Z+7	; 0x07
     462:	80 85       	ldd	r24, Z+8	; 0x08
     464:	91 85       	ldd	r25, Z+9	; 0x09
     466:	a2 85       	ldd	r26, Z+10	; 0x0a
     468:	b3 85       	ldd	r27, Z+11	; 0x0b
     46a:	8d 87       	std	Y+13, r24	; 0x0d
     46c:	9e 87       	std	Y+14, r25	; 0x0e
     46e:	af 87       	std	Y+15, r26	; 0x0f
     470:	b8 8b       	std	Y+16, r27	; 0x10
     472:	a3 01       	movw	r20, r6
     474:	92 01       	movw	r18, r4
     476:	6d 81       	ldd	r22, Y+5	; 0x05
     478:	7e 81       	ldd	r23, Y+6	; 0x06
     47a:	8f 81       	ldd	r24, Y+7	; 0x07
     47c:	98 85       	ldd	r25, Y+8	; 0x08
     47e:	f5 d7       	rcall	.+4074   	; 0x146a <__subsf3>
     480:	2d 85       	ldd	r18, Y+13	; 0x0d
     482:	3e 85       	ldd	r19, Y+14	; 0x0e
     484:	4f 85       	ldd	r20, Y+15	; 0x0f
     486:	58 89       	ldd	r21, Y+16	; 0x10
     488:	f0 d7       	rcall	.+4064   	; 0x146a <__subsf3>
     48a:	20 91 b3 03 	lds	r18, 0x03B3	; 0x8003b3 <Q_angle>
     48e:	30 91 b4 03 	lds	r19, 0x03B4	; 0x8003b4 <Q_angle+0x1>
     492:	40 91 b5 03 	lds	r20, 0x03B5	; 0x8003b5 <Q_angle+0x2>
     496:	50 91 b6 03 	lds	r21, 0x03B6	; 0x8003b6 <Q_angle+0x3>
     49a:	e8 d7       	rcall	.+4048   	; 0x146c <__addsf3>
     49c:	29 81       	ldd	r18, Y+1	; 0x01
     49e:	3a 81       	ldd	r19, Y+2	; 0x02
     4a0:	4b 81       	ldd	r20, Y+3	; 0x03
     4a2:	5c 81       	ldd	r21, Y+4	; 0x04
     4a4:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     4a8:	f8 01       	movw	r30, r16
     4aa:	20 81       	ld	r18, Z
     4ac:	31 81       	ldd	r19, Z+1	; 0x01
     4ae:	42 81       	ldd	r20, Z+2	; 0x02
     4b0:	53 81       	ldd	r21, Z+3	; 0x03
     4b2:	dc d7       	rcall	.+4024   	; 0x146c <__addsf3>
     4b4:	69 87       	std	Y+9, r22	; 0x09
     4b6:	7a 87       	std	Y+10, r23	; 0x0a
     4b8:	8b 87       	std	Y+11, r24	; 0x0b
     4ba:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     4bc:	2d 81       	ldd	r18, Y+5	; 0x05
     4be:	3e 81       	ldd	r19, Y+6	; 0x06
     4c0:	4f 81       	ldd	r20, Y+7	; 0x07
     4c2:	58 85       	ldd	r21, Y+8	; 0x08
     4c4:	c3 01       	movw	r24, r6
     4c6:	b2 01       	movw	r22, r4
     4c8:	d0 d7       	rcall	.+4000   	; 0x146a <__subsf3>
     4ca:	2b 01       	movw	r4, r22
     4cc:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     4ce:	2d 81       	ldd	r18, Y+5	; 0x05
     4d0:	3e 81       	ldd	r19, Y+6	; 0x06
     4d2:	4f 81       	ldd	r20, Y+7	; 0x07
     4d4:	58 85       	ldd	r21, Y+8	; 0x08
     4d6:	6d 85       	ldd	r22, Y+13	; 0x0d
     4d8:	7e 85       	ldd	r23, Y+14	; 0x0e
     4da:	8f 85       	ldd	r24, Y+15	; 0x0f
     4dc:	98 89       	ldd	r25, Y+16	; 0x10
     4de:	c5 d7       	rcall	.+3978   	; 0x146a <__subsf3>
     4e0:	6d 87       	std	Y+13, r22	; 0x0d
     4e2:	7e 87       	std	Y+14, r23	; 0x0e
     4e4:	8f 87       	std	Y+15, r24	; 0x0f
     4e6:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     4e8:	20 91 ab 03 	lds	r18, 0x03AB	; 0x8003ab <Q_bias>
     4ec:	30 91 ac 03 	lds	r19, 0x03AC	; 0x8003ac <Q_bias+0x1>
     4f0:	40 91 ad 03 	lds	r20, 0x03AD	; 0x8003ad <Q_bias+0x2>
     4f4:	50 91 ae 03 	lds	r21, 0x03AE	; 0x8003ae <Q_bias+0x3>
     4f8:	69 81       	ldd	r22, Y+1	; 0x01
     4fa:	7a 81       	ldd	r23, Y+2	; 0x02
     4fc:	8b 81       	ldd	r24, Y+3	; 0x03
     4fe:	9c 81       	ldd	r25, Y+4	; 0x04
     500:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     504:	9b 01       	movw	r18, r22
     506:	ac 01       	movw	r20, r24
     508:	c5 01       	movw	r24, r10
     50a:	b4 01       	movw	r22, r8
     50c:	af d7       	rcall	.+3934   	; 0x146c <__addsf3>
     50e:	69 8f       	std	Y+25, r22	; 0x19
     510:	7a 8f       	std	Y+26, r23	; 0x1a
     512:	8b 8f       	std	Y+27, r24	; 0x1b
     514:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     516:	20 91 d3 03 	lds	r18, 0x03D3	; 0x8003d3 <R_measure>
     51a:	30 91 d4 03 	lds	r19, 0x03D4	; 0x8003d4 <R_measure+0x1>
     51e:	40 91 d5 03 	lds	r20, 0x03D5	; 0x8003d5 <R_measure+0x2>
     522:	50 91 d6 03 	lds	r21, 0x03D6	; 0x8003d6 <R_measure+0x3>
     526:	69 85       	ldd	r22, Y+9	; 0x09
     528:	7a 85       	ldd	r23, Y+10	; 0x0a
     52a:	8b 85       	ldd	r24, Y+11	; 0x0b
     52c:	9c 85       	ldd	r25, Y+12	; 0x0c
     52e:	9e d7       	rcall	.+3900   	; 0x146c <__addsf3>
     530:	4b 01       	movw	r8, r22
     532:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     534:	9b 01       	movw	r18, r22
     536:	ac 01       	movw	r20, r24
     538:	69 85       	ldd	r22, Y+9	; 0x09
     53a:	7a 85       	ldd	r23, Y+10	; 0x0a
     53c:	8b 85       	ldd	r24, Y+11	; 0x0b
     53e:	9c 85       	ldd	r25, Y+12	; 0x0c
     540:	0e 94 00 0b 	call	0x1600	; 0x1600 <__divsf3>
     544:	69 83       	std	Y+1, r22	; 0x01
     546:	7a 83       	std	Y+2, r23	; 0x02
     548:	8b 83       	std	Y+3, r24	; 0x03
     54a:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     54c:	a5 01       	movw	r20, r10
     54e:	94 01       	movw	r18, r8
     550:	6d 85       	ldd	r22, Y+13	; 0x0d
     552:	7e 85       	ldd	r23, Y+14	; 0x0e
     554:	8f 85       	ldd	r24, Y+15	; 0x0f
     556:	98 89       	ldd	r25, Y+16	; 0x10
     558:	0e 94 00 0b 	call	0x1600	; 0x1600 <__divsf3>
     55c:	6d 83       	std	Y+5, r22	; 0x05
     55e:	7e 83       	std	Y+6, r23	; 0x06
     560:	8f 83       	std	Y+7, r24	; 0x07
     562:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     564:	2d 89       	ldd	r18, Y+21	; 0x15
     566:	3e 89       	ldd	r19, Y+22	; 0x16
     568:	4f 89       	ldd	r20, Y+23	; 0x17
     56a:	58 8d       	ldd	r21, Y+24	; 0x18
     56c:	69 89       	ldd	r22, Y+17	; 0x11
     56e:	7a 89       	ldd	r23, Y+18	; 0x12
     570:	8b 89       	ldd	r24, Y+19	; 0x13
     572:	9c 89       	ldd	r25, Y+20	; 0x14
     574:	7a d7       	rcall	.+3828   	; 0x146a <__subsf3>
     576:	69 8b       	std	Y+17, r22	; 0x11
     578:	7a 8b       	std	Y+18, r23	; 0x12
     57a:	8b 8b       	std	Y+19, r24	; 0x13
     57c:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     57e:	9b 01       	movw	r18, r22
     580:	ac 01       	movw	r20, r24
     582:	69 81       	ldd	r22, Y+1	; 0x01
     584:	7a 81       	ldd	r23, Y+2	; 0x02
     586:	8b 81       	ldd	r24, Y+3	; 0x03
     588:	9c 81       	ldd	r25, Y+4	; 0x04
     58a:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     58e:	9b 01       	movw	r18, r22
     590:	ac 01       	movw	r20, r24
     592:	6d 89       	ldd	r22, Y+21	; 0x15
     594:	7e 89       	ldd	r23, Y+22	; 0x16
     596:	8f 89       	ldd	r24, Y+23	; 0x17
     598:	98 8d       	ldd	r25, Y+24	; 0x18
     59a:	68 d7       	rcall	.+3792   	; 0x146c <__addsf3>
     59c:	4b 01       	movw	r8, r22
     59e:	5c 01       	movw	r10, r24
     5a0:	60 93 db 03 	sts	0x03DB, r22	; 0x8003db <angle>
     5a4:	70 93 dc 03 	sts	0x03DC, r23	; 0x8003dc <angle+0x1>
     5a8:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <angle+0x2>
     5ac:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <angle+0x3>
	bias += K[1] * y;
     5b0:	29 89       	ldd	r18, Y+17	; 0x11
     5b2:	3a 89       	ldd	r19, Y+18	; 0x12
     5b4:	4b 89       	ldd	r20, Y+19	; 0x13
     5b6:	5c 89       	ldd	r21, Y+20	; 0x14
     5b8:	6d 81       	ldd	r22, Y+5	; 0x05
     5ba:	7e 81       	ldd	r23, Y+6	; 0x06
     5bc:	8f 81       	ldd	r24, Y+7	; 0x07
     5be:	98 85       	ldd	r25, Y+8	; 0x08
     5c0:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     5c4:	9b 01       	movw	r18, r22
     5c6:	ac 01       	movw	r20, r24
     5c8:	c7 01       	movw	r24, r14
     5ca:	b6 01       	movw	r22, r12
     5cc:	4f d7       	rcall	.+3742   	; 0x146c <__addsf3>
     5ce:	60 93 b7 03 	sts	0x03B7, r22	; 0x8003b7 <bias>
     5d2:	70 93 b8 03 	sts	0x03B8, r23	; 0x8003b8 <bias+0x1>
     5d6:	80 93 b9 03 	sts	0x03B9, r24	; 0x8003b9 <bias+0x2>
     5da:	90 93 ba 03 	sts	0x03BA, r25	; 0x8003ba <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     5de:	29 81       	ldd	r18, Y+1	; 0x01
     5e0:	3a 81       	ldd	r19, Y+2	; 0x02
     5e2:	4b 81       	ldd	r20, Y+3	; 0x03
     5e4:	5c 81       	ldd	r21, Y+4	; 0x04
     5e6:	69 85       	ldd	r22, Y+9	; 0x09
     5e8:	7a 85       	ldd	r23, Y+10	; 0x0a
     5ea:	8b 85       	ldd	r24, Y+11	; 0x0b
     5ec:	9c 85       	ldd	r25, Y+12	; 0x0c
     5ee:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     5f2:	9b 01       	movw	r18, r22
     5f4:	ac 01       	movw	r20, r24
     5f6:	69 85       	ldd	r22, Y+9	; 0x09
     5f8:	7a 85       	ldd	r23, Y+10	; 0x0a
     5fa:	8b 85       	ldd	r24, Y+11	; 0x0b
     5fc:	9c 85       	ldd	r25, Y+12	; 0x0c
     5fe:	35 d7       	rcall	.+3690   	; 0x146a <__subsf3>
     600:	d8 01       	movw	r26, r16
     602:	6d 93       	st	X+, r22
     604:	7d 93       	st	X+, r23
     606:	8d 93       	st	X+, r24
     608:	9c 93       	st	X, r25
     60a:	13 97       	sbiw	r26, 0x03	; 3
	P[0][1] -= K[0] * P01_temp;
     60c:	29 81       	ldd	r18, Y+1	; 0x01
     60e:	3a 81       	ldd	r19, Y+2	; 0x02
     610:	4b 81       	ldd	r20, Y+3	; 0x03
     612:	5c 81       	ldd	r21, Y+4	; 0x04
     614:	c3 01       	movw	r24, r6
     616:	b2 01       	movw	r22, r4
     618:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     61c:	9b 01       	movw	r18, r22
     61e:	ac 01       	movw	r20, r24
     620:	c3 01       	movw	r24, r6
     622:	b2 01       	movw	r22, r4
     624:	22 d7       	rcall	.+3652   	; 0x146a <__subsf3>
     626:	f8 01       	movw	r30, r16
     628:	64 83       	std	Z+4, r22	; 0x04
     62a:	75 83       	std	Z+5, r23	; 0x05
     62c:	86 83       	std	Z+6, r24	; 0x06
     62e:	97 83       	std	Z+7, r25	; 0x07
	P[1][0] -= K[1] * P00_temp;
     630:	2d 81       	ldd	r18, Y+5	; 0x05
     632:	3e 81       	ldd	r19, Y+6	; 0x06
     634:	4f 81       	ldd	r20, Y+7	; 0x07
     636:	58 85       	ldd	r21, Y+8	; 0x08
     638:	69 85       	ldd	r22, Y+9	; 0x09
     63a:	7a 85       	ldd	r23, Y+10	; 0x0a
     63c:	8b 85       	ldd	r24, Y+11	; 0x0b
     63e:	9c 85       	ldd	r25, Y+12	; 0x0c
     640:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     644:	9b 01       	movw	r18, r22
     646:	ac 01       	movw	r20, r24
     648:	6d 85       	ldd	r22, Y+13	; 0x0d
     64a:	7e 85       	ldd	r23, Y+14	; 0x0e
     64c:	8f 85       	ldd	r24, Y+15	; 0x0f
     64e:	98 89       	ldd	r25, Y+16	; 0x10
     650:	0c d7       	rcall	.+3608   	; 0x146a <__subsf3>
     652:	d8 01       	movw	r26, r16
     654:	18 96       	adiw	r26, 0x08	; 8
     656:	6d 93       	st	X+, r22
     658:	7d 93       	st	X+, r23
     65a:	8d 93       	st	X+, r24
     65c:	9c 93       	st	X, r25
     65e:	1b 97       	sbiw	r26, 0x0b	; 11
	P[1][1] -= K[1] * P01_temp;
     660:	2d 81       	ldd	r18, Y+5	; 0x05
     662:	3e 81       	ldd	r19, Y+6	; 0x06
     664:	4f 81       	ldd	r20, Y+7	; 0x07
     666:	58 85       	ldd	r21, Y+8	; 0x08
     668:	c3 01       	movw	r24, r6
     66a:	b2 01       	movw	r22, r4
     66c:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     670:	9b 01       	movw	r18, r22
     672:	ac 01       	movw	r20, r24
     674:	69 8d       	ldd	r22, Y+25	; 0x19
     676:	7a 8d       	ldd	r23, Y+26	; 0x1a
     678:	8b 8d       	ldd	r24, Y+27	; 0x1b
     67a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     67c:	f6 d6       	rcall	.+3564   	; 0x146a <__subsf3>
     67e:	f8 01       	movw	r30, r16
     680:	64 87       	std	Z+12, r22	; 0x0c
     682:	75 87       	std	Z+13, r23	; 0x0d
     684:	86 87       	std	Z+14, r24	; 0x0e
     686:	97 87       	std	Z+15, r25	; 0x0f

	return angle;
};
     688:	c5 01       	movw	r24, r10
     68a:	b4 01       	movw	r22, r8
     68c:	6c 96       	adiw	r28, 0x1c	; 28
     68e:	0f b6       	in	r0, 0x3f	; 63
     690:	f8 94       	cli
     692:	de bf       	out	0x3e, r29	; 62
     694:	0f be       	out	0x3f, r0	; 63
     696:	cd bf       	out	0x3d, r28	; 61
     698:	df 91       	pop	r29
     69a:	cf 91       	pop	r28
     69c:	1f 91       	pop	r17
     69e:	0f 91       	pop	r16
     6a0:	ff 90       	pop	r15
     6a2:	ef 90       	pop	r14
     6a4:	df 90       	pop	r13
     6a6:	cf 90       	pop	r12
     6a8:	bf 90       	pop	r11
     6aa:	af 90       	pop	r10
     6ac:	9f 90       	pop	r9
     6ae:	8f 90       	pop	r8
     6b0:	7f 90       	pop	r7
     6b2:	6f 90       	pop	r6
     6b4:	5f 90       	pop	r5
     6b6:	4f 90       	pop	r4
     6b8:	08 95       	ret

000006ba <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     6ba:	8f e6       	ldi	r24, 0x6F	; 111
     6bc:	92 e1       	ldi	r25, 0x12	; 18
     6be:	a3 e8       	ldi	r26, 0x83	; 131
     6c0:	ba e3       	ldi	r27, 0x3A	; 58
     6c2:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <Q_angle>
     6c6:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <Q_angle+0x1>
     6ca:	a0 93 b5 03 	sts	0x03B5, r26	; 0x8003b5 <Q_angle+0x2>
     6ce:	b0 93 b6 03 	sts	0x03B6, r27	; 0x8003b6 <Q_angle+0x3>
	Q_bias = 0.003f;
     6d2:	86 ea       	ldi	r24, 0xA6	; 166
     6d4:	9b e9       	ldi	r25, 0x9B	; 155
     6d6:	a4 e4       	ldi	r26, 0x44	; 68
     6d8:	bb e3       	ldi	r27, 0x3B	; 59
     6da:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <Q_bias>
     6de:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <Q_bias+0x1>
     6e2:	a0 93 ad 03 	sts	0x03AD, r26	; 0x8003ad <Q_bias+0x2>
     6e6:	b0 93 ae 03 	sts	0x03AE, r27	; 0x8003ae <Q_bias+0x3>
	R_measure = 0.03f;
     6ea:	8f e8       	ldi	r24, 0x8F	; 143
     6ec:	92 ec       	ldi	r25, 0xC2	; 194
     6ee:	a5 ef       	ldi	r26, 0xF5	; 245
     6f0:	bc e3       	ldi	r27, 0x3C	; 60
     6f2:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <R_measure>
     6f6:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <R_measure+0x1>
     6fa:	a0 93 d5 03 	sts	0x03D5, r26	; 0x8003d5 <R_measure+0x2>
     6fe:	b0 93 d6 03 	sts	0x03D6, r27	; 0x8003d6 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     702:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <angle>
     706:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <angle+0x1>
     70a:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <angle+0x2>
     70e:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <angle+0x3>
	bias = 0.0f; // Reset bias
     712:	10 92 b7 03 	sts	0x03B7, r1	; 0x8003b7 <bias>
     716:	10 92 b8 03 	sts	0x03B8, r1	; 0x8003b8 <bias+0x1>
     71a:	10 92 b9 03 	sts	0x03B9, r1	; 0x8003b9 <bias+0x2>
     71e:	10 92 ba 03 	sts	0x03BA, r1	; 0x8003ba <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     722:	e7 ee       	ldi	r30, 0xE7	; 231
     724:	f3 e0       	ldi	r31, 0x03	; 3
     726:	10 82       	st	Z, r1
     728:	11 82       	std	Z+1, r1	; 0x01
     72a:	12 82       	std	Z+2, r1	; 0x02
     72c:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     72e:	14 82       	std	Z+4, r1	; 0x04
     730:	15 82       	std	Z+5, r1	; 0x05
     732:	16 82       	std	Z+6, r1	; 0x06
     734:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     736:	10 86       	std	Z+8, r1	; 0x08
     738:	11 86       	std	Z+9, r1	; 0x09
     73a:	12 86       	std	Z+10, r1	; 0x0a
     73c:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     73e:	14 86       	std	Z+12, r1	; 0x0c
     740:	15 86       	std	Z+13, r1	; 0x0d
     742:	16 86       	std	Z+14, r1	; 0x0e
     744:	17 86       	std	Z+15, r1	; 0x0f
     746:	08 95       	ret

00000748 <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     748:	4f 92       	push	r4
     74a:	5f 92       	push	r5
     74c:	6f 92       	push	r6
     74e:	7f 92       	push	r7
     750:	8f 92       	push	r8
     752:	9f 92       	push	r9
     754:	af 92       	push	r10
     756:	bf 92       	push	r11
     758:	cf 92       	push	r12
     75a:	df 92       	push	r13
     75c:	ef 92       	push	r14
     75e:	ff 92       	push	r15
     760:	0f 93       	push	r16
     762:	1f 93       	push	r17
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	cd b7       	in	r28, 0x3d	; 61
     76a:	de b7       	in	r29, 0x3e	; 62
     76c:	6c 97       	sbiw	r28, 0x1c	; 28
     76e:	0f b6       	in	r0, 0x3f	; 63
     770:	f8 94       	cli
     772:	de bf       	out	0x3e, r29	; 62
     774:	0f be       	out	0x3f, r0	; 63
     776:	cd bf       	out	0x3d, r28	; 61
     778:	69 8b       	std	Y+17, r22	; 0x11
     77a:	7a 8b       	std	Y+18, r23	; 0x12
     77c:	8b 8b       	std	Y+19, r24	; 0x13
     77e:	9c 8b       	std	Y+20, r25	; 0x14
     780:	ca 01       	movw	r24, r20
     782:	b9 01       	movw	r22, r18
     784:	e9 82       	std	Y+1, r14	; 0x01
     786:	fa 82       	std	Y+2, r15	; 0x02
     788:	0b 83       	std	Y+3, r16	; 0x03
     78a:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     78c:	c0 90 d7 03 	lds	r12, 0x03D7	; 0x8003d7 <bias_1>
     790:	d0 90 d8 03 	lds	r13, 0x03D8	; 0x8003d8 <bias_1+0x1>
     794:	e0 90 d9 03 	lds	r14, 0x03D9	; 0x8003d9 <bias_1+0x2>
     798:	f0 90 da 03 	lds	r15, 0x03DA	; 0x8003da <bias_1+0x3>
     79c:	a7 01       	movw	r20, r14
     79e:	96 01       	movw	r18, r12
     7a0:	64 d6       	rcall	.+3272   	; 0x146a <__subsf3>
     7a2:	60 93 cf 03 	sts	0x03CF, r22	; 0x8003cf <rate_1>
     7a6:	70 93 d0 03 	sts	0x03D0, r23	; 0x8003d0 <rate_1+0x1>
     7aa:	80 93 d1 03 	sts	0x03D1, r24	; 0x8003d1 <rate_1+0x2>
     7ae:	90 93 d2 03 	sts	0x03D2, r25	; 0x8003d2 <rate_1+0x3>
	angle_1 += dt * rate_1;
     7b2:	29 81       	ldd	r18, Y+1	; 0x01
     7b4:	3a 81       	ldd	r19, Y+2	; 0x02
     7b6:	4b 81       	ldd	r20, Y+3	; 0x03
     7b8:	5c 81       	ldd	r21, Y+4	; 0x04
     7ba:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     7be:	20 91 bb 03 	lds	r18, 0x03BB	; 0x8003bb <angle_1>
     7c2:	30 91 bc 03 	lds	r19, 0x03BC	; 0x8003bc <angle_1+0x1>
     7c6:	40 91 bd 03 	lds	r20, 0x03BD	; 0x8003bd <angle_1+0x2>
     7ca:	50 91 be 03 	lds	r21, 0x03BE	; 0x8003be <angle_1+0x3>
     7ce:	4e d6       	rcall	.+3228   	; 0x146c <__addsf3>
     7d0:	6d 8b       	std	Y+21, r22	; 0x15
     7d2:	7e 8b       	std	Y+22, r23	; 0x16
     7d4:	8f 8b       	std	Y+23, r24	; 0x17
     7d6:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     7d8:	0f eb       	ldi	r16, 0xBF	; 191
     7da:	13 e0       	ldi	r17, 0x03	; 3
     7dc:	d8 01       	movw	r26, r16
     7de:	1c 96       	adiw	r26, 0x0c	; 12
     7e0:	8d 90       	ld	r8, X+
     7e2:	9d 90       	ld	r9, X+
     7e4:	ad 90       	ld	r10, X+
     7e6:	bc 90       	ld	r11, X
     7e8:	1f 97       	sbiw	r26, 0x0f	; 15
     7ea:	29 81       	ldd	r18, Y+1	; 0x01
     7ec:	3a 81       	ldd	r19, Y+2	; 0x02
     7ee:	4b 81       	ldd	r20, Y+3	; 0x03
     7f0:	5c 81       	ldd	r21, Y+4	; 0x04
     7f2:	c5 01       	movw	r24, r10
     7f4:	b4 01       	movw	r22, r8
     7f6:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     7fa:	6d 83       	std	Y+5, r22	; 0x05
     7fc:	7e 83       	std	Y+6, r23	; 0x06
     7fe:	8f 83       	std	Y+7, r24	; 0x07
     800:	98 87       	std	Y+8, r25	; 0x08
     802:	f8 01       	movw	r30, r16
     804:	44 80       	ldd	r4, Z+4	; 0x04
     806:	55 80       	ldd	r5, Z+5	; 0x05
     808:	66 80       	ldd	r6, Z+6	; 0x06
     80a:	77 80       	ldd	r7, Z+7	; 0x07
     80c:	80 85       	ldd	r24, Z+8	; 0x08
     80e:	91 85       	ldd	r25, Z+9	; 0x09
     810:	a2 85       	ldd	r26, Z+10	; 0x0a
     812:	b3 85       	ldd	r27, Z+11	; 0x0b
     814:	8d 87       	std	Y+13, r24	; 0x0d
     816:	9e 87       	std	Y+14, r25	; 0x0e
     818:	af 87       	std	Y+15, r26	; 0x0f
     81a:	b8 8b       	std	Y+16, r27	; 0x10
     81c:	a3 01       	movw	r20, r6
     81e:	92 01       	movw	r18, r4
     820:	6d 81       	ldd	r22, Y+5	; 0x05
     822:	7e 81       	ldd	r23, Y+6	; 0x06
     824:	8f 81       	ldd	r24, Y+7	; 0x07
     826:	98 85       	ldd	r25, Y+8	; 0x08
     828:	20 d6       	rcall	.+3136   	; 0x146a <__subsf3>
     82a:	2d 85       	ldd	r18, Y+13	; 0x0d
     82c:	3e 85       	ldd	r19, Y+14	; 0x0e
     82e:	4f 85       	ldd	r20, Y+15	; 0x0f
     830:	58 89       	ldd	r21, Y+16	; 0x10
     832:	1b d6       	rcall	.+3126   	; 0x146a <__subsf3>
     834:	20 91 f7 03 	lds	r18, 0x03F7	; 0x8003f7 <Q_angle_1>
     838:	30 91 f8 03 	lds	r19, 0x03F8	; 0x8003f8 <Q_angle_1+0x1>
     83c:	40 91 f9 03 	lds	r20, 0x03F9	; 0x8003f9 <Q_angle_1+0x2>
     840:	50 91 fa 03 	lds	r21, 0x03FA	; 0x8003fa <Q_angle_1+0x3>
     844:	13 d6       	rcall	.+3110   	; 0x146c <__addsf3>
     846:	29 81       	ldd	r18, Y+1	; 0x01
     848:	3a 81       	ldd	r19, Y+2	; 0x02
     84a:	4b 81       	ldd	r20, Y+3	; 0x03
     84c:	5c 81       	ldd	r21, Y+4	; 0x04
     84e:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     852:	f8 01       	movw	r30, r16
     854:	20 81       	ld	r18, Z
     856:	31 81       	ldd	r19, Z+1	; 0x01
     858:	42 81       	ldd	r20, Z+2	; 0x02
     85a:	53 81       	ldd	r21, Z+3	; 0x03
     85c:	07 d6       	rcall	.+3086   	; 0x146c <__addsf3>
     85e:	69 87       	std	Y+9, r22	; 0x09
     860:	7a 87       	std	Y+10, r23	; 0x0a
     862:	8b 87       	std	Y+11, r24	; 0x0b
     864:	9c 87       	std	Y+12, r25	; 0x0c
	P_1[0][1] -= dt * P_1[1][1];
     866:	2d 81       	ldd	r18, Y+5	; 0x05
     868:	3e 81       	ldd	r19, Y+6	; 0x06
     86a:	4f 81       	ldd	r20, Y+7	; 0x07
     86c:	58 85       	ldd	r21, Y+8	; 0x08
     86e:	c3 01       	movw	r24, r6
     870:	b2 01       	movw	r22, r4
     872:	fb d5       	rcall	.+3062   	; 0x146a <__subsf3>
     874:	2b 01       	movw	r4, r22
     876:	3c 01       	movw	r6, r24
	P_1[1][0] -= dt * P_1[1][1];
     878:	2d 81       	ldd	r18, Y+5	; 0x05
     87a:	3e 81       	ldd	r19, Y+6	; 0x06
     87c:	4f 81       	ldd	r20, Y+7	; 0x07
     87e:	58 85       	ldd	r21, Y+8	; 0x08
     880:	6d 85       	ldd	r22, Y+13	; 0x0d
     882:	7e 85       	ldd	r23, Y+14	; 0x0e
     884:	8f 85       	ldd	r24, Y+15	; 0x0f
     886:	98 89       	ldd	r25, Y+16	; 0x10
     888:	f0 d5       	rcall	.+3040   	; 0x146a <__subsf3>
     88a:	6d 87       	std	Y+13, r22	; 0x0d
     88c:	7e 87       	std	Y+14, r23	; 0x0e
     88e:	8f 87       	std	Y+15, r24	; 0x0f
     890:	98 8b       	std	Y+16, r25	; 0x10
	P_1[1][1] += Q_bias_1 * dt;
     892:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <Q_bias_1>
     896:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <Q_bias_1+0x1>
     89a:	40 91 e5 03 	lds	r20, 0x03E5	; 0x8003e5 <Q_bias_1+0x2>
     89e:	50 91 e6 03 	lds	r21, 0x03E6	; 0x8003e6 <Q_bias_1+0x3>
     8a2:	69 81       	ldd	r22, Y+1	; 0x01
     8a4:	7a 81       	ldd	r23, Y+2	; 0x02
     8a6:	8b 81       	ldd	r24, Y+3	; 0x03
     8a8:	9c 81       	ldd	r25, Y+4	; 0x04
     8aa:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__mulsf3>
     8ae:	9b 01       	movw	r18, r22
     8b0:	ac 01       	movw	r20, r24
     8b2:	c5 01       	movw	r24, r10
     8b4:	b4 01       	movw	r22, r8
     8b6:	da d5       	rcall	.+2996   	; 0x146c <__addsf3>
     8b8:	69 8f       	std	Y+25, r22	; 0x19
     8ba:	7a 8f       	std	Y+26, r23	; 0x1a
     8bc:	8b 8f       	std	Y+27, r24	; 0x1b
     8be:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     8c0:	20 91 df 03 	lds	r18, 0x03DF	; 0x8003df <R_measure_1>
     8c4:	30 91 e0 03 	lds	r19, 0x03E0	; 0x8003e0 <R_measure_1+0x1>
     8c8:	40 91 e1 03 	lds	r20, 0x03E1	; 0x8003e1 <R_measure_1+0x2>
     8cc:	50 91 e2 03 	lds	r21, 0x03E2	; 0x8003e2 <R_measure_1+0x3>
     8d0:	69 85       	ldd	r22, Y+9	; 0x09
     8d2:	7a 85       	ldd	r23, Y+10	; 0x0a
     8d4:	8b 85       	ldd	r24, Y+11	; 0x0b
     8d6:	9c 85       	ldd	r25, Y+12	; 0x0c
     8d8:	c9 d5       	rcall	.+2962   	; 0x146c <__addsf3>
     8da:	4b 01       	movw	r8, r22
     8dc:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     8de:	9b 01       	movw	r18, r22
     8e0:	ac 01       	movw	r20, r24
     8e2:	69 85       	ldd	r22, Y+9	; 0x09
     8e4:	7a 85       	ldd	r23, Y+10	; 0x0a
     8e6:	8b 85       	ldd	r24, Y+11	; 0x0b
     8e8:	9c 85       	ldd	r25, Y+12	; 0x0c
     8ea:	8a d6       	rcall	.+3348   	; 0x1600 <__divsf3>
     8ec:	69 83       	std	Y+1, r22	; 0x01
     8ee:	7a 83       	std	Y+2, r23	; 0x02
     8f0:	8b 83       	std	Y+3, r24	; 0x03
     8f2:	9c 83       	std	Y+4, r25	; 0x04
	K_1[1] = P_1[1][0] / S_1;
     8f4:	a5 01       	movw	r20, r10
     8f6:	94 01       	movw	r18, r8
     8f8:	6d 85       	ldd	r22, Y+13	; 0x0d
     8fa:	7e 85       	ldd	r23, Y+14	; 0x0e
     8fc:	8f 85       	ldd	r24, Y+15	; 0x0f
     8fe:	98 89       	ldd	r25, Y+16	; 0x10
     900:	7f d6       	rcall	.+3326   	; 0x1600 <__divsf3>
     902:	6d 83       	std	Y+5, r22	; 0x05
     904:	7e 83       	std	Y+6, r23	; 0x06
     906:	8f 83       	std	Y+7, r24	; 0x07
     908:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     90a:	2d 89       	ldd	r18, Y+21	; 0x15
     90c:	3e 89       	ldd	r19, Y+22	; 0x16
     90e:	4f 89       	ldd	r20, Y+23	; 0x17
     910:	58 8d       	ldd	r21, Y+24	; 0x18
     912:	69 89       	ldd	r22, Y+17	; 0x11
     914:	7a 89       	ldd	r23, Y+18	; 0x12
     916:	8b 89       	ldd	r24, Y+19	; 0x13
     918:	9c 89       	ldd	r25, Y+20	; 0x14
     91a:	a7 d5       	rcall	.+2894   	; 0x146a <__subsf3>
     91c:	69 8b       	std	Y+17, r22	; 0x11
     91e:	7a 8b       	std	Y+18, r23	; 0x12
     920:	8b 8b       	std	Y+19, r24	; 0x13
     922:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     924:	9b 01       	movw	r18, r22
     926:	ac 01       	movw	r20, r24
     928:	69 81       	ldd	r22, Y+1	; 0x01
     92a:	7a 81       	ldd	r23, Y+2	; 0x02
     92c:	8b 81       	ldd	r24, Y+3	; 0x03
     92e:	9c 81       	ldd	r25, Y+4	; 0x04
     930:	de d7       	rcall	.+4028   	; 0x18ee <__mulsf3>
     932:	9b 01       	movw	r18, r22
     934:	ac 01       	movw	r20, r24
     936:	6d 89       	ldd	r22, Y+21	; 0x15
     938:	7e 89       	ldd	r23, Y+22	; 0x16
     93a:	8f 89       	ldd	r24, Y+23	; 0x17
     93c:	98 8d       	ldd	r25, Y+24	; 0x18
     93e:	96 d5       	rcall	.+2860   	; 0x146c <__addsf3>
     940:	4b 01       	movw	r8, r22
     942:	5c 01       	movw	r10, r24
     944:	60 93 bb 03 	sts	0x03BB, r22	; 0x8003bb <angle_1>
     948:	70 93 bc 03 	sts	0x03BC, r23	; 0x8003bc <angle_1+0x1>
     94c:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <angle_1+0x2>
     950:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <angle_1+0x3>
	bias_1 += K_1[1] * y_1;
     954:	29 89       	ldd	r18, Y+17	; 0x11
     956:	3a 89       	ldd	r19, Y+18	; 0x12
     958:	4b 89       	ldd	r20, Y+19	; 0x13
     95a:	5c 89       	ldd	r21, Y+20	; 0x14
     95c:	6d 81       	ldd	r22, Y+5	; 0x05
     95e:	7e 81       	ldd	r23, Y+6	; 0x06
     960:	8f 81       	ldd	r24, Y+7	; 0x07
     962:	98 85       	ldd	r25, Y+8	; 0x08
     964:	c4 d7       	rcall	.+3976   	; 0x18ee <__mulsf3>
     966:	9b 01       	movw	r18, r22
     968:	ac 01       	movw	r20, r24
     96a:	c7 01       	movw	r24, r14
     96c:	b6 01       	movw	r22, r12
     96e:	7e d5       	rcall	.+2812   	; 0x146c <__addsf3>
     970:	60 93 d7 03 	sts	0x03D7, r22	; 0x8003d7 <bias_1>
     974:	70 93 d8 03 	sts	0x03D8, r23	; 0x8003d8 <bias_1+0x1>
     978:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <bias_1+0x2>
     97c:	90 93 da 03 	sts	0x03DA, r25	; 0x8003da <bias_1+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     980:	29 81       	ldd	r18, Y+1	; 0x01
     982:	3a 81       	ldd	r19, Y+2	; 0x02
     984:	4b 81       	ldd	r20, Y+3	; 0x03
     986:	5c 81       	ldd	r21, Y+4	; 0x04
     988:	69 85       	ldd	r22, Y+9	; 0x09
     98a:	7a 85       	ldd	r23, Y+10	; 0x0a
     98c:	8b 85       	ldd	r24, Y+11	; 0x0b
     98e:	9c 85       	ldd	r25, Y+12	; 0x0c
     990:	ae d7       	rcall	.+3932   	; 0x18ee <__mulsf3>
     992:	9b 01       	movw	r18, r22
     994:	ac 01       	movw	r20, r24
     996:	69 85       	ldd	r22, Y+9	; 0x09
     998:	7a 85       	ldd	r23, Y+10	; 0x0a
     99a:	8b 85       	ldd	r24, Y+11	; 0x0b
     99c:	9c 85       	ldd	r25, Y+12	; 0x0c
     99e:	65 d5       	rcall	.+2762   	; 0x146a <__subsf3>
     9a0:	d8 01       	movw	r26, r16
     9a2:	6d 93       	st	X+, r22
     9a4:	7d 93       	st	X+, r23
     9a6:	8d 93       	st	X+, r24
     9a8:	9c 93       	st	X, r25
     9aa:	13 97       	sbiw	r26, 0x03	; 3
	P_1[0][1] -= K_1[0] * P01_temp_1;
     9ac:	29 81       	ldd	r18, Y+1	; 0x01
     9ae:	3a 81       	ldd	r19, Y+2	; 0x02
     9b0:	4b 81       	ldd	r20, Y+3	; 0x03
     9b2:	5c 81       	ldd	r21, Y+4	; 0x04
     9b4:	c3 01       	movw	r24, r6
     9b6:	b2 01       	movw	r22, r4
     9b8:	9a d7       	rcall	.+3892   	; 0x18ee <__mulsf3>
     9ba:	9b 01       	movw	r18, r22
     9bc:	ac 01       	movw	r20, r24
     9be:	c3 01       	movw	r24, r6
     9c0:	b2 01       	movw	r22, r4
     9c2:	53 d5       	rcall	.+2726   	; 0x146a <__subsf3>
     9c4:	f8 01       	movw	r30, r16
     9c6:	64 83       	std	Z+4, r22	; 0x04
     9c8:	75 83       	std	Z+5, r23	; 0x05
     9ca:	86 83       	std	Z+6, r24	; 0x06
     9cc:	97 83       	std	Z+7, r25	; 0x07
	P_1[1][0] -= K_1[1] * P00_temp_1;
     9ce:	2d 81       	ldd	r18, Y+5	; 0x05
     9d0:	3e 81       	ldd	r19, Y+6	; 0x06
     9d2:	4f 81       	ldd	r20, Y+7	; 0x07
     9d4:	58 85       	ldd	r21, Y+8	; 0x08
     9d6:	69 85       	ldd	r22, Y+9	; 0x09
     9d8:	7a 85       	ldd	r23, Y+10	; 0x0a
     9da:	8b 85       	ldd	r24, Y+11	; 0x0b
     9dc:	9c 85       	ldd	r25, Y+12	; 0x0c
     9de:	87 d7       	rcall	.+3854   	; 0x18ee <__mulsf3>
     9e0:	9b 01       	movw	r18, r22
     9e2:	ac 01       	movw	r20, r24
     9e4:	6d 85       	ldd	r22, Y+13	; 0x0d
     9e6:	7e 85       	ldd	r23, Y+14	; 0x0e
     9e8:	8f 85       	ldd	r24, Y+15	; 0x0f
     9ea:	98 89       	ldd	r25, Y+16	; 0x10
     9ec:	3e d5       	rcall	.+2684   	; 0x146a <__subsf3>
     9ee:	d8 01       	movw	r26, r16
     9f0:	18 96       	adiw	r26, 0x08	; 8
     9f2:	6d 93       	st	X+, r22
     9f4:	7d 93       	st	X+, r23
     9f6:	8d 93       	st	X+, r24
     9f8:	9c 93       	st	X, r25
     9fa:	1b 97       	sbiw	r26, 0x0b	; 11
	P_1[1][1] -= K_1[1] * P01_temp_1;
     9fc:	2d 81       	ldd	r18, Y+5	; 0x05
     9fe:	3e 81       	ldd	r19, Y+6	; 0x06
     a00:	4f 81       	ldd	r20, Y+7	; 0x07
     a02:	58 85       	ldd	r21, Y+8	; 0x08
     a04:	c3 01       	movw	r24, r6
     a06:	b2 01       	movw	r22, r4
     a08:	72 d7       	rcall	.+3812   	; 0x18ee <__mulsf3>
     a0a:	9b 01       	movw	r18, r22
     a0c:	ac 01       	movw	r20, r24
     a0e:	69 8d       	ldd	r22, Y+25	; 0x19
     a10:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a12:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a14:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a16:	29 d5       	rcall	.+2642   	; 0x146a <__subsf3>
     a18:	f8 01       	movw	r30, r16
     a1a:	64 87       	std	Z+12, r22	; 0x0c
     a1c:	75 87       	std	Z+13, r23	; 0x0d
     a1e:	86 87       	std	Z+14, r24	; 0x0e
     a20:	97 87       	std	Z+15, r25	; 0x0f

	return angle_1;
};
     a22:	c5 01       	movw	r24, r10
     a24:	b4 01       	movw	r22, r8
     a26:	6c 96       	adiw	r28, 0x1c	; 28
     a28:	0f b6       	in	r0, 0x3f	; 63
     a2a:	f8 94       	cli
     a2c:	de bf       	out	0x3e, r29	; 62
     a2e:	0f be       	out	0x3f, r0	; 63
     a30:	cd bf       	out	0x3d, r28	; 61
     a32:	df 91       	pop	r29
     a34:	cf 91       	pop	r28
     a36:	1f 91       	pop	r17
     a38:	0f 91       	pop	r16
     a3a:	ff 90       	pop	r15
     a3c:	ef 90       	pop	r14
     a3e:	df 90       	pop	r13
     a40:	cf 90       	pop	r12
     a42:	bf 90       	pop	r11
     a44:	af 90       	pop	r10
     a46:	9f 90       	pop	r9
     a48:	8f 90       	pop	r8
     a4a:	7f 90       	pop	r7
     a4c:	6f 90       	pop	r6
     a4e:	5f 90       	pop	r5
     a50:	4f 90       	pop	r4
     a52:	08 95       	ret

00000a54 <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     a54:	8f e6       	ldi	r24, 0x6F	; 111
     a56:	92 e1       	ldi	r25, 0x12	; 18
     a58:	a3 e8       	ldi	r26, 0x83	; 131
     a5a:	ba e3       	ldi	r27, 0x3A	; 58
     a5c:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <Q_angle_1>
     a60:	90 93 f8 03 	sts	0x03F8, r25	; 0x8003f8 <Q_angle_1+0x1>
     a64:	a0 93 f9 03 	sts	0x03F9, r26	; 0x8003f9 <Q_angle_1+0x2>
     a68:	b0 93 fa 03 	sts	0x03FA, r27	; 0x8003fa <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     a6c:	86 ea       	ldi	r24, 0xA6	; 166
     a6e:	9b e9       	ldi	r25, 0x9B	; 155
     a70:	a4 e4       	ldi	r26, 0x44	; 68
     a72:	bb e3       	ldi	r27, 0x3B	; 59
     a74:	80 93 e3 03 	sts	0x03E3, r24	; 0x8003e3 <Q_bias_1>
     a78:	90 93 e4 03 	sts	0x03E4, r25	; 0x8003e4 <Q_bias_1+0x1>
     a7c:	a0 93 e5 03 	sts	0x03E5, r26	; 0x8003e5 <Q_bias_1+0x2>
     a80:	b0 93 e6 03 	sts	0x03E6, r27	; 0x8003e6 <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     a84:	8f e8       	ldi	r24, 0x8F	; 143
     a86:	92 ec       	ldi	r25, 0xC2	; 194
     a88:	a5 ef       	ldi	r26, 0xF5	; 245
     a8a:	bc e3       	ldi	r27, 0x3C	; 60
     a8c:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <R_measure_1>
     a90:	90 93 e0 03 	sts	0x03E0, r25	; 0x8003e0 <R_measure_1+0x1>
     a94:	a0 93 e1 03 	sts	0x03E1, r26	; 0x8003e1 <R_measure_1+0x2>
     a98:	b0 93 e2 03 	sts	0x03E2, r27	; 0x8003e2 <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     a9c:	10 92 bb 03 	sts	0x03BB, r1	; 0x8003bb <angle_1>
     aa0:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <angle_1+0x1>
     aa4:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <angle_1+0x2>
     aa8:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     aac:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <bias_1>
     ab0:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <bias_1+0x1>
     ab4:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <bias_1+0x2>
     ab8:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     abc:	ef eb       	ldi	r30, 0xBF	; 191
     abe:	f3 e0       	ldi	r31, 0x03	; 3
     ac0:	10 82       	st	Z, r1
     ac2:	11 82       	std	Z+1, r1	; 0x01
     ac4:	12 82       	std	Z+2, r1	; 0x02
     ac6:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     ac8:	14 82       	std	Z+4, r1	; 0x04
     aca:	15 82       	std	Z+5, r1	; 0x05
     acc:	16 82       	std	Z+6, r1	; 0x06
     ace:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     ad0:	10 86       	std	Z+8, r1	; 0x08
     ad2:	11 86       	std	Z+9, r1	; 0x09
     ad4:	12 86       	std	Z+10, r1	; 0x0a
     ad6:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     ad8:	14 86       	std	Z+12, r1	; 0x0c
     ada:	15 86       	std	Z+13, r1	; 0x0d
     adc:	16 86       	std	Z+14, r1	; 0x0e
     ade:	17 86       	std	Z+15, r1	; 0x0f
     ae0:	08 95       	ret

00000ae2 <main>:
uint8_t buffer[14];
bool loop_bool=true;
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd);
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     ae2:	cf 93       	push	r28
     ae4:	df 93       	push	r29
     ae6:	cd b7       	in	r28, 0x3d	; 61
     ae8:	de b7       	in	r29, 0x3e	; 62
     aea:	a8 97       	sbiw	r28, 0x28	; 40
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	f8 94       	cli
     af0:	de bf       	out	0x3e, r29	; 62
     af2:	0f be       	out	0x3f, r0	; 63
     af4:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     af6:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <__data_end+0x1>
     afa:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <__data_end>
	V_step=V_step_predefine;
     afe:	88 e7       	ldi	r24, 0x78	; 120
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	90 93 72 03 	sts	0x0372, r25	; 0x800372 <V_step+0x1>
     b06:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <V_step>
	W_step=W_step_predefine;
     b0a:	80 ef       	ldi	r24, 0xF0	; 240
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     b12:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	incr=-1;
     b16:	8f ef       	ldi	r24, 0xFF	; 255
     b18:	9f ef       	ldi	r25, 0xFF	; 255
     b1a:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <incr+0x1>
     b1e:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <incr>
	pwm_delay=2000;
     b22:	80 ed       	ldi	r24, 0xD0	; 208
     b24:	97 e0       	ldi	r25, 0x07	; 7
     b26:	90 93 a6 03 	sts	0x03A6, r25	; 0x8003a6 <pwm_delay+0x1>
     b2a:	80 93 a5 03 	sts	0x03A5, r24	; 0x8003a5 <pwm_delay>
	cli();
     b2e:	f8 94       	cli
	init_gpio();
     b30:	92 db       	rcall	.-2268   	; 0x256 <init_gpio>
	init_motor_gpio();
     b32:	28 dc       	rcall	.-1968   	; 0x384 <init_motor_gpio>
		#ifdef GYRO
			i2c_init();
     b34:	72 d3       	rcall	.+1764   	; 0x121a <i2c_init>
		#endif
	USART_Init(MY_UBRR);
     b36:	8c e0       	ldi	r24, 0x0C	; 12
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	20 d4       	rcall	.+2112   	; 0x137c <USART_Init>
	uart_str = fdevopen(uart_putchar, NULL);
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	89 ec       	ldi	r24, 0xC9	; 201
     b42:	99 e0       	ldi	r25, 0x09	; 9
     b44:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <fdevopen>
     b48:	90 93 fc 03 	sts	0x03FC, r25	; 0x8003fc <uart_str+0x1>
     b4c:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <uart_str>
	setup_timer0();
     b50:	c0 d2       	rcall	.+1408   	; 0x10d2 <setup_timer0>
	Enable_timer0_overflow_interrupt();//micros
     b52:	c6 d2       	rcall	.+1420   	; 0x10e0 <Enable_timer0_overflow_interrupt>
	setup_timer4();//pwm
     b54:	9b d2       	rcall	.+1334   	; 0x108c <setup_timer4>
	setup_timer5();
     b56:	ae d2       	rcall	.+1372   	; 0x10b4 <setup_timer5>
	Enable_timer5_compare_interrupt();//motor
     b58:	b6 d2       	rcall	.+1388   	; 0x10c6 <Enable_timer5_compare_interrupt>
	OCR5A=4000;
     b5a:	80 ea       	ldi	r24, 0xA0	; 160
     b5c:	9f e0       	ldi	r25, 0x0F	; 15
     b5e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     b62:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
	unsigned long timer1=micros();
     b66:	c2 d2       	rcall	.+1412   	; 0x10ec <micros>
     b68:	69 8f       	std	Y+25, r22	; 0x19
     b6a:	7a 8f       	std	Y+26, r23	; 0x1a
     b6c:	8b 8f       	std	Y+27, r24	; 0x1b
     b6e:	9c 8f       	std	Y+28, r25	; 0x1c
				int16_t gyroZ_calib=gyro_offset_z;
				int16_t accelX_calib=accel_offset_x;
				int16_t accelY_calib=accel_offset_y;
				int16_t accelZ_calib=accel_offset_z;
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     b70:	67 e0       	ldi	r22, 0x07	; 7
     b72:	89 e1       	ldi	r24, 0x19	; 25
     b74:	ca d1       	rcall	.+916    	; 0xf0a <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     b76:	60 e0       	ldi	r22, 0x00	; 0
     b78:	8a e1       	ldi	r24, 0x1A	; 26
     b7a:	c7 d1       	rcall	.+910    	; 0xf0a <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     b7c:	68 e0       	ldi	r22, 0x08	; 8
     b7e:	8b e1       	ldi	r24, 0x1B	; 27
     b80:	c4 d1       	rcall	.+904    	; 0xf0a <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     b82:	60 e1       	ldi	r22, 0x10	; 16
     b84:	8c e1       	ldi	r24, 0x1C	; 28
     b86:	c1 d1       	rcall	.+898    	; 0xf0a <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     b88:	61 e0       	ldi	r22, 0x01	; 1
     b8a:	8b e6       	ldi	r24, 0x6B	; 107
     b8c:	be d1       	rcall	.+892    	; 0xf0a <mpu6050_writeByte>
		double compAngleY;
	#endif  
	
	
	/*---------------------------kalman_init----------------------*/
	Kalman_init();
     b8e:	95 dd       	rcall	.-1238   	; 0x6ba <Kalman_init>
	Kalman_init_1();
     b90:	61 df       	rcall	.-318    	; 0xa54 <Kalman_init_1>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b92:	2f ef       	ldi	r18, 0xFF	; 255
     b94:	31 ee       	ldi	r19, 0xE1	; 225
     b96:	44 e0       	ldi	r20, 0x04	; 4
     b98:	21 50       	subi	r18, 0x01	; 1
     b9a:	30 40       	sbci	r19, 0x00	; 0
     b9c:	40 40       	sbci	r20, 0x00	; 0
     b9e:	e1 f7       	brne	.-8      	; 0xb98 <main+0xb6>
     ba0:	00 c0       	rjmp	.+0      	; 0xba2 <main+0xc0>
     ba2:	00 00       	nop
	_delay_ms(100);
	double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
	double pitch =  atan2(accel_x, sqrt(accel_y*accel_y + accel_z*accel_z)) * RAD_TO_DEG;// atan(-accel_x / sqrt(accel_y * accel_y + accel_z * accel_z)) * RAD_TO_DEG;
	angle=0;
     ba4:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <angle>
     ba8:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <angle+0x1>
     bac:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <angle+0x2>
     bb0:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <angle+0x3>
	angle_1=0;
     bb4:	10 92 bb 03 	sts	0x03BB, r1	; 0x8003bb <angle_1>
     bb8:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <angle_1+0x1>
     bbc:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <angle_1+0x2>
     bc0:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <angle_1+0x3>
		/////////////////PID CONSTANTS/////////////////
		double kp=500;//3.55
		double ki=0;//0.003
		double kd=10;//2.05
		float desired_angle = 0;	
	sei();
     bc4:	78 94       	sei
	
	
	/*---------------------------PID_INIT-------------------------*/
		float PID, error, previous_error;
		float pid_p=0;
		float pid_i=0;
     bc6:	19 8a       	std	Y+17, r1	; 0x11
     bc8:	1a 8a       	std	Y+18, r1	; 0x12
     bca:	1b 8a       	std	Y+19, r1	; 0x13
     bcc:	1c 8a       	std	Y+20, r1	; 0x14
			//printSI("az=",accel_z);
			printf("\n");	
			#ifdef DRV8313
				int absoulute_y=abs(THE_MAIN_OUTPUT);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-abs(PID));
     bce:	0f 2e       	mov	r0, r31
     bd0:	ff ed       	ldi	r31, 0xDF	; 223
     bd2:	2f 2e       	mov	r2, r31
     bd4:	ff e7       	ldi	r31, 0x7F	; 127
     bd6:	3f 2e       	mov	r3, r31
     bd8:	f0 2d       	mov	r31, r0
     bda:	04 c0       	rjmp	.+8      	; 0xbe4 <main+0x102>
uint8_t buffer[14];
bool loop_bool=true;
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd);
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     bdc:	4d a2       	std	Y+37, r4	; 0x25
     bde:	5e a2       	std	Y+38, r5	; 0x26
     be0:	6f a2       	std	Y+39, r6	; 0x27
     be2:	78 a6       	std	Y+40, r7	; 0x28
	
	
    while (1) /*---------------------------while(1)---------------------------------*/
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     be4:	ce 01       	movw	r24, r28
     be6:	05 96       	adiw	r24, 0x05	; 5
     be8:	7c 01       	movw	r14, r24
     bea:	8e 01       	movw	r16, r28
     bec:	0d 5f       	subi	r16, 0xFD	; 253
     bee:	1f 4f       	sbci	r17, 0xFF	; 255
     bf0:	9e 01       	movw	r18, r28
     bf2:	2f 5f       	subi	r18, 0xFF	; 255
     bf4:	3f 4f       	sbci	r19, 0xFF	; 255
     bf6:	ae 01       	movw	r20, r28
     bf8:	45 5f       	subi	r20, 0xF5	; 245
     bfa:	5f 4f       	sbci	r21, 0xFF	; 255
     bfc:	be 01       	movw	r22, r28
     bfe:	67 5f       	subi	r22, 0xF7	; 247
     c00:	7f 4f       	sbci	r23, 0xFF	; 255
     c02:	02 96       	adiw	r24, 0x02	; 2
     c04:	d8 d1       	rcall	.+944    	; 0xfb6 <mpu6050_getRawData>
			//accel_x-=accelX_calib;
			//accel_y-=accelY_calib;
			//accel_z-=accelZ_calib;
			gyro_x-=gyroX_calib;
     c06:	89 81       	ldd	r24, Y+1	; 0x01
     c08:	9a 81       	ldd	r25, Y+2	; 0x02
     c0a:	84 59       	subi	r24, 0x94	; 148
     c0c:	9f 4f       	sbci	r25, 0xFF	; 255
     c0e:	9a 83       	std	Y+2, r25	; 0x02
     c10:	89 83       	std	Y+1, r24	; 0x01
			gyro_y-=gyroY_calib;
     c12:	8b 81       	ldd	r24, Y+3	; 0x03
     c14:	9c 81       	ldd	r25, Y+4	; 0x04
     c16:	80 52       	subi	r24, 0x20	; 32
     c18:	9f 4f       	sbci	r25, 0xFF	; 255
     c1a:	9c 83       	std	Y+4, r25	; 0x04
     c1c:	8b 83       	std	Y+3, r24	; 0x03
			gyro_z-=gyroZ_calib;
     c1e:	8d 81       	ldd	r24, Y+5	; 0x05
     c20:	9e 81       	ldd	r25, Y+6	; 0x06
     c22:	8f 58       	subi	r24, 0x8F	; 143
     c24:	9d 4f       	sbci	r25, 0xFD	; 253
     c26:	9e 83       	std	Y+6, r25	; 0x06
     c28:	8d 83       	std	Y+5, r24	; 0x05
			printSI("ay=",accel_y);
			printSI("az=",accel_z);
			printf("\n");
			/*--------end------*/			
		#else
			double dt = ((double)(micros() - timer1))/1000000;
     c2a:	60 d2       	rcall	.+1216   	; 0x10ec <micros>
     c2c:	29 8d       	ldd	r18, Y+25	; 0x19
     c2e:	3a 8d       	ldd	r19, Y+26	; 0x1a
     c30:	4b 8d       	ldd	r20, Y+27	; 0x1b
     c32:	5c 8d       	ldd	r21, Y+28	; 0x1c
     c34:	62 1b       	sub	r22, r18
     c36:	73 0b       	sbc	r23, r19
     c38:	84 0b       	sbc	r24, r20
     c3a:	95 0b       	sbc	r25, r21
     c3c:	7a d5       	rcall	.+2804   	; 0x1732 <__floatunsisf>
     c3e:	20 e0       	ldi	r18, 0x00	; 0
     c40:	34 e2       	ldi	r19, 0x24	; 36
     c42:	44 e7       	ldi	r20, 0x74	; 116
     c44:	59 e4       	ldi	r21, 0x49	; 73
     c46:	dc d4       	rcall	.+2488   	; 0x1600 <__divsf3>
     c48:	6d 87       	std	Y+13, r22	; 0x0d
     c4a:	7e 87       	std	Y+14, r23	; 0x0e
     c4c:	8f 87       	std	Y+15, r24	; 0x0f
     c4e:	98 8b       	std	Y+16, r25	; 0x10
			timer1=micros();
     c50:	4d d2       	rcall	.+1178   	; 0x10ec <micros>
     c52:	69 8f       	std	Y+25, r22	; 0x19
     c54:	7a 8f       	std	Y+26, r23	; 0x1a
     c56:	8b 8f       	std	Y+27, r24	; 0x1b
     c58:	9c 8f       	std	Y+28, r25	; 0x1c
			double gyroXrate = gyro_x/65.5;// deg/s 
     c5a:	69 81       	ldd	r22, Y+1	; 0x01
     c5c:	7a 81       	ldd	r23, Y+2	; 0x02
     c5e:	07 2e       	mov	r0, r23
     c60:	00 0c       	add	r0, r0
     c62:	88 0b       	sbc	r24, r24
     c64:	99 0b       	sbc	r25, r25
     c66:	67 d5       	rcall	.+2766   	; 0x1736 <__floatsisf>
     c68:	20 e0       	ldi	r18, 0x00	; 0
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	43 e8       	ldi	r20, 0x83	; 131
     c6e:	52 e4       	ldi	r21, 0x42	; 66
     c70:	c7 d4       	rcall	.+2446   	; 0x1600 <__divsf3>
     c72:	6d 8f       	std	Y+29, r22	; 0x1d
     c74:	7e 8f       	std	Y+30, r23	; 0x1e
     c76:	8f 8f       	std	Y+31, r24	; 0x1f
     c78:	98 a3       	std	Y+32, r25	; 0x20
			double gyroYrate = gyro_y/65.5;// deg/s
     c7a:	6b 81       	ldd	r22, Y+3	; 0x03
     c7c:	7c 81       	ldd	r23, Y+4	; 0x04
     c7e:	07 2e       	mov	r0, r23
     c80:	00 0c       	add	r0, r0
     c82:	88 0b       	sbc	r24, r24
     c84:	99 0b       	sbc	r25, r25
     c86:	57 d5       	rcall	.+2734   	; 0x1736 <__floatsisf>
     c88:	20 e0       	ldi	r18, 0x00	; 0
     c8a:	30 e0       	ldi	r19, 0x00	; 0
     c8c:	43 e8       	ldi	r20, 0x83	; 131
     c8e:	52 e4       	ldi	r21, 0x42	; 66
     c90:	b7 d4       	rcall	.+2414   	; 0x1600 <__divsf3>
     c92:	69 a3       	std	Y+33, r22	; 0x21
     c94:	7a a3       	std	Y+34, r23	; 0x22
     c96:	8b a3       	std	Y+35, r24	; 0x23
     c98:	9c a3       	std	Y+36, r25	; 0x24
			if (!loop_bool) {
     c9a:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <loop_bool>
     c9e:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <loop_bool+0x1>
     ca2:	89 2b       	or	r24, r25
     ca4:	21 f0       	breq	.+8      	; 0xcae <main+0x1cc>
				angle_roll += gyroXrate*dt; //Calculate the traveled pitch angle and add this to the angle_pitch variable
				angle_pitch += gyroYrate*dt;  //Calculate the traveled roll angle and add this to the angle_roll variable			
			}
			else loop_bool=false;	
     ca6:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <loop_bool+0x1>
     caa:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <loop_bool>
			//angle_pitch += angle_roll * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the roll angle to the pitch angel
			//angle_roll -= angle_pitch * sin(gyro_z * (dt/65.5*pi/180));
			               //If the IMU has yawed transfer the pitch angle to the roll angel
		
			//-------------------------------NEW accel-----------------
			roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
     cae:	cb 84       	ldd	r12, Y+11	; 0x0b
     cb0:	dc 84       	ldd	r13, Y+12	; 0x0c
     cb2:	e9 84       	ldd	r14, Y+9	; 0x09
     cb4:	fa 84       	ldd	r15, Y+10	; 0x0a
     cb6:	b6 01       	movw	r22, r12
     cb8:	0d 2c       	mov	r0, r13
     cba:	00 0c       	add	r0, r0
     cbc:	88 0b       	sbc	r24, r24
     cbe:	99 0b       	sbc	r25, r25
     cc0:	3a d5       	rcall	.+2676   	; 0x1736 <__floatsisf>
     cc2:	4b 01       	movw	r8, r22
     cc4:	5c 01       	movw	r10, r24
     cc6:	b7 01       	movw	r22, r14
     cc8:	0f 2c       	mov	r0, r15
     cca:	00 0c       	add	r0, r0
     ccc:	88 0b       	sbc	r24, r24
     cce:	99 0b       	sbc	r25, r25
     cd0:	32 d5       	rcall	.+2660   	; 0x1736 <__floatsisf>
     cd2:	a5 01       	movw	r20, r10
     cd4:	94 01       	movw	r18, r8
     cd6:	3d d4       	rcall	.+2170   	; 0x1552 <atan2>
     cd8:	21 ee       	ldi	r18, 0xE1	; 225
     cda:	3e e2       	ldi	r19, 0x2E	; 46
     cdc:	45 e6       	ldi	r20, 0x65	; 101
     cde:	52 e4       	ldi	r21, 0x42	; 66
     ce0:	06 d6       	rcall	.+3084   	; 0x18ee <__mulsf3>
     ce2:	6d 8b       	std	Y+21, r22	; 0x15
     ce4:	7e 8b       	std	Y+22, r23	; 0x16
     ce6:	8f 8b       	std	Y+23, r24	; 0x17
     ce8:	98 8f       	std	Y+24, r25	; 0x18
			double temporar_accel_x=accel_x/100;
			double temporar_accel_y=accel_y/100;
     cea:	c7 01       	movw	r24, r14
     cec:	64 e6       	ldi	r22, 0x64	; 100
     cee:	70 e0       	ldi	r23, 0x00	; 0
     cf0:	0e 94 bc 10 	call	0x2178	; 0x2178 <__divmodhi4>
     cf4:	07 2e       	mov	r0, r23
     cf6:	00 0c       	add	r0, r0
     cf8:	88 0b       	sbc	r24, r24
     cfa:	99 0b       	sbc	r25, r25
     cfc:	1c d5       	rcall	.+2616   	; 0x1736 <__floatsisf>
     cfe:	4b 01       	movw	r8, r22
     d00:	5c 01       	movw	r10, r24
			double temporar_accel_z=accel_z/100;
     d02:	c6 01       	movw	r24, r12
     d04:	64 e6       	ldi	r22, 0x64	; 100
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	0e 94 bc 10 	call	0x2178	; 0x2178 <__divmodhi4>
     d0c:	07 2e       	mov	r0, r23
     d0e:	00 0c       	add	r0, r0
     d10:	88 0b       	sbc	r24, r24
     d12:	99 0b       	sbc	r25, r25
     d14:	10 d5       	rcall	.+2592   	; 0x1736 <__floatsisf>
     d16:	6b 01       	movw	r12, r22
     d18:	7c 01       	movw	r14, r24
			double temporar_var=sqrt(temporar_accel_y*temporar_accel_y + temporar_accel_z*temporar_accel_z);
     d1a:	a5 01       	movw	r20, r10
     d1c:	94 01       	movw	r18, r8
     d1e:	c5 01       	movw	r24, r10
     d20:	b4 01       	movw	r22, r8
     d22:	e5 d5       	rcall	.+3018   	; 0x18ee <__mulsf3>
     d24:	4b 01       	movw	r8, r22
     d26:	5c 01       	movw	r10, r24
     d28:	a7 01       	movw	r20, r14
     d2a:	96 01       	movw	r18, r12
     d2c:	c7 01       	movw	r24, r14
     d2e:	b6 01       	movw	r22, r12
     d30:	de d5       	rcall	.+3004   	; 0x18ee <__mulsf3>
     d32:	9b 01       	movw	r18, r22
     d34:	ac 01       	movw	r20, r24
     d36:	c5 01       	movw	r24, r10
     d38:	b4 01       	movw	r22, r8
     d3a:	98 d3       	rcall	.+1840   	; 0x146c <__addsf3>
     d3c:	3f d6       	rcall	.+3198   	; 0x19bc <sqrt>
			temporar_var*=100;
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	48 ec       	ldi	r20, 0xC8	; 200
     d44:	52 e4       	ldi	r21, 0x42	; 66
     d46:	d3 d5       	rcall	.+2982   	; 0x18ee <__mulsf3>
     d48:	6b 01       	movw	r12, r22
     d4a:	7c 01       	movw	r14, r24
			pitch = atan2(accel_x, temporar_var) * RAD_TO_DEG;
     d4c:	6f 81       	ldd	r22, Y+7	; 0x07
     d4e:	78 85       	ldd	r23, Y+8	; 0x08
     d50:	07 2e       	mov	r0, r23
     d52:	00 0c       	add	r0, r0
     d54:	88 0b       	sbc	r24, r24
     d56:	99 0b       	sbc	r25, r25
     d58:	ee d4       	rcall	.+2524   	; 0x1736 <__floatsisf>
     d5a:	a7 01       	movw	r20, r14
     d5c:	96 01       	movw	r18, r12
     d5e:	f9 d3       	rcall	.+2034   	; 0x1552 <atan2>
     d60:	21 ee       	ldi	r18, 0xE1	; 225
     d62:	3e e2       	ldi	r19, 0x2E	; 46
     d64:	45 e6       	ldi	r20, 0x65	; 101
     d66:	52 e4       	ldi	r21, 0x42	; 66
     d68:	c2 d5       	rcall	.+2948   	; 0x18ee <__mulsf3>
     d6a:	4b 01       	movw	r8, r22
     d6c:	5c 01       	movw	r10, r24

						
			/*-------------------------Kalman--------------------------------*/		
			float kalman_angle_x=getAngle(roll,gyroXrate,dt);
     d6e:	ed 84       	ldd	r14, Y+13	; 0x0d
     d70:	fe 84       	ldd	r15, Y+14	; 0x0e
     d72:	0f 85       	ldd	r16, Y+15	; 0x0f
     d74:	18 89       	ldd	r17, Y+16	; 0x10
     d76:	2d 8d       	ldd	r18, Y+29	; 0x1d
     d78:	3e 8d       	ldd	r19, Y+30	; 0x1e
     d7a:	4f 8d       	ldd	r20, Y+31	; 0x1f
     d7c:	58 a1       	ldd	r21, Y+32	; 0x20
     d7e:	6d 89       	ldd	r22, Y+21	; 0x15
     d80:	7e 89       	ldd	r23, Y+22	; 0x16
     d82:	8f 89       	ldd	r24, Y+23	; 0x17
     d84:	98 8d       	ldd	r25, Y+24	; 0x18
     d86:	09 db       	rcall	.-2542   	; 0x39a <getAngle>
     d88:	46 2e       	mov	r4, r22
     d8a:	57 2e       	mov	r5, r23
     d8c:	68 2e       	mov	r6, r24
     d8e:	79 2e       	mov	r7, r25
			float kalman_angle_y=getAngle_1(pitch,gyroYrate,dt);
     d90:	ed 84       	ldd	r14, Y+13	; 0x0d
     d92:	fe 84       	ldd	r15, Y+14	; 0x0e
     d94:	0f 85       	ldd	r16, Y+15	; 0x0f
     d96:	18 89       	ldd	r17, Y+16	; 0x10
     d98:	29 a1       	ldd	r18, Y+33	; 0x21
     d9a:	3a a1       	ldd	r19, Y+34	; 0x22
     d9c:	4b a1       	ldd	r20, Y+35	; 0x23
     d9e:	5c a1       	ldd	r21, Y+36	; 0x24
     da0:	c5 01       	movw	r24, r10
     da2:	b4 01       	movw	r22, r8
     da4:	d1 dc       	rcall	.-1630   	; 0x748 <getAngle_1>
     da6:	6b 01       	movw	r12, r22
     da8:	7c 01       	movw	r14, r24
			
			printSD("kro = ",kalman_angle_x);
     daa:	44 2d       	mov	r20, r4
     dac:	55 2d       	mov	r21, r5
     dae:	66 2d       	mov	r22, r6
     db0:	77 2d       	mov	r23, r7
     db2:	85 e7       	ldi	r24, 0x75	; 117
     db4:	93 e0       	ldi	r25, 0x03	; 3
     db6:	37 d3       	rcall	.+1646   	; 0x1426 <printSD>
			printSD("kpi = ",kalman_angle_y);
     db8:	b7 01       	movw	r22, r14
     dba:	a6 01       	movw	r20, r12
     dbc:	8c e7       	ldi	r24, 0x7C	; 124
     dbe:	93 e0       	ldi	r25, 0x03	; 3
     dc0:	32 d3       	rcall	.+1636   	; 0x1426 <printSD>
			printSD("roll = ",roll);
     dc2:	4d 89       	ldd	r20, Y+21	; 0x15
     dc4:	5e 89       	ldd	r21, Y+22	; 0x16
     dc6:	6f 89       	ldd	r22, Y+23	; 0x17
     dc8:	78 8d       	ldd	r23, Y+24	; 0x18
     dca:	83 e8       	ldi	r24, 0x83	; 131
     dcc:	93 e0       	ldi	r25, 0x03	; 3
     dce:	2b d3       	rcall	.+1622   	; 0x1426 <printSD>
			printSD("pitch = ",pitch);
     dd0:	b5 01       	movw	r22, r10
     dd2:	a4 01       	movw	r20, r8
     dd4:	8b e8       	ldi	r24, 0x8B	; 139
     dd6:	93 e0       	ldi	r25, 0x03	; 3
     dd8:	26 d3       	rcall	.+1612   	; 0x1426 <printSD>
			/*---------------------PID calculations--------------------------*/
			error = kalman_angle_x - desired_angle;
			pid_p = kp*error;
			if(-3 <error <3)
			{
				pid_i = pid_i+(ki*error);
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	a9 01       	movw	r20, r18
     de0:	64 2d       	mov	r22, r4
     de2:	75 2d       	mov	r23, r5
     de4:	86 2d       	mov	r24, r6
     de6:	97 2d       	mov	r25, r7
     de8:	82 d5       	rcall	.+2820   	; 0x18ee <__mulsf3>
     dea:	9b 01       	movw	r18, r22
     dec:	ac 01       	movw	r20, r24
     dee:	69 89       	ldd	r22, Y+17	; 0x11
     df0:	7a 89       	ldd	r23, Y+18	; 0x12
     df2:	8b 89       	ldd	r24, Y+19	; 0x13
     df4:	9c 89       	ldd	r25, Y+20	; 0x14
     df6:	3a d3       	rcall	.+1652   	; 0x146c <__addsf3>
     df8:	69 8b       	std	Y+17, r22	; 0x11
     dfa:	7a 8b       	std	Y+18, r23	; 0x12
     dfc:	8b 8b       	std	Y+19, r24	; 0x13
     dfe:	9c 8b       	std	Y+20, r25	; 0x14
			//printSI("gy=",gyro_x);
			//printSI("gz=",gyro_x);
			//printSI("ax=",accel_x);
			//printSI("ay=",accel_y);
			//printSI("az=",accel_z);
			printf("\n");	
     e00:	8a e0       	ldi	r24, 0x0A	; 10
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	0e 94 66 12 	call	0x24cc	; 0x24cc <putchar>
			#ifdef DRV8313
				int absoulute_y=abs(THE_MAIN_OUTPUT);
     e08:	64 2d       	mov	r22, r4
     e0a:	75 2d       	mov	r23, r5
     e0c:	86 2d       	mov	r24, r6
     e0e:	97 2d       	mov	r25, r7
     e10:	5f d4       	rcall	.+2238   	; 0x16d0 <__fixsfsi>
     e12:	5b 01       	movw	r10, r22
     e14:	77 23       	and	r23, r23
     e16:	24 f4       	brge	.+8      	; 0xe20 <main+0x33e>
     e18:	aa 24       	eor	r10, r10
     e1a:	bb 24       	eor	r11, r11
     e1c:	a6 1a       	sub	r10, r22
     e1e:	b7 0a       	sbc	r11, r23
			printSD("pitch = ",pitch);
			
			
			/*---------------------PID calculations--------------------------*/
			error = kalman_angle_x - desired_angle;
			pid_p = kp*error;
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	4a ef       	ldi	r20, 0xFA	; 250
     e26:	53 e4       	ldi	r21, 0x43	; 67
     e28:	64 2d       	mov	r22, r4
     e2a:	75 2d       	mov	r23, r5
     e2c:	86 2d       	mov	r24, r6
     e2e:	97 2d       	mov	r25, r7
     e30:	5e d5       	rcall	.+2748   	; 0x18ee <__mulsf3>
			}
			
			pid_d = kd*((error - previous_error)/dt);

			/*The final PID values is the sum of each of this 3 parts*/
			PID = pid_p + pid_i + pid_d;
     e32:	29 89       	ldd	r18, Y+17	; 0x11
     e34:	3a 89       	ldd	r19, Y+18	; 0x12
     e36:	4b 89       	ldd	r20, Y+19	; 0x13
     e38:	5c 89       	ldd	r21, Y+20	; 0x14
     e3a:	18 d3       	rcall	.+1584   	; 0x146c <__addsf3>
     e3c:	6b 01       	movw	r12, r22
     e3e:	7c 01       	movw	r14, r24
			if(-3 <error <3)
			{
				pid_i = pid_i+(ki*error);
			}
			
			pid_d = kd*((error - previous_error)/dt);
     e40:	2d a1       	ldd	r18, Y+37	; 0x25
     e42:	3e a1       	ldd	r19, Y+38	; 0x26
     e44:	4f a1       	ldd	r20, Y+39	; 0x27
     e46:	58 a5       	ldd	r21, Y+40	; 0x28
     e48:	64 2d       	mov	r22, r4
     e4a:	75 2d       	mov	r23, r5
     e4c:	86 2d       	mov	r24, r6
     e4e:	97 2d       	mov	r25, r7
     e50:	0c d3       	rcall	.+1560   	; 0x146a <__subsf3>
     e52:	2d 85       	ldd	r18, Y+13	; 0x0d
     e54:	3e 85       	ldd	r19, Y+14	; 0x0e
     e56:	4f 85       	ldd	r20, Y+15	; 0x0f
     e58:	58 89       	ldd	r21, Y+16	; 0x10
     e5a:	d2 d3       	rcall	.+1956   	; 0x1600 <__divsf3>
     e5c:	20 e0       	ldi	r18, 0x00	; 0
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	40 e2       	ldi	r20, 0x20	; 32
     e62:	51 e4       	ldi	r21, 0x41	; 65
     e64:	44 d5       	rcall	.+2696   	; 0x18ee <__mulsf3>
     e66:	9b 01       	movw	r18, r22
     e68:	ac 01       	movw	r20, r24

			/*The final PID values is the sum of each of this 3 parts*/
			PID = pid_p + pid_i + pid_d;
     e6a:	c7 01       	movw	r24, r14
     e6c:	b6 01       	movw	r22, r12
     e6e:	fe d2       	rcall	.+1532   	; 0x146c <__addsf3>
			//printSI("az=",accel_z);
			printf("\n");	
			#ifdef DRV8313
				int absoulute_y=abs(THE_MAIN_OUTPUT);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-abs(PID));
     e70:	2f d4       	rcall	.+2142   	; 0x16d0 <__fixsfsi>
     e72:	9b 01       	movw	r18, r22
     e74:	77 23       	and	r23, r23
     e76:	24 f4       	brge	.+8      	; 0xe80 <main+0x39e>
     e78:	22 27       	eor	r18, r18
     e7a:	33 27       	eor	r19, r19
     e7c:	26 1b       	sub	r18, r22
     e7e:	37 0b       	sbc	r19, r23
     e80:	a1 01       	movw	r20, r2
     e82:	42 1b       	sub	r20, r18
     e84:	53 0b       	sbc	r21, r19
				if (abs(local_motor_delay)>5000)
     e86:	ca 01       	movw	r24, r20
     e88:	99 23       	and	r25, r25
     e8a:	24 f4       	brge	.+8      	; 0xe94 <main+0x3b2>
     e8c:	88 27       	eor	r24, r24
     e8e:	99 27       	eor	r25, r25
     e90:	84 1b       	sub	r24, r20
     e92:	95 0b       	sbc	r25, r21
     e94:	89 38       	cpi	r24, 0x89	; 137
     e96:	53 e1       	ldi	r21, 0x13	; 19
     e98:	95 07       	cpc	r25, r21
     e9a:	24 f0       	brlt	.+8      	; 0xea4 <main+0x3c2>
				{
					pwm_delay=abs(local_motor_delay);
     e9c:	90 93 a6 03 	sts	0x03A6, r25	; 0x8003a6 <pwm_delay+0x1>
     ea0:	80 93 a5 03 	sts	0x03A5, r24	; 0x8003a5 <pwm_delay>
				}
				//printSI("pwm_delay = ",pwm_delay);
				int16_t reg_ = local_motor_delay;
				//printSI("ocr=",reg_);
				if ((absoulute_y<=0.18) || (abs(kalman_angle_x) >45))
     ea4:	b5 01       	movw	r22, r10
     ea6:	0b 2c       	mov	r0, r11
     ea8:	00 0c       	add	r0, r0
     eaa:	88 0b       	sbc	r24, r24
     eac:	99 0b       	sbc	r25, r25
     eae:	43 d4       	rcall	.+2182   	; 0x1736 <__floatsisf>
     eb0:	2c ee       	ldi	r18, 0xEC	; 236
     eb2:	31 e5       	ldi	r19, 0x51	; 81
     eb4:	48 e3       	ldi	r20, 0x38	; 56
     eb6:	5e e3       	ldi	r21, 0x3E	; 62
     eb8:	9f d3       	rcall	.+1854   	; 0x15f8 <__cmpsf2>
     eba:	18 16       	cp	r1, r24
     ebc:	24 f4       	brge	.+8      	; 0xec6 <main+0x3e4>
     ebe:	8e e2       	ldi	r24, 0x2E	; 46
     ec0:	a8 16       	cp	r10, r24
     ec2:	b1 04       	cpc	r11, r1
     ec4:	2c f0       	brlt	.+10     	; 0xed0 <main+0x3ee>
				{
					incr=0;
     ec6:	10 92 aa 03 	sts	0x03AA, r1	; 0x8003aa <incr+0x1>
     eca:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <incr>
     ece:	86 ce       	rjmp	.-756    	; 0xbdc <main+0xfa>
					//printf("\n");	
				}
				else 
					if (kalman_angle_x<0.18)
     ed0:	2c ee       	ldi	r18, 0xEC	; 236
     ed2:	31 e5       	ldi	r19, 0x51	; 81
     ed4:	48 e3       	ldi	r20, 0x38	; 56
     ed6:	5e e3       	ldi	r21, 0x3E	; 62
     ed8:	64 2d       	mov	r22, r4
     eda:	75 2d       	mov	r23, r5
     edc:	86 2d       	mov	r24, r6
     ede:	97 2d       	mov	r25, r7
     ee0:	8b d3       	rcall	.+1814   	; 0x15f8 <__cmpsf2>
     ee2:	88 23       	and	r24, r24
     ee4:	4c f4       	brge	.+18     	; 0xef8 <main+0x416>
					{
						cli();
     ee6:	f8 94       	cli
						incr=1;						
     ee8:	21 e0       	ldi	r18, 0x01	; 1
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	30 93 aa 03 	sts	0x03AA, r19	; 0x8003aa <incr+0x1>
     ef0:	20 93 a9 03 	sts	0x03A9, r18	; 0x8003a9 <incr>
						//printf(" ");
						//int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" yes\n");					
						sei();
     ef4:	78 94       	sei
     ef6:	72 ce       	rjmp	.-796    	; 0xbdc <main+0xfa>
					}
					else
					{	cli();
     ef8:	f8 94       	cli
						incr=-1;
     efa:	4f ef       	ldi	r20, 0xFF	; 255
     efc:	5f ef       	ldi	r21, 0xFF	; 255
     efe:	50 93 aa 03 	sts	0x03AA, r21	; 0x8003aa <incr+0x1>
     f02:	40 93 a9 03 	sts	0x03A9, r20	; 0x8003a9 <incr>
						//printf(" ");
						//int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" no\n");
						sei();
     f06:	78 94       	sei
     f08:	69 ce       	rjmp	.-814    	; 0xbdc <main+0xfa>

00000f0a <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     f0a:	cf 93       	push	r28
     f0c:	df 93       	push	r29
     f0e:	d8 2f       	mov	r29, r24
     f10:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     f12:	80 ed       	ldi	r24, 0xD0	; 208
     f14:	88 d1       	rcall	.+784    	; 0x1226 <i2c_start>
	i2c_write(wereToWrite);
     f16:	8d 2f       	mov	r24, r29
     f18:	dc d1       	rcall	.+952    	; 0x12d2 <i2c_write>
	i2c_write(byteToWrite);
     f1a:	8c 2f       	mov	r24, r28
     f1c:	da d1       	rcall	.+948    	; 0x12d2 <i2c_write>
	i2c_stop();
     f1e:	c9 d1       	rcall	.+914    	; 0x12b2 <i2c_stop>
}
     f20:	df 91       	pop	r29
     f22:	cf 91       	pop	r28
     f24:	08 95       	ret

00000f26 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     f26:	af 92       	push	r10
     f28:	bf 92       	push	r11
     f2a:	df 92       	push	r13
     f2c:	ef 92       	push	r14
     f2e:	ff 92       	push	r15
     f30:	0f 93       	push	r16
     f32:	1f 93       	push	r17
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     f38:	66 23       	and	r22, r22
     f3a:	89 f1       	breq	.+98     	; 0xf9e <mpu6050_readBytes+0x78>
     f3c:	c5 2f       	mov	r28, r21
     f3e:	d4 2f       	mov	r29, r20
     f40:	d6 2e       	mov	r13, r22
     f42:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     f44:	80 ed       	ldi	r24, 0xD0	; 208
     f46:	6f d1       	rcall	.+734    	; 0x1226 <i2c_start>
		i2c_write(regAddr);
     f48:	81 2f       	mov	r24, r17
     f4a:	c3 d1       	rcall	.+902    	; 0x12d2 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f4c:	85 e3       	ldi	r24, 0x35	; 53
     f4e:	8a 95       	dec	r24
     f50:	f1 f7       	brne	.-4      	; 0xf4e <mpu6050_readBytes+0x28>
     f52:	00 00       	nop
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     f54:	81 ed       	ldi	r24, 0xD1	; 209
     f56:	67 d1       	rcall	.+718    	; 0x1226 <i2c_start>
     f58:	0d 2f       	mov	r16, r29
     f5a:	1c 2f       	mov	r17, r28
     f5c:	ee 24       	eor	r14, r14
     f5e:	ea 94       	dec	r14
     f60:	ed 0c       	add	r14, r13
     f62:	f1 2c       	mov	r15, r1
     f64:	ef ef       	ldi	r30, 0xFF	; 255
     f66:	ee 1a       	sub	r14, r30
     f68:	fe 0a       	sbc	r15, r30
     f6a:	c0 e0       	ldi	r28, 0x00	; 0
     f6c:	d0 e0       	ldi	r29, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     f6e:	ad 2c       	mov	r10, r13
     f70:	b1 2c       	mov	r11, r1
     f72:	f1 e0       	ldi	r31, 0x01	; 1
     f74:	af 1a       	sub	r10, r31
     f76:	b1 08       	sbc	r11, r1
     f78:	ca 15       	cp	r28, r10
     f7a:	db 05       	cpc	r29, r11
     f7c:	21 f4       	brne	.+8      	; 0xf86 <mpu6050_readBytes+0x60>
			data[i] = i2c_readNak();
     f7e:	e4 d1       	rcall	.+968    	; 0x1348 <i2c_readNak>
     f80:	f8 01       	movw	r30, r16
     f82:	80 83       	st	Z, r24
     f84:	03 c0       	rjmp	.+6      	; 0xf8c <mpu6050_readBytes+0x66>
			else
			data[i] = i2c_readAck();
     f86:	c6 d1       	rcall	.+908    	; 0x1314 <i2c_readAck>
     f88:	f8 01       	movw	r30, r16
     f8a:	80 83       	st	Z, r24
     f8c:	21 96       	adiw	r28, 0x01	; 1
     f8e:	0f 5f       	subi	r16, 0xFF	; 255
     f90:	1f 4f       	sbci	r17, 0xFF	; 255
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     f92:	ce 15       	cp	r28, r14
     f94:	df 05       	cpc	r29, r15
     f96:	81 f7       	brne	.-32     	; 0xf78 <mpu6050_readBytes+0x52>
     f98:	cd 2d       	mov	r28, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     f9a:	8b d1       	rcall	.+790    	; 0x12b2 <i2c_stop>
     f9c:	01 c0       	rjmp	.+2      	; 0xfa0 <mpu6050_readBytes+0x7a>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     f9e:	c0 e0       	ldi	r28, 0x00	; 0
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     fa0:	8c 2f       	mov	r24, r28
     fa2:	df 91       	pop	r29
     fa4:	cf 91       	pop	r28
     fa6:	1f 91       	pop	r17
     fa8:	0f 91       	pop	r16
     faa:	ff 90       	pop	r15
     fac:	ef 90       	pop	r14
     fae:	df 90       	pop	r13
     fb0:	bf 90       	pop	r11
     fb2:	af 90       	pop	r10
     fb4:	08 95       	ret

00000fb6 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     fb6:	6f 92       	push	r6
     fb8:	7f 92       	push	r7
     fba:	8f 92       	push	r8
     fbc:	9f 92       	push	r9
     fbe:	af 92       	push	r10
     fc0:	bf 92       	push	r11
     fc2:	cf 92       	push	r12
     fc4:	df 92       	push	r13
     fc6:	ef 92       	push	r14
     fc8:	ff 92       	push	r15
     fca:	0f 93       	push	r16
     fcc:	1f 93       	push	r17
     fce:	cf 93       	push	r28
     fd0:	df 93       	push	r29
     fd2:	cd b7       	in	r28, 0x3d	; 61
     fd4:	de b7       	in	r29, 0x3e	; 62
     fd6:	2e 97       	sbiw	r28, 0x0e	; 14
     fd8:	0f b6       	in	r0, 0x3f	; 63
     fda:	f8 94       	cli
     fdc:	de bf       	out	0x3e, r29	; 62
     fde:	0f be       	out	0x3f, r0	; 63
     fe0:	cd bf       	out	0x3d, r28	; 61
     fe2:	4c 01       	movw	r8, r24
     fe4:	5b 01       	movw	r10, r22
     fe6:	6a 01       	movw	r12, r20
     fe8:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     fea:	ae 01       	movw	r20, r28
     fec:	4f 5f       	subi	r20, 0xFF	; 255
     fee:	5f 4f       	sbci	r21, 0xFF	; 255
     ff0:	6e e0       	ldi	r22, 0x0E	; 14
     ff2:	8b e3       	ldi	r24, 0x3B	; 59
     ff4:	98 df       	rcall	.-208    	; 0xf26 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     ff6:	89 81       	ldd	r24, Y+1	; 0x01
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	98 2f       	mov	r25, r24
     ffc:	88 27       	eor	r24, r24
     ffe:	2a 81       	ldd	r18, Y+2	; 0x02
    1000:	82 2b       	or	r24, r18
    1002:	f4 01       	movw	r30, r8
    1004:	91 83       	std	Z+1, r25	; 0x01
    1006:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    1008:	8b 81       	ldd	r24, Y+3	; 0x03
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	98 2f       	mov	r25, r24
    100e:	88 27       	eor	r24, r24
    1010:	2c 81       	ldd	r18, Y+4	; 0x04
    1012:	82 2b       	or	r24, r18
    1014:	f5 01       	movw	r30, r10
    1016:	91 83       	std	Z+1, r25	; 0x01
    1018:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    101a:	8d 81       	ldd	r24, Y+5	; 0x05
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	98 2f       	mov	r25, r24
    1020:	88 27       	eor	r24, r24
    1022:	2e 81       	ldd	r18, Y+6	; 0x06
    1024:	82 2b       	or	r24, r18
    1026:	f6 01       	movw	r30, r12
    1028:	91 83       	std	Z+1, r25	; 0x01
    102a:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    102c:	89 85       	ldd	r24, Y+9	; 0x09
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	98 2f       	mov	r25, r24
    1032:	88 27       	eor	r24, r24
    1034:	2a 85       	ldd	r18, Y+10	; 0x0a
    1036:	82 2b       	or	r24, r18
    1038:	f3 01       	movw	r30, r6
    103a:	91 83       	std	Z+1, r25	; 0x01
    103c:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    103e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	98 2f       	mov	r25, r24
    1044:	88 27       	eor	r24, r24
    1046:	2c 85       	ldd	r18, Y+12	; 0x0c
    1048:	82 2b       	or	r24, r18
    104a:	f8 01       	movw	r30, r16
    104c:	91 83       	std	Z+1, r25	; 0x01
    104e:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    1050:	8d 85       	ldd	r24, Y+13	; 0x0d
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	98 2f       	mov	r25, r24
    1056:	88 27       	eor	r24, r24
    1058:	2e 85       	ldd	r18, Y+14	; 0x0e
    105a:	82 2b       	or	r24, r18
    105c:	f7 01       	movw	r30, r14
    105e:	91 83       	std	Z+1, r25	; 0x01
    1060:	80 83       	st	Z, r24
    1062:	2e 96       	adiw	r28, 0x0e	; 14
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	f8 94       	cli
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	cd bf       	out	0x3d, r28	; 61
    106e:	df 91       	pop	r29
    1070:	cf 91       	pop	r28
    1072:	1f 91       	pop	r17
    1074:	0f 91       	pop	r16
    1076:	ff 90       	pop	r15
    1078:	ef 90       	pop	r14
    107a:	df 90       	pop	r13
    107c:	cf 90       	pop	r12
    107e:	bf 90       	pop	r11
    1080:	af 90       	pop	r10
    1082:	9f 90       	pop	r9
    1084:	8f 90       	pop	r8
    1086:	7f 90       	pop	r7
    1088:	6f 90       	pop	r6
    108a:	08 95       	ret

0000108c <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    108c:	e1 ea       	ldi	r30, 0xA1	; 161
    108e:	f0 e0       	ldi	r31, 0x00	; 0
    1090:	80 81       	ld	r24, Z
    1092:	81 60       	ori	r24, 0x01	; 1
    1094:	80 83       	st	Z, r24
    1096:	e0 ea       	ldi	r30, 0xA0	; 160
    1098:	f0 e0       	ldi	r31, 0x00	; 0
    109a:	80 81       	ld	r24, Z
    109c:	81 60       	ori	r24, 0x01	; 1
    109e:	80 83       	st	Z, r24
    10a0:	80 81       	ld	r24, Z
    10a2:	80 68       	ori	r24, 0x80	; 128
    10a4:	80 83       	st	Z, r24
    10a6:	80 81       	ld	r24, Z
    10a8:	80 62       	ori	r24, 0x20	; 32
    10aa:	80 83       	st	Z, r24
    10ac:	80 81       	ld	r24, Z
    10ae:	88 60       	ori	r24, 0x08	; 8
    10b0:	80 83       	st	Z, r24
    10b2:	08 95       	ret

000010b4 <setup_timer5>:
    10b4:	e1 e2       	ldi	r30, 0x21	; 33
    10b6:	f1 e0       	ldi	r31, 0x01	; 1
    10b8:	80 81       	ld	r24, Z
    10ba:	81 60       	ori	r24, 0x01	; 1
    10bc:	80 83       	st	Z, r24
    10be:	80 81       	ld	r24, Z
    10c0:	88 60       	ori	r24, 0x08	; 8
    10c2:	80 83       	st	Z, r24
    10c4:	08 95       	ret

000010c6 <Enable_timer5_compare_interrupt>:
    10c6:	e3 e7       	ldi	r30, 0x73	; 115
    10c8:	f0 e0       	ldi	r31, 0x00	; 0
    10ca:	80 81       	ld	r24, Z
    10cc:	82 60       	ori	r24, 0x02	; 2
    10ce:	80 83       	st	Z, r24
    10d0:	08 95       	ret

000010d2 <setup_timer0>:
    10d2:	85 b5       	in	r24, 0x25	; 37
    10d4:	81 60       	ori	r24, 0x01	; 1
    10d6:	85 bd       	out	0x25, r24	; 37
    10d8:	85 b5       	in	r24, 0x25	; 37
    10da:	82 60       	ori	r24, 0x02	; 2
    10dc:	85 bd       	out	0x25, r24	; 37
    10de:	08 95       	ret

000010e0 <Enable_timer0_overflow_interrupt>:
    10e0:	ee e6       	ldi	r30, 0x6E	; 110
    10e2:	f0 e0       	ldi	r31, 0x00	; 0
    10e4:	80 81       	ld	r24, Z
    10e6:	81 60       	ori	r24, 0x01	; 1
    10e8:	80 83       	st	Z, r24
    10ea:	08 95       	ret

000010ec <micros>:
    10ec:	3f b7       	in	r19, 0x3f	; 63
    10ee:	f8 94       	cli
    10f0:	80 91 a1 03 	lds	r24, 0x03A1	; 0x8003a1 <timer0_overflow_count>
    10f4:	90 91 a2 03 	lds	r25, 0x03A2	; 0x8003a2 <timer0_overflow_count+0x1>
    10f8:	a0 91 a3 03 	lds	r26, 0x03A3	; 0x8003a3 <timer0_overflow_count+0x2>
    10fc:	b0 91 a4 03 	lds	r27, 0x03A4	; 0x8003a4 <timer0_overflow_count+0x3>
    1100:	26 b5       	in	r18, 0x26	; 38
    1102:	a8 9b       	sbis	0x15, 0	; 21
    1104:	05 c0       	rjmp	.+10     	; 0x1110 <micros+0x24>
    1106:	2f 3f       	cpi	r18, 0xFF	; 255
    1108:	19 f0       	breq	.+6      	; 0x1110 <micros+0x24>
    110a:	01 96       	adiw	r24, 0x01	; 1
    110c:	a1 1d       	adc	r26, r1
    110e:	b1 1d       	adc	r27, r1
    1110:	3f bf       	out	0x3f, r19	; 63
    1112:	ba 2f       	mov	r27, r26
    1114:	a9 2f       	mov	r26, r25
    1116:	98 2f       	mov	r25, r24
    1118:	88 27       	eor	r24, r24
    111a:	82 0f       	add	r24, r18
    111c:	91 1d       	adc	r25, r1
    111e:	a1 1d       	adc	r26, r1
    1120:	b1 1d       	adc	r27, r1
    1122:	bc 01       	movw	r22, r24
    1124:	cd 01       	movw	r24, r26
    1126:	66 0f       	add	r22, r22
    1128:	77 1f       	adc	r23, r23
    112a:	88 1f       	adc	r24, r24
    112c:	99 1f       	adc	r25, r25
    112e:	66 0f       	add	r22, r22
    1130:	77 1f       	adc	r23, r23
    1132:	88 1f       	adc	r24, r24
    1134:	99 1f       	adc	r25, r25
    1136:	08 95       	ret

00001138 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    1138:	1f 92       	push	r1
    113a:	0f 92       	push	r0
    113c:	0f b6       	in	r0, 0x3f	; 63
    113e:	0f 92       	push	r0
    1140:	11 24       	eor	r1, r1
    1142:	2f 93       	push	r18
    1144:	3f 93       	push	r19
    1146:	8f 93       	push	r24
    1148:	9f 93       	push	r25
    114a:	af 93       	push	r26
    114c:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    114e:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <timer0_millis>
    1152:	90 91 9e 03 	lds	r25, 0x039E	; 0x80039e <timer0_millis+0x1>
    1156:	a0 91 9f 03 	lds	r26, 0x039F	; 0x80039f <timer0_millis+0x2>
    115a:	b0 91 a0 03 	lds	r27, 0x03A0	; 0x8003a0 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    115e:	30 91 9c 03 	lds	r19, 0x039C	; 0x80039c <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    1162:	23 e0       	ldi	r18, 0x03	; 3
    1164:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    1166:	2d 37       	cpi	r18, 0x7D	; 125
    1168:	20 f4       	brcc	.+8      	; 0x1172 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    116a:	01 96       	adiw	r24, 0x01	; 1
    116c:	a1 1d       	adc	r26, r1
    116e:	b1 1d       	adc	r27, r1
    1170:	05 c0       	rjmp	.+10     	; 0x117c <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    1172:	26 e8       	ldi	r18, 0x86	; 134
    1174:	23 0f       	add	r18, r19
		m += 1;
    1176:	02 96       	adiw	r24, 0x02	; 2
    1178:	a1 1d       	adc	r26, r1
    117a:	b1 1d       	adc	r27, r1
	}


	timer0_fract = f;
    117c:	20 93 9c 03 	sts	0x039C, r18	; 0x80039c <timer0_fract>
	timer0_millis = m;
    1180:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <timer0_millis>
    1184:	90 93 9e 03 	sts	0x039E, r25	; 0x80039e <timer0_millis+0x1>
    1188:	a0 93 9f 03 	sts	0x039F, r26	; 0x80039f <timer0_millis+0x2>
    118c:	b0 93 a0 03 	sts	0x03A0, r27	; 0x8003a0 <timer0_millis+0x3>
	timer0_overflow_count++;
    1190:	80 91 a1 03 	lds	r24, 0x03A1	; 0x8003a1 <timer0_overflow_count>
    1194:	90 91 a2 03 	lds	r25, 0x03A2	; 0x8003a2 <timer0_overflow_count+0x1>
    1198:	a0 91 a3 03 	lds	r26, 0x03A3	; 0x8003a3 <timer0_overflow_count+0x2>
    119c:	b0 91 a4 03 	lds	r27, 0x03A4	; 0x8003a4 <timer0_overflow_count+0x3>
    11a0:	01 96       	adiw	r24, 0x01	; 1
    11a2:	a1 1d       	adc	r26, r1
    11a4:	b1 1d       	adc	r27, r1
    11a6:	80 93 a1 03 	sts	0x03A1, r24	; 0x8003a1 <timer0_overflow_count>
    11aa:	90 93 a2 03 	sts	0x03A2, r25	; 0x8003a2 <timer0_overflow_count+0x1>
    11ae:	a0 93 a3 03 	sts	0x03A3, r26	; 0x8003a3 <timer0_overflow_count+0x2>
    11b2:	b0 93 a4 03 	sts	0x03A4, r27	; 0x8003a4 <timer0_overflow_count+0x3>
}
    11b6:	bf 91       	pop	r27
    11b8:	af 91       	pop	r26
    11ba:	9f 91       	pop	r25
    11bc:	8f 91       	pop	r24
    11be:	3f 91       	pop	r19
    11c0:	2f 91       	pop	r18
    11c2:	0f 90       	pop	r0
    11c4:	0f be       	out	0x3f, r0	; 63
    11c6:	0f 90       	pop	r0
    11c8:	1f 90       	pop	r1
    11ca:	18 95       	reti

000011cc <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    11cc:	1f 92       	push	r1
    11ce:	0f 92       	push	r0
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	0f 92       	push	r0
    11d4:	11 24       	eor	r1, r1
    11d6:	0b b6       	in	r0, 0x3b	; 59
    11d8:	0f 92       	push	r0
    11da:	2f 93       	push	r18
    11dc:	3f 93       	push	r19
    11de:	4f 93       	push	r20
    11e0:	5f 93       	push	r21
    11e2:	6f 93       	push	r22
    11e4:	7f 93       	push	r23
    11e6:	8f 93       	push	r24
    11e8:	9f 93       	push	r25
    11ea:	af 93       	push	r26
    11ec:	bf 93       	push	r27
    11ee:	ef 93       	push	r30
    11f0:	ff 93       	push	r31
	PWM_update();
    11f2:	3d d8       	rcall	.-3974   	; 0x26e <PWM_update>
    11f4:	ff 91       	pop	r31
    11f6:	ef 91       	pop	r30
    11f8:	bf 91       	pop	r27
    11fa:	af 91       	pop	r26
    11fc:	9f 91       	pop	r25
    11fe:	8f 91       	pop	r24
    1200:	7f 91       	pop	r23
    1202:	6f 91       	pop	r22
    1204:	5f 91       	pop	r21
    1206:	4f 91       	pop	r20
    1208:	3f 91       	pop	r19
    120a:	2f 91       	pop	r18
    120c:	0f 90       	pop	r0
    120e:	0b be       	out	0x3b, r0	; 59
    1210:	0f 90       	pop	r0
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	0f 90       	pop	r0
    1216:	1f 90       	pop	r1
    1218:	18 95       	reti

0000121a <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    121a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    121e:	8c e0       	ldi	r24, 0x0C	; 12
    1220:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    1224:	08 95       	ret

00001226 <i2c_start>:
    1226:	94 ea       	ldi	r25, 0xA4	; 164
    1228:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    122c:	4f ef       	ldi	r20, 0xFF	; 255
    122e:	50 e0       	ldi	r21, 0x00	; 0
    1230:	60 e0       	ldi	r22, 0x00	; 0
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	ec eb       	ldi	r30, 0xBC	; 188
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	90 81       	ld	r25, Z
    123a:	99 23       	and	r25, r25
    123c:	34 f0       	brlt	.+12     	; 0x124a <i2c_start+0x24>
    123e:	41 50       	subi	r20, 0x01	; 1
    1240:	51 09       	sbc	r21, r1
    1242:	61 09       	sbc	r22, r1
    1244:	71 09       	sbc	r23, r1
    1246:	c0 f7       	brcc	.-16     	; 0x1238 <i2c_start+0x12>
    1248:	04 c0       	rjmp	.+8      	; 0x1252 <i2c_start+0x2c>
    124a:	45 2b       	or	r20, r21
    124c:	46 2b       	or	r20, r22
    124e:	47 2b       	or	r20, r23
    1250:	41 f1       	breq	.+80     	; 0x12a2 <i2c_start+0x7c>
    1252:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1256:	98 7f       	andi	r25, 0xF8	; 248
    1258:	98 30       	cpi	r25, 0x08	; 8
    125a:	11 f0       	breq	.+4      	; 0x1260 <i2c_start+0x3a>
    125c:	90 31       	cpi	r25, 0x10	; 16
    125e:	19 f5       	brne	.+70     	; 0x12a6 <i2c_start+0x80>
    1260:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1264:	84 e8       	ldi	r24, 0x84	; 132
    1266:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    126a:	8f ef       	ldi	r24, 0xFF	; 255
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	a0 e0       	ldi	r26, 0x00	; 0
    1270:	b0 e0       	ldi	r27, 0x00	; 0
    1272:	ec eb       	ldi	r30, 0xBC	; 188
    1274:	f0 e0       	ldi	r31, 0x00	; 0
    1276:	20 81       	ld	r18, Z
    1278:	22 23       	and	r18, r18
    127a:	2c f0       	brlt	.+10     	; 0x1286 <i2c_start+0x60>
    127c:	01 97       	sbiw	r24, 0x01	; 1
    127e:	a1 09       	sbc	r26, r1
    1280:	b1 09       	sbc	r27, r1
    1282:	c8 f7       	brcc	.-14     	; 0x1276 <i2c_start+0x50>
    1284:	04 c0       	rjmp	.+8      	; 0x128e <i2c_start+0x68>
    1286:	89 2b       	or	r24, r25
    1288:	8a 2b       	or	r24, r26
    128a:	8b 2b       	or	r24, r27
    128c:	71 f0       	breq	.+28     	; 0x12aa <i2c_start+0x84>
    128e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1292:	98 7f       	andi	r25, 0xF8	; 248
    1294:	98 31       	cpi	r25, 0x18	; 24
    1296:	59 f0       	breq	.+22     	; 0x12ae <i2c_start+0x88>
    1298:	81 e0       	ldi	r24, 0x01	; 1
    129a:	90 34       	cpi	r25, 0x40	; 64
    129c:	49 f4       	brne	.+18     	; 0x12b0 <i2c_start+0x8a>
    129e:	80 e0       	ldi	r24, 0x00	; 0
    12a0:	08 95       	ret
    12a2:	81 e0       	ldi	r24, 0x01	; 1
    12a4:	08 95       	ret
    12a6:	81 e0       	ldi	r24, 0x01	; 1
    12a8:	08 95       	ret
    12aa:	81 e0       	ldi	r24, 0x01	; 1
    12ac:	08 95       	ret
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	08 95       	ret

000012b2 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    12b2:	84 e9       	ldi	r24, 0x94	; 148
    12b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	ec eb       	ldi	r30, 0xBC	; 188
    12be:	f0 e0       	ldi	r31, 0x00	; 0
    12c0:	20 81       	ld	r18, Z
    12c2:	24 ff       	sbrs	r18, 4
    12c4:	05 c0       	rjmp	.+10     	; 0x12d0 <i2c_stop+0x1e>
    12c6:	01 96       	adiw	r24, 0x01	; 1
    12c8:	81 15       	cp	r24, r1
    12ca:	21 e0       	ldi	r18, 0x01	; 1
    12cc:	92 07       	cpc	r25, r18
    12ce:	c1 f7       	brne	.-16     	; 0x12c0 <i2c_stop+0xe>
    12d0:	08 95       	ret

000012d2 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    12d2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    12d6:	84 e8       	ldi	r24, 0x84	; 132
    12d8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    12dc:	8f ef       	ldi	r24, 0xFF	; 255
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	a0 e0       	ldi	r26, 0x00	; 0
    12e2:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    12e4:	ec eb       	ldi	r30, 0xBC	; 188
    12e6:	f0 e0       	ldi	r31, 0x00	; 0
    12e8:	20 81       	ld	r18, Z
    12ea:	22 23       	and	r18, r18
    12ec:	2c f0       	brlt	.+10     	; 0x12f8 <i2c_write+0x26>
    12ee:	01 97       	sbiw	r24, 0x01	; 1
    12f0:	a1 09       	sbc	r26, r1
    12f2:	b1 09       	sbc	r27, r1
    12f4:	c8 f7       	brcc	.-14     	; 0x12e8 <i2c_write+0x16>
    12f6:	04 c0       	rjmp	.+8      	; 0x1300 <i2c_write+0x2e>
	if(i2c_timer == 0)
    12f8:	89 2b       	or	r24, r25
    12fa:	8a 2b       	or	r24, r26
    12fc:	8b 2b       	or	r24, r27
    12fe:	41 f0       	breq	.+16     	; 0x1310 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    1300:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1304:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
    1306:	81 e0       	ldi	r24, 0x01	; 1
    1308:	98 32       	cpi	r25, 0x28	; 40
    130a:	19 f4       	brne	.+6      	; 0x1312 <i2c_write+0x40>
    130c:	80 e0       	ldi	r24, 0x00	; 0
    130e:	08 95       	ret

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    1310:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    1312:	08 95       	ret

00001314 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    1314:	84 ec       	ldi	r24, 0xC4	; 196
    1316:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    131a:	8f ef       	ldi	r24, 0xFF	; 255
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	a0 e0       	ldi	r26, 0x00	; 0
    1320:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1322:	ec eb       	ldi	r30, 0xBC	; 188
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	20 81       	ld	r18, Z
    1328:	22 23       	and	r18, r18
    132a:	2c f0       	brlt	.+10     	; 0x1336 <i2c_readAck+0x22>
    132c:	01 97       	sbiw	r24, 0x01	; 1
    132e:	a1 09       	sbc	r26, r1
    1330:	b1 09       	sbc	r27, r1
    1332:	c8 f7       	brcc	.-14     	; 0x1326 <i2c_readAck+0x12>
    1334:	04 c0       	rjmp	.+8      	; 0x133e <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    1336:	89 2b       	or	r24, r25
    1338:	8a 2b       	or	r24, r26
    133a:	8b 2b       	or	r24, r27
    133c:	19 f0       	breq	.+6      	; 0x1344 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    133e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1342:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    1344:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    1346:	08 95       	ret

00001348 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    1348:	84 e8       	ldi	r24, 0x84	; 132
    134a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    134e:	8f ef       	ldi	r24, 0xFF	; 255
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	a0 e0       	ldi	r26, 0x00	; 0
    1354:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1356:	ec eb       	ldi	r30, 0xBC	; 188
    1358:	f0 e0       	ldi	r31, 0x00	; 0
    135a:	20 81       	ld	r18, Z
    135c:	22 23       	and	r18, r18
    135e:	2c f0       	brlt	.+10     	; 0x136a <i2c_readNak+0x22>
    1360:	01 97       	sbiw	r24, 0x01	; 1
    1362:	a1 09       	sbc	r26, r1
    1364:	b1 09       	sbc	r27, r1
    1366:	c8 f7       	brcc	.-14     	; 0x135a <i2c_readNak+0x12>
    1368:	04 c0       	rjmp	.+8      	; 0x1372 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    136a:	89 2b       	or	r24, r25
    136c:	8a 2b       	or	r24, r26
    136e:	8b 2b       	or	r24, r27
    1370:	19 f0       	breq	.+6      	; 0x1378 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    1372:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1376:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    1378:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    137a:	08 95       	ret

0000137c <USART_Init>:
{
	printf(c);
	//printf(" ");
	print16(&intToPrint);
	printf("  ");
}
    137c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1380:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1384:	88 e0       	ldi	r24, 0x08	; 8
    1386:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    138a:	8e e0       	ldi	r24, 0x0E	; 14
    138c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1390:	08 95       	ret

00001392 <uart_putchar>:
    1392:	cf 93       	push	r28
    1394:	c8 2f       	mov	r28, r24
    1396:	8a 30       	cpi	r24, 0x0A	; 10
    1398:	11 f4       	brne	.+4      	; 0x139e <uart_putchar+0xc>
    139a:	8d e0       	ldi	r24, 0x0D	; 13
    139c:	fa df       	rcall	.-12     	; 0x1392 <uart_putchar>
    139e:	e0 ec       	ldi	r30, 0xC0	; 192
    13a0:	f0 e0       	ldi	r31, 0x00	; 0
    13a2:	90 81       	ld	r25, Z
    13a4:	95 ff       	sbrs	r25, 5
    13a6:	fd cf       	rjmp	.-6      	; 0x13a2 <uart_putchar+0x10>
    13a8:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    13ac:	80 e0       	ldi	r24, 0x00	; 0
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	cf 91       	pop	r28
    13b2:	08 95       	ret

000013b4 <printDouble>:
void printDouble(double *value)
{
    13b4:	0f 93       	push	r16
    13b6:	1f 93       	push	r17
    13b8:	cf 93       	push	r28
    13ba:	df 93       	push	r29
    13bc:	cd b7       	in	r28, 0x3d	; 61
    13be:	de b7       	in	r29, 0x3e	; 62
    13c0:	64 97       	sbiw	r28, 0x14	; 20
    13c2:	0f b6       	in	r0, 0x3f	; 63
    13c4:	f8 94       	cli
    13c6:	de bf       	out	0x3e, r29	; 62
    13c8:	0f be       	out	0x3f, r0	; 63
    13ca:	cd bf       	out	0x3d, r28	; 61
    13cc:	fc 01       	movw	r30, r24
	char c[20]={0};
    13ce:	8e 01       	movw	r16, r28
    13d0:	0f 5f       	subi	r16, 0xFF	; 255
    13d2:	1f 4f       	sbci	r17, 0xFF	; 255
    13d4:	84 e1       	ldi	r24, 0x14	; 20
    13d6:	d8 01       	movw	r26, r16
    13d8:	1d 92       	st	X+, r1
    13da:	8a 95       	dec	r24
    13dc:	e9 f7       	brne	.-6      	; 0x13d8 <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    13de:	83 81       	ldd	r24, Z+3	; 0x03
    13e0:	8f 93       	push	r24
    13e2:	82 81       	ldd	r24, Z+2	; 0x02
    13e4:	8f 93       	push	r24
    13e6:	81 81       	ldd	r24, Z+1	; 0x01
    13e8:	8f 93       	push	r24
    13ea:	80 81       	ld	r24, Z
    13ec:	8f 93       	push	r24
    13ee:	87 e9       	ldi	r24, 0x97	; 151
    13f0:	93 e0       	ldi	r25, 0x03	; 3
    13f2:	9f 93       	push	r25
    13f4:	8f 93       	push	r24
    13f6:	1f 93       	push	r17
    13f8:	0f 93       	push	r16
    13fa:	0e 94 6b 12 	call	0x24d6	; 0x24d6 <sprintf>
	printf(c);
    13fe:	1f 93       	push	r17
    1400:	0f 93       	push	r16
    1402:	0e 94 53 12 	call	0x24a6	; 0x24a6 <printf>
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	f8 94       	cli
    140a:	de bf       	out	0x3e, r29	; 62
    140c:	0f be       	out	0x3f, r0	; 63
    140e:	cd bf       	out	0x3d, r28	; 61
}
    1410:	64 96       	adiw	r28, 0x14	; 20
    1412:	0f b6       	in	r0, 0x3f	; 63
    1414:	f8 94       	cli
    1416:	de bf       	out	0x3e, r29	; 62
    1418:	0f be       	out	0x3f, r0	; 63
    141a:	cd bf       	out	0x3d, r28	; 61
    141c:	df 91       	pop	r29
    141e:	cf 91       	pop	r28
    1420:	1f 91       	pop	r17
    1422:	0f 91       	pop	r16
    1424:	08 95       	ret

00001426 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    1426:	cf 93       	push	r28
    1428:	df 93       	push	r29
    142a:	00 d0       	rcall	.+0      	; 0x142c <printSD+0x6>
    142c:	1f 92       	push	r1
    142e:	cd b7       	in	r28, 0x3d	; 61
    1430:	de b7       	in	r29, 0x3e	; 62
    1432:	49 83       	std	Y+1, r20	; 0x01
    1434:	5a 83       	std	Y+2, r21	; 0x02
    1436:	6b 83       	std	Y+3, r22	; 0x03
    1438:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    143a:	9f 93       	push	r25
    143c:	8f 93       	push	r24
    143e:	0e 94 53 12 	call	0x24a6	; 0x24a6 <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    1442:	ce 01       	movw	r24, r28
    1444:	01 96       	adiw	r24, 0x01	; 1
    1446:	b6 df       	rcall	.-148    	; 0x13b4 <printDouble>
	printf("  ");
    1448:	84 e9       	ldi	r24, 0x94	; 148
    144a:	93 e0       	ldi	r25, 0x03	; 3
    144c:	9f 93       	push	r25
    144e:	8f 93       	push	r24
    1450:	0e 94 53 12 	call	0x24a6	; 0x24a6 <printf>
    1454:	0f 90       	pop	r0
    1456:	0f 90       	pop	r0
    1458:	0f 90       	pop	r0
    145a:	0f 90       	pop	r0
    145c:	0f 90       	pop	r0
    145e:	0f 90       	pop	r0
    1460:	0f 90       	pop	r0
    1462:	0f 90       	pop	r0
    1464:	df 91       	pop	r29
    1466:	cf 91       	pop	r28
    1468:	08 95       	ret

0000146a <__subsf3>:
    146a:	50 58       	subi	r21, 0x80	; 128

0000146c <__addsf3>:
    146c:	bb 27       	eor	r27, r27
    146e:	aa 27       	eor	r26, r26
    1470:	0e d0       	rcall	.+28     	; 0x148e <__addsf3x>
    1472:	fc c1       	rjmp	.+1016   	; 0x186c <__fp_round>
    1474:	ed d1       	rcall	.+986    	; 0x1850 <__fp_pscA>
    1476:	30 f0       	brcs	.+12     	; 0x1484 <__addsf3+0x18>
    1478:	f2 d1       	rcall	.+996    	; 0x185e <__fp_pscB>
    147a:	20 f0       	brcs	.+8      	; 0x1484 <__addsf3+0x18>
    147c:	31 f4       	brne	.+12     	; 0x148a <__addsf3+0x1e>
    147e:	9f 3f       	cpi	r25, 0xFF	; 255
    1480:	11 f4       	brne	.+4      	; 0x1486 <__addsf3+0x1a>
    1482:	1e f4       	brtc	.+6      	; 0x148a <__addsf3+0x1e>
    1484:	bd c1       	rjmp	.+890    	; 0x1800 <__fp_nan>
    1486:	0e f4       	brtc	.+2      	; 0x148a <__addsf3+0x1e>
    1488:	e0 95       	com	r30
    148a:	e7 fb       	bst	r30, 7
    148c:	b3 c1       	rjmp	.+870    	; 0x17f4 <__fp_inf>

0000148e <__addsf3x>:
    148e:	e9 2f       	mov	r30, r25
    1490:	fe d1       	rcall	.+1020   	; 0x188e <__fp_split3>
    1492:	80 f3       	brcs	.-32     	; 0x1474 <__addsf3+0x8>
    1494:	ba 17       	cp	r27, r26
    1496:	62 07       	cpc	r22, r18
    1498:	73 07       	cpc	r23, r19
    149a:	84 07       	cpc	r24, r20
    149c:	95 07       	cpc	r25, r21
    149e:	18 f0       	brcs	.+6      	; 0x14a6 <__addsf3x+0x18>
    14a0:	71 f4       	brne	.+28     	; 0x14be <__addsf3x+0x30>
    14a2:	9e f5       	brtc	.+102    	; 0x150a <__addsf3x+0x7c>
    14a4:	16 c2       	rjmp	.+1068   	; 0x18d2 <__fp_zero>
    14a6:	0e f4       	brtc	.+2      	; 0x14aa <__addsf3x+0x1c>
    14a8:	e0 95       	com	r30
    14aa:	0b 2e       	mov	r0, r27
    14ac:	ba 2f       	mov	r27, r26
    14ae:	a0 2d       	mov	r26, r0
    14b0:	0b 01       	movw	r0, r22
    14b2:	b9 01       	movw	r22, r18
    14b4:	90 01       	movw	r18, r0
    14b6:	0c 01       	movw	r0, r24
    14b8:	ca 01       	movw	r24, r20
    14ba:	a0 01       	movw	r20, r0
    14bc:	11 24       	eor	r1, r1
    14be:	ff 27       	eor	r31, r31
    14c0:	59 1b       	sub	r21, r25
    14c2:	99 f0       	breq	.+38     	; 0x14ea <__addsf3x+0x5c>
    14c4:	59 3f       	cpi	r21, 0xF9	; 249
    14c6:	50 f4       	brcc	.+20     	; 0x14dc <__addsf3x+0x4e>
    14c8:	50 3e       	cpi	r21, 0xE0	; 224
    14ca:	68 f1       	brcs	.+90     	; 0x1526 <__addsf3x+0x98>
    14cc:	1a 16       	cp	r1, r26
    14ce:	f0 40       	sbci	r31, 0x00	; 0
    14d0:	a2 2f       	mov	r26, r18
    14d2:	23 2f       	mov	r18, r19
    14d4:	34 2f       	mov	r19, r20
    14d6:	44 27       	eor	r20, r20
    14d8:	58 5f       	subi	r21, 0xF8	; 248
    14da:	f3 cf       	rjmp	.-26     	; 0x14c2 <__addsf3x+0x34>
    14dc:	46 95       	lsr	r20
    14de:	37 95       	ror	r19
    14e0:	27 95       	ror	r18
    14e2:	a7 95       	ror	r26
    14e4:	f0 40       	sbci	r31, 0x00	; 0
    14e6:	53 95       	inc	r21
    14e8:	c9 f7       	brne	.-14     	; 0x14dc <__addsf3x+0x4e>
    14ea:	7e f4       	brtc	.+30     	; 0x150a <__addsf3x+0x7c>
    14ec:	1f 16       	cp	r1, r31
    14ee:	ba 0b       	sbc	r27, r26
    14f0:	62 0b       	sbc	r22, r18
    14f2:	73 0b       	sbc	r23, r19
    14f4:	84 0b       	sbc	r24, r20
    14f6:	ba f0       	brmi	.+46     	; 0x1526 <__addsf3x+0x98>
    14f8:	91 50       	subi	r25, 0x01	; 1
    14fa:	a1 f0       	breq	.+40     	; 0x1524 <__addsf3x+0x96>
    14fc:	ff 0f       	add	r31, r31
    14fe:	bb 1f       	adc	r27, r27
    1500:	66 1f       	adc	r22, r22
    1502:	77 1f       	adc	r23, r23
    1504:	88 1f       	adc	r24, r24
    1506:	c2 f7       	brpl	.-16     	; 0x14f8 <__addsf3x+0x6a>
    1508:	0e c0       	rjmp	.+28     	; 0x1526 <__addsf3x+0x98>
    150a:	ba 0f       	add	r27, r26
    150c:	62 1f       	adc	r22, r18
    150e:	73 1f       	adc	r23, r19
    1510:	84 1f       	adc	r24, r20
    1512:	48 f4       	brcc	.+18     	; 0x1526 <__addsf3x+0x98>
    1514:	87 95       	ror	r24
    1516:	77 95       	ror	r23
    1518:	67 95       	ror	r22
    151a:	b7 95       	ror	r27
    151c:	f7 95       	ror	r31
    151e:	9e 3f       	cpi	r25, 0xFE	; 254
    1520:	08 f0       	brcs	.+2      	; 0x1524 <__addsf3x+0x96>
    1522:	b3 cf       	rjmp	.-154    	; 0x148a <__addsf3+0x1e>
    1524:	93 95       	inc	r25
    1526:	88 0f       	add	r24, r24
    1528:	08 f0       	brcs	.+2      	; 0x152c <__addsf3x+0x9e>
    152a:	99 27       	eor	r25, r25
    152c:	ee 0f       	add	r30, r30
    152e:	97 95       	ror	r25
    1530:	87 95       	ror	r24
    1532:	08 95       	ret
    1534:	8d d1       	rcall	.+794    	; 0x1850 <__fp_pscA>
    1536:	58 f0       	brcs	.+22     	; 0x154e <__addsf3x+0xc0>
    1538:	80 e8       	ldi	r24, 0x80	; 128
    153a:	91 e0       	ldi	r25, 0x01	; 1
    153c:	09 f4       	brne	.+2      	; 0x1540 <__addsf3x+0xb2>
    153e:	9e ef       	ldi	r25, 0xFE	; 254
    1540:	8e d1       	rcall	.+796    	; 0x185e <__fp_pscB>
    1542:	28 f0       	brcs	.+10     	; 0x154e <__addsf3x+0xc0>
    1544:	40 e8       	ldi	r20, 0x80	; 128
    1546:	51 e0       	ldi	r21, 0x01	; 1
    1548:	59 f4       	brne	.+22     	; 0x1560 <atan2+0xe>
    154a:	5e ef       	ldi	r21, 0xFE	; 254
    154c:	09 c0       	rjmp	.+18     	; 0x1560 <atan2+0xe>
    154e:	58 c1       	rjmp	.+688    	; 0x1800 <__fp_nan>
    1550:	c0 c1       	rjmp	.+896    	; 0x18d2 <__fp_zero>

00001552 <atan2>:
    1552:	e9 2f       	mov	r30, r25
    1554:	e0 78       	andi	r30, 0x80	; 128
    1556:	9b d1       	rcall	.+822    	; 0x188e <__fp_split3>
    1558:	68 f3       	brcs	.-38     	; 0x1534 <__addsf3x+0xa6>
    155a:	09 2e       	mov	r0, r25
    155c:	05 2a       	or	r0, r21
    155e:	c1 f3       	breq	.-16     	; 0x1550 <__addsf3x+0xc2>
    1560:	26 17       	cp	r18, r22
    1562:	37 07       	cpc	r19, r23
    1564:	48 07       	cpc	r20, r24
    1566:	59 07       	cpc	r21, r25
    1568:	38 f0       	brcs	.+14     	; 0x1578 <atan2+0x26>
    156a:	0e 2e       	mov	r0, r30
    156c:	07 f8       	bld	r0, 7
    156e:	e0 25       	eor	r30, r0
    1570:	69 f0       	breq	.+26     	; 0x158c <atan2+0x3a>
    1572:	e0 25       	eor	r30, r0
    1574:	e0 64       	ori	r30, 0x40	; 64
    1576:	0a c0       	rjmp	.+20     	; 0x158c <atan2+0x3a>
    1578:	ef 63       	ori	r30, 0x3F	; 63
    157a:	07 f8       	bld	r0, 7
    157c:	00 94       	com	r0
    157e:	07 fa       	bst	r0, 7
    1580:	db 01       	movw	r26, r22
    1582:	b9 01       	movw	r22, r18
    1584:	9d 01       	movw	r18, r26
    1586:	dc 01       	movw	r26, r24
    1588:	ca 01       	movw	r24, r20
    158a:	ad 01       	movw	r20, r26
    158c:	ef 93       	push	r30
    158e:	47 d0       	rcall	.+142    	; 0x161e <__divsf3_pse>
    1590:	6d d1       	rcall	.+730    	; 0x186c <__fp_round>
    1592:	0a d0       	rcall	.+20     	; 0x15a8 <atan>
    1594:	5f 91       	pop	r21
    1596:	55 23       	and	r21, r21
    1598:	31 f0       	breq	.+12     	; 0x15a6 <atan2+0x54>
    159a:	2b ed       	ldi	r18, 0xDB	; 219
    159c:	3f e0       	ldi	r19, 0x0F	; 15
    159e:	49 e4       	ldi	r20, 0x49	; 73
    15a0:	50 fd       	sbrc	r21, 0
    15a2:	49 ec       	ldi	r20, 0xC9	; 201
    15a4:	63 cf       	rjmp	.-314    	; 0x146c <__addsf3>
    15a6:	08 95       	ret

000015a8 <atan>:
    15a8:	df 93       	push	r29
    15aa:	dd 27       	eor	r29, r29
    15ac:	b9 2f       	mov	r27, r25
    15ae:	bf 77       	andi	r27, 0x7F	; 127
    15b0:	40 e8       	ldi	r20, 0x80	; 128
    15b2:	5f e3       	ldi	r21, 0x3F	; 63
    15b4:	16 16       	cp	r1, r22
    15b6:	17 06       	cpc	r1, r23
    15b8:	48 07       	cpc	r20, r24
    15ba:	5b 07       	cpc	r21, r27
    15bc:	10 f4       	brcc	.+4      	; 0x15c2 <atan+0x1a>
    15be:	d9 2f       	mov	r29, r25
    15c0:	8f d1       	rcall	.+798    	; 0x18e0 <inverse>
    15c2:	9f 93       	push	r25
    15c4:	8f 93       	push	r24
    15c6:	7f 93       	push	r23
    15c8:	6f 93       	push	r22
    15ca:	36 d2       	rcall	.+1132   	; 0x1a38 <square>
    15cc:	e4 ee       	ldi	r30, 0xE4	; 228
    15ce:	f0 e0       	ldi	r31, 0x00	; 0
    15d0:	1a d1       	rcall	.+564    	; 0x1806 <__fp_powser>
    15d2:	4c d1       	rcall	.+664    	; 0x186c <__fp_round>
    15d4:	2f 91       	pop	r18
    15d6:	3f 91       	pop	r19
    15d8:	4f 91       	pop	r20
    15da:	5f 91       	pop	r21
    15dc:	94 d1       	rcall	.+808    	; 0x1906 <__mulsf3x>
    15de:	dd 23       	and	r29, r29
    15e0:	49 f0       	breq	.+18     	; 0x15f4 <atan+0x4c>
    15e2:	90 58       	subi	r25, 0x80	; 128
    15e4:	a2 ea       	ldi	r26, 0xA2	; 162
    15e6:	2a ed       	ldi	r18, 0xDA	; 218
    15e8:	3f e0       	ldi	r19, 0x0F	; 15
    15ea:	49 ec       	ldi	r20, 0xC9	; 201
    15ec:	5f e3       	ldi	r21, 0x3F	; 63
    15ee:	d0 78       	andi	r29, 0x80	; 128
    15f0:	5d 27       	eor	r21, r29
    15f2:	4d df       	rcall	.-358    	; 0x148e <__addsf3x>
    15f4:	df 91       	pop	r29
    15f6:	3a c1       	rjmp	.+628    	; 0x186c <__fp_round>

000015f8 <__cmpsf2>:
    15f8:	d9 d0       	rcall	.+434    	; 0x17ac <__fp_cmp>
    15fa:	08 f4       	brcc	.+2      	; 0x15fe <__cmpsf2+0x6>
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	08 95       	ret

00001600 <__divsf3>:
    1600:	0c d0       	rcall	.+24     	; 0x161a <__divsf3x>
    1602:	34 c1       	rjmp	.+616    	; 0x186c <__fp_round>
    1604:	2c d1       	rcall	.+600    	; 0x185e <__fp_pscB>
    1606:	40 f0       	brcs	.+16     	; 0x1618 <__divsf3+0x18>
    1608:	23 d1       	rcall	.+582    	; 0x1850 <__fp_pscA>
    160a:	30 f0       	brcs	.+12     	; 0x1618 <__divsf3+0x18>
    160c:	21 f4       	brne	.+8      	; 0x1616 <__divsf3+0x16>
    160e:	5f 3f       	cpi	r21, 0xFF	; 255
    1610:	19 f0       	breq	.+6      	; 0x1618 <__divsf3+0x18>
    1612:	f0 c0       	rjmp	.+480    	; 0x17f4 <__fp_inf>
    1614:	51 11       	cpse	r21, r1
    1616:	5e c1       	rjmp	.+700    	; 0x18d4 <__fp_szero>
    1618:	f3 c0       	rjmp	.+486    	; 0x1800 <__fp_nan>

0000161a <__divsf3x>:
    161a:	39 d1       	rcall	.+626    	; 0x188e <__fp_split3>
    161c:	98 f3       	brcs	.-26     	; 0x1604 <__divsf3+0x4>

0000161e <__divsf3_pse>:
    161e:	99 23       	and	r25, r25
    1620:	c9 f3       	breq	.-14     	; 0x1614 <__divsf3+0x14>
    1622:	55 23       	and	r21, r21
    1624:	b1 f3       	breq	.-20     	; 0x1612 <__divsf3+0x12>
    1626:	95 1b       	sub	r25, r21
    1628:	55 0b       	sbc	r21, r21
    162a:	bb 27       	eor	r27, r27
    162c:	aa 27       	eor	r26, r26
    162e:	62 17       	cp	r22, r18
    1630:	73 07       	cpc	r23, r19
    1632:	84 07       	cpc	r24, r20
    1634:	38 f0       	brcs	.+14     	; 0x1644 <__divsf3_pse+0x26>
    1636:	9f 5f       	subi	r25, 0xFF	; 255
    1638:	5f 4f       	sbci	r21, 0xFF	; 255
    163a:	22 0f       	add	r18, r18
    163c:	33 1f       	adc	r19, r19
    163e:	44 1f       	adc	r20, r20
    1640:	aa 1f       	adc	r26, r26
    1642:	a9 f3       	breq	.-22     	; 0x162e <__divsf3_pse+0x10>
    1644:	33 d0       	rcall	.+102    	; 0x16ac <__divsf3_pse+0x8e>
    1646:	0e 2e       	mov	r0, r30
    1648:	3a f0       	brmi	.+14     	; 0x1658 <__divsf3_pse+0x3a>
    164a:	e0 e8       	ldi	r30, 0x80	; 128
    164c:	30 d0       	rcall	.+96     	; 0x16ae <__divsf3_pse+0x90>
    164e:	91 50       	subi	r25, 0x01	; 1
    1650:	50 40       	sbci	r21, 0x00	; 0
    1652:	e6 95       	lsr	r30
    1654:	00 1c       	adc	r0, r0
    1656:	ca f7       	brpl	.-14     	; 0x164a <__divsf3_pse+0x2c>
    1658:	29 d0       	rcall	.+82     	; 0x16ac <__divsf3_pse+0x8e>
    165a:	fe 2f       	mov	r31, r30
    165c:	27 d0       	rcall	.+78     	; 0x16ac <__divsf3_pse+0x8e>
    165e:	66 0f       	add	r22, r22
    1660:	77 1f       	adc	r23, r23
    1662:	88 1f       	adc	r24, r24
    1664:	bb 1f       	adc	r27, r27
    1666:	26 17       	cp	r18, r22
    1668:	37 07       	cpc	r19, r23
    166a:	48 07       	cpc	r20, r24
    166c:	ab 07       	cpc	r26, r27
    166e:	b0 e8       	ldi	r27, 0x80	; 128
    1670:	09 f0       	breq	.+2      	; 0x1674 <__divsf3_pse+0x56>
    1672:	bb 0b       	sbc	r27, r27
    1674:	80 2d       	mov	r24, r0
    1676:	bf 01       	movw	r22, r30
    1678:	ff 27       	eor	r31, r31
    167a:	93 58       	subi	r25, 0x83	; 131
    167c:	5f 4f       	sbci	r21, 0xFF	; 255
    167e:	2a f0       	brmi	.+10     	; 0x168a <__divsf3_pse+0x6c>
    1680:	9e 3f       	cpi	r25, 0xFE	; 254
    1682:	51 05       	cpc	r21, r1
    1684:	68 f0       	brcs	.+26     	; 0x16a0 <__divsf3_pse+0x82>
    1686:	b6 c0       	rjmp	.+364    	; 0x17f4 <__fp_inf>
    1688:	25 c1       	rjmp	.+586    	; 0x18d4 <__fp_szero>
    168a:	5f 3f       	cpi	r21, 0xFF	; 255
    168c:	ec f3       	brlt	.-6      	; 0x1688 <__divsf3_pse+0x6a>
    168e:	98 3e       	cpi	r25, 0xE8	; 232
    1690:	dc f3       	brlt	.-10     	; 0x1688 <__divsf3_pse+0x6a>
    1692:	86 95       	lsr	r24
    1694:	77 95       	ror	r23
    1696:	67 95       	ror	r22
    1698:	b7 95       	ror	r27
    169a:	f7 95       	ror	r31
    169c:	9f 5f       	subi	r25, 0xFF	; 255
    169e:	c9 f7       	brne	.-14     	; 0x1692 <__divsf3_pse+0x74>
    16a0:	88 0f       	add	r24, r24
    16a2:	91 1d       	adc	r25, r1
    16a4:	96 95       	lsr	r25
    16a6:	87 95       	ror	r24
    16a8:	97 f9       	bld	r25, 7
    16aa:	08 95       	ret
    16ac:	e1 e0       	ldi	r30, 0x01	; 1
    16ae:	66 0f       	add	r22, r22
    16b0:	77 1f       	adc	r23, r23
    16b2:	88 1f       	adc	r24, r24
    16b4:	bb 1f       	adc	r27, r27
    16b6:	62 17       	cp	r22, r18
    16b8:	73 07       	cpc	r23, r19
    16ba:	84 07       	cpc	r24, r20
    16bc:	ba 07       	cpc	r27, r26
    16be:	20 f0       	brcs	.+8      	; 0x16c8 <__divsf3_pse+0xaa>
    16c0:	62 1b       	sub	r22, r18
    16c2:	73 0b       	sbc	r23, r19
    16c4:	84 0b       	sbc	r24, r20
    16c6:	ba 0b       	sbc	r27, r26
    16c8:	ee 1f       	adc	r30, r30
    16ca:	88 f7       	brcc	.-30     	; 0x16ae <__divsf3_pse+0x90>
    16cc:	e0 95       	com	r30
    16ce:	08 95       	ret

000016d0 <__fixsfsi>:
    16d0:	04 d0       	rcall	.+8      	; 0x16da <__fixunssfsi>
    16d2:	68 94       	set
    16d4:	b1 11       	cpse	r27, r1
    16d6:	fe c0       	rjmp	.+508    	; 0x18d4 <__fp_szero>
    16d8:	08 95       	ret

000016da <__fixunssfsi>:
    16da:	e1 d0       	rcall	.+450    	; 0x189e <__fp_splitA>
    16dc:	88 f0       	brcs	.+34     	; 0x1700 <__fixunssfsi+0x26>
    16de:	9f 57       	subi	r25, 0x7F	; 127
    16e0:	90 f0       	brcs	.+36     	; 0x1706 <__fixunssfsi+0x2c>
    16e2:	b9 2f       	mov	r27, r25
    16e4:	99 27       	eor	r25, r25
    16e6:	b7 51       	subi	r27, 0x17	; 23
    16e8:	a0 f0       	brcs	.+40     	; 0x1712 <__fixunssfsi+0x38>
    16ea:	d1 f0       	breq	.+52     	; 0x1720 <__fixunssfsi+0x46>
    16ec:	66 0f       	add	r22, r22
    16ee:	77 1f       	adc	r23, r23
    16f0:	88 1f       	adc	r24, r24
    16f2:	99 1f       	adc	r25, r25
    16f4:	1a f0       	brmi	.+6      	; 0x16fc <__fixunssfsi+0x22>
    16f6:	ba 95       	dec	r27
    16f8:	c9 f7       	brne	.-14     	; 0x16ec <__fixunssfsi+0x12>
    16fa:	12 c0       	rjmp	.+36     	; 0x1720 <__fixunssfsi+0x46>
    16fc:	b1 30       	cpi	r27, 0x01	; 1
    16fe:	81 f0       	breq	.+32     	; 0x1720 <__fixunssfsi+0x46>
    1700:	e8 d0       	rcall	.+464    	; 0x18d2 <__fp_zero>
    1702:	b1 e0       	ldi	r27, 0x01	; 1
    1704:	08 95       	ret
    1706:	e5 c0       	rjmp	.+458    	; 0x18d2 <__fp_zero>
    1708:	67 2f       	mov	r22, r23
    170a:	78 2f       	mov	r23, r24
    170c:	88 27       	eor	r24, r24
    170e:	b8 5f       	subi	r27, 0xF8	; 248
    1710:	39 f0       	breq	.+14     	; 0x1720 <__fixunssfsi+0x46>
    1712:	b9 3f       	cpi	r27, 0xF9	; 249
    1714:	cc f3       	brlt	.-14     	; 0x1708 <__fixunssfsi+0x2e>
    1716:	86 95       	lsr	r24
    1718:	77 95       	ror	r23
    171a:	67 95       	ror	r22
    171c:	b3 95       	inc	r27
    171e:	d9 f7       	brne	.-10     	; 0x1716 <__fixunssfsi+0x3c>
    1720:	3e f4       	brtc	.+14     	; 0x1730 <__fixunssfsi+0x56>
    1722:	90 95       	com	r25
    1724:	80 95       	com	r24
    1726:	70 95       	com	r23
    1728:	61 95       	neg	r22
    172a:	7f 4f       	sbci	r23, 0xFF	; 255
    172c:	8f 4f       	sbci	r24, 0xFF	; 255
    172e:	9f 4f       	sbci	r25, 0xFF	; 255
    1730:	08 95       	ret

00001732 <__floatunsisf>:
    1732:	e8 94       	clt
    1734:	09 c0       	rjmp	.+18     	; 0x1748 <__floatsisf+0x12>

00001736 <__floatsisf>:
    1736:	97 fb       	bst	r25, 7
    1738:	3e f4       	brtc	.+14     	; 0x1748 <__floatsisf+0x12>
    173a:	90 95       	com	r25
    173c:	80 95       	com	r24
    173e:	70 95       	com	r23
    1740:	61 95       	neg	r22
    1742:	7f 4f       	sbci	r23, 0xFF	; 255
    1744:	8f 4f       	sbci	r24, 0xFF	; 255
    1746:	9f 4f       	sbci	r25, 0xFF	; 255
    1748:	99 23       	and	r25, r25
    174a:	a9 f0       	breq	.+42     	; 0x1776 <__floatsisf+0x40>
    174c:	f9 2f       	mov	r31, r25
    174e:	96 e9       	ldi	r25, 0x96	; 150
    1750:	bb 27       	eor	r27, r27
    1752:	93 95       	inc	r25
    1754:	f6 95       	lsr	r31
    1756:	87 95       	ror	r24
    1758:	77 95       	ror	r23
    175a:	67 95       	ror	r22
    175c:	b7 95       	ror	r27
    175e:	f1 11       	cpse	r31, r1
    1760:	f8 cf       	rjmp	.-16     	; 0x1752 <__floatsisf+0x1c>
    1762:	fa f4       	brpl	.+62     	; 0x17a2 <__floatsisf+0x6c>
    1764:	bb 0f       	add	r27, r27
    1766:	11 f4       	brne	.+4      	; 0x176c <__floatsisf+0x36>
    1768:	60 ff       	sbrs	r22, 0
    176a:	1b c0       	rjmp	.+54     	; 0x17a2 <__floatsisf+0x6c>
    176c:	6f 5f       	subi	r22, 0xFF	; 255
    176e:	7f 4f       	sbci	r23, 0xFF	; 255
    1770:	8f 4f       	sbci	r24, 0xFF	; 255
    1772:	9f 4f       	sbci	r25, 0xFF	; 255
    1774:	16 c0       	rjmp	.+44     	; 0x17a2 <__floatsisf+0x6c>
    1776:	88 23       	and	r24, r24
    1778:	11 f0       	breq	.+4      	; 0x177e <__floatsisf+0x48>
    177a:	96 e9       	ldi	r25, 0x96	; 150
    177c:	11 c0       	rjmp	.+34     	; 0x17a0 <__floatsisf+0x6a>
    177e:	77 23       	and	r23, r23
    1780:	21 f0       	breq	.+8      	; 0x178a <__floatsisf+0x54>
    1782:	9e e8       	ldi	r25, 0x8E	; 142
    1784:	87 2f       	mov	r24, r23
    1786:	76 2f       	mov	r23, r22
    1788:	05 c0       	rjmp	.+10     	; 0x1794 <__floatsisf+0x5e>
    178a:	66 23       	and	r22, r22
    178c:	71 f0       	breq	.+28     	; 0x17aa <__floatsisf+0x74>
    178e:	96 e8       	ldi	r25, 0x86	; 134
    1790:	86 2f       	mov	r24, r22
    1792:	70 e0       	ldi	r23, 0x00	; 0
    1794:	60 e0       	ldi	r22, 0x00	; 0
    1796:	2a f0       	brmi	.+10     	; 0x17a2 <__floatsisf+0x6c>
    1798:	9a 95       	dec	r25
    179a:	66 0f       	add	r22, r22
    179c:	77 1f       	adc	r23, r23
    179e:	88 1f       	adc	r24, r24
    17a0:	da f7       	brpl	.-10     	; 0x1798 <__floatsisf+0x62>
    17a2:	88 0f       	add	r24, r24
    17a4:	96 95       	lsr	r25
    17a6:	87 95       	ror	r24
    17a8:	97 f9       	bld	r25, 7
    17aa:	08 95       	ret

000017ac <__fp_cmp>:
    17ac:	99 0f       	add	r25, r25
    17ae:	00 08       	sbc	r0, r0
    17b0:	55 0f       	add	r21, r21
    17b2:	aa 0b       	sbc	r26, r26
    17b4:	e0 e8       	ldi	r30, 0x80	; 128
    17b6:	fe ef       	ldi	r31, 0xFE	; 254
    17b8:	16 16       	cp	r1, r22
    17ba:	17 06       	cpc	r1, r23
    17bc:	e8 07       	cpc	r30, r24
    17be:	f9 07       	cpc	r31, r25
    17c0:	c0 f0       	brcs	.+48     	; 0x17f2 <__fp_cmp+0x46>
    17c2:	12 16       	cp	r1, r18
    17c4:	13 06       	cpc	r1, r19
    17c6:	e4 07       	cpc	r30, r20
    17c8:	f5 07       	cpc	r31, r21
    17ca:	98 f0       	brcs	.+38     	; 0x17f2 <__fp_cmp+0x46>
    17cc:	62 1b       	sub	r22, r18
    17ce:	73 0b       	sbc	r23, r19
    17d0:	84 0b       	sbc	r24, r20
    17d2:	95 0b       	sbc	r25, r21
    17d4:	39 f4       	brne	.+14     	; 0x17e4 <__fp_cmp+0x38>
    17d6:	0a 26       	eor	r0, r26
    17d8:	61 f0       	breq	.+24     	; 0x17f2 <__fp_cmp+0x46>
    17da:	23 2b       	or	r18, r19
    17dc:	24 2b       	or	r18, r20
    17de:	25 2b       	or	r18, r21
    17e0:	21 f4       	brne	.+8      	; 0x17ea <__fp_cmp+0x3e>
    17e2:	08 95       	ret
    17e4:	0a 26       	eor	r0, r26
    17e6:	09 f4       	brne	.+2      	; 0x17ea <__fp_cmp+0x3e>
    17e8:	a1 40       	sbci	r26, 0x01	; 1
    17ea:	a6 95       	lsr	r26
    17ec:	8f ef       	ldi	r24, 0xFF	; 255
    17ee:	81 1d       	adc	r24, r1
    17f0:	81 1d       	adc	r24, r1
    17f2:	08 95       	ret

000017f4 <__fp_inf>:
    17f4:	97 f9       	bld	r25, 7
    17f6:	9f 67       	ori	r25, 0x7F	; 127
    17f8:	80 e8       	ldi	r24, 0x80	; 128
    17fa:	70 e0       	ldi	r23, 0x00	; 0
    17fc:	60 e0       	ldi	r22, 0x00	; 0
    17fe:	08 95       	ret

00001800 <__fp_nan>:
    1800:	9f ef       	ldi	r25, 0xFF	; 255
    1802:	80 ec       	ldi	r24, 0xC0	; 192
    1804:	08 95       	ret

00001806 <__fp_powser>:
    1806:	df 93       	push	r29
    1808:	cf 93       	push	r28
    180a:	1f 93       	push	r17
    180c:	0f 93       	push	r16
    180e:	ff 92       	push	r15
    1810:	ef 92       	push	r14
    1812:	df 92       	push	r13
    1814:	7b 01       	movw	r14, r22
    1816:	8c 01       	movw	r16, r24
    1818:	68 94       	set
    181a:	05 c0       	rjmp	.+10     	; 0x1826 <__fp_powser+0x20>
    181c:	da 2e       	mov	r13, r26
    181e:	ef 01       	movw	r28, r30
    1820:	72 d0       	rcall	.+228    	; 0x1906 <__mulsf3x>
    1822:	fe 01       	movw	r30, r28
    1824:	e8 94       	clt
    1826:	a5 91       	lpm	r26, Z+
    1828:	25 91       	lpm	r18, Z+
    182a:	35 91       	lpm	r19, Z+
    182c:	45 91       	lpm	r20, Z+
    182e:	55 91       	lpm	r21, Z+
    1830:	ae f3       	brts	.-22     	; 0x181c <__fp_powser+0x16>
    1832:	ef 01       	movw	r28, r30
    1834:	2c de       	rcall	.-936    	; 0x148e <__addsf3x>
    1836:	fe 01       	movw	r30, r28
    1838:	97 01       	movw	r18, r14
    183a:	a8 01       	movw	r20, r16
    183c:	da 94       	dec	r13
    183e:	79 f7       	brne	.-34     	; 0x181e <__fp_powser+0x18>
    1840:	df 90       	pop	r13
    1842:	ef 90       	pop	r14
    1844:	ff 90       	pop	r15
    1846:	0f 91       	pop	r16
    1848:	1f 91       	pop	r17
    184a:	cf 91       	pop	r28
    184c:	df 91       	pop	r29
    184e:	08 95       	ret

00001850 <__fp_pscA>:
    1850:	00 24       	eor	r0, r0
    1852:	0a 94       	dec	r0
    1854:	16 16       	cp	r1, r22
    1856:	17 06       	cpc	r1, r23
    1858:	18 06       	cpc	r1, r24
    185a:	09 06       	cpc	r0, r25
    185c:	08 95       	ret

0000185e <__fp_pscB>:
    185e:	00 24       	eor	r0, r0
    1860:	0a 94       	dec	r0
    1862:	12 16       	cp	r1, r18
    1864:	13 06       	cpc	r1, r19
    1866:	14 06       	cpc	r1, r20
    1868:	05 06       	cpc	r0, r21
    186a:	08 95       	ret

0000186c <__fp_round>:
    186c:	09 2e       	mov	r0, r25
    186e:	03 94       	inc	r0
    1870:	00 0c       	add	r0, r0
    1872:	11 f4       	brne	.+4      	; 0x1878 <__fp_round+0xc>
    1874:	88 23       	and	r24, r24
    1876:	52 f0       	brmi	.+20     	; 0x188c <__fp_round+0x20>
    1878:	bb 0f       	add	r27, r27
    187a:	40 f4       	brcc	.+16     	; 0x188c <__fp_round+0x20>
    187c:	bf 2b       	or	r27, r31
    187e:	11 f4       	brne	.+4      	; 0x1884 <__fp_round+0x18>
    1880:	60 ff       	sbrs	r22, 0
    1882:	04 c0       	rjmp	.+8      	; 0x188c <__fp_round+0x20>
    1884:	6f 5f       	subi	r22, 0xFF	; 255
    1886:	7f 4f       	sbci	r23, 0xFF	; 255
    1888:	8f 4f       	sbci	r24, 0xFF	; 255
    188a:	9f 4f       	sbci	r25, 0xFF	; 255
    188c:	08 95       	ret

0000188e <__fp_split3>:
    188e:	57 fd       	sbrc	r21, 7
    1890:	90 58       	subi	r25, 0x80	; 128
    1892:	44 0f       	add	r20, r20
    1894:	55 1f       	adc	r21, r21
    1896:	59 f0       	breq	.+22     	; 0x18ae <__fp_splitA+0x10>
    1898:	5f 3f       	cpi	r21, 0xFF	; 255
    189a:	71 f0       	breq	.+28     	; 0x18b8 <__fp_splitA+0x1a>
    189c:	47 95       	ror	r20

0000189e <__fp_splitA>:
    189e:	88 0f       	add	r24, r24
    18a0:	97 fb       	bst	r25, 7
    18a2:	99 1f       	adc	r25, r25
    18a4:	61 f0       	breq	.+24     	; 0x18be <__fp_splitA+0x20>
    18a6:	9f 3f       	cpi	r25, 0xFF	; 255
    18a8:	79 f0       	breq	.+30     	; 0x18c8 <__fp_splitA+0x2a>
    18aa:	87 95       	ror	r24
    18ac:	08 95       	ret
    18ae:	12 16       	cp	r1, r18
    18b0:	13 06       	cpc	r1, r19
    18b2:	14 06       	cpc	r1, r20
    18b4:	55 1f       	adc	r21, r21
    18b6:	f2 cf       	rjmp	.-28     	; 0x189c <__fp_split3+0xe>
    18b8:	46 95       	lsr	r20
    18ba:	f1 df       	rcall	.-30     	; 0x189e <__fp_splitA>
    18bc:	08 c0       	rjmp	.+16     	; 0x18ce <__fp_splitA+0x30>
    18be:	16 16       	cp	r1, r22
    18c0:	17 06       	cpc	r1, r23
    18c2:	18 06       	cpc	r1, r24
    18c4:	99 1f       	adc	r25, r25
    18c6:	f1 cf       	rjmp	.-30     	; 0x18aa <__fp_splitA+0xc>
    18c8:	86 95       	lsr	r24
    18ca:	71 05       	cpc	r23, r1
    18cc:	61 05       	cpc	r22, r1
    18ce:	08 94       	sec
    18d0:	08 95       	ret

000018d2 <__fp_zero>:
    18d2:	e8 94       	clt

000018d4 <__fp_szero>:
    18d4:	bb 27       	eor	r27, r27
    18d6:	66 27       	eor	r22, r22
    18d8:	77 27       	eor	r23, r23
    18da:	cb 01       	movw	r24, r22
    18dc:	97 f9       	bld	r25, 7
    18de:	08 95       	ret

000018e0 <inverse>:
    18e0:	9b 01       	movw	r18, r22
    18e2:	ac 01       	movw	r20, r24
    18e4:	60 e0       	ldi	r22, 0x00	; 0
    18e6:	70 e0       	ldi	r23, 0x00	; 0
    18e8:	80 e8       	ldi	r24, 0x80	; 128
    18ea:	9f e3       	ldi	r25, 0x3F	; 63
    18ec:	89 ce       	rjmp	.-750    	; 0x1600 <__divsf3>

000018ee <__mulsf3>:
    18ee:	0b d0       	rcall	.+22     	; 0x1906 <__mulsf3x>
    18f0:	bd cf       	rjmp	.-134    	; 0x186c <__fp_round>
    18f2:	ae df       	rcall	.-164    	; 0x1850 <__fp_pscA>
    18f4:	28 f0       	brcs	.+10     	; 0x1900 <__mulsf3+0x12>
    18f6:	b3 df       	rcall	.-154    	; 0x185e <__fp_pscB>
    18f8:	18 f0       	brcs	.+6      	; 0x1900 <__mulsf3+0x12>
    18fa:	95 23       	and	r25, r21
    18fc:	09 f0       	breq	.+2      	; 0x1900 <__mulsf3+0x12>
    18fe:	7a cf       	rjmp	.-268    	; 0x17f4 <__fp_inf>
    1900:	7f cf       	rjmp	.-258    	; 0x1800 <__fp_nan>
    1902:	11 24       	eor	r1, r1
    1904:	e7 cf       	rjmp	.-50     	; 0x18d4 <__fp_szero>

00001906 <__mulsf3x>:
    1906:	c3 df       	rcall	.-122    	; 0x188e <__fp_split3>
    1908:	a0 f3       	brcs	.-24     	; 0x18f2 <__mulsf3+0x4>

0000190a <__mulsf3_pse>:
    190a:	95 9f       	mul	r25, r21
    190c:	d1 f3       	breq	.-12     	; 0x1902 <__mulsf3+0x14>
    190e:	95 0f       	add	r25, r21
    1910:	50 e0       	ldi	r21, 0x00	; 0
    1912:	55 1f       	adc	r21, r21
    1914:	62 9f       	mul	r22, r18
    1916:	f0 01       	movw	r30, r0
    1918:	72 9f       	mul	r23, r18
    191a:	bb 27       	eor	r27, r27
    191c:	f0 0d       	add	r31, r0
    191e:	b1 1d       	adc	r27, r1
    1920:	63 9f       	mul	r22, r19
    1922:	aa 27       	eor	r26, r26
    1924:	f0 0d       	add	r31, r0
    1926:	b1 1d       	adc	r27, r1
    1928:	aa 1f       	adc	r26, r26
    192a:	64 9f       	mul	r22, r20
    192c:	66 27       	eor	r22, r22
    192e:	b0 0d       	add	r27, r0
    1930:	a1 1d       	adc	r26, r1
    1932:	66 1f       	adc	r22, r22
    1934:	82 9f       	mul	r24, r18
    1936:	22 27       	eor	r18, r18
    1938:	b0 0d       	add	r27, r0
    193a:	a1 1d       	adc	r26, r1
    193c:	62 1f       	adc	r22, r18
    193e:	73 9f       	mul	r23, r19
    1940:	b0 0d       	add	r27, r0
    1942:	a1 1d       	adc	r26, r1
    1944:	62 1f       	adc	r22, r18
    1946:	83 9f       	mul	r24, r19
    1948:	a0 0d       	add	r26, r0
    194a:	61 1d       	adc	r22, r1
    194c:	22 1f       	adc	r18, r18
    194e:	74 9f       	mul	r23, r20
    1950:	33 27       	eor	r19, r19
    1952:	a0 0d       	add	r26, r0
    1954:	61 1d       	adc	r22, r1
    1956:	23 1f       	adc	r18, r19
    1958:	84 9f       	mul	r24, r20
    195a:	60 0d       	add	r22, r0
    195c:	21 1d       	adc	r18, r1
    195e:	82 2f       	mov	r24, r18
    1960:	76 2f       	mov	r23, r22
    1962:	6a 2f       	mov	r22, r26
    1964:	11 24       	eor	r1, r1
    1966:	9f 57       	subi	r25, 0x7F	; 127
    1968:	50 40       	sbci	r21, 0x00	; 0
    196a:	8a f0       	brmi	.+34     	; 0x198e <__mulsf3_pse+0x84>
    196c:	e1 f0       	breq	.+56     	; 0x19a6 <__mulsf3_pse+0x9c>
    196e:	88 23       	and	r24, r24
    1970:	4a f0       	brmi	.+18     	; 0x1984 <__mulsf3_pse+0x7a>
    1972:	ee 0f       	add	r30, r30
    1974:	ff 1f       	adc	r31, r31
    1976:	bb 1f       	adc	r27, r27
    1978:	66 1f       	adc	r22, r22
    197a:	77 1f       	adc	r23, r23
    197c:	88 1f       	adc	r24, r24
    197e:	91 50       	subi	r25, 0x01	; 1
    1980:	50 40       	sbci	r21, 0x00	; 0
    1982:	a9 f7       	brne	.-22     	; 0x196e <__mulsf3_pse+0x64>
    1984:	9e 3f       	cpi	r25, 0xFE	; 254
    1986:	51 05       	cpc	r21, r1
    1988:	70 f0       	brcs	.+28     	; 0x19a6 <__mulsf3_pse+0x9c>
    198a:	34 cf       	rjmp	.-408    	; 0x17f4 <__fp_inf>
    198c:	a3 cf       	rjmp	.-186    	; 0x18d4 <__fp_szero>
    198e:	5f 3f       	cpi	r21, 0xFF	; 255
    1990:	ec f3       	brlt	.-6      	; 0x198c <__mulsf3_pse+0x82>
    1992:	98 3e       	cpi	r25, 0xE8	; 232
    1994:	dc f3       	brlt	.-10     	; 0x198c <__mulsf3_pse+0x82>
    1996:	86 95       	lsr	r24
    1998:	77 95       	ror	r23
    199a:	67 95       	ror	r22
    199c:	b7 95       	ror	r27
    199e:	f7 95       	ror	r31
    19a0:	e7 95       	ror	r30
    19a2:	9f 5f       	subi	r25, 0xFF	; 255
    19a4:	c1 f7       	brne	.-16     	; 0x1996 <__mulsf3_pse+0x8c>
    19a6:	fe 2b       	or	r31, r30
    19a8:	88 0f       	add	r24, r24
    19aa:	91 1d       	adc	r25, r1
    19ac:	96 95       	lsr	r25
    19ae:	87 95       	ror	r24
    19b0:	97 f9       	bld	r25, 7
    19b2:	08 95       	ret
    19b4:	11 f4       	brne	.+4      	; 0x19ba <__mulsf3_pse+0xb0>
    19b6:	0e f4       	brtc	.+2      	; 0x19ba <__mulsf3_pse+0xb0>
    19b8:	23 cf       	rjmp	.-442    	; 0x1800 <__fp_nan>
    19ba:	41 c0       	rjmp	.+130    	; 0x1a3e <__fp_mpack>

000019bc <sqrt>:
    19bc:	70 df       	rcall	.-288    	; 0x189e <__fp_splitA>
    19be:	d0 f3       	brcs	.-12     	; 0x19b4 <__mulsf3_pse+0xaa>
    19c0:	99 23       	and	r25, r25
    19c2:	d9 f3       	breq	.-10     	; 0x19ba <__mulsf3_pse+0xb0>
    19c4:	ce f3       	brts	.-14     	; 0x19b8 <__mulsf3_pse+0xae>
    19c6:	9f 57       	subi	r25, 0x7F	; 127
    19c8:	55 0b       	sbc	r21, r21
    19ca:	87 ff       	sbrs	r24, 7
    19cc:	46 d0       	rcall	.+140    	; 0x1a5a <__fp_norm2>
    19ce:	00 24       	eor	r0, r0
    19d0:	a0 e6       	ldi	r26, 0x60	; 96
    19d2:	40 ea       	ldi	r20, 0xA0	; 160
    19d4:	90 01       	movw	r18, r0
    19d6:	80 58       	subi	r24, 0x80	; 128
    19d8:	56 95       	lsr	r21
    19da:	97 95       	ror	r25
    19dc:	28 f4       	brcc	.+10     	; 0x19e8 <sqrt+0x2c>
    19de:	80 5c       	subi	r24, 0xC0	; 192
    19e0:	66 0f       	add	r22, r22
    19e2:	77 1f       	adc	r23, r23
    19e4:	88 1f       	adc	r24, r24
    19e6:	20 f0       	brcs	.+8      	; 0x19f0 <sqrt+0x34>
    19e8:	26 17       	cp	r18, r22
    19ea:	37 07       	cpc	r19, r23
    19ec:	48 07       	cpc	r20, r24
    19ee:	30 f4       	brcc	.+12     	; 0x19fc <sqrt+0x40>
    19f0:	62 1b       	sub	r22, r18
    19f2:	73 0b       	sbc	r23, r19
    19f4:	84 0b       	sbc	r24, r20
    19f6:	20 29       	or	r18, r0
    19f8:	31 29       	or	r19, r1
    19fa:	4a 2b       	or	r20, r26
    19fc:	a6 95       	lsr	r26
    19fe:	17 94       	ror	r1
    1a00:	07 94       	ror	r0
    1a02:	20 25       	eor	r18, r0
    1a04:	31 25       	eor	r19, r1
    1a06:	4a 27       	eor	r20, r26
    1a08:	58 f7       	brcc	.-42     	; 0x19e0 <sqrt+0x24>
    1a0a:	66 0f       	add	r22, r22
    1a0c:	77 1f       	adc	r23, r23
    1a0e:	88 1f       	adc	r24, r24
    1a10:	20 f0       	brcs	.+8      	; 0x1a1a <sqrt+0x5e>
    1a12:	26 17       	cp	r18, r22
    1a14:	37 07       	cpc	r19, r23
    1a16:	48 07       	cpc	r20, r24
    1a18:	30 f4       	brcc	.+12     	; 0x1a26 <sqrt+0x6a>
    1a1a:	62 0b       	sbc	r22, r18
    1a1c:	73 0b       	sbc	r23, r19
    1a1e:	84 0b       	sbc	r24, r20
    1a20:	20 0d       	add	r18, r0
    1a22:	31 1d       	adc	r19, r1
    1a24:	41 1d       	adc	r20, r1
    1a26:	a0 95       	com	r26
    1a28:	81 f7       	brne	.-32     	; 0x1a0a <sqrt+0x4e>
    1a2a:	b9 01       	movw	r22, r18
    1a2c:	84 2f       	mov	r24, r20
    1a2e:	91 58       	subi	r25, 0x81	; 129
    1a30:	88 0f       	add	r24, r24
    1a32:	96 95       	lsr	r25
    1a34:	87 95       	ror	r24
    1a36:	08 95       	ret

00001a38 <square>:
    1a38:	9b 01       	movw	r18, r22
    1a3a:	ac 01       	movw	r20, r24
    1a3c:	58 cf       	rjmp	.-336    	; 0x18ee <__mulsf3>

00001a3e <__fp_mpack>:
    1a3e:	9f 3f       	cpi	r25, 0xFF	; 255
    1a40:	31 f0       	breq	.+12     	; 0x1a4e <__fp_mpack_finite+0xc>

00001a42 <__fp_mpack_finite>:
    1a42:	91 50       	subi	r25, 0x01	; 1
    1a44:	20 f4       	brcc	.+8      	; 0x1a4e <__fp_mpack_finite+0xc>
    1a46:	87 95       	ror	r24
    1a48:	77 95       	ror	r23
    1a4a:	67 95       	ror	r22
    1a4c:	b7 95       	ror	r27
    1a4e:	88 0f       	add	r24, r24
    1a50:	91 1d       	adc	r25, r1
    1a52:	96 95       	lsr	r25
    1a54:	87 95       	ror	r24
    1a56:	97 f9       	bld	r25, 7
    1a58:	08 95       	ret

00001a5a <__fp_norm2>:
    1a5a:	91 50       	subi	r25, 0x01	; 1
    1a5c:	50 40       	sbci	r21, 0x00	; 0
    1a5e:	66 0f       	add	r22, r22
    1a60:	77 1f       	adc	r23, r23
    1a62:	88 1f       	adc	r24, r24
    1a64:	d2 f7       	brpl	.-12     	; 0x1a5a <__fp_norm2>
    1a66:	08 95       	ret

00001a68 <vfprintf>:
    1a68:	2f 92       	push	r2
    1a6a:	3f 92       	push	r3
    1a6c:	4f 92       	push	r4
    1a6e:	5f 92       	push	r5
    1a70:	6f 92       	push	r6
    1a72:	7f 92       	push	r7
    1a74:	8f 92       	push	r8
    1a76:	9f 92       	push	r9
    1a78:	af 92       	push	r10
    1a7a:	bf 92       	push	r11
    1a7c:	cf 92       	push	r12
    1a7e:	df 92       	push	r13
    1a80:	ef 92       	push	r14
    1a82:	ff 92       	push	r15
    1a84:	0f 93       	push	r16
    1a86:	1f 93       	push	r17
    1a88:	cf 93       	push	r28
    1a8a:	df 93       	push	r29
    1a8c:	cd b7       	in	r28, 0x3d	; 61
    1a8e:	de b7       	in	r29, 0x3e	; 62
    1a90:	63 97       	sbiw	r28, 0x13	; 19
    1a92:	0f b6       	in	r0, 0x3f	; 63
    1a94:	f8 94       	cli
    1a96:	de bf       	out	0x3e, r29	; 62
    1a98:	0f be       	out	0x3f, r0	; 63
    1a9a:	cd bf       	out	0x3d, r28	; 61
    1a9c:	6c 01       	movw	r12, r24
    1a9e:	4b 01       	movw	r8, r22
    1aa0:	2a 01       	movw	r4, r20
    1aa2:	fc 01       	movw	r30, r24
    1aa4:	17 82       	std	Z+7, r1	; 0x07
    1aa6:	16 82       	std	Z+6, r1	; 0x06
    1aa8:	83 81       	ldd	r24, Z+3	; 0x03
    1aaa:	81 ff       	sbrs	r24, 1
    1aac:	29 c3       	rjmp	.+1618   	; 0x2100 <vfprintf+0x698>
    1aae:	ae 01       	movw	r20, r28
    1ab0:	4f 5f       	subi	r20, 0xFF	; 255
    1ab2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ab4:	3a 01       	movw	r6, r20
    1ab6:	f6 01       	movw	r30, r12
    1ab8:	93 81       	ldd	r25, Z+3	; 0x03
    1aba:	f4 01       	movw	r30, r8
    1abc:	93 fd       	sbrc	r25, 3
    1abe:	85 91       	lpm	r24, Z+
    1ac0:	93 ff       	sbrs	r25, 3
    1ac2:	81 91       	ld	r24, Z+
    1ac4:	4f 01       	movw	r8, r30
    1ac6:	88 23       	and	r24, r24
    1ac8:	09 f4       	brne	.+2      	; 0x1acc <vfprintf+0x64>
    1aca:	16 c3       	rjmp	.+1580   	; 0x20f8 <vfprintf+0x690>
    1acc:	85 32       	cpi	r24, 0x25	; 37
    1ace:	39 f4       	brne	.+14     	; 0x1ade <vfprintf+0x76>
    1ad0:	93 fd       	sbrc	r25, 3
    1ad2:	85 91       	lpm	r24, Z+
    1ad4:	93 ff       	sbrs	r25, 3
    1ad6:	81 91       	ld	r24, Z+
    1ad8:	4f 01       	movw	r8, r30
    1ada:	85 32       	cpi	r24, 0x25	; 37
    1adc:	31 f4       	brne	.+12     	; 0x1aea <vfprintf+0x82>
    1ade:	b6 01       	movw	r22, r12
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	a9 d4       	rcall	.+2386   	; 0x2436 <fputc>
    1ae4:	52 01       	movw	r10, r4
    1ae6:	25 01       	movw	r4, r10
    1ae8:	e6 cf       	rjmp	.-52     	; 0x1ab6 <vfprintf+0x4e>
    1aea:	10 e0       	ldi	r17, 0x00	; 0
    1aec:	f1 2c       	mov	r15, r1
    1aee:	20 e0       	ldi	r18, 0x00	; 0
    1af0:	20 32       	cpi	r18, 0x20	; 32
    1af2:	a0 f4       	brcc	.+40     	; 0x1b1c <vfprintf+0xb4>
    1af4:	8b 32       	cpi	r24, 0x2B	; 43
    1af6:	69 f0       	breq	.+26     	; 0x1b12 <vfprintf+0xaa>
    1af8:	30 f4       	brcc	.+12     	; 0x1b06 <vfprintf+0x9e>
    1afa:	80 32       	cpi	r24, 0x20	; 32
    1afc:	59 f0       	breq	.+22     	; 0x1b14 <vfprintf+0xac>
    1afe:	83 32       	cpi	r24, 0x23	; 35
    1b00:	69 f4       	brne	.+26     	; 0x1b1c <vfprintf+0xb4>
    1b02:	20 61       	ori	r18, 0x10	; 16
    1b04:	2c c0       	rjmp	.+88     	; 0x1b5e <vfprintf+0xf6>
    1b06:	8d 32       	cpi	r24, 0x2D	; 45
    1b08:	39 f0       	breq	.+14     	; 0x1b18 <vfprintf+0xb0>
    1b0a:	80 33       	cpi	r24, 0x30	; 48
    1b0c:	39 f4       	brne	.+14     	; 0x1b1c <vfprintf+0xb4>
    1b0e:	21 60       	ori	r18, 0x01	; 1
    1b10:	26 c0       	rjmp	.+76     	; 0x1b5e <vfprintf+0xf6>
    1b12:	22 60       	ori	r18, 0x02	; 2
    1b14:	24 60       	ori	r18, 0x04	; 4
    1b16:	23 c0       	rjmp	.+70     	; 0x1b5e <vfprintf+0xf6>
    1b18:	28 60       	ori	r18, 0x08	; 8
    1b1a:	21 c0       	rjmp	.+66     	; 0x1b5e <vfprintf+0xf6>
    1b1c:	27 fd       	sbrc	r18, 7
    1b1e:	27 c0       	rjmp	.+78     	; 0x1b6e <vfprintf+0x106>
    1b20:	30 ed       	ldi	r19, 0xD0	; 208
    1b22:	38 0f       	add	r19, r24
    1b24:	3a 30       	cpi	r19, 0x0A	; 10
    1b26:	78 f4       	brcc	.+30     	; 0x1b46 <vfprintf+0xde>
    1b28:	26 ff       	sbrs	r18, 6
    1b2a:	06 c0       	rjmp	.+12     	; 0x1b38 <vfprintf+0xd0>
    1b2c:	fa e0       	ldi	r31, 0x0A	; 10
    1b2e:	1f 9f       	mul	r17, r31
    1b30:	30 0d       	add	r19, r0
    1b32:	11 24       	eor	r1, r1
    1b34:	13 2f       	mov	r17, r19
    1b36:	13 c0       	rjmp	.+38     	; 0x1b5e <vfprintf+0xf6>
    1b38:	4a e0       	ldi	r20, 0x0A	; 10
    1b3a:	f4 9e       	mul	r15, r20
    1b3c:	30 0d       	add	r19, r0
    1b3e:	11 24       	eor	r1, r1
    1b40:	f3 2e       	mov	r15, r19
    1b42:	20 62       	ori	r18, 0x20	; 32
    1b44:	0c c0       	rjmp	.+24     	; 0x1b5e <vfprintf+0xf6>
    1b46:	8e 32       	cpi	r24, 0x2E	; 46
    1b48:	21 f4       	brne	.+8      	; 0x1b52 <vfprintf+0xea>
    1b4a:	26 fd       	sbrc	r18, 6
    1b4c:	d5 c2       	rjmp	.+1450   	; 0x20f8 <vfprintf+0x690>
    1b4e:	20 64       	ori	r18, 0x40	; 64
    1b50:	06 c0       	rjmp	.+12     	; 0x1b5e <vfprintf+0xf6>
    1b52:	8c 36       	cpi	r24, 0x6C	; 108
    1b54:	11 f4       	brne	.+4      	; 0x1b5a <vfprintf+0xf2>
    1b56:	20 68       	ori	r18, 0x80	; 128
    1b58:	02 c0       	rjmp	.+4      	; 0x1b5e <vfprintf+0xf6>
    1b5a:	88 36       	cpi	r24, 0x68	; 104
    1b5c:	41 f4       	brne	.+16     	; 0x1b6e <vfprintf+0x106>
    1b5e:	f4 01       	movw	r30, r8
    1b60:	93 fd       	sbrc	r25, 3
    1b62:	85 91       	lpm	r24, Z+
    1b64:	93 ff       	sbrs	r25, 3
    1b66:	81 91       	ld	r24, Z+
    1b68:	4f 01       	movw	r8, r30
    1b6a:	81 11       	cpse	r24, r1
    1b6c:	c1 cf       	rjmp	.-126    	; 0x1af0 <vfprintf+0x88>
    1b6e:	9b eb       	ldi	r25, 0xBB	; 187
    1b70:	98 0f       	add	r25, r24
    1b72:	93 30       	cpi	r25, 0x03	; 3
    1b74:	18 f4       	brcc	.+6      	; 0x1b7c <vfprintf+0x114>
    1b76:	20 61       	ori	r18, 0x10	; 16
    1b78:	80 5e       	subi	r24, 0xE0	; 224
    1b7a:	06 c0       	rjmp	.+12     	; 0x1b88 <vfprintf+0x120>
    1b7c:	9b e9       	ldi	r25, 0x9B	; 155
    1b7e:	98 0f       	add	r25, r24
    1b80:	93 30       	cpi	r25, 0x03	; 3
    1b82:	08 f0       	brcs	.+2      	; 0x1b86 <vfprintf+0x11e>
    1b84:	64 c1       	rjmp	.+712    	; 0x1e4e <vfprintf+0x3e6>
    1b86:	2f 7e       	andi	r18, 0xEF	; 239
    1b88:	26 ff       	sbrs	r18, 6
    1b8a:	16 e0       	ldi	r17, 0x06	; 6
    1b8c:	2f 73       	andi	r18, 0x3F	; 63
    1b8e:	32 2e       	mov	r3, r18
    1b90:	85 36       	cpi	r24, 0x65	; 101
    1b92:	19 f4       	brne	.+6      	; 0x1b9a <vfprintf+0x132>
    1b94:	20 64       	ori	r18, 0x40	; 64
    1b96:	32 2e       	mov	r3, r18
    1b98:	08 c0       	rjmp	.+16     	; 0x1baa <vfprintf+0x142>
    1b9a:	86 36       	cpi	r24, 0x66	; 102
    1b9c:	21 f4       	brne	.+8      	; 0x1ba6 <vfprintf+0x13e>
    1b9e:	f2 2f       	mov	r31, r18
    1ba0:	f0 68       	ori	r31, 0x80	; 128
    1ba2:	3f 2e       	mov	r3, r31
    1ba4:	02 c0       	rjmp	.+4      	; 0x1baa <vfprintf+0x142>
    1ba6:	11 11       	cpse	r17, r1
    1ba8:	11 50       	subi	r17, 0x01	; 1
    1baa:	37 fe       	sbrs	r3, 7
    1bac:	07 c0       	rjmp	.+14     	; 0x1bbc <vfprintf+0x154>
    1bae:	1c 33       	cpi	r17, 0x3C	; 60
    1bb0:	50 f4       	brcc	.+20     	; 0x1bc6 <vfprintf+0x15e>
    1bb2:	ee 24       	eor	r14, r14
    1bb4:	e3 94       	inc	r14
    1bb6:	e1 0e       	add	r14, r17
    1bb8:	27 e0       	ldi	r18, 0x07	; 7
    1bba:	0b c0       	rjmp	.+22     	; 0x1bd2 <vfprintf+0x16a>
    1bbc:	18 30       	cpi	r17, 0x08	; 8
    1bbe:	38 f0       	brcs	.+14     	; 0x1bce <vfprintf+0x166>
    1bc0:	27 e0       	ldi	r18, 0x07	; 7
    1bc2:	17 e0       	ldi	r17, 0x07	; 7
    1bc4:	05 c0       	rjmp	.+10     	; 0x1bd0 <vfprintf+0x168>
    1bc6:	27 e0       	ldi	r18, 0x07	; 7
    1bc8:	4c e3       	ldi	r20, 0x3C	; 60
    1bca:	e4 2e       	mov	r14, r20
    1bcc:	02 c0       	rjmp	.+4      	; 0x1bd2 <vfprintf+0x16a>
    1bce:	21 2f       	mov	r18, r17
    1bd0:	e1 2c       	mov	r14, r1
    1bd2:	52 01       	movw	r10, r4
    1bd4:	44 e0       	ldi	r20, 0x04	; 4
    1bd6:	a4 0e       	add	r10, r20
    1bd8:	b1 1c       	adc	r11, r1
    1bda:	f2 01       	movw	r30, r4
    1bdc:	60 81       	ld	r22, Z
    1bde:	71 81       	ldd	r23, Z+1	; 0x01
    1be0:	82 81       	ldd	r24, Z+2	; 0x02
    1be2:	93 81       	ldd	r25, Z+3	; 0x03
    1be4:	0e 2d       	mov	r16, r14
    1be6:	a3 01       	movw	r20, r6
    1be8:	ee d2       	rcall	.+1500   	; 0x21c6 <__ftoa_engine>
    1bea:	2c 01       	movw	r4, r24
    1bec:	09 81       	ldd	r16, Y+1	; 0x01
    1bee:	00 ff       	sbrs	r16, 0
    1bf0:	02 c0       	rjmp	.+4      	; 0x1bf6 <vfprintf+0x18e>
    1bf2:	03 ff       	sbrs	r16, 3
    1bf4:	07 c0       	rjmp	.+14     	; 0x1c04 <vfprintf+0x19c>
    1bf6:	31 fc       	sbrc	r3, 1
    1bf8:	08 c0       	rjmp	.+16     	; 0x1c0a <vfprintf+0x1a2>
    1bfa:	32 fe       	sbrs	r3, 2
    1bfc:	09 c0       	rjmp	.+18     	; 0x1c10 <vfprintf+0x1a8>
    1bfe:	30 e2       	ldi	r19, 0x20	; 32
    1c00:	23 2e       	mov	r2, r19
    1c02:	07 c0       	rjmp	.+14     	; 0x1c12 <vfprintf+0x1aa>
    1c04:	2d e2       	ldi	r18, 0x2D	; 45
    1c06:	22 2e       	mov	r2, r18
    1c08:	04 c0       	rjmp	.+8      	; 0x1c12 <vfprintf+0x1aa>
    1c0a:	9b e2       	ldi	r25, 0x2B	; 43
    1c0c:	29 2e       	mov	r2, r25
    1c0e:	01 c0       	rjmp	.+2      	; 0x1c12 <vfprintf+0x1aa>
    1c10:	21 2c       	mov	r2, r1
    1c12:	80 2f       	mov	r24, r16
    1c14:	8c 70       	andi	r24, 0x0C	; 12
    1c16:	19 f0       	breq	.+6      	; 0x1c1e <vfprintf+0x1b6>
    1c18:	21 10       	cpse	r2, r1
    1c1a:	51 c2       	rjmp	.+1186   	; 0x20be <vfprintf+0x656>
    1c1c:	8d c2       	rjmp	.+1306   	; 0x2138 <vfprintf+0x6d0>
    1c1e:	37 fe       	sbrs	r3, 7
    1c20:	0f c0       	rjmp	.+30     	; 0x1c40 <vfprintf+0x1d8>
    1c22:	e4 0c       	add	r14, r4
    1c24:	04 ff       	sbrs	r16, 4
    1c26:	04 c0       	rjmp	.+8      	; 0x1c30 <vfprintf+0x1c8>
    1c28:	8a 81       	ldd	r24, Y+2	; 0x02
    1c2a:	81 33       	cpi	r24, 0x31	; 49
    1c2c:	09 f4       	brne	.+2      	; 0x1c30 <vfprintf+0x1c8>
    1c2e:	ea 94       	dec	r14
    1c30:	1e 14       	cp	r1, r14
    1c32:	74 f5       	brge	.+92     	; 0x1c90 <vfprintf+0x228>
    1c34:	f8 e0       	ldi	r31, 0x08	; 8
    1c36:	fe 15       	cp	r31, r14
    1c38:	78 f5       	brcc	.+94     	; 0x1c98 <vfprintf+0x230>
    1c3a:	88 e0       	ldi	r24, 0x08	; 8
    1c3c:	e8 2e       	mov	r14, r24
    1c3e:	2c c0       	rjmp	.+88     	; 0x1c98 <vfprintf+0x230>
    1c40:	36 fc       	sbrc	r3, 6
    1c42:	2a c0       	rjmp	.+84     	; 0x1c98 <vfprintf+0x230>
    1c44:	81 2f       	mov	r24, r17
    1c46:	90 e0       	ldi	r25, 0x00	; 0
    1c48:	84 15       	cp	r24, r4
    1c4a:	95 05       	cpc	r25, r5
    1c4c:	9c f0       	brlt	.+38     	; 0x1c74 <vfprintf+0x20c>
    1c4e:	2c ef       	ldi	r18, 0xFC	; 252
    1c50:	42 16       	cp	r4, r18
    1c52:	2f ef       	ldi	r18, 0xFF	; 255
    1c54:	52 06       	cpc	r5, r18
    1c56:	74 f0       	brlt	.+28     	; 0x1c74 <vfprintf+0x20c>
    1c58:	43 2d       	mov	r20, r3
    1c5a:	40 68       	ori	r20, 0x80	; 128
    1c5c:	34 2e       	mov	r3, r20
    1c5e:	0a c0       	rjmp	.+20     	; 0x1c74 <vfprintf+0x20c>
    1c60:	e2 e0       	ldi	r30, 0x02	; 2
    1c62:	f0 e0       	ldi	r31, 0x00	; 0
    1c64:	ec 0f       	add	r30, r28
    1c66:	fd 1f       	adc	r31, r29
    1c68:	e1 0f       	add	r30, r17
    1c6a:	f1 1d       	adc	r31, r1
    1c6c:	80 81       	ld	r24, Z
    1c6e:	80 33       	cpi	r24, 0x30	; 48
    1c70:	19 f4       	brne	.+6      	; 0x1c78 <vfprintf+0x210>
    1c72:	11 50       	subi	r17, 0x01	; 1
    1c74:	11 11       	cpse	r17, r1
    1c76:	f4 cf       	rjmp	.-24     	; 0x1c60 <vfprintf+0x1f8>
    1c78:	37 fe       	sbrs	r3, 7
    1c7a:	0e c0       	rjmp	.+28     	; 0x1c98 <vfprintf+0x230>
    1c7c:	ee 24       	eor	r14, r14
    1c7e:	e3 94       	inc	r14
    1c80:	e1 0e       	add	r14, r17
    1c82:	81 2f       	mov	r24, r17
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	48 16       	cp	r4, r24
    1c88:	59 06       	cpc	r5, r25
    1c8a:	2c f4       	brge	.+10     	; 0x1c96 <vfprintf+0x22e>
    1c8c:	14 19       	sub	r17, r4
    1c8e:	04 c0       	rjmp	.+8      	; 0x1c98 <vfprintf+0x230>
    1c90:	ee 24       	eor	r14, r14
    1c92:	e3 94       	inc	r14
    1c94:	01 c0       	rjmp	.+2      	; 0x1c98 <vfprintf+0x230>
    1c96:	10 e0       	ldi	r17, 0x00	; 0
    1c98:	37 fe       	sbrs	r3, 7
    1c9a:	06 c0       	rjmp	.+12     	; 0x1ca8 <vfprintf+0x240>
    1c9c:	14 14       	cp	r1, r4
    1c9e:	15 04       	cpc	r1, r5
    1ca0:	34 f4       	brge	.+12     	; 0x1cae <vfprintf+0x246>
    1ca2:	c2 01       	movw	r24, r4
    1ca4:	01 96       	adiw	r24, 0x01	; 1
    1ca6:	05 c0       	rjmp	.+10     	; 0x1cb2 <vfprintf+0x24a>
    1ca8:	85 e0       	ldi	r24, 0x05	; 5
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	02 c0       	rjmp	.+4      	; 0x1cb2 <vfprintf+0x24a>
    1cae:	81 e0       	ldi	r24, 0x01	; 1
    1cb0:	90 e0       	ldi	r25, 0x00	; 0
    1cb2:	21 10       	cpse	r2, r1
    1cb4:	01 96       	adiw	r24, 0x01	; 1
    1cb6:	11 23       	and	r17, r17
    1cb8:	31 f0       	breq	.+12     	; 0x1cc6 <vfprintf+0x25e>
    1cba:	21 2f       	mov	r18, r17
    1cbc:	30 e0       	ldi	r19, 0x00	; 0
    1cbe:	2f 5f       	subi	r18, 0xFF	; 255
    1cc0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc2:	82 0f       	add	r24, r18
    1cc4:	93 1f       	adc	r25, r19
    1cc6:	2f 2d       	mov	r18, r15
    1cc8:	30 e0       	ldi	r19, 0x00	; 0
    1cca:	82 17       	cp	r24, r18
    1ccc:	93 07       	cpc	r25, r19
    1cce:	14 f4       	brge	.+4      	; 0x1cd4 <vfprintf+0x26c>
    1cd0:	f8 1a       	sub	r15, r24
    1cd2:	01 c0       	rjmp	.+2      	; 0x1cd6 <vfprintf+0x26e>
    1cd4:	f1 2c       	mov	r15, r1
    1cd6:	83 2d       	mov	r24, r3
    1cd8:	89 70       	andi	r24, 0x09	; 9
    1cda:	41 f4       	brne	.+16     	; 0x1cec <vfprintf+0x284>
    1cdc:	ff 20       	and	r15, r15
    1cde:	31 f0       	breq	.+12     	; 0x1cec <vfprintf+0x284>
    1ce0:	b6 01       	movw	r22, r12
    1ce2:	80 e2       	ldi	r24, 0x20	; 32
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	a7 d3       	rcall	.+1870   	; 0x2436 <fputc>
    1ce8:	fa 94       	dec	r15
    1cea:	f8 cf       	rjmp	.-16     	; 0x1cdc <vfprintf+0x274>
    1cec:	22 20       	and	r2, r2
    1cee:	21 f0       	breq	.+8      	; 0x1cf8 <vfprintf+0x290>
    1cf0:	b6 01       	movw	r22, r12
    1cf2:	82 2d       	mov	r24, r2
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	9f d3       	rcall	.+1854   	; 0x2436 <fputc>
    1cf8:	33 fc       	sbrc	r3, 3
    1cfa:	08 c0       	rjmp	.+16     	; 0x1d0c <vfprintf+0x2a4>
    1cfc:	ff 20       	and	r15, r15
    1cfe:	31 f0       	breq	.+12     	; 0x1d0c <vfprintf+0x2a4>
    1d00:	b6 01       	movw	r22, r12
    1d02:	80 e3       	ldi	r24, 0x30	; 48
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	97 d3       	rcall	.+1838   	; 0x2436 <fputc>
    1d08:	fa 94       	dec	r15
    1d0a:	f8 cf       	rjmp	.-16     	; 0x1cfc <vfprintf+0x294>
    1d0c:	37 fe       	sbrs	r3, 7
    1d0e:	58 c0       	rjmp	.+176    	; 0x1dc0 <vfprintf+0x358>
    1d10:	94 2d       	mov	r25, r4
    1d12:	85 2d       	mov	r24, r5
    1d14:	57 fe       	sbrs	r5, 7
    1d16:	02 c0       	rjmp	.+4      	; 0x1d1c <vfprintf+0x2b4>
    1d18:	90 e0       	ldi	r25, 0x00	; 0
    1d1a:	80 e0       	ldi	r24, 0x00	; 0
    1d1c:	29 2e       	mov	r2, r25
    1d1e:	38 2e       	mov	r3, r24
    1d20:	20 e0       	ldi	r18, 0x00	; 0
    1d22:	30 e0       	ldi	r19, 0x00	; 0
    1d24:	a2 01       	movw	r20, r4
    1d26:	4e 19       	sub	r20, r14
    1d28:	51 09       	sbc	r21, r1
    1d2a:	5d 87       	std	Y+13, r21	; 0x0d
    1d2c:	4c 87       	std	Y+12, r20	; 0x0c
    1d2e:	a2 01       	movw	r20, r4
    1d30:	42 19       	sub	r20, r2
    1d32:	53 09       	sbc	r21, r3
    1d34:	5f 87       	std	Y+15, r21	; 0x0f
    1d36:	4e 87       	std	Y+14, r20	; 0x0e
    1d38:	61 2f       	mov	r22, r17
    1d3a:	70 e0       	ldi	r23, 0x00	; 0
    1d3c:	44 27       	eor	r20, r20
    1d3e:	55 27       	eor	r21, r21
    1d40:	46 1b       	sub	r20, r22
    1d42:	57 0b       	sbc	r21, r23
    1d44:	59 8b       	std	Y+17, r21	; 0x11
    1d46:	48 8b       	std	Y+16, r20	; 0x10
    1d48:	5f ef       	ldi	r21, 0xFF	; 255
    1d4a:	25 16       	cp	r2, r21
    1d4c:	35 06       	cpc	r3, r21
    1d4e:	41 f4       	brne	.+16     	; 0x1d60 <vfprintf+0x2f8>
    1d50:	b6 01       	movw	r22, r12
    1d52:	8e e2       	ldi	r24, 0x2E	; 46
    1d54:	90 e0       	ldi	r25, 0x00	; 0
    1d56:	2a 8b       	std	Y+18, r18	; 0x12
    1d58:	3b 8b       	std	Y+19, r19	; 0x13
    1d5a:	6d d3       	rcall	.+1754   	; 0x2436 <fputc>
    1d5c:	3b 89       	ldd	r19, Y+19	; 0x13
    1d5e:	2a 89       	ldd	r18, Y+18	; 0x12
    1d60:	42 14       	cp	r4, r2
    1d62:	53 04       	cpc	r5, r3
    1d64:	6c f0       	brlt	.+26     	; 0x1d80 <vfprintf+0x318>
    1d66:	4c 85       	ldd	r20, Y+12	; 0x0c
    1d68:	5d 85       	ldd	r21, Y+13	; 0x0d
    1d6a:	42 15       	cp	r20, r2
    1d6c:	53 05       	cpc	r21, r3
    1d6e:	44 f4       	brge	.+16     	; 0x1d80 <vfprintf+0x318>
    1d70:	ee 85       	ldd	r30, Y+14	; 0x0e
    1d72:	ff 85       	ldd	r31, Y+15	; 0x0f
    1d74:	e2 0f       	add	r30, r18
    1d76:	f3 1f       	adc	r31, r19
    1d78:	e6 0d       	add	r30, r6
    1d7a:	f7 1d       	adc	r31, r7
    1d7c:	81 81       	ldd	r24, Z+1	; 0x01
    1d7e:	01 c0       	rjmp	.+2      	; 0x1d82 <vfprintf+0x31a>
    1d80:	80 e3       	ldi	r24, 0x30	; 48
    1d82:	51 e0       	ldi	r21, 0x01	; 1
    1d84:	25 1a       	sub	r2, r21
    1d86:	31 08       	sbc	r3, r1
    1d88:	2f 5f       	subi	r18, 0xFF	; 255
    1d8a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d8c:	48 89       	ldd	r20, Y+16	; 0x10
    1d8e:	59 89       	ldd	r21, Y+17	; 0x11
    1d90:	24 16       	cp	r2, r20
    1d92:	35 06       	cpc	r3, r21
    1d94:	44 f0       	brlt	.+16     	; 0x1da6 <vfprintf+0x33e>
    1d96:	b6 01       	movw	r22, r12
    1d98:	90 e0       	ldi	r25, 0x00	; 0
    1d9a:	2a 8b       	std	Y+18, r18	; 0x12
    1d9c:	3b 8b       	std	Y+19, r19	; 0x13
    1d9e:	4b d3       	rcall	.+1686   	; 0x2436 <fputc>
    1da0:	2a 89       	ldd	r18, Y+18	; 0x12
    1da2:	3b 89       	ldd	r19, Y+19	; 0x13
    1da4:	d1 cf       	rjmp	.-94     	; 0x1d48 <vfprintf+0x2e0>
    1da6:	24 14       	cp	r2, r4
    1da8:	35 04       	cpc	r3, r5
    1daa:	39 f4       	brne	.+14     	; 0x1dba <vfprintf+0x352>
    1dac:	9a 81       	ldd	r25, Y+2	; 0x02
    1dae:	96 33       	cpi	r25, 0x36	; 54
    1db0:	18 f4       	brcc	.+6      	; 0x1db8 <vfprintf+0x350>
    1db2:	95 33       	cpi	r25, 0x35	; 53
    1db4:	11 f4       	brne	.+4      	; 0x1dba <vfprintf+0x352>
    1db6:	04 ff       	sbrs	r16, 4
    1db8:	81 e3       	ldi	r24, 0x31	; 49
    1dba:	b6 01       	movw	r22, r12
    1dbc:	90 e0       	ldi	r25, 0x00	; 0
    1dbe:	45 c0       	rjmp	.+138    	; 0x1e4a <vfprintf+0x3e2>
    1dc0:	8a 81       	ldd	r24, Y+2	; 0x02
    1dc2:	81 33       	cpi	r24, 0x31	; 49
    1dc4:	09 f0       	breq	.+2      	; 0x1dc8 <vfprintf+0x360>
    1dc6:	0f 7e       	andi	r16, 0xEF	; 239
    1dc8:	b6 01       	movw	r22, r12
    1dca:	90 e0       	ldi	r25, 0x00	; 0
    1dcc:	34 d3       	rcall	.+1640   	; 0x2436 <fputc>
    1dce:	11 11       	cpse	r17, r1
    1dd0:	05 c0       	rjmp	.+10     	; 0x1ddc <vfprintf+0x374>
    1dd2:	34 fc       	sbrc	r3, 4
    1dd4:	16 c0       	rjmp	.+44     	; 0x1e02 <vfprintf+0x39a>
    1dd6:	85 e6       	ldi	r24, 0x65	; 101
    1dd8:	90 e0       	ldi	r25, 0x00	; 0
    1dda:	15 c0       	rjmp	.+42     	; 0x1e06 <vfprintf+0x39e>
    1ddc:	b6 01       	movw	r22, r12
    1dde:	8e e2       	ldi	r24, 0x2E	; 46
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	29 d3       	rcall	.+1618   	; 0x2436 <fputc>
    1de4:	82 e0       	ldi	r24, 0x02	; 2
    1de6:	ee 24       	eor	r14, r14
    1de8:	e3 94       	inc	r14
    1dea:	e8 0e       	add	r14, r24
    1dec:	f3 01       	movw	r30, r6
    1dee:	e8 0f       	add	r30, r24
    1df0:	f1 1d       	adc	r31, r1
    1df2:	80 81       	ld	r24, Z
    1df4:	b6 01       	movw	r22, r12
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	1e d3       	rcall	.+1596   	; 0x2436 <fputc>
    1dfa:	11 50       	subi	r17, 0x01	; 1
    1dfc:	8e 2d       	mov	r24, r14
    1dfe:	99 f7       	brne	.-26     	; 0x1de6 <vfprintf+0x37e>
    1e00:	e8 cf       	rjmp	.-48     	; 0x1dd2 <vfprintf+0x36a>
    1e02:	85 e4       	ldi	r24, 0x45	; 69
    1e04:	90 e0       	ldi	r25, 0x00	; 0
    1e06:	b6 01       	movw	r22, r12
    1e08:	16 d3       	rcall	.+1580   	; 0x2436 <fputc>
    1e0a:	57 fc       	sbrc	r5, 7
    1e0c:	05 c0       	rjmp	.+10     	; 0x1e18 <vfprintf+0x3b0>
    1e0e:	41 14       	cp	r4, r1
    1e10:	51 04       	cpc	r5, r1
    1e12:	39 f4       	brne	.+14     	; 0x1e22 <vfprintf+0x3ba>
    1e14:	04 ff       	sbrs	r16, 4
    1e16:	05 c0       	rjmp	.+10     	; 0x1e22 <vfprintf+0x3ba>
    1e18:	51 94       	neg	r5
    1e1a:	41 94       	neg	r4
    1e1c:	51 08       	sbc	r5, r1
    1e1e:	8d e2       	ldi	r24, 0x2D	; 45
    1e20:	01 c0       	rjmp	.+2      	; 0x1e24 <vfprintf+0x3bc>
    1e22:	8b e2       	ldi	r24, 0x2B	; 43
    1e24:	b6 01       	movw	r22, r12
    1e26:	90 e0       	ldi	r25, 0x00	; 0
    1e28:	06 d3       	rcall	.+1548   	; 0x2436 <fputc>
    1e2a:	80 e3       	ldi	r24, 0x30	; 48
    1e2c:	9a e0       	ldi	r25, 0x0A	; 10
    1e2e:	49 16       	cp	r4, r25
    1e30:	51 04       	cpc	r5, r1
    1e32:	2c f0       	brlt	.+10     	; 0x1e3e <vfprintf+0x3d6>
    1e34:	8f 5f       	subi	r24, 0xFF	; 255
    1e36:	5a e0       	ldi	r21, 0x0A	; 10
    1e38:	45 1a       	sub	r4, r21
    1e3a:	51 08       	sbc	r5, r1
    1e3c:	f7 cf       	rjmp	.-18     	; 0x1e2c <vfprintf+0x3c4>
    1e3e:	b6 01       	movw	r22, r12
    1e40:	90 e0       	ldi	r25, 0x00	; 0
    1e42:	f9 d2       	rcall	.+1522   	; 0x2436 <fputc>
    1e44:	b6 01       	movw	r22, r12
    1e46:	c2 01       	movw	r24, r4
    1e48:	c0 96       	adiw	r24, 0x30	; 48
    1e4a:	f5 d2       	rcall	.+1514   	; 0x2436 <fputc>
    1e4c:	4c c1       	rjmp	.+664    	; 0x20e6 <vfprintf+0x67e>
    1e4e:	83 36       	cpi	r24, 0x63	; 99
    1e50:	31 f0       	breq	.+12     	; 0x1e5e <vfprintf+0x3f6>
    1e52:	83 37       	cpi	r24, 0x73	; 115
    1e54:	79 f0       	breq	.+30     	; 0x1e74 <vfprintf+0x40c>
    1e56:	83 35       	cpi	r24, 0x53	; 83
    1e58:	09 f0       	breq	.+2      	; 0x1e5c <vfprintf+0x3f4>
    1e5a:	54 c0       	rjmp	.+168    	; 0x1f04 <vfprintf+0x49c>
    1e5c:	20 c0       	rjmp	.+64     	; 0x1e9e <vfprintf+0x436>
    1e5e:	52 01       	movw	r10, r4
    1e60:	e2 e0       	ldi	r30, 0x02	; 2
    1e62:	ae 0e       	add	r10, r30
    1e64:	b1 1c       	adc	r11, r1
    1e66:	f2 01       	movw	r30, r4
    1e68:	80 81       	ld	r24, Z
    1e6a:	89 83       	std	Y+1, r24	; 0x01
    1e6c:	01 e0       	ldi	r16, 0x01	; 1
    1e6e:	10 e0       	ldi	r17, 0x00	; 0
    1e70:	23 01       	movw	r4, r6
    1e72:	13 c0       	rjmp	.+38     	; 0x1e9a <vfprintf+0x432>
    1e74:	52 01       	movw	r10, r4
    1e76:	f2 e0       	ldi	r31, 0x02	; 2
    1e78:	af 0e       	add	r10, r31
    1e7a:	b1 1c       	adc	r11, r1
    1e7c:	f2 01       	movw	r30, r4
    1e7e:	40 80       	ld	r4, Z
    1e80:	51 80       	ldd	r5, Z+1	; 0x01
    1e82:	26 ff       	sbrs	r18, 6
    1e84:	03 c0       	rjmp	.+6      	; 0x1e8c <vfprintf+0x424>
    1e86:	61 2f       	mov	r22, r17
    1e88:	70 e0       	ldi	r23, 0x00	; 0
    1e8a:	02 c0       	rjmp	.+4      	; 0x1e90 <vfprintf+0x428>
    1e8c:	6f ef       	ldi	r22, 0xFF	; 255
    1e8e:	7f ef       	ldi	r23, 0xFF	; 255
    1e90:	c2 01       	movw	r24, r4
    1e92:	2a 8b       	std	Y+18, r18	; 0x12
    1e94:	7b d2       	rcall	.+1270   	; 0x238c <strnlen>
    1e96:	8c 01       	movw	r16, r24
    1e98:	2a 89       	ldd	r18, Y+18	; 0x12
    1e9a:	2f 77       	andi	r18, 0x7F	; 127
    1e9c:	14 c0       	rjmp	.+40     	; 0x1ec6 <vfprintf+0x45e>
    1e9e:	52 01       	movw	r10, r4
    1ea0:	f2 e0       	ldi	r31, 0x02	; 2
    1ea2:	af 0e       	add	r10, r31
    1ea4:	b1 1c       	adc	r11, r1
    1ea6:	f2 01       	movw	r30, r4
    1ea8:	40 80       	ld	r4, Z
    1eaa:	51 80       	ldd	r5, Z+1	; 0x01
    1eac:	26 ff       	sbrs	r18, 6
    1eae:	03 c0       	rjmp	.+6      	; 0x1eb6 <vfprintf+0x44e>
    1eb0:	61 2f       	mov	r22, r17
    1eb2:	70 e0       	ldi	r23, 0x00	; 0
    1eb4:	02 c0       	rjmp	.+4      	; 0x1eba <vfprintf+0x452>
    1eb6:	6f ef       	ldi	r22, 0xFF	; 255
    1eb8:	7f ef       	ldi	r23, 0xFF	; 255
    1eba:	c2 01       	movw	r24, r4
    1ebc:	2a 8b       	std	Y+18, r18	; 0x12
    1ebe:	5b d2       	rcall	.+1206   	; 0x2376 <strnlen_P>
    1ec0:	8c 01       	movw	r16, r24
    1ec2:	2a 89       	ldd	r18, Y+18	; 0x12
    1ec4:	20 68       	ori	r18, 0x80	; 128
    1ec6:	32 2e       	mov	r3, r18
    1ec8:	23 fd       	sbrc	r18, 3
    1eca:	18 c0       	rjmp	.+48     	; 0x1efc <vfprintf+0x494>
    1ecc:	8f 2d       	mov	r24, r15
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	08 17       	cp	r16, r24
    1ed2:	19 07       	cpc	r17, r25
    1ed4:	98 f4       	brcc	.+38     	; 0x1efc <vfprintf+0x494>
    1ed6:	b6 01       	movw	r22, r12
    1ed8:	80 e2       	ldi	r24, 0x20	; 32
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	ac d2       	rcall	.+1368   	; 0x2436 <fputc>
    1ede:	fa 94       	dec	r15
    1ee0:	f5 cf       	rjmp	.-22     	; 0x1ecc <vfprintf+0x464>
    1ee2:	f2 01       	movw	r30, r4
    1ee4:	37 fc       	sbrc	r3, 7
    1ee6:	85 91       	lpm	r24, Z+
    1ee8:	37 fe       	sbrs	r3, 7
    1eea:	81 91       	ld	r24, Z+
    1eec:	2f 01       	movw	r4, r30
    1eee:	b6 01       	movw	r22, r12
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	a1 d2       	rcall	.+1346   	; 0x2436 <fputc>
    1ef4:	f1 10       	cpse	r15, r1
    1ef6:	fa 94       	dec	r15
    1ef8:	01 50       	subi	r16, 0x01	; 1
    1efa:	11 09       	sbc	r17, r1
    1efc:	01 15       	cp	r16, r1
    1efe:	11 05       	cpc	r17, r1
    1f00:	81 f7       	brne	.-32     	; 0x1ee2 <vfprintf+0x47a>
    1f02:	f1 c0       	rjmp	.+482    	; 0x20e6 <vfprintf+0x67e>
    1f04:	84 36       	cpi	r24, 0x64	; 100
    1f06:	11 f0       	breq	.+4      	; 0x1f0c <vfprintf+0x4a4>
    1f08:	89 36       	cpi	r24, 0x69	; 105
    1f0a:	51 f5       	brne	.+84     	; 0x1f60 <vfprintf+0x4f8>
    1f0c:	52 01       	movw	r10, r4
    1f0e:	27 ff       	sbrs	r18, 7
    1f10:	09 c0       	rjmp	.+18     	; 0x1f24 <vfprintf+0x4bc>
    1f12:	f4 e0       	ldi	r31, 0x04	; 4
    1f14:	af 0e       	add	r10, r31
    1f16:	b1 1c       	adc	r11, r1
    1f18:	f2 01       	movw	r30, r4
    1f1a:	60 81       	ld	r22, Z
    1f1c:	71 81       	ldd	r23, Z+1	; 0x01
    1f1e:	82 81       	ldd	r24, Z+2	; 0x02
    1f20:	93 81       	ldd	r25, Z+3	; 0x03
    1f22:	0a c0       	rjmp	.+20     	; 0x1f38 <vfprintf+0x4d0>
    1f24:	f2 e0       	ldi	r31, 0x02	; 2
    1f26:	af 0e       	add	r10, r31
    1f28:	b1 1c       	adc	r11, r1
    1f2a:	f2 01       	movw	r30, r4
    1f2c:	60 81       	ld	r22, Z
    1f2e:	71 81       	ldd	r23, Z+1	; 0x01
    1f30:	07 2e       	mov	r0, r23
    1f32:	00 0c       	add	r0, r0
    1f34:	88 0b       	sbc	r24, r24
    1f36:	99 0b       	sbc	r25, r25
    1f38:	2f 76       	andi	r18, 0x6F	; 111
    1f3a:	32 2e       	mov	r3, r18
    1f3c:	97 ff       	sbrs	r25, 7
    1f3e:	09 c0       	rjmp	.+18     	; 0x1f52 <vfprintf+0x4ea>
    1f40:	90 95       	com	r25
    1f42:	80 95       	com	r24
    1f44:	70 95       	com	r23
    1f46:	61 95       	neg	r22
    1f48:	7f 4f       	sbci	r23, 0xFF	; 255
    1f4a:	8f 4f       	sbci	r24, 0xFF	; 255
    1f4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f4e:	20 68       	ori	r18, 0x80	; 128
    1f50:	32 2e       	mov	r3, r18
    1f52:	2a e0       	ldi	r18, 0x0A	; 10
    1f54:	30 e0       	ldi	r19, 0x00	; 0
    1f56:	a3 01       	movw	r20, r6
    1f58:	ed d2       	rcall	.+1498   	; 0x2534 <__ultoa_invert>
    1f5a:	e8 2e       	mov	r14, r24
    1f5c:	e6 18       	sub	r14, r6
    1f5e:	3e c0       	rjmp	.+124    	; 0x1fdc <vfprintf+0x574>
    1f60:	02 2f       	mov	r16, r18
    1f62:	85 37       	cpi	r24, 0x75	; 117
    1f64:	21 f4       	brne	.+8      	; 0x1f6e <vfprintf+0x506>
    1f66:	0f 7e       	andi	r16, 0xEF	; 239
    1f68:	2a e0       	ldi	r18, 0x0A	; 10
    1f6a:	30 e0       	ldi	r19, 0x00	; 0
    1f6c:	1d c0       	rjmp	.+58     	; 0x1fa8 <vfprintf+0x540>
    1f6e:	09 7f       	andi	r16, 0xF9	; 249
    1f70:	8f 36       	cpi	r24, 0x6F	; 111
    1f72:	91 f0       	breq	.+36     	; 0x1f98 <vfprintf+0x530>
    1f74:	18 f4       	brcc	.+6      	; 0x1f7c <vfprintf+0x514>
    1f76:	88 35       	cpi	r24, 0x58	; 88
    1f78:	59 f0       	breq	.+22     	; 0x1f90 <vfprintf+0x528>
    1f7a:	be c0       	rjmp	.+380    	; 0x20f8 <vfprintf+0x690>
    1f7c:	80 37       	cpi	r24, 0x70	; 112
    1f7e:	19 f0       	breq	.+6      	; 0x1f86 <vfprintf+0x51e>
    1f80:	88 37       	cpi	r24, 0x78	; 120
    1f82:	11 f0       	breq	.+4      	; 0x1f88 <vfprintf+0x520>
    1f84:	b9 c0       	rjmp	.+370    	; 0x20f8 <vfprintf+0x690>
    1f86:	00 61       	ori	r16, 0x10	; 16
    1f88:	04 ff       	sbrs	r16, 4
    1f8a:	09 c0       	rjmp	.+18     	; 0x1f9e <vfprintf+0x536>
    1f8c:	04 60       	ori	r16, 0x04	; 4
    1f8e:	07 c0       	rjmp	.+14     	; 0x1f9e <vfprintf+0x536>
    1f90:	24 ff       	sbrs	r18, 4
    1f92:	08 c0       	rjmp	.+16     	; 0x1fa4 <vfprintf+0x53c>
    1f94:	06 60       	ori	r16, 0x06	; 6
    1f96:	06 c0       	rjmp	.+12     	; 0x1fa4 <vfprintf+0x53c>
    1f98:	28 e0       	ldi	r18, 0x08	; 8
    1f9a:	30 e0       	ldi	r19, 0x00	; 0
    1f9c:	05 c0       	rjmp	.+10     	; 0x1fa8 <vfprintf+0x540>
    1f9e:	20 e1       	ldi	r18, 0x10	; 16
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	02 c0       	rjmp	.+4      	; 0x1fa8 <vfprintf+0x540>
    1fa4:	20 e1       	ldi	r18, 0x10	; 16
    1fa6:	32 e0       	ldi	r19, 0x02	; 2
    1fa8:	52 01       	movw	r10, r4
    1faa:	07 ff       	sbrs	r16, 7
    1fac:	09 c0       	rjmp	.+18     	; 0x1fc0 <vfprintf+0x558>
    1fae:	f4 e0       	ldi	r31, 0x04	; 4
    1fb0:	af 0e       	add	r10, r31
    1fb2:	b1 1c       	adc	r11, r1
    1fb4:	f2 01       	movw	r30, r4
    1fb6:	60 81       	ld	r22, Z
    1fb8:	71 81       	ldd	r23, Z+1	; 0x01
    1fba:	82 81       	ldd	r24, Z+2	; 0x02
    1fbc:	93 81       	ldd	r25, Z+3	; 0x03
    1fbe:	08 c0       	rjmp	.+16     	; 0x1fd0 <vfprintf+0x568>
    1fc0:	f2 e0       	ldi	r31, 0x02	; 2
    1fc2:	af 0e       	add	r10, r31
    1fc4:	b1 1c       	adc	r11, r1
    1fc6:	f2 01       	movw	r30, r4
    1fc8:	60 81       	ld	r22, Z
    1fca:	71 81       	ldd	r23, Z+1	; 0x01
    1fcc:	80 e0       	ldi	r24, 0x00	; 0
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	a3 01       	movw	r20, r6
    1fd2:	b0 d2       	rcall	.+1376   	; 0x2534 <__ultoa_invert>
    1fd4:	e8 2e       	mov	r14, r24
    1fd6:	e6 18       	sub	r14, r6
    1fd8:	0f 77       	andi	r16, 0x7F	; 127
    1fda:	30 2e       	mov	r3, r16
    1fdc:	36 fe       	sbrs	r3, 6
    1fde:	0b c0       	rjmp	.+22     	; 0x1ff6 <vfprintf+0x58e>
    1fe0:	33 2d       	mov	r19, r3
    1fe2:	3e 7f       	andi	r19, 0xFE	; 254
    1fe4:	e1 16       	cp	r14, r17
    1fe6:	50 f4       	brcc	.+20     	; 0x1ffc <vfprintf+0x594>
    1fe8:	34 fe       	sbrs	r3, 4
    1fea:	0a c0       	rjmp	.+20     	; 0x2000 <vfprintf+0x598>
    1fec:	32 fc       	sbrc	r3, 2
    1fee:	08 c0       	rjmp	.+16     	; 0x2000 <vfprintf+0x598>
    1ff0:	33 2d       	mov	r19, r3
    1ff2:	3e 7e       	andi	r19, 0xEE	; 238
    1ff4:	05 c0       	rjmp	.+10     	; 0x2000 <vfprintf+0x598>
    1ff6:	0e 2d       	mov	r16, r14
    1ff8:	33 2d       	mov	r19, r3
    1ffa:	03 c0       	rjmp	.+6      	; 0x2002 <vfprintf+0x59a>
    1ffc:	0e 2d       	mov	r16, r14
    1ffe:	01 c0       	rjmp	.+2      	; 0x2002 <vfprintf+0x59a>
    2000:	01 2f       	mov	r16, r17
    2002:	34 ff       	sbrs	r19, 4
    2004:	0c c0       	rjmp	.+24     	; 0x201e <vfprintf+0x5b6>
    2006:	fe 01       	movw	r30, r28
    2008:	ee 0d       	add	r30, r14
    200a:	f1 1d       	adc	r31, r1
    200c:	80 81       	ld	r24, Z
    200e:	80 33       	cpi	r24, 0x30	; 48
    2010:	11 f4       	brne	.+4      	; 0x2016 <vfprintf+0x5ae>
    2012:	39 7e       	andi	r19, 0xE9	; 233
    2014:	08 c0       	rjmp	.+16     	; 0x2026 <vfprintf+0x5be>
    2016:	32 ff       	sbrs	r19, 2
    2018:	05 c0       	rjmp	.+10     	; 0x2024 <vfprintf+0x5bc>
    201a:	0e 5f       	subi	r16, 0xFE	; 254
    201c:	04 c0       	rjmp	.+8      	; 0x2026 <vfprintf+0x5be>
    201e:	83 2f       	mov	r24, r19
    2020:	86 78       	andi	r24, 0x86	; 134
    2022:	09 f0       	breq	.+2      	; 0x2026 <vfprintf+0x5be>
    2024:	0f 5f       	subi	r16, 0xFF	; 255
    2026:	33 fd       	sbrc	r19, 3
    2028:	12 c0       	rjmp	.+36     	; 0x204e <vfprintf+0x5e6>
    202a:	30 ff       	sbrs	r19, 0
    202c:	06 c0       	rjmp	.+12     	; 0x203a <vfprintf+0x5d2>
    202e:	1e 2d       	mov	r17, r14
    2030:	0f 15       	cp	r16, r15
    2032:	18 f4       	brcc	.+6      	; 0x203a <vfprintf+0x5d2>
    2034:	1f 0d       	add	r17, r15
    2036:	10 1b       	sub	r17, r16
    2038:	0f 2d       	mov	r16, r15
    203a:	0f 15       	cp	r16, r15
    203c:	60 f4       	brcc	.+24     	; 0x2056 <vfprintf+0x5ee>
    203e:	b6 01       	movw	r22, r12
    2040:	80 e2       	ldi	r24, 0x20	; 32
    2042:	90 e0       	ldi	r25, 0x00	; 0
    2044:	3b 8b       	std	Y+19, r19	; 0x13
    2046:	f7 d1       	rcall	.+1006   	; 0x2436 <fputc>
    2048:	0f 5f       	subi	r16, 0xFF	; 255
    204a:	3b 89       	ldd	r19, Y+19	; 0x13
    204c:	f6 cf       	rjmp	.-20     	; 0x203a <vfprintf+0x5d2>
    204e:	0f 15       	cp	r16, r15
    2050:	10 f4       	brcc	.+4      	; 0x2056 <vfprintf+0x5ee>
    2052:	f0 1a       	sub	r15, r16
    2054:	01 c0       	rjmp	.+2      	; 0x2058 <vfprintf+0x5f0>
    2056:	f1 2c       	mov	r15, r1
    2058:	34 ff       	sbrs	r19, 4
    205a:	11 c0       	rjmp	.+34     	; 0x207e <vfprintf+0x616>
    205c:	b6 01       	movw	r22, r12
    205e:	80 e3       	ldi	r24, 0x30	; 48
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	3b 8b       	std	Y+19, r19	; 0x13
    2064:	e8 d1       	rcall	.+976    	; 0x2436 <fputc>
    2066:	3b 89       	ldd	r19, Y+19	; 0x13
    2068:	32 ff       	sbrs	r19, 2
    206a:	16 c0       	rjmp	.+44     	; 0x2098 <vfprintf+0x630>
    206c:	31 fd       	sbrc	r19, 1
    206e:	03 c0       	rjmp	.+6      	; 0x2076 <vfprintf+0x60e>
    2070:	88 e7       	ldi	r24, 0x78	; 120
    2072:	90 e0       	ldi	r25, 0x00	; 0
    2074:	02 c0       	rjmp	.+4      	; 0x207a <vfprintf+0x612>
    2076:	88 e5       	ldi	r24, 0x58	; 88
    2078:	90 e0       	ldi	r25, 0x00	; 0
    207a:	b6 01       	movw	r22, r12
    207c:	0c c0       	rjmp	.+24     	; 0x2096 <vfprintf+0x62e>
    207e:	83 2f       	mov	r24, r19
    2080:	86 78       	andi	r24, 0x86	; 134
    2082:	51 f0       	breq	.+20     	; 0x2098 <vfprintf+0x630>
    2084:	31 ff       	sbrs	r19, 1
    2086:	02 c0       	rjmp	.+4      	; 0x208c <vfprintf+0x624>
    2088:	8b e2       	ldi	r24, 0x2B	; 43
    208a:	01 c0       	rjmp	.+2      	; 0x208e <vfprintf+0x626>
    208c:	80 e2       	ldi	r24, 0x20	; 32
    208e:	37 fd       	sbrc	r19, 7
    2090:	8d e2       	ldi	r24, 0x2D	; 45
    2092:	b6 01       	movw	r22, r12
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	cf d1       	rcall	.+926    	; 0x2436 <fputc>
    2098:	e1 16       	cp	r14, r17
    209a:	30 f4       	brcc	.+12     	; 0x20a8 <vfprintf+0x640>
    209c:	b6 01       	movw	r22, r12
    209e:	80 e3       	ldi	r24, 0x30	; 48
    20a0:	90 e0       	ldi	r25, 0x00	; 0
    20a2:	c9 d1       	rcall	.+914    	; 0x2436 <fputc>
    20a4:	11 50       	subi	r17, 0x01	; 1
    20a6:	f8 cf       	rjmp	.-16     	; 0x2098 <vfprintf+0x630>
    20a8:	ea 94       	dec	r14
    20aa:	f3 01       	movw	r30, r6
    20ac:	ee 0d       	add	r30, r14
    20ae:	f1 1d       	adc	r31, r1
    20b0:	80 81       	ld	r24, Z
    20b2:	b6 01       	movw	r22, r12
    20b4:	90 e0       	ldi	r25, 0x00	; 0
    20b6:	bf d1       	rcall	.+894    	; 0x2436 <fputc>
    20b8:	e1 10       	cpse	r14, r1
    20ba:	f6 cf       	rjmp	.-20     	; 0x20a8 <vfprintf+0x640>
    20bc:	14 c0       	rjmp	.+40     	; 0x20e6 <vfprintf+0x67e>
    20be:	f4 e0       	ldi	r31, 0x04	; 4
    20c0:	ff 15       	cp	r31, r15
    20c2:	48 f5       	brcc	.+82     	; 0x2116 <vfprintf+0x6ae>
    20c4:	84 e0       	ldi	r24, 0x04	; 4
    20c6:	f8 1a       	sub	r15, r24
    20c8:	33 fe       	sbrs	r3, 3
    20ca:	1d c0       	rjmp	.+58     	; 0x2106 <vfprintf+0x69e>
    20cc:	21 10       	cpse	r2, r1
    20ce:	24 c0       	rjmp	.+72     	; 0x2118 <vfprintf+0x6b0>
    20d0:	03 ff       	sbrs	r16, 3
    20d2:	27 c0       	rjmp	.+78     	; 0x2122 <vfprintf+0x6ba>
    20d4:	02 e1       	ldi	r16, 0x12	; 18
    20d6:	11 e0       	ldi	r17, 0x01	; 1
    20d8:	f3 2d       	mov	r31, r3
    20da:	f0 71       	andi	r31, 0x10	; 16
    20dc:	3f 2e       	mov	r3, r31
    20de:	f8 01       	movw	r30, r16
    20e0:	84 91       	lpm	r24, Z
    20e2:	81 11       	cpse	r24, r1
    20e4:	21 c0       	rjmp	.+66     	; 0x2128 <vfprintf+0x6c0>
    20e6:	ff 20       	and	r15, r15
    20e8:	09 f4       	brne	.+2      	; 0x20ec <vfprintf+0x684>
    20ea:	fd cc       	rjmp	.-1542   	; 0x1ae6 <vfprintf+0x7e>
    20ec:	b6 01       	movw	r22, r12
    20ee:	80 e2       	ldi	r24, 0x20	; 32
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	a1 d1       	rcall	.+834    	; 0x2436 <fputc>
    20f4:	fa 94       	dec	r15
    20f6:	f7 cf       	rjmp	.-18     	; 0x20e6 <vfprintf+0x67e>
    20f8:	f6 01       	movw	r30, r12
    20fa:	86 81       	ldd	r24, Z+6	; 0x06
    20fc:	97 81       	ldd	r25, Z+7	; 0x07
    20fe:	23 c0       	rjmp	.+70     	; 0x2146 <vfprintf+0x6de>
    2100:	8f ef       	ldi	r24, 0xFF	; 255
    2102:	9f ef       	ldi	r25, 0xFF	; 255
    2104:	20 c0       	rjmp	.+64     	; 0x2146 <vfprintf+0x6de>
    2106:	b6 01       	movw	r22, r12
    2108:	80 e2       	ldi	r24, 0x20	; 32
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	94 d1       	rcall	.+808    	; 0x2436 <fputc>
    210e:	fa 94       	dec	r15
    2110:	f1 10       	cpse	r15, r1
    2112:	f9 cf       	rjmp	.-14     	; 0x2106 <vfprintf+0x69e>
    2114:	db cf       	rjmp	.-74     	; 0x20cc <vfprintf+0x664>
    2116:	f1 2c       	mov	r15, r1
    2118:	b6 01       	movw	r22, r12
    211a:	82 2d       	mov	r24, r2
    211c:	90 e0       	ldi	r25, 0x00	; 0
    211e:	8b d1       	rcall	.+790    	; 0x2436 <fputc>
    2120:	d7 cf       	rjmp	.-82     	; 0x20d0 <vfprintf+0x668>
    2122:	06 e1       	ldi	r16, 0x16	; 22
    2124:	11 e0       	ldi	r17, 0x01	; 1
    2126:	d8 cf       	rjmp	.-80     	; 0x20d8 <vfprintf+0x670>
    2128:	31 10       	cpse	r3, r1
    212a:	80 52       	subi	r24, 0x20	; 32
    212c:	b6 01       	movw	r22, r12
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	82 d1       	rcall	.+772    	; 0x2436 <fputc>
    2132:	0f 5f       	subi	r16, 0xFF	; 255
    2134:	1f 4f       	sbci	r17, 0xFF	; 255
    2136:	d3 cf       	rjmp	.-90     	; 0x20de <vfprintf+0x676>
    2138:	23 e0       	ldi	r18, 0x03	; 3
    213a:	2f 15       	cp	r18, r15
    213c:	10 f4       	brcc	.+4      	; 0x2142 <vfprintf+0x6da>
    213e:	83 e0       	ldi	r24, 0x03	; 3
    2140:	c2 cf       	rjmp	.-124    	; 0x20c6 <vfprintf+0x65e>
    2142:	f1 2c       	mov	r15, r1
    2144:	c5 cf       	rjmp	.-118    	; 0x20d0 <vfprintf+0x668>
    2146:	63 96       	adiw	r28, 0x13	; 19
    2148:	0f b6       	in	r0, 0x3f	; 63
    214a:	f8 94       	cli
    214c:	de bf       	out	0x3e, r29	; 62
    214e:	0f be       	out	0x3f, r0	; 63
    2150:	cd bf       	out	0x3d, r28	; 61
    2152:	df 91       	pop	r29
    2154:	cf 91       	pop	r28
    2156:	1f 91       	pop	r17
    2158:	0f 91       	pop	r16
    215a:	ff 90       	pop	r15
    215c:	ef 90       	pop	r14
    215e:	df 90       	pop	r13
    2160:	cf 90       	pop	r12
    2162:	bf 90       	pop	r11
    2164:	af 90       	pop	r10
    2166:	9f 90       	pop	r9
    2168:	8f 90       	pop	r8
    216a:	7f 90       	pop	r7
    216c:	6f 90       	pop	r6
    216e:	5f 90       	pop	r5
    2170:	4f 90       	pop	r4
    2172:	3f 90       	pop	r3
    2174:	2f 90       	pop	r2
    2176:	08 95       	ret

00002178 <__divmodhi4>:
    2178:	97 fb       	bst	r25, 7
    217a:	07 2e       	mov	r0, r23
    217c:	16 f4       	brtc	.+4      	; 0x2182 <__divmodhi4+0xa>
    217e:	00 94       	com	r0
    2180:	06 d0       	rcall	.+12     	; 0x218e <__divmodhi4_neg1>
    2182:	77 fd       	sbrc	r23, 7
    2184:	08 d0       	rcall	.+16     	; 0x2196 <__divmodhi4_neg2>
    2186:	0b d0       	rcall	.+22     	; 0x219e <__udivmodhi4>
    2188:	07 fc       	sbrc	r0, 7
    218a:	05 d0       	rcall	.+10     	; 0x2196 <__divmodhi4_neg2>
    218c:	3e f4       	brtc	.+14     	; 0x219c <__divmodhi4_exit>

0000218e <__divmodhi4_neg1>:
    218e:	90 95       	com	r25
    2190:	81 95       	neg	r24
    2192:	9f 4f       	sbci	r25, 0xFF	; 255
    2194:	08 95       	ret

00002196 <__divmodhi4_neg2>:
    2196:	70 95       	com	r23
    2198:	61 95       	neg	r22
    219a:	7f 4f       	sbci	r23, 0xFF	; 255

0000219c <__divmodhi4_exit>:
    219c:	08 95       	ret

0000219e <__udivmodhi4>:
    219e:	aa 1b       	sub	r26, r26
    21a0:	bb 1b       	sub	r27, r27
    21a2:	51 e1       	ldi	r21, 0x11	; 17
    21a4:	07 c0       	rjmp	.+14     	; 0x21b4 <__udivmodhi4_ep>

000021a6 <__udivmodhi4_loop>:
    21a6:	aa 1f       	adc	r26, r26
    21a8:	bb 1f       	adc	r27, r27
    21aa:	a6 17       	cp	r26, r22
    21ac:	b7 07       	cpc	r27, r23
    21ae:	10 f0       	brcs	.+4      	; 0x21b4 <__udivmodhi4_ep>
    21b0:	a6 1b       	sub	r26, r22
    21b2:	b7 0b       	sbc	r27, r23

000021b4 <__udivmodhi4_ep>:
    21b4:	88 1f       	adc	r24, r24
    21b6:	99 1f       	adc	r25, r25
    21b8:	5a 95       	dec	r21
    21ba:	a9 f7       	brne	.-22     	; 0x21a6 <__udivmodhi4_loop>
    21bc:	80 95       	com	r24
    21be:	90 95       	com	r25
    21c0:	bc 01       	movw	r22, r24
    21c2:	cd 01       	movw	r24, r26
    21c4:	08 95       	ret

000021c6 <__ftoa_engine>:
    21c6:	28 30       	cpi	r18, 0x08	; 8
    21c8:	08 f0       	brcs	.+2      	; 0x21cc <__ftoa_engine+0x6>
    21ca:	27 e0       	ldi	r18, 0x07	; 7
    21cc:	33 27       	eor	r19, r19
    21ce:	da 01       	movw	r26, r20
    21d0:	99 0f       	add	r25, r25
    21d2:	31 1d       	adc	r19, r1
    21d4:	87 fd       	sbrc	r24, 7
    21d6:	91 60       	ori	r25, 0x01	; 1
    21d8:	00 96       	adiw	r24, 0x00	; 0
    21da:	61 05       	cpc	r22, r1
    21dc:	71 05       	cpc	r23, r1
    21de:	39 f4       	brne	.+14     	; 0x21ee <__ftoa_engine+0x28>
    21e0:	32 60       	ori	r19, 0x02	; 2
    21e2:	2e 5f       	subi	r18, 0xFE	; 254
    21e4:	3d 93       	st	X+, r19
    21e6:	30 e3       	ldi	r19, 0x30	; 48
    21e8:	2a 95       	dec	r18
    21ea:	e1 f7       	brne	.-8      	; 0x21e4 <__ftoa_engine+0x1e>
    21ec:	08 95       	ret
    21ee:	9f 3f       	cpi	r25, 0xFF	; 255
    21f0:	30 f0       	brcs	.+12     	; 0x21fe <__ftoa_engine+0x38>
    21f2:	80 38       	cpi	r24, 0x80	; 128
    21f4:	71 05       	cpc	r23, r1
    21f6:	61 05       	cpc	r22, r1
    21f8:	09 f0       	breq	.+2      	; 0x21fc <__ftoa_engine+0x36>
    21fa:	3c 5f       	subi	r19, 0xFC	; 252
    21fc:	3c 5f       	subi	r19, 0xFC	; 252
    21fe:	3d 93       	st	X+, r19
    2200:	91 30       	cpi	r25, 0x01	; 1
    2202:	08 f0       	brcs	.+2      	; 0x2206 <__stack+0x7>
    2204:	80 68       	ori	r24, 0x80	; 128
    2206:	91 1d       	adc	r25, r1
    2208:	df 93       	push	r29
    220a:	cf 93       	push	r28
    220c:	1f 93       	push	r17
    220e:	0f 93       	push	r16
    2210:	ff 92       	push	r15
    2212:	ef 92       	push	r14
    2214:	19 2f       	mov	r17, r25
    2216:	98 7f       	andi	r25, 0xF8	; 248
    2218:	96 95       	lsr	r25
    221a:	e9 2f       	mov	r30, r25
    221c:	96 95       	lsr	r25
    221e:	96 95       	lsr	r25
    2220:	e9 0f       	add	r30, r25
    2222:	ff 27       	eor	r31, r31
    2224:	ec 58       	subi	r30, 0x8C	; 140
    2226:	fe 4f       	sbci	r31, 0xFE	; 254
    2228:	99 27       	eor	r25, r25
    222a:	33 27       	eor	r19, r19
    222c:	ee 24       	eor	r14, r14
    222e:	ff 24       	eor	r15, r15
    2230:	a7 01       	movw	r20, r14
    2232:	e7 01       	movw	r28, r14
    2234:	05 90       	lpm	r0, Z+
    2236:	08 94       	sec
    2238:	07 94       	ror	r0
    223a:	28 f4       	brcc	.+10     	; 0x2246 <__stack+0x47>
    223c:	36 0f       	add	r19, r22
    223e:	e7 1e       	adc	r14, r23
    2240:	f8 1e       	adc	r15, r24
    2242:	49 1f       	adc	r20, r25
    2244:	51 1d       	adc	r21, r1
    2246:	66 0f       	add	r22, r22
    2248:	77 1f       	adc	r23, r23
    224a:	88 1f       	adc	r24, r24
    224c:	99 1f       	adc	r25, r25
    224e:	06 94       	lsr	r0
    2250:	a1 f7       	brne	.-24     	; 0x223a <__stack+0x3b>
    2252:	05 90       	lpm	r0, Z+
    2254:	07 94       	ror	r0
    2256:	28 f4       	brcc	.+10     	; 0x2262 <__stack+0x63>
    2258:	e7 0e       	add	r14, r23
    225a:	f8 1e       	adc	r15, r24
    225c:	49 1f       	adc	r20, r25
    225e:	56 1f       	adc	r21, r22
    2260:	c1 1d       	adc	r28, r1
    2262:	77 0f       	add	r23, r23
    2264:	88 1f       	adc	r24, r24
    2266:	99 1f       	adc	r25, r25
    2268:	66 1f       	adc	r22, r22
    226a:	06 94       	lsr	r0
    226c:	a1 f7       	brne	.-24     	; 0x2256 <__stack+0x57>
    226e:	05 90       	lpm	r0, Z+
    2270:	07 94       	ror	r0
    2272:	28 f4       	brcc	.+10     	; 0x227e <__stack+0x7f>
    2274:	f8 0e       	add	r15, r24
    2276:	49 1f       	adc	r20, r25
    2278:	56 1f       	adc	r21, r22
    227a:	c7 1f       	adc	r28, r23
    227c:	d1 1d       	adc	r29, r1
    227e:	88 0f       	add	r24, r24
    2280:	99 1f       	adc	r25, r25
    2282:	66 1f       	adc	r22, r22
    2284:	77 1f       	adc	r23, r23
    2286:	06 94       	lsr	r0
    2288:	a1 f7       	brne	.-24     	; 0x2272 <__stack+0x73>
    228a:	05 90       	lpm	r0, Z+
    228c:	07 94       	ror	r0
    228e:	20 f4       	brcc	.+8      	; 0x2298 <__stack+0x99>
    2290:	49 0f       	add	r20, r25
    2292:	56 1f       	adc	r21, r22
    2294:	c7 1f       	adc	r28, r23
    2296:	d8 1f       	adc	r29, r24
    2298:	99 0f       	add	r25, r25
    229a:	66 1f       	adc	r22, r22
    229c:	77 1f       	adc	r23, r23
    229e:	88 1f       	adc	r24, r24
    22a0:	06 94       	lsr	r0
    22a2:	a9 f7       	brne	.-22     	; 0x228e <__stack+0x8f>
    22a4:	84 91       	lpm	r24, Z
    22a6:	10 95       	com	r17
    22a8:	17 70       	andi	r17, 0x07	; 7
    22aa:	41 f0       	breq	.+16     	; 0x22bc <__stack+0xbd>
    22ac:	d6 95       	lsr	r29
    22ae:	c7 95       	ror	r28
    22b0:	57 95       	ror	r21
    22b2:	47 95       	ror	r20
    22b4:	f7 94       	ror	r15
    22b6:	e7 94       	ror	r14
    22b8:	1a 95       	dec	r17
    22ba:	c1 f7       	brne	.-16     	; 0x22ac <__stack+0xad>
    22bc:	ea e1       	ldi	r30, 0x1A	; 26
    22be:	f1 e0       	ldi	r31, 0x01	; 1
    22c0:	68 94       	set
    22c2:	15 90       	lpm	r1, Z+
    22c4:	15 91       	lpm	r17, Z+
    22c6:	35 91       	lpm	r19, Z+
    22c8:	65 91       	lpm	r22, Z+
    22ca:	95 91       	lpm	r25, Z+
    22cc:	05 90       	lpm	r0, Z+
    22ce:	7f e2       	ldi	r23, 0x2F	; 47
    22d0:	73 95       	inc	r23
    22d2:	e1 18       	sub	r14, r1
    22d4:	f1 0a       	sbc	r15, r17
    22d6:	43 0b       	sbc	r20, r19
    22d8:	56 0b       	sbc	r21, r22
    22da:	c9 0b       	sbc	r28, r25
    22dc:	d0 09       	sbc	r29, r0
    22de:	c0 f7       	brcc	.-16     	; 0x22d0 <__stack+0xd1>
    22e0:	e1 0c       	add	r14, r1
    22e2:	f1 1e       	adc	r15, r17
    22e4:	43 1f       	adc	r20, r19
    22e6:	56 1f       	adc	r21, r22
    22e8:	c9 1f       	adc	r28, r25
    22ea:	d0 1d       	adc	r29, r0
    22ec:	7e f4       	brtc	.+30     	; 0x230c <__stack+0x10d>
    22ee:	70 33       	cpi	r23, 0x30	; 48
    22f0:	11 f4       	brne	.+4      	; 0x22f6 <__stack+0xf7>
    22f2:	8a 95       	dec	r24
    22f4:	e6 cf       	rjmp	.-52     	; 0x22c2 <__stack+0xc3>
    22f6:	e8 94       	clt
    22f8:	01 50       	subi	r16, 0x01	; 1
    22fa:	30 f0       	brcs	.+12     	; 0x2308 <__stack+0x109>
    22fc:	08 0f       	add	r16, r24
    22fe:	0a f4       	brpl	.+2      	; 0x2302 <__stack+0x103>
    2300:	00 27       	eor	r16, r16
    2302:	02 17       	cp	r16, r18
    2304:	08 f4       	brcc	.+2      	; 0x2308 <__stack+0x109>
    2306:	20 2f       	mov	r18, r16
    2308:	23 95       	inc	r18
    230a:	02 2f       	mov	r16, r18
    230c:	7a 33       	cpi	r23, 0x3A	; 58
    230e:	28 f0       	brcs	.+10     	; 0x231a <__stack+0x11b>
    2310:	79 e3       	ldi	r23, 0x39	; 57
    2312:	7d 93       	st	X+, r23
    2314:	2a 95       	dec	r18
    2316:	e9 f7       	brne	.-6      	; 0x2312 <__stack+0x113>
    2318:	10 c0       	rjmp	.+32     	; 0x233a <__stack+0x13b>
    231a:	7d 93       	st	X+, r23
    231c:	2a 95       	dec	r18
    231e:	89 f6       	brne	.-94     	; 0x22c2 <__stack+0xc3>
    2320:	06 94       	lsr	r0
    2322:	97 95       	ror	r25
    2324:	67 95       	ror	r22
    2326:	37 95       	ror	r19
    2328:	17 95       	ror	r17
    232a:	17 94       	ror	r1
    232c:	e1 18       	sub	r14, r1
    232e:	f1 0a       	sbc	r15, r17
    2330:	43 0b       	sbc	r20, r19
    2332:	56 0b       	sbc	r21, r22
    2334:	c9 0b       	sbc	r28, r25
    2336:	d0 09       	sbc	r29, r0
    2338:	98 f0       	brcs	.+38     	; 0x2360 <__stack+0x161>
    233a:	23 95       	inc	r18
    233c:	7e 91       	ld	r23, -X
    233e:	73 95       	inc	r23
    2340:	7a 33       	cpi	r23, 0x3A	; 58
    2342:	08 f0       	brcs	.+2      	; 0x2346 <__stack+0x147>
    2344:	70 e3       	ldi	r23, 0x30	; 48
    2346:	7c 93       	st	X, r23
    2348:	20 13       	cpse	r18, r16
    234a:	b8 f7       	brcc	.-18     	; 0x233a <__stack+0x13b>
    234c:	7e 91       	ld	r23, -X
    234e:	70 61       	ori	r23, 0x10	; 16
    2350:	7d 93       	st	X+, r23
    2352:	30 f0       	brcs	.+12     	; 0x2360 <__stack+0x161>
    2354:	83 95       	inc	r24
    2356:	71 e3       	ldi	r23, 0x31	; 49
    2358:	7d 93       	st	X+, r23
    235a:	70 e3       	ldi	r23, 0x30	; 48
    235c:	2a 95       	dec	r18
    235e:	e1 f7       	brne	.-8      	; 0x2358 <__stack+0x159>
    2360:	11 24       	eor	r1, r1
    2362:	ef 90       	pop	r14
    2364:	ff 90       	pop	r15
    2366:	0f 91       	pop	r16
    2368:	1f 91       	pop	r17
    236a:	cf 91       	pop	r28
    236c:	df 91       	pop	r29
    236e:	99 27       	eor	r25, r25
    2370:	87 fd       	sbrc	r24, 7
    2372:	90 95       	com	r25
    2374:	08 95       	ret

00002376 <strnlen_P>:
    2376:	fc 01       	movw	r30, r24
    2378:	05 90       	lpm	r0, Z+
    237a:	61 50       	subi	r22, 0x01	; 1
    237c:	70 40       	sbci	r23, 0x00	; 0
    237e:	01 10       	cpse	r0, r1
    2380:	d8 f7       	brcc	.-10     	; 0x2378 <strnlen_P+0x2>
    2382:	80 95       	com	r24
    2384:	90 95       	com	r25
    2386:	8e 0f       	add	r24, r30
    2388:	9f 1f       	adc	r25, r31
    238a:	08 95       	ret

0000238c <strnlen>:
    238c:	fc 01       	movw	r30, r24
    238e:	61 50       	subi	r22, 0x01	; 1
    2390:	70 40       	sbci	r23, 0x00	; 0
    2392:	01 90       	ld	r0, Z+
    2394:	01 10       	cpse	r0, r1
    2396:	d8 f7       	brcc	.-10     	; 0x238e <strnlen+0x2>
    2398:	80 95       	com	r24
    239a:	90 95       	com	r25
    239c:	8e 0f       	add	r24, r30
    239e:	9f 1f       	adc	r25, r31
    23a0:	08 95       	ret

000023a2 <fdevopen>:
    23a2:	0f 93       	push	r16
    23a4:	1f 93       	push	r17
    23a6:	cf 93       	push	r28
    23a8:	df 93       	push	r29
    23aa:	00 97       	sbiw	r24, 0x00	; 0
    23ac:	31 f4       	brne	.+12     	; 0x23ba <fdevopen+0x18>
    23ae:	61 15       	cp	r22, r1
    23b0:	71 05       	cpc	r23, r1
    23b2:	19 f4       	brne	.+6      	; 0x23ba <fdevopen+0x18>
    23b4:	80 e0       	ldi	r24, 0x00	; 0
    23b6:	90 e0       	ldi	r25, 0x00	; 0
    23b8:	39 c0       	rjmp	.+114    	; 0x242c <fdevopen+0x8a>
    23ba:	8b 01       	movw	r16, r22
    23bc:	ec 01       	movw	r28, r24
    23be:	6e e0       	ldi	r22, 0x0E	; 14
    23c0:	70 e0       	ldi	r23, 0x00	; 0
    23c2:	81 e0       	ldi	r24, 0x01	; 1
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	14 d1       	rcall	.+552    	; 0x25f0 <calloc>
    23c8:	fc 01       	movw	r30, r24
    23ca:	89 2b       	or	r24, r25
    23cc:	99 f3       	breq	.-26     	; 0x23b4 <fdevopen+0x12>
    23ce:	80 e8       	ldi	r24, 0x80	; 128
    23d0:	83 83       	std	Z+3, r24	; 0x03
    23d2:	01 15       	cp	r16, r1
    23d4:	11 05       	cpc	r17, r1
    23d6:	71 f0       	breq	.+28     	; 0x23f4 <fdevopen+0x52>
    23d8:	13 87       	std	Z+11, r17	; 0x0b
    23da:	02 87       	std	Z+10, r16	; 0x0a
    23dc:	81 e8       	ldi	r24, 0x81	; 129
    23de:	83 83       	std	Z+3, r24	; 0x03
    23e0:	80 91 0b 04 	lds	r24, 0x040B	; 0x80040b <__iob>
    23e4:	90 91 0c 04 	lds	r25, 0x040C	; 0x80040c <__iob+0x1>
    23e8:	89 2b       	or	r24, r25
    23ea:	21 f4       	brne	.+8      	; 0x23f4 <fdevopen+0x52>
    23ec:	f0 93 0c 04 	sts	0x040C, r31	; 0x80040c <__iob+0x1>
    23f0:	e0 93 0b 04 	sts	0x040B, r30	; 0x80040b <__iob>
    23f4:	20 97       	sbiw	r28, 0x00	; 0
    23f6:	c9 f0       	breq	.+50     	; 0x242a <fdevopen+0x88>
    23f8:	d1 87       	std	Z+9, r29	; 0x09
    23fa:	c0 87       	std	Z+8, r28	; 0x08
    23fc:	83 81       	ldd	r24, Z+3	; 0x03
    23fe:	82 60       	ori	r24, 0x02	; 2
    2400:	83 83       	std	Z+3, r24	; 0x03
    2402:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <__iob+0x2>
    2406:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <__iob+0x3>
    240a:	89 2b       	or	r24, r25
    240c:	71 f4       	brne	.+28     	; 0x242a <fdevopen+0x88>
    240e:	f0 93 0e 04 	sts	0x040E, r31	; 0x80040e <__iob+0x3>
    2412:	e0 93 0d 04 	sts	0x040D, r30	; 0x80040d <__iob+0x2>
    2416:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <__iob+0x4>
    241a:	90 91 10 04 	lds	r25, 0x0410	; 0x800410 <__iob+0x5>
    241e:	89 2b       	or	r24, r25
    2420:	21 f4       	brne	.+8      	; 0x242a <fdevopen+0x88>
    2422:	f0 93 10 04 	sts	0x0410, r31	; 0x800410 <__iob+0x5>
    2426:	e0 93 0f 04 	sts	0x040F, r30	; 0x80040f <__iob+0x4>
    242a:	cf 01       	movw	r24, r30
    242c:	df 91       	pop	r29
    242e:	cf 91       	pop	r28
    2430:	1f 91       	pop	r17
    2432:	0f 91       	pop	r16
    2434:	08 95       	ret

00002436 <fputc>:
    2436:	0f 93       	push	r16
    2438:	1f 93       	push	r17
    243a:	cf 93       	push	r28
    243c:	df 93       	push	r29
    243e:	fb 01       	movw	r30, r22
    2440:	23 81       	ldd	r18, Z+3	; 0x03
    2442:	21 fd       	sbrc	r18, 1
    2444:	03 c0       	rjmp	.+6      	; 0x244c <fputc+0x16>
    2446:	8f ef       	ldi	r24, 0xFF	; 255
    2448:	9f ef       	ldi	r25, 0xFF	; 255
    244a:	28 c0       	rjmp	.+80     	; 0x249c <fputc+0x66>
    244c:	22 ff       	sbrs	r18, 2
    244e:	16 c0       	rjmp	.+44     	; 0x247c <fputc+0x46>
    2450:	46 81       	ldd	r20, Z+6	; 0x06
    2452:	57 81       	ldd	r21, Z+7	; 0x07
    2454:	24 81       	ldd	r18, Z+4	; 0x04
    2456:	35 81       	ldd	r19, Z+5	; 0x05
    2458:	42 17       	cp	r20, r18
    245a:	53 07       	cpc	r21, r19
    245c:	44 f4       	brge	.+16     	; 0x246e <fputc+0x38>
    245e:	a0 81       	ld	r26, Z
    2460:	b1 81       	ldd	r27, Z+1	; 0x01
    2462:	9d 01       	movw	r18, r26
    2464:	2f 5f       	subi	r18, 0xFF	; 255
    2466:	3f 4f       	sbci	r19, 0xFF	; 255
    2468:	31 83       	std	Z+1, r19	; 0x01
    246a:	20 83       	st	Z, r18
    246c:	8c 93       	st	X, r24
    246e:	26 81       	ldd	r18, Z+6	; 0x06
    2470:	37 81       	ldd	r19, Z+7	; 0x07
    2472:	2f 5f       	subi	r18, 0xFF	; 255
    2474:	3f 4f       	sbci	r19, 0xFF	; 255
    2476:	37 83       	std	Z+7, r19	; 0x07
    2478:	26 83       	std	Z+6, r18	; 0x06
    247a:	10 c0       	rjmp	.+32     	; 0x249c <fputc+0x66>
    247c:	eb 01       	movw	r28, r22
    247e:	09 2f       	mov	r16, r25
    2480:	18 2f       	mov	r17, r24
    2482:	00 84       	ldd	r0, Z+8	; 0x08
    2484:	f1 85       	ldd	r31, Z+9	; 0x09
    2486:	e0 2d       	mov	r30, r0
    2488:	19 95       	eicall
    248a:	89 2b       	or	r24, r25
    248c:	e1 f6       	brne	.-72     	; 0x2446 <fputc+0x10>
    248e:	8e 81       	ldd	r24, Y+6	; 0x06
    2490:	9f 81       	ldd	r25, Y+7	; 0x07
    2492:	01 96       	adiw	r24, 0x01	; 1
    2494:	9f 83       	std	Y+7, r25	; 0x07
    2496:	8e 83       	std	Y+6, r24	; 0x06
    2498:	81 2f       	mov	r24, r17
    249a:	90 2f       	mov	r25, r16
    249c:	df 91       	pop	r29
    249e:	cf 91       	pop	r28
    24a0:	1f 91       	pop	r17
    24a2:	0f 91       	pop	r16
    24a4:	08 95       	ret

000024a6 <printf>:
    24a6:	cf 93       	push	r28
    24a8:	df 93       	push	r29
    24aa:	cd b7       	in	r28, 0x3d	; 61
    24ac:	de b7       	in	r29, 0x3e	; 62
    24ae:	ae 01       	movw	r20, r28
    24b0:	4a 5f       	subi	r20, 0xFA	; 250
    24b2:	5f 4f       	sbci	r21, 0xFF	; 255
    24b4:	fa 01       	movw	r30, r20
    24b6:	61 91       	ld	r22, Z+
    24b8:	71 91       	ld	r23, Z+
    24ba:	af 01       	movw	r20, r30
    24bc:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <__iob+0x2>
    24c0:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <__iob+0x3>
    24c4:	d1 da       	rcall	.-2654   	; 0x1a68 <vfprintf>
    24c6:	df 91       	pop	r29
    24c8:	cf 91       	pop	r28
    24ca:	08 95       	ret

000024cc <putchar>:
    24cc:	60 91 0d 04 	lds	r22, 0x040D	; 0x80040d <__iob+0x2>
    24d0:	70 91 0e 04 	lds	r23, 0x040E	; 0x80040e <__iob+0x3>
    24d4:	b0 cf       	rjmp	.-160    	; 0x2436 <fputc>

000024d6 <sprintf>:
    24d6:	0f 93       	push	r16
    24d8:	1f 93       	push	r17
    24da:	cf 93       	push	r28
    24dc:	df 93       	push	r29
    24de:	cd b7       	in	r28, 0x3d	; 61
    24e0:	de b7       	in	r29, 0x3e	; 62
    24e2:	2e 97       	sbiw	r28, 0x0e	; 14
    24e4:	0f b6       	in	r0, 0x3f	; 63
    24e6:	f8 94       	cli
    24e8:	de bf       	out	0x3e, r29	; 62
    24ea:	0f be       	out	0x3f, r0	; 63
    24ec:	cd bf       	out	0x3d, r28	; 61
    24ee:	0e 89       	ldd	r16, Y+22	; 0x16
    24f0:	1f 89       	ldd	r17, Y+23	; 0x17
    24f2:	86 e0       	ldi	r24, 0x06	; 6
    24f4:	8c 83       	std	Y+4, r24	; 0x04
    24f6:	1a 83       	std	Y+2, r17	; 0x02
    24f8:	09 83       	std	Y+1, r16	; 0x01
    24fa:	8f ef       	ldi	r24, 0xFF	; 255
    24fc:	9f e7       	ldi	r25, 0x7F	; 127
    24fe:	9e 83       	std	Y+6, r25	; 0x06
    2500:	8d 83       	std	Y+5, r24	; 0x05
    2502:	ae 01       	movw	r20, r28
    2504:	46 5e       	subi	r20, 0xE6	; 230
    2506:	5f 4f       	sbci	r21, 0xFF	; 255
    2508:	68 8d       	ldd	r22, Y+24	; 0x18
    250a:	79 8d       	ldd	r23, Y+25	; 0x19
    250c:	ce 01       	movw	r24, r28
    250e:	01 96       	adiw	r24, 0x01	; 1
    2510:	ab da       	rcall	.-2730   	; 0x1a68 <vfprintf>
    2512:	2f 81       	ldd	r18, Y+7	; 0x07
    2514:	38 85       	ldd	r19, Y+8	; 0x08
    2516:	f8 01       	movw	r30, r16
    2518:	e2 0f       	add	r30, r18
    251a:	f3 1f       	adc	r31, r19
    251c:	10 82       	st	Z, r1
    251e:	2e 96       	adiw	r28, 0x0e	; 14
    2520:	0f b6       	in	r0, 0x3f	; 63
    2522:	f8 94       	cli
    2524:	de bf       	out	0x3e, r29	; 62
    2526:	0f be       	out	0x3f, r0	; 63
    2528:	cd bf       	out	0x3d, r28	; 61
    252a:	df 91       	pop	r29
    252c:	cf 91       	pop	r28
    252e:	1f 91       	pop	r17
    2530:	0f 91       	pop	r16
    2532:	08 95       	ret

00002534 <__ultoa_invert>:
    2534:	fa 01       	movw	r30, r20
    2536:	aa 27       	eor	r26, r26
    2538:	28 30       	cpi	r18, 0x08	; 8
    253a:	51 f1       	breq	.+84     	; 0x2590 <__ultoa_invert+0x5c>
    253c:	20 31       	cpi	r18, 0x10	; 16
    253e:	81 f1       	breq	.+96     	; 0x25a0 <__ultoa_invert+0x6c>
    2540:	e8 94       	clt
    2542:	6f 93       	push	r22
    2544:	6e 7f       	andi	r22, 0xFE	; 254
    2546:	6e 5f       	subi	r22, 0xFE	; 254
    2548:	7f 4f       	sbci	r23, 0xFF	; 255
    254a:	8f 4f       	sbci	r24, 0xFF	; 255
    254c:	9f 4f       	sbci	r25, 0xFF	; 255
    254e:	af 4f       	sbci	r26, 0xFF	; 255
    2550:	b1 e0       	ldi	r27, 0x01	; 1
    2552:	3e d0       	rcall	.+124    	; 0x25d0 <__ultoa_invert+0x9c>
    2554:	b4 e0       	ldi	r27, 0x04	; 4
    2556:	3c d0       	rcall	.+120    	; 0x25d0 <__ultoa_invert+0x9c>
    2558:	67 0f       	add	r22, r23
    255a:	78 1f       	adc	r23, r24
    255c:	89 1f       	adc	r24, r25
    255e:	9a 1f       	adc	r25, r26
    2560:	a1 1d       	adc	r26, r1
    2562:	68 0f       	add	r22, r24
    2564:	79 1f       	adc	r23, r25
    2566:	8a 1f       	adc	r24, r26
    2568:	91 1d       	adc	r25, r1
    256a:	a1 1d       	adc	r26, r1
    256c:	6a 0f       	add	r22, r26
    256e:	71 1d       	adc	r23, r1
    2570:	81 1d       	adc	r24, r1
    2572:	91 1d       	adc	r25, r1
    2574:	a1 1d       	adc	r26, r1
    2576:	20 d0       	rcall	.+64     	; 0x25b8 <__ultoa_invert+0x84>
    2578:	09 f4       	brne	.+2      	; 0x257c <__ultoa_invert+0x48>
    257a:	68 94       	set
    257c:	3f 91       	pop	r19
    257e:	2a e0       	ldi	r18, 0x0A	; 10
    2580:	26 9f       	mul	r18, r22
    2582:	11 24       	eor	r1, r1
    2584:	30 19       	sub	r19, r0
    2586:	30 5d       	subi	r19, 0xD0	; 208
    2588:	31 93       	st	Z+, r19
    258a:	de f6       	brtc	.-74     	; 0x2542 <__ultoa_invert+0xe>
    258c:	cf 01       	movw	r24, r30
    258e:	08 95       	ret
    2590:	46 2f       	mov	r20, r22
    2592:	47 70       	andi	r20, 0x07	; 7
    2594:	40 5d       	subi	r20, 0xD0	; 208
    2596:	41 93       	st	Z+, r20
    2598:	b3 e0       	ldi	r27, 0x03	; 3
    259a:	0f d0       	rcall	.+30     	; 0x25ba <__ultoa_invert+0x86>
    259c:	c9 f7       	brne	.-14     	; 0x2590 <__ultoa_invert+0x5c>
    259e:	f6 cf       	rjmp	.-20     	; 0x258c <__ultoa_invert+0x58>
    25a0:	46 2f       	mov	r20, r22
    25a2:	4f 70       	andi	r20, 0x0F	; 15
    25a4:	40 5d       	subi	r20, 0xD0	; 208
    25a6:	4a 33       	cpi	r20, 0x3A	; 58
    25a8:	18 f0       	brcs	.+6      	; 0x25b0 <__ultoa_invert+0x7c>
    25aa:	49 5d       	subi	r20, 0xD9	; 217
    25ac:	31 fd       	sbrc	r19, 1
    25ae:	40 52       	subi	r20, 0x20	; 32
    25b0:	41 93       	st	Z+, r20
    25b2:	02 d0       	rcall	.+4      	; 0x25b8 <__ultoa_invert+0x84>
    25b4:	a9 f7       	brne	.-22     	; 0x25a0 <__ultoa_invert+0x6c>
    25b6:	ea cf       	rjmp	.-44     	; 0x258c <__ultoa_invert+0x58>
    25b8:	b4 e0       	ldi	r27, 0x04	; 4
    25ba:	a6 95       	lsr	r26
    25bc:	97 95       	ror	r25
    25be:	87 95       	ror	r24
    25c0:	77 95       	ror	r23
    25c2:	67 95       	ror	r22
    25c4:	ba 95       	dec	r27
    25c6:	c9 f7       	brne	.-14     	; 0x25ba <__ultoa_invert+0x86>
    25c8:	00 97       	sbiw	r24, 0x00	; 0
    25ca:	61 05       	cpc	r22, r1
    25cc:	71 05       	cpc	r23, r1
    25ce:	08 95       	ret
    25d0:	9b 01       	movw	r18, r22
    25d2:	ac 01       	movw	r20, r24
    25d4:	0a 2e       	mov	r0, r26
    25d6:	06 94       	lsr	r0
    25d8:	57 95       	ror	r21
    25da:	47 95       	ror	r20
    25dc:	37 95       	ror	r19
    25de:	27 95       	ror	r18
    25e0:	ba 95       	dec	r27
    25e2:	c9 f7       	brne	.-14     	; 0x25d6 <__ultoa_invert+0xa2>
    25e4:	62 0f       	add	r22, r18
    25e6:	73 1f       	adc	r23, r19
    25e8:	84 1f       	adc	r24, r20
    25ea:	95 1f       	adc	r25, r21
    25ec:	a0 1d       	adc	r26, r0
    25ee:	08 95       	ret

000025f0 <calloc>:
    25f0:	0f 93       	push	r16
    25f2:	1f 93       	push	r17
    25f4:	cf 93       	push	r28
    25f6:	df 93       	push	r29
    25f8:	86 9f       	mul	r24, r22
    25fa:	80 01       	movw	r16, r0
    25fc:	87 9f       	mul	r24, r23
    25fe:	10 0d       	add	r17, r0
    2600:	96 9f       	mul	r25, r22
    2602:	10 0d       	add	r17, r0
    2604:	11 24       	eor	r1, r1
    2606:	c8 01       	movw	r24, r16
    2608:	0d d0       	rcall	.+26     	; 0x2624 <malloc>
    260a:	ec 01       	movw	r28, r24
    260c:	00 97       	sbiw	r24, 0x00	; 0
    260e:	21 f0       	breq	.+8      	; 0x2618 <calloc+0x28>
    2610:	a8 01       	movw	r20, r16
    2612:	60 e0       	ldi	r22, 0x00	; 0
    2614:	70 e0       	ldi	r23, 0x00	; 0
    2616:	33 d1       	rcall	.+614    	; 0x287e <memset>
    2618:	ce 01       	movw	r24, r28
    261a:	df 91       	pop	r29
    261c:	cf 91       	pop	r28
    261e:	1f 91       	pop	r17
    2620:	0f 91       	pop	r16
    2622:	08 95       	ret

00002624 <malloc>:
    2624:	cf 93       	push	r28
    2626:	df 93       	push	r29
    2628:	82 30       	cpi	r24, 0x02	; 2
    262a:	91 05       	cpc	r25, r1
    262c:	10 f4       	brcc	.+4      	; 0x2632 <malloc+0xe>
    262e:	82 e0       	ldi	r24, 0x02	; 2
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	e0 91 13 04 	lds	r30, 0x0413	; 0x800413 <__flp>
    2636:	f0 91 14 04 	lds	r31, 0x0414	; 0x800414 <__flp+0x1>
    263a:	20 e0       	ldi	r18, 0x00	; 0
    263c:	30 e0       	ldi	r19, 0x00	; 0
    263e:	c0 e0       	ldi	r28, 0x00	; 0
    2640:	d0 e0       	ldi	r29, 0x00	; 0
    2642:	30 97       	sbiw	r30, 0x00	; 0
    2644:	11 f1       	breq	.+68     	; 0x268a <malloc+0x66>
    2646:	40 81       	ld	r20, Z
    2648:	51 81       	ldd	r21, Z+1	; 0x01
    264a:	48 17       	cp	r20, r24
    264c:	59 07       	cpc	r21, r25
    264e:	c0 f0       	brcs	.+48     	; 0x2680 <malloc+0x5c>
    2650:	48 17       	cp	r20, r24
    2652:	59 07       	cpc	r21, r25
    2654:	61 f4       	brne	.+24     	; 0x266e <malloc+0x4a>
    2656:	82 81       	ldd	r24, Z+2	; 0x02
    2658:	93 81       	ldd	r25, Z+3	; 0x03
    265a:	20 97       	sbiw	r28, 0x00	; 0
    265c:	19 f0       	breq	.+6      	; 0x2664 <malloc+0x40>
    265e:	9b 83       	std	Y+3, r25	; 0x03
    2660:	8a 83       	std	Y+2, r24	; 0x02
    2662:	2b c0       	rjmp	.+86     	; 0x26ba <malloc+0x96>
    2664:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <__flp+0x1>
    2668:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <__flp>
    266c:	26 c0       	rjmp	.+76     	; 0x26ba <malloc+0x96>
    266e:	21 15       	cp	r18, r1
    2670:	31 05       	cpc	r19, r1
    2672:	19 f0       	breq	.+6      	; 0x267a <malloc+0x56>
    2674:	42 17       	cp	r20, r18
    2676:	53 07       	cpc	r21, r19
    2678:	18 f4       	brcc	.+6      	; 0x2680 <malloc+0x5c>
    267a:	9a 01       	movw	r18, r20
    267c:	be 01       	movw	r22, r28
    267e:	df 01       	movw	r26, r30
    2680:	ef 01       	movw	r28, r30
    2682:	02 80       	ldd	r0, Z+2	; 0x02
    2684:	f3 81       	ldd	r31, Z+3	; 0x03
    2686:	e0 2d       	mov	r30, r0
    2688:	dc cf       	rjmp	.-72     	; 0x2642 <malloc+0x1e>
    268a:	21 15       	cp	r18, r1
    268c:	31 05       	cpc	r19, r1
    268e:	09 f1       	breq	.+66     	; 0x26d2 <malloc+0xae>
    2690:	28 1b       	sub	r18, r24
    2692:	39 0b       	sbc	r19, r25
    2694:	24 30       	cpi	r18, 0x04	; 4
    2696:	31 05       	cpc	r19, r1
    2698:	90 f4       	brcc	.+36     	; 0x26be <malloc+0x9a>
    269a:	12 96       	adiw	r26, 0x02	; 2
    269c:	8d 91       	ld	r24, X+
    269e:	9c 91       	ld	r25, X
    26a0:	13 97       	sbiw	r26, 0x03	; 3
    26a2:	61 15       	cp	r22, r1
    26a4:	71 05       	cpc	r23, r1
    26a6:	21 f0       	breq	.+8      	; 0x26b0 <malloc+0x8c>
    26a8:	fb 01       	movw	r30, r22
    26aa:	93 83       	std	Z+3, r25	; 0x03
    26ac:	82 83       	std	Z+2, r24	; 0x02
    26ae:	04 c0       	rjmp	.+8      	; 0x26b8 <malloc+0x94>
    26b0:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <__flp+0x1>
    26b4:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <__flp>
    26b8:	fd 01       	movw	r30, r26
    26ba:	32 96       	adiw	r30, 0x02	; 2
    26bc:	44 c0       	rjmp	.+136    	; 0x2746 <malloc+0x122>
    26be:	fd 01       	movw	r30, r26
    26c0:	e2 0f       	add	r30, r18
    26c2:	f3 1f       	adc	r31, r19
    26c4:	81 93       	st	Z+, r24
    26c6:	91 93       	st	Z+, r25
    26c8:	22 50       	subi	r18, 0x02	; 2
    26ca:	31 09       	sbc	r19, r1
    26cc:	2d 93       	st	X+, r18
    26ce:	3c 93       	st	X, r19
    26d0:	3a c0       	rjmp	.+116    	; 0x2746 <malloc+0x122>
    26d2:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <__brkval>
    26d6:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <__brkval+0x1>
    26da:	23 2b       	or	r18, r19
    26dc:	41 f4       	brne	.+16     	; 0x26ee <malloc+0xca>
    26de:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    26e2:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    26e6:	30 93 12 04 	sts	0x0412, r19	; 0x800412 <__brkval+0x1>
    26ea:	20 93 11 04 	sts	0x0411, r18	; 0x800411 <__brkval>
    26ee:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    26f2:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    26f6:	21 15       	cp	r18, r1
    26f8:	31 05       	cpc	r19, r1
    26fa:	41 f4       	brne	.+16     	; 0x270c <malloc+0xe8>
    26fc:	2d b7       	in	r18, 0x3d	; 61
    26fe:	3e b7       	in	r19, 0x3e	; 62
    2700:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2704:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2708:	24 1b       	sub	r18, r20
    270a:	35 0b       	sbc	r19, r21
    270c:	e0 91 11 04 	lds	r30, 0x0411	; 0x800411 <__brkval>
    2710:	f0 91 12 04 	lds	r31, 0x0412	; 0x800412 <__brkval+0x1>
    2714:	e2 17       	cp	r30, r18
    2716:	f3 07       	cpc	r31, r19
    2718:	a0 f4       	brcc	.+40     	; 0x2742 <malloc+0x11e>
    271a:	2e 1b       	sub	r18, r30
    271c:	3f 0b       	sbc	r19, r31
    271e:	28 17       	cp	r18, r24
    2720:	39 07       	cpc	r19, r25
    2722:	78 f0       	brcs	.+30     	; 0x2742 <malloc+0x11e>
    2724:	ac 01       	movw	r20, r24
    2726:	4e 5f       	subi	r20, 0xFE	; 254
    2728:	5f 4f       	sbci	r21, 0xFF	; 255
    272a:	24 17       	cp	r18, r20
    272c:	35 07       	cpc	r19, r21
    272e:	48 f0       	brcs	.+18     	; 0x2742 <malloc+0x11e>
    2730:	4e 0f       	add	r20, r30
    2732:	5f 1f       	adc	r21, r31
    2734:	50 93 12 04 	sts	0x0412, r21	; 0x800412 <__brkval+0x1>
    2738:	40 93 11 04 	sts	0x0411, r20	; 0x800411 <__brkval>
    273c:	81 93       	st	Z+, r24
    273e:	91 93       	st	Z+, r25
    2740:	02 c0       	rjmp	.+4      	; 0x2746 <malloc+0x122>
    2742:	e0 e0       	ldi	r30, 0x00	; 0
    2744:	f0 e0       	ldi	r31, 0x00	; 0
    2746:	cf 01       	movw	r24, r30
    2748:	df 91       	pop	r29
    274a:	cf 91       	pop	r28
    274c:	08 95       	ret

0000274e <free>:
    274e:	0f 93       	push	r16
    2750:	1f 93       	push	r17
    2752:	cf 93       	push	r28
    2754:	df 93       	push	r29
    2756:	00 97       	sbiw	r24, 0x00	; 0
    2758:	09 f4       	brne	.+2      	; 0x275c <free+0xe>
    275a:	8c c0       	rjmp	.+280    	; 0x2874 <free+0x126>
    275c:	fc 01       	movw	r30, r24
    275e:	32 97       	sbiw	r30, 0x02	; 2
    2760:	13 82       	std	Z+3, r1	; 0x03
    2762:	12 82       	std	Z+2, r1	; 0x02
    2764:	00 91 13 04 	lds	r16, 0x0413	; 0x800413 <__flp>
    2768:	10 91 14 04 	lds	r17, 0x0414	; 0x800414 <__flp+0x1>
    276c:	01 15       	cp	r16, r1
    276e:	11 05       	cpc	r17, r1
    2770:	81 f4       	brne	.+32     	; 0x2792 <free+0x44>
    2772:	20 81       	ld	r18, Z
    2774:	31 81       	ldd	r19, Z+1	; 0x01
    2776:	82 0f       	add	r24, r18
    2778:	93 1f       	adc	r25, r19
    277a:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <__brkval>
    277e:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <__brkval+0x1>
    2782:	28 17       	cp	r18, r24
    2784:	39 07       	cpc	r19, r25
    2786:	79 f5       	brne	.+94     	; 0x27e6 <free+0x98>
    2788:	f0 93 12 04 	sts	0x0412, r31	; 0x800412 <__brkval+0x1>
    278c:	e0 93 11 04 	sts	0x0411, r30	; 0x800411 <__brkval>
    2790:	71 c0       	rjmp	.+226    	; 0x2874 <free+0x126>
    2792:	d8 01       	movw	r26, r16
    2794:	40 e0       	ldi	r20, 0x00	; 0
    2796:	50 e0       	ldi	r21, 0x00	; 0
    2798:	ae 17       	cp	r26, r30
    279a:	bf 07       	cpc	r27, r31
    279c:	50 f4       	brcc	.+20     	; 0x27b2 <free+0x64>
    279e:	12 96       	adiw	r26, 0x02	; 2
    27a0:	2d 91       	ld	r18, X+
    27a2:	3c 91       	ld	r19, X
    27a4:	13 97       	sbiw	r26, 0x03	; 3
    27a6:	ad 01       	movw	r20, r26
    27a8:	21 15       	cp	r18, r1
    27aa:	31 05       	cpc	r19, r1
    27ac:	09 f1       	breq	.+66     	; 0x27f0 <free+0xa2>
    27ae:	d9 01       	movw	r26, r18
    27b0:	f3 cf       	rjmp	.-26     	; 0x2798 <free+0x4a>
    27b2:	9d 01       	movw	r18, r26
    27b4:	da 01       	movw	r26, r20
    27b6:	33 83       	std	Z+3, r19	; 0x03
    27b8:	22 83       	std	Z+2, r18	; 0x02
    27ba:	60 81       	ld	r22, Z
    27bc:	71 81       	ldd	r23, Z+1	; 0x01
    27be:	86 0f       	add	r24, r22
    27c0:	97 1f       	adc	r25, r23
    27c2:	82 17       	cp	r24, r18
    27c4:	93 07       	cpc	r25, r19
    27c6:	69 f4       	brne	.+26     	; 0x27e2 <free+0x94>
    27c8:	ec 01       	movw	r28, r24
    27ca:	28 81       	ld	r18, Y
    27cc:	39 81       	ldd	r19, Y+1	; 0x01
    27ce:	26 0f       	add	r18, r22
    27d0:	37 1f       	adc	r19, r23
    27d2:	2e 5f       	subi	r18, 0xFE	; 254
    27d4:	3f 4f       	sbci	r19, 0xFF	; 255
    27d6:	31 83       	std	Z+1, r19	; 0x01
    27d8:	20 83       	st	Z, r18
    27da:	8a 81       	ldd	r24, Y+2	; 0x02
    27dc:	9b 81       	ldd	r25, Y+3	; 0x03
    27de:	93 83       	std	Z+3, r25	; 0x03
    27e0:	82 83       	std	Z+2, r24	; 0x02
    27e2:	45 2b       	or	r20, r21
    27e4:	29 f4       	brne	.+10     	; 0x27f0 <free+0xa2>
    27e6:	f0 93 14 04 	sts	0x0414, r31	; 0x800414 <__flp+0x1>
    27ea:	e0 93 13 04 	sts	0x0413, r30	; 0x800413 <__flp>
    27ee:	42 c0       	rjmp	.+132    	; 0x2874 <free+0x126>
    27f0:	13 96       	adiw	r26, 0x03	; 3
    27f2:	fc 93       	st	X, r31
    27f4:	ee 93       	st	-X, r30
    27f6:	12 97       	sbiw	r26, 0x02	; 2
    27f8:	ed 01       	movw	r28, r26
    27fa:	49 91       	ld	r20, Y+
    27fc:	59 91       	ld	r21, Y+
    27fe:	9e 01       	movw	r18, r28
    2800:	24 0f       	add	r18, r20
    2802:	35 1f       	adc	r19, r21
    2804:	e2 17       	cp	r30, r18
    2806:	f3 07       	cpc	r31, r19
    2808:	71 f4       	brne	.+28     	; 0x2826 <free+0xd8>
    280a:	80 81       	ld	r24, Z
    280c:	91 81       	ldd	r25, Z+1	; 0x01
    280e:	84 0f       	add	r24, r20
    2810:	95 1f       	adc	r25, r21
    2812:	02 96       	adiw	r24, 0x02	; 2
    2814:	11 96       	adiw	r26, 0x01	; 1
    2816:	9c 93       	st	X, r25
    2818:	8e 93       	st	-X, r24
    281a:	82 81       	ldd	r24, Z+2	; 0x02
    281c:	93 81       	ldd	r25, Z+3	; 0x03
    281e:	13 96       	adiw	r26, 0x03	; 3
    2820:	9c 93       	st	X, r25
    2822:	8e 93       	st	-X, r24
    2824:	12 97       	sbiw	r26, 0x02	; 2
    2826:	e0 e0       	ldi	r30, 0x00	; 0
    2828:	f0 e0       	ldi	r31, 0x00	; 0
    282a:	d8 01       	movw	r26, r16
    282c:	12 96       	adiw	r26, 0x02	; 2
    282e:	8d 91       	ld	r24, X+
    2830:	9c 91       	ld	r25, X
    2832:	13 97       	sbiw	r26, 0x03	; 3
    2834:	00 97       	sbiw	r24, 0x00	; 0
    2836:	19 f0       	breq	.+6      	; 0x283e <free+0xf0>
    2838:	f8 01       	movw	r30, r16
    283a:	8c 01       	movw	r16, r24
    283c:	f6 cf       	rjmp	.-20     	; 0x282a <free+0xdc>
    283e:	8d 91       	ld	r24, X+
    2840:	9c 91       	ld	r25, X
    2842:	98 01       	movw	r18, r16
    2844:	2e 5f       	subi	r18, 0xFE	; 254
    2846:	3f 4f       	sbci	r19, 0xFF	; 255
    2848:	82 0f       	add	r24, r18
    284a:	93 1f       	adc	r25, r19
    284c:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <__brkval>
    2850:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <__brkval+0x1>
    2854:	28 17       	cp	r18, r24
    2856:	39 07       	cpc	r19, r25
    2858:	69 f4       	brne	.+26     	; 0x2874 <free+0x126>
    285a:	30 97       	sbiw	r30, 0x00	; 0
    285c:	29 f4       	brne	.+10     	; 0x2868 <free+0x11a>
    285e:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <__flp+0x1>
    2862:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <__flp>
    2866:	02 c0       	rjmp	.+4      	; 0x286c <free+0x11e>
    2868:	13 82       	std	Z+3, r1	; 0x03
    286a:	12 82       	std	Z+2, r1	; 0x02
    286c:	10 93 12 04 	sts	0x0412, r17	; 0x800412 <__brkval+0x1>
    2870:	00 93 11 04 	sts	0x0411, r16	; 0x800411 <__brkval>
    2874:	df 91       	pop	r29
    2876:	cf 91       	pop	r28
    2878:	1f 91       	pop	r17
    287a:	0f 91       	pop	r16
    287c:	08 95       	ret

0000287e <memset>:
    287e:	dc 01       	movw	r26, r24
    2880:	01 c0       	rjmp	.+2      	; 0x2884 <memset+0x6>
    2882:	6d 93       	st	X+, r22
    2884:	41 50       	subi	r20, 0x01	; 1
    2886:	50 40       	sbci	r21, 0x00	; 0
    2888:	e0 f7       	brcc	.-8      	; 0x2882 <memset+0x4>
    288a:	08 95       	ret

0000288c <_exit>:
    288c:	f8 94       	cli

0000288e <__stop_program>:
    288e:	ff cf       	rjmp	.-2      	; 0x288e <__stop_program>
