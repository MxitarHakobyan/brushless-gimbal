
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001a4  00800200  000026f0  00002784  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000026f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000053  008003a4  008003a4  00002928  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002928  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002984  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  000029c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002de0  00000000  00000000  00002c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000171a  00000000  00000000  000059ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001546  00000000  00000000  00007106  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006f0  00000000  00000000  0000864c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bb7  00000000  00000000  00008d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ea7  00000000  00000000  000098f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  0000b79a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	36 c1       	rjmp	.+620    	; 0x26e <__ctors_end>
       2:	00 00       	nop
       4:	54 c1       	rjmp	.+680    	; 0x2ae <__bad_interrupt>
       6:	00 00       	nop
       8:	52 c1       	rjmp	.+676    	; 0x2ae <__bad_interrupt>
       a:	00 00       	nop
       c:	50 c1       	rjmp	.+672    	; 0x2ae <__bad_interrupt>
       e:	00 00       	nop
      10:	4e c1       	rjmp	.+668    	; 0x2ae <__bad_interrupt>
      12:	00 00       	nop
      14:	4c c1       	rjmp	.+664    	; 0x2ae <__bad_interrupt>
      16:	00 00       	nop
      18:	4a c1       	rjmp	.+660    	; 0x2ae <__bad_interrupt>
      1a:	00 00       	nop
      1c:	48 c1       	rjmp	.+656    	; 0x2ae <__bad_interrupt>
      1e:	00 00       	nop
      20:	46 c1       	rjmp	.+652    	; 0x2ae <__bad_interrupt>
      22:	00 00       	nop
      24:	44 c1       	rjmp	.+648    	; 0x2ae <__bad_interrupt>
      26:	00 00       	nop
      28:	42 c1       	rjmp	.+644    	; 0x2ae <__bad_interrupt>
      2a:	00 00       	nop
      2c:	40 c1       	rjmp	.+640    	; 0x2ae <__bad_interrupt>
      2e:	00 00       	nop
      30:	3e c1       	rjmp	.+636    	; 0x2ae <__bad_interrupt>
      32:	00 00       	nop
      34:	3c c1       	rjmp	.+632    	; 0x2ae <__bad_interrupt>
      36:	00 00       	nop
      38:	3a c1       	rjmp	.+628    	; 0x2ae <__bad_interrupt>
      3a:	00 00       	nop
      3c:	38 c1       	rjmp	.+624    	; 0x2ae <__bad_interrupt>
      3e:	00 00       	nop
      40:	36 c1       	rjmp	.+620    	; 0x2ae <__bad_interrupt>
      42:	00 00       	nop
      44:	34 c1       	rjmp	.+616    	; 0x2ae <__bad_interrupt>
      46:	00 00       	nop
      48:	32 c1       	rjmp	.+612    	; 0x2ae <__bad_interrupt>
      4a:	00 00       	nop
      4c:	30 c1       	rjmp	.+608    	; 0x2ae <__bad_interrupt>
      4e:	00 00       	nop
      50:	2e c1       	rjmp	.+604    	; 0x2ae <__bad_interrupt>
      52:	00 00       	nop
      54:	2c c1       	rjmp	.+600    	; 0x2ae <__bad_interrupt>
      56:	00 00       	nop
      58:	2a c1       	rjmp	.+596    	; 0x2ae <__bad_interrupt>
      5a:	00 00       	nop
      5c:	1f c7       	rjmp	.+3646   	; 0xe9c <__vector_23>
      5e:	00 00       	nop
      60:	26 c1       	rjmp	.+588    	; 0x2ae <__bad_interrupt>
      62:	00 00       	nop
      64:	24 c1       	rjmp	.+584    	; 0x2ae <__bad_interrupt>
      66:	00 00       	nop
      68:	22 c1       	rjmp	.+580    	; 0x2ae <__bad_interrupt>
      6a:	00 00       	nop
      6c:	20 c1       	rjmp	.+576    	; 0x2ae <__bad_interrupt>
      6e:	00 00       	nop
      70:	1e c1       	rjmp	.+572    	; 0x2ae <__bad_interrupt>
      72:	00 00       	nop
      74:	1c c1       	rjmp	.+568    	; 0x2ae <__bad_interrupt>
      76:	00 00       	nop
      78:	1a c1       	rjmp	.+564    	; 0x2ae <__bad_interrupt>
      7a:	00 00       	nop
      7c:	18 c1       	rjmp	.+560    	; 0x2ae <__bad_interrupt>
      7e:	00 00       	nop
      80:	16 c1       	rjmp	.+556    	; 0x2ae <__bad_interrupt>
      82:	00 00       	nop
      84:	14 c1       	rjmp	.+552    	; 0x2ae <__bad_interrupt>
      86:	00 00       	nop
      88:	12 c1       	rjmp	.+548    	; 0x2ae <__bad_interrupt>
      8a:	00 00       	nop
      8c:	10 c1       	rjmp	.+544    	; 0x2ae <__bad_interrupt>
      8e:	00 00       	nop
      90:	0e c1       	rjmp	.+540    	; 0x2ae <__bad_interrupt>
      92:	00 00       	nop
      94:	0c c1       	rjmp	.+536    	; 0x2ae <__bad_interrupt>
      96:	00 00       	nop
      98:	0a c1       	rjmp	.+532    	; 0x2ae <__bad_interrupt>
      9a:	00 00       	nop
      9c:	08 c1       	rjmp	.+528    	; 0x2ae <__bad_interrupt>
      9e:	00 00       	nop
      a0:	06 c1       	rjmp	.+524    	; 0x2ae <__bad_interrupt>
      a2:	00 00       	nop
      a4:	04 c1       	rjmp	.+520    	; 0x2ae <__bad_interrupt>
      a6:	00 00       	nop
      a8:	02 c1       	rjmp	.+516    	; 0x2ae <__bad_interrupt>
      aa:	00 00       	nop
      ac:	00 c1       	rjmp	.+512    	; 0x2ae <__bad_interrupt>
      ae:	00 00       	nop
      b0:	fe c0       	rjmp	.+508    	; 0x2ae <__bad_interrupt>
      b2:	00 00       	nop
      b4:	fc c0       	rjmp	.+504    	; 0x2ae <__bad_interrupt>
      b6:	00 00       	nop
      b8:	fa c0       	rjmp	.+500    	; 0x2ae <__bad_interrupt>
      ba:	00 00       	nop
      bc:	39 c7       	rjmp	.+3698   	; 0xf30 <__vector_47>
      be:	00 00       	nop
      c0:	f6 c0       	rjmp	.+492    	; 0x2ae <__bad_interrupt>
      c2:	00 00       	nop
      c4:	f4 c0       	rjmp	.+488    	; 0x2ae <__bad_interrupt>
      c6:	00 00       	nop
      c8:	f2 c0       	rjmp	.+484    	; 0x2ae <__bad_interrupt>
      ca:	00 00       	nop
      cc:	f0 c0       	rjmp	.+480    	; 0x2ae <__bad_interrupt>
      ce:	00 00       	nop
      d0:	ee c0       	rjmp	.+476    	; 0x2ae <__bad_interrupt>
      d2:	00 00       	nop
      d4:	ec c0       	rjmp	.+472    	; 0x2ae <__bad_interrupt>
      d6:	00 00       	nop
      d8:	ea c0       	rjmp	.+468    	; 0x2ae <__bad_interrupt>
      da:	00 00       	nop
      dc:	e8 c0       	rjmp	.+464    	; 0x2ae <__bad_interrupt>
      de:	00 00       	nop
      e0:	e6 c0       	rjmp	.+460    	; 0x2ae <__bad_interrupt>
      e2:	00 00       	nop
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	08 4a       	sbci	r16, 0xA8	; 168
      fa:	d7 3b       	cpi	r29, 0xB7	; 183
      fc:	3b ce       	rjmp	.-906    	; 0xfffffd74 <__eeprom_end+0xff7efd74>
      fe:	01 6e       	ori	r16, 0xE1	; 225
     100:	84 bc       	out	0x24, r8	; 36
     102:	bf fd       	.word	0xfdbf	; ????
     104:	c1 2f       	mov	r28, r17
     106:	3d 6c       	ori	r19, 0xCD	; 205
     108:	74 31       	cpi	r23, 0x14	; 20
     10a:	9a bd       	out	0x2a, r25	; 42
     10c:	56 83       	std	Z+6, r21	; 0x06
     10e:	3d da       	rcall	.-2950   	; 0xfffff58a <__eeprom_end+0xff7ef58a>
     110:	3d 00       	.word	0x003d	; ????
     112:	c7 7f       	andi	r28, 0xF7	; 247
     114:	11 be       	out	0x31, r1	; 49
     116:	d9 e4       	ldi	r29, 0x49	; 73
     118:	bb 4c       	sbci	r27, 0xCB	; 203
     11a:	3e 91       	ld	r19, -X
     11c:	6b aa       	std	Y+51, r6	; 0x33
     11e:	aa be       	out	0x3a, r10	; 58
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	3f 07       	cpc	r19, r31
     126:	2c 7a       	andi	r18, 0xAC	; 172
     128:	a5 ba       	out	0x15, r10	; 21
     12a:	6c c5       	rjmp	.+2776   	; 0xc04 <main+0x482>
     12c:	90 da       	rcall	.-2784   	; 0xfffff64e <__eeprom_end+0xff7ef64e>
     12e:	3b 93       	.word	0x933b	; ????
     130:	65 fc       	sbrc	r6, 5
     132:	8b bc       	out	0x2b, r8	; 43
     134:	53 f8       	bld	r5, 3
     136:	10 fd       	sbrc	r17, 0
     138:	3c 56       	subi	r19, 0x6C	; 108
     13a:	92 83       	std	Z+2, r25	; 0x02
     13c:	4d bd       	out	0x2d, r20	; 45
     13e:	87 9d       	mul	r24, r7
     140:	3a b6       	in	r3, 0x3a	; 58
     142:	3d cb       	rjmp	.-2438   	; 0xfffff7be <__eeprom_end+0xff7ef7be>
     144:	c9 bf       	out	0x39, r28	; 57
     146:	5b be       	out	0x3b, r5	; 59
     148:	73 da       	rcall	.-2842   	; 0xfffff630 <__eeprom_end+0xff7ef630>
     14a:	0f c9       	rjmp	.-3554   	; 0xfffff36a <__eeprom_end+0xff7ef36a>
     14c:	3f 05       	cpc	r19, r15
     14e:	a8 4c       	sbci	r26, 0xC8	; 200
     150:	cd b2       	in	r12, 0x1d	; 29
     152:	d4 4e       	sbci	r29, 0xE4	; 228
     154:	b9 38       	cpi	r27, 0x89	; 137
     156:	36 a9       	ldd	r19, Z+54	; 0x36
     158:	02 0c       	add	r0, r2
     15a:	50 b9       	out	0x00, r21	; 0
     15c:	91 86       	std	Z+9, r9	; 0x09
     15e:	88 08       	sbc	r8, r8
     160:	3c a6       	std	Y+44, r3	; 0x2c
     162:	aa aa       	std	Y+50, r10	; 0x32
     164:	2a be       	out	0x3a, r2	; 58
     166:	00 00       	nop
     168:	00 80       	ld	r0, Z
     16a:	3f 00       	.word	0x003f	; ????

0000016c <__trampolines_end>:
     16c:	6e 61       	ori	r22, 0x1E	; 30
     16e:	6e 00       	.word	0x006e	; ????

00000170 <__c.2332>:
     170:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     180:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     190:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     1a0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     1b0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1c0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1d0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1e0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     1f0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     200:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     210:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     220:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     230:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     240:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     250:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     260:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000026e <__ctors_end>:
     26e:	11 24       	eor	r1, r1
     270:	1f be       	out	0x3f, r1	; 63
     272:	cf ef       	ldi	r28, 0xFF	; 255
     274:	d1 e2       	ldi	r29, 0x21	; 33
     276:	de bf       	out	0x3e, r29	; 62
     278:	cd bf       	out	0x3d, r28	; 61
     27a:	00 e0       	ldi	r16, 0x00	; 0
     27c:	0c bf       	out	0x3c, r16	; 60

0000027e <__do_copy_data>:
     27e:	13 e0       	ldi	r17, 0x03	; 3
     280:	a0 e0       	ldi	r26, 0x00	; 0
     282:	b2 e0       	ldi	r27, 0x02	; 2
     284:	e0 ef       	ldi	r30, 0xF0	; 240
     286:	f6 e2       	ldi	r31, 0x26	; 38
     288:	00 e0       	ldi	r16, 0x00	; 0
     28a:	0b bf       	out	0x3b, r16	; 59
     28c:	02 c0       	rjmp	.+4      	; 0x292 <__do_copy_data+0x14>
     28e:	07 90       	elpm	r0, Z+
     290:	0d 92       	st	X+, r0
     292:	a4 3a       	cpi	r26, 0xA4	; 164
     294:	b1 07       	cpc	r27, r17
     296:	d9 f7       	brne	.-10     	; 0x28e <__do_copy_data+0x10>

00000298 <__do_clear_bss>:
     298:	23 e0       	ldi	r18, 0x03	; 3
     29a:	a4 ea       	ldi	r26, 0xA4	; 164
     29c:	b3 e0       	ldi	r27, 0x03	; 3
     29e:	01 c0       	rjmp	.+2      	; 0x2a2 <.do_clear_bss_start>

000002a0 <.do_clear_bss_loop>:
     2a0:	1d 92       	st	X+, r1

000002a2 <.do_clear_bss_start>:
     2a2:	a7 3f       	cpi	r26, 0xF7	; 247
     2a4:	b2 07       	cpc	r27, r18
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <.do_clear_bss_loop>
     2a8:	6c d2       	rcall	.+1240   	; 0x782 <main>
     2aa:	0c 94 76 13 	jmp	0x26ec	; 0x26ec <_exit>

000002ae <__bad_interrupt>:
     2ae:	a8 ce       	rjmp	.-688    	; 0x0 <__vectors>

000002b0 <init_gpio>:
{
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     2b0:	e1 e0       	ldi	r30, 0x01	; 1
     2b2:	f1 e0       	ldi	r31, 0x01	; 1
     2b4:	80 81       	ld	r24, Z
     2b6:	88 60       	ori	r24, 0x08	; 8
     2b8:	80 83       	st	Z, r24
     2ba:	80 81       	ld	r24, Z
     2bc:	80 61       	ori	r24, 0x10	; 16
     2be:	80 83       	st	Z, r24
     2c0:	80 81       	ld	r24, Z
     2c2:	80 62       	ori	r24, 0x20	; 32
     2c4:	80 83       	st	Z, r24
     2c6:	08 95       	ret

000002c8 <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     2c8:	e0 91 a4 03 	lds	r30, 0x03A4	; 0x8003a4 <__data_end>
     2cc:	f0 91 a5 03 	lds	r31, 0x03A5	; 0x8003a5 <__data_end+0x1>
     2d0:	ea 5f       	subi	r30, 0xFA	; 250
     2d2:	fd 4f       	sbci	r31, 0xFD	; 253
     2d4:	80 81       	ld	r24, Z
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2dc:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     2e0:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step>
     2e4:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step+0x1>
     2e8:	ea 5f       	subi	r30, 0xFA	; 250
     2ea:	fd 4f       	sbci	r31, 0xFD	; 253
     2ec:	80 81       	ld	r24, Z
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     2f4:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     2f8:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step>
     2fc:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step+0x1>
     300:	ea 5f       	subi	r30, 0xFA	; 250
     302:	fd 4f       	sbci	r31, 0xFD	; 253
     304:	80 81       	ld	r24, Z
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     30c:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     310:	60 91 b3 03 	lds	r22, 0x03B3	; 0x8003b3 <incr>
     314:	70 91 b4 03 	lds	r23, 0x03B4	; 0x8003b4 <incr+0x1>
     318:	40 91 a4 03 	lds	r20, 0x03A4	; 0x8003a4 <__data_end>
     31c:	50 91 a5 03 	lds	r21, 0x03A5	; 0x8003a5 <__data_end+0x1>
     320:	46 0f       	add	r20, r22
     322:	57 1f       	adc	r21, r23
     324:	50 93 a5 03 	sts	0x03A5, r21	; 0x8003a5 <__data_end+0x1>
     328:	40 93 a4 03 	sts	0x03A4, r20	; 0x8003a4 <__data_end>
	V_step=V_step+incr;
     32c:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     330:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     334:	26 0f       	add	r18, r22
     336:	37 1f       	adc	r19, r23
     338:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     33c:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	W_step=W_step+incr;
     340:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     344:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     348:	86 0f       	add	r24, r22
     34a:	97 1f       	adc	r25, r23
     34c:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     350:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	if(U_step > SINE_TABLE_SZ)
     354:	49 36       	cpi	r20, 0x69	; 105
     356:	61 e0       	ldi	r22, 0x01	; 1
     358:	56 07       	cpc	r21, r22
     35a:	2c f0       	brlt	.+10     	; 0x366 <PWM_update+0x9e>
	U_step = 0;
     35c:	10 92 a5 03 	sts	0x03A5, r1	; 0x8003a5 <__data_end+0x1>
     360:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <__data_end>
     364:	08 c0       	rjmp	.+16     	; 0x376 <PWM_update+0xae>
	if(U_step < 0)
     366:	55 23       	and	r21, r21
     368:	34 f4       	brge	.+12     	; 0x376 <PWM_update+0xae>
	U_step = SINE_TABLE_SZ;
     36a:	48 e6       	ldi	r20, 0x68	; 104
     36c:	51 e0       	ldi	r21, 0x01	; 1
     36e:	50 93 a5 03 	sts	0x03A5, r21	; 0x8003a5 <__data_end+0x1>
     372:	40 93 a4 03 	sts	0x03A4, r20	; 0x8003a4 <__data_end>
	
	if(V_step > SINE_TABLE_SZ)
     376:	29 36       	cpi	r18, 0x69	; 105
     378:	41 e0       	ldi	r20, 0x01	; 1
     37a:	34 07       	cpc	r19, r20
     37c:	2c f0       	brlt	.+10     	; 0x388 <PWM_update+0xc0>
	V_step = 0;
     37e:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step+0x1>
     382:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step>
     386:	08 c0       	rjmp	.+16     	; 0x398 <PWM_update+0xd0>
	if(V_step < 0)
     388:	33 23       	and	r19, r19
     38a:	34 f4       	brge	.+12     	; 0x398 <PWM_update+0xd0>
	V_step = SINE_TABLE_SZ;
     38c:	28 e6       	ldi	r18, 0x68	; 104
     38e:	31 e0       	ldi	r19, 0x01	; 1
     390:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     394:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     398:	89 36       	cpi	r24, 0x69	; 105
     39a:	61 e0       	ldi	r22, 0x01	; 1
     39c:	96 07       	cpc	r25, r22
     39e:	2c f0       	brlt	.+10     	; 0x3aa <PWM_update+0xe2>
	W_step = 0;
     3a0:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step+0x1>
     3a4:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step>
     3a8:	08 c0       	rjmp	.+16     	; 0x3ba <PWM_update+0xf2>
	if(W_step < 0)
     3aa:	99 23       	and	r25, r25
     3ac:	34 f4       	brge	.+12     	; 0x3ba <PWM_update+0xf2>
	W_step = SINE_TABLE_SZ;
     3ae:	88 e6       	ldi	r24, 0x68	; 104
     3b0:	91 e0       	ldi	r25, 0x01	; 1
     3b2:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     3b6:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     3ba:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <pwm_delay>
     3be:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <pwm_delay+0x1>
     3c2:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     3c6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     3ca:	08 95       	ret

000003cc <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     3cc:	4f 92       	push	r4
     3ce:	5f 92       	push	r5
     3d0:	6f 92       	push	r6
     3d2:	7f 92       	push	r7
     3d4:	8f 92       	push	r8
     3d6:	9f 92       	push	r9
     3d8:	af 92       	push	r10
     3da:	bf 92       	push	r11
     3dc:	cf 92       	push	r12
     3de:	df 92       	push	r13
     3e0:	ef 92       	push	r14
     3e2:	ff 92       	push	r15
     3e4:	0f 93       	push	r16
     3e6:	1f 93       	push	r17
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	cd b7       	in	r28, 0x3d	; 61
     3ee:	de b7       	in	r29, 0x3e	; 62
     3f0:	6c 97       	sbiw	r28, 0x1c	; 28
     3f2:	0f b6       	in	r0, 0x3f	; 63
     3f4:	f8 94       	cli
     3f6:	de bf       	out	0x3e, r29	; 62
     3f8:	0f be       	out	0x3f, r0	; 63
     3fa:	cd bf       	out	0x3d, r28	; 61
     3fc:	69 8b       	std	Y+17, r22	; 0x11
     3fe:	7a 8b       	std	Y+18, r23	; 0x12
     400:	8b 8b       	std	Y+19, r24	; 0x13
     402:	9c 8b       	std	Y+20, r25	; 0x14
     404:	ca 01       	movw	r24, r20
     406:	b9 01       	movw	r22, r18
     408:	e9 82       	std	Y+1, r14	; 0x01
     40a:	fa 82       	std	Y+2, r15	; 0x02
     40c:	0b 83       	std	Y+3, r16	; 0x03
     40e:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     410:	c0 90 c1 03 	lds	r12, 0x03C1	; 0x8003c1 <bias>
     414:	d0 90 c2 03 	lds	r13, 0x03C2	; 0x8003c2 <bias+0x1>
     418:	e0 90 c3 03 	lds	r14, 0x03C3	; 0x8003c3 <bias+0x2>
     41c:	f0 90 c4 03 	lds	r15, 0x03C4	; 0x8003c4 <bias+0x3>
     420:	a7 01       	movw	r20, r14
     422:	96 01       	movw	r18, r12
     424:	d4 d6       	rcall	.+3496   	; 0x11ce <__subsf3>
     426:	60 93 b9 03 	sts	0x03B9, r22	; 0x8003b9 <rate>
     42a:	70 93 ba 03 	sts	0x03BA, r23	; 0x8003ba <rate+0x1>
     42e:	80 93 bb 03 	sts	0x03BB, r24	; 0x8003bb <rate+0x2>
     432:	90 93 bc 03 	sts	0x03BC, r25	; 0x8003bc <rate+0x3>
	angle += dt * rate;
     436:	29 81       	ldd	r18, Y+1	; 0x01
     438:	3a 81       	ldd	r19, Y+2	; 0x02
     43a:	4b 81       	ldd	r20, Y+3	; 0x03
     43c:	5c 81       	ldd	r21, Y+4	; 0x04
     43e:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     442:	20 91 c9 03 	lds	r18, 0x03C9	; 0x8003c9 <angle>
     446:	30 91 ca 03 	lds	r19, 0x03CA	; 0x8003ca <angle+0x1>
     44a:	40 91 cb 03 	lds	r20, 0x03CB	; 0x8003cb <angle+0x2>
     44e:	50 91 cc 03 	lds	r21, 0x03CC	; 0x8003cc <angle+0x3>
     452:	be d6       	rcall	.+3452   	; 0x11d0 <__addsf3>
     454:	6d 8b       	std	Y+21, r22	; 0x15
     456:	7e 8b       	std	Y+22, r23	; 0x16
     458:	8f 8b       	std	Y+23, r24	; 0x17
     45a:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     45c:	80 90 d9 03 	lds	r8, 0x03D9	; 0x8003d9 <P+0xc>
     460:	90 90 da 03 	lds	r9, 0x03DA	; 0x8003da <P+0xd>
     464:	a0 90 db 03 	lds	r10, 0x03DB	; 0x8003db <P+0xe>
     468:	b0 90 dc 03 	lds	r11, 0x03DC	; 0x8003dc <P+0xf>
     46c:	a5 01       	movw	r20, r10
     46e:	94 01       	movw	r18, r8
     470:	69 81       	ldd	r22, Y+1	; 0x01
     472:	7a 81       	ldd	r23, Y+2	; 0x02
     474:	8b 81       	ldd	r24, Y+3	; 0x03
     476:	9c 81       	ldd	r25, Y+4	; 0x04
     478:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     47c:	6d 83       	std	Y+5, r22	; 0x05
     47e:	7e 83       	std	Y+6, r23	; 0x06
     480:	8f 83       	std	Y+7, r24	; 0x07
     482:	98 87       	std	Y+8, r25	; 0x08
     484:	40 90 d1 03 	lds	r4, 0x03D1	; 0x8003d1 <P+0x4>
     488:	50 90 d2 03 	lds	r5, 0x03D2	; 0x8003d2 <P+0x5>
     48c:	60 90 d3 03 	lds	r6, 0x03D3	; 0x8003d3 <P+0x6>
     490:	70 90 d4 03 	lds	r7, 0x03D4	; 0x8003d4 <P+0x7>
     494:	80 91 d5 03 	lds	r24, 0x03D5	; 0x8003d5 <P+0x8>
     498:	90 91 d6 03 	lds	r25, 0x03D6	; 0x8003d6 <P+0x9>
     49c:	a0 91 d7 03 	lds	r26, 0x03D7	; 0x8003d7 <P+0xa>
     4a0:	b0 91 d8 03 	lds	r27, 0x03D8	; 0x8003d8 <P+0xb>
     4a4:	8d 87       	std	Y+13, r24	; 0x0d
     4a6:	9e 87       	std	Y+14, r25	; 0x0e
     4a8:	af 87       	std	Y+15, r26	; 0x0f
     4aa:	b8 8b       	std	Y+16, r27	; 0x10
     4ac:	a3 01       	movw	r20, r6
     4ae:	92 01       	movw	r18, r4
     4b0:	6d 81       	ldd	r22, Y+5	; 0x05
     4b2:	7e 81       	ldd	r23, Y+6	; 0x06
     4b4:	8f 81       	ldd	r24, Y+7	; 0x07
     4b6:	98 85       	ldd	r25, Y+8	; 0x08
     4b8:	8a d6       	rcall	.+3348   	; 0x11ce <__subsf3>
     4ba:	2d 85       	ldd	r18, Y+13	; 0x0d
     4bc:	3e 85       	ldd	r19, Y+14	; 0x0e
     4be:	4f 85       	ldd	r20, Y+15	; 0x0f
     4c0:	58 89       	ldd	r21, Y+16	; 0x10
     4c2:	85 d6       	rcall	.+3338   	; 0x11ce <__subsf3>
     4c4:	20 91 bd 03 	lds	r18, 0x03BD	; 0x8003bd <Q_angle>
     4c8:	30 91 be 03 	lds	r19, 0x03BE	; 0x8003be <Q_angle+0x1>
     4cc:	40 91 bf 03 	lds	r20, 0x03BF	; 0x8003bf <Q_angle+0x2>
     4d0:	50 91 c0 03 	lds	r21, 0x03C0	; 0x8003c0 <Q_angle+0x3>
     4d4:	7d d6       	rcall	.+3322   	; 0x11d0 <__addsf3>
     4d6:	29 81       	ldd	r18, Y+1	; 0x01
     4d8:	3a 81       	ldd	r19, Y+2	; 0x02
     4da:	4b 81       	ldd	r20, Y+3	; 0x03
     4dc:	5c 81       	ldd	r21, Y+4	; 0x04
     4de:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     4e2:	ad ec       	ldi	r26, 0xCD	; 205
     4e4:	b3 e0       	ldi	r27, 0x03	; 3
     4e6:	2d 91       	ld	r18, X+
     4e8:	3d 91       	ld	r19, X+
     4ea:	4d 91       	ld	r20, X+
     4ec:	5c 91       	ld	r21, X
     4ee:	70 d6       	rcall	.+3296   	; 0x11d0 <__addsf3>
     4f0:	69 87       	std	Y+9, r22	; 0x09
     4f2:	7a 87       	std	Y+10, r23	; 0x0a
     4f4:	8b 87       	std	Y+11, r24	; 0x0b
	P[0][1] -= dt * P[1][1];
     4f6:	9c 87       	std	Y+12, r25	; 0x0c
     4f8:	2d 81       	ldd	r18, Y+5	; 0x05
     4fa:	3e 81       	ldd	r19, Y+6	; 0x06
     4fc:	4f 81       	ldd	r20, Y+7	; 0x07
     4fe:	58 85       	ldd	r21, Y+8	; 0x08
     500:	c3 01       	movw	r24, r6
     502:	b2 01       	movw	r22, r4
     504:	64 d6       	rcall	.+3272   	; 0x11ce <__subsf3>
     506:	2b 01       	movw	r4, r22
	P[1][0] -= dt * P[1][1];
     508:	3c 01       	movw	r6, r24
     50a:	2d 81       	ldd	r18, Y+5	; 0x05
     50c:	3e 81       	ldd	r19, Y+6	; 0x06
     50e:	4f 81       	ldd	r20, Y+7	; 0x07
     510:	58 85       	ldd	r21, Y+8	; 0x08
     512:	6d 85       	ldd	r22, Y+13	; 0x0d
     514:	7e 85       	ldd	r23, Y+14	; 0x0e
     516:	8f 85       	ldd	r24, Y+15	; 0x0f
     518:	98 89       	ldd	r25, Y+16	; 0x10
     51a:	59 d6       	rcall	.+3250   	; 0x11ce <__subsf3>
     51c:	6d 87       	std	Y+13, r22	; 0x0d
     51e:	7e 87       	std	Y+14, r23	; 0x0e
     520:	8f 87       	std	Y+15, r24	; 0x0f
	P[1][1] += Q_bias * dt;
     522:	98 8b       	std	Y+16, r25	; 0x10
     524:	20 91 b5 03 	lds	r18, 0x03B5	; 0x8003b5 <Q_bias>
     528:	30 91 b6 03 	lds	r19, 0x03B6	; 0x8003b6 <Q_bias+0x1>
     52c:	40 91 b7 03 	lds	r20, 0x03B7	; 0x8003b7 <Q_bias+0x2>
     530:	50 91 b8 03 	lds	r21, 0x03B8	; 0x8003b8 <Q_bias+0x3>
     534:	69 81       	ldd	r22, Y+1	; 0x01
     536:	7a 81       	ldd	r23, Y+2	; 0x02
     538:	8b 81       	ldd	r24, Y+3	; 0x03
     53a:	9c 81       	ldd	r25, Y+4	; 0x04
     53c:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     540:	a5 01       	movw	r20, r10
     542:	94 01       	movw	r18, r8
     544:	45 d6       	rcall	.+3210   	; 0x11d0 <__addsf3>
     546:	69 8f       	std	Y+25, r22	; 0x19
     548:	7a 8f       	std	Y+26, r23	; 0x1a
     54a:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     54c:	9c 8f       	std	Y+28, r25	; 0x1c
     54e:	20 91 c5 03 	lds	r18, 0x03C5	; 0x8003c5 <R_measure>
     552:	30 91 c6 03 	lds	r19, 0x03C6	; 0x8003c6 <R_measure+0x1>
     556:	40 91 c7 03 	lds	r20, 0x03C7	; 0x8003c7 <R_measure+0x2>
     55a:	50 91 c8 03 	lds	r21, 0x03C8	; 0x8003c8 <R_measure+0x3>
     55e:	69 85       	ldd	r22, Y+9	; 0x09
     560:	7a 85       	ldd	r23, Y+10	; 0x0a
     562:	8b 85       	ldd	r24, Y+11	; 0x0b
     564:	9c 85       	ldd	r25, Y+12	; 0x0c
     566:	34 d6       	rcall	.+3176   	; 0x11d0 <__addsf3>
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     568:	4b 01       	movw	r8, r22
     56a:	5c 01       	movw	r10, r24
     56c:	9b 01       	movw	r18, r22
     56e:	ac 01       	movw	r20, r24
     570:	69 85       	ldd	r22, Y+9	; 0x09
     572:	7a 85       	ldd	r23, Y+10	; 0x0a
     574:	8b 85       	ldd	r24, Y+11	; 0x0b
     576:	9c 85       	ldd	r25, Y+12	; 0x0c
     578:	0c d7       	rcall	.+3608   	; 0x1392 <__divsf3>
     57a:	69 83       	std	Y+1, r22	; 0x01
     57c:	7a 83       	std	Y+2, r23	; 0x02
	K[1] = P[1][0] / S;
     57e:	8b 83       	std	Y+3, r24	; 0x03
     580:	9c 83       	std	Y+4, r25	; 0x04
     582:	a5 01       	movw	r20, r10
     584:	94 01       	movw	r18, r8
     586:	6d 85       	ldd	r22, Y+13	; 0x0d
     588:	7e 85       	ldd	r23, Y+14	; 0x0e
     58a:	8f 85       	ldd	r24, Y+15	; 0x0f
     58c:	98 89       	ldd	r25, Y+16	; 0x10
     58e:	01 d7       	rcall	.+3586   	; 0x1392 <__divsf3>
     590:	6d 83       	std	Y+5, r22	; 0x05
     592:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     594:	8f 83       	std	Y+7, r24	; 0x07
     596:	98 87       	std	Y+8, r25	; 0x08
     598:	2d 89       	ldd	r18, Y+21	; 0x15
     59a:	3e 89       	ldd	r19, Y+22	; 0x16
     59c:	4f 89       	ldd	r20, Y+23	; 0x17
     59e:	58 8d       	ldd	r21, Y+24	; 0x18
     5a0:	69 89       	ldd	r22, Y+17	; 0x11
     5a2:	7a 89       	ldd	r23, Y+18	; 0x12
     5a4:	8b 89       	ldd	r24, Y+19	; 0x13
     5a6:	9c 89       	ldd	r25, Y+20	; 0x14
     5a8:	12 d6       	rcall	.+3108   	; 0x11ce <__subsf3>
     5aa:	69 8b       	std	Y+17, r22	; 0x11
     5ac:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle += K[0] * y;
     5ae:	8b 8b       	std	Y+19, r24	; 0x13
     5b0:	9c 8b       	std	Y+20, r25	; 0x14
     5b2:	9b 01       	movw	r18, r22
     5b4:	ac 01       	movw	r20, r24
     5b6:	69 81       	ldd	r22, Y+1	; 0x01
     5b8:	7a 81       	ldd	r23, Y+2	; 0x02
     5ba:	8b 81       	ldd	r24, Y+3	; 0x03
     5bc:	9c 81       	ldd	r25, Y+4	; 0x04
     5be:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     5c2:	2d 89       	ldd	r18, Y+21	; 0x15
     5c4:	3e 89       	ldd	r19, Y+22	; 0x16
     5c6:	4f 89       	ldd	r20, Y+23	; 0x17
     5c8:	58 8d       	ldd	r21, Y+24	; 0x18
     5ca:	02 d6       	rcall	.+3076   	; 0x11d0 <__addsf3>
     5cc:	4b 01       	movw	r8, r22
     5ce:	5c 01       	movw	r10, r24
     5d0:	60 93 c9 03 	sts	0x03C9, r22	; 0x8003c9 <angle>
     5d4:	70 93 ca 03 	sts	0x03CA, r23	; 0x8003ca <angle+0x1>
     5d8:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <angle+0x2>
	bias += K[1] * y;
     5dc:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <angle+0x3>
     5e0:	29 89       	ldd	r18, Y+17	; 0x11
     5e2:	3a 89       	ldd	r19, Y+18	; 0x12
     5e4:	4b 89       	ldd	r20, Y+19	; 0x13
     5e6:	5c 89       	ldd	r21, Y+20	; 0x14
     5e8:	6d 81       	ldd	r22, Y+5	; 0x05
     5ea:	7e 81       	ldd	r23, Y+6	; 0x06
     5ec:	8f 81       	ldd	r24, Y+7	; 0x07
     5ee:	98 85       	ldd	r25, Y+8	; 0x08
     5f0:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     5f4:	a7 01       	movw	r20, r14
     5f6:	96 01       	movw	r18, r12
     5f8:	eb d5       	rcall	.+3030   	; 0x11d0 <__addsf3>
     5fa:	60 93 c1 03 	sts	0x03C1, r22	; 0x8003c1 <bias>
     5fe:	70 93 c2 03 	sts	0x03C2, r23	; 0x8003c2 <bias+0x1>
     602:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <bias+0x2>
     606:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     60a:	29 81       	ldd	r18, Y+1	; 0x01
     60c:	3a 81       	ldd	r19, Y+2	; 0x02
     60e:	4b 81       	ldd	r20, Y+3	; 0x03
     610:	5c 81       	ldd	r21, Y+4	; 0x04
     612:	69 85       	ldd	r22, Y+9	; 0x09
     614:	7a 85       	ldd	r23, Y+10	; 0x0a
     616:	8b 85       	ldd	r24, Y+11	; 0x0b
     618:	9c 85       	ldd	r25, Y+12	; 0x0c
     61a:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     61e:	9b 01       	movw	r18, r22
     620:	ac 01       	movw	r20, r24
     622:	69 85       	ldd	r22, Y+9	; 0x09
     624:	7a 85       	ldd	r23, Y+10	; 0x0a
     626:	8b 85       	ldd	r24, Y+11	; 0x0b
     628:	9c 85       	ldd	r25, Y+12	; 0x0c
     62a:	d1 d5       	rcall	.+2978   	; 0x11ce <__subsf3>
     62c:	ed ec       	ldi	r30, 0xCD	; 205
     62e:	f3 e0       	ldi	r31, 0x03	; 3
     630:	60 83       	st	Z, r22
     632:	71 83       	std	Z+1, r23	; 0x01
	P[0][1] -= K[0] * P01_temp;
     634:	82 83       	std	Z+2, r24	; 0x02
     636:	93 83       	std	Z+3, r25	; 0x03
     638:	29 81       	ldd	r18, Y+1	; 0x01
     63a:	3a 81       	ldd	r19, Y+2	; 0x02
     63c:	4b 81       	ldd	r20, Y+3	; 0x03
     63e:	5c 81       	ldd	r21, Y+4	; 0x04
     640:	c3 01       	movw	r24, r6
     642:	b2 01       	movw	r22, r4
     644:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     648:	9b 01       	movw	r18, r22
     64a:	ac 01       	movw	r20, r24
     64c:	c3 01       	movw	r24, r6
     64e:	b2 01       	movw	r22, r4
     650:	be d5       	rcall	.+2940   	; 0x11ce <__subsf3>
     652:	60 93 d1 03 	sts	0x03D1, r22	; 0x8003d1 <P+0x4>
     656:	70 93 d2 03 	sts	0x03D2, r23	; 0x8003d2 <P+0x5>
     65a:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <P+0x6>
	P[1][0] -= K[1] * P00_temp;
     65e:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <P+0x7>
     662:	2d 81       	ldd	r18, Y+5	; 0x05
     664:	3e 81       	ldd	r19, Y+6	; 0x06
     666:	4f 81       	ldd	r20, Y+7	; 0x07
     668:	58 85       	ldd	r21, Y+8	; 0x08
     66a:	69 85       	ldd	r22, Y+9	; 0x09
     66c:	7a 85       	ldd	r23, Y+10	; 0x0a
     66e:	8b 85       	ldd	r24, Y+11	; 0x0b
     670:	9c 85       	ldd	r25, Y+12	; 0x0c
     672:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     676:	9b 01       	movw	r18, r22
     678:	ac 01       	movw	r20, r24
     67a:	6d 85       	ldd	r22, Y+13	; 0x0d
     67c:	7e 85       	ldd	r23, Y+14	; 0x0e
     67e:	8f 85       	ldd	r24, Y+15	; 0x0f
     680:	98 89       	ldd	r25, Y+16	; 0x10
     682:	a5 d5       	rcall	.+2890   	; 0x11ce <__subsf3>
     684:	60 93 d5 03 	sts	0x03D5, r22	; 0x8003d5 <P+0x8>
     688:	70 93 d6 03 	sts	0x03D6, r23	; 0x8003d6 <P+0x9>
     68c:	80 93 d7 03 	sts	0x03D7, r24	; 0x8003d7 <P+0xa>
	P[1][1] -= K[1] * P01_temp;
     690:	90 93 d8 03 	sts	0x03D8, r25	; 0x8003d8 <P+0xb>
     694:	2d 81       	ldd	r18, Y+5	; 0x05
     696:	3e 81       	ldd	r19, Y+6	; 0x06
     698:	4f 81       	ldd	r20, Y+7	; 0x07
     69a:	58 85       	ldd	r21, Y+8	; 0x08
     69c:	c3 01       	movw	r24, r6
     69e:	b2 01       	movw	r22, r4
     6a0:	0e 94 70 0b 	call	0x16e0	; 0x16e0 <__mulsf3>
     6a4:	9b 01       	movw	r18, r22
     6a6:	ac 01       	movw	r20, r24
     6a8:	69 8d       	ldd	r22, Y+25	; 0x19
     6aa:	7a 8d       	ldd	r23, Y+26	; 0x1a
     6ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
     6ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6b0:	8e d5       	rcall	.+2844   	; 0x11ce <__subsf3>
     6b2:	60 93 d9 03 	sts	0x03D9, r22	; 0x8003d9 <P+0xc>
     6b6:	70 93 da 03 	sts	0x03DA, r23	; 0x8003da <P+0xd>
     6ba:	80 93 db 03 	sts	0x03DB, r24	; 0x8003db <P+0xe>
     6be:	90 93 dc 03 	sts	0x03DC, r25	; 0x8003dc <P+0xf>

	return angle;
};
     6c2:	c5 01       	movw	r24, r10
     6c4:	b4 01       	movw	r22, r8
     6c6:	6c 96       	adiw	r28, 0x1c	; 28
     6c8:	0f b6       	in	r0, 0x3f	; 63
     6ca:	f8 94       	cli
     6cc:	de bf       	out	0x3e, r29	; 62
     6ce:	0f be       	out	0x3f, r0	; 63
     6d0:	cd bf       	out	0x3d, r28	; 61
     6d2:	df 91       	pop	r29
     6d4:	cf 91       	pop	r28
     6d6:	1f 91       	pop	r17
     6d8:	0f 91       	pop	r16
     6da:	ff 90       	pop	r15
     6dc:	ef 90       	pop	r14
     6de:	df 90       	pop	r13
     6e0:	cf 90       	pop	r12
     6e2:	bf 90       	pop	r11
     6e4:	af 90       	pop	r10
     6e6:	9f 90       	pop	r9
     6e8:	8f 90       	pop	r8
     6ea:	7f 90       	pop	r7
     6ec:	6f 90       	pop	r6
     6ee:	5f 90       	pop	r5
     6f0:	4f 90       	pop	r4
     6f2:	08 95       	ret

000006f4 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle = 0.001f;
     6f4:	8f e6       	ldi	r24, 0x6F	; 111
     6f6:	92 e1       	ldi	r25, 0x12	; 18
     6f8:	a3 e8       	ldi	r26, 0x83	; 131
     6fa:	ba e3       	ldi	r27, 0x3A	; 58
     6fc:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <Q_angle>
     700:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <Q_angle+0x1>
     704:	a0 93 bf 03 	sts	0x03BF, r26	; 0x8003bf <Q_angle+0x2>
     708:	b0 93 c0 03 	sts	0x03C0, r27	; 0x8003c0 <Q_angle+0x3>
	Q_bias = 0.003f;
     70c:	86 ea       	ldi	r24, 0xA6	; 166
     70e:	9b e9       	ldi	r25, 0x9B	; 155
     710:	a4 e4       	ldi	r26, 0x44	; 68
     712:	bb e3       	ldi	r27, 0x3B	; 59
     714:	80 93 b5 03 	sts	0x03B5, r24	; 0x8003b5 <Q_bias>
     718:	90 93 b6 03 	sts	0x03B6, r25	; 0x8003b6 <Q_bias+0x1>
     71c:	a0 93 b7 03 	sts	0x03B7, r26	; 0x8003b7 <Q_bias+0x2>
     720:	b0 93 b8 03 	sts	0x03B8, r27	; 0x8003b8 <Q_bias+0x3>
	R_measure = 0.03f;
     724:	8f e8       	ldi	r24, 0x8F	; 143
     726:	92 ec       	ldi	r25, 0xC2	; 194
     728:	a5 ef       	ldi	r26, 0xF5	; 245
     72a:	bc e3       	ldi	r27, 0x3C	; 60
     72c:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <R_measure>
     730:	90 93 c6 03 	sts	0x03C6, r25	; 0x8003c6 <R_measure+0x1>
     734:	a0 93 c7 03 	sts	0x03C7, r26	; 0x8003c7 <R_measure+0x2>
     738:	b0 93 c8 03 	sts	0x03C8, r27	; 0x8003c8 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     73c:	10 92 c9 03 	sts	0x03C9, r1	; 0x8003c9 <angle>
     740:	10 92 ca 03 	sts	0x03CA, r1	; 0x8003ca <angle+0x1>
     744:	10 92 cb 03 	sts	0x03CB, r1	; 0x8003cb <angle+0x2>
     748:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <angle+0x3>
	bias = 0.0f; // Reset bias
     74c:	10 92 c1 03 	sts	0x03C1, r1	; 0x8003c1 <bias>
     750:	10 92 c2 03 	sts	0x03C2, r1	; 0x8003c2 <bias+0x1>
     754:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <bias+0x2>
     758:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     75c:	ed ec       	ldi	r30, 0xCD	; 205
     75e:	f3 e0       	ldi	r31, 0x03	; 3
     760:	10 82       	st	Z, r1
     762:	11 82       	std	Z+1, r1	; 0x01
     764:	12 82       	std	Z+2, r1	; 0x02
     766:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     768:	14 82       	std	Z+4, r1	; 0x04
     76a:	15 82       	std	Z+5, r1	; 0x05
     76c:	16 82       	std	Z+6, r1	; 0x06
     76e:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     770:	10 86       	std	Z+8, r1	; 0x08
     772:	11 86       	std	Z+9, r1	; 0x09
     774:	12 86       	std	Z+10, r1	; 0x0a
     776:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     778:	14 86       	std	Z+12, r1	; 0x0c
     77a:	15 86       	std	Z+13, r1	; 0x0d
     77c:	16 86       	std	Z+14, r1	; 0x0e
     77e:	17 86       	std	Z+15, r1	; 0x0f
     780:	08 95       	ret

00000782 <main>:
#include <time.h>
uint8_t buffer[14];
bool loop_bool=true;
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	cd b7       	in	r28, 0x3d	; 61
     788:	de b7       	in	r29, 0x3e	; 62
     78a:	a4 97       	sbiw	r28, 0x24	; 36
     78c:	0f b6       	in	r0, 0x3f	; 63
     78e:	f8 94       	cli
     790:	de bf       	out	0x3e, r29	; 62
     792:	0f be       	out	0x3f, r0	; 63
     794:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     796:	10 92 a5 03 	sts	0x03A5, r1	; 0x8003a5 <__data_end+0x1>
     79a:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <__data_end>
	V_step=V_step_predefine;
     79e:	88 e7       	ldi	r24, 0x78	; 120
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	90 93 72 03 	sts	0x0372, r25	; 0x800372 <V_step+0x1>
     7a6:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <V_step>
	W_step=W_step_predefine;
     7aa:	80 ef       	ldi	r24, 0xF0	; 240
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     7b2:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	incr=-1;
     7b6:	8f ef       	ldi	r24, 0xFF	; 255
     7b8:	9f ef       	ldi	r25, 0xFF	; 255
     7ba:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <incr+0x1>
     7be:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <incr>
	pwm_delay=2000;
     7c2:	80 ed       	ldi	r24, 0xD0	; 208
     7c4:	97 e0       	ldi	r25, 0x07	; 7
     7c6:	90 93 b0 03 	sts	0x03B0, r25	; 0x8003b0 <pwm_delay+0x1>
     7ca:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <pwm_delay>
	cli();
	init_gpio();
		#ifdef GYRO
			i2c_init();
     7ce:	f8 94       	cli
		#endif
	USART_Init(MY_UBRR);
     7d0:	6f dd       	rcall	.-1314   	; 0x2b0 <init_gpio>
     7d2:	d5 d3       	rcall	.+1962   	; 0xf7e <i2c_init>
     7d4:	8c e0       	ldi	r24, 0x0C	; 12
	uart_str = fdevopen(uart_putchar, NULL);
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	83 d4       	rcall	.+2310   	; 0x10e0 <USART_Init>
     7da:	60 e0       	ldi	r22, 0x00	; 0
     7dc:	70 e0       	ldi	r23, 0x00	; 0
     7de:	8b e7       	ldi	r24, 0x7B	; 123
     7e0:	98 e0       	ldi	r25, 0x08	; 8
	setup_timer0();
	Enable_timer0_overflow_interrupt();//micros
     7e2:	0e 94 0a 11 	call	0x2214	; 0x2214 <fdevopen>
	setup_timer4();//pwm
     7e6:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <uart_str+0x1>
	setup_timer5();
     7ea:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <uart_str>
	Enable_timer5_compare_interrupt();//motor
	OCR5A=4000;
     7ee:	23 d3       	rcall	.+1606   	; 0xe36 <setup_timer0>
     7f0:	29 d3       	rcall	.+1618   	; 0xe44 <Enable_timer0_overflow_interrupt>
     7f2:	fe d2       	rcall	.+1532   	; 0xdf0 <setup_timer4>
     7f4:	11 d3       	rcall	.+1570   	; 0xe18 <setup_timer5>
	unsigned long timer1=micros();
     7f6:	19 d3       	rcall	.+1586   	; 0xe2a <Enable_timer5_compare_interrupt>
     7f8:	80 ea       	ldi	r24, 0xA0	; 160
				int16_t gyroZ_calib=gyro_offset_z;
				int16_t accelX_calib=accel_offset_x;
				int16_t accelY_calib=accel_offset_y;
				int16_t accelZ_calib=accel_offset_z;
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     7fa:	9f e0       	ldi	r25, 0x0F	; 15
     7fc:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     800:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     804:	25 d3       	rcall	.+1610   	; 0xe50 <micros>
     806:	2b 01       	movw	r4, r22
     808:	3c 01       	movw	r6, r24
     80a:	67 e0       	ldi	r22, 0x07	; 7
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     80c:	89 e1       	ldi	r24, 0x19	; 25
     80e:	2f d2       	rcall	.+1118   	; 0xc6e <mpu6050_writeByte>
     810:	60 e0       	ldi	r22, 0x00	; 0
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     812:	8a e1       	ldi	r24, 0x1A	; 26
     814:	2c d2       	rcall	.+1112   	; 0xc6e <mpu6050_writeByte>
     816:	68 e0       	ldi	r22, 0x08	; 8
     818:	8b e1       	ldi	r24, 0x1B	; 27
		double gyroXangle;
		double gyroYangle;
		double compAngleX;
		double compAngleY;
	#endif  
	Kalman_init();
     81a:	29 d2       	rcall	.+1106   	; 0xc6e <mpu6050_writeByte>
	double angle_roll_kalman=0;
	double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
     81c:	60 e1       	ldi	r22, 0x10	; 16
     81e:	8c e1       	ldi	r24, 0x1C	; 28
     820:	26 d2       	rcall	.+1100   	; 0xc6e <mpu6050_writeByte>
     822:	61 e0       	ldi	r22, 0x01	; 1
     824:	8b e6       	ldi	r24, 0x6B	; 107
     826:	23 d2       	rcall	.+1094   	; 0xc6e <mpu6050_writeByte>
     828:	65 df       	rcall	.-310    	; 0x6f4 <Kalman_init>
     82a:	6b 85       	ldd	r22, Y+11	; 0x0b
     82c:	7c 85       	ldd	r23, Y+12	; 0x0c
     82e:	07 2e       	mov	r0, r23
     830:	00 0c       	add	r0, r0
     832:	88 0b       	sbc	r24, r24
     834:	99 0b       	sbc	r25, r25
     836:	48 d6       	rcall	.+3216   	; 0x14c8 <__floatsisf>
     838:	6b 01       	movw	r12, r22
     83a:	7c 01       	movw	r14, r24
     83c:	69 85       	ldd	r22, Y+9	; 0x09
     83e:	7a 85       	ldd	r23, Y+10	; 0x0a
     840:	07 2e       	mov	r0, r23
	angle=roll;//set starting angle
     842:	00 0c       	add	r0, r0
     844:	88 0b       	sbc	r24, r24
     846:	99 0b       	sbc	r25, r25
     848:	3f d6       	rcall	.+3198   	; 0x14c8 <__floatsisf>
     84a:	a7 01       	movw	r20, r14
     84c:	96 01       	movw	r18, r12
     84e:	4a d5       	rcall	.+2708   	; 0x12e4 <atan2>
     850:	25 e3       	ldi	r18, 0x35	; 53
     852:	3a ef       	ldi	r19, 0xFA	; 250
     854:	4e e8       	ldi	r20, 0x8E	; 142
     856:	5c e3       	ldi	r21, 0x3C	; 60
     858:	43 d7       	rcall	.+3718   	; 0x16e0 <__mulsf3>
     85a:	60 93 c9 03 	sts	0x03C9, r22	; 0x8003c9 <angle>
	sei();
     85e:	70 93 ca 03 	sts	0x03CA, r23	; 0x8003ca <angle+0x1>
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
		double angle_roll=0;
     862:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <angle+0x2>
     866:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <angle+0x3>
		int16_t gyro_y;
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
     86a:	78 94       	sei
     86c:	1d 86       	std	Y+13, r1	; 0x0d
     86e:	1e 86       	std	Y+14, r1	; 0x0e
			printSD("final_angleY=",final_angleY);
			printf("\n");		
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     870:	1f 86       	std	Y+15, r1	; 0x0f
     872:	18 8a       	std	Y+16, r1	; 0x10
     874:	1d 8a       	std	Y+21, r1	; 0x15
     876:	1e 8a       	std	Y+22, r1	; 0x16
     878:	1f 8a       	std	Y+23, r1	; 0x17
	angle=roll;//set starting angle
	sei();
    while (1) /*---------------------------while(1)---------------------------------*/
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     87a:	18 8e       	std	Y+24, r1	; 0x18
     87c:	0f 2e       	mov	r0, r31
     87e:	ff ed       	ldi	r31, 0xDF	; 223
     880:	2f 2e       	mov	r2, r31
     882:	ff e7       	ldi	r31, 0x7F	; 127
     884:	3f 2e       	mov	r3, r31
     886:	f0 2d       	mov	r31, r0
     888:	ce 01       	movw	r24, r28
     88a:	05 96       	adiw	r24, 0x05	; 5
     88c:	7c 01       	movw	r14, r24
     88e:	8e 01       	movw	r16, r28
     890:	0d 5f       	subi	r16, 0xFD	; 253
     892:	1f 4f       	sbci	r17, 0xFF	; 255
     894:	9e 01       	movw	r18, r28
     896:	2f 5f       	subi	r18, 0xFF	; 255
     898:	3f 4f       	sbci	r19, 0xFF	; 255
     89a:	ae 01       	movw	r20, r28
     89c:	45 5f       	subi	r20, 0xF5	; 245
			accel_x-=accelX_calib;
     89e:	5f 4f       	sbci	r21, 0xFF	; 255
     8a0:	be 01       	movw	r22, r28
     8a2:	67 5f       	subi	r22, 0xF7	; 247
     8a4:	7f 4f       	sbci	r23, 0xFF	; 255
     8a6:	02 96       	adiw	r24, 0x02	; 2
     8a8:	38 d2       	rcall	.+1136   	; 0xd1a <mpu6050_getRawData>
			accel_y-=accelY_calib;
     8aa:	8f 81       	ldd	r24, Y+7	; 0x07
     8ac:	98 85       	ldd	r25, Y+8	; 0x08
     8ae:	86 5d       	subi	r24, 0xD6	; 214
     8b0:	9e 4f       	sbci	r25, 0xFE	; 254
     8b2:	98 87       	std	Y+8, r25	; 0x08
     8b4:	8f 83       	std	Y+7, r24	; 0x07
			accel_z-=accelZ_calib;
     8b6:	89 85       	ldd	r24, Y+9	; 0x09
     8b8:	9a 85       	ldd	r25, Y+10	; 0x0a
     8ba:	82 52       	subi	r24, 0x22	; 34
     8bc:	95 4f       	sbci	r25, 0xF5	; 245
     8be:	9a 87       	std	Y+10, r25	; 0x0a
			gyro_x-=gyroX_calib;
     8c0:	89 87       	std	Y+9, r24	; 0x09
     8c2:	8b 85       	ldd	r24, Y+11	; 0x0b
     8c4:	9c 85       	ldd	r25, Y+12	; 0x0c
     8c6:	86 55       	subi	r24, 0x56	; 86
     8c8:	98 40       	sbci	r25, 0x08	; 8
			gyro_y-=gyroY_calib;
     8ca:	9c 87       	std	Y+12, r25	; 0x0c
     8cc:	8b 87       	std	Y+11, r24	; 0x0b
     8ce:	89 81       	ldd	r24, Y+1	; 0x01
     8d0:	9a 81       	ldd	r25, Y+2	; 0x02
     8d2:	89 58       	subi	r24, 0x89	; 137
			gyro_z-=gyroZ_calib;
     8d4:	9f 4f       	sbci	r25, 0xFF	; 255
     8d6:	9a 83       	std	Y+2, r25	; 0x02
     8d8:	89 83       	std	Y+1, r24	; 0x01
     8da:	8b 81       	ldd	r24, Y+3	; 0x03
     8dc:	9c 81       	ldd	r25, Y+4	; 0x04
			printSI("ay=",accel_y);
			printSI("az=",accel_z);
			printf("\n");
			/*--------end------*/			
		#else
			double dt = ((double)(micros() - timer1))/1000000;
     8de:	8c 51       	subi	r24, 0x1C	; 28
     8e0:	9f 4f       	sbci	r25, 0xFF	; 255
     8e2:	9c 83       	std	Y+4, r25	; 0x04
     8e4:	8b 83       	std	Y+3, r24	; 0x03
     8e6:	8d 81       	ldd	r24, Y+5	; 0x05
     8e8:	9e 81       	ldd	r25, Y+6	; 0x06
     8ea:	8c 51       	subi	r24, 0x1C	; 28
     8ec:	9f 4f       	sbci	r25, 0xFF	; 255
     8ee:	9e 83       	std	Y+6, r25	; 0x06
     8f0:	8d 83       	std	Y+5, r24	; 0x05
     8f2:	ae d2       	rcall	.+1372   	; 0xe50 <micros>
     8f4:	64 19       	sub	r22, r4
     8f6:	75 09       	sbc	r23, r5
     8f8:	86 09       	sbc	r24, r6
     8fa:	97 09       	sbc	r25, r7
     8fc:	e3 d5       	rcall	.+3014   	; 0x14c4 <__floatunsisf>
			timer1=micros();
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	34 e2       	ldi	r19, 0x24	; 36
     902:	44 e7       	ldi	r20, 0x74	; 116
     904:	59 e4       	ldi	r21, 0x49	; 73
			double gyroXrate = gyro_x/65.5;// deg/s 
			double gyroYrate = gyro_y/65.5;// deg/s
     906:	45 d5       	rcall	.+2698   	; 0x1392 <__divsf3>
     908:	69 8f       	std	Y+25, r22	; 0x19
     90a:	7a 8f       	std	Y+26, r23	; 0x1a
     90c:	8b 8f       	std	Y+27, r24	; 0x1b
     90e:	9c 8f       	std	Y+28, r25	; 0x1c
     910:	9f d2       	rcall	.+1342   	; 0xe50 <micros>
     912:	2b 01       	movw	r4, r22
     914:	3c 01       	movw	r6, r24
     916:	6b 81       	ldd	r22, Y+3	; 0x03
     918:	7c 81       	ldd	r23, Y+4	; 0x04
     91a:	07 2e       	mov	r0, r23
     91c:	00 0c       	add	r0, r0
     91e:	88 0b       	sbc	r24, r24
     920:	99 0b       	sbc	r25, r25
     922:	d2 d5       	rcall	.+2980   	; 0x14c8 <__floatsisf>
			if (!loop_bool) {
     924:	20 e0       	ldi	r18, 0x00	; 0
     926:	30 e0       	ldi	r19, 0x00	; 0
     928:	43 e8       	ldi	r20, 0x83	; 131
     92a:	52 e4       	ldi	r21, 0x42	; 66
     92c:	32 d5       	rcall	.+2660   	; 0x1392 <__divsf3>
				angle_pitch += gyroXrate*dt; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     92e:	69 a3       	std	Y+33, r22	; 0x21
     930:	7a a3       	std	Y+34, r23	; 0x22
     932:	8b a3       	std	Y+35, r24	; 0x23
     934:	9c a3       	std	Y+36, r25	; 0x24
     936:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <loop_bool>
     93a:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <loop_bool+0x1>
     93e:	89 2b       	or	r24, r25
     940:	89 f5       	brne	.+98     	; 0x9a4 <main+0x222>
     942:	69 81       	ldd	r22, Y+1	; 0x01
     944:	7a 81       	ldd	r23, Y+2	; 0x02
     946:	07 2e       	mov	r0, r23
     948:	00 0c       	add	r0, r0
     94a:	88 0b       	sbc	r24, r24
     94c:	99 0b       	sbc	r25, r25
     94e:	bc d5       	rcall	.+2936   	; 0x14c8 <__floatsisf>
     950:	20 e0       	ldi	r18, 0x00	; 0
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	43 e8       	ldi	r20, 0x83	; 131
     956:	52 e4       	ldi	r21, 0x42	; 66
     958:	1c d5       	rcall	.+2616   	; 0x1392 <__divsf3>
     95a:	29 8d       	ldd	r18, Y+25	; 0x19
     95c:	3a 8d       	ldd	r19, Y+26	; 0x1a
     95e:	4b 8d       	ldd	r20, Y+27	; 0x1b
     960:	5c 8d       	ldd	r21, Y+28	; 0x1c
     962:	be d6       	rcall	.+3452   	; 0x16e0 <__mulsf3>
     964:	9b 01       	movw	r18, r22
     966:	ac 01       	movw	r20, r24
     968:	6d 89       	ldd	r22, Y+21	; 0x15
				angle_roll += gyroYrate*dt;  //Calculate the traveled roll angle and add this to the angle_roll variable			
     96a:	7e 89       	ldd	r23, Y+22	; 0x16
     96c:	8f 89       	ldd	r24, Y+23	; 0x17
     96e:	98 8d       	ldd	r25, Y+24	; 0x18
     970:	2f d4       	rcall	.+2142   	; 0x11d0 <__addsf3>
     972:	6d 8b       	std	Y+21, r22	; 0x15
     974:	7e 8b       	std	Y+22, r23	; 0x16
     976:	8f 8b       	std	Y+23, r24	; 0x17
     978:	98 8f       	std	Y+24, r25	; 0x18
     97a:	29 a1       	ldd	r18, Y+33	; 0x21
     97c:	3a a1       	ldd	r19, Y+34	; 0x22
     97e:	4b a1       	ldd	r20, Y+35	; 0x23
     980:	5c a1       	ldd	r21, Y+36	; 0x24
     982:	69 8d       	ldd	r22, Y+25	; 0x19
     984:	7a 8d       	ldd	r23, Y+26	; 0x1a
     986:	8b 8d       	ldd	r24, Y+27	; 0x1b
     988:	9c 8d       	ldd	r25, Y+28	; 0x1c
     98a:	aa d6       	rcall	.+3412   	; 0x16e0 <__mulsf3>
     98c:	9b 01       	movw	r18, r22
     98e:	ac 01       	movw	r20, r24
			}
			else loop_bool=false;	
     990:	6d 85       	ldd	r22, Y+13	; 0x0d
     992:	7e 85       	ldd	r23, Y+14	; 0x0e
     994:	8f 85       	ldd	r24, Y+15	; 0x0f
			angle_pitch += angle_roll * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the roll angle to the pitch angel
     996:	98 89       	ldd	r25, Y+16	; 0x10
     998:	1b d4       	rcall	.+2102   	; 0x11d0 <__addsf3>
     99a:	6d 87       	std	Y+13, r22	; 0x0d
     99c:	7e 87       	std	Y+14, r23	; 0x0e
     99e:	8f 87       	std	Y+15, r24	; 0x0f
     9a0:	98 8b       	std	Y+16, r25	; 0x10
     9a2:	04 c0       	rjmp	.+8      	; 0x9ac <main+0x22a>
     9a4:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <loop_bool+0x1>
     9a8:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <loop_bool>
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	43 e8       	ldi	r20, 0x83	; 131
     9b2:	52 e4       	ldi	r21, 0x42	; 66
     9b4:	69 8d       	ldd	r22, Y+25	; 0x19
     9b6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     9b8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9ba:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9bc:	ea d4       	rcall	.+2516   	; 0x1392 <__divsf3>
     9be:	2b ed       	ldi	r18, 0xDB	; 219
     9c0:	3f e0       	ldi	r19, 0x0F	; 15
     9c2:	49 e4       	ldi	r20, 0x49	; 73
     9c4:	50 e4       	ldi	r21, 0x40	; 64
     9c6:	8c d6       	rcall	.+3352   	; 0x16e0 <__mulsf3>
     9c8:	20 e0       	ldi	r18, 0x00	; 0
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	44 e3       	ldi	r20, 0x34	; 52
     9ce:	53 e4       	ldi	r21, 0x43	; 67
     9d0:	e0 d4       	rcall	.+2496   	; 0x1392 <__divsf3>
     9d2:	6b 01       	movw	r12, r22
     9d4:	7c 01       	movw	r14, r24
     9d6:	6d 81       	ldd	r22, Y+5	; 0x05
     9d8:	7e 81       	ldd	r23, Y+6	; 0x06
     9da:	07 2e       	mov	r0, r23
     9dc:	00 0c       	add	r0, r0
     9de:	88 0b       	sbc	r24, r24
     9e0:	99 0b       	sbc	r25, r25
     9e2:	72 d5       	rcall	.+2788   	; 0x14c8 <__floatsisf>
     9e4:	9b 01       	movw	r18, r22
     9e6:	ac 01       	movw	r20, r24
     9e8:	c7 01       	movw	r24, r14
     9ea:	b6 01       	movw	r22, r12
     9ec:	79 d6       	rcall	.+3314   	; 0x16e0 <__mulsf3>
     9ee:	db d6       	rcall	.+3510   	; 0x17a6 <sin>
     9f0:	6b 01       	movw	r12, r22
     9f2:	7c 01       	movw	r14, r24
     9f4:	9b 01       	movw	r18, r22
     9f6:	ac 01       	movw	r20, r24
     9f8:	6d 85       	ldd	r22, Y+13	; 0x0d
     9fa:	7e 85       	ldd	r23, Y+14	; 0x0e
     9fc:	8f 85       	ldd	r24, Y+15	; 0x0f
     9fe:	98 89       	ldd	r25, Y+16	; 0x10
     a00:	6f d6       	rcall	.+3294   	; 0x16e0 <__mulsf3>
			angle_roll -= angle_pitch * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the pitch angle to the roll angel
     a02:	9b 01       	movw	r18, r22
     a04:	ac 01       	movw	r20, r24
     a06:	6d 89       	ldd	r22, Y+21	; 0x15
     a08:	7e 89       	ldd	r23, Y+22	; 0x16
     a0a:	8f 89       	ldd	r24, Y+23	; 0x17
     a0c:	98 8d       	ldd	r25, Y+24	; 0x18
     a0e:	e0 d3       	rcall	.+1984   	; 0x11d0 <__addsf3>
     a10:	6d 8b       	std	Y+21, r22	; 0x15
     a12:	7e 8b       	std	Y+22, r23	; 0x16
     a14:	8f 8b       	std	Y+23, r24	; 0x17
     a16:	98 8f       	std	Y+24, r25	; 0x18
     a18:	9b 01       	movw	r18, r22
     a1a:	ac 01       	movw	r20, r24
     a1c:	c7 01       	movw	r24, r14
     a1e:	b6 01       	movw	r22, r12
     a20:	5f d6       	rcall	.+3262   	; 0x16e0 <__mulsf3>
			
			double temporar_accel_x=accel_x/100;
     a22:	9b 01       	movw	r18, r22
     a24:	ac 01       	movw	r20, r24
     a26:	6d 85       	ldd	r22, Y+13	; 0x0d
     a28:	7e 85       	ldd	r23, Y+14	; 0x0e
     a2a:	8f 85       	ldd	r24, Y+15	; 0x0f
     a2c:	98 89       	ldd	r25, Y+16	; 0x10
     a2e:	cf d3       	rcall	.+1950   	; 0x11ce <__subsf3>
     a30:	6d 87       	std	Y+13, r22	; 0x0d
     a32:	7e 87       	std	Y+14, r23	; 0x0e
     a34:	8f 87       	std	Y+15, r24	; 0x0f
     a36:	98 8b       	std	Y+16, r25	; 0x10
     a38:	0f 81       	ldd	r16, Y+7	; 0x07
     a3a:	18 85       	ldd	r17, Y+8	; 0x08
			double temporar_accel_y=accel_y/100;
     a3c:	c8 01       	movw	r24, r16
     a3e:	64 e6       	ldi	r22, 0x64	; 100
     a40:	70 e0       	ldi	r23, 0x00	; 0
     a42:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <__divmodhi4>
     a46:	07 2e       	mov	r0, r23
     a48:	00 0c       	add	r0, r0
     a4a:	88 0b       	sbc	r24, r24
     a4c:	99 0b       	sbc	r25, r25
     a4e:	3c d5       	rcall	.+2680   	; 0x14c8 <__floatsisf>
     a50:	4b 01       	movw	r8, r22
     a52:	5c 01       	movw	r10, r24
     a54:	89 85       	ldd	r24, Y+9	; 0x09
			double temporar_accel_z=accel_z/100;	
     a56:	9a 85       	ldd	r25, Y+10	; 0x0a
     a58:	64 e6       	ldi	r22, 0x64	; 100
     a5a:	70 e0       	ldi	r23, 0x00	; 0
     a5c:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <__divmodhi4>
     a60:	07 2e       	mov	r0, r23
     a62:	00 0c       	add	r0, r0
     a64:	88 0b       	sbc	r24, r24
     a66:	99 0b       	sbc	r25, r25
     a68:	2f d5       	rcall	.+2654   	; 0x14c8 <__floatsisf>
     a6a:	69 8b       	std	Y+17, r22	; 0x11
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
     a6c:	7a 8b       	std	Y+18, r23	; 0x12
     a6e:	8b 8b       	std	Y+19, r24	; 0x13
     a70:	9c 8b       	std	Y+20, r25	; 0x14
     a72:	8b 85       	ldd	r24, Y+11	; 0x0b
     a74:	9c 85       	ldd	r25, Y+12	; 0x0c
     a76:	64 e6       	ldi	r22, 0x64	; 100
     a78:	70 e0       	ldi	r23, 0x00	; 0
     a7a:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <__divmodhi4>
     a7e:	07 2e       	mov	r0, r23
     a80:	00 0c       	add	r0, r0
     a82:	88 0b       	sbc	r24, r24
     a84:	99 0b       	sbc	r25, r25
     a86:	20 d5       	rcall	.+2624   	; 0x14c8 <__floatsisf>
     a88:	6b 01       	movw	r12, r22
     a8a:	7c 01       	movw	r14, r24
     a8c:	a5 01       	movw	r20, r10
     a8e:	94 01       	movw	r18, r8
     a90:	c5 01       	movw	r24, r10
     a92:	b4 01       	movw	r22, r8
     a94:	25 d6       	rcall	.+3146   	; 0x16e0 <__mulsf3>
     a96:	6d 8f       	std	Y+29, r22	; 0x1d
     a98:	7e 8f       	std	Y+30, r23	; 0x1e
     a9a:	8f 8f       	std	Y+31, r24	; 0x1f
     a9c:	98 a3       	std	Y+32, r25	; 0x20
     a9e:	29 89       	ldd	r18, Y+17	; 0x11
     aa0:	3a 89       	ldd	r19, Y+18	; 0x12
     aa2:	4b 89       	ldd	r20, Y+19	; 0x13
     aa4:	5c 89       	ldd	r21, Y+20	; 0x14
     aa6:	ca 01       	movw	r24, r20
     aa8:	b9 01       	movw	r22, r18
     aaa:	1a d6       	rcall	.+3124   	; 0x16e0 <__mulsf3>
     aac:	9b 01       	movw	r18, r22
     aae:	ac 01       	movw	r20, r24
     ab0:	6d 8d       	ldd	r22, Y+29	; 0x1d
     ab2:	7e 8d       	ldd	r23, Y+30	; 0x1e
     ab4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     ab6:	98 a1       	ldd	r25, Y+32	; 0x20
     ab8:	8b d3       	rcall	.+1814   	; 0x11d0 <__addsf3>
     aba:	6d 8f       	std	Y+29, r22	; 0x1d
     abc:	7e 8f       	std	Y+30, r23	; 0x1e
     abe:	8f 8f       	std	Y+31, r24	; 0x1f
     ac0:	98 a3       	std	Y+32, r25	; 0x20
     ac2:	a5 01       	movw	r20, r10
     ac4:	94 01       	movw	r18, r8
     ac6:	c5 01       	movw	r24, r10
     ac8:	b4 01       	movw	r22, r8
     aca:	0a d6       	rcall	.+3092   	; 0x16e0 <__mulsf3>
     acc:	4b 01       	movw	r8, r22
     ace:	5c 01       	movw	r10, r24
     ad0:	29 89       	ldd	r18, Y+17	; 0x11
     ad2:	3a 89       	ldd	r19, Y+18	; 0x12
     ad4:	4b 89       	ldd	r20, Y+19	; 0x13
     ad6:	5c 89       	ldd	r21, Y+20	; 0x14
     ad8:	ca 01       	movw	r24, r20
     ada:	b9 01       	movw	r22, r18
     adc:	01 d6       	rcall	.+3074   	; 0x16e0 <__mulsf3>
     ade:	9b 01       	movw	r18, r22
     ae0:	ac 01       	movw	r20, r24
			acc_total_vector*=100;
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     ae2:	c5 01       	movw	r24, r10
     ae4:	b4 01       	movw	r22, r8
     ae6:	74 d3       	rcall	.+1768   	; 0x11d0 <__addsf3>
     ae8:	4b 01       	movw	r8, r22
     aea:	5c 01       	movw	r10, r24
     aec:	a7 01       	movw	r20, r14
     aee:	96 01       	movw	r18, r12
     af0:	c7 01       	movw	r24, r14
     af2:	b6 01       	movw	r22, r12
     af4:	f5 d5       	rcall	.+3050   	; 0x16e0 <__mulsf3>
     af6:	9b 01       	movw	r18, r22
     af8:	ac 01       	movw	r20, r24
     afa:	c5 01       	movw	r24, r10
     afc:	b4 01       	movw	r22, r8
     afe:	68 d3       	rcall	.+1744   	; 0x11d0 <__addsf3>
     b00:	5c d6       	rcall	.+3256   	; 0x17ba <sqrt>
     b02:	4b 01       	movw	r8, r22
     b04:	5c 01       	movw	r10, r24
     b06:	b8 01       	movw	r22, r16
     b08:	11 0f       	add	r17, r17
     b0a:	88 0b       	sbc	r24, r24
     b0c:	99 0b       	sbc	r25, r25
				
			//kalman
			double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
			double pitch = atan(-accel_x / sqrt(accel_y * accel_y + accel_z * accel_z)) * RAD_TO_DEG;
			//angle=roll;
			float kalman_angle=getAngle(angle_roll,gyroYrate,dt);
     b0e:	dc d4       	rcall	.+2488   	; 0x14c8 <__floatsisf>
     b10:	6b 01       	movw	r12, r22
     b12:	7c 01       	movw	r14, r24
     b14:	20 e0       	ldi	r18, 0x00	; 0
     b16:	30 e0       	ldi	r19, 0x00	; 0
     b18:	48 ec       	ldi	r20, 0xC8	; 200
     b1a:	52 e4       	ldi	r21, 0x42	; 66
     b1c:	c5 01       	movw	r24, r10
     b1e:	b4 01       	movw	r22, r8
     b20:	df d5       	rcall	.+3006   	; 0x16e0 <__mulsf3>
     b22:	9b 01       	movw	r18, r22
     b24:	ac 01       	movw	r20, r24
     b26:	c7 01       	movw	r24, r14
     b28:	b6 01       	movw	r22, r12
			
			printSD("kalman_angle=",kalman_angle);
     b2a:	33 d4       	rcall	.+2150   	; 0x1392 <__divsf3>
     b2c:	b5 d3       	rcall	.+1898   	; 0x1298 <asin>
     b2e:	4b 01       	movw	r8, r22
     b30:	5c 01       	movw	r10, r24
     b32:	e9 8c       	ldd	r14, Y+25	; 0x19
     b34:	fa 8c       	ldd	r15, Y+26	; 0x1a
			printSD("angle_roll=",angle_roll);
     b36:	0b 8d       	ldd	r16, Y+27	; 0x1b
     b38:	1c 8d       	ldd	r17, Y+28	; 0x1c
     b3a:	29 a1       	ldd	r18, Y+33	; 0x21
     b3c:	3a a1       	ldd	r19, Y+34	; 0x22
     b3e:	4b a1       	ldd	r20, Y+35	; 0x23
     b40:	5c a1       	ldd	r21, Y+36	; 0x24
     b42:	6d 85       	ldd	r22, Y+13	; 0x0d
     b44:	7e 85       	ldd	r23, Y+14	; 0x0e
				
			double xff=angle_roll_acc;
			double final_angleY=(angle_roll*0.996)+(xff*0.004);
     b46:	8f 85       	ldd	r24, Y+15	; 0x0f
     b48:	98 89       	ldd	r25, Y+16	; 0x10
     b4a:	40 dc       	rcall	.-1920   	; 0x3cc <getAngle>
     b4c:	6b 01       	movw	r12, r22
     b4e:	7c 01       	movw	r14, r24
     b50:	ab 01       	movw	r20, r22
     b52:	bc 01       	movw	r22, r24
     b54:	85 e7       	ldi	r24, 0x75	; 117
     b56:	93 e0       	ldi	r25, 0x03	; 3
     b58:	18 d3       	rcall	.+1584   	; 0x118a <printSD>
     b5a:	4d 85       	ldd	r20, Y+13	; 0x0d
     b5c:	5e 85       	ldd	r21, Y+14	; 0x0e
     b5e:	6f 85       	ldd	r22, Y+15	; 0x0f
     b60:	78 89       	ldd	r23, Y+16	; 0x10
     b62:	83 e8       	ldi	r24, 0x83	; 131
     b64:	93 e0       	ldi	r25, 0x03	; 3
     b66:	11 d3       	rcall	.+1570   	; 0x118a <printSD>
     b68:	2b e1       	ldi	r18, 0x1B	; 27
     b6a:	3f e2       	ldi	r19, 0x2F	; 47
     b6c:	45 e6       	ldi	r20, 0x65	; 101
     b6e:	52 ec       	ldi	r21, 0xC2	; 194
     b70:	c5 01       	movw	r24, r10
     b72:	b4 01       	movw	r22, r8
     b74:	b5 d5       	rcall	.+2922   	; 0x16e0 <__mulsf3>
     b76:	2f e6       	ldi	r18, 0x6F	; 111
     b78:	32 e1       	ldi	r19, 0x12	; 18
     b7a:	43 e8       	ldi	r20, 0x83	; 131
     b7c:	5b e3       	ldi	r21, 0x3B	; 59
     b7e:	b0 d5       	rcall	.+2912   	; 0x16e0 <__mulsf3>
     b80:	4b 01       	movw	r8, r22
     b82:	5c 01       	movw	r10, r24
			printSD("final_angleY=",final_angleY);
     b84:	2b ed       	ldi	r18, 0xDB	; 219
     b86:	39 ef       	ldi	r19, 0xF9	; 249
     b88:	4e e7       	ldi	r20, 0x7E	; 126
     b8a:	5f e3       	ldi	r21, 0x3F	; 63
     b8c:	6d 85       	ldd	r22, Y+13	; 0x0d
     b8e:	7e 85       	ldd	r23, Y+14	; 0x0e
			printf("\n");		
     b90:	8f 85       	ldd	r24, Y+15	; 0x0f
     b92:	98 89       	ldd	r25, Y+16	; 0x10
     b94:	a5 d5       	rcall	.+2890   	; 0x16e0 <__mulsf3>
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
     b96:	9b 01       	movw	r18, r22
     b98:	ac 01       	movw	r20, r24
     b9a:	c5 01       	movw	r24, r10
     b9c:	b4 01       	movw	r22, r8
     b9e:	18 d3       	rcall	.+1584   	; 0x11d0 <__addsf3>
     ba0:	4b 01       	movw	r8, r22
     ba2:	5c 01       	movw	r10, r24
     ba4:	ab 01       	movw	r20, r22
     ba6:	bc 01       	movw	r22, r24
     ba8:	8f e8       	ldi	r24, 0x8F	; 143
     baa:	93 e0       	ldi	r25, 0x03	; 3
     bac:	ee d2       	rcall	.+1500   	; 0x118a <printSD>
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     bae:	8a e0       	ldi	r24, 0x0A	; 10
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 a3 11 	call	0x2346	; 0x2346 <putchar>
     bb6:	c7 01       	movw	r24, r14
     bb8:	b6 01       	movw	r22, r12
     bba:	53 d4       	rcall	.+2214   	; 0x1462 <__fixsfsi>
     bbc:	ab 01       	movw	r20, r22
     bbe:	77 23       	and	r23, r23
     bc0:	24 f4       	brge	.+8      	; 0xbca <main+0x448>
     bc2:	44 27       	eor	r20, r20
     bc4:	55 27       	eor	r21, r21
				if (local_motor_delay>2000)
     bc6:	46 1b       	sub	r20, r22
     bc8:	57 0b       	sbc	r21, r23
     bca:	ba 01       	movw	r22, r20
     bcc:	84 ef       	ldi	r24, 0xF4	; 244
				{
					pwm_delay=local_motor_delay;
     bce:	91 e0       	ldi	r25, 0x01	; 1
     bd0:	48 9f       	mul	r20, r24
     bd2:	90 01       	movw	r18, r0
     bd4:	49 9f       	mul	r20, r25
				}
				int16_t reg_ = local_motor_delay;
				//printSI("ocr=",reg_);
				if ((absoulute_y<=0.8) || (final_angleY >90))
     bd6:	30 0d       	add	r19, r0
     bd8:	58 9f       	mul	r21, r24
     bda:	30 0d       	add	r19, r0
     bdc:	11 24       	eor	r1, r1
     bde:	c1 01       	movw	r24, r2
     be0:	82 1b       	sub	r24, r18
     be2:	93 0b       	sbc	r25, r19
     be4:	81 3d       	cpi	r24, 0xD1	; 209
     be6:	27 e0       	ldi	r18, 0x07	; 7
     be8:	92 07       	cpc	r25, r18
     bea:	20 f0       	brcs	.+8      	; 0xbf4 <main+0x472>
     bec:	90 93 b0 03 	sts	0x03B0, r25	; 0x8003b0 <pwm_delay+0x1>
     bf0:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <pwm_delay>
     bf4:	07 2e       	mov	r0, r23
     bf6:	00 0c       	add	r0, r0
     bf8:	88 0b       	sbc	r24, r24
     bfa:	99 0b       	sbc	r25, r25
     bfc:	65 d4       	rcall	.+2250   	; 0x14c8 <__floatsisf>
     bfe:	2d ec       	ldi	r18, 0xCD	; 205
     c00:	3c ec       	ldi	r19, 0xCC	; 204
     c02:	4c e4       	ldi	r20, 0x4C	; 76
     c04:	5f e3       	ldi	r21, 0x3F	; 63
				{
					incr=0;
     c06:	c1 d3       	rcall	.+1922   	; 0x138a <__cmpsf2>
     c08:	18 16       	cp	r1, r24
     c0a:	4c f4       	brge	.+18     	; 0xc1e <main+0x49c>
     c0c:	20 e0       	ldi	r18, 0x00	; 0
     c0e:	30 e0       	ldi	r19, 0x00	; 0
					//printf("\n");	
				}
				else 
					if (final_angleY>0.8)
     c10:	44 eb       	ldi	r20, 0xB4	; 180
     c12:	52 e4       	ldi	r21, 0x42	; 66
     c14:	c5 01       	movw	r24, r10
     c16:	b4 01       	movw	r22, r8
     c18:	58 d5       	rcall	.+2736   	; 0x16ca <__gesf2>
     c1a:	18 16       	cp	r1, r24
     c1c:	2c f4       	brge	.+10     	; 0xc28 <main+0x4a6>
     c1e:	10 92 b4 03 	sts	0x03B4, r1	; 0x8003b4 <incr+0x1>
     c22:	10 92 b3 03 	sts	0x03B3, r1	; 0x8003b3 <incr>
					{
						cli();
						incr=1;
     c26:	30 ce       	rjmp	.-928    	; 0x888 <main+0x106>
     c28:	2d ec       	ldi	r18, 0xCD	; 205
     c2a:	3c ec       	ldi	r19, 0xCC	; 204
     c2c:	4c e4       	ldi	r20, 0x4C	; 76
     c2e:	5f e3       	ldi	r21, 0x3F	; 63
     c30:	c5 01       	movw	r24, r10
						printf(" ");
     c32:	b4 01       	movw	r22, r8
     c34:	4a d5       	rcall	.+2708   	; 0x16ca <__gesf2>
     c36:	18 16       	cp	r1, r24
     c38:	6c f4       	brge	.+26     	; 0xc54 <main+0x4d2>
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" yes\n");					
						sei();
     c3a:	f8 94       	cli
     c3c:	81 e0       	ldi	r24, 0x01	; 1
					}
					else
					{	cli();
     c3e:	90 e0       	ldi	r25, 0x00	; 0
						incr=-1;
     c40:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <incr+0x1>
     c44:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <incr>
     c48:	80 e2       	ldi	r24, 0x20	; 32
     c4a:	90 e0       	ldi	r25, 0x00	; 0
						printf(" ");
     c4c:	0e 94 a3 11 	call	0x2346	; 0x2346 <putchar>
     c50:	78 94       	sei
     c52:	1a ce       	rjmp	.-972    	; 0x888 <main+0x106>
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" no\n");
						sei();
     c54:	f8 94       	cli
     c56:	8f ef       	ldi	r24, 0xFF	; 255
     c58:	9f ef       	ldi	r25, 0xFF	; 255
     c5a:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <incr+0x1>
     c5e:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <incr>
     c62:	80 e2       	ldi	r24, 0x20	; 32
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 a3 11 	call	0x2346	; 0x2346 <putchar>
     c6a:	78 94       	sei
     c6c:	0d ce       	rjmp	.-998    	; 0x888 <main+0x106>

00000c6e <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	d8 2f       	mov	r29, r24
     c74:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     c76:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
     c78:	88 d1       	rcall	.+784    	; 0xf8a <i2c_start>
     c7a:	8d 2f       	mov	r24, r29
	i2c_stop();
     c7c:	dc d1       	rcall	.+952    	; 0x1036 <i2c_write>
     c7e:	8c 2f       	mov	r24, r28
}
     c80:	da d1       	rcall	.+948    	; 0x1036 <i2c_write>
     c82:	c9 d1       	rcall	.+914    	; 0x1016 <i2c_stop>
     c84:	df 91       	pop	r29
     c86:	cf 91       	pop	r28
     c88:	08 95       	ret

00000c8a <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     c8a:	af 92       	push	r10
     c8c:	bf 92       	push	r11
     c8e:	cf 92       	push	r12
     c90:	df 92       	push	r13
     c92:	ff 92       	push	r15
     c94:	0f 93       	push	r16
     c96:	1f 93       	push	r17
     c98:	cf 93       	push	r28
     c9a:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     c9c:	66 23       	and	r22, r22
     c9e:	89 f1       	breq	.+98     	; 0xd02 <mpu6050_readBytes+0x78>
     ca0:	c5 2f       	mov	r28, r21
     ca2:	d4 2f       	mov	r29, r20
     ca4:	f6 2e       	mov	r15, r22
     ca6:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     ca8:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
     caa:	6f d1       	rcall	.+734    	; 0xf8a <i2c_start>
     cac:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cae:	c3 d1       	rcall	.+902    	; 0x1036 <i2c_write>
     cb0:	85 e3       	ldi	r24, 0x35	; 53
     cb2:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     cb4:	f1 f7       	brne	.-4      	; 0xcb2 <mpu6050_readBytes+0x28>
     cb6:	00 00       	nop
     cb8:	81 ed       	ldi	r24, 0xD1	; 209
     cba:	67 d1       	rcall	.+718    	; 0xf8a <i2c_start>
     cbc:	0d 2f       	mov	r16, r29
     cbe:	1c 2f       	mov	r17, r28
     cc0:	cc 24       	eor	r12, r12
     cc2:	ca 94       	dec	r12
     cc4:	cf 0c       	add	r12, r15
     cc6:	d1 2c       	mov	r13, r1
     cc8:	ef ef       	ldi	r30, 0xFF	; 255
     cca:	ce 1a       	sub	r12, r30
     ccc:	de 0a       	sbc	r13, r30
     cce:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     cd0:	d0 e0       	ldi	r29, 0x00	; 0
     cd2:	af 2c       	mov	r10, r15
     cd4:	b1 2c       	mov	r11, r1
     cd6:	f1 e0       	ldi	r31, 0x01	; 1
     cd8:	af 1a       	sub	r10, r31
     cda:	b1 08       	sbc	r11, r1
     cdc:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     cde:	bd 06       	cpc	r11, r29
     ce0:	21 f4       	brne	.+8      	; 0xcea <mpu6050_readBytes+0x60>
     ce2:	e4 d1       	rcall	.+968    	; 0x10ac <i2c_readNak>
     ce4:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     ce6:	80 83       	st	Z, r24
     ce8:	03 c0       	rjmp	.+6      	; 0xcf0 <mpu6050_readBytes+0x66>
     cea:	c6 d1       	rcall	.+908    	; 0x1078 <i2c_readAck>
     cec:	f8 01       	movw	r30, r16
     cee:	80 83       	st	Z, r24
     cf0:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     cf2:	0f 5f       	subi	r16, 0xFF	; 255
     cf4:	1f 4f       	sbci	r17, 0xFF	; 255
     cf6:	cc 15       	cp	r28, r12
     cf8:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     cfa:	81 f7       	brne	.-32     	; 0xcdc <mpu6050_readBytes+0x52>
     cfc:	cf 2d       	mov	r28, r15
     cfe:	8b d1       	rcall	.+790    	; 0x1016 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     d00:	01 c0       	rjmp	.+2      	; 0xd04 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     d02:	c0 e0       	ldi	r28, 0x00	; 0
     d04:	8c 2f       	mov	r24, r28
     d06:	df 91       	pop	r29
     d08:	cf 91       	pop	r28
     d0a:	1f 91       	pop	r17
     d0c:	0f 91       	pop	r16
     d0e:	ff 90       	pop	r15
     d10:	df 90       	pop	r13
     d12:	cf 90       	pop	r12
     d14:	bf 90       	pop	r11
     d16:	af 90       	pop	r10
     d18:	08 95       	ret

00000d1a <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     d1a:	6f 92       	push	r6
     d1c:	7f 92       	push	r7
     d1e:	8f 92       	push	r8
     d20:	9f 92       	push	r9
     d22:	af 92       	push	r10
     d24:	bf 92       	push	r11
     d26:	cf 92       	push	r12
     d28:	df 92       	push	r13
     d2a:	ef 92       	push	r14
     d2c:	ff 92       	push	r15
     d2e:	0f 93       	push	r16
     d30:	1f 93       	push	r17
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	cd b7       	in	r28, 0x3d	; 61
     d38:	de b7       	in	r29, 0x3e	; 62
     d3a:	2e 97       	sbiw	r28, 0x0e	; 14
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	f8 94       	cli
     d40:	de bf       	out	0x3e, r29	; 62
     d42:	0f be       	out	0x3f, r0	; 63
     d44:	cd bf       	out	0x3d, r28	; 61
     d46:	4c 01       	movw	r8, r24
     d48:	5b 01       	movw	r10, r22
     d4a:	6a 01       	movw	r12, r20
     d4c:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     d4e:	ae 01       	movw	r20, r28
     d50:	4f 5f       	subi	r20, 0xFF	; 255
     d52:	5f 4f       	sbci	r21, 0xFF	; 255
     d54:	6e e0       	ldi	r22, 0x0E	; 14
     d56:	8b e3       	ldi	r24, 0x3B	; 59
     d58:	98 df       	rcall	.-208    	; 0xc8a <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     d5a:	89 81       	ldd	r24, Y+1	; 0x01
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	98 2f       	mov	r25, r24
     d60:	88 27       	eor	r24, r24
     d62:	2a 81       	ldd	r18, Y+2	; 0x02
     d64:	82 2b       	or	r24, r18
     d66:	f4 01       	movw	r30, r8
     d68:	91 83       	std	Z+1, r25	; 0x01
     d6a:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     d6c:	8b 81       	ldd	r24, Y+3	; 0x03
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	98 2f       	mov	r25, r24
     d72:	88 27       	eor	r24, r24
     d74:	2c 81       	ldd	r18, Y+4	; 0x04
     d76:	82 2b       	or	r24, r18
     d78:	f5 01       	movw	r30, r10
     d7a:	91 83       	std	Z+1, r25	; 0x01
     d7c:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     d7e:	8d 81       	ldd	r24, Y+5	; 0x05
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	98 2f       	mov	r25, r24
     d84:	88 27       	eor	r24, r24
     d86:	2e 81       	ldd	r18, Y+6	; 0x06
     d88:	82 2b       	or	r24, r18
     d8a:	f6 01       	movw	r30, r12
     d8c:	91 83       	std	Z+1, r25	; 0x01
     d8e:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     d90:	89 85       	ldd	r24, Y+9	; 0x09
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	98 2f       	mov	r25, r24
     d96:	88 27       	eor	r24, r24
     d98:	2a 85       	ldd	r18, Y+10	; 0x0a
     d9a:	82 2b       	or	r24, r18
     d9c:	f3 01       	movw	r30, r6
     d9e:	91 83       	std	Z+1, r25	; 0x01
     da0:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     da2:	8b 85       	ldd	r24, Y+11	; 0x0b
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	98 2f       	mov	r25, r24
     da8:	88 27       	eor	r24, r24
     daa:	2c 85       	ldd	r18, Y+12	; 0x0c
     dac:	82 2b       	or	r24, r18
     dae:	f8 01       	movw	r30, r16
     db0:	91 83       	std	Z+1, r25	; 0x01
     db2:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     db4:	8d 85       	ldd	r24, Y+13	; 0x0d
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	98 2f       	mov	r25, r24
     dba:	88 27       	eor	r24, r24
     dbc:	2e 85       	ldd	r18, Y+14	; 0x0e
     dbe:	82 2b       	or	r24, r18
     dc0:	f7 01       	movw	r30, r14
     dc2:	91 83       	std	Z+1, r25	; 0x01
     dc4:	80 83       	st	Z, r24
     dc6:	2e 96       	adiw	r28, 0x0e	; 14
     dc8:	0f b6       	in	r0, 0x3f	; 63
     dca:	f8 94       	cli
     dcc:	de bf       	out	0x3e, r29	; 62
     dce:	0f be       	out	0x3f, r0	; 63
     dd0:	cd bf       	out	0x3d, r28	; 61
     dd2:	df 91       	pop	r29
     dd4:	cf 91       	pop	r28
     dd6:	1f 91       	pop	r17
     dd8:	0f 91       	pop	r16
     dda:	ff 90       	pop	r15
     ddc:	ef 90       	pop	r14
     dde:	df 90       	pop	r13
     de0:	cf 90       	pop	r12
     de2:	bf 90       	pop	r11
     de4:	af 90       	pop	r10
     de6:	9f 90       	pop	r9
     de8:	8f 90       	pop	r8
     dea:	7f 90       	pop	r7
     dec:	6f 90       	pop	r6
     dee:	08 95       	ret

00000df0 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
     df0:	e1 ea       	ldi	r30, 0xA1	; 161
     df2:	f0 e0       	ldi	r31, 0x00	; 0
     df4:	80 81       	ld	r24, Z
     df6:	81 60       	ori	r24, 0x01	; 1
     df8:	80 83       	st	Z, r24
     dfa:	e0 ea       	ldi	r30, 0xA0	; 160
     dfc:	f0 e0       	ldi	r31, 0x00	; 0
     dfe:	80 81       	ld	r24, Z
     e00:	81 60       	ori	r24, 0x01	; 1
     e02:	80 83       	st	Z, r24
     e04:	80 81       	ld	r24, Z
     e06:	80 68       	ori	r24, 0x80	; 128
     e08:	80 83       	st	Z, r24
     e0a:	80 81       	ld	r24, Z
     e0c:	80 62       	ori	r24, 0x20	; 32
     e0e:	80 83       	st	Z, r24
     e10:	80 81       	ld	r24, Z
     e12:	88 60       	ori	r24, 0x08	; 8
     e14:	80 83       	st	Z, r24
     e16:	08 95       	ret

00000e18 <setup_timer5>:
     e18:	e1 e2       	ldi	r30, 0x21	; 33
     e1a:	f1 e0       	ldi	r31, 0x01	; 1
     e1c:	80 81       	ld	r24, Z
     e1e:	81 60       	ori	r24, 0x01	; 1
     e20:	80 83       	st	Z, r24
     e22:	80 81       	ld	r24, Z
     e24:	88 60       	ori	r24, 0x08	; 8
     e26:	80 83       	st	Z, r24
     e28:	08 95       	ret

00000e2a <Enable_timer5_compare_interrupt>:
     e2a:	e3 e7       	ldi	r30, 0x73	; 115
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	80 81       	ld	r24, Z
     e30:	82 60       	ori	r24, 0x02	; 2
     e32:	80 83       	st	Z, r24
     e34:	08 95       	ret

00000e36 <setup_timer0>:
     e36:	85 b5       	in	r24, 0x25	; 37
     e38:	81 60       	ori	r24, 0x01	; 1
     e3a:	85 bd       	out	0x25, r24	; 37
     e3c:	85 b5       	in	r24, 0x25	; 37
     e3e:	82 60       	ori	r24, 0x02	; 2
     e40:	85 bd       	out	0x25, r24	; 37
     e42:	08 95       	ret

00000e44 <Enable_timer0_overflow_interrupt>:
     e44:	ee e6       	ldi	r30, 0x6E	; 110
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	81 60       	ori	r24, 0x01	; 1
     e4c:	80 83       	st	Z, r24
     e4e:	08 95       	ret

00000e50 <micros>:
     e50:	3f b7       	in	r19, 0x3f	; 63
     e52:	f8 94       	cli
     e54:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <timer0_overflow_count>
     e58:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <timer0_overflow_count+0x1>
     e5c:	a0 91 ad 03 	lds	r26, 0x03AD	; 0x8003ad <timer0_overflow_count+0x2>
     e60:	b0 91 ae 03 	lds	r27, 0x03AE	; 0x8003ae <timer0_overflow_count+0x3>
     e64:	26 b5       	in	r18, 0x26	; 38
     e66:	a8 9b       	sbis	0x15, 0	; 21
     e68:	05 c0       	rjmp	.+10     	; 0xe74 <micros+0x24>
     e6a:	2f 3f       	cpi	r18, 0xFF	; 255
     e6c:	19 f0       	breq	.+6      	; 0xe74 <micros+0x24>
     e6e:	01 96       	adiw	r24, 0x01	; 1
     e70:	a1 1d       	adc	r26, r1
     e72:	b1 1d       	adc	r27, r1
     e74:	3f bf       	out	0x3f, r19	; 63
     e76:	ba 2f       	mov	r27, r26
     e78:	a9 2f       	mov	r26, r25
     e7a:	98 2f       	mov	r25, r24
     e7c:	88 27       	eor	r24, r24
     e7e:	82 0f       	add	r24, r18
     e80:	91 1d       	adc	r25, r1
     e82:	a1 1d       	adc	r26, r1
     e84:	b1 1d       	adc	r27, r1
     e86:	bc 01       	movw	r22, r24
     e88:	cd 01       	movw	r24, r26
     e8a:	66 0f       	add	r22, r22
     e8c:	77 1f       	adc	r23, r23
     e8e:	88 1f       	adc	r24, r24
     e90:	99 1f       	adc	r25, r25
     e92:	66 0f       	add	r22, r22
     e94:	77 1f       	adc	r23, r23
     e96:	88 1f       	adc	r24, r24
     e98:	99 1f       	adc	r25, r25
     e9a:	08 95       	ret

00000e9c <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
     e9c:	1f 92       	push	r1
     e9e:	0f 92       	push	r0
     ea0:	0f b6       	in	r0, 0x3f	; 63
     ea2:	0f 92       	push	r0
     ea4:	11 24       	eor	r1, r1
     ea6:	2f 93       	push	r18
     ea8:	3f 93       	push	r19
     eaa:	8f 93       	push	r24
     eac:	9f 93       	push	r25
     eae:	af 93       	push	r26
     eb0:	bf 93       	push	r27
	unsigned long m = timer0_millis;
     eb2:	80 91 a7 03 	lds	r24, 0x03A7	; 0x8003a7 <timer0_millis>
     eb6:	90 91 a8 03 	lds	r25, 0x03A8	; 0x8003a8 <timer0_millis+0x1>
     eba:	a0 91 a9 03 	lds	r26, 0x03A9	; 0x8003a9 <timer0_millis+0x2>
     ebe:	b0 91 aa 03 	lds	r27, 0x03AA	; 0x8003aa <timer0_millis+0x3>
	unsigned char f = timer0_fract;
     ec2:	30 91 a6 03 	lds	r19, 0x03A6	; 0x8003a6 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
     ec6:	23 e0       	ldi	r18, 0x03	; 3
     ec8:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
     eca:	2d 37       	cpi	r18, 0x7D	; 125
     ecc:	20 f4       	brcc	.+8      	; 0xed6 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
     ece:	01 96       	adiw	r24, 0x01	; 1
     ed0:	a1 1d       	adc	r26, r1
     ed2:	b1 1d       	adc	r27, r1
     ed4:	05 c0       	rjmp	.+10     	; 0xee0 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
     ed6:	26 e8       	ldi	r18, 0x86	; 134
     ed8:	23 0f       	add	r18, r19
		m += 1;
     eda:	02 96       	adiw	r24, 0x02	; 2
     edc:	a1 1d       	adc	r26, r1
     ede:	b1 1d       	adc	r27, r1
	}


	timer0_fract = f;
     ee0:	20 93 a6 03 	sts	0x03A6, r18	; 0x8003a6 <timer0_fract>
	timer0_millis = m;
     ee4:	80 93 a7 03 	sts	0x03A7, r24	; 0x8003a7 <timer0_millis>
     ee8:	90 93 a8 03 	sts	0x03A8, r25	; 0x8003a8 <timer0_millis+0x1>
     eec:	a0 93 a9 03 	sts	0x03A9, r26	; 0x8003a9 <timer0_millis+0x2>
     ef0:	b0 93 aa 03 	sts	0x03AA, r27	; 0x8003aa <timer0_millis+0x3>
	timer0_overflow_count++;
     ef4:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <timer0_overflow_count>
     ef8:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <timer0_overflow_count+0x1>
     efc:	a0 91 ad 03 	lds	r26, 0x03AD	; 0x8003ad <timer0_overflow_count+0x2>
     f00:	b0 91 ae 03 	lds	r27, 0x03AE	; 0x8003ae <timer0_overflow_count+0x3>
     f04:	01 96       	adiw	r24, 0x01	; 1
     f06:	a1 1d       	adc	r26, r1
     f08:	b1 1d       	adc	r27, r1
     f0a:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <timer0_overflow_count>
     f0e:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <timer0_overflow_count+0x1>
     f12:	a0 93 ad 03 	sts	0x03AD, r26	; 0x8003ad <timer0_overflow_count+0x2>
     f16:	b0 93 ae 03 	sts	0x03AE, r27	; 0x8003ae <timer0_overflow_count+0x3>
}
     f1a:	bf 91       	pop	r27
     f1c:	af 91       	pop	r26
     f1e:	9f 91       	pop	r25
     f20:	8f 91       	pop	r24
     f22:	3f 91       	pop	r19
     f24:	2f 91       	pop	r18
     f26:	0f 90       	pop	r0
     f28:	0f be       	out	0x3f, r0	; 63
     f2a:	0f 90       	pop	r0
     f2c:	1f 90       	pop	r1
     f2e:	18 95       	reti

00000f30 <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
     f30:	1f 92       	push	r1
     f32:	0f 92       	push	r0
     f34:	0f b6       	in	r0, 0x3f	; 63
     f36:	0f 92       	push	r0
     f38:	11 24       	eor	r1, r1
     f3a:	0b b6       	in	r0, 0x3b	; 59
     f3c:	0f 92       	push	r0
     f3e:	2f 93       	push	r18
     f40:	3f 93       	push	r19
     f42:	4f 93       	push	r20
     f44:	5f 93       	push	r21
     f46:	6f 93       	push	r22
     f48:	7f 93       	push	r23
     f4a:	8f 93       	push	r24
     f4c:	9f 93       	push	r25
     f4e:	af 93       	push	r26
     f50:	bf 93       	push	r27
     f52:	ef 93       	push	r30
	PWM_update();
     f54:	ff 93       	push	r31
     f56:	b8 d9       	rcall	.-3216   	; 0x2c8 <PWM_update>
     f58:	ff 91       	pop	r31
     f5a:	ef 91       	pop	r30
     f5c:	bf 91       	pop	r27
     f5e:	af 91       	pop	r26
     f60:	9f 91       	pop	r25
     f62:	8f 91       	pop	r24
     f64:	7f 91       	pop	r23
     f66:	6f 91       	pop	r22
     f68:	5f 91       	pop	r21
     f6a:	4f 91       	pop	r20
     f6c:	3f 91       	pop	r19
     f6e:	2f 91       	pop	r18
     f70:	0f 90       	pop	r0
     f72:	0b be       	out	0x3b, r0	; 59
     f74:	0f 90       	pop	r0
     f76:	0f be       	out	0x3f, r0	; 63
     f78:	0f 90       	pop	r0
     f7a:	1f 90       	pop	r1
     f7c:	18 95       	reti

00000f7e <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     f7e:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     f82:	8c e0       	ldi	r24, 0x0C	; 12
     f84:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     f88:	08 95       	ret

00000f8a <i2c_start>:
     f8a:	94 ea       	ldi	r25, 0xA4	; 164
     f8c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     f90:	4f ef       	ldi	r20, 0xFF	; 255
     f92:	50 e0       	ldi	r21, 0x00	; 0
     f94:	60 e0       	ldi	r22, 0x00	; 0
     f96:	70 e0       	ldi	r23, 0x00	; 0
     f98:	ec eb       	ldi	r30, 0xBC	; 188
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	90 81       	ld	r25, Z
     f9e:	99 23       	and	r25, r25
     fa0:	34 f0       	brlt	.+12     	; 0xfae <i2c_start+0x24>
     fa2:	41 50       	subi	r20, 0x01	; 1
     fa4:	51 09       	sbc	r21, r1
     fa6:	61 09       	sbc	r22, r1
     fa8:	71 09       	sbc	r23, r1
     faa:	c0 f7       	brcc	.-16     	; 0xf9c <i2c_start+0x12>
     fac:	04 c0       	rjmp	.+8      	; 0xfb6 <i2c_start+0x2c>
     fae:	45 2b       	or	r20, r21
     fb0:	46 2b       	or	r20, r22
     fb2:	47 2b       	or	r20, r23
     fb4:	41 f1       	breq	.+80     	; 0x1006 <i2c_start+0x7c>
     fb6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     fba:	98 7f       	andi	r25, 0xF8	; 248
     fbc:	98 30       	cpi	r25, 0x08	; 8
     fbe:	11 f0       	breq	.+4      	; 0xfc4 <i2c_start+0x3a>
     fc0:	90 31       	cpi	r25, 0x10	; 16
     fc2:	19 f5       	brne	.+70     	; 0x100a <i2c_start+0x80>
     fc4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     fc8:	84 e8       	ldi	r24, 0x84	; 132
     fca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     fce:	8f ef       	ldi	r24, 0xFF	; 255
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	a0 e0       	ldi	r26, 0x00	; 0
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	ec eb       	ldi	r30, 0xBC	; 188
     fd8:	f0 e0       	ldi	r31, 0x00	; 0
     fda:	20 81       	ld	r18, Z
     fdc:	22 23       	and	r18, r18
     fde:	2c f0       	brlt	.+10     	; 0xfea <i2c_start+0x60>
     fe0:	01 97       	sbiw	r24, 0x01	; 1
     fe2:	a1 09       	sbc	r26, r1
     fe4:	b1 09       	sbc	r27, r1
     fe6:	c8 f7       	brcc	.-14     	; 0xfda <i2c_start+0x50>
     fe8:	04 c0       	rjmp	.+8      	; 0xff2 <i2c_start+0x68>
     fea:	89 2b       	or	r24, r25
     fec:	8a 2b       	or	r24, r26
     fee:	8b 2b       	or	r24, r27
     ff0:	71 f0       	breq	.+28     	; 0x100e <i2c_start+0x84>
     ff2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     ff6:	98 7f       	andi	r25, 0xF8	; 248
     ff8:	98 31       	cpi	r25, 0x18	; 24
     ffa:	59 f0       	breq	.+22     	; 0x1012 <i2c_start+0x88>
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	90 34       	cpi	r25, 0x40	; 64
    1000:	49 f4       	brne	.+18     	; 0x1014 <i2c_start+0x8a>
    1002:	80 e0       	ldi	r24, 0x00	; 0
    1004:	08 95       	ret
    1006:	81 e0       	ldi	r24, 0x01	; 1
    1008:	08 95       	ret
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	08 95       	ret
    100e:	81 e0       	ldi	r24, 0x01	; 1
    1010:	08 95       	ret
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	08 95       	ret

00001016 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    1016:	84 e9       	ldi	r24, 0x94	; 148
    1018:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	ec eb       	ldi	r30, 0xBC	; 188
    1022:	f0 e0       	ldi	r31, 0x00	; 0
    1024:	20 81       	ld	r18, Z
    1026:	24 ff       	sbrs	r18, 4
    1028:	05 c0       	rjmp	.+10     	; 0x1034 <i2c_stop+0x1e>
    102a:	01 96       	adiw	r24, 0x01	; 1
    102c:	81 15       	cp	r24, r1
    102e:	21 e0       	ldi	r18, 0x01	; 1
    1030:	92 07       	cpc	r25, r18
    1032:	c1 f7       	brne	.-16     	; 0x1024 <i2c_stop+0xe>
    1034:	08 95       	ret

00001036 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    1036:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    103a:	84 e8       	ldi	r24, 0x84	; 132
    103c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    1040:	8f ef       	ldi	r24, 0xFF	; 255
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	a0 e0       	ldi	r26, 0x00	; 0
    1046:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1048:	ec eb       	ldi	r30, 0xBC	; 188
    104a:	f0 e0       	ldi	r31, 0x00	; 0
    104c:	20 81       	ld	r18, Z
    104e:	22 23       	and	r18, r18
    1050:	2c f0       	brlt	.+10     	; 0x105c <i2c_write+0x26>
    1052:	01 97       	sbiw	r24, 0x01	; 1
    1054:	a1 09       	sbc	r26, r1
    1056:	b1 09       	sbc	r27, r1
    1058:	c8 f7       	brcc	.-14     	; 0x104c <i2c_write+0x16>
    105a:	04 c0       	rjmp	.+8      	; 0x1064 <i2c_write+0x2e>
	if(i2c_timer == 0)
    105c:	89 2b       	or	r24, r25
    105e:	8a 2b       	or	r24, r26
    1060:	8b 2b       	or	r24, r27
    1062:	41 f0       	breq	.+16     	; 0x1074 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    1064:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    1068:	98 7f       	andi	r25, 0xF8	; 248
    106a:	81 e0       	ldi	r24, 0x01	; 1
    106c:	98 32       	cpi	r25, 0x28	; 40
    106e:	19 f4       	brne	.+6      	; 0x1076 <i2c_write+0x40>
    1070:	80 e0       	ldi	r24, 0x00	; 0
    1072:	08 95       	ret
    1074:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    1076:	08 95       	ret

00001078 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    1078:	84 ec       	ldi	r24, 0xC4	; 196
    107a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    107e:	8f ef       	ldi	r24, 0xFF	; 255
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	a0 e0       	ldi	r26, 0x00	; 0
    1084:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1086:	ec eb       	ldi	r30, 0xBC	; 188
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	20 81       	ld	r18, Z
    108c:	22 23       	and	r18, r18
    108e:	2c f0       	brlt	.+10     	; 0x109a <i2c_readAck+0x22>
    1090:	01 97       	sbiw	r24, 0x01	; 1
    1092:	a1 09       	sbc	r26, r1
    1094:	b1 09       	sbc	r27, r1
    1096:	c8 f7       	brcc	.-14     	; 0x108a <i2c_readAck+0x12>
    1098:	04 c0       	rjmp	.+8      	; 0x10a2 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    109a:	89 2b       	or	r24, r25
    109c:	8a 2b       	or	r24, r26
    109e:	8b 2b       	or	r24, r27
    10a0:	19 f0       	breq	.+6      	; 0x10a8 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    10a2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    10a6:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    10a8:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    10aa:	08 95       	ret

000010ac <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    10ac:	84 e8       	ldi	r24, 0x84	; 132
    10ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    10b2:	8f ef       	ldi	r24, 0xFF	; 255
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	a0 e0       	ldi	r26, 0x00	; 0
    10b8:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    10ba:	ec eb       	ldi	r30, 0xBC	; 188
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	20 81       	ld	r18, Z
    10c0:	22 23       	and	r18, r18
    10c2:	2c f0       	brlt	.+10     	; 0x10ce <i2c_readNak+0x22>
    10c4:	01 97       	sbiw	r24, 0x01	; 1
    10c6:	a1 09       	sbc	r26, r1
    10c8:	b1 09       	sbc	r27, r1
    10ca:	c8 f7       	brcc	.-14     	; 0x10be <i2c_readNak+0x12>
    10cc:	04 c0       	rjmp	.+8      	; 0x10d6 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    10ce:	89 2b       	or	r24, r25
    10d0:	8a 2b       	or	r24, r26
    10d2:	8b 2b       	or	r24, r27
    10d4:	19 f0       	breq	.+6      	; 0x10dc <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    10d6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    10da:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    10dc:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    10de:	08 95       	ret

000010e0 <USART_Init>:
{
	printf(c);
	//printf(" ");
	print16(&intToPrint);
	printf("  ");
}
    10e0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    10e4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    10e8:	88 e0       	ldi	r24, 0x08	; 8
    10ea:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    10ee:	8e e0       	ldi	r24, 0x0E	; 14
    10f0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    10f4:	08 95       	ret

000010f6 <uart_putchar>:
    10f6:	cf 93       	push	r28
    10f8:	c8 2f       	mov	r28, r24
    10fa:	8a 30       	cpi	r24, 0x0A	; 10
    10fc:	11 f4       	brne	.+4      	; 0x1102 <uart_putchar+0xc>
    10fe:	8d e0       	ldi	r24, 0x0D	; 13
    1100:	fa df       	rcall	.-12     	; 0x10f6 <uart_putchar>
    1102:	e0 ec       	ldi	r30, 0xC0	; 192
    1104:	f0 e0       	ldi	r31, 0x00	; 0
    1106:	80 81       	ld	r24, Z
    1108:	85 ff       	sbrs	r24, 5
    110a:	fd cf       	rjmp	.-6      	; 0x1106 <uart_putchar+0x10>
    110c:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	cf 91       	pop	r28
    1116:	08 95       	ret

00001118 <printDouble>:
void printDouble(double *value)
{
    1118:	0f 93       	push	r16
    111a:	1f 93       	push	r17
    111c:	cf 93       	push	r28
    111e:	df 93       	push	r29
    1120:	cd b7       	in	r28, 0x3d	; 61
    1122:	de b7       	in	r29, 0x3e	; 62
    1124:	64 97       	sbiw	r28, 0x14	; 20
    1126:	0f b6       	in	r0, 0x3f	; 63
    1128:	f8 94       	cli
    112a:	de bf       	out	0x3e, r29	; 62
    112c:	0f be       	out	0x3f, r0	; 63
    112e:	cd bf       	out	0x3d, r28	; 61
    1130:	fc 01       	movw	r30, r24
	char c[20]={0};
    1132:	8e 01       	movw	r16, r28
    1134:	0f 5f       	subi	r16, 0xFF	; 255
    1136:	1f 4f       	sbci	r17, 0xFF	; 255
    1138:	84 e1       	ldi	r24, 0x14	; 20
    113a:	d8 01       	movw	r26, r16
    113c:	1d 92       	st	X+, r1
    113e:	8a 95       	dec	r24
    1140:	e9 f7       	brne	.-6      	; 0x113c <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    1142:	83 81       	ldd	r24, Z+3	; 0x03
    1144:	8f 93       	push	r24
    1146:	82 81       	ldd	r24, Z+2	; 0x02
    1148:	8f 93       	push	r24
    114a:	81 81       	ldd	r24, Z+1	; 0x01
    114c:	8f 93       	push	r24
    114e:	80 81       	ld	r24, Z
    1150:	8f 93       	push	r24
    1152:	80 ea       	ldi	r24, 0xA0	; 160
    1154:	93 e0       	ldi	r25, 0x03	; 3
    1156:	9f 93       	push	r25
    1158:	8f 93       	push	r24
    115a:	1f 93       	push	r17
    115c:	0f 93       	push	r16
    115e:	0e 94 a8 11 	call	0x2350	; 0x2350 <sprintf>
	printf(c);
    1162:	1f 93       	push	r17
    1164:	0f 93       	push	r16
    1166:	0e 94 90 11 	call	0x2320	; 0x2320 <printf>
}
    116a:	0f b6       	in	r0, 0x3f	; 63
    116c:	f8 94       	cli
    116e:	de bf       	out	0x3e, r29	; 62
    1170:	0f be       	out	0x3f, r0	; 63
    1172:	cd bf       	out	0x3d, r28	; 61
    1174:	64 96       	adiw	r28, 0x14	; 20
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	df 91       	pop	r29
    1182:	cf 91       	pop	r28
    1184:	1f 91       	pop	r17
    1186:	0f 91       	pop	r16
    1188:	08 95       	ret

0000118a <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    118a:	cf 93       	push	r28
    118c:	df 93       	push	r29
    118e:	00 d0       	rcall	.+0      	; 0x1190 <printSD+0x6>
    1190:	1f 92       	push	r1
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
    1196:	49 83       	std	Y+1, r20	; 0x01
    1198:	5a 83       	std	Y+2, r21	; 0x02
    119a:	6b 83       	std	Y+3, r22	; 0x03
    119c:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    119e:	9f 93       	push	r25
    11a0:	8f 93       	push	r24
    11a2:	0e 94 90 11 	call	0x2320	; 0x2320 <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    11a6:	ce 01       	movw	r24, r28
    11a8:	01 96       	adiw	r24, 0x01	; 1
    11aa:	b6 df       	rcall	.-148    	; 0x1118 <printDouble>
	printf("  ");
    11ac:	8d e9       	ldi	r24, 0x9D	; 157
    11ae:	93 e0       	ldi	r25, 0x03	; 3
    11b0:	9f 93       	push	r25
    11b2:	8f 93       	push	r24
    11b4:	0e 94 90 11 	call	0x2320	; 0x2320 <printf>
    11b8:	0f 90       	pop	r0
    11ba:	0f 90       	pop	r0
    11bc:	0f 90       	pop	r0
    11be:	0f 90       	pop	r0
    11c0:	0f 90       	pop	r0
    11c2:	0f 90       	pop	r0
    11c4:	0f 90       	pop	r0
    11c6:	0f 90       	pop	r0
    11c8:	df 91       	pop	r29
    11ca:	cf 91       	pop	r28
    11cc:	08 95       	ret

000011ce <__subsf3>:
    11ce:	50 58       	subi	r21, 0x80	; 128

000011d0 <__addsf3>:
    11d0:	bb 27       	eor	r27, r27
    11d2:	aa 27       	eor	r26, r26
    11d4:	0e d0       	rcall	.+28     	; 0x11f2 <__addsf3x>
    11d6:	3f c2       	rjmp	.+1150   	; 0x1656 <__fp_round>
    11d8:	30 d2       	rcall	.+1120   	; 0x163a <__fp_pscA>
    11da:	30 f0       	brcs	.+12     	; 0x11e8 <__addsf3+0x18>
    11dc:	35 d2       	rcall	.+1130   	; 0x1648 <__fp_pscB>
    11de:	20 f0       	brcs	.+8      	; 0x11e8 <__addsf3+0x18>
    11e0:	31 f4       	brne	.+12     	; 0x11ee <__addsf3+0x1e>
    11e2:	9f 3f       	cpi	r25, 0xFF	; 255
    11e4:	11 f4       	brne	.+4      	; 0x11ea <__addsf3+0x1a>
    11e6:	1e f4       	brtc	.+6      	; 0x11ee <__addsf3+0x1e>
    11e8:	ef c1       	rjmp	.+990    	; 0x15c8 <__fp_nan>
    11ea:	0e f4       	brtc	.+2      	; 0x11ee <__addsf3+0x1e>
    11ec:	e0 95       	com	r30
    11ee:	e7 fb       	bst	r30, 7
    11f0:	e5 c1       	rjmp	.+970    	; 0x15bc <__fp_inf>

000011f2 <__addsf3x>:
    11f2:	e9 2f       	mov	r30, r25
    11f4:	41 d2       	rcall	.+1154   	; 0x1678 <__fp_split3>
    11f6:	80 f3       	brcs	.-32     	; 0x11d8 <__addsf3+0x8>
    11f8:	ba 17       	cp	r27, r26
    11fa:	62 07       	cpc	r22, r18
    11fc:	73 07       	cpc	r23, r19
    11fe:	84 07       	cpc	r24, r20
    1200:	95 07       	cpc	r25, r21
    1202:	18 f0       	brcs	.+6      	; 0x120a <__addsf3x+0x18>
    1204:	71 f4       	brne	.+28     	; 0x1222 <__addsf3x+0x30>
    1206:	9e f5       	brtc	.+102    	; 0x126e <__addsf3x+0x7c>
    1208:	59 c2       	rjmp	.+1202   	; 0x16bc <__fp_zero>
    120a:	0e f4       	brtc	.+2      	; 0x120e <__addsf3x+0x1c>
    120c:	e0 95       	com	r30
    120e:	0b 2e       	mov	r0, r27
    1210:	ba 2f       	mov	r27, r26
    1212:	a0 2d       	mov	r26, r0
    1214:	0b 01       	movw	r0, r22
    1216:	b9 01       	movw	r22, r18
    1218:	90 01       	movw	r18, r0
    121a:	0c 01       	movw	r0, r24
    121c:	ca 01       	movw	r24, r20
    121e:	a0 01       	movw	r20, r0
    1220:	11 24       	eor	r1, r1
    1222:	ff 27       	eor	r31, r31
    1224:	59 1b       	sub	r21, r25
    1226:	99 f0       	breq	.+38     	; 0x124e <__addsf3x+0x5c>
    1228:	59 3f       	cpi	r21, 0xF9	; 249
    122a:	50 f4       	brcc	.+20     	; 0x1240 <__addsf3x+0x4e>
    122c:	50 3e       	cpi	r21, 0xE0	; 224
    122e:	68 f1       	brcs	.+90     	; 0x128a <__addsf3x+0x98>
    1230:	1a 16       	cp	r1, r26
    1232:	f0 40       	sbci	r31, 0x00	; 0
    1234:	a2 2f       	mov	r26, r18
    1236:	23 2f       	mov	r18, r19
    1238:	34 2f       	mov	r19, r20
    123a:	44 27       	eor	r20, r20
    123c:	58 5f       	subi	r21, 0xF8	; 248
    123e:	f3 cf       	rjmp	.-26     	; 0x1226 <__addsf3x+0x34>
    1240:	46 95       	lsr	r20
    1242:	37 95       	ror	r19
    1244:	27 95       	ror	r18
    1246:	a7 95       	ror	r26
    1248:	f0 40       	sbci	r31, 0x00	; 0
    124a:	53 95       	inc	r21
    124c:	c9 f7       	brne	.-14     	; 0x1240 <__addsf3x+0x4e>
    124e:	7e f4       	brtc	.+30     	; 0x126e <__addsf3x+0x7c>
    1250:	1f 16       	cp	r1, r31
    1252:	ba 0b       	sbc	r27, r26
    1254:	62 0b       	sbc	r22, r18
    1256:	73 0b       	sbc	r23, r19
    1258:	84 0b       	sbc	r24, r20
    125a:	ba f0       	brmi	.+46     	; 0x128a <__addsf3x+0x98>
    125c:	91 50       	subi	r25, 0x01	; 1
    125e:	a1 f0       	breq	.+40     	; 0x1288 <__addsf3x+0x96>
    1260:	ff 0f       	add	r31, r31
    1262:	bb 1f       	adc	r27, r27
    1264:	66 1f       	adc	r22, r22
    1266:	77 1f       	adc	r23, r23
    1268:	88 1f       	adc	r24, r24
    126a:	c2 f7       	brpl	.-16     	; 0x125c <__addsf3x+0x6a>
    126c:	0e c0       	rjmp	.+28     	; 0x128a <__addsf3x+0x98>
    126e:	ba 0f       	add	r27, r26
    1270:	62 1f       	adc	r22, r18
    1272:	73 1f       	adc	r23, r19
    1274:	84 1f       	adc	r24, r20
    1276:	48 f4       	brcc	.+18     	; 0x128a <__addsf3x+0x98>
    1278:	87 95       	ror	r24
    127a:	77 95       	ror	r23
    127c:	67 95       	ror	r22
    127e:	b7 95       	ror	r27
    1280:	f7 95       	ror	r31
    1282:	9e 3f       	cpi	r25, 0xFE	; 254
    1284:	08 f0       	brcs	.+2      	; 0x1288 <__addsf3x+0x96>
    1286:	b3 cf       	rjmp	.-154    	; 0x11ee <__addsf3+0x1e>
    1288:	93 95       	inc	r25
    128a:	88 0f       	add	r24, r24
    128c:	08 f0       	brcs	.+2      	; 0x1290 <__addsf3x+0x9e>
    128e:	99 27       	eor	r25, r25
    1290:	ee 0f       	add	r30, r30
    1292:	97 95       	ror	r25
    1294:	87 95       	ror	r24
    1296:	08 95       	ret

00001298 <asin>:
    1298:	9f 93       	push	r25
    129a:	9f 77       	andi	r25, 0x7F	; 127
    129c:	ee e3       	ldi	r30, 0x3E	; 62
    129e:	89 37       	cpi	r24, 0x79	; 121
    12a0:	9e 07       	cpc	r25, r30
    12a2:	20 f4       	brcc	.+8      	; 0x12ac <asin+0x14>
    12a4:	e4 ee       	ldi	r30, 0xE4	; 228
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	b7 d1       	rcall	.+878    	; 0x1618 <__fp_powsodd>
    12aa:	09 c0       	rjmp	.+18     	; 0x12be <asin+0x26>
    12ac:	48 d1       	rcall	.+656    	; 0x153e <__fp_arccos>
    12ae:	90 58       	subi	r25, 0x80	; 128
    12b0:	a2 ea       	ldi	r26, 0xA2	; 162
    12b2:	2a ed       	ldi	r18, 0xDA	; 218
    12b4:	3f e0       	ldi	r19, 0x0F	; 15
    12b6:	49 ec       	ldi	r20, 0xC9	; 201
    12b8:	5f e3       	ldi	r21, 0x3F	; 63
    12ba:	9b df       	rcall	.-202    	; 0x11f2 <__addsf3x>
    12bc:	cc d1       	rcall	.+920    	; 0x1656 <__fp_round>
    12be:	0f 90       	pop	r0
    12c0:	07 fc       	sbrc	r0, 7
    12c2:	90 58       	subi	r25, 0x80	; 128
    12c4:	08 95       	ret
    12c6:	b9 d1       	rcall	.+882    	; 0x163a <__fp_pscA>
    12c8:	58 f0       	brcs	.+22     	; 0x12e0 <asin+0x48>
    12ca:	80 e8       	ldi	r24, 0x80	; 128
    12cc:	91 e0       	ldi	r25, 0x01	; 1
    12ce:	09 f4       	brne	.+2      	; 0x12d2 <asin+0x3a>
    12d0:	9e ef       	ldi	r25, 0xFE	; 254
    12d2:	ba d1       	rcall	.+884    	; 0x1648 <__fp_pscB>
    12d4:	28 f0       	brcs	.+10     	; 0x12e0 <asin+0x48>
    12d6:	40 e8       	ldi	r20, 0x80	; 128
    12d8:	51 e0       	ldi	r21, 0x01	; 1
    12da:	59 f4       	brne	.+22     	; 0x12f2 <atan2+0xe>
    12dc:	5e ef       	ldi	r21, 0xFE	; 254
    12de:	09 c0       	rjmp	.+18     	; 0x12f2 <atan2+0xe>
    12e0:	73 c1       	rjmp	.+742    	; 0x15c8 <__fp_nan>
    12e2:	ec c1       	rjmp	.+984    	; 0x16bc <__fp_zero>

000012e4 <atan2>:
    12e4:	e9 2f       	mov	r30, r25
    12e6:	e0 78       	andi	r30, 0x80	; 128
    12e8:	c7 d1       	rcall	.+910    	; 0x1678 <__fp_split3>
    12ea:	68 f3       	brcs	.-38     	; 0x12c6 <asin+0x2e>
    12ec:	09 2e       	mov	r0, r25
    12ee:	05 2a       	or	r0, r21
    12f0:	c1 f3       	breq	.-16     	; 0x12e2 <asin+0x4a>
    12f2:	26 17       	cp	r18, r22
    12f4:	37 07       	cpc	r19, r23
    12f6:	48 07       	cpc	r20, r24
    12f8:	59 07       	cpc	r21, r25
    12fa:	38 f0       	brcs	.+14     	; 0x130a <atan2+0x26>
    12fc:	0e 2e       	mov	r0, r30
    12fe:	07 f8       	bld	r0, 7
    1300:	e0 25       	eor	r30, r0
    1302:	69 f0       	breq	.+26     	; 0x131e <atan2+0x3a>
    1304:	e0 25       	eor	r30, r0
    1306:	e0 64       	ori	r30, 0x40	; 64
    1308:	0a c0       	rjmp	.+20     	; 0x131e <atan2+0x3a>
    130a:	ef 63       	ori	r30, 0x3F	; 63
    130c:	07 f8       	bld	r0, 7
    130e:	00 94       	com	r0
    1310:	07 fa       	bst	r0, 7
    1312:	db 01       	movw	r26, r22
    1314:	b9 01       	movw	r22, r18
    1316:	9d 01       	movw	r18, r26
    1318:	dc 01       	movw	r26, r24
    131a:	ca 01       	movw	r24, r20
    131c:	ad 01       	movw	r20, r26
    131e:	ef 93       	push	r30
    1320:	47 d0       	rcall	.+142    	; 0x13b0 <__divsf3_pse>
    1322:	99 d1       	rcall	.+818    	; 0x1656 <__fp_round>
    1324:	0a d0       	rcall	.+20     	; 0x133a <atan>
    1326:	5f 91       	pop	r21
    1328:	55 23       	and	r21, r21
    132a:	31 f0       	breq	.+12     	; 0x1338 <atan2+0x54>
    132c:	2b ed       	ldi	r18, 0xDB	; 219
    132e:	3f e0       	ldi	r19, 0x0F	; 15
    1330:	49 e4       	ldi	r20, 0x49	; 73
    1332:	50 fd       	sbrc	r21, 0
    1334:	49 ec       	ldi	r20, 0xC9	; 201
    1336:	4c cf       	rjmp	.-360    	; 0x11d0 <__addsf3>
    1338:	08 95       	ret

0000133a <atan>:
    133a:	df 93       	push	r29
    133c:	dd 27       	eor	r29, r29
    133e:	b9 2f       	mov	r27, r25
    1340:	bf 77       	andi	r27, 0x7F	; 127
    1342:	40 e8       	ldi	r20, 0x80	; 128
    1344:	5f e3       	ldi	r21, 0x3F	; 63
    1346:	16 16       	cp	r1, r22
    1348:	17 06       	cpc	r1, r23
    134a:	48 07       	cpc	r20, r24
    134c:	5b 07       	cpc	r21, r27
    134e:	10 f4       	brcc	.+4      	; 0x1354 <atan+0x1a>
    1350:	d9 2f       	mov	r29, r25
    1352:	bf d1       	rcall	.+894    	; 0x16d2 <inverse>
    1354:	9f 93       	push	r25
    1356:	8f 93       	push	r24
    1358:	7f 93       	push	r23
    135a:	6f 93       	push	r22
    135c:	6c d2       	rcall	.+1240   	; 0x1836 <square>
    135e:	e8 ef       	ldi	r30, 0xF8	; 248
    1360:	f0 e0       	ldi	r31, 0x00	; 0
    1362:	35 d1       	rcall	.+618    	; 0x15ce <__fp_powser>
    1364:	78 d1       	rcall	.+752    	; 0x1656 <__fp_round>
    1366:	2f 91       	pop	r18
    1368:	3f 91       	pop	r19
    136a:	4f 91       	pop	r20
    136c:	5f 91       	pop	r21
    136e:	c4 d1       	rcall	.+904    	; 0x16f8 <__mulsf3x>
    1370:	dd 23       	and	r29, r29
    1372:	49 f0       	breq	.+18     	; 0x1386 <atan+0x4c>
    1374:	90 58       	subi	r25, 0x80	; 128
    1376:	a2 ea       	ldi	r26, 0xA2	; 162
    1378:	2a ed       	ldi	r18, 0xDA	; 218
    137a:	3f e0       	ldi	r19, 0x0F	; 15
    137c:	49 ec       	ldi	r20, 0xC9	; 201
    137e:	5f e3       	ldi	r21, 0x3F	; 63
    1380:	d0 78       	andi	r29, 0x80	; 128
    1382:	5d 27       	eor	r21, r29
    1384:	36 df       	rcall	.-404    	; 0x11f2 <__addsf3x>
    1386:	df 91       	pop	r29
    1388:	66 c1       	rjmp	.+716    	; 0x1656 <__fp_round>

0000138a <__cmpsf2>:
    138a:	f4 d0       	rcall	.+488    	; 0x1574 <__fp_cmp>
    138c:	08 f4       	brcc	.+2      	; 0x1390 <__cmpsf2+0x6>
    138e:	81 e0       	ldi	r24, 0x01	; 1
    1390:	08 95       	ret

00001392 <__divsf3>:
    1392:	0c d0       	rcall	.+24     	; 0x13ac <__divsf3x>
    1394:	60 c1       	rjmp	.+704    	; 0x1656 <__fp_round>
    1396:	58 d1       	rcall	.+688    	; 0x1648 <__fp_pscB>
    1398:	40 f0       	brcs	.+16     	; 0x13aa <__divsf3+0x18>
    139a:	4f d1       	rcall	.+670    	; 0x163a <__fp_pscA>
    139c:	30 f0       	brcs	.+12     	; 0x13aa <__divsf3+0x18>
    139e:	21 f4       	brne	.+8      	; 0x13a8 <__divsf3+0x16>
    13a0:	5f 3f       	cpi	r21, 0xFF	; 255
    13a2:	19 f0       	breq	.+6      	; 0x13aa <__divsf3+0x18>
    13a4:	0b c1       	rjmp	.+534    	; 0x15bc <__fp_inf>
    13a6:	51 11       	cpse	r21, r1
    13a8:	8a c1       	rjmp	.+788    	; 0x16be <__fp_szero>
    13aa:	0e c1       	rjmp	.+540    	; 0x15c8 <__fp_nan>

000013ac <__divsf3x>:
    13ac:	65 d1       	rcall	.+714    	; 0x1678 <__fp_split3>
    13ae:	98 f3       	brcs	.-26     	; 0x1396 <__divsf3+0x4>

000013b0 <__divsf3_pse>:
    13b0:	99 23       	and	r25, r25
    13b2:	c9 f3       	breq	.-14     	; 0x13a6 <__divsf3+0x14>
    13b4:	55 23       	and	r21, r21
    13b6:	b1 f3       	breq	.-20     	; 0x13a4 <__divsf3+0x12>
    13b8:	95 1b       	sub	r25, r21
    13ba:	55 0b       	sbc	r21, r21
    13bc:	bb 27       	eor	r27, r27
    13be:	aa 27       	eor	r26, r26
    13c0:	62 17       	cp	r22, r18
    13c2:	73 07       	cpc	r23, r19
    13c4:	84 07       	cpc	r24, r20
    13c6:	38 f0       	brcs	.+14     	; 0x13d6 <__divsf3_pse+0x26>
    13c8:	9f 5f       	subi	r25, 0xFF	; 255
    13ca:	5f 4f       	sbci	r21, 0xFF	; 255
    13cc:	22 0f       	add	r18, r18
    13ce:	33 1f       	adc	r19, r19
    13d0:	44 1f       	adc	r20, r20
    13d2:	aa 1f       	adc	r26, r26
    13d4:	a9 f3       	breq	.-22     	; 0x13c0 <__divsf3_pse+0x10>
    13d6:	33 d0       	rcall	.+102    	; 0x143e <__divsf3_pse+0x8e>
    13d8:	0e 2e       	mov	r0, r30
    13da:	3a f0       	brmi	.+14     	; 0x13ea <__divsf3_pse+0x3a>
    13dc:	e0 e8       	ldi	r30, 0x80	; 128
    13de:	30 d0       	rcall	.+96     	; 0x1440 <__divsf3_pse+0x90>
    13e0:	91 50       	subi	r25, 0x01	; 1
    13e2:	50 40       	sbci	r21, 0x00	; 0
    13e4:	e6 95       	lsr	r30
    13e6:	00 1c       	adc	r0, r0
    13e8:	ca f7       	brpl	.-14     	; 0x13dc <__divsf3_pse+0x2c>
    13ea:	29 d0       	rcall	.+82     	; 0x143e <__divsf3_pse+0x8e>
    13ec:	fe 2f       	mov	r31, r30
    13ee:	27 d0       	rcall	.+78     	; 0x143e <__divsf3_pse+0x8e>
    13f0:	66 0f       	add	r22, r22
    13f2:	77 1f       	adc	r23, r23
    13f4:	88 1f       	adc	r24, r24
    13f6:	bb 1f       	adc	r27, r27
    13f8:	26 17       	cp	r18, r22
    13fa:	37 07       	cpc	r19, r23
    13fc:	48 07       	cpc	r20, r24
    13fe:	ab 07       	cpc	r26, r27
    1400:	b0 e8       	ldi	r27, 0x80	; 128
    1402:	09 f0       	breq	.+2      	; 0x1406 <__divsf3_pse+0x56>
    1404:	bb 0b       	sbc	r27, r27
    1406:	80 2d       	mov	r24, r0
    1408:	bf 01       	movw	r22, r30
    140a:	ff 27       	eor	r31, r31
    140c:	93 58       	subi	r25, 0x83	; 131
    140e:	5f 4f       	sbci	r21, 0xFF	; 255
    1410:	2a f0       	brmi	.+10     	; 0x141c <__divsf3_pse+0x6c>
    1412:	9e 3f       	cpi	r25, 0xFE	; 254
    1414:	51 05       	cpc	r21, r1
    1416:	68 f0       	brcs	.+26     	; 0x1432 <__divsf3_pse+0x82>
    1418:	d1 c0       	rjmp	.+418    	; 0x15bc <__fp_inf>
    141a:	51 c1       	rjmp	.+674    	; 0x16be <__fp_szero>
    141c:	5f 3f       	cpi	r21, 0xFF	; 255
    141e:	ec f3       	brlt	.-6      	; 0x141a <__divsf3_pse+0x6a>
    1420:	98 3e       	cpi	r25, 0xE8	; 232
    1422:	dc f3       	brlt	.-10     	; 0x141a <__divsf3_pse+0x6a>
    1424:	86 95       	lsr	r24
    1426:	77 95       	ror	r23
    1428:	67 95       	ror	r22
    142a:	b7 95       	ror	r27
    142c:	f7 95       	ror	r31
    142e:	9f 5f       	subi	r25, 0xFF	; 255
    1430:	c9 f7       	brne	.-14     	; 0x1424 <__divsf3_pse+0x74>
    1432:	88 0f       	add	r24, r24
    1434:	91 1d       	adc	r25, r1
    1436:	96 95       	lsr	r25
    1438:	87 95       	ror	r24
    143a:	97 f9       	bld	r25, 7
    143c:	08 95       	ret
    143e:	e1 e0       	ldi	r30, 0x01	; 1
    1440:	66 0f       	add	r22, r22
    1442:	77 1f       	adc	r23, r23
    1444:	88 1f       	adc	r24, r24
    1446:	bb 1f       	adc	r27, r27
    1448:	62 17       	cp	r22, r18
    144a:	73 07       	cpc	r23, r19
    144c:	84 07       	cpc	r24, r20
    144e:	ba 07       	cpc	r27, r26
    1450:	20 f0       	brcs	.+8      	; 0x145a <__divsf3_pse+0xaa>
    1452:	62 1b       	sub	r22, r18
    1454:	73 0b       	sbc	r23, r19
    1456:	84 0b       	sbc	r24, r20
    1458:	ba 0b       	sbc	r27, r26
    145a:	ee 1f       	adc	r30, r30
    145c:	88 f7       	brcc	.-30     	; 0x1440 <__divsf3_pse+0x90>
    145e:	e0 95       	com	r30
    1460:	08 95       	ret

00001462 <__fixsfsi>:
    1462:	04 d0       	rcall	.+8      	; 0x146c <__fixunssfsi>
    1464:	68 94       	set
    1466:	b1 11       	cpse	r27, r1
    1468:	2a c1       	rjmp	.+596    	; 0x16be <__fp_szero>
    146a:	08 95       	ret

0000146c <__fixunssfsi>:
    146c:	0d d1       	rcall	.+538    	; 0x1688 <__fp_splitA>
    146e:	88 f0       	brcs	.+34     	; 0x1492 <__fixunssfsi+0x26>
    1470:	9f 57       	subi	r25, 0x7F	; 127
    1472:	90 f0       	brcs	.+36     	; 0x1498 <__fixunssfsi+0x2c>
    1474:	b9 2f       	mov	r27, r25
    1476:	99 27       	eor	r25, r25
    1478:	b7 51       	subi	r27, 0x17	; 23
    147a:	a0 f0       	brcs	.+40     	; 0x14a4 <__fixunssfsi+0x38>
    147c:	d1 f0       	breq	.+52     	; 0x14b2 <__fixunssfsi+0x46>
    147e:	66 0f       	add	r22, r22
    1480:	77 1f       	adc	r23, r23
    1482:	88 1f       	adc	r24, r24
    1484:	99 1f       	adc	r25, r25
    1486:	1a f0       	brmi	.+6      	; 0x148e <__fixunssfsi+0x22>
    1488:	ba 95       	dec	r27
    148a:	c9 f7       	brne	.-14     	; 0x147e <__fixunssfsi+0x12>
    148c:	12 c0       	rjmp	.+36     	; 0x14b2 <__fixunssfsi+0x46>
    148e:	b1 30       	cpi	r27, 0x01	; 1
    1490:	81 f0       	breq	.+32     	; 0x14b2 <__fixunssfsi+0x46>
    1492:	14 d1       	rcall	.+552    	; 0x16bc <__fp_zero>
    1494:	b1 e0       	ldi	r27, 0x01	; 1
    1496:	08 95       	ret
    1498:	11 c1       	rjmp	.+546    	; 0x16bc <__fp_zero>
    149a:	67 2f       	mov	r22, r23
    149c:	78 2f       	mov	r23, r24
    149e:	88 27       	eor	r24, r24
    14a0:	b8 5f       	subi	r27, 0xF8	; 248
    14a2:	39 f0       	breq	.+14     	; 0x14b2 <__fixunssfsi+0x46>
    14a4:	b9 3f       	cpi	r27, 0xF9	; 249
    14a6:	cc f3       	brlt	.-14     	; 0x149a <__fixunssfsi+0x2e>
    14a8:	86 95       	lsr	r24
    14aa:	77 95       	ror	r23
    14ac:	67 95       	ror	r22
    14ae:	b3 95       	inc	r27
    14b0:	d9 f7       	brne	.-10     	; 0x14a8 <__fixunssfsi+0x3c>
    14b2:	3e f4       	brtc	.+14     	; 0x14c2 <__fixunssfsi+0x56>
    14b4:	90 95       	com	r25
    14b6:	80 95       	com	r24
    14b8:	70 95       	com	r23
    14ba:	61 95       	neg	r22
    14bc:	7f 4f       	sbci	r23, 0xFF	; 255
    14be:	8f 4f       	sbci	r24, 0xFF	; 255
    14c0:	9f 4f       	sbci	r25, 0xFF	; 255
    14c2:	08 95       	ret

000014c4 <__floatunsisf>:
    14c4:	e8 94       	clt
    14c6:	09 c0       	rjmp	.+18     	; 0x14da <__floatsisf+0x12>

000014c8 <__floatsisf>:
    14c8:	97 fb       	bst	r25, 7
    14ca:	3e f4       	brtc	.+14     	; 0x14da <__floatsisf+0x12>
    14cc:	90 95       	com	r25
    14ce:	80 95       	com	r24
    14d0:	70 95       	com	r23
    14d2:	61 95       	neg	r22
    14d4:	7f 4f       	sbci	r23, 0xFF	; 255
    14d6:	8f 4f       	sbci	r24, 0xFF	; 255
    14d8:	9f 4f       	sbci	r25, 0xFF	; 255
    14da:	99 23       	and	r25, r25
    14dc:	a9 f0       	breq	.+42     	; 0x1508 <__floatsisf+0x40>
    14de:	f9 2f       	mov	r31, r25
    14e0:	96 e9       	ldi	r25, 0x96	; 150
    14e2:	bb 27       	eor	r27, r27
    14e4:	93 95       	inc	r25
    14e6:	f6 95       	lsr	r31
    14e8:	87 95       	ror	r24
    14ea:	77 95       	ror	r23
    14ec:	67 95       	ror	r22
    14ee:	b7 95       	ror	r27
    14f0:	f1 11       	cpse	r31, r1
    14f2:	f8 cf       	rjmp	.-16     	; 0x14e4 <__floatsisf+0x1c>
    14f4:	fa f4       	brpl	.+62     	; 0x1534 <__floatsisf+0x6c>
    14f6:	bb 0f       	add	r27, r27
    14f8:	11 f4       	brne	.+4      	; 0x14fe <__floatsisf+0x36>
    14fa:	60 ff       	sbrs	r22, 0
    14fc:	1b c0       	rjmp	.+54     	; 0x1534 <__floatsisf+0x6c>
    14fe:	6f 5f       	subi	r22, 0xFF	; 255
    1500:	7f 4f       	sbci	r23, 0xFF	; 255
    1502:	8f 4f       	sbci	r24, 0xFF	; 255
    1504:	9f 4f       	sbci	r25, 0xFF	; 255
    1506:	16 c0       	rjmp	.+44     	; 0x1534 <__floatsisf+0x6c>
    1508:	88 23       	and	r24, r24
    150a:	11 f0       	breq	.+4      	; 0x1510 <__floatsisf+0x48>
    150c:	96 e9       	ldi	r25, 0x96	; 150
    150e:	11 c0       	rjmp	.+34     	; 0x1532 <__floatsisf+0x6a>
    1510:	77 23       	and	r23, r23
    1512:	21 f0       	breq	.+8      	; 0x151c <__floatsisf+0x54>
    1514:	9e e8       	ldi	r25, 0x8E	; 142
    1516:	87 2f       	mov	r24, r23
    1518:	76 2f       	mov	r23, r22
    151a:	05 c0       	rjmp	.+10     	; 0x1526 <__floatsisf+0x5e>
    151c:	66 23       	and	r22, r22
    151e:	71 f0       	breq	.+28     	; 0x153c <__floatsisf+0x74>
    1520:	96 e8       	ldi	r25, 0x86	; 134
    1522:	86 2f       	mov	r24, r22
    1524:	70 e0       	ldi	r23, 0x00	; 0
    1526:	60 e0       	ldi	r22, 0x00	; 0
    1528:	2a f0       	brmi	.+10     	; 0x1534 <__floatsisf+0x6c>
    152a:	9a 95       	dec	r25
    152c:	66 0f       	add	r22, r22
    152e:	77 1f       	adc	r23, r23
    1530:	88 1f       	adc	r24, r24
    1532:	da f7       	brpl	.-10     	; 0x152a <__floatsisf+0x62>
    1534:	88 0f       	add	r24, r24
    1536:	96 95       	lsr	r25
    1538:	87 95       	ror	r24
    153a:	97 f9       	bld	r25, 7
    153c:	08 95       	ret

0000153e <__fp_arccos>:
    153e:	df 93       	push	r29
    1540:	cf 93       	push	r28
    1542:	1f 93       	push	r17
    1544:	0f 93       	push	r16
    1546:	8b 01       	movw	r16, r22
    1548:	ec 01       	movw	r28, r24
    154a:	e5 e2       	ldi	r30, 0x25	; 37
    154c:	f1 e0       	ldi	r31, 0x01	; 1
    154e:	3f d0       	rcall	.+126    	; 0x15ce <__fp_powser>
    1550:	82 d0       	rcall	.+260    	; 0x1656 <__fp_round>
    1552:	98 01       	movw	r18, r16
    1554:	ae 01       	movw	r20, r28
    1556:	8b 01       	movw	r16, r22
    1558:	ec 01       	movw	r28, r24
    155a:	60 e0       	ldi	r22, 0x00	; 0
    155c:	70 e0       	ldi	r23, 0x00	; 0
    155e:	80 e8       	ldi	r24, 0x80	; 128
    1560:	9f e3       	ldi	r25, 0x3F	; 63
    1562:	35 de       	rcall	.-918    	; 0x11ce <__subsf3>
    1564:	2a d1       	rcall	.+596    	; 0x17ba <sqrt>
    1566:	98 01       	movw	r18, r16
    1568:	ae 01       	movw	r20, r28
    156a:	0f 91       	pop	r16
    156c:	1f 91       	pop	r17
    156e:	cf 91       	pop	r28
    1570:	df 91       	pop	r29
    1572:	c2 c0       	rjmp	.+388    	; 0x16f8 <__mulsf3x>

00001574 <__fp_cmp>:
    1574:	99 0f       	add	r25, r25
    1576:	00 08       	sbc	r0, r0
    1578:	55 0f       	add	r21, r21
    157a:	aa 0b       	sbc	r26, r26
    157c:	e0 e8       	ldi	r30, 0x80	; 128
    157e:	fe ef       	ldi	r31, 0xFE	; 254
    1580:	16 16       	cp	r1, r22
    1582:	17 06       	cpc	r1, r23
    1584:	e8 07       	cpc	r30, r24
    1586:	f9 07       	cpc	r31, r25
    1588:	c0 f0       	brcs	.+48     	; 0x15ba <__fp_cmp+0x46>
    158a:	12 16       	cp	r1, r18
    158c:	13 06       	cpc	r1, r19
    158e:	e4 07       	cpc	r30, r20
    1590:	f5 07       	cpc	r31, r21
    1592:	98 f0       	brcs	.+38     	; 0x15ba <__fp_cmp+0x46>
    1594:	62 1b       	sub	r22, r18
    1596:	73 0b       	sbc	r23, r19
    1598:	84 0b       	sbc	r24, r20
    159a:	95 0b       	sbc	r25, r21
    159c:	39 f4       	brne	.+14     	; 0x15ac <__fp_cmp+0x38>
    159e:	0a 26       	eor	r0, r26
    15a0:	61 f0       	breq	.+24     	; 0x15ba <__fp_cmp+0x46>
    15a2:	23 2b       	or	r18, r19
    15a4:	24 2b       	or	r18, r20
    15a6:	25 2b       	or	r18, r21
    15a8:	21 f4       	brne	.+8      	; 0x15b2 <__fp_cmp+0x3e>
    15aa:	08 95       	ret
    15ac:	0a 26       	eor	r0, r26
    15ae:	09 f4       	brne	.+2      	; 0x15b2 <__fp_cmp+0x3e>
    15b0:	a1 40       	sbci	r26, 0x01	; 1
    15b2:	a6 95       	lsr	r26
    15b4:	8f ef       	ldi	r24, 0xFF	; 255
    15b6:	81 1d       	adc	r24, r1
    15b8:	81 1d       	adc	r24, r1
    15ba:	08 95       	ret

000015bc <__fp_inf>:
    15bc:	97 f9       	bld	r25, 7
    15be:	9f 67       	ori	r25, 0x7F	; 127
    15c0:	80 e8       	ldi	r24, 0x80	; 128
    15c2:	70 e0       	ldi	r23, 0x00	; 0
    15c4:	60 e0       	ldi	r22, 0x00	; 0
    15c6:	08 95       	ret

000015c8 <__fp_nan>:
    15c8:	9f ef       	ldi	r25, 0xFF	; 255
    15ca:	80 ec       	ldi	r24, 0xC0	; 192
    15cc:	08 95       	ret

000015ce <__fp_powser>:
    15ce:	df 93       	push	r29
    15d0:	cf 93       	push	r28
    15d2:	1f 93       	push	r17
    15d4:	0f 93       	push	r16
    15d6:	ff 92       	push	r15
    15d8:	ef 92       	push	r14
    15da:	df 92       	push	r13
    15dc:	7b 01       	movw	r14, r22
    15de:	8c 01       	movw	r16, r24
    15e0:	68 94       	set
    15e2:	05 c0       	rjmp	.+10     	; 0x15ee <__fp_powser+0x20>
    15e4:	da 2e       	mov	r13, r26
    15e6:	ef 01       	movw	r28, r30
    15e8:	87 d0       	rcall	.+270    	; 0x16f8 <__mulsf3x>
    15ea:	fe 01       	movw	r30, r28
    15ec:	e8 94       	clt
    15ee:	a5 91       	lpm	r26, Z+
    15f0:	25 91       	lpm	r18, Z+
    15f2:	35 91       	lpm	r19, Z+
    15f4:	45 91       	lpm	r20, Z+
    15f6:	55 91       	lpm	r21, Z+
    15f8:	ae f3       	brts	.-22     	; 0x15e4 <__fp_powser+0x16>
    15fa:	ef 01       	movw	r28, r30
    15fc:	fa dd       	rcall	.-1036   	; 0x11f2 <__addsf3x>
    15fe:	fe 01       	movw	r30, r28
    1600:	97 01       	movw	r18, r14
    1602:	a8 01       	movw	r20, r16
    1604:	da 94       	dec	r13
    1606:	79 f7       	brne	.-34     	; 0x15e6 <__fp_powser+0x18>
    1608:	df 90       	pop	r13
    160a:	ef 90       	pop	r14
    160c:	ff 90       	pop	r15
    160e:	0f 91       	pop	r16
    1610:	1f 91       	pop	r17
    1612:	cf 91       	pop	r28
    1614:	df 91       	pop	r29
    1616:	08 95       	ret

00001618 <__fp_powsodd>:
    1618:	9f 93       	push	r25
    161a:	8f 93       	push	r24
    161c:	7f 93       	push	r23
    161e:	6f 93       	push	r22
    1620:	ff 93       	push	r31
    1622:	ef 93       	push	r30
    1624:	9b 01       	movw	r18, r22
    1626:	ac 01       	movw	r20, r24
    1628:	5b d0       	rcall	.+182    	; 0x16e0 <__mulsf3>
    162a:	ef 91       	pop	r30
    162c:	ff 91       	pop	r31
    162e:	cf df       	rcall	.-98     	; 0x15ce <__fp_powser>
    1630:	2f 91       	pop	r18
    1632:	3f 91       	pop	r19
    1634:	4f 91       	pop	r20
    1636:	5f 91       	pop	r21
    1638:	53 c0       	rjmp	.+166    	; 0x16e0 <__mulsf3>

0000163a <__fp_pscA>:
    163a:	00 24       	eor	r0, r0
    163c:	0a 94       	dec	r0
    163e:	16 16       	cp	r1, r22
    1640:	17 06       	cpc	r1, r23
    1642:	18 06       	cpc	r1, r24
    1644:	09 06       	cpc	r0, r25
    1646:	08 95       	ret

00001648 <__fp_pscB>:
    1648:	00 24       	eor	r0, r0
    164a:	0a 94       	dec	r0
    164c:	12 16       	cp	r1, r18
    164e:	13 06       	cpc	r1, r19
    1650:	14 06       	cpc	r1, r20
    1652:	05 06       	cpc	r0, r21
    1654:	08 95       	ret

00001656 <__fp_round>:
    1656:	09 2e       	mov	r0, r25
    1658:	03 94       	inc	r0
    165a:	00 0c       	add	r0, r0
    165c:	11 f4       	brne	.+4      	; 0x1662 <__fp_round+0xc>
    165e:	88 23       	and	r24, r24
    1660:	52 f0       	brmi	.+20     	; 0x1676 <__fp_round+0x20>
    1662:	bb 0f       	add	r27, r27
    1664:	40 f4       	brcc	.+16     	; 0x1676 <__fp_round+0x20>
    1666:	bf 2b       	or	r27, r31
    1668:	11 f4       	brne	.+4      	; 0x166e <__fp_round+0x18>
    166a:	60 ff       	sbrs	r22, 0
    166c:	04 c0       	rjmp	.+8      	; 0x1676 <__fp_round+0x20>
    166e:	6f 5f       	subi	r22, 0xFF	; 255
    1670:	7f 4f       	sbci	r23, 0xFF	; 255
    1672:	8f 4f       	sbci	r24, 0xFF	; 255
    1674:	9f 4f       	sbci	r25, 0xFF	; 255
    1676:	08 95       	ret

00001678 <__fp_split3>:
    1678:	57 fd       	sbrc	r21, 7
    167a:	90 58       	subi	r25, 0x80	; 128
    167c:	44 0f       	add	r20, r20
    167e:	55 1f       	adc	r21, r21
    1680:	59 f0       	breq	.+22     	; 0x1698 <__fp_splitA+0x10>
    1682:	5f 3f       	cpi	r21, 0xFF	; 255
    1684:	71 f0       	breq	.+28     	; 0x16a2 <__fp_splitA+0x1a>
    1686:	47 95       	ror	r20

00001688 <__fp_splitA>:
    1688:	88 0f       	add	r24, r24
    168a:	97 fb       	bst	r25, 7
    168c:	99 1f       	adc	r25, r25
    168e:	61 f0       	breq	.+24     	; 0x16a8 <__fp_splitA+0x20>
    1690:	9f 3f       	cpi	r25, 0xFF	; 255
    1692:	79 f0       	breq	.+30     	; 0x16b2 <__fp_splitA+0x2a>
    1694:	87 95       	ror	r24
    1696:	08 95       	ret
    1698:	12 16       	cp	r1, r18
    169a:	13 06       	cpc	r1, r19
    169c:	14 06       	cpc	r1, r20
    169e:	55 1f       	adc	r21, r21
    16a0:	f2 cf       	rjmp	.-28     	; 0x1686 <__fp_split3+0xe>
    16a2:	46 95       	lsr	r20
    16a4:	f1 df       	rcall	.-30     	; 0x1688 <__fp_splitA>
    16a6:	08 c0       	rjmp	.+16     	; 0x16b8 <__fp_splitA+0x30>
    16a8:	16 16       	cp	r1, r22
    16aa:	17 06       	cpc	r1, r23
    16ac:	18 06       	cpc	r1, r24
    16ae:	99 1f       	adc	r25, r25
    16b0:	f1 cf       	rjmp	.-30     	; 0x1694 <__fp_splitA+0xc>
    16b2:	86 95       	lsr	r24
    16b4:	71 05       	cpc	r23, r1
    16b6:	61 05       	cpc	r22, r1
    16b8:	08 94       	sec
    16ba:	08 95       	ret

000016bc <__fp_zero>:
    16bc:	e8 94       	clt

000016be <__fp_szero>:
    16be:	bb 27       	eor	r27, r27
    16c0:	66 27       	eor	r22, r22
    16c2:	77 27       	eor	r23, r23
    16c4:	cb 01       	movw	r24, r22
    16c6:	97 f9       	bld	r25, 7
    16c8:	08 95       	ret

000016ca <__gesf2>:
    16ca:	54 df       	rcall	.-344    	; 0x1574 <__fp_cmp>
    16cc:	08 f4       	brcc	.+2      	; 0x16d0 <__gesf2+0x6>
    16ce:	8f ef       	ldi	r24, 0xFF	; 255
    16d0:	08 95       	ret

000016d2 <inverse>:
    16d2:	9b 01       	movw	r18, r22
    16d4:	ac 01       	movw	r20, r24
    16d6:	60 e0       	ldi	r22, 0x00	; 0
    16d8:	70 e0       	ldi	r23, 0x00	; 0
    16da:	80 e8       	ldi	r24, 0x80	; 128
    16dc:	9f e3       	ldi	r25, 0x3F	; 63
    16de:	59 ce       	rjmp	.-846    	; 0x1392 <__divsf3>

000016e0 <__mulsf3>:
    16e0:	0b d0       	rcall	.+22     	; 0x16f8 <__mulsf3x>
    16e2:	b9 cf       	rjmp	.-142    	; 0x1656 <__fp_round>
    16e4:	aa df       	rcall	.-172    	; 0x163a <__fp_pscA>
    16e6:	28 f0       	brcs	.+10     	; 0x16f2 <__mulsf3+0x12>
    16e8:	af df       	rcall	.-162    	; 0x1648 <__fp_pscB>
    16ea:	18 f0       	brcs	.+6      	; 0x16f2 <__mulsf3+0x12>
    16ec:	95 23       	and	r25, r21
    16ee:	09 f0       	breq	.+2      	; 0x16f2 <__mulsf3+0x12>
    16f0:	65 cf       	rjmp	.-310    	; 0x15bc <__fp_inf>
    16f2:	6a cf       	rjmp	.-300    	; 0x15c8 <__fp_nan>
    16f4:	11 24       	eor	r1, r1
    16f6:	e3 cf       	rjmp	.-58     	; 0x16be <__fp_szero>

000016f8 <__mulsf3x>:
    16f8:	bf df       	rcall	.-130    	; 0x1678 <__fp_split3>
    16fa:	a0 f3       	brcs	.-24     	; 0x16e4 <__mulsf3+0x4>

000016fc <__mulsf3_pse>:
    16fc:	95 9f       	mul	r25, r21
    16fe:	d1 f3       	breq	.-12     	; 0x16f4 <__mulsf3+0x14>
    1700:	95 0f       	add	r25, r21
    1702:	50 e0       	ldi	r21, 0x00	; 0
    1704:	55 1f       	adc	r21, r21
    1706:	62 9f       	mul	r22, r18
    1708:	f0 01       	movw	r30, r0
    170a:	72 9f       	mul	r23, r18
    170c:	bb 27       	eor	r27, r27
    170e:	f0 0d       	add	r31, r0
    1710:	b1 1d       	adc	r27, r1
    1712:	63 9f       	mul	r22, r19
    1714:	aa 27       	eor	r26, r26
    1716:	f0 0d       	add	r31, r0
    1718:	b1 1d       	adc	r27, r1
    171a:	aa 1f       	adc	r26, r26
    171c:	64 9f       	mul	r22, r20
    171e:	66 27       	eor	r22, r22
    1720:	b0 0d       	add	r27, r0
    1722:	a1 1d       	adc	r26, r1
    1724:	66 1f       	adc	r22, r22
    1726:	82 9f       	mul	r24, r18
    1728:	22 27       	eor	r18, r18
    172a:	b0 0d       	add	r27, r0
    172c:	a1 1d       	adc	r26, r1
    172e:	62 1f       	adc	r22, r18
    1730:	73 9f       	mul	r23, r19
    1732:	b0 0d       	add	r27, r0
    1734:	a1 1d       	adc	r26, r1
    1736:	62 1f       	adc	r22, r18
    1738:	83 9f       	mul	r24, r19
    173a:	a0 0d       	add	r26, r0
    173c:	61 1d       	adc	r22, r1
    173e:	22 1f       	adc	r18, r18
    1740:	74 9f       	mul	r23, r20
    1742:	33 27       	eor	r19, r19
    1744:	a0 0d       	add	r26, r0
    1746:	61 1d       	adc	r22, r1
    1748:	23 1f       	adc	r18, r19
    174a:	84 9f       	mul	r24, r20
    174c:	60 0d       	add	r22, r0
    174e:	21 1d       	adc	r18, r1
    1750:	82 2f       	mov	r24, r18
    1752:	76 2f       	mov	r23, r22
    1754:	6a 2f       	mov	r22, r26
    1756:	11 24       	eor	r1, r1
    1758:	9f 57       	subi	r25, 0x7F	; 127
    175a:	50 40       	sbci	r21, 0x00	; 0
    175c:	8a f0       	brmi	.+34     	; 0x1780 <__mulsf3_pse+0x84>
    175e:	e1 f0       	breq	.+56     	; 0x1798 <__mulsf3_pse+0x9c>
    1760:	88 23       	and	r24, r24
    1762:	4a f0       	brmi	.+18     	; 0x1776 <__mulsf3_pse+0x7a>
    1764:	ee 0f       	add	r30, r30
    1766:	ff 1f       	adc	r31, r31
    1768:	bb 1f       	adc	r27, r27
    176a:	66 1f       	adc	r22, r22
    176c:	77 1f       	adc	r23, r23
    176e:	88 1f       	adc	r24, r24
    1770:	91 50       	subi	r25, 0x01	; 1
    1772:	50 40       	sbci	r21, 0x00	; 0
    1774:	a9 f7       	brne	.-22     	; 0x1760 <__mulsf3_pse+0x64>
    1776:	9e 3f       	cpi	r25, 0xFE	; 254
    1778:	51 05       	cpc	r21, r1
    177a:	70 f0       	brcs	.+28     	; 0x1798 <__mulsf3_pse+0x9c>
    177c:	1f cf       	rjmp	.-450    	; 0x15bc <__fp_inf>
    177e:	9f cf       	rjmp	.-194    	; 0x16be <__fp_szero>
    1780:	5f 3f       	cpi	r21, 0xFF	; 255
    1782:	ec f3       	brlt	.-6      	; 0x177e <__mulsf3_pse+0x82>
    1784:	98 3e       	cpi	r25, 0xE8	; 232
    1786:	dc f3       	brlt	.-10     	; 0x177e <__mulsf3_pse+0x82>
    1788:	86 95       	lsr	r24
    178a:	77 95       	ror	r23
    178c:	67 95       	ror	r22
    178e:	b7 95       	ror	r27
    1790:	f7 95       	ror	r31
    1792:	e7 95       	ror	r30
    1794:	9f 5f       	subi	r25, 0xFF	; 255
    1796:	c1 f7       	brne	.-16     	; 0x1788 <__mulsf3_pse+0x8c>
    1798:	fe 2b       	or	r31, r30
    179a:	88 0f       	add	r24, r24
    179c:	91 1d       	adc	r25, r1
    179e:	96 95       	lsr	r25
    17a0:	87 95       	ror	r24
    17a2:	97 f9       	bld	r25, 7
    17a4:	08 95       	ret

000017a6 <sin>:
    17a6:	9f 93       	push	r25
    17a8:	5f d0       	rcall	.+190    	; 0x1868 <__fp_rempio2>
    17aa:	0f 90       	pop	r0
    17ac:	07 fc       	sbrc	r0, 7
    17ae:	ee 5f       	subi	r30, 0xFE	; 254
    17b0:	82 c0       	rjmp	.+260    	; 0x18b6 <__fp_sinus>
    17b2:	11 f4       	brne	.+4      	; 0x17b8 <sin+0x12>
    17b4:	0e f4       	brtc	.+2      	; 0x17b8 <sin+0x12>
    17b6:	08 cf       	rjmp	.-496    	; 0x15c8 <__fp_nan>
    17b8:	41 c0       	rjmp	.+130    	; 0x183c <__fp_mpack>

000017ba <sqrt>:
    17ba:	66 df       	rcall	.-308    	; 0x1688 <__fp_splitA>
    17bc:	d0 f3       	brcs	.-12     	; 0x17b2 <sin+0xc>
    17be:	99 23       	and	r25, r25
    17c0:	d9 f3       	breq	.-10     	; 0x17b8 <sin+0x12>
    17c2:	ce f3       	brts	.-14     	; 0x17b6 <sin+0x10>
    17c4:	9f 57       	subi	r25, 0x7F	; 127
    17c6:	55 0b       	sbc	r21, r21
    17c8:	87 ff       	sbrs	r24, 7
    17ca:	46 d0       	rcall	.+140    	; 0x1858 <__fp_norm2>
    17cc:	00 24       	eor	r0, r0
    17ce:	a0 e6       	ldi	r26, 0x60	; 96
    17d0:	40 ea       	ldi	r20, 0xA0	; 160
    17d2:	90 01       	movw	r18, r0
    17d4:	80 58       	subi	r24, 0x80	; 128
    17d6:	56 95       	lsr	r21
    17d8:	97 95       	ror	r25
    17da:	28 f4       	brcc	.+10     	; 0x17e6 <sqrt+0x2c>
    17dc:	80 5c       	subi	r24, 0xC0	; 192
    17de:	66 0f       	add	r22, r22
    17e0:	77 1f       	adc	r23, r23
    17e2:	88 1f       	adc	r24, r24
    17e4:	20 f0       	brcs	.+8      	; 0x17ee <sqrt+0x34>
    17e6:	26 17       	cp	r18, r22
    17e8:	37 07       	cpc	r19, r23
    17ea:	48 07       	cpc	r20, r24
    17ec:	30 f4       	brcc	.+12     	; 0x17fa <sqrt+0x40>
    17ee:	62 1b       	sub	r22, r18
    17f0:	73 0b       	sbc	r23, r19
    17f2:	84 0b       	sbc	r24, r20
    17f4:	20 29       	or	r18, r0
    17f6:	31 29       	or	r19, r1
    17f8:	4a 2b       	or	r20, r26
    17fa:	a6 95       	lsr	r26
    17fc:	17 94       	ror	r1
    17fe:	07 94       	ror	r0
    1800:	20 25       	eor	r18, r0
    1802:	31 25       	eor	r19, r1
    1804:	4a 27       	eor	r20, r26
    1806:	58 f7       	brcc	.-42     	; 0x17de <sqrt+0x24>
    1808:	66 0f       	add	r22, r22
    180a:	77 1f       	adc	r23, r23
    180c:	88 1f       	adc	r24, r24
    180e:	20 f0       	brcs	.+8      	; 0x1818 <sqrt+0x5e>
    1810:	26 17       	cp	r18, r22
    1812:	37 07       	cpc	r19, r23
    1814:	48 07       	cpc	r20, r24
    1816:	30 f4       	brcc	.+12     	; 0x1824 <sqrt+0x6a>
    1818:	62 0b       	sbc	r22, r18
    181a:	73 0b       	sbc	r23, r19
    181c:	84 0b       	sbc	r24, r20
    181e:	20 0d       	add	r18, r0
    1820:	31 1d       	adc	r19, r1
    1822:	41 1d       	adc	r20, r1
    1824:	a0 95       	com	r26
    1826:	81 f7       	brne	.-32     	; 0x1808 <sqrt+0x4e>
    1828:	b9 01       	movw	r22, r18
    182a:	84 2f       	mov	r24, r20
    182c:	91 58       	subi	r25, 0x81	; 129
    182e:	88 0f       	add	r24, r24
    1830:	96 95       	lsr	r25
    1832:	87 95       	ror	r24
    1834:	08 95       	ret

00001836 <square>:
    1836:	9b 01       	movw	r18, r22
    1838:	ac 01       	movw	r20, r24
    183a:	52 cf       	rjmp	.-348    	; 0x16e0 <__mulsf3>

0000183c <__fp_mpack>:
    183c:	9f 3f       	cpi	r25, 0xFF	; 255
    183e:	31 f0       	breq	.+12     	; 0x184c <__fp_mpack_finite+0xc>

00001840 <__fp_mpack_finite>:
    1840:	91 50       	subi	r25, 0x01	; 1
    1842:	20 f4       	brcc	.+8      	; 0x184c <__fp_mpack_finite+0xc>
    1844:	87 95       	ror	r24
    1846:	77 95       	ror	r23
    1848:	67 95       	ror	r22
    184a:	b7 95       	ror	r27
    184c:	88 0f       	add	r24, r24
    184e:	91 1d       	adc	r25, r1
    1850:	96 95       	lsr	r25
    1852:	87 95       	ror	r24
    1854:	97 f9       	bld	r25, 7
    1856:	08 95       	ret

00001858 <__fp_norm2>:
    1858:	91 50       	subi	r25, 0x01	; 1
    185a:	50 40       	sbci	r21, 0x00	; 0
    185c:	66 0f       	add	r22, r22
    185e:	77 1f       	adc	r23, r23
    1860:	88 1f       	adc	r24, r24
    1862:	d2 f7       	brpl	.-12     	; 0x1858 <__fp_norm2>
    1864:	08 95       	ret
    1866:	b0 ce       	rjmp	.-672    	; 0x15c8 <__fp_nan>

00001868 <__fp_rempio2>:
    1868:	0f df       	rcall	.-482    	; 0x1688 <__fp_splitA>
    186a:	e8 f3       	brcs	.-6      	; 0x1866 <__fp_norm2+0xe>
    186c:	e8 94       	clt
    186e:	e0 e0       	ldi	r30, 0x00	; 0
    1870:	bb 27       	eor	r27, r27
    1872:	9f 57       	subi	r25, 0x7F	; 127
    1874:	f0 f0       	brcs	.+60     	; 0x18b2 <__fp_rempio2+0x4a>
    1876:	2a ed       	ldi	r18, 0xDA	; 218
    1878:	3f e0       	ldi	r19, 0x0F	; 15
    187a:	49 ec       	ldi	r20, 0xC9	; 201
    187c:	06 c0       	rjmp	.+12     	; 0x188a <__fp_rempio2+0x22>
    187e:	ee 0f       	add	r30, r30
    1880:	bb 0f       	add	r27, r27
    1882:	66 1f       	adc	r22, r22
    1884:	77 1f       	adc	r23, r23
    1886:	88 1f       	adc	r24, r24
    1888:	28 f0       	brcs	.+10     	; 0x1894 <__fp_rempio2+0x2c>
    188a:	b2 3a       	cpi	r27, 0xA2	; 162
    188c:	62 07       	cpc	r22, r18
    188e:	73 07       	cpc	r23, r19
    1890:	84 07       	cpc	r24, r20
    1892:	28 f0       	brcs	.+10     	; 0x189e <__fp_rempio2+0x36>
    1894:	b2 5a       	subi	r27, 0xA2	; 162
    1896:	62 0b       	sbc	r22, r18
    1898:	73 0b       	sbc	r23, r19
    189a:	84 0b       	sbc	r24, r20
    189c:	e3 95       	inc	r30
    189e:	9a 95       	dec	r25
    18a0:	72 f7       	brpl	.-36     	; 0x187e <__fp_rempio2+0x16>
    18a2:	80 38       	cpi	r24, 0x80	; 128
    18a4:	30 f4       	brcc	.+12     	; 0x18b2 <__fp_rempio2+0x4a>
    18a6:	9a 95       	dec	r25
    18a8:	bb 0f       	add	r27, r27
    18aa:	66 1f       	adc	r22, r22
    18ac:	77 1f       	adc	r23, r23
    18ae:	88 1f       	adc	r24, r24
    18b0:	d2 f7       	brpl	.-12     	; 0x18a6 <__fp_rempio2+0x3e>
    18b2:	90 48       	sbci	r25, 0x80	; 128
    18b4:	c5 cf       	rjmp	.-118    	; 0x1840 <__fp_mpack_finite>

000018b6 <__fp_sinus>:
    18b6:	ef 93       	push	r30
    18b8:	e0 ff       	sbrs	r30, 0
    18ba:	06 c0       	rjmp	.+12     	; 0x18c8 <__fp_sinus+0x12>
    18bc:	a2 ea       	ldi	r26, 0xA2	; 162
    18be:	2a ed       	ldi	r18, 0xDA	; 218
    18c0:	3f e0       	ldi	r19, 0x0F	; 15
    18c2:	49 ec       	ldi	r20, 0xC9	; 201
    18c4:	5f eb       	ldi	r21, 0xBF	; 191
    18c6:	95 dc       	rcall	.-1750   	; 0x11f2 <__addsf3x>
    18c8:	c6 de       	rcall	.-628    	; 0x1656 <__fp_round>
    18ca:	0f 90       	pop	r0
    18cc:	03 94       	inc	r0
    18ce:	01 fc       	sbrc	r0, 1
    18d0:	90 58       	subi	r25, 0x80	; 128
    18d2:	ed e4       	ldi	r30, 0x4D	; 77
    18d4:	f1 e0       	ldi	r31, 0x01	; 1
    18d6:	a0 ce       	rjmp	.-704    	; 0x1618 <__fp_powsodd>

000018d8 <vfprintf>:
    18d8:	2f 92       	push	r2
    18da:	3f 92       	push	r3
    18dc:	4f 92       	push	r4
    18de:	5f 92       	push	r5
    18e0:	6f 92       	push	r6
    18e2:	7f 92       	push	r7
    18e4:	8f 92       	push	r8
    18e6:	9f 92       	push	r9
    18e8:	af 92       	push	r10
    18ea:	bf 92       	push	r11
    18ec:	cf 92       	push	r12
    18ee:	df 92       	push	r13
    18f0:	ef 92       	push	r14
    18f2:	ff 92       	push	r15
    18f4:	0f 93       	push	r16
    18f6:	1f 93       	push	r17
    18f8:	cf 93       	push	r28
    18fa:	df 93       	push	r29
    18fc:	cd b7       	in	r28, 0x3d	; 61
    18fe:	de b7       	in	r29, 0x3e	; 62
    1900:	60 97       	sbiw	r28, 0x10	; 16
    1902:	0f b6       	in	r0, 0x3f	; 63
    1904:	f8 94       	cli
    1906:	de bf       	out	0x3e, r29	; 62
    1908:	0f be       	out	0x3f, r0	; 63
    190a:	cd bf       	out	0x3d, r28	; 61
    190c:	7c 01       	movw	r14, r24
    190e:	1b 01       	movw	r2, r22
    1910:	6a 01       	movw	r12, r20
    1912:	fc 01       	movw	r30, r24
    1914:	17 82       	std	Z+7, r1	; 0x07
    1916:	16 82       	std	Z+6, r1	; 0x06
    1918:	83 81       	ldd	r24, Z+3	; 0x03
    191a:	81 ff       	sbrs	r24, 1
    191c:	2a c3       	rjmp	.+1620   	; 0x1f72 <vfprintf+0x69a>
    191e:	9e 01       	movw	r18, r28
    1920:	2f 5f       	subi	r18, 0xFF	; 255
    1922:	3f 4f       	sbci	r19, 0xFF	; 255
    1924:	39 01       	movw	r6, r18
    1926:	f7 01       	movw	r30, r14
    1928:	93 81       	ldd	r25, Z+3	; 0x03
    192a:	f1 01       	movw	r30, r2
    192c:	93 fd       	sbrc	r25, 3
    192e:	85 91       	lpm	r24, Z+
    1930:	93 ff       	sbrs	r25, 3
    1932:	81 91       	ld	r24, Z+
    1934:	1f 01       	movw	r2, r30
    1936:	88 23       	and	r24, r24
    1938:	09 f4       	brne	.+2      	; 0x193c <vfprintf+0x64>
    193a:	17 c3       	rjmp	.+1582   	; 0x1f6a <vfprintf+0x692>
    193c:	85 32       	cpi	r24, 0x25	; 37
    193e:	39 f4       	brne	.+14     	; 0x194e <vfprintf+0x76>
    1940:	93 fd       	sbrc	r25, 3
    1942:	85 91       	lpm	r24, Z+
    1944:	93 ff       	sbrs	r25, 3
    1946:	81 91       	ld	r24, Z+
    1948:	1f 01       	movw	r2, r30
    194a:	85 32       	cpi	r24, 0x25	; 37
    194c:	31 f4       	brne	.+12     	; 0x195a <vfprintf+0x82>
    194e:	b7 01       	movw	r22, r14
    1950:	90 e0       	ldi	r25, 0x00	; 0
    1952:	aa d4       	rcall	.+2388   	; 0x22a8 <fputc>
    1954:	56 01       	movw	r10, r12
    1956:	65 01       	movw	r12, r10
    1958:	e6 cf       	rjmp	.-52     	; 0x1926 <vfprintf+0x4e>
    195a:	10 e0       	ldi	r17, 0x00	; 0
    195c:	51 2c       	mov	r5, r1
    195e:	91 2c       	mov	r9, r1
    1960:	ff e1       	ldi	r31, 0x1F	; 31
    1962:	f9 15       	cp	r31, r9
    1964:	d8 f0       	brcs	.+54     	; 0x199c <vfprintf+0xc4>
    1966:	8b 32       	cpi	r24, 0x2B	; 43
    1968:	79 f0       	breq	.+30     	; 0x1988 <vfprintf+0xb0>
    196a:	38 f4       	brcc	.+14     	; 0x197a <vfprintf+0xa2>
    196c:	80 32       	cpi	r24, 0x20	; 32
    196e:	79 f0       	breq	.+30     	; 0x198e <vfprintf+0xb6>
    1970:	83 32       	cpi	r24, 0x23	; 35
    1972:	a1 f4       	brne	.+40     	; 0x199c <vfprintf+0xc4>
    1974:	f9 2d       	mov	r31, r9
    1976:	f0 61       	ori	r31, 0x10	; 16
    1978:	2e c0       	rjmp	.+92     	; 0x19d6 <vfprintf+0xfe>
    197a:	8d 32       	cpi	r24, 0x2D	; 45
    197c:	61 f0       	breq	.+24     	; 0x1996 <vfprintf+0xbe>
    197e:	80 33       	cpi	r24, 0x30	; 48
    1980:	69 f4       	brne	.+26     	; 0x199c <vfprintf+0xc4>
    1982:	29 2d       	mov	r18, r9
    1984:	21 60       	ori	r18, 0x01	; 1
    1986:	2d c0       	rjmp	.+90     	; 0x19e2 <vfprintf+0x10a>
    1988:	39 2d       	mov	r19, r9
    198a:	32 60       	ori	r19, 0x02	; 2
    198c:	93 2e       	mov	r9, r19
    198e:	89 2d       	mov	r24, r9
    1990:	84 60       	ori	r24, 0x04	; 4
    1992:	98 2e       	mov	r9, r24
    1994:	2a c0       	rjmp	.+84     	; 0x19ea <vfprintf+0x112>
    1996:	e9 2d       	mov	r30, r9
    1998:	e8 60       	ori	r30, 0x08	; 8
    199a:	15 c0       	rjmp	.+42     	; 0x19c6 <vfprintf+0xee>
    199c:	97 fc       	sbrc	r9, 7
    199e:	2d c0       	rjmp	.+90     	; 0x19fa <vfprintf+0x122>
    19a0:	20 ed       	ldi	r18, 0xD0	; 208
    19a2:	28 0f       	add	r18, r24
    19a4:	2a 30       	cpi	r18, 0x0A	; 10
    19a6:	88 f4       	brcc	.+34     	; 0x19ca <vfprintf+0xf2>
    19a8:	96 fe       	sbrs	r9, 6
    19aa:	06 c0       	rjmp	.+12     	; 0x19b8 <vfprintf+0xe0>
    19ac:	3a e0       	ldi	r19, 0x0A	; 10
    19ae:	13 9f       	mul	r17, r19
    19b0:	20 0d       	add	r18, r0
    19b2:	11 24       	eor	r1, r1
    19b4:	12 2f       	mov	r17, r18
    19b6:	19 c0       	rjmp	.+50     	; 0x19ea <vfprintf+0x112>
    19b8:	8a e0       	ldi	r24, 0x0A	; 10
    19ba:	58 9e       	mul	r5, r24
    19bc:	20 0d       	add	r18, r0
    19be:	11 24       	eor	r1, r1
    19c0:	52 2e       	mov	r5, r18
    19c2:	e9 2d       	mov	r30, r9
    19c4:	e0 62       	ori	r30, 0x20	; 32
    19c6:	9e 2e       	mov	r9, r30
    19c8:	10 c0       	rjmp	.+32     	; 0x19ea <vfprintf+0x112>
    19ca:	8e 32       	cpi	r24, 0x2E	; 46
    19cc:	31 f4       	brne	.+12     	; 0x19da <vfprintf+0x102>
    19ce:	96 fc       	sbrc	r9, 6
    19d0:	cc c2       	rjmp	.+1432   	; 0x1f6a <vfprintf+0x692>
    19d2:	f9 2d       	mov	r31, r9
    19d4:	f0 64       	ori	r31, 0x40	; 64
    19d6:	9f 2e       	mov	r9, r31
    19d8:	08 c0       	rjmp	.+16     	; 0x19ea <vfprintf+0x112>
    19da:	8c 36       	cpi	r24, 0x6C	; 108
    19dc:	21 f4       	brne	.+8      	; 0x19e6 <vfprintf+0x10e>
    19de:	29 2d       	mov	r18, r9
    19e0:	20 68       	ori	r18, 0x80	; 128
    19e2:	92 2e       	mov	r9, r18
    19e4:	02 c0       	rjmp	.+4      	; 0x19ea <vfprintf+0x112>
    19e6:	88 36       	cpi	r24, 0x68	; 104
    19e8:	41 f4       	brne	.+16     	; 0x19fa <vfprintf+0x122>
    19ea:	f1 01       	movw	r30, r2
    19ec:	93 fd       	sbrc	r25, 3
    19ee:	85 91       	lpm	r24, Z+
    19f0:	93 ff       	sbrs	r25, 3
    19f2:	81 91       	ld	r24, Z+
    19f4:	1f 01       	movw	r2, r30
    19f6:	81 11       	cpse	r24, r1
    19f8:	b3 cf       	rjmp	.-154    	; 0x1960 <vfprintf+0x88>
    19fa:	9b eb       	ldi	r25, 0xBB	; 187
    19fc:	98 0f       	add	r25, r24
    19fe:	93 30       	cpi	r25, 0x03	; 3
    1a00:	20 f4       	brcc	.+8      	; 0x1a0a <vfprintf+0x132>
    1a02:	99 2d       	mov	r25, r9
    1a04:	90 61       	ori	r25, 0x10	; 16
    1a06:	80 5e       	subi	r24, 0xE0	; 224
    1a08:	07 c0       	rjmp	.+14     	; 0x1a18 <vfprintf+0x140>
    1a0a:	9b e9       	ldi	r25, 0x9B	; 155
    1a0c:	98 0f       	add	r25, r24
    1a0e:	93 30       	cpi	r25, 0x03	; 3
    1a10:	08 f0       	brcs	.+2      	; 0x1a14 <vfprintf+0x13c>
    1a12:	59 c1       	rjmp	.+690    	; 0x1cc6 <vfprintf+0x3ee>
    1a14:	99 2d       	mov	r25, r9
    1a16:	9f 7e       	andi	r25, 0xEF	; 239
    1a18:	96 ff       	sbrs	r25, 6
    1a1a:	16 e0       	ldi	r17, 0x06	; 6
    1a1c:	9f 73       	andi	r25, 0x3F	; 63
    1a1e:	99 2e       	mov	r9, r25
    1a20:	85 36       	cpi	r24, 0x65	; 101
    1a22:	19 f4       	brne	.+6      	; 0x1a2a <vfprintf+0x152>
    1a24:	90 64       	ori	r25, 0x40	; 64
    1a26:	99 2e       	mov	r9, r25
    1a28:	08 c0       	rjmp	.+16     	; 0x1a3a <vfprintf+0x162>
    1a2a:	86 36       	cpi	r24, 0x66	; 102
    1a2c:	21 f4       	brne	.+8      	; 0x1a36 <vfprintf+0x15e>
    1a2e:	39 2f       	mov	r19, r25
    1a30:	30 68       	ori	r19, 0x80	; 128
    1a32:	93 2e       	mov	r9, r19
    1a34:	02 c0       	rjmp	.+4      	; 0x1a3a <vfprintf+0x162>
    1a36:	11 11       	cpse	r17, r1
    1a38:	11 50       	subi	r17, 0x01	; 1
    1a3a:	97 fe       	sbrs	r9, 7
    1a3c:	07 c0       	rjmp	.+14     	; 0x1a4c <vfprintf+0x174>
    1a3e:	1c 33       	cpi	r17, 0x3C	; 60
    1a40:	50 f4       	brcc	.+20     	; 0x1a56 <vfprintf+0x17e>
    1a42:	44 24       	eor	r4, r4
    1a44:	43 94       	inc	r4
    1a46:	41 0e       	add	r4, r17
    1a48:	27 e0       	ldi	r18, 0x07	; 7
    1a4a:	0b c0       	rjmp	.+22     	; 0x1a62 <vfprintf+0x18a>
    1a4c:	18 30       	cpi	r17, 0x08	; 8
    1a4e:	38 f0       	brcs	.+14     	; 0x1a5e <vfprintf+0x186>
    1a50:	27 e0       	ldi	r18, 0x07	; 7
    1a52:	17 e0       	ldi	r17, 0x07	; 7
    1a54:	05 c0       	rjmp	.+10     	; 0x1a60 <vfprintf+0x188>
    1a56:	27 e0       	ldi	r18, 0x07	; 7
    1a58:	9c e3       	ldi	r25, 0x3C	; 60
    1a5a:	49 2e       	mov	r4, r25
    1a5c:	02 c0       	rjmp	.+4      	; 0x1a62 <vfprintf+0x18a>
    1a5e:	21 2f       	mov	r18, r17
    1a60:	41 2c       	mov	r4, r1
    1a62:	56 01       	movw	r10, r12
    1a64:	84 e0       	ldi	r24, 0x04	; 4
    1a66:	a8 0e       	add	r10, r24
    1a68:	b1 1c       	adc	r11, r1
    1a6a:	f6 01       	movw	r30, r12
    1a6c:	60 81       	ld	r22, Z
    1a6e:	71 81       	ldd	r23, Z+1	; 0x01
    1a70:	82 81       	ldd	r24, Z+2	; 0x02
    1a72:	93 81       	ldd	r25, Z+3	; 0x03
    1a74:	04 2d       	mov	r16, r4
    1a76:	a3 01       	movw	r20, r6
    1a78:	df d2       	rcall	.+1470   	; 0x2038 <__ftoa_engine>
    1a7a:	6c 01       	movw	r12, r24
    1a7c:	f9 81       	ldd	r31, Y+1	; 0x01
    1a7e:	fc 87       	std	Y+12, r31	; 0x0c
    1a80:	f0 ff       	sbrs	r31, 0
    1a82:	02 c0       	rjmp	.+4      	; 0x1a88 <vfprintf+0x1b0>
    1a84:	f3 ff       	sbrs	r31, 3
    1a86:	06 c0       	rjmp	.+12     	; 0x1a94 <vfprintf+0x1bc>
    1a88:	91 fc       	sbrc	r9, 1
    1a8a:	06 c0       	rjmp	.+12     	; 0x1a98 <vfprintf+0x1c0>
    1a8c:	92 fe       	sbrs	r9, 2
    1a8e:	06 c0       	rjmp	.+12     	; 0x1a9c <vfprintf+0x1c4>
    1a90:	00 e2       	ldi	r16, 0x20	; 32
    1a92:	05 c0       	rjmp	.+10     	; 0x1a9e <vfprintf+0x1c6>
    1a94:	0d e2       	ldi	r16, 0x2D	; 45
    1a96:	03 c0       	rjmp	.+6      	; 0x1a9e <vfprintf+0x1c6>
    1a98:	0b e2       	ldi	r16, 0x2B	; 43
    1a9a:	01 c0       	rjmp	.+2      	; 0x1a9e <vfprintf+0x1c6>
    1a9c:	00 e0       	ldi	r16, 0x00	; 0
    1a9e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1aa0:	8c 70       	andi	r24, 0x0C	; 12
    1aa2:	19 f0       	breq	.+6      	; 0x1aaa <vfprintf+0x1d2>
    1aa4:	01 11       	cpse	r16, r1
    1aa6:	43 c2       	rjmp	.+1158   	; 0x1f2e <vfprintf+0x656>
    1aa8:	80 c2       	rjmp	.+1280   	; 0x1faa <vfprintf+0x6d2>
    1aaa:	97 fe       	sbrs	r9, 7
    1aac:	10 c0       	rjmp	.+32     	; 0x1ace <vfprintf+0x1f6>
    1aae:	4c 0c       	add	r4, r12
    1ab0:	fc 85       	ldd	r31, Y+12	; 0x0c
    1ab2:	f4 ff       	sbrs	r31, 4
    1ab4:	04 c0       	rjmp	.+8      	; 0x1abe <vfprintf+0x1e6>
    1ab6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ab8:	81 33       	cpi	r24, 0x31	; 49
    1aba:	09 f4       	brne	.+2      	; 0x1abe <vfprintf+0x1e6>
    1abc:	4a 94       	dec	r4
    1abe:	14 14       	cp	r1, r4
    1ac0:	74 f5       	brge	.+92     	; 0x1b1e <vfprintf+0x246>
    1ac2:	28 e0       	ldi	r18, 0x08	; 8
    1ac4:	24 15       	cp	r18, r4
    1ac6:	78 f5       	brcc	.+94     	; 0x1b26 <vfprintf+0x24e>
    1ac8:	88 e0       	ldi	r24, 0x08	; 8
    1aca:	48 2e       	mov	r4, r24
    1acc:	2c c0       	rjmp	.+88     	; 0x1b26 <vfprintf+0x24e>
    1ace:	96 fc       	sbrc	r9, 6
    1ad0:	2a c0       	rjmp	.+84     	; 0x1b26 <vfprintf+0x24e>
    1ad2:	81 2f       	mov	r24, r17
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	8c 15       	cp	r24, r12
    1ad8:	9d 05       	cpc	r25, r13
    1ada:	9c f0       	brlt	.+38     	; 0x1b02 <vfprintf+0x22a>
    1adc:	3c ef       	ldi	r19, 0xFC	; 252
    1ade:	c3 16       	cp	r12, r19
    1ae0:	3f ef       	ldi	r19, 0xFF	; 255
    1ae2:	d3 06       	cpc	r13, r19
    1ae4:	74 f0       	brlt	.+28     	; 0x1b02 <vfprintf+0x22a>
    1ae6:	89 2d       	mov	r24, r9
    1ae8:	80 68       	ori	r24, 0x80	; 128
    1aea:	98 2e       	mov	r9, r24
    1aec:	0a c0       	rjmp	.+20     	; 0x1b02 <vfprintf+0x22a>
    1aee:	e2 e0       	ldi	r30, 0x02	; 2
    1af0:	f0 e0       	ldi	r31, 0x00	; 0
    1af2:	ec 0f       	add	r30, r28
    1af4:	fd 1f       	adc	r31, r29
    1af6:	e1 0f       	add	r30, r17
    1af8:	f1 1d       	adc	r31, r1
    1afa:	80 81       	ld	r24, Z
    1afc:	80 33       	cpi	r24, 0x30	; 48
    1afe:	19 f4       	brne	.+6      	; 0x1b06 <vfprintf+0x22e>
    1b00:	11 50       	subi	r17, 0x01	; 1
    1b02:	11 11       	cpse	r17, r1
    1b04:	f4 cf       	rjmp	.-24     	; 0x1aee <vfprintf+0x216>
    1b06:	97 fe       	sbrs	r9, 7
    1b08:	0e c0       	rjmp	.+28     	; 0x1b26 <vfprintf+0x24e>
    1b0a:	44 24       	eor	r4, r4
    1b0c:	43 94       	inc	r4
    1b0e:	41 0e       	add	r4, r17
    1b10:	81 2f       	mov	r24, r17
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	c8 16       	cp	r12, r24
    1b16:	d9 06       	cpc	r13, r25
    1b18:	2c f4       	brge	.+10     	; 0x1b24 <vfprintf+0x24c>
    1b1a:	1c 19       	sub	r17, r12
    1b1c:	04 c0       	rjmp	.+8      	; 0x1b26 <vfprintf+0x24e>
    1b1e:	44 24       	eor	r4, r4
    1b20:	43 94       	inc	r4
    1b22:	01 c0       	rjmp	.+2      	; 0x1b26 <vfprintf+0x24e>
    1b24:	10 e0       	ldi	r17, 0x00	; 0
    1b26:	97 fe       	sbrs	r9, 7
    1b28:	06 c0       	rjmp	.+12     	; 0x1b36 <vfprintf+0x25e>
    1b2a:	1c 14       	cp	r1, r12
    1b2c:	1d 04       	cpc	r1, r13
    1b2e:	34 f4       	brge	.+12     	; 0x1b3c <vfprintf+0x264>
    1b30:	c6 01       	movw	r24, r12
    1b32:	01 96       	adiw	r24, 0x01	; 1
    1b34:	05 c0       	rjmp	.+10     	; 0x1b40 <vfprintf+0x268>
    1b36:	85 e0       	ldi	r24, 0x05	; 5
    1b38:	90 e0       	ldi	r25, 0x00	; 0
    1b3a:	02 c0       	rjmp	.+4      	; 0x1b40 <vfprintf+0x268>
    1b3c:	81 e0       	ldi	r24, 0x01	; 1
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	01 11       	cpse	r16, r1
    1b42:	01 96       	adiw	r24, 0x01	; 1
    1b44:	11 23       	and	r17, r17
    1b46:	31 f0       	breq	.+12     	; 0x1b54 <vfprintf+0x27c>
    1b48:	21 2f       	mov	r18, r17
    1b4a:	30 e0       	ldi	r19, 0x00	; 0
    1b4c:	2f 5f       	subi	r18, 0xFF	; 255
    1b4e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b50:	82 0f       	add	r24, r18
    1b52:	93 1f       	adc	r25, r19
    1b54:	25 2d       	mov	r18, r5
    1b56:	30 e0       	ldi	r19, 0x00	; 0
    1b58:	82 17       	cp	r24, r18
    1b5a:	93 07       	cpc	r25, r19
    1b5c:	14 f4       	brge	.+4      	; 0x1b62 <vfprintf+0x28a>
    1b5e:	58 1a       	sub	r5, r24
    1b60:	01 c0       	rjmp	.+2      	; 0x1b64 <vfprintf+0x28c>
    1b62:	51 2c       	mov	r5, r1
    1b64:	89 2d       	mov	r24, r9
    1b66:	89 70       	andi	r24, 0x09	; 9
    1b68:	41 f4       	brne	.+16     	; 0x1b7a <vfprintf+0x2a2>
    1b6a:	55 20       	and	r5, r5
    1b6c:	31 f0       	breq	.+12     	; 0x1b7a <vfprintf+0x2a2>
    1b6e:	b7 01       	movw	r22, r14
    1b70:	80 e2       	ldi	r24, 0x20	; 32
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	99 d3       	rcall	.+1842   	; 0x22a8 <fputc>
    1b76:	5a 94       	dec	r5
    1b78:	f8 cf       	rjmp	.-16     	; 0x1b6a <vfprintf+0x292>
    1b7a:	00 23       	and	r16, r16
    1b7c:	21 f0       	breq	.+8      	; 0x1b86 <vfprintf+0x2ae>
    1b7e:	b7 01       	movw	r22, r14
    1b80:	80 2f       	mov	r24, r16
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	91 d3       	rcall	.+1826   	; 0x22a8 <fputc>
    1b86:	93 fc       	sbrc	r9, 3
    1b88:	08 c0       	rjmp	.+16     	; 0x1b9a <vfprintf+0x2c2>
    1b8a:	55 20       	and	r5, r5
    1b8c:	31 f0       	breq	.+12     	; 0x1b9a <vfprintf+0x2c2>
    1b8e:	b7 01       	movw	r22, r14
    1b90:	80 e3       	ldi	r24, 0x30	; 48
    1b92:	90 e0       	ldi	r25, 0x00	; 0
    1b94:	89 d3       	rcall	.+1810   	; 0x22a8 <fputc>
    1b96:	5a 94       	dec	r5
    1b98:	f8 cf       	rjmp	.-16     	; 0x1b8a <vfprintf+0x2b2>
    1b9a:	97 fe       	sbrs	r9, 7
    1b9c:	4a c0       	rjmp	.+148    	; 0x1c32 <vfprintf+0x35a>
    1b9e:	46 01       	movw	r8, r12
    1ba0:	d7 fe       	sbrs	r13, 7
    1ba2:	02 c0       	rjmp	.+4      	; 0x1ba8 <vfprintf+0x2d0>
    1ba4:	81 2c       	mov	r8, r1
    1ba6:	91 2c       	mov	r9, r1
    1ba8:	c6 01       	movw	r24, r12
    1baa:	88 19       	sub	r24, r8
    1bac:	99 09       	sbc	r25, r9
    1bae:	f3 01       	movw	r30, r6
    1bb0:	e8 0f       	add	r30, r24
    1bb2:	f9 1f       	adc	r31, r25
    1bb4:	fe 87       	std	Y+14, r31	; 0x0e
    1bb6:	ed 87       	std	Y+13, r30	; 0x0d
    1bb8:	96 01       	movw	r18, r12
    1bba:	24 19       	sub	r18, r4
    1bbc:	31 09       	sbc	r19, r1
    1bbe:	38 8b       	std	Y+16, r19	; 0x10
    1bc0:	2f 87       	std	Y+15, r18	; 0x0f
    1bc2:	01 2f       	mov	r16, r17
    1bc4:	10 e0       	ldi	r17, 0x00	; 0
    1bc6:	11 95       	neg	r17
    1bc8:	01 95       	neg	r16
    1bca:	11 09       	sbc	r17, r1
    1bcc:	3f ef       	ldi	r19, 0xFF	; 255
    1bce:	83 16       	cp	r8, r19
    1bd0:	93 06       	cpc	r9, r19
    1bd2:	21 f4       	brne	.+8      	; 0x1bdc <vfprintf+0x304>
    1bd4:	b7 01       	movw	r22, r14
    1bd6:	8e e2       	ldi	r24, 0x2E	; 46
    1bd8:	90 e0       	ldi	r25, 0x00	; 0
    1bda:	66 d3       	rcall	.+1740   	; 0x22a8 <fputc>
    1bdc:	c8 14       	cp	r12, r8
    1bde:	d9 04       	cpc	r13, r9
    1be0:	4c f0       	brlt	.+18     	; 0x1bf4 <vfprintf+0x31c>
    1be2:	8f 85       	ldd	r24, Y+15	; 0x0f
    1be4:	98 89       	ldd	r25, Y+16	; 0x10
    1be6:	88 15       	cp	r24, r8
    1be8:	99 05       	cpc	r25, r9
    1bea:	24 f4       	brge	.+8      	; 0x1bf4 <vfprintf+0x31c>
    1bec:	ed 85       	ldd	r30, Y+13	; 0x0d
    1bee:	fe 85       	ldd	r31, Y+14	; 0x0e
    1bf0:	81 81       	ldd	r24, Z+1	; 0x01
    1bf2:	01 c0       	rjmp	.+2      	; 0x1bf6 <vfprintf+0x31e>
    1bf4:	80 e3       	ldi	r24, 0x30	; 48
    1bf6:	f1 e0       	ldi	r31, 0x01	; 1
    1bf8:	8f 1a       	sub	r8, r31
    1bfa:	91 08       	sbc	r9, r1
    1bfc:	2d 85       	ldd	r18, Y+13	; 0x0d
    1bfe:	3e 85       	ldd	r19, Y+14	; 0x0e
    1c00:	2f 5f       	subi	r18, 0xFF	; 255
    1c02:	3f 4f       	sbci	r19, 0xFF	; 255
    1c04:	3e 87       	std	Y+14, r19	; 0x0e
    1c06:	2d 87       	std	Y+13, r18	; 0x0d
    1c08:	80 16       	cp	r8, r16
    1c0a:	91 06       	cpc	r9, r17
    1c0c:	24 f0       	brlt	.+8      	; 0x1c16 <vfprintf+0x33e>
    1c0e:	b7 01       	movw	r22, r14
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	4a d3       	rcall	.+1684   	; 0x22a8 <fputc>
    1c14:	db cf       	rjmp	.-74     	; 0x1bcc <vfprintf+0x2f4>
    1c16:	c8 14       	cp	r12, r8
    1c18:	d9 04       	cpc	r13, r9
    1c1a:	41 f4       	brne	.+16     	; 0x1c2c <vfprintf+0x354>
    1c1c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c1e:	96 33       	cpi	r25, 0x36	; 54
    1c20:	20 f4       	brcc	.+8      	; 0x1c2a <vfprintf+0x352>
    1c22:	95 33       	cpi	r25, 0x35	; 53
    1c24:	19 f4       	brne	.+6      	; 0x1c2c <vfprintf+0x354>
    1c26:	3c 85       	ldd	r19, Y+12	; 0x0c
    1c28:	34 ff       	sbrs	r19, 4
    1c2a:	81 e3       	ldi	r24, 0x31	; 49
    1c2c:	b7 01       	movw	r22, r14
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	48 c0       	rjmp	.+144    	; 0x1cc2 <vfprintf+0x3ea>
    1c32:	8a 81       	ldd	r24, Y+2	; 0x02
    1c34:	81 33       	cpi	r24, 0x31	; 49
    1c36:	19 f0       	breq	.+6      	; 0x1c3e <vfprintf+0x366>
    1c38:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c3a:	9f 7e       	andi	r25, 0xEF	; 239
    1c3c:	9c 87       	std	Y+12, r25	; 0x0c
    1c3e:	b7 01       	movw	r22, r14
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	32 d3       	rcall	.+1636   	; 0x22a8 <fputc>
    1c44:	11 11       	cpse	r17, r1
    1c46:	05 c0       	rjmp	.+10     	; 0x1c52 <vfprintf+0x37a>
    1c48:	94 fc       	sbrc	r9, 4
    1c4a:	16 c0       	rjmp	.+44     	; 0x1c78 <vfprintf+0x3a0>
    1c4c:	85 e6       	ldi	r24, 0x65	; 101
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	15 c0       	rjmp	.+42     	; 0x1c7c <vfprintf+0x3a4>
    1c52:	b7 01       	movw	r22, r14
    1c54:	8e e2       	ldi	r24, 0x2E	; 46
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	27 d3       	rcall	.+1614   	; 0x22a8 <fputc>
    1c5a:	1e 5f       	subi	r17, 0xFE	; 254
    1c5c:	82 e0       	ldi	r24, 0x02	; 2
    1c5e:	01 e0       	ldi	r16, 0x01	; 1
    1c60:	08 0f       	add	r16, r24
    1c62:	f3 01       	movw	r30, r6
    1c64:	e8 0f       	add	r30, r24
    1c66:	f1 1d       	adc	r31, r1
    1c68:	80 81       	ld	r24, Z
    1c6a:	b7 01       	movw	r22, r14
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	1c d3       	rcall	.+1592   	; 0x22a8 <fputc>
    1c70:	80 2f       	mov	r24, r16
    1c72:	01 13       	cpse	r16, r17
    1c74:	f4 cf       	rjmp	.-24     	; 0x1c5e <vfprintf+0x386>
    1c76:	e8 cf       	rjmp	.-48     	; 0x1c48 <vfprintf+0x370>
    1c78:	85 e4       	ldi	r24, 0x45	; 69
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	b7 01       	movw	r22, r14
    1c7e:	14 d3       	rcall	.+1576   	; 0x22a8 <fputc>
    1c80:	d7 fc       	sbrc	r13, 7
    1c82:	06 c0       	rjmp	.+12     	; 0x1c90 <vfprintf+0x3b8>
    1c84:	c1 14       	cp	r12, r1
    1c86:	d1 04       	cpc	r13, r1
    1c88:	41 f4       	brne	.+16     	; 0x1c9a <vfprintf+0x3c2>
    1c8a:	ec 85       	ldd	r30, Y+12	; 0x0c
    1c8c:	e4 ff       	sbrs	r30, 4
    1c8e:	05 c0       	rjmp	.+10     	; 0x1c9a <vfprintf+0x3c2>
    1c90:	d1 94       	neg	r13
    1c92:	c1 94       	neg	r12
    1c94:	d1 08       	sbc	r13, r1
    1c96:	8d e2       	ldi	r24, 0x2D	; 45
    1c98:	01 c0       	rjmp	.+2      	; 0x1c9c <vfprintf+0x3c4>
    1c9a:	8b e2       	ldi	r24, 0x2B	; 43
    1c9c:	b7 01       	movw	r22, r14
    1c9e:	90 e0       	ldi	r25, 0x00	; 0
    1ca0:	03 d3       	rcall	.+1542   	; 0x22a8 <fputc>
    1ca2:	80 e3       	ldi	r24, 0x30	; 48
    1ca4:	2a e0       	ldi	r18, 0x0A	; 10
    1ca6:	c2 16       	cp	r12, r18
    1ca8:	d1 04       	cpc	r13, r1
    1caa:	2c f0       	brlt	.+10     	; 0x1cb6 <vfprintf+0x3de>
    1cac:	8f 5f       	subi	r24, 0xFF	; 255
    1cae:	fa e0       	ldi	r31, 0x0A	; 10
    1cb0:	cf 1a       	sub	r12, r31
    1cb2:	d1 08       	sbc	r13, r1
    1cb4:	f7 cf       	rjmp	.-18     	; 0x1ca4 <vfprintf+0x3cc>
    1cb6:	b7 01       	movw	r22, r14
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	f6 d2       	rcall	.+1516   	; 0x22a8 <fputc>
    1cbc:	b7 01       	movw	r22, r14
    1cbe:	c6 01       	movw	r24, r12
    1cc0:	c0 96       	adiw	r24, 0x30	; 48
    1cc2:	f2 d2       	rcall	.+1508   	; 0x22a8 <fputc>
    1cc4:	49 c1       	rjmp	.+658    	; 0x1f58 <vfprintf+0x680>
    1cc6:	83 36       	cpi	r24, 0x63	; 99
    1cc8:	31 f0       	breq	.+12     	; 0x1cd6 <vfprintf+0x3fe>
    1cca:	83 37       	cpi	r24, 0x73	; 115
    1ccc:	79 f0       	breq	.+30     	; 0x1cec <vfprintf+0x414>
    1cce:	83 35       	cpi	r24, 0x53	; 83
    1cd0:	09 f0       	breq	.+2      	; 0x1cd4 <vfprintf+0x3fc>
    1cd2:	52 c0       	rjmp	.+164    	; 0x1d78 <vfprintf+0x4a0>
    1cd4:	1f c0       	rjmp	.+62     	; 0x1d14 <vfprintf+0x43c>
    1cd6:	56 01       	movw	r10, r12
    1cd8:	32 e0       	ldi	r19, 0x02	; 2
    1cda:	a3 0e       	add	r10, r19
    1cdc:	b1 1c       	adc	r11, r1
    1cde:	f6 01       	movw	r30, r12
    1ce0:	80 81       	ld	r24, Z
    1ce2:	89 83       	std	Y+1, r24	; 0x01
    1ce4:	01 e0       	ldi	r16, 0x01	; 1
    1ce6:	10 e0       	ldi	r17, 0x00	; 0
    1ce8:	63 01       	movw	r12, r6
    1cea:	11 c0       	rjmp	.+34     	; 0x1d0e <vfprintf+0x436>
    1cec:	56 01       	movw	r10, r12
    1cee:	f2 e0       	ldi	r31, 0x02	; 2
    1cf0:	af 0e       	add	r10, r31
    1cf2:	b1 1c       	adc	r11, r1
    1cf4:	f6 01       	movw	r30, r12
    1cf6:	c0 80       	ld	r12, Z
    1cf8:	d1 80       	ldd	r13, Z+1	; 0x01
    1cfa:	96 fe       	sbrs	r9, 6
    1cfc:	03 c0       	rjmp	.+6      	; 0x1d04 <vfprintf+0x42c>
    1cfe:	61 2f       	mov	r22, r17
    1d00:	70 e0       	ldi	r23, 0x00	; 0
    1d02:	02 c0       	rjmp	.+4      	; 0x1d08 <vfprintf+0x430>
    1d04:	6f ef       	ldi	r22, 0xFF	; 255
    1d06:	7f ef       	ldi	r23, 0xFF	; 255
    1d08:	c6 01       	movw	r24, r12
    1d0a:	79 d2       	rcall	.+1266   	; 0x21fe <strnlen>
    1d0c:	8c 01       	movw	r16, r24
    1d0e:	f9 2d       	mov	r31, r9
    1d10:	ff 77       	andi	r31, 0x7F	; 127
    1d12:	13 c0       	rjmp	.+38     	; 0x1d3a <vfprintf+0x462>
    1d14:	56 01       	movw	r10, r12
    1d16:	22 e0       	ldi	r18, 0x02	; 2
    1d18:	a2 0e       	add	r10, r18
    1d1a:	b1 1c       	adc	r11, r1
    1d1c:	f6 01       	movw	r30, r12
    1d1e:	c0 80       	ld	r12, Z
    1d20:	d1 80       	ldd	r13, Z+1	; 0x01
    1d22:	96 fe       	sbrs	r9, 6
    1d24:	03 c0       	rjmp	.+6      	; 0x1d2c <vfprintf+0x454>
    1d26:	61 2f       	mov	r22, r17
    1d28:	70 e0       	ldi	r23, 0x00	; 0
    1d2a:	02 c0       	rjmp	.+4      	; 0x1d30 <vfprintf+0x458>
    1d2c:	6f ef       	ldi	r22, 0xFF	; 255
    1d2e:	7f ef       	ldi	r23, 0xFF	; 255
    1d30:	c6 01       	movw	r24, r12
    1d32:	5a d2       	rcall	.+1204   	; 0x21e8 <strnlen_P>
    1d34:	8c 01       	movw	r16, r24
    1d36:	f9 2d       	mov	r31, r9
    1d38:	f0 68       	ori	r31, 0x80	; 128
    1d3a:	9f 2e       	mov	r9, r31
    1d3c:	f3 fd       	sbrc	r31, 3
    1d3e:	18 c0       	rjmp	.+48     	; 0x1d70 <vfprintf+0x498>
    1d40:	85 2d       	mov	r24, r5
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	08 17       	cp	r16, r24
    1d46:	19 07       	cpc	r17, r25
    1d48:	98 f4       	brcc	.+38     	; 0x1d70 <vfprintf+0x498>
    1d4a:	b7 01       	movw	r22, r14
    1d4c:	80 e2       	ldi	r24, 0x20	; 32
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	ab d2       	rcall	.+1366   	; 0x22a8 <fputc>
    1d52:	5a 94       	dec	r5
    1d54:	f5 cf       	rjmp	.-22     	; 0x1d40 <vfprintf+0x468>
    1d56:	f6 01       	movw	r30, r12
    1d58:	97 fc       	sbrc	r9, 7
    1d5a:	85 91       	lpm	r24, Z+
    1d5c:	97 fe       	sbrs	r9, 7
    1d5e:	81 91       	ld	r24, Z+
    1d60:	6f 01       	movw	r12, r30
    1d62:	b7 01       	movw	r22, r14
    1d64:	90 e0       	ldi	r25, 0x00	; 0
    1d66:	a0 d2       	rcall	.+1344   	; 0x22a8 <fputc>
    1d68:	51 10       	cpse	r5, r1
    1d6a:	5a 94       	dec	r5
    1d6c:	01 50       	subi	r16, 0x01	; 1
    1d6e:	11 09       	sbc	r17, r1
    1d70:	01 15       	cp	r16, r1
    1d72:	11 05       	cpc	r17, r1
    1d74:	81 f7       	brne	.-32     	; 0x1d56 <vfprintf+0x47e>
    1d76:	f0 c0       	rjmp	.+480    	; 0x1f58 <vfprintf+0x680>
    1d78:	84 36       	cpi	r24, 0x64	; 100
    1d7a:	11 f0       	breq	.+4      	; 0x1d80 <vfprintf+0x4a8>
    1d7c:	89 36       	cpi	r24, 0x69	; 105
    1d7e:	59 f5       	brne	.+86     	; 0x1dd6 <vfprintf+0x4fe>
    1d80:	56 01       	movw	r10, r12
    1d82:	97 fe       	sbrs	r9, 7
    1d84:	09 c0       	rjmp	.+18     	; 0x1d98 <vfprintf+0x4c0>
    1d86:	24 e0       	ldi	r18, 0x04	; 4
    1d88:	a2 0e       	add	r10, r18
    1d8a:	b1 1c       	adc	r11, r1
    1d8c:	f6 01       	movw	r30, r12
    1d8e:	60 81       	ld	r22, Z
    1d90:	71 81       	ldd	r23, Z+1	; 0x01
    1d92:	82 81       	ldd	r24, Z+2	; 0x02
    1d94:	93 81       	ldd	r25, Z+3	; 0x03
    1d96:	0a c0       	rjmp	.+20     	; 0x1dac <vfprintf+0x4d4>
    1d98:	f2 e0       	ldi	r31, 0x02	; 2
    1d9a:	af 0e       	add	r10, r31
    1d9c:	b1 1c       	adc	r11, r1
    1d9e:	f6 01       	movw	r30, r12
    1da0:	60 81       	ld	r22, Z
    1da2:	71 81       	ldd	r23, Z+1	; 0x01
    1da4:	07 2e       	mov	r0, r23
    1da6:	00 0c       	add	r0, r0
    1da8:	88 0b       	sbc	r24, r24
    1daa:	99 0b       	sbc	r25, r25
    1dac:	f9 2d       	mov	r31, r9
    1dae:	ff 76       	andi	r31, 0x6F	; 111
    1db0:	9f 2e       	mov	r9, r31
    1db2:	97 ff       	sbrs	r25, 7
    1db4:	09 c0       	rjmp	.+18     	; 0x1dc8 <vfprintf+0x4f0>
    1db6:	90 95       	com	r25
    1db8:	80 95       	com	r24
    1dba:	70 95       	com	r23
    1dbc:	61 95       	neg	r22
    1dbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc0:	8f 4f       	sbci	r24, 0xFF	; 255
    1dc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc4:	f0 68       	ori	r31, 0x80	; 128
    1dc6:	9f 2e       	mov	r9, r31
    1dc8:	2a e0       	ldi	r18, 0x0A	; 10
    1dca:	30 e0       	ldi	r19, 0x00	; 0
    1dcc:	a3 01       	movw	r20, r6
    1dce:	ee d2       	rcall	.+1500   	; 0x23ac <__ultoa_invert>
    1dd0:	c8 2e       	mov	r12, r24
    1dd2:	c6 18       	sub	r12, r6
    1dd4:	3e c0       	rjmp	.+124    	; 0x1e52 <vfprintf+0x57a>
    1dd6:	09 2d       	mov	r16, r9
    1dd8:	85 37       	cpi	r24, 0x75	; 117
    1dda:	21 f4       	brne	.+8      	; 0x1de4 <vfprintf+0x50c>
    1ddc:	0f 7e       	andi	r16, 0xEF	; 239
    1dde:	2a e0       	ldi	r18, 0x0A	; 10
    1de0:	30 e0       	ldi	r19, 0x00	; 0
    1de2:	1d c0       	rjmp	.+58     	; 0x1e1e <vfprintf+0x546>
    1de4:	09 7f       	andi	r16, 0xF9	; 249
    1de6:	8f 36       	cpi	r24, 0x6F	; 111
    1de8:	91 f0       	breq	.+36     	; 0x1e0e <vfprintf+0x536>
    1dea:	18 f4       	brcc	.+6      	; 0x1df2 <vfprintf+0x51a>
    1dec:	88 35       	cpi	r24, 0x58	; 88
    1dee:	59 f0       	breq	.+22     	; 0x1e06 <vfprintf+0x52e>
    1df0:	bc c0       	rjmp	.+376    	; 0x1f6a <vfprintf+0x692>
    1df2:	80 37       	cpi	r24, 0x70	; 112
    1df4:	19 f0       	breq	.+6      	; 0x1dfc <vfprintf+0x524>
    1df6:	88 37       	cpi	r24, 0x78	; 120
    1df8:	11 f0       	breq	.+4      	; 0x1dfe <vfprintf+0x526>
    1dfa:	b7 c0       	rjmp	.+366    	; 0x1f6a <vfprintf+0x692>
    1dfc:	00 61       	ori	r16, 0x10	; 16
    1dfe:	04 ff       	sbrs	r16, 4
    1e00:	09 c0       	rjmp	.+18     	; 0x1e14 <vfprintf+0x53c>
    1e02:	04 60       	ori	r16, 0x04	; 4
    1e04:	07 c0       	rjmp	.+14     	; 0x1e14 <vfprintf+0x53c>
    1e06:	94 fe       	sbrs	r9, 4
    1e08:	08 c0       	rjmp	.+16     	; 0x1e1a <vfprintf+0x542>
    1e0a:	06 60       	ori	r16, 0x06	; 6
    1e0c:	06 c0       	rjmp	.+12     	; 0x1e1a <vfprintf+0x542>
    1e0e:	28 e0       	ldi	r18, 0x08	; 8
    1e10:	30 e0       	ldi	r19, 0x00	; 0
    1e12:	05 c0       	rjmp	.+10     	; 0x1e1e <vfprintf+0x546>
    1e14:	20 e1       	ldi	r18, 0x10	; 16
    1e16:	30 e0       	ldi	r19, 0x00	; 0
    1e18:	02 c0       	rjmp	.+4      	; 0x1e1e <vfprintf+0x546>
    1e1a:	20 e1       	ldi	r18, 0x10	; 16
    1e1c:	32 e0       	ldi	r19, 0x02	; 2
    1e1e:	56 01       	movw	r10, r12
    1e20:	07 ff       	sbrs	r16, 7
    1e22:	09 c0       	rjmp	.+18     	; 0x1e36 <vfprintf+0x55e>
    1e24:	84 e0       	ldi	r24, 0x04	; 4
    1e26:	a8 0e       	add	r10, r24
    1e28:	b1 1c       	adc	r11, r1
    1e2a:	f6 01       	movw	r30, r12
    1e2c:	60 81       	ld	r22, Z
    1e2e:	71 81       	ldd	r23, Z+1	; 0x01
    1e30:	82 81       	ldd	r24, Z+2	; 0x02
    1e32:	93 81       	ldd	r25, Z+3	; 0x03
    1e34:	08 c0       	rjmp	.+16     	; 0x1e46 <vfprintf+0x56e>
    1e36:	f2 e0       	ldi	r31, 0x02	; 2
    1e38:	af 0e       	add	r10, r31
    1e3a:	b1 1c       	adc	r11, r1
    1e3c:	f6 01       	movw	r30, r12
    1e3e:	60 81       	ld	r22, Z
    1e40:	71 81       	ldd	r23, Z+1	; 0x01
    1e42:	80 e0       	ldi	r24, 0x00	; 0
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	a3 01       	movw	r20, r6
    1e48:	b1 d2       	rcall	.+1378   	; 0x23ac <__ultoa_invert>
    1e4a:	c8 2e       	mov	r12, r24
    1e4c:	c6 18       	sub	r12, r6
    1e4e:	0f 77       	andi	r16, 0x7F	; 127
    1e50:	90 2e       	mov	r9, r16
    1e52:	96 fe       	sbrs	r9, 6
    1e54:	0b c0       	rjmp	.+22     	; 0x1e6c <vfprintf+0x594>
    1e56:	09 2d       	mov	r16, r9
    1e58:	0e 7f       	andi	r16, 0xFE	; 254
    1e5a:	c1 16       	cp	r12, r17
    1e5c:	50 f4       	brcc	.+20     	; 0x1e72 <vfprintf+0x59a>
    1e5e:	94 fe       	sbrs	r9, 4
    1e60:	0a c0       	rjmp	.+20     	; 0x1e76 <vfprintf+0x59e>
    1e62:	92 fc       	sbrc	r9, 2
    1e64:	08 c0       	rjmp	.+16     	; 0x1e76 <vfprintf+0x59e>
    1e66:	09 2d       	mov	r16, r9
    1e68:	0e 7e       	andi	r16, 0xEE	; 238
    1e6a:	05 c0       	rjmp	.+10     	; 0x1e76 <vfprintf+0x59e>
    1e6c:	dc 2c       	mov	r13, r12
    1e6e:	09 2d       	mov	r16, r9
    1e70:	03 c0       	rjmp	.+6      	; 0x1e78 <vfprintf+0x5a0>
    1e72:	dc 2c       	mov	r13, r12
    1e74:	01 c0       	rjmp	.+2      	; 0x1e78 <vfprintf+0x5a0>
    1e76:	d1 2e       	mov	r13, r17
    1e78:	04 ff       	sbrs	r16, 4
    1e7a:	0d c0       	rjmp	.+26     	; 0x1e96 <vfprintf+0x5be>
    1e7c:	fe 01       	movw	r30, r28
    1e7e:	ec 0d       	add	r30, r12
    1e80:	f1 1d       	adc	r31, r1
    1e82:	80 81       	ld	r24, Z
    1e84:	80 33       	cpi	r24, 0x30	; 48
    1e86:	11 f4       	brne	.+4      	; 0x1e8c <vfprintf+0x5b4>
    1e88:	09 7e       	andi	r16, 0xE9	; 233
    1e8a:	09 c0       	rjmp	.+18     	; 0x1e9e <vfprintf+0x5c6>
    1e8c:	02 ff       	sbrs	r16, 2
    1e8e:	06 c0       	rjmp	.+12     	; 0x1e9c <vfprintf+0x5c4>
    1e90:	d3 94       	inc	r13
    1e92:	d3 94       	inc	r13
    1e94:	04 c0       	rjmp	.+8      	; 0x1e9e <vfprintf+0x5c6>
    1e96:	80 2f       	mov	r24, r16
    1e98:	86 78       	andi	r24, 0x86	; 134
    1e9a:	09 f0       	breq	.+2      	; 0x1e9e <vfprintf+0x5c6>
    1e9c:	d3 94       	inc	r13
    1e9e:	03 fd       	sbrc	r16, 3
    1ea0:	10 c0       	rjmp	.+32     	; 0x1ec2 <vfprintf+0x5ea>
    1ea2:	00 ff       	sbrs	r16, 0
    1ea4:	06 c0       	rjmp	.+12     	; 0x1eb2 <vfprintf+0x5da>
    1ea6:	1c 2d       	mov	r17, r12
    1ea8:	d5 14       	cp	r13, r5
    1eaa:	78 f4       	brcc	.+30     	; 0x1eca <vfprintf+0x5f2>
    1eac:	15 0d       	add	r17, r5
    1eae:	1d 19       	sub	r17, r13
    1eb0:	0c c0       	rjmp	.+24     	; 0x1eca <vfprintf+0x5f2>
    1eb2:	d5 14       	cp	r13, r5
    1eb4:	50 f4       	brcc	.+20     	; 0x1eca <vfprintf+0x5f2>
    1eb6:	b7 01       	movw	r22, r14
    1eb8:	80 e2       	ldi	r24, 0x20	; 32
    1eba:	90 e0       	ldi	r25, 0x00	; 0
    1ebc:	f5 d1       	rcall	.+1002   	; 0x22a8 <fputc>
    1ebe:	d3 94       	inc	r13
    1ec0:	f8 cf       	rjmp	.-16     	; 0x1eb2 <vfprintf+0x5da>
    1ec2:	d5 14       	cp	r13, r5
    1ec4:	10 f4       	brcc	.+4      	; 0x1eca <vfprintf+0x5f2>
    1ec6:	5d 18       	sub	r5, r13
    1ec8:	01 c0       	rjmp	.+2      	; 0x1ecc <vfprintf+0x5f4>
    1eca:	51 2c       	mov	r5, r1
    1ecc:	04 ff       	sbrs	r16, 4
    1ece:	0f c0       	rjmp	.+30     	; 0x1eee <vfprintf+0x616>
    1ed0:	b7 01       	movw	r22, r14
    1ed2:	80 e3       	ldi	r24, 0x30	; 48
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	e8 d1       	rcall	.+976    	; 0x22a8 <fputc>
    1ed8:	02 ff       	sbrs	r16, 2
    1eda:	16 c0       	rjmp	.+44     	; 0x1f08 <vfprintf+0x630>
    1edc:	01 fd       	sbrc	r16, 1
    1ede:	03 c0       	rjmp	.+6      	; 0x1ee6 <vfprintf+0x60e>
    1ee0:	88 e7       	ldi	r24, 0x78	; 120
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	02 c0       	rjmp	.+4      	; 0x1eea <vfprintf+0x612>
    1ee6:	88 e5       	ldi	r24, 0x58	; 88
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	b7 01       	movw	r22, r14
    1eec:	0c c0       	rjmp	.+24     	; 0x1f06 <vfprintf+0x62e>
    1eee:	80 2f       	mov	r24, r16
    1ef0:	86 78       	andi	r24, 0x86	; 134
    1ef2:	51 f0       	breq	.+20     	; 0x1f08 <vfprintf+0x630>
    1ef4:	01 ff       	sbrs	r16, 1
    1ef6:	02 c0       	rjmp	.+4      	; 0x1efc <vfprintf+0x624>
    1ef8:	8b e2       	ldi	r24, 0x2B	; 43
    1efa:	01 c0       	rjmp	.+2      	; 0x1efe <vfprintf+0x626>
    1efc:	80 e2       	ldi	r24, 0x20	; 32
    1efe:	07 fd       	sbrc	r16, 7
    1f00:	8d e2       	ldi	r24, 0x2D	; 45
    1f02:	b7 01       	movw	r22, r14
    1f04:	90 e0       	ldi	r25, 0x00	; 0
    1f06:	d0 d1       	rcall	.+928    	; 0x22a8 <fputc>
    1f08:	c1 16       	cp	r12, r17
    1f0a:	30 f4       	brcc	.+12     	; 0x1f18 <vfprintf+0x640>
    1f0c:	b7 01       	movw	r22, r14
    1f0e:	80 e3       	ldi	r24, 0x30	; 48
    1f10:	90 e0       	ldi	r25, 0x00	; 0
    1f12:	ca d1       	rcall	.+916    	; 0x22a8 <fputc>
    1f14:	11 50       	subi	r17, 0x01	; 1
    1f16:	f8 cf       	rjmp	.-16     	; 0x1f08 <vfprintf+0x630>
    1f18:	ca 94       	dec	r12
    1f1a:	f3 01       	movw	r30, r6
    1f1c:	ec 0d       	add	r30, r12
    1f1e:	f1 1d       	adc	r31, r1
    1f20:	80 81       	ld	r24, Z
    1f22:	b7 01       	movw	r22, r14
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	c0 d1       	rcall	.+896    	; 0x22a8 <fputc>
    1f28:	c1 10       	cpse	r12, r1
    1f2a:	f6 cf       	rjmp	.-20     	; 0x1f18 <vfprintf+0x640>
    1f2c:	15 c0       	rjmp	.+42     	; 0x1f58 <vfprintf+0x680>
    1f2e:	f4 e0       	ldi	r31, 0x04	; 4
    1f30:	f5 15       	cp	r31, r5
    1f32:	50 f5       	brcc	.+84     	; 0x1f88 <vfprintf+0x6b0>
    1f34:	84 e0       	ldi	r24, 0x04	; 4
    1f36:	58 1a       	sub	r5, r24
    1f38:	93 fe       	sbrs	r9, 3
    1f3a:	1e c0       	rjmp	.+60     	; 0x1f78 <vfprintf+0x6a0>
    1f3c:	01 11       	cpse	r16, r1
    1f3e:	25 c0       	rjmp	.+74     	; 0x1f8a <vfprintf+0x6b2>
    1f40:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f42:	23 ff       	sbrs	r18, 3
    1f44:	27 c0       	rjmp	.+78     	; 0x1f94 <vfprintf+0x6bc>
    1f46:	0c e6       	ldi	r16, 0x6C	; 108
    1f48:	11 e0       	ldi	r17, 0x01	; 1
    1f4a:	39 2d       	mov	r19, r9
    1f4c:	30 71       	andi	r19, 0x10	; 16
    1f4e:	93 2e       	mov	r9, r19
    1f50:	f8 01       	movw	r30, r16
    1f52:	84 91       	lpm	r24, Z
    1f54:	81 11       	cpse	r24, r1
    1f56:	21 c0       	rjmp	.+66     	; 0x1f9a <vfprintf+0x6c2>
    1f58:	55 20       	and	r5, r5
    1f5a:	09 f4       	brne	.+2      	; 0x1f5e <vfprintf+0x686>
    1f5c:	fc cc       	rjmp	.-1544   	; 0x1956 <vfprintf+0x7e>
    1f5e:	b7 01       	movw	r22, r14
    1f60:	80 e2       	ldi	r24, 0x20	; 32
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	a1 d1       	rcall	.+834    	; 0x22a8 <fputc>
    1f66:	5a 94       	dec	r5
    1f68:	f7 cf       	rjmp	.-18     	; 0x1f58 <vfprintf+0x680>
    1f6a:	f7 01       	movw	r30, r14
    1f6c:	86 81       	ldd	r24, Z+6	; 0x06
    1f6e:	97 81       	ldd	r25, Z+7	; 0x07
    1f70:	23 c0       	rjmp	.+70     	; 0x1fb8 <vfprintf+0x6e0>
    1f72:	8f ef       	ldi	r24, 0xFF	; 255
    1f74:	9f ef       	ldi	r25, 0xFF	; 255
    1f76:	20 c0       	rjmp	.+64     	; 0x1fb8 <vfprintf+0x6e0>
    1f78:	b7 01       	movw	r22, r14
    1f7a:	80 e2       	ldi	r24, 0x20	; 32
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	94 d1       	rcall	.+808    	; 0x22a8 <fputc>
    1f80:	5a 94       	dec	r5
    1f82:	51 10       	cpse	r5, r1
    1f84:	f9 cf       	rjmp	.-14     	; 0x1f78 <vfprintf+0x6a0>
    1f86:	da cf       	rjmp	.-76     	; 0x1f3c <vfprintf+0x664>
    1f88:	51 2c       	mov	r5, r1
    1f8a:	b7 01       	movw	r22, r14
    1f8c:	80 2f       	mov	r24, r16
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	8b d1       	rcall	.+790    	; 0x22a8 <fputc>
    1f92:	d6 cf       	rjmp	.-84     	; 0x1f40 <vfprintf+0x668>
    1f94:	00 e7       	ldi	r16, 0x70	; 112
    1f96:	11 e0       	ldi	r17, 0x01	; 1
    1f98:	d8 cf       	rjmp	.-80     	; 0x1f4a <vfprintf+0x672>
    1f9a:	91 10       	cpse	r9, r1
    1f9c:	80 52       	subi	r24, 0x20	; 32
    1f9e:	b7 01       	movw	r22, r14
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	82 d1       	rcall	.+772    	; 0x22a8 <fputc>
    1fa4:	0f 5f       	subi	r16, 0xFF	; 255
    1fa6:	1f 4f       	sbci	r17, 0xFF	; 255
    1fa8:	d3 cf       	rjmp	.-90     	; 0x1f50 <vfprintf+0x678>
    1faa:	23 e0       	ldi	r18, 0x03	; 3
    1fac:	25 15       	cp	r18, r5
    1fae:	10 f4       	brcc	.+4      	; 0x1fb4 <vfprintf+0x6dc>
    1fb0:	83 e0       	ldi	r24, 0x03	; 3
    1fb2:	c1 cf       	rjmp	.-126    	; 0x1f36 <vfprintf+0x65e>
    1fb4:	51 2c       	mov	r5, r1
    1fb6:	c4 cf       	rjmp	.-120    	; 0x1f40 <vfprintf+0x668>
    1fb8:	60 96       	adiw	r28, 0x10	; 16
    1fba:	0f b6       	in	r0, 0x3f	; 63
    1fbc:	f8 94       	cli
    1fbe:	de bf       	out	0x3e, r29	; 62
    1fc0:	0f be       	out	0x3f, r0	; 63
    1fc2:	cd bf       	out	0x3d, r28	; 61
    1fc4:	df 91       	pop	r29
    1fc6:	cf 91       	pop	r28
    1fc8:	1f 91       	pop	r17
    1fca:	0f 91       	pop	r16
    1fcc:	ff 90       	pop	r15
    1fce:	ef 90       	pop	r14
    1fd0:	df 90       	pop	r13
    1fd2:	cf 90       	pop	r12
    1fd4:	bf 90       	pop	r11
    1fd6:	af 90       	pop	r10
    1fd8:	9f 90       	pop	r9
    1fda:	8f 90       	pop	r8
    1fdc:	7f 90       	pop	r7
    1fde:	6f 90       	pop	r6
    1fe0:	5f 90       	pop	r5
    1fe2:	4f 90       	pop	r4
    1fe4:	3f 90       	pop	r3
    1fe6:	2f 90       	pop	r2
    1fe8:	08 95       	ret

00001fea <__divmodhi4>:
    1fea:	97 fb       	bst	r25, 7
    1fec:	07 2e       	mov	r0, r23
    1fee:	16 f4       	brtc	.+4      	; 0x1ff4 <__divmodhi4+0xa>
    1ff0:	00 94       	com	r0
    1ff2:	06 d0       	rcall	.+12     	; 0x2000 <__divmodhi4_neg1>
    1ff4:	77 fd       	sbrc	r23, 7
    1ff6:	08 d0       	rcall	.+16     	; 0x2008 <__divmodhi4_neg2>
    1ff8:	0b d0       	rcall	.+22     	; 0x2010 <__udivmodhi4>
    1ffa:	07 fc       	sbrc	r0, 7
    1ffc:	05 d0       	rcall	.+10     	; 0x2008 <__divmodhi4_neg2>
    1ffe:	3e f4       	brtc	.+14     	; 0x200e <__divmodhi4_exit>

00002000 <__divmodhi4_neg1>:
    2000:	90 95       	com	r25
    2002:	81 95       	neg	r24
    2004:	9f 4f       	sbci	r25, 0xFF	; 255
    2006:	08 95       	ret

00002008 <__divmodhi4_neg2>:
    2008:	70 95       	com	r23
    200a:	61 95       	neg	r22
    200c:	7f 4f       	sbci	r23, 0xFF	; 255

0000200e <__divmodhi4_exit>:
    200e:	08 95       	ret

00002010 <__udivmodhi4>:
    2010:	aa 1b       	sub	r26, r26
    2012:	bb 1b       	sub	r27, r27
    2014:	51 e1       	ldi	r21, 0x11	; 17
    2016:	07 c0       	rjmp	.+14     	; 0x2026 <__udivmodhi4_ep>

00002018 <__udivmodhi4_loop>:
    2018:	aa 1f       	adc	r26, r26
    201a:	bb 1f       	adc	r27, r27
    201c:	a6 17       	cp	r26, r22
    201e:	b7 07       	cpc	r27, r23
    2020:	10 f0       	brcs	.+4      	; 0x2026 <__udivmodhi4_ep>
    2022:	a6 1b       	sub	r26, r22
    2024:	b7 0b       	sbc	r27, r23

00002026 <__udivmodhi4_ep>:
    2026:	88 1f       	adc	r24, r24
    2028:	99 1f       	adc	r25, r25
    202a:	5a 95       	dec	r21
    202c:	a9 f7       	brne	.-22     	; 0x2018 <__udivmodhi4_loop>
    202e:	80 95       	com	r24
    2030:	90 95       	com	r25
    2032:	bc 01       	movw	r22, r24
    2034:	cd 01       	movw	r24, r26
    2036:	08 95       	ret

00002038 <__ftoa_engine>:
    2038:	28 30       	cpi	r18, 0x08	; 8
    203a:	08 f0       	brcs	.+2      	; 0x203e <__ftoa_engine+0x6>
    203c:	27 e0       	ldi	r18, 0x07	; 7
    203e:	33 27       	eor	r19, r19
    2040:	da 01       	movw	r26, r20
    2042:	99 0f       	add	r25, r25
    2044:	31 1d       	adc	r19, r1
    2046:	87 fd       	sbrc	r24, 7
    2048:	91 60       	ori	r25, 0x01	; 1
    204a:	00 96       	adiw	r24, 0x00	; 0
    204c:	61 05       	cpc	r22, r1
    204e:	71 05       	cpc	r23, r1
    2050:	39 f4       	brne	.+14     	; 0x2060 <__ftoa_engine+0x28>
    2052:	32 60       	ori	r19, 0x02	; 2
    2054:	2e 5f       	subi	r18, 0xFE	; 254
    2056:	3d 93       	st	X+, r19
    2058:	30 e3       	ldi	r19, 0x30	; 48
    205a:	2a 95       	dec	r18
    205c:	e1 f7       	brne	.-8      	; 0x2056 <__ftoa_engine+0x1e>
    205e:	08 95       	ret
    2060:	9f 3f       	cpi	r25, 0xFF	; 255
    2062:	30 f0       	brcs	.+12     	; 0x2070 <__ftoa_engine+0x38>
    2064:	80 38       	cpi	r24, 0x80	; 128
    2066:	71 05       	cpc	r23, r1
    2068:	61 05       	cpc	r22, r1
    206a:	09 f0       	breq	.+2      	; 0x206e <__ftoa_engine+0x36>
    206c:	3c 5f       	subi	r19, 0xFC	; 252
    206e:	3c 5f       	subi	r19, 0xFC	; 252
    2070:	3d 93       	st	X+, r19
    2072:	91 30       	cpi	r25, 0x01	; 1
    2074:	08 f0       	brcs	.+2      	; 0x2078 <__ftoa_engine+0x40>
    2076:	80 68       	ori	r24, 0x80	; 128
    2078:	91 1d       	adc	r25, r1
    207a:	df 93       	push	r29
    207c:	cf 93       	push	r28
    207e:	1f 93       	push	r17
    2080:	0f 93       	push	r16
    2082:	ff 92       	push	r15
    2084:	ef 92       	push	r14
    2086:	19 2f       	mov	r17, r25
    2088:	98 7f       	andi	r25, 0xF8	; 248
    208a:	96 95       	lsr	r25
    208c:	e9 2f       	mov	r30, r25
    208e:	96 95       	lsr	r25
    2090:	96 95       	lsr	r25
    2092:	e9 0f       	add	r30, r25
    2094:	ff 27       	eor	r31, r31
    2096:	e2 53       	subi	r30, 0x32	; 50
    2098:	fe 4f       	sbci	r31, 0xFE	; 254
    209a:	99 27       	eor	r25, r25
    209c:	33 27       	eor	r19, r19
    209e:	ee 24       	eor	r14, r14
    20a0:	ff 24       	eor	r15, r15
    20a2:	a7 01       	movw	r20, r14
    20a4:	e7 01       	movw	r28, r14
    20a6:	05 90       	lpm	r0, Z+
    20a8:	08 94       	sec
    20aa:	07 94       	ror	r0
    20ac:	28 f4       	brcc	.+10     	; 0x20b8 <__ftoa_engine+0x80>
    20ae:	36 0f       	add	r19, r22
    20b0:	e7 1e       	adc	r14, r23
    20b2:	f8 1e       	adc	r15, r24
    20b4:	49 1f       	adc	r20, r25
    20b6:	51 1d       	adc	r21, r1
    20b8:	66 0f       	add	r22, r22
    20ba:	77 1f       	adc	r23, r23
    20bc:	88 1f       	adc	r24, r24
    20be:	99 1f       	adc	r25, r25
    20c0:	06 94       	lsr	r0
    20c2:	a1 f7       	brne	.-24     	; 0x20ac <__ftoa_engine+0x74>
    20c4:	05 90       	lpm	r0, Z+
    20c6:	07 94       	ror	r0
    20c8:	28 f4       	brcc	.+10     	; 0x20d4 <__ftoa_engine+0x9c>
    20ca:	e7 0e       	add	r14, r23
    20cc:	f8 1e       	adc	r15, r24
    20ce:	49 1f       	adc	r20, r25
    20d0:	56 1f       	adc	r21, r22
    20d2:	c1 1d       	adc	r28, r1
    20d4:	77 0f       	add	r23, r23
    20d6:	88 1f       	adc	r24, r24
    20d8:	99 1f       	adc	r25, r25
    20da:	66 1f       	adc	r22, r22
    20dc:	06 94       	lsr	r0
    20de:	a1 f7       	brne	.-24     	; 0x20c8 <__ftoa_engine+0x90>
    20e0:	05 90       	lpm	r0, Z+
    20e2:	07 94       	ror	r0
    20e4:	28 f4       	brcc	.+10     	; 0x20f0 <__ftoa_engine+0xb8>
    20e6:	f8 0e       	add	r15, r24
    20e8:	49 1f       	adc	r20, r25
    20ea:	56 1f       	adc	r21, r22
    20ec:	c7 1f       	adc	r28, r23
    20ee:	d1 1d       	adc	r29, r1
    20f0:	88 0f       	add	r24, r24
    20f2:	99 1f       	adc	r25, r25
    20f4:	66 1f       	adc	r22, r22
    20f6:	77 1f       	adc	r23, r23
    20f8:	06 94       	lsr	r0
    20fa:	a1 f7       	brne	.-24     	; 0x20e4 <__ftoa_engine+0xac>
    20fc:	05 90       	lpm	r0, Z+
    20fe:	07 94       	ror	r0
    2100:	20 f4       	brcc	.+8      	; 0x210a <__ftoa_engine+0xd2>
    2102:	49 0f       	add	r20, r25
    2104:	56 1f       	adc	r21, r22
    2106:	c7 1f       	adc	r28, r23
    2108:	d8 1f       	adc	r29, r24
    210a:	99 0f       	add	r25, r25
    210c:	66 1f       	adc	r22, r22
    210e:	77 1f       	adc	r23, r23
    2110:	88 1f       	adc	r24, r24
    2112:	06 94       	lsr	r0
    2114:	a9 f7       	brne	.-22     	; 0x2100 <__ftoa_engine+0xc8>
    2116:	84 91       	lpm	r24, Z
    2118:	10 95       	com	r17
    211a:	17 70       	andi	r17, 0x07	; 7
    211c:	41 f0       	breq	.+16     	; 0x212e <__ftoa_engine+0xf6>
    211e:	d6 95       	lsr	r29
    2120:	c7 95       	ror	r28
    2122:	57 95       	ror	r21
    2124:	47 95       	ror	r20
    2126:	f7 94       	ror	r15
    2128:	e7 94       	ror	r14
    212a:	1a 95       	dec	r17
    212c:	c1 f7       	brne	.-16     	; 0x211e <__ftoa_engine+0xe6>
    212e:	e4 e7       	ldi	r30, 0x74	; 116
    2130:	f1 e0       	ldi	r31, 0x01	; 1
    2132:	68 94       	set
    2134:	15 90       	lpm	r1, Z+
    2136:	15 91       	lpm	r17, Z+
    2138:	35 91       	lpm	r19, Z+
    213a:	65 91       	lpm	r22, Z+
    213c:	95 91       	lpm	r25, Z+
    213e:	05 90       	lpm	r0, Z+
    2140:	7f e2       	ldi	r23, 0x2F	; 47
    2142:	73 95       	inc	r23
    2144:	e1 18       	sub	r14, r1
    2146:	f1 0a       	sbc	r15, r17
    2148:	43 0b       	sbc	r20, r19
    214a:	56 0b       	sbc	r21, r22
    214c:	c9 0b       	sbc	r28, r25
    214e:	d0 09       	sbc	r29, r0
    2150:	c0 f7       	brcc	.-16     	; 0x2142 <__ftoa_engine+0x10a>
    2152:	e1 0c       	add	r14, r1
    2154:	f1 1e       	adc	r15, r17
    2156:	43 1f       	adc	r20, r19
    2158:	56 1f       	adc	r21, r22
    215a:	c9 1f       	adc	r28, r25
    215c:	d0 1d       	adc	r29, r0
    215e:	7e f4       	brtc	.+30     	; 0x217e <__ftoa_engine+0x146>
    2160:	70 33       	cpi	r23, 0x30	; 48
    2162:	11 f4       	brne	.+4      	; 0x2168 <__ftoa_engine+0x130>
    2164:	8a 95       	dec	r24
    2166:	e6 cf       	rjmp	.-52     	; 0x2134 <__ftoa_engine+0xfc>
    2168:	e8 94       	clt
    216a:	01 50       	subi	r16, 0x01	; 1
    216c:	30 f0       	brcs	.+12     	; 0x217a <__ftoa_engine+0x142>
    216e:	08 0f       	add	r16, r24
    2170:	0a f4       	brpl	.+2      	; 0x2174 <__ftoa_engine+0x13c>
    2172:	00 27       	eor	r16, r16
    2174:	02 17       	cp	r16, r18
    2176:	08 f4       	brcc	.+2      	; 0x217a <__ftoa_engine+0x142>
    2178:	20 2f       	mov	r18, r16
    217a:	23 95       	inc	r18
    217c:	02 2f       	mov	r16, r18
    217e:	7a 33       	cpi	r23, 0x3A	; 58
    2180:	28 f0       	brcs	.+10     	; 0x218c <__ftoa_engine+0x154>
    2182:	79 e3       	ldi	r23, 0x39	; 57
    2184:	7d 93       	st	X+, r23
    2186:	2a 95       	dec	r18
    2188:	e9 f7       	brne	.-6      	; 0x2184 <__ftoa_engine+0x14c>
    218a:	10 c0       	rjmp	.+32     	; 0x21ac <__ftoa_engine+0x174>
    218c:	7d 93       	st	X+, r23
    218e:	2a 95       	dec	r18
    2190:	89 f6       	brne	.-94     	; 0x2134 <__ftoa_engine+0xfc>
    2192:	06 94       	lsr	r0
    2194:	97 95       	ror	r25
    2196:	67 95       	ror	r22
    2198:	37 95       	ror	r19
    219a:	17 95       	ror	r17
    219c:	17 94       	ror	r1
    219e:	e1 18       	sub	r14, r1
    21a0:	f1 0a       	sbc	r15, r17
    21a2:	43 0b       	sbc	r20, r19
    21a4:	56 0b       	sbc	r21, r22
    21a6:	c9 0b       	sbc	r28, r25
    21a8:	d0 09       	sbc	r29, r0
    21aa:	98 f0       	brcs	.+38     	; 0x21d2 <__ftoa_engine+0x19a>
    21ac:	23 95       	inc	r18
    21ae:	7e 91       	ld	r23, -X
    21b0:	73 95       	inc	r23
    21b2:	7a 33       	cpi	r23, 0x3A	; 58
    21b4:	08 f0       	brcs	.+2      	; 0x21b8 <__ftoa_engine+0x180>
    21b6:	70 e3       	ldi	r23, 0x30	; 48
    21b8:	7c 93       	st	X, r23
    21ba:	20 13       	cpse	r18, r16
    21bc:	b8 f7       	brcc	.-18     	; 0x21ac <__ftoa_engine+0x174>
    21be:	7e 91       	ld	r23, -X
    21c0:	70 61       	ori	r23, 0x10	; 16
    21c2:	7d 93       	st	X+, r23
    21c4:	30 f0       	brcs	.+12     	; 0x21d2 <__ftoa_engine+0x19a>
    21c6:	83 95       	inc	r24
    21c8:	71 e3       	ldi	r23, 0x31	; 49
    21ca:	7d 93       	st	X+, r23
    21cc:	70 e3       	ldi	r23, 0x30	; 48
    21ce:	2a 95       	dec	r18
    21d0:	e1 f7       	brne	.-8      	; 0x21ca <__ftoa_engine+0x192>
    21d2:	11 24       	eor	r1, r1
    21d4:	ef 90       	pop	r14
    21d6:	ff 90       	pop	r15
    21d8:	0f 91       	pop	r16
    21da:	1f 91       	pop	r17
    21dc:	cf 91       	pop	r28
    21de:	df 91       	pop	r29
    21e0:	99 27       	eor	r25, r25
    21e2:	87 fd       	sbrc	r24, 7
    21e4:	90 95       	com	r25
    21e6:	08 95       	ret

000021e8 <strnlen_P>:
    21e8:	fc 01       	movw	r30, r24
    21ea:	05 90       	lpm	r0, Z+
    21ec:	61 50       	subi	r22, 0x01	; 1
    21ee:	70 40       	sbci	r23, 0x00	; 0
    21f0:	01 10       	cpse	r0, r1
    21f2:	d8 f7       	brcc	.-10     	; 0x21ea <strnlen_P+0x2>
    21f4:	80 95       	com	r24
    21f6:	90 95       	com	r25
    21f8:	8e 0f       	add	r24, r30
    21fa:	9f 1f       	adc	r25, r31
    21fc:	08 95       	ret

000021fe <strnlen>:
    21fe:	fc 01       	movw	r30, r24
    2200:	61 50       	subi	r22, 0x01	; 1
    2202:	70 40       	sbci	r23, 0x00	; 0
    2204:	01 90       	ld	r0, Z+
    2206:	01 10       	cpse	r0, r1
    2208:	d8 f7       	brcc	.-10     	; 0x2200 <__stack+0x1>
    220a:	80 95       	com	r24
    220c:	90 95       	com	r25
    220e:	8e 0f       	add	r24, r30
    2210:	9f 1f       	adc	r25, r31
    2212:	08 95       	ret

00002214 <fdevopen>:
    2214:	0f 93       	push	r16
    2216:	1f 93       	push	r17
    2218:	cf 93       	push	r28
    221a:	df 93       	push	r29
    221c:	00 97       	sbiw	r24, 0x00	; 0
    221e:	31 f4       	brne	.+12     	; 0x222c <fdevopen+0x18>
    2220:	61 15       	cp	r22, r1
    2222:	71 05       	cpc	r23, r1
    2224:	19 f4       	brne	.+6      	; 0x222c <fdevopen+0x18>
    2226:	80 e0       	ldi	r24, 0x00	; 0
    2228:	90 e0       	ldi	r25, 0x00	; 0
    222a:	39 c0       	rjmp	.+114    	; 0x229e <fdevopen+0x8a>
    222c:	8b 01       	movw	r16, r22
    222e:	ec 01       	movw	r28, r24
    2230:	6e e0       	ldi	r22, 0x0E	; 14
    2232:	70 e0       	ldi	r23, 0x00	; 0
    2234:	81 e0       	ldi	r24, 0x01	; 1
    2236:	90 e0       	ldi	r25, 0x00	; 0
    2238:	17 d1       	rcall	.+558    	; 0x2468 <calloc>
    223a:	fc 01       	movw	r30, r24
    223c:	89 2b       	or	r24, r25
    223e:	99 f3       	breq	.-26     	; 0x2226 <fdevopen+0x12>
    2240:	80 e8       	ldi	r24, 0x80	; 128
    2242:	83 83       	std	Z+3, r24	; 0x03
    2244:	01 15       	cp	r16, r1
    2246:	11 05       	cpc	r17, r1
    2248:	71 f0       	breq	.+28     	; 0x2266 <fdevopen+0x52>
    224a:	13 87       	std	Z+11, r17	; 0x0b
    224c:	02 87       	std	Z+10, r16	; 0x0a
    224e:	81 e8       	ldi	r24, 0x81	; 129
    2250:	83 83       	std	Z+3, r24	; 0x03
    2252:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <__iob>
    2256:	90 91 ee 03 	lds	r25, 0x03EE	; 0x8003ee <__iob+0x1>
    225a:	89 2b       	or	r24, r25
    225c:	21 f4       	brne	.+8      	; 0x2266 <fdevopen+0x52>
    225e:	f0 93 ee 03 	sts	0x03EE, r31	; 0x8003ee <__iob+0x1>
    2262:	e0 93 ed 03 	sts	0x03ED, r30	; 0x8003ed <__iob>
    2266:	20 97       	sbiw	r28, 0x00	; 0
    2268:	c9 f0       	breq	.+50     	; 0x229c <fdevopen+0x88>
    226a:	d1 87       	std	Z+9, r29	; 0x09
    226c:	c0 87       	std	Z+8, r28	; 0x08
    226e:	83 81       	ldd	r24, Z+3	; 0x03
    2270:	82 60       	ori	r24, 0x02	; 2
    2272:	83 83       	std	Z+3, r24	; 0x03
    2274:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <__iob+0x2>
    2278:	90 91 f0 03 	lds	r25, 0x03F0	; 0x8003f0 <__iob+0x3>
    227c:	89 2b       	or	r24, r25
    227e:	71 f4       	brne	.+28     	; 0x229c <fdevopen+0x88>
    2280:	f0 93 f0 03 	sts	0x03F0, r31	; 0x8003f0 <__iob+0x3>
    2284:	e0 93 ef 03 	sts	0x03EF, r30	; 0x8003ef <__iob+0x2>
    2288:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <__iob+0x4>
    228c:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <__iob+0x5>
    2290:	89 2b       	or	r24, r25
    2292:	21 f4       	brne	.+8      	; 0x229c <fdevopen+0x88>
    2294:	f0 93 f2 03 	sts	0x03F2, r31	; 0x8003f2 <__iob+0x5>
    2298:	e0 93 f1 03 	sts	0x03F1, r30	; 0x8003f1 <__iob+0x4>
    229c:	cf 01       	movw	r24, r30
    229e:	df 91       	pop	r29
    22a0:	cf 91       	pop	r28
    22a2:	1f 91       	pop	r17
    22a4:	0f 91       	pop	r16
    22a6:	08 95       	ret

000022a8 <fputc>:
    22a8:	0f 93       	push	r16
    22aa:	1f 93       	push	r17
    22ac:	cf 93       	push	r28
    22ae:	df 93       	push	r29
    22b0:	fb 01       	movw	r30, r22
    22b2:	23 81       	ldd	r18, Z+3	; 0x03
    22b4:	21 fd       	sbrc	r18, 1
    22b6:	03 c0       	rjmp	.+6      	; 0x22be <fputc+0x16>
    22b8:	8f ef       	ldi	r24, 0xFF	; 255
    22ba:	9f ef       	ldi	r25, 0xFF	; 255
    22bc:	2c c0       	rjmp	.+88     	; 0x2316 <fputc+0x6e>
    22be:	22 ff       	sbrs	r18, 2
    22c0:	16 c0       	rjmp	.+44     	; 0x22ee <fputc+0x46>
    22c2:	46 81       	ldd	r20, Z+6	; 0x06
    22c4:	57 81       	ldd	r21, Z+7	; 0x07
    22c6:	24 81       	ldd	r18, Z+4	; 0x04
    22c8:	35 81       	ldd	r19, Z+5	; 0x05
    22ca:	42 17       	cp	r20, r18
    22cc:	53 07       	cpc	r21, r19
    22ce:	44 f4       	brge	.+16     	; 0x22e0 <fputc+0x38>
    22d0:	a0 81       	ld	r26, Z
    22d2:	b1 81       	ldd	r27, Z+1	; 0x01
    22d4:	9d 01       	movw	r18, r26
    22d6:	2f 5f       	subi	r18, 0xFF	; 255
    22d8:	3f 4f       	sbci	r19, 0xFF	; 255
    22da:	31 83       	std	Z+1, r19	; 0x01
    22dc:	20 83       	st	Z, r18
    22de:	8c 93       	st	X, r24
    22e0:	26 81       	ldd	r18, Z+6	; 0x06
    22e2:	37 81       	ldd	r19, Z+7	; 0x07
    22e4:	2f 5f       	subi	r18, 0xFF	; 255
    22e6:	3f 4f       	sbci	r19, 0xFF	; 255
    22e8:	37 83       	std	Z+7, r19	; 0x07
    22ea:	26 83       	std	Z+6, r18	; 0x06
    22ec:	14 c0       	rjmp	.+40     	; 0x2316 <fputc+0x6e>
    22ee:	8b 01       	movw	r16, r22
    22f0:	ec 01       	movw	r28, r24
    22f2:	fb 01       	movw	r30, r22
    22f4:	00 84       	ldd	r0, Z+8	; 0x08
    22f6:	f1 85       	ldd	r31, Z+9	; 0x09
    22f8:	e0 2d       	mov	r30, r0
    22fa:	19 95       	eicall
    22fc:	89 2b       	or	r24, r25
    22fe:	e1 f6       	brne	.-72     	; 0x22b8 <fputc+0x10>
    2300:	d8 01       	movw	r26, r16
    2302:	16 96       	adiw	r26, 0x06	; 6
    2304:	8d 91       	ld	r24, X+
    2306:	9c 91       	ld	r25, X
    2308:	17 97       	sbiw	r26, 0x07	; 7
    230a:	01 96       	adiw	r24, 0x01	; 1
    230c:	17 96       	adiw	r26, 0x07	; 7
    230e:	9c 93       	st	X, r25
    2310:	8e 93       	st	-X, r24
    2312:	16 97       	sbiw	r26, 0x06	; 6
    2314:	ce 01       	movw	r24, r28
    2316:	df 91       	pop	r29
    2318:	cf 91       	pop	r28
    231a:	1f 91       	pop	r17
    231c:	0f 91       	pop	r16
    231e:	08 95       	ret

00002320 <printf>:
    2320:	cf 93       	push	r28
    2322:	df 93       	push	r29
    2324:	cd b7       	in	r28, 0x3d	; 61
    2326:	de b7       	in	r29, 0x3e	; 62
    2328:	ae 01       	movw	r20, r28
    232a:	4a 5f       	subi	r20, 0xFA	; 250
    232c:	5f 4f       	sbci	r21, 0xFF	; 255
    232e:	fa 01       	movw	r30, r20
    2330:	61 91       	ld	r22, Z+
    2332:	71 91       	ld	r23, Z+
    2334:	af 01       	movw	r20, r30
    2336:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <__iob+0x2>
    233a:	90 91 f0 03 	lds	r25, 0x03F0	; 0x8003f0 <__iob+0x3>
    233e:	cc da       	rcall	.-2664   	; 0x18d8 <vfprintf>
    2340:	df 91       	pop	r29
    2342:	cf 91       	pop	r28
    2344:	08 95       	ret

00002346 <putchar>:
    2346:	60 91 ef 03 	lds	r22, 0x03EF	; 0x8003ef <__iob+0x2>
    234a:	70 91 f0 03 	lds	r23, 0x03F0	; 0x8003f0 <__iob+0x3>
    234e:	ac cf       	rjmp	.-168    	; 0x22a8 <fputc>

00002350 <sprintf>:
    2350:	0f 93       	push	r16
    2352:	1f 93       	push	r17
    2354:	cf 93       	push	r28
    2356:	df 93       	push	r29
    2358:	cd b7       	in	r28, 0x3d	; 61
    235a:	de b7       	in	r29, 0x3e	; 62
    235c:	2e 97       	sbiw	r28, 0x0e	; 14
    235e:	0f b6       	in	r0, 0x3f	; 63
    2360:	f8 94       	cli
    2362:	de bf       	out	0x3e, r29	; 62
    2364:	0f be       	out	0x3f, r0	; 63
    2366:	cd bf       	out	0x3d, r28	; 61
    2368:	0e 89       	ldd	r16, Y+22	; 0x16
    236a:	1f 89       	ldd	r17, Y+23	; 0x17
    236c:	86 e0       	ldi	r24, 0x06	; 6
    236e:	8c 83       	std	Y+4, r24	; 0x04
    2370:	1a 83       	std	Y+2, r17	; 0x02
    2372:	09 83       	std	Y+1, r16	; 0x01
    2374:	8f ef       	ldi	r24, 0xFF	; 255
    2376:	9f e7       	ldi	r25, 0x7F	; 127
    2378:	9e 83       	std	Y+6, r25	; 0x06
    237a:	8d 83       	std	Y+5, r24	; 0x05
    237c:	ae 01       	movw	r20, r28
    237e:	46 5e       	subi	r20, 0xE6	; 230
    2380:	5f 4f       	sbci	r21, 0xFF	; 255
    2382:	68 8d       	ldd	r22, Y+24	; 0x18
    2384:	79 8d       	ldd	r23, Y+25	; 0x19
    2386:	ce 01       	movw	r24, r28
    2388:	01 96       	adiw	r24, 0x01	; 1
    238a:	a6 da       	rcall	.-2740   	; 0x18d8 <vfprintf>
    238c:	ef 81       	ldd	r30, Y+7	; 0x07
    238e:	f8 85       	ldd	r31, Y+8	; 0x08
    2390:	e0 0f       	add	r30, r16
    2392:	f1 1f       	adc	r31, r17
    2394:	10 82       	st	Z, r1
    2396:	2e 96       	adiw	r28, 0x0e	; 14
    2398:	0f b6       	in	r0, 0x3f	; 63
    239a:	f8 94       	cli
    239c:	de bf       	out	0x3e, r29	; 62
    239e:	0f be       	out	0x3f, r0	; 63
    23a0:	cd bf       	out	0x3d, r28	; 61
    23a2:	df 91       	pop	r29
    23a4:	cf 91       	pop	r28
    23a6:	1f 91       	pop	r17
    23a8:	0f 91       	pop	r16
    23aa:	08 95       	ret

000023ac <__ultoa_invert>:
    23ac:	fa 01       	movw	r30, r20
    23ae:	aa 27       	eor	r26, r26
    23b0:	28 30       	cpi	r18, 0x08	; 8
    23b2:	51 f1       	breq	.+84     	; 0x2408 <__ultoa_invert+0x5c>
    23b4:	20 31       	cpi	r18, 0x10	; 16
    23b6:	81 f1       	breq	.+96     	; 0x2418 <__ultoa_invert+0x6c>
    23b8:	e8 94       	clt
    23ba:	6f 93       	push	r22
    23bc:	6e 7f       	andi	r22, 0xFE	; 254
    23be:	6e 5f       	subi	r22, 0xFE	; 254
    23c0:	7f 4f       	sbci	r23, 0xFF	; 255
    23c2:	8f 4f       	sbci	r24, 0xFF	; 255
    23c4:	9f 4f       	sbci	r25, 0xFF	; 255
    23c6:	af 4f       	sbci	r26, 0xFF	; 255
    23c8:	b1 e0       	ldi	r27, 0x01	; 1
    23ca:	3e d0       	rcall	.+124    	; 0x2448 <__ultoa_invert+0x9c>
    23cc:	b4 e0       	ldi	r27, 0x04	; 4
    23ce:	3c d0       	rcall	.+120    	; 0x2448 <__ultoa_invert+0x9c>
    23d0:	67 0f       	add	r22, r23
    23d2:	78 1f       	adc	r23, r24
    23d4:	89 1f       	adc	r24, r25
    23d6:	9a 1f       	adc	r25, r26
    23d8:	a1 1d       	adc	r26, r1
    23da:	68 0f       	add	r22, r24
    23dc:	79 1f       	adc	r23, r25
    23de:	8a 1f       	adc	r24, r26
    23e0:	91 1d       	adc	r25, r1
    23e2:	a1 1d       	adc	r26, r1
    23e4:	6a 0f       	add	r22, r26
    23e6:	71 1d       	adc	r23, r1
    23e8:	81 1d       	adc	r24, r1
    23ea:	91 1d       	adc	r25, r1
    23ec:	a1 1d       	adc	r26, r1
    23ee:	20 d0       	rcall	.+64     	; 0x2430 <__ultoa_invert+0x84>
    23f0:	09 f4       	brne	.+2      	; 0x23f4 <__ultoa_invert+0x48>
    23f2:	68 94       	set
    23f4:	3f 91       	pop	r19
    23f6:	2a e0       	ldi	r18, 0x0A	; 10
    23f8:	26 9f       	mul	r18, r22
    23fa:	11 24       	eor	r1, r1
    23fc:	30 19       	sub	r19, r0
    23fe:	30 5d       	subi	r19, 0xD0	; 208
    2400:	31 93       	st	Z+, r19
    2402:	de f6       	brtc	.-74     	; 0x23ba <__ultoa_invert+0xe>
    2404:	cf 01       	movw	r24, r30
    2406:	08 95       	ret
    2408:	46 2f       	mov	r20, r22
    240a:	47 70       	andi	r20, 0x07	; 7
    240c:	40 5d       	subi	r20, 0xD0	; 208
    240e:	41 93       	st	Z+, r20
    2410:	b3 e0       	ldi	r27, 0x03	; 3
    2412:	0f d0       	rcall	.+30     	; 0x2432 <__ultoa_invert+0x86>
    2414:	c9 f7       	brne	.-14     	; 0x2408 <__ultoa_invert+0x5c>
    2416:	f6 cf       	rjmp	.-20     	; 0x2404 <__ultoa_invert+0x58>
    2418:	46 2f       	mov	r20, r22
    241a:	4f 70       	andi	r20, 0x0F	; 15
    241c:	40 5d       	subi	r20, 0xD0	; 208
    241e:	4a 33       	cpi	r20, 0x3A	; 58
    2420:	18 f0       	brcs	.+6      	; 0x2428 <__ultoa_invert+0x7c>
    2422:	49 5d       	subi	r20, 0xD9	; 217
    2424:	31 fd       	sbrc	r19, 1
    2426:	40 52       	subi	r20, 0x20	; 32
    2428:	41 93       	st	Z+, r20
    242a:	02 d0       	rcall	.+4      	; 0x2430 <__ultoa_invert+0x84>
    242c:	a9 f7       	brne	.-22     	; 0x2418 <__ultoa_invert+0x6c>
    242e:	ea cf       	rjmp	.-44     	; 0x2404 <__ultoa_invert+0x58>
    2430:	b4 e0       	ldi	r27, 0x04	; 4
    2432:	a6 95       	lsr	r26
    2434:	97 95       	ror	r25
    2436:	87 95       	ror	r24
    2438:	77 95       	ror	r23
    243a:	67 95       	ror	r22
    243c:	ba 95       	dec	r27
    243e:	c9 f7       	brne	.-14     	; 0x2432 <__ultoa_invert+0x86>
    2440:	00 97       	sbiw	r24, 0x00	; 0
    2442:	61 05       	cpc	r22, r1
    2444:	71 05       	cpc	r23, r1
    2446:	08 95       	ret
    2448:	9b 01       	movw	r18, r22
    244a:	ac 01       	movw	r20, r24
    244c:	0a 2e       	mov	r0, r26
    244e:	06 94       	lsr	r0
    2450:	57 95       	ror	r21
    2452:	47 95       	ror	r20
    2454:	37 95       	ror	r19
    2456:	27 95       	ror	r18
    2458:	ba 95       	dec	r27
    245a:	c9 f7       	brne	.-14     	; 0x244e <__ultoa_invert+0xa2>
    245c:	62 0f       	add	r22, r18
    245e:	73 1f       	adc	r23, r19
    2460:	84 1f       	adc	r24, r20
    2462:	95 1f       	adc	r25, r21
    2464:	a0 1d       	adc	r26, r0
    2466:	08 95       	ret

00002468 <calloc>:
    2468:	0f 93       	push	r16
    246a:	1f 93       	push	r17
    246c:	cf 93       	push	r28
    246e:	df 93       	push	r29
    2470:	86 9f       	mul	r24, r22
    2472:	80 01       	movw	r16, r0
    2474:	87 9f       	mul	r24, r23
    2476:	10 0d       	add	r17, r0
    2478:	96 9f       	mul	r25, r22
    247a:	10 0d       	add	r17, r0
    247c:	11 24       	eor	r1, r1
    247e:	c8 01       	movw	r24, r16
    2480:	0d d0       	rcall	.+26     	; 0x249c <malloc>
    2482:	ec 01       	movw	r28, r24
    2484:	00 97       	sbiw	r24, 0x00	; 0
    2486:	21 f0       	breq	.+8      	; 0x2490 <calloc+0x28>
    2488:	a8 01       	movw	r20, r16
    248a:	60 e0       	ldi	r22, 0x00	; 0
    248c:	70 e0       	ldi	r23, 0x00	; 0
    248e:	27 d1       	rcall	.+590    	; 0x26de <memset>
    2490:	ce 01       	movw	r24, r28
    2492:	df 91       	pop	r29
    2494:	cf 91       	pop	r28
    2496:	1f 91       	pop	r17
    2498:	0f 91       	pop	r16
    249a:	08 95       	ret

0000249c <malloc>:
    249c:	0f 93       	push	r16
    249e:	1f 93       	push	r17
    24a0:	cf 93       	push	r28
    24a2:	df 93       	push	r29
    24a4:	82 30       	cpi	r24, 0x02	; 2
    24a6:	91 05       	cpc	r25, r1
    24a8:	10 f4       	brcc	.+4      	; 0x24ae <malloc+0x12>
    24aa:	82 e0       	ldi	r24, 0x02	; 2
    24ac:	90 e0       	ldi	r25, 0x00	; 0
    24ae:	e0 91 f5 03 	lds	r30, 0x03F5	; 0x8003f5 <__flp>
    24b2:	f0 91 f6 03 	lds	r31, 0x03F6	; 0x8003f6 <__flp+0x1>
    24b6:	20 e0       	ldi	r18, 0x00	; 0
    24b8:	30 e0       	ldi	r19, 0x00	; 0
    24ba:	a0 e0       	ldi	r26, 0x00	; 0
    24bc:	b0 e0       	ldi	r27, 0x00	; 0
    24be:	30 97       	sbiw	r30, 0x00	; 0
    24c0:	19 f1       	breq	.+70     	; 0x2508 <malloc+0x6c>
    24c2:	40 81       	ld	r20, Z
    24c4:	51 81       	ldd	r21, Z+1	; 0x01
    24c6:	02 81       	ldd	r16, Z+2	; 0x02
    24c8:	13 81       	ldd	r17, Z+3	; 0x03
    24ca:	48 17       	cp	r20, r24
    24cc:	59 07       	cpc	r21, r25
    24ce:	c8 f0       	brcs	.+50     	; 0x2502 <malloc+0x66>
    24d0:	84 17       	cp	r24, r20
    24d2:	95 07       	cpc	r25, r21
    24d4:	69 f4       	brne	.+26     	; 0x24f0 <malloc+0x54>
    24d6:	10 97       	sbiw	r26, 0x00	; 0
    24d8:	31 f0       	breq	.+12     	; 0x24e6 <malloc+0x4a>
    24da:	12 96       	adiw	r26, 0x02	; 2
    24dc:	0c 93       	st	X, r16
    24de:	12 97       	sbiw	r26, 0x02	; 2
    24e0:	13 96       	adiw	r26, 0x03	; 3
    24e2:	1c 93       	st	X, r17
    24e4:	27 c0       	rjmp	.+78     	; 0x2534 <malloc+0x98>
    24e6:	00 93 f5 03 	sts	0x03F5, r16	; 0x8003f5 <__flp>
    24ea:	10 93 f6 03 	sts	0x03F6, r17	; 0x8003f6 <__flp+0x1>
    24ee:	22 c0       	rjmp	.+68     	; 0x2534 <malloc+0x98>
    24f0:	21 15       	cp	r18, r1
    24f2:	31 05       	cpc	r19, r1
    24f4:	19 f0       	breq	.+6      	; 0x24fc <malloc+0x60>
    24f6:	42 17       	cp	r20, r18
    24f8:	53 07       	cpc	r21, r19
    24fa:	18 f4       	brcc	.+6      	; 0x2502 <malloc+0x66>
    24fc:	9a 01       	movw	r18, r20
    24fe:	bd 01       	movw	r22, r26
    2500:	ef 01       	movw	r28, r30
    2502:	df 01       	movw	r26, r30
    2504:	f8 01       	movw	r30, r16
    2506:	db cf       	rjmp	.-74     	; 0x24be <malloc+0x22>
    2508:	21 15       	cp	r18, r1
    250a:	31 05       	cpc	r19, r1
    250c:	f9 f0       	breq	.+62     	; 0x254c <malloc+0xb0>
    250e:	28 1b       	sub	r18, r24
    2510:	39 0b       	sbc	r19, r25
    2512:	24 30       	cpi	r18, 0x04	; 4
    2514:	31 05       	cpc	r19, r1
    2516:	80 f4       	brcc	.+32     	; 0x2538 <malloc+0x9c>
    2518:	8a 81       	ldd	r24, Y+2	; 0x02
    251a:	9b 81       	ldd	r25, Y+3	; 0x03
    251c:	61 15       	cp	r22, r1
    251e:	71 05       	cpc	r23, r1
    2520:	21 f0       	breq	.+8      	; 0x252a <malloc+0x8e>
    2522:	fb 01       	movw	r30, r22
    2524:	93 83       	std	Z+3, r25	; 0x03
    2526:	82 83       	std	Z+2, r24	; 0x02
    2528:	04 c0       	rjmp	.+8      	; 0x2532 <malloc+0x96>
    252a:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <__flp+0x1>
    252e:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <__flp>
    2532:	fe 01       	movw	r30, r28
    2534:	32 96       	adiw	r30, 0x02	; 2
    2536:	44 c0       	rjmp	.+136    	; 0x25c0 <malloc+0x124>
    2538:	fe 01       	movw	r30, r28
    253a:	e2 0f       	add	r30, r18
    253c:	f3 1f       	adc	r31, r19
    253e:	81 93       	st	Z+, r24
    2540:	91 93       	st	Z+, r25
    2542:	22 50       	subi	r18, 0x02	; 2
    2544:	31 09       	sbc	r19, r1
    2546:	39 83       	std	Y+1, r19	; 0x01
    2548:	28 83       	st	Y, r18
    254a:	3a c0       	rjmp	.+116    	; 0x25c0 <malloc+0x124>
    254c:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <__brkval>
    2550:	30 91 f4 03 	lds	r19, 0x03F4	; 0x8003f4 <__brkval+0x1>
    2554:	23 2b       	or	r18, r19
    2556:	41 f4       	brne	.+16     	; 0x2568 <malloc+0xcc>
    2558:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    255c:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2560:	30 93 f4 03 	sts	0x03F4, r19	; 0x8003f4 <__brkval+0x1>
    2564:	20 93 f3 03 	sts	0x03F3, r18	; 0x8003f3 <__brkval>
    2568:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    256c:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2570:	21 15       	cp	r18, r1
    2572:	31 05       	cpc	r19, r1
    2574:	41 f4       	brne	.+16     	; 0x2586 <malloc+0xea>
    2576:	2d b7       	in	r18, 0x3d	; 61
    2578:	3e b7       	in	r19, 0x3e	; 62
    257a:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    257e:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2582:	24 1b       	sub	r18, r20
    2584:	35 0b       	sbc	r19, r21
    2586:	e0 91 f3 03 	lds	r30, 0x03F3	; 0x8003f3 <__brkval>
    258a:	f0 91 f4 03 	lds	r31, 0x03F4	; 0x8003f4 <__brkval+0x1>
    258e:	e2 17       	cp	r30, r18
    2590:	f3 07       	cpc	r31, r19
    2592:	a0 f4       	brcc	.+40     	; 0x25bc <malloc+0x120>
    2594:	2e 1b       	sub	r18, r30
    2596:	3f 0b       	sbc	r19, r31
    2598:	28 17       	cp	r18, r24
    259a:	39 07       	cpc	r19, r25
    259c:	78 f0       	brcs	.+30     	; 0x25bc <malloc+0x120>
    259e:	ac 01       	movw	r20, r24
    25a0:	4e 5f       	subi	r20, 0xFE	; 254
    25a2:	5f 4f       	sbci	r21, 0xFF	; 255
    25a4:	24 17       	cp	r18, r20
    25a6:	35 07       	cpc	r19, r21
    25a8:	48 f0       	brcs	.+18     	; 0x25bc <malloc+0x120>
    25aa:	4e 0f       	add	r20, r30
    25ac:	5f 1f       	adc	r21, r31
    25ae:	50 93 f4 03 	sts	0x03F4, r21	; 0x8003f4 <__brkval+0x1>
    25b2:	40 93 f3 03 	sts	0x03F3, r20	; 0x8003f3 <__brkval>
    25b6:	81 93       	st	Z+, r24
    25b8:	91 93       	st	Z+, r25
    25ba:	02 c0       	rjmp	.+4      	; 0x25c0 <malloc+0x124>
    25bc:	e0 e0       	ldi	r30, 0x00	; 0
    25be:	f0 e0       	ldi	r31, 0x00	; 0
    25c0:	cf 01       	movw	r24, r30
    25c2:	df 91       	pop	r29
    25c4:	cf 91       	pop	r28
    25c6:	1f 91       	pop	r17
    25c8:	0f 91       	pop	r16
    25ca:	08 95       	ret

000025cc <free>:
    25cc:	cf 93       	push	r28
    25ce:	df 93       	push	r29
    25d0:	00 97       	sbiw	r24, 0x00	; 0
    25d2:	09 f4       	brne	.+2      	; 0x25d6 <free+0xa>
    25d4:	81 c0       	rjmp	.+258    	; 0x26d8 <free+0x10c>
    25d6:	fc 01       	movw	r30, r24
    25d8:	32 97       	sbiw	r30, 0x02	; 2
    25da:	13 82       	std	Z+3, r1	; 0x03
    25dc:	12 82       	std	Z+2, r1	; 0x02
    25de:	a0 91 f5 03 	lds	r26, 0x03F5	; 0x8003f5 <__flp>
    25e2:	b0 91 f6 03 	lds	r27, 0x03F6	; 0x8003f6 <__flp+0x1>
    25e6:	10 97       	sbiw	r26, 0x00	; 0
    25e8:	81 f4       	brne	.+32     	; 0x260a <free+0x3e>
    25ea:	20 81       	ld	r18, Z
    25ec:	31 81       	ldd	r19, Z+1	; 0x01
    25ee:	82 0f       	add	r24, r18
    25f0:	93 1f       	adc	r25, r19
    25f2:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <__brkval>
    25f6:	30 91 f4 03 	lds	r19, 0x03F4	; 0x8003f4 <__brkval+0x1>
    25fa:	28 17       	cp	r18, r24
    25fc:	39 07       	cpc	r19, r25
    25fe:	51 f5       	brne	.+84     	; 0x2654 <free+0x88>
    2600:	f0 93 f4 03 	sts	0x03F4, r31	; 0x8003f4 <__brkval+0x1>
    2604:	e0 93 f3 03 	sts	0x03F3, r30	; 0x8003f3 <__brkval>
    2608:	67 c0       	rjmp	.+206    	; 0x26d8 <free+0x10c>
    260a:	ed 01       	movw	r28, r26
    260c:	20 e0       	ldi	r18, 0x00	; 0
    260e:	30 e0       	ldi	r19, 0x00	; 0
    2610:	ce 17       	cp	r28, r30
    2612:	df 07       	cpc	r29, r31
    2614:	40 f4       	brcc	.+16     	; 0x2626 <free+0x5a>
    2616:	4a 81       	ldd	r20, Y+2	; 0x02
    2618:	5b 81       	ldd	r21, Y+3	; 0x03
    261a:	9e 01       	movw	r18, r28
    261c:	41 15       	cp	r20, r1
    261e:	51 05       	cpc	r21, r1
    2620:	f1 f0       	breq	.+60     	; 0x265e <free+0x92>
    2622:	ea 01       	movw	r28, r20
    2624:	f5 cf       	rjmp	.-22     	; 0x2610 <free+0x44>
    2626:	d3 83       	std	Z+3, r29	; 0x03
    2628:	c2 83       	std	Z+2, r28	; 0x02
    262a:	40 81       	ld	r20, Z
    262c:	51 81       	ldd	r21, Z+1	; 0x01
    262e:	84 0f       	add	r24, r20
    2630:	95 1f       	adc	r25, r21
    2632:	c8 17       	cp	r28, r24
    2634:	d9 07       	cpc	r29, r25
    2636:	59 f4       	brne	.+22     	; 0x264e <free+0x82>
    2638:	88 81       	ld	r24, Y
    263a:	99 81       	ldd	r25, Y+1	; 0x01
    263c:	84 0f       	add	r24, r20
    263e:	95 1f       	adc	r25, r21
    2640:	02 96       	adiw	r24, 0x02	; 2
    2642:	91 83       	std	Z+1, r25	; 0x01
    2644:	80 83       	st	Z, r24
    2646:	8a 81       	ldd	r24, Y+2	; 0x02
    2648:	9b 81       	ldd	r25, Y+3	; 0x03
    264a:	93 83       	std	Z+3, r25	; 0x03
    264c:	82 83       	std	Z+2, r24	; 0x02
    264e:	21 15       	cp	r18, r1
    2650:	31 05       	cpc	r19, r1
    2652:	29 f4       	brne	.+10     	; 0x265e <free+0x92>
    2654:	f0 93 f6 03 	sts	0x03F6, r31	; 0x8003f6 <__flp+0x1>
    2658:	e0 93 f5 03 	sts	0x03F5, r30	; 0x8003f5 <__flp>
    265c:	3d c0       	rjmp	.+122    	; 0x26d8 <free+0x10c>
    265e:	e9 01       	movw	r28, r18
    2660:	fb 83       	std	Y+3, r31	; 0x03
    2662:	ea 83       	std	Y+2, r30	; 0x02
    2664:	49 91       	ld	r20, Y+
    2666:	59 91       	ld	r21, Y+
    2668:	c4 0f       	add	r28, r20
    266a:	d5 1f       	adc	r29, r21
    266c:	ec 17       	cp	r30, r28
    266e:	fd 07       	cpc	r31, r29
    2670:	61 f4       	brne	.+24     	; 0x268a <free+0xbe>
    2672:	80 81       	ld	r24, Z
    2674:	91 81       	ldd	r25, Z+1	; 0x01
    2676:	84 0f       	add	r24, r20
    2678:	95 1f       	adc	r25, r21
    267a:	02 96       	adiw	r24, 0x02	; 2
    267c:	e9 01       	movw	r28, r18
    267e:	99 83       	std	Y+1, r25	; 0x01
    2680:	88 83       	st	Y, r24
    2682:	82 81       	ldd	r24, Z+2	; 0x02
    2684:	93 81       	ldd	r25, Z+3	; 0x03
    2686:	9b 83       	std	Y+3, r25	; 0x03
    2688:	8a 83       	std	Y+2, r24	; 0x02
    268a:	e0 e0       	ldi	r30, 0x00	; 0
    268c:	f0 e0       	ldi	r31, 0x00	; 0
    268e:	12 96       	adiw	r26, 0x02	; 2
    2690:	8d 91       	ld	r24, X+
    2692:	9c 91       	ld	r25, X
    2694:	13 97       	sbiw	r26, 0x03	; 3
    2696:	00 97       	sbiw	r24, 0x00	; 0
    2698:	19 f0       	breq	.+6      	; 0x26a0 <free+0xd4>
    269a:	fd 01       	movw	r30, r26
    269c:	dc 01       	movw	r26, r24
    269e:	f7 cf       	rjmp	.-18     	; 0x268e <free+0xc2>
    26a0:	8d 91       	ld	r24, X+
    26a2:	9c 91       	ld	r25, X
    26a4:	11 97       	sbiw	r26, 0x01	; 1
    26a6:	9d 01       	movw	r18, r26
    26a8:	2e 5f       	subi	r18, 0xFE	; 254
    26aa:	3f 4f       	sbci	r19, 0xFF	; 255
    26ac:	82 0f       	add	r24, r18
    26ae:	93 1f       	adc	r25, r19
    26b0:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <__brkval>
    26b4:	30 91 f4 03 	lds	r19, 0x03F4	; 0x8003f4 <__brkval+0x1>
    26b8:	28 17       	cp	r18, r24
    26ba:	39 07       	cpc	r19, r25
    26bc:	69 f4       	brne	.+26     	; 0x26d8 <free+0x10c>
    26be:	30 97       	sbiw	r30, 0x00	; 0
    26c0:	29 f4       	brne	.+10     	; 0x26cc <free+0x100>
    26c2:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <__flp+0x1>
    26c6:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <__flp>
    26ca:	02 c0       	rjmp	.+4      	; 0x26d0 <free+0x104>
    26cc:	13 82       	std	Z+3, r1	; 0x03
    26ce:	12 82       	std	Z+2, r1	; 0x02
    26d0:	b0 93 f4 03 	sts	0x03F4, r27	; 0x8003f4 <__brkval+0x1>
    26d4:	a0 93 f3 03 	sts	0x03F3, r26	; 0x8003f3 <__brkval>
    26d8:	df 91       	pop	r29
    26da:	cf 91       	pop	r28
    26dc:	08 95       	ret

000026de <memset>:
    26de:	dc 01       	movw	r26, r24
    26e0:	01 c0       	rjmp	.+2      	; 0x26e4 <memset+0x6>
    26e2:	6d 93       	st	X+, r22
    26e4:	41 50       	subi	r20, 0x01	; 1
    26e6:	50 40       	sbci	r21, 0x00	; 0
    26e8:	e0 f7       	brcc	.-8      	; 0x26e2 <memset+0x4>
    26ea:	08 95       	ret

000026ec <_exit>:
    26ec:	f8 94       	cli

000026ee <__stop_program>:
    26ee:	ff cf       	rjmp	.-2      	; 0x26ee <__stop_program>
