
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800200  000012aa  0000133e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800258  00800258  00001396  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001396  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00001434  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001beb  00000000  00000000  0000153c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000103a  00000000  00000000  00003127  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bcd  00000000  00000000  00004161  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  00004d30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008aa  00000000  00000000  00004ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c3b  00000000  00000000  0000589e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000064d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ea ea       	ldi	r30, 0xAA	; 170
      fc:	f2 e1       	ldi	r31, 0x12	; 18
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 35       	cpi	r26, 0x58	; 88
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a8 e5       	ldi	r26, 0x58	; 88
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 37       	cpi	r26, 0x72	; 114
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	2a d2       	rcall	.+1108   	; 0x574 <main>
     120:	0c 94 53 09 	jmp	0x12a6	; 0x12a6 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <uart_putchar>:
#define caliberation_wait_delay 0//in ms

FILE * uart_str;
static int uart_putchar(char c, FILE *stream);
static int uart_putchar(char c, FILE *stream)
{
     126:	cf 93       	push	r28
     128:	c8 2f       	mov	r28, r24

	if (c == '\n')
     12a:	8a 30       	cpi	r24, 0x0A	; 10
     12c:	11 f4       	brne	.+4      	; 0x132 <uart_putchar+0xc>
	uart_putchar('\r', stream);
     12e:	8d e0       	ldi	r24, 0x0D	; 13
     130:	fa df       	rcall	.-12     	; 0x126 <uart_putchar>
	while ( !( UCSR0A & (1<<UDRE0)) )
     132:	e0 ec       	ldi	r30, 0xC0	; 192
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	85 ff       	sbrs	r24, 5
     13a:	fd cf       	rjmp	.-6      	; 0x136 <uart_putchar+0x10>
	;
	/* Put data into buffer, sends the data */
	UDR0 = c;
     13c:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	return 0;
}
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	cf 91       	pop	r28
     146:	08 95       	ret

00000148 <mpu6050_rb>:
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_H);
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_L);
	return axis_value;
}
uint8_t mpu6050_rb(uint8_t byteToRead)//readbyte
{
     148:	cf 93       	push	r28
     14a:	c8 2f       	mov	r28, r24
	i2c_start(MPU6050_WRITE);
     14c:	80 ed       	ldi	r24, 0xD0	; 208
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	f5 d2       	rcall	.+1514   	; 0x73c <i2c_start>
	i2c_write(byteToRead);
     152:	8c 2f       	mov	r24, r28
     154:	90 e0       	ldi	r25, 0x00	; 0
	i2c_stop();
	
	i2c_start(MPU6050_READ);
     156:	48 d3       	rcall	.+1680   	; 0x7e8 <i2c_write>
     158:	37 d3       	rcall	.+1646   	; 0x7c8 <i2c_stop>
	uint8_t byteToReturn=i2c_readNak();
     15a:	81 ed       	ldi	r24, 0xD1	; 209
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	ee d2       	rcall	.+1500   	; 0x73c <i2c_start>
	i2c_stop();
     160:	64 d3       	rcall	.+1736   	; 0x82a <i2c_readNak>
     162:	c8 2f       	mov	r28, r24
	return byteToReturn;
}
     164:	31 d3       	rcall	.+1634   	; 0x7c8 <i2c_stop>
     166:	8c 2f       	mov	r24, r28
     168:	cf 91       	pop	r28
     16a:	08 95       	ret

0000016c <mpu6050_read_gyroX>:
	_delay_ms(1000);
	//-----------------------------------
	*/
}
uint16_t mpu6050_read_gyroX()//axis x=0,y=1,z=2
{
     16c:	cf 93       	push	r28
     16e:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_XOUT_H);
     170:	83 e4       	ldi	r24, 0x43	; 67
     172:	ea df       	rcall	.-44     	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_XOUT_L);
     174:	c8 2f       	mov	r28, r24
     176:	d0 e0       	ldi	r29, 0x00	; 0
     178:	dc 2f       	mov	r29, r28
     17a:	cc 27       	eor	r28, r28
     17c:	84 e4       	ldi	r24, 0x44	; 68
     17e:	e4 df       	rcall	.-56     	; 0x148 <mpu6050_rb>
	return axis_value;
}
     180:	9e 01       	movw	r18, r28
     182:	28 2b       	or	r18, r24
     184:	c9 01       	movw	r24, r18
     186:	df 91       	pop	r29
     188:	cf 91       	pop	r28
     18a:	08 95       	ret

0000018c <mpu6050_read_gyroY>:
uint16_t mpu6050_read_gyroY()//axis x=0,y=1,z=2
{
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_YOUT_H);
     190:	85 e4       	ldi	r24, 0x45	; 69
     192:	da df       	rcall	.-76     	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_YOUT_L);
     194:	c8 2f       	mov	r28, r24
     196:	d0 e0       	ldi	r29, 0x00	; 0
     198:	dc 2f       	mov	r29, r28
     19a:	cc 27       	eor	r28, r28
     19c:	86 e4       	ldi	r24, 0x46	; 70
     19e:	d4 df       	rcall	.-88     	; 0x148 <mpu6050_rb>
	return axis_value;
}
     1a0:	9e 01       	movw	r18, r28
     1a2:	28 2b       	or	r18, r24
     1a4:	c9 01       	movw	r24, r18
     1a6:	df 91       	pop	r29
     1a8:	cf 91       	pop	r28
     1aa:	08 95       	ret

000001ac <mpu6050_read_gyroZ>:
uint16_t mpu6050_read_gyroZ()//axis x=0,y=1,z=2
{
     1ac:	cf 93       	push	r28
     1ae:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_ZOUT_H);
     1b0:	87 e4       	ldi	r24, 0x47	; 71
     1b2:	ca df       	rcall	.-108    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_ZOUT_L);
     1b4:	c8 2f       	mov	r28, r24
     1b6:	d0 e0       	ldi	r29, 0x00	; 0
     1b8:	dc 2f       	mov	r29, r28
     1ba:	cc 27       	eor	r28, r28
     1bc:	88 e4       	ldi	r24, 0x48	; 72
     1be:	c4 df       	rcall	.-120    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     1c0:	9e 01       	movw	r18, r28
     1c2:	28 2b       	or	r18, r24
     1c4:	c9 01       	movw	r24, r18
     1c6:	df 91       	pop	r29
     1c8:	cf 91       	pop	r28
     1ca:	08 95       	ret

000001cc <mpu6050_calibrate_gyro>:
	}
	return 0;
}

void mpu6050_calibrate_gyro(int32_t *x,int32_t *y, int32_t *z)
{
     1cc:	cf 92       	push	r12
     1ce:	df 92       	push	r13
     1d0:	ef 92       	push	r14
     1d2:	ff 92       	push	r15
     1d4:	0f 93       	push	r16
     1d6:	1f 93       	push	r17
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	6c 01       	movw	r12, r24
     1de:	7b 01       	movw	r14, r22
     1e0:	8a 01       	movw	r16, r20
	printf("Calibrating Gyro...\n");
     1e2:	86 e0       	ldi	r24, 0x06	; 6
     1e4:	92 e0       	ldi	r25, 0x02	; 2
     1e6:	30 d4       	rcall	.+2144   	; 0xa48 <puts>
     1e8:	c0 ed       	ldi	r28, 0xD0	; 208
	for (int i=0;i<calibration_counter;i++)
	{
		(*x)+=mpu6050_read_gyroX();
     1ea:	d7 e0       	ldi	r29, 0x07	; 7
     1ec:	bf df       	rcall	.-130    	; 0x16c <mpu6050_read_gyroX>
     1ee:	f6 01       	movw	r30, r12
     1f0:	40 81       	ld	r20, Z
     1f2:	51 81       	ldd	r21, Z+1	; 0x01
     1f4:	62 81       	ldd	r22, Z+2	; 0x02
     1f6:	73 81       	ldd	r23, Z+3	; 0x03
     1f8:	48 0f       	add	r20, r24
     1fa:	59 1f       	adc	r21, r25
     1fc:	61 1d       	adc	r22, r1
     1fe:	71 1d       	adc	r23, r1
     200:	40 83       	st	Z, r20
     202:	51 83       	std	Z+1, r21	; 0x01
     204:	62 83       	std	Z+2, r22	; 0x02
		(*y)+=mpu6050_read_gyroY();
     206:	73 83       	std	Z+3, r23	; 0x03
     208:	c1 df       	rcall	.-126    	; 0x18c <mpu6050_read_gyroY>
     20a:	f7 01       	movw	r30, r14
     20c:	40 81       	ld	r20, Z
     20e:	51 81       	ldd	r21, Z+1	; 0x01
     210:	62 81       	ldd	r22, Z+2	; 0x02
     212:	73 81       	ldd	r23, Z+3	; 0x03
     214:	48 0f       	add	r20, r24
     216:	59 1f       	adc	r21, r25
     218:	61 1d       	adc	r22, r1
     21a:	71 1d       	adc	r23, r1
     21c:	40 83       	st	Z, r20
     21e:	51 83       	std	Z+1, r21	; 0x01
     220:	62 83       	std	Z+2, r22	; 0x02
		(*z)+=mpu6050_read_gyroZ();
     222:	73 83       	std	Z+3, r23	; 0x03
     224:	c3 df       	rcall	.-122    	; 0x1ac <mpu6050_read_gyroZ>
     226:	f8 01       	movw	r30, r16
     228:	40 81       	ld	r20, Z
     22a:	51 81       	ldd	r21, Z+1	; 0x01
     22c:	62 81       	ldd	r22, Z+2	; 0x02
     22e:	73 81       	ldd	r23, Z+3	; 0x03
     230:	48 0f       	add	r20, r24
     232:	59 1f       	adc	r21, r25
     234:	61 1d       	adc	r22, r1
     236:	71 1d       	adc	r23, r1
     238:	40 83       	st	Z, r20
     23a:	51 83       	std	Z+1, r21	; 0x01
     23c:	62 83       	std	Z+2, r22	; 0x02
     23e:	73 83       	std	Z+3, r23	; 0x03
     240:	21 97       	sbiw	r28, 0x01	; 1
}

void mpu6050_calibrate_gyro(int32_t *x,int32_t *y, int32_t *z)
{
	printf("Calibrating Gyro...\n");
	for (int i=0;i<calibration_counter;i++)
     242:	a1 f6       	brne	.-88     	; 0x1ec <mpu6050_calibrate_gyro+0x20>
		(*x)+=mpu6050_read_gyroX();
		(*y)+=mpu6050_read_gyroY();
		(*z)+=mpu6050_read_gyroZ();
		_delay_ms(caliberation_wait_delay);
	}
		if(*x<0)
     244:	f6 01       	movw	r30, r12
     246:	60 81       	ld	r22, Z
     248:	71 81       	ldd	r23, Z+1	; 0x01
     24a:	82 81       	ldd	r24, Z+2	; 0x02
     24c:	93 81       	ldd	r25, Z+3	; 0x03
     24e:	99 23       	and	r25, r25
     250:	ac f4       	brge	.+42     	; 0x27c <mpu6050_calibrate_gyro+0xb0>
		(*x)=abs(*x)/calibration_counter;
     252:	9b 01       	movw	r18, r22
     254:	77 23       	and	r23, r23
     256:	24 f4       	brge	.+8      	; 0x260 <mpu6050_calibrate_gyro+0x94>
     258:	22 27       	eor	r18, r18
     25a:	33 27       	eor	r19, r19
     25c:	26 1b       	sub	r18, r22
     25e:	37 0b       	sbc	r19, r23
     260:	c9 01       	movw	r24, r18
     262:	60 ed       	ldi	r22, 0xD0	; 208
     264:	77 e0       	ldi	r23, 0x07	; 7
     266:	06 d3       	rcall	.+1548   	; 0x874 <__divmodhi4>
     268:	cb 01       	movw	r24, r22
     26a:	77 0f       	add	r23, r23
     26c:	aa 0b       	sbc	r26, r26
     26e:	bb 0b       	sbc	r27, r27
     270:	f6 01       	movw	r30, r12
     272:	80 83       	st	Z, r24
     274:	91 83       	std	Z+1, r25	; 0x01
     276:	a2 83       	std	Z+2, r26	; 0x02
     278:	b3 83       	std	Z+3, r27	; 0x03
		else
		(*x)=(*x)/calibration_counter;
     27a:	0a c0       	rjmp	.+20     	; 0x290 <mpu6050_calibrate_gyro+0xc4>
     27c:	20 ed       	ldi	r18, 0xD0	; 208
     27e:	37 e0       	ldi	r19, 0x07	; 7
     280:	40 e0       	ldi	r20, 0x00	; 0
     282:	50 e0       	ldi	r21, 0x00	; 0
     284:	0a d3       	rcall	.+1556   	; 0x89a <__divmodsi4>
     286:	f6 01       	movw	r30, r12
     288:	20 83       	st	Z, r18
     28a:	31 83       	std	Z+1, r19	; 0x01
     28c:	42 83       	std	Z+2, r20	; 0x02
     28e:	53 83       	std	Z+3, r21	; 0x03
		
		if(*y<0)
     290:	f7 01       	movw	r30, r14
     292:	60 81       	ld	r22, Z
     294:	71 81       	ldd	r23, Z+1	; 0x01
     296:	82 81       	ldd	r24, Z+2	; 0x02
     298:	93 81       	ldd	r25, Z+3	; 0x03
     29a:	99 23       	and	r25, r25
     29c:	ac f4       	brge	.+42     	; 0x2c8 <mpu6050_calibrate_gyro+0xfc>
		(*y)=abs(*y)/calibration_counter;
     29e:	9b 01       	movw	r18, r22
     2a0:	77 23       	and	r23, r23
     2a2:	24 f4       	brge	.+8      	; 0x2ac <mpu6050_calibrate_gyro+0xe0>
     2a4:	22 27       	eor	r18, r18
     2a6:	33 27       	eor	r19, r19
     2a8:	26 1b       	sub	r18, r22
     2aa:	37 0b       	sbc	r19, r23
     2ac:	c9 01       	movw	r24, r18
     2ae:	60 ed       	ldi	r22, 0xD0	; 208
     2b0:	77 e0       	ldi	r23, 0x07	; 7
     2b2:	e0 d2       	rcall	.+1472   	; 0x874 <__divmodhi4>
     2b4:	cb 01       	movw	r24, r22
     2b6:	77 0f       	add	r23, r23
     2b8:	aa 0b       	sbc	r26, r26
     2ba:	bb 0b       	sbc	r27, r27
     2bc:	f7 01       	movw	r30, r14
     2be:	80 83       	st	Z, r24
     2c0:	91 83       	std	Z+1, r25	; 0x01
     2c2:	a2 83       	std	Z+2, r26	; 0x02
     2c4:	b3 83       	std	Z+3, r27	; 0x03
		else
		(*y)=(*y)/calibration_counter;
     2c6:	0a c0       	rjmp	.+20     	; 0x2dc <mpu6050_calibrate_gyro+0x110>
     2c8:	20 ed       	ldi	r18, 0xD0	; 208
     2ca:	37 e0       	ldi	r19, 0x07	; 7
     2cc:	40 e0       	ldi	r20, 0x00	; 0
     2ce:	50 e0       	ldi	r21, 0x00	; 0
     2d0:	e4 d2       	rcall	.+1480   	; 0x89a <__divmodsi4>
     2d2:	f7 01       	movw	r30, r14
     2d4:	20 83       	st	Z, r18
     2d6:	31 83       	std	Z+1, r19	; 0x01
     2d8:	42 83       	std	Z+2, r20	; 0x02
     2da:	53 83       	std	Z+3, r21	; 0x03
		
		if(*z<0)
     2dc:	f8 01       	movw	r30, r16
     2de:	60 81       	ld	r22, Z
     2e0:	71 81       	ldd	r23, Z+1	; 0x01
     2e2:	82 81       	ldd	r24, Z+2	; 0x02
     2e4:	93 81       	ldd	r25, Z+3	; 0x03
     2e6:	99 23       	and	r25, r25
     2e8:	ac f4       	brge	.+42     	; 0x314 <mpu6050_calibrate_gyro+0x148>
		(*z)=abs(*z)/calibration_counter;
     2ea:	9b 01       	movw	r18, r22
     2ec:	77 23       	and	r23, r23
     2ee:	24 f4       	brge	.+8      	; 0x2f8 <mpu6050_calibrate_gyro+0x12c>
     2f0:	22 27       	eor	r18, r18
     2f2:	33 27       	eor	r19, r19
     2f4:	26 1b       	sub	r18, r22
     2f6:	37 0b       	sbc	r19, r23
     2f8:	c9 01       	movw	r24, r18
     2fa:	60 ed       	ldi	r22, 0xD0	; 208
     2fc:	77 e0       	ldi	r23, 0x07	; 7
     2fe:	ba d2       	rcall	.+1396   	; 0x874 <__divmodhi4>
     300:	cb 01       	movw	r24, r22
     302:	77 0f       	add	r23, r23
     304:	aa 0b       	sbc	r26, r26
     306:	bb 0b       	sbc	r27, r27
     308:	f8 01       	movw	r30, r16
     30a:	80 83       	st	Z, r24
     30c:	91 83       	std	Z+1, r25	; 0x01
     30e:	a2 83       	std	Z+2, r26	; 0x02
     310:	b3 83       	std	Z+3, r27	; 0x03
		else
		(*z)=(*z)/calibration_counter;
     312:	0a c0       	rjmp	.+20     	; 0x328 <mpu6050_calibrate_gyro+0x15c>
     314:	20 ed       	ldi	r18, 0xD0	; 208
     316:	37 e0       	ldi	r19, 0x07	; 7
     318:	40 e0       	ldi	r20, 0x00	; 0
     31a:	50 e0       	ldi	r21, 0x00	; 0
     31c:	be d2       	rcall	.+1404   	; 0x89a <__divmodsi4>
     31e:	f8 01       	movw	r30, r16
     320:	20 83       	st	Z, r18
     322:	31 83       	std	Z+1, r19	; 0x01
     324:	42 83       	std	Z+2, r20	; 0x02
     326:	53 83       	std	Z+3, r21	; 0x03
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/			
	
}
     328:	df 91       	pop	r29
     32a:	cf 91       	pop	r28
     32c:	1f 91       	pop	r17
     32e:	0f 91       	pop	r16
     330:	ff 90       	pop	r15
     332:	ef 90       	pop	r14
     334:	df 90       	pop	r13
     336:	cf 90       	pop	r12
     338:	08 95       	ret

0000033a <mpu6050_read_accelX>:
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_ZOUT_H);
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_ZOUT_L);
	return axis_value;
}
uint16_t mpu6050_read_accelX()
{
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_XOUT_H);
     33e:	8b e3       	ldi	r24, 0x3B	; 59
     340:	03 df       	rcall	.-506    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_XOUT_L);
     342:	c8 2f       	mov	r28, r24
     344:	d0 e0       	ldi	r29, 0x00	; 0
     346:	dc 2f       	mov	r29, r28
     348:	cc 27       	eor	r28, r28
     34a:	8c e3       	ldi	r24, 0x3C	; 60
     34c:	fd de       	rcall	.-518    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     34e:	9e 01       	movw	r18, r28
     350:	28 2b       	or	r18, r24
     352:	c9 01       	movw	r24, r18
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <mpu6050_read_accelY>:
uint16_t mpu6050_read_accelY()
{
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_YOUT_H);
     35e:	8d e3       	ldi	r24, 0x3D	; 61
     360:	f3 de       	rcall	.-538    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_YOUT_L);
     362:	c8 2f       	mov	r28, r24
     364:	d0 e0       	ldi	r29, 0x00	; 0
     366:	dc 2f       	mov	r29, r28
     368:	cc 27       	eor	r28, r28
     36a:	8e e3       	ldi	r24, 0x3E	; 62
     36c:	ed de       	rcall	.-550    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     36e:	9e 01       	movw	r18, r28
     370:	28 2b       	or	r18, r24
     372:	c9 01       	movw	r24, r18
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	08 95       	ret

0000037a <mpu6050_read_accelZ>:
uint16_t mpu6050_read_accelZ()
{
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_H);
     37e:	8f e3       	ldi	r24, 0x3F	; 63
     380:	e3 de       	rcall	.-570    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_L);
     382:	c8 2f       	mov	r28, r24
     384:	d0 e0       	ldi	r29, 0x00	; 0
     386:	dc 2f       	mov	r29, r28
     388:	cc 27       	eor	r28, r28
     38a:	80 e4       	ldi	r24, 0x40	; 64
     38c:	dd de       	rcall	.-582    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     38e:	9e 01       	movw	r18, r28
     390:	28 2b       	or	r18, r24
     392:	c9 01       	movw	r24, r18
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	08 95       	ret

0000039a <mpu6050_calibrate_accel>:
	*/			
	
}

void mpu6050_calibrate_accel(int32_t *x,int32_t *y, int32_t *z)
{
     39a:	cf 92       	push	r12
     39c:	df 92       	push	r13
     39e:	ef 92       	push	r14
     3a0:	ff 92       	push	r15
     3a2:	0f 93       	push	r16
     3a4:	1f 93       	push	r17
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	6c 01       	movw	r12, r24
     3ac:	7b 01       	movw	r14, r22
     3ae:	8a 01       	movw	r16, r20
	
	printf("Calibrating Accelerometer...\n");
     3b0:	8a e1       	ldi	r24, 0x1A	; 26
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	49 d3       	rcall	.+1682   	; 0xa48 <puts>
     3b6:	c0 ed       	ldi	r28, 0xD0	; 208
	for(int i=0;i<calibration_counter;i++){
		(*x)+=mpu6050_read_accelX();
     3b8:	d7 e0       	ldi	r29, 0x07	; 7
     3ba:	bf df       	rcall	.-130    	; 0x33a <mpu6050_read_accelX>
     3bc:	f6 01       	movw	r30, r12
     3be:	40 81       	ld	r20, Z
     3c0:	51 81       	ldd	r21, Z+1	; 0x01
     3c2:	62 81       	ldd	r22, Z+2	; 0x02
     3c4:	73 81       	ldd	r23, Z+3	; 0x03
     3c6:	48 0f       	add	r20, r24
     3c8:	59 1f       	adc	r21, r25
     3ca:	61 1d       	adc	r22, r1
     3cc:	71 1d       	adc	r23, r1
     3ce:	40 83       	st	Z, r20
     3d0:	51 83       	std	Z+1, r21	; 0x01
     3d2:	62 83       	std	Z+2, r22	; 0x02
		(*y)+=mpu6050_read_accelY();
     3d4:	73 83       	std	Z+3, r23	; 0x03
     3d6:	c1 df       	rcall	.-126    	; 0x35a <mpu6050_read_accelY>
     3d8:	f7 01       	movw	r30, r14
     3da:	40 81       	ld	r20, Z
     3dc:	51 81       	ldd	r21, Z+1	; 0x01
     3de:	62 81       	ldd	r22, Z+2	; 0x02
     3e0:	73 81       	ldd	r23, Z+3	; 0x03
     3e2:	48 0f       	add	r20, r24
     3e4:	59 1f       	adc	r21, r25
     3e6:	61 1d       	adc	r22, r1
     3e8:	71 1d       	adc	r23, r1
     3ea:	40 83       	st	Z, r20
     3ec:	51 83       	std	Z+1, r21	; 0x01
     3ee:	62 83       	std	Z+2, r22	; 0x02
		(*z)+=mpu6050_read_accelZ();
     3f0:	73 83       	std	Z+3, r23	; 0x03
     3f2:	c3 df       	rcall	.-122    	; 0x37a <mpu6050_read_accelZ>
     3f4:	f8 01       	movw	r30, r16
     3f6:	40 81       	ld	r20, Z
     3f8:	51 81       	ldd	r21, Z+1	; 0x01
     3fa:	62 81       	ldd	r22, Z+2	; 0x02
     3fc:	73 81       	ldd	r23, Z+3	; 0x03
     3fe:	48 0f       	add	r20, r24
     400:	59 1f       	adc	r21, r25
     402:	61 1d       	adc	r22, r1
     404:	71 1d       	adc	r23, r1
     406:	40 83       	st	Z, r20
     408:	51 83       	std	Z+1, r21	; 0x01
     40a:	62 83       	std	Z+2, r22	; 0x02
     40c:	73 83       	std	Z+3, r23	; 0x03
     40e:	21 97       	sbiw	r28, 0x01	; 1

void mpu6050_calibrate_accel(int32_t *x,int32_t *y, int32_t *z)
{
	
	printf("Calibrating Accelerometer...\n");
	for(int i=0;i<calibration_counter;i++){
     410:	a1 f6       	brne	.-88     	; 0x3ba <mpu6050_calibrate_accel+0x20>
		(*x)+=mpu6050_read_accelX();
		(*y)+=mpu6050_read_accelY();
		(*z)+=mpu6050_read_accelZ();
		_delay_ms(caliberation_wait_delay);
	}
	if(*x<0)
     412:	f6 01       	movw	r30, r12
     414:	60 81       	ld	r22, Z
     416:	71 81       	ldd	r23, Z+1	; 0x01
     418:	82 81       	ldd	r24, Z+2	; 0x02
     41a:	93 81       	ldd	r25, Z+3	; 0x03
     41c:	99 23       	and	r25, r25
     41e:	ac f4       	brge	.+42     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
	(*x)=abs(*x)/calibration_counter;
     420:	9b 01       	movw	r18, r22
     422:	77 23       	and	r23, r23
     424:	24 f4       	brge	.+8      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     426:	22 27       	eor	r18, r18
     428:	33 27       	eor	r19, r19
     42a:	26 1b       	sub	r18, r22
     42c:	37 0b       	sbc	r19, r23
     42e:	c9 01       	movw	r24, r18
     430:	60 ed       	ldi	r22, 0xD0	; 208
     432:	77 e0       	ldi	r23, 0x07	; 7
     434:	1f d2       	rcall	.+1086   	; 0x874 <__divmodhi4>
     436:	cb 01       	movw	r24, r22
     438:	77 0f       	add	r23, r23
     43a:	aa 0b       	sbc	r26, r26
     43c:	bb 0b       	sbc	r27, r27
     43e:	f6 01       	movw	r30, r12
     440:	80 83       	st	Z, r24
     442:	91 83       	std	Z+1, r25	; 0x01
     444:	a2 83       	std	Z+2, r26	; 0x02
     446:	b3 83       	std	Z+3, r27	; 0x03
	else
	(*x)=(*x)/calibration_counter;
     448:	0a c0       	rjmp	.+20     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     44a:	20 ed       	ldi	r18, 0xD0	; 208
     44c:	37 e0       	ldi	r19, 0x07	; 7
     44e:	40 e0       	ldi	r20, 0x00	; 0
     450:	50 e0       	ldi	r21, 0x00	; 0
     452:	23 d2       	rcall	.+1094   	; 0x89a <__divmodsi4>
     454:	f6 01       	movw	r30, r12
     456:	20 83       	st	Z, r18
     458:	31 83       	std	Z+1, r19	; 0x01
     45a:	42 83       	std	Z+2, r20	; 0x02
     45c:	53 83       	std	Z+3, r21	; 0x03
	
	if(*y<0)
     45e:	f7 01       	movw	r30, r14
     460:	60 81       	ld	r22, Z
     462:	71 81       	ldd	r23, Z+1	; 0x01
     464:	82 81       	ldd	r24, Z+2	; 0x02
     466:	93 81       	ldd	r25, Z+3	; 0x03
     468:	99 23       	and	r25, r25
     46a:	ac f4       	brge	.+42     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
	(*y)=abs(*y)/calibration_counter;
     46c:	9b 01       	movw	r18, r22
     46e:	77 23       	and	r23, r23
     470:	24 f4       	brge	.+8      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     472:	22 27       	eor	r18, r18
     474:	33 27       	eor	r19, r19
     476:	26 1b       	sub	r18, r22
     478:	37 0b       	sbc	r19, r23
     47a:	c9 01       	movw	r24, r18
     47c:	60 ed       	ldi	r22, 0xD0	; 208
     47e:	77 e0       	ldi	r23, 0x07	; 7
     480:	f9 d1       	rcall	.+1010   	; 0x874 <__divmodhi4>
     482:	cb 01       	movw	r24, r22
     484:	77 0f       	add	r23, r23
     486:	aa 0b       	sbc	r26, r26
     488:	bb 0b       	sbc	r27, r27
     48a:	f7 01       	movw	r30, r14
     48c:	80 83       	st	Z, r24
     48e:	91 83       	std	Z+1, r25	; 0x01
     490:	a2 83       	std	Z+2, r26	; 0x02
     492:	b3 83       	std	Z+3, r27	; 0x03
	else
	(*y)=(*y)/calibration_counter;
     494:	0a c0       	rjmp	.+20     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     496:	20 ed       	ldi	r18, 0xD0	; 208
     498:	37 e0       	ldi	r19, 0x07	; 7
     49a:	40 e0       	ldi	r20, 0x00	; 0
     49c:	50 e0       	ldi	r21, 0x00	; 0
     49e:	fd d1       	rcall	.+1018   	; 0x89a <__divmodsi4>
     4a0:	f7 01       	movw	r30, r14
     4a2:	20 83       	st	Z, r18
     4a4:	31 83       	std	Z+1, r19	; 0x01
     4a6:	42 83       	std	Z+2, r20	; 0x02
     4a8:	53 83       	std	Z+3, r21	; 0x03
	
	if(*z<0)
     4aa:	f8 01       	movw	r30, r16
     4ac:	60 81       	ld	r22, Z
     4ae:	71 81       	ldd	r23, Z+1	; 0x01
     4b0:	82 81       	ldd	r24, Z+2	; 0x02
     4b2:	93 81       	ldd	r25, Z+3	; 0x03
     4b4:	99 23       	and	r25, r25
     4b6:	ac f4       	brge	.+42     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
	(*z)=abs(*z)/calibration_counter;
     4b8:	9b 01       	movw	r18, r22
     4ba:	77 23       	and	r23, r23
     4bc:	24 f4       	brge	.+8      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
     4be:	22 27       	eor	r18, r18
     4c0:	33 27       	eor	r19, r19
     4c2:	26 1b       	sub	r18, r22
     4c4:	37 0b       	sbc	r19, r23
     4c6:	c9 01       	movw	r24, r18
     4c8:	60 ed       	ldi	r22, 0xD0	; 208
     4ca:	77 e0       	ldi	r23, 0x07	; 7
     4cc:	d3 d1       	rcall	.+934    	; 0x874 <__divmodhi4>
     4ce:	cb 01       	movw	r24, r22
     4d0:	77 0f       	add	r23, r23
     4d2:	aa 0b       	sbc	r26, r26
     4d4:	bb 0b       	sbc	r27, r27
     4d6:	f8 01       	movw	r30, r16
     4d8:	80 83       	st	Z, r24
     4da:	91 83       	std	Z+1, r25	; 0x01
     4dc:	a2 83       	std	Z+2, r26	; 0x02
     4de:	b3 83       	std	Z+3, r27	; 0x03
	else
	(*z)=(*z)/calibration_counter;
     4e0:	0a c0       	rjmp	.+20     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
     4e2:	20 ed       	ldi	r18, 0xD0	; 208
     4e4:	37 e0       	ldi	r19, 0x07	; 7
     4e6:	40 e0       	ldi	r20, 0x00	; 0
     4e8:	50 e0       	ldi	r21, 0x00	; 0
     4ea:	d7 d1       	rcall	.+942    	; 0x89a <__divmodsi4>
     4ec:	f8 01       	movw	r30, r16
     4ee:	20 83       	st	Z, r18
     4f0:	31 83       	std	Z+1, r19	; 0x01
     4f2:	42 83       	std	Z+2, r20	; 0x02
     4f4:	53 83       	std	Z+3, r21	; 0x03
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     4f6:	df 91       	pop	r29
     4f8:	cf 91       	pop	r28
     4fa:	1f 91       	pop	r17
     4fc:	0f 91       	pop	r16
     4fe:	ff 90       	pop	r15
     500:	ef 90       	pop	r14
     502:	df 90       	pop	r13
     504:	cf 90       	pop	r12
     506:	08 95       	ret

00000508 <mpu6050_wb>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_wb(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     508:	cf 93       	push	r28
     50a:	df 93       	push	r29
     50c:	d8 2f       	mov	r29, r24
     50e:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     510:	80 ed       	ldi	r24, 0xD0	; 208
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	13 d1       	rcall	.+550    	; 0x73c <i2c_start>
	i2c_write(wereToWrite);
     516:	8d 2f       	mov	r24, r29
     518:	90 e0       	ldi	r25, 0x00	; 0
	i2c_write(byteToWrite);
     51a:	66 d1       	rcall	.+716    	; 0x7e8 <i2c_write>
     51c:	8c 2f       	mov	r24, r28
	i2c_stop();
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	63 d1       	rcall	.+710    	; 0x7e8 <i2c_write>
}
     522:	52 d1       	rcall	.+676    	; 0x7c8 <i2c_stop>
     524:	df 91       	pop	r29
     526:	cf 91       	pop	r28
     528:	08 95       	ret

0000052a <print16>:
//}

void print16(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     52a:	0f 93       	push	r16
     52c:	1f 93       	push	r17
     52e:	cf 93       	push	r28
     530:	df 93       	push	r29
     532:	cd b7       	in	r28, 0x3d	; 61
     534:	de b7       	in	r29, 0x3e	; 62
     536:	2a 97       	sbiw	r28, 0x0a	; 10
     538:	0f b6       	in	r0, 0x3f	; 63
     53a:	f8 94       	cli
     53c:	de bf       	out	0x3e, r29	; 62
     53e:	0f be       	out	0x3f, r0	; 63
     540:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     542:	4a e0       	ldi	r20, 0x0A	; 10
     544:	8e 01       	movw	r16, r28
     546:	0f 5f       	subi	r16, 0xFF	; 255
     548:	1f 4f       	sbci	r17, 0xFF	; 255
     54a:	b8 01       	movw	r22, r16
     54c:	fc 01       	movw	r30, r24
     54e:	80 81       	ld	r24, Z
     550:	91 81       	ldd	r25, Z+1	; 0x01
     552:	f5 d1       	rcall	.+1002   	; 0x93e <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     554:	1f 93       	push	r17
     556:	0f 93       	push	r16
     558:	5f d2       	rcall	.+1214   	; 0xa18 <printf>
	//printf("\n");
}
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	2a 96       	adiw	r28, 0x0a	; 10
     560:	0f b6       	in	r0, 0x3f	; 63
     562:	f8 94       	cli
     564:	de bf       	out	0x3e, r29	; 62
     566:	0f be       	out	0x3f, r0	; 63
     568:	cd bf       	out	0x3d, r28	; 61
     56a:	df 91       	pop	r29
     56c:	cf 91       	pop	r28
     56e:	1f 91       	pop	r17
     570:	0f 91       	pop	r16
     572:	08 95       	ret

00000574 <main>:



int main(void)

{	
     574:	cf 93       	push	r28
     576:	df 93       	push	r29
     578:	cd b7       	in	r28, 0x3d	; 61
     57a:	de b7       	in	r29, 0x3e	; 62
     57c:	6a 97       	sbiw	r28, 0x1a	; 26
     57e:	0f b6       	in	r0, 0x3f	; 63
     580:	f8 94       	cli
     582:	de bf       	out	0x3e, r29	; 62
     584:	0f be       	out	0x3f, r0	; 63
     586:	cd bf       	out	0x3d, r28	; 61

	USART_Init(MY_UBRR);
     588:	80 e1       	ldi	r24, 0x10	; 16
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	68 d1       	rcall	.+720    	; 0x85e <USART_Init>
	//uart_init(UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU));
	uart_str = fdevopen(uart_putchar, NULL);
     58e:	60 e0       	ldi	r22, 0x00	; 0
     590:	70 e0       	ldi	r23, 0x00	; 0
     592:	83 e9       	ldi	r24, 0x93	; 147
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	f6 d1       	rcall	.+1004   	; 0x984 <fdevopen>
     598:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <__data_end+0x1>
     59c:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <__data_end>
	//init_gpio();
	sei();
	//sbi(ADCSRA,ADSC);
	
	/*----------MPU6050 twi init---------*/
	i2c_init();
     5a0:	78 94       	sei
     5a2:	c6 d0       	rcall	.+396    	; 0x730 <i2c_init>
	int32_t gyroX_calib=0;
     5a4:	19 82       	std	Y+1, r1	; 0x01
     5a6:	1a 82       	std	Y+2, r1	; 0x02
     5a8:	1b 82       	std	Y+3, r1	; 0x03
     5aa:	1c 82       	std	Y+4, r1	; 0x04
	int32_t gyroY_calib=0;
     5ac:	1d 82       	std	Y+5, r1	; 0x05
     5ae:	1e 82       	std	Y+6, r1	; 0x06
     5b0:	1f 82       	std	Y+7, r1	; 0x07
     5b2:	18 86       	std	Y+8, r1	; 0x08
	int32_t gyroZ_calib=0;
     5b4:	19 86       	std	Y+9, r1	; 0x09
     5b6:	1a 86       	std	Y+10, r1	; 0x0a
     5b8:	1b 86       	std	Y+11, r1	; 0x0b
     5ba:	1c 86       	std	Y+12, r1	; 0x0c
	int32_t accelX_calib=0;
     5bc:	1d 86       	std	Y+13, r1	; 0x0d
     5be:	1e 86       	std	Y+14, r1	; 0x0e
     5c0:	1f 86       	std	Y+15, r1	; 0x0f
     5c2:	18 8a       	std	Y+16, r1	; 0x10
	int32_t accelY_calib=0;
     5c4:	19 8a       	std	Y+17, r1	; 0x11
     5c6:	1a 8a       	std	Y+18, r1	; 0x12
     5c8:	1b 8a       	std	Y+19, r1	; 0x13
     5ca:	1c 8a       	std	Y+20, r1	; 0x14
	int32_t accelZ_calib=0;
     5cc:	1d 8a       	std	Y+21, r1	; 0x15
     5ce:	1e 8a       	std	Y+22, r1	; 0x16
     5d0:	1f 8a       	std	Y+23, r1	; 0x17
	uint16_t accel_x;
	uint16_t accel_y;
	uint16_t accel_z;
	double angle_pitch=0;
	double angle_roll=0;
	printf("\n");
     5d2:	18 8e       	std	Y+24, r1	; 0x18
     5d4:	8a e0       	ldi	r24, 0x0A	; 10
     5d6:	90 e0       	ldi	r25, 0x00	; 0
	mpu6050_wb(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     5d8:	32 d2       	rcall	.+1124   	; 0xa3e <putchar>
     5da:	68 e0       	ldi	r22, 0x08	; 8
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	8b e1       	ldi	r24, 0x1B	; 27
	mpu6050_wb(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	92 df       	rcall	.-220    	; 0x508 <mpu6050_wb>
     5e4:	60 e1       	ldi	r22, 0x10	; 16
     5e6:	70 e0       	ldi	r23, 0x00	; 0
     5e8:	8c e1       	ldi	r24, 0x1C	; 28
     5ea:	90 e0       	ldi	r25, 0x00	; 0
	mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
     5ec:	8d df       	rcall	.-230    	; 0x508 <mpu6050_wb>
     5ee:	ae 01       	movw	r20, r28
     5f0:	47 5f       	subi	r20, 0xF7	; 247
     5f2:	5f 4f       	sbci	r21, 0xFF	; 255
     5f4:	be 01       	movw	r22, r28
     5f6:	6b 5f       	subi	r22, 0xFB	; 251
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	ce 01       	movw	r24, r28
     5fc:	01 96       	adiw	r24, 0x01	; 1
	mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
     5fe:	e6 dd       	rcall	.-1076   	; 0x1cc <mpu6050_calibrate_gyro>
     600:	ae 01       	movw	r20, r28
     602:	4b 5e       	subi	r20, 0xEB	; 235
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	be 01       	movw	r22, r28
     608:	6f 5e       	subi	r22, 0xEF	; 239
     60a:	7f 4f       	sbci	r23, 0xFF	; 255
     60c:	ce 01       	movw	r24, r28
     60e:	0d 96       	adiw	r24, 0x0d	; 13
    {
		#ifdef PRINT_RAW_DATA
		/*--------raw data gyro-accel------*/
		uint16_t var=grX;
		gyro_x=var;
		printf("x= ");
     610:	c4 de       	rcall	.-632    	; 0x39a <mpu6050_calibrate_accel>
     612:	0f 2e       	mov	r0, r31
     614:	f7 e3       	ldi	r31, 0x37	; 55
     616:	8f 2e       	mov	r8, r31
     618:	f2 e0       	ldi	r31, 0x02	; 2
     61a:	9f 2e       	mov	r9, r31
		print16(&var);
		printf("  ");
     61c:	f0 2d       	mov	r31, r0
     61e:	0b e3       	ldi	r16, 0x3B	; 59
		var=grY;
		gyro_y=var;
		printf("y= ");
     620:	12 e0       	ldi	r17, 0x02	; 2
     622:	0f 2e       	mov	r0, r31
     624:	fe e3       	ldi	r31, 0x3E	; 62
     626:	af 2e       	mov	r10, r31
     628:	f2 e0       	ldi	r31, 0x02	; 2
     62a:	bf 2e       	mov	r11, r31
		print16(&var);
		printf("  ");
		var=grZ;
		gyro_z=var;
		printf("Z= ");
     62c:	f0 2d       	mov	r31, r0
     62e:	0f 2e       	mov	r0, r31
     630:	f3 e5       	ldi	r31, 0x53	; 83
     632:	cf 2e       	mov	r12, r31
     634:	f2 e0       	ldi	r31, 0x02	; 2
     636:	df 2e       	mov	r13, r31
		print16(&var);
		printf("  ");
		
		var=accX;
		accel_x=var;
		printf("accX= ");
     638:	f0 2d       	mov	r31, r0
     63a:	0f 2e       	mov	r0, r31
     63c:	f2 e4       	ldi	r31, 0x42	; 66
     63e:	ef 2e       	mov	r14, r31
     640:	f2 e0       	ldi	r31, 0x02	; 2
     642:	ff 2e       	mov	r15, r31
		print16(&var);
		printf("  ");
		var=accY;
		accel_y=var;
		printf("accY= ");
     644:	f0 2d       	mov	r31, r0
     646:	0f 2e       	mov	r0, r31
     648:	f9 e4       	ldi	r31, 0x49	; 73
     64a:	6f 2e       	mov	r6, r31
     64c:	f2 e0       	ldi	r31, 0x02	; 2
		print16(&var);
		printf("  ");
		var=accZ;
		accel_z=var;
		printf("accZ= ");
     64e:	7f 2e       	mov	r7, r31
     650:	f0 2d       	mov	r31, r0
     652:	0f 2e       	mov	r0, r31
     654:	f0 e5       	ldi	r31, 0x50	; 80
     656:	4f 2e       	mov	r4, r31
     658:	f2 e0       	ldi	r31, 0x02	; 2
	/*-----------------end---------------*/
    while (1) //hesa kgam
    {
		#ifdef PRINT_RAW_DATA
		/*--------raw data gyro-accel------*/
		uint16_t var=grX;
     65a:	5f 2e       	mov	r5, r31
     65c:	f0 2d       	mov	r31, r0
     65e:	86 dd       	rcall	.-1268   	; 0x16c <mpu6050_read_gyroX>
     660:	29 81       	ldd	r18, Y+1	; 0x01
		gyro_x=var;
		printf("x= ");
     662:	3a 81       	ldd	r19, Y+2	; 0x02
     664:	82 1b       	sub	r24, r18
     666:	93 0b       	sbc	r25, r19
		print16(&var);
     668:	9a 8f       	std	Y+26, r25	; 0x1a
     66a:	89 8f       	std	Y+25, r24	; 0x19
     66c:	9f 92       	push	r9
     66e:	8f 92       	push	r8
		printf("  ");
     670:	d3 d1       	rcall	.+934    	; 0xa18 <printf>
     672:	ce 01       	movw	r24, r28
		var=grY;
     674:	49 96       	adiw	r24, 0x19	; 25
     676:	59 df       	rcall	.-334    	; 0x52a <print16>
     678:	1f 93       	push	r17
     67a:	0f 93       	push	r16
     67c:	cd d1       	rcall	.+922    	; 0xa18 <printf>
		gyro_y=var;
		printf("y= ");
     67e:	86 dd       	rcall	.-1268   	; 0x18c <mpu6050_read_gyroY>
     680:	2d 81       	ldd	r18, Y+5	; 0x05
     682:	3e 81       	ldd	r19, Y+6	; 0x06
     684:	82 1b       	sub	r24, r18
		print16(&var);
     686:	93 0b       	sbc	r25, r19
     688:	9a 8f       	std	Y+26, r25	; 0x1a
		printf("  ");
     68a:	89 8f       	std	Y+25, r24	; 0x19
		var=grZ;
     68c:	bf 92       	push	r11
     68e:	af 92       	push	r10
     690:	c3 d1       	rcall	.+902    	; 0xa18 <printf>
     692:	ce 01       	movw	r24, r28
     694:	49 96       	adiw	r24, 0x19	; 25
     696:	49 df       	rcall	.-366    	; 0x52a <print16>
     698:	1f 93       	push	r17
		gyro_z=var;
		printf("Z= ");
     69a:	0f 93       	push	r16
     69c:	bd d1       	rcall	.+890    	; 0xa18 <printf>
		print16(&var);
     69e:	86 dd       	rcall	.-1268   	; 0x1ac <mpu6050_read_gyroZ>
		printf("  ");
     6a0:	29 85       	ldd	r18, Y+9	; 0x09
     6a2:	3a 85       	ldd	r19, Y+10	; 0x0a
     6a4:	82 1b       	sub	r24, r18
		
		var=accX;
     6a6:	93 0b       	sbc	r25, r19
     6a8:	9a 8f       	std	Y+26, r25	; 0x1a
     6aa:	89 8f       	std	Y+25, r24	; 0x19
     6ac:	df 92       	push	r13
     6ae:	cf 92       	push	r12
     6b0:	b3 d1       	rcall	.+870    	; 0xa18 <printf>
		accel_x=var;
		printf("accX= ");
     6b2:	ce 01       	movw	r24, r28
		print16(&var);
     6b4:	49 96       	adiw	r24, 0x19	; 25
     6b6:	39 df       	rcall	.-398    	; 0x52a <print16>
     6b8:	1f 93       	push	r17
		printf("  ");
     6ba:	0f 93       	push	r16
     6bc:	ad d1       	rcall	.+858    	; 0xa18 <printf>
     6be:	3d de       	rcall	.-902    	; 0x33a <mpu6050_read_accelX>
     6c0:	2d 85       	ldd	r18, Y+13	; 0x0d
		var=accY;
     6c2:	3e 85       	ldd	r19, Y+14	; 0x0e
     6c4:	82 1b       	sub	r24, r18
     6c6:	93 0b       	sbc	r25, r19
     6c8:	9a 8f       	std	Y+26, r25	; 0x1a
     6ca:	89 8f       	std	Y+25, r24	; 0x19
		accel_y=var;
		printf("accY= ");
     6cc:	ff 92       	push	r15
     6ce:	ef 92       	push	r14
     6d0:	a3 d1       	rcall	.+838    	; 0xa18 <printf>
		print16(&var);
     6d2:	ce 01       	movw	r24, r28
     6d4:	49 96       	adiw	r24, 0x19	; 25
     6d6:	29 df       	rcall	.-430    	; 0x52a <print16>
     6d8:	1f 93       	push	r17
		printf("  ");
     6da:	0f 93       	push	r16
     6dc:	9d d1       	rcall	.+826    	; 0xa18 <printf>
     6de:	3d de       	rcall	.-902    	; 0x35a <mpu6050_read_accelY>
     6e0:	29 89       	ldd	r18, Y+17	; 0x11
		var=accZ;
     6e2:	3a 89       	ldd	r19, Y+18	; 0x12
     6e4:	82 1b       	sub	r24, r18
     6e6:	93 0b       	sbc	r25, r19
     6e8:	9a 8f       	std	Y+26, r25	; 0x1a
     6ea:	89 8f       	std	Y+25, r24	; 0x19
     6ec:	7f 92       	push	r7
     6ee:	6f 92       	push	r6
     6f0:	93 d1       	rcall	.+806    	; 0xa18 <printf>
		accel_z=var;
		printf("accZ= ");
     6f2:	ce 01       	movw	r24, r28
     6f4:	49 96       	adiw	r24, 0x19	; 25
     6f6:	19 df       	rcall	.-462    	; 0x52a <print16>
     6f8:	1f 93       	push	r17
		print16(&var);
     6fa:	0f 93       	push	r16
     6fc:	8d d1       	rcall	.+794    	; 0xa18 <printf>
     6fe:	3d de       	rcall	.-902    	; 0x37a <mpu6050_read_accelZ>
     700:	2d 89       	ldd	r18, Y+21	; 0x15
		printf("  ");
     702:	3e 89       	ldd	r19, Y+22	; 0x16
     704:	82 1b       	sub	r24, r18
     706:	93 0b       	sbc	r25, r19
     708:	9a 8f       	std	Y+26, r25	; 0x1a
		printf("\n");
     70a:	89 8f       	std	Y+25, r24	; 0x19
     70c:	5f 92       	push	r5
     70e:	4f 92       	push	r4
     710:	83 d1       	rcall	.+774    	; 0xa18 <printf>
     712:	ce 01       	movw	r24, r28
     714:	49 96       	adiw	r24, 0x19	; 25
     716:	09 df       	rcall	.-494    	; 0x52a <print16>
     718:	1f 93       	push	r17
     71a:	0f 93       	push	r16
     71c:	7d d1       	rcall	.+762    	; 0xa18 <printf>
     71e:	8a e0       	ldi	r24, 0x0A	; 10
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	8d d1       	rcall	.+794    	; 0xa3e <putchar>
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	f8 94       	cli
     728:	de bf       	out	0x3e, r29	; 62
     72a:	0f be       	out	0x3f, r0	; 63
     72c:	cd bf       	out	0x3d, r28	; 61
     72e:	97 cf       	rjmp	.-210    	; 0x65e <main+0xea>

00000730 <i2c_init>:
     730:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     734:	8c e0       	ldi	r24, 0x0C	; 12
     736:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     73a:	08 95       	ret

0000073c <i2c_start>:
     73c:	94 ea       	ldi	r25, 0xA4	; 164
     73e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     742:	4f ef       	ldi	r20, 0xFF	; 255
     744:	50 e0       	ldi	r21, 0x00	; 0
     746:	60 e0       	ldi	r22, 0x00	; 0
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	ec eb       	ldi	r30, 0xBC	; 188
     74c:	f0 e0       	ldi	r31, 0x00	; 0
     74e:	90 81       	ld	r25, Z
     750:	99 23       	and	r25, r25
     752:	34 f0       	brlt	.+12     	; 0x760 <i2c_start+0x24>
     754:	41 50       	subi	r20, 0x01	; 1
     756:	51 09       	sbc	r21, r1
     758:	61 09       	sbc	r22, r1
     75a:	71 09       	sbc	r23, r1
     75c:	c0 f7       	brcc	.-16     	; 0x74e <i2c_start+0x12>
     75e:	04 c0       	rjmp	.+8      	; 0x768 <i2c_start+0x2c>
     760:	45 2b       	or	r20, r21
     762:	46 2b       	or	r20, r22
     764:	47 2b       	or	r20, r23
     766:	41 f1       	breq	.+80     	; 0x7b8 <i2c_start+0x7c>
     768:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     76c:	98 7f       	andi	r25, 0xF8	; 248
     76e:	98 30       	cpi	r25, 0x08	; 8
     770:	11 f0       	breq	.+4      	; 0x776 <i2c_start+0x3a>
     772:	90 31       	cpi	r25, 0x10	; 16
     774:	19 f5       	brne	.+70     	; 0x7bc <i2c_start+0x80>
     776:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     77a:	84 e8       	ldi	r24, 0x84	; 132
     77c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     780:	8f ef       	ldi	r24, 0xFF	; 255
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	a0 e0       	ldi	r26, 0x00	; 0
     786:	b0 e0       	ldi	r27, 0x00	; 0
     788:	ec eb       	ldi	r30, 0xBC	; 188
     78a:	f0 e0       	ldi	r31, 0x00	; 0
     78c:	20 81       	ld	r18, Z
     78e:	22 23       	and	r18, r18
     790:	2c f0       	brlt	.+10     	; 0x79c <i2c_start+0x60>
     792:	01 97       	sbiw	r24, 0x01	; 1
     794:	a1 09       	sbc	r26, r1
     796:	b1 09       	sbc	r27, r1
     798:	c8 f7       	brcc	.-14     	; 0x78c <i2c_start+0x50>
     79a:	04 c0       	rjmp	.+8      	; 0x7a4 <i2c_start+0x68>
     79c:	89 2b       	or	r24, r25
     79e:	8a 2b       	or	r24, r26
     7a0:	8b 2b       	or	r24, r27
     7a2:	71 f0       	breq	.+28     	; 0x7c0 <i2c_start+0x84>
     7a4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     7a8:	98 7f       	andi	r25, 0xF8	; 248
     7aa:	98 31       	cpi	r25, 0x18	; 24
     7ac:	59 f0       	breq	.+22     	; 0x7c4 <i2c_start+0x88>
     7ae:	81 e0       	ldi	r24, 0x01	; 1
     7b0:	90 34       	cpi	r25, 0x40	; 64
     7b2:	49 f4       	brne	.+18     	; 0x7c6 <i2c_start+0x8a>
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	08 95       	ret
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	08 95       	ret
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	08 95       	ret
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	08 95       	ret
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	08 95       	ret

000007c8 <i2c_stop>:
     7c8:	84 e9       	ldi	r24, 0x94	; 148
     7ca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	ec eb       	ldi	r30, 0xBC	; 188
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	20 81       	ld	r18, Z
     7d8:	24 ff       	sbrs	r18, 4
     7da:	05 c0       	rjmp	.+10     	; 0x7e6 <i2c_stop+0x1e>
     7dc:	01 96       	adiw	r24, 0x01	; 1
     7de:	81 15       	cp	r24, r1
     7e0:	21 e0       	ldi	r18, 0x01	; 1
     7e2:	92 07       	cpc	r25, r18
     7e4:	c1 f7       	brne	.-16     	; 0x7d6 <i2c_stop+0xe>
     7e6:	08 95       	ret

000007e8 <i2c_write>:
     7e8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     7ec:	84 e8       	ldi	r24, 0x84	; 132
     7ee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     7f2:	8f ef       	ldi	r24, 0xFF	; 255
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	a0 e0       	ldi	r26, 0x00	; 0
     7f8:	b0 e0       	ldi	r27, 0x00	; 0
     7fa:	ec eb       	ldi	r30, 0xBC	; 188
     7fc:	f0 e0       	ldi	r31, 0x00	; 0
     7fe:	20 81       	ld	r18, Z
     800:	22 23       	and	r18, r18
     802:	2c f0       	brlt	.+10     	; 0x80e <i2c_write+0x26>
     804:	01 97       	sbiw	r24, 0x01	; 1
     806:	a1 09       	sbc	r26, r1
     808:	b1 09       	sbc	r27, r1
     80a:	c8 f7       	brcc	.-14     	; 0x7fe <i2c_write+0x16>
     80c:	04 c0       	rjmp	.+8      	; 0x816 <i2c_write+0x2e>
     80e:	89 2b       	or	r24, r25
     810:	8a 2b       	or	r24, r26
     812:	8b 2b       	or	r24, r27
     814:	41 f0       	breq	.+16     	; 0x826 <i2c_write+0x3e>
     816:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     81a:	98 7f       	andi	r25, 0xF8	; 248
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	98 32       	cpi	r25, 0x28	; 40
     820:	19 f4       	brne	.+6      	; 0x828 <i2c_write+0x40>
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	08 95       	ret
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	08 95       	ret

0000082a <i2c_readNak>:
     82a:	84 e8       	ldi	r24, 0x84	; 132
     82c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	a0 e0       	ldi	r26, 0x00	; 0
     836:	b0 e0       	ldi	r27, 0x00	; 0
     838:	ec eb       	ldi	r30, 0xBC	; 188
     83a:	f0 e0       	ldi	r31, 0x00	; 0
     83c:	20 81       	ld	r18, Z
     83e:	22 23       	and	r18, r18
     840:	2c f0       	brlt	.+10     	; 0x84c <i2c_readNak+0x22>
     842:	01 97       	sbiw	r24, 0x01	; 1
     844:	a1 09       	sbc	r26, r1
     846:	b1 09       	sbc	r27, r1
     848:	c8 f7       	brcc	.-14     	; 0x83c <i2c_readNak+0x12>
     84a:	04 c0       	rjmp	.+8      	; 0x854 <i2c_readNak+0x2a>
     84c:	89 2b       	or	r24, r25
     84e:	8a 2b       	or	r24, r26
     850:	8b 2b       	or	r24, r27
     852:	19 f0       	breq	.+6      	; 0x85a <i2c_readNak+0x30>
     854:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     858:	08 95       	ret
     85a:	80 e0       	ldi	r24, 0x00	; 0
     85c:	08 95       	ret

0000085e <USART_Init>:
     85e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     862:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     866:	88 e0       	ldi	r24, 0x08	; 8
     868:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     86c:	8e e0       	ldi	r24, 0x0E	; 14
     86e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     872:	08 95       	ret

00000874 <__divmodhi4>:
     874:	97 fb       	bst	r25, 7
     876:	07 2e       	mov	r0, r23
     878:	16 f4       	brtc	.+4      	; 0x87e <__divmodhi4+0xa>
     87a:	00 94       	com	r0
     87c:	06 d0       	rcall	.+12     	; 0x88a <__divmodhi4_neg1>
     87e:	77 fd       	sbrc	r23, 7
     880:	08 d0       	rcall	.+16     	; 0x892 <__divmodhi4_neg2>
     882:	27 d0       	rcall	.+78     	; 0x8d2 <__udivmodhi4>
     884:	07 fc       	sbrc	r0, 7
     886:	05 d0       	rcall	.+10     	; 0x892 <__divmodhi4_neg2>
     888:	3e f4       	brtc	.+14     	; 0x898 <__divmodhi4_exit>

0000088a <__divmodhi4_neg1>:
     88a:	90 95       	com	r25
     88c:	81 95       	neg	r24
     88e:	9f 4f       	sbci	r25, 0xFF	; 255
     890:	08 95       	ret

00000892 <__divmodhi4_neg2>:
     892:	70 95       	com	r23
     894:	61 95       	neg	r22
     896:	7f 4f       	sbci	r23, 0xFF	; 255

00000898 <__divmodhi4_exit>:
     898:	08 95       	ret

0000089a <__divmodsi4>:
     89a:	05 2e       	mov	r0, r21
     89c:	97 fb       	bst	r25, 7
     89e:	16 f4       	brtc	.+4      	; 0x8a4 <__divmodsi4+0xa>
     8a0:	00 94       	com	r0
     8a2:	0f d0       	rcall	.+30     	; 0x8c2 <__negsi2>
     8a4:	57 fd       	sbrc	r21, 7
     8a6:	05 d0       	rcall	.+10     	; 0x8b2 <__divmodsi4_neg2>
     8a8:	28 d0       	rcall	.+80     	; 0x8fa <__udivmodsi4>
     8aa:	07 fc       	sbrc	r0, 7
     8ac:	02 d0       	rcall	.+4      	; 0x8b2 <__divmodsi4_neg2>
     8ae:	46 f4       	brtc	.+16     	; 0x8c0 <__divmodsi4_exit>
     8b0:	08 c0       	rjmp	.+16     	; 0x8c2 <__negsi2>

000008b2 <__divmodsi4_neg2>:
     8b2:	50 95       	com	r21
     8b4:	40 95       	com	r20
     8b6:	30 95       	com	r19
     8b8:	21 95       	neg	r18
     8ba:	3f 4f       	sbci	r19, 0xFF	; 255
     8bc:	4f 4f       	sbci	r20, 0xFF	; 255
     8be:	5f 4f       	sbci	r21, 0xFF	; 255

000008c0 <__divmodsi4_exit>:
     8c0:	08 95       	ret

000008c2 <__negsi2>:
     8c2:	90 95       	com	r25
     8c4:	80 95       	com	r24
     8c6:	70 95       	com	r23
     8c8:	61 95       	neg	r22
     8ca:	7f 4f       	sbci	r23, 0xFF	; 255
     8cc:	8f 4f       	sbci	r24, 0xFF	; 255
     8ce:	9f 4f       	sbci	r25, 0xFF	; 255
     8d0:	08 95       	ret

000008d2 <__udivmodhi4>:
     8d2:	aa 1b       	sub	r26, r26
     8d4:	bb 1b       	sub	r27, r27
     8d6:	51 e1       	ldi	r21, 0x11	; 17
     8d8:	07 c0       	rjmp	.+14     	; 0x8e8 <__udivmodhi4_ep>

000008da <__udivmodhi4_loop>:
     8da:	aa 1f       	adc	r26, r26
     8dc:	bb 1f       	adc	r27, r27
     8de:	a6 17       	cp	r26, r22
     8e0:	b7 07       	cpc	r27, r23
     8e2:	10 f0       	brcs	.+4      	; 0x8e8 <__udivmodhi4_ep>
     8e4:	a6 1b       	sub	r26, r22
     8e6:	b7 0b       	sbc	r27, r23

000008e8 <__udivmodhi4_ep>:
     8e8:	88 1f       	adc	r24, r24
     8ea:	99 1f       	adc	r25, r25
     8ec:	5a 95       	dec	r21
     8ee:	a9 f7       	brne	.-22     	; 0x8da <__udivmodhi4_loop>
     8f0:	80 95       	com	r24
     8f2:	90 95       	com	r25
     8f4:	bc 01       	movw	r22, r24
     8f6:	cd 01       	movw	r24, r26
     8f8:	08 95       	ret

000008fa <__udivmodsi4>:
     8fa:	a1 e2       	ldi	r26, 0x21	; 33
     8fc:	1a 2e       	mov	r1, r26
     8fe:	aa 1b       	sub	r26, r26
     900:	bb 1b       	sub	r27, r27
     902:	fd 01       	movw	r30, r26
     904:	0d c0       	rjmp	.+26     	; 0x920 <__udivmodsi4_ep>

00000906 <__udivmodsi4_loop>:
     906:	aa 1f       	adc	r26, r26
     908:	bb 1f       	adc	r27, r27
     90a:	ee 1f       	adc	r30, r30
     90c:	ff 1f       	adc	r31, r31
     90e:	a2 17       	cp	r26, r18
     910:	b3 07       	cpc	r27, r19
     912:	e4 07       	cpc	r30, r20
     914:	f5 07       	cpc	r31, r21
     916:	20 f0       	brcs	.+8      	; 0x920 <__udivmodsi4_ep>
     918:	a2 1b       	sub	r26, r18
     91a:	b3 0b       	sbc	r27, r19
     91c:	e4 0b       	sbc	r30, r20
     91e:	f5 0b       	sbc	r31, r21

00000920 <__udivmodsi4_ep>:
     920:	66 1f       	adc	r22, r22
     922:	77 1f       	adc	r23, r23
     924:	88 1f       	adc	r24, r24
     926:	99 1f       	adc	r25, r25
     928:	1a 94       	dec	r1
     92a:	69 f7       	brne	.-38     	; 0x906 <__udivmodsi4_loop>
     92c:	60 95       	com	r22
     92e:	70 95       	com	r23
     930:	80 95       	com	r24
     932:	90 95       	com	r25
     934:	9b 01       	movw	r18, r22
     936:	ac 01       	movw	r20, r24
     938:	bd 01       	movw	r22, r26
     93a:	cf 01       	movw	r24, r30
     93c:	08 95       	ret

0000093e <__itoa_ncheck>:
     93e:	bb 27       	eor	r27, r27
     940:	4a 30       	cpi	r20, 0x0A	; 10
     942:	31 f4       	brne	.+12     	; 0x950 <__itoa_ncheck+0x12>
     944:	99 23       	and	r25, r25
     946:	22 f4       	brpl	.+8      	; 0x950 <__itoa_ncheck+0x12>
     948:	bd e2       	ldi	r27, 0x2D	; 45
     94a:	90 95       	com	r25
     94c:	81 95       	neg	r24
     94e:	9f 4f       	sbci	r25, 0xFF	; 255
     950:	01 c0       	rjmp	.+2      	; 0x954 <__utoa_common>

00000952 <__utoa_ncheck>:
     952:	bb 27       	eor	r27, r27

00000954 <__utoa_common>:
     954:	fb 01       	movw	r30, r22
     956:	55 27       	eor	r21, r21
     958:	aa 27       	eor	r26, r26
     95a:	88 0f       	add	r24, r24
     95c:	99 1f       	adc	r25, r25
     95e:	aa 1f       	adc	r26, r26
     960:	a4 17       	cp	r26, r20
     962:	10 f0       	brcs	.+4      	; 0x968 <__utoa_common+0x14>
     964:	a4 1b       	sub	r26, r20
     966:	83 95       	inc	r24
     968:	50 51       	subi	r21, 0x10	; 16
     96a:	b9 f7       	brne	.-18     	; 0x95a <__utoa_common+0x6>
     96c:	a0 5d       	subi	r26, 0xD0	; 208
     96e:	aa 33       	cpi	r26, 0x3A	; 58
     970:	08 f0       	brcs	.+2      	; 0x974 <__utoa_common+0x20>
     972:	a9 5d       	subi	r26, 0xD9	; 217
     974:	a1 93       	st	Z+, r26
     976:	00 97       	sbiw	r24, 0x00	; 0
     978:	79 f7       	brne	.-34     	; 0x958 <__utoa_common+0x4>
     97a:	b1 11       	cpse	r27, r1
     97c:	b1 93       	st	Z+, r27
     97e:	11 92       	st	Z+, r1
     980:	cb 01       	movw	r24, r22
     982:	e7 c3       	rjmp	.+1998   	; 0x1152 <strrev>

00000984 <fdevopen>:
     984:	0f 93       	push	r16
     986:	1f 93       	push	r17
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	00 97       	sbiw	r24, 0x00	; 0
     98e:	31 f4       	brne	.+12     	; 0x99c <fdevopen+0x18>
     990:	61 15       	cp	r22, r1
     992:	71 05       	cpc	r23, r1
     994:	19 f4       	brne	.+6      	; 0x99c <fdevopen+0x18>
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	39 c0       	rjmp	.+114    	; 0xa0e <fdevopen+0x8a>
     99c:	8b 01       	movw	r16, r22
     99e:	ec 01       	movw	r28, r24
     9a0:	6e e0       	ldi	r22, 0x0E	; 14
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	81 e0       	ldi	r24, 0x01	; 1
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	7c d2       	rcall	.+1272   	; 0xea2 <calloc>
     9aa:	fc 01       	movw	r30, r24
     9ac:	89 2b       	or	r24, r25
     9ae:	99 f3       	breq	.-26     	; 0x996 <fdevopen+0x12>
     9b0:	80 e8       	ldi	r24, 0x80	; 128
     9b2:	83 83       	std	Z+3, r24	; 0x03
     9b4:	01 15       	cp	r16, r1
     9b6:	11 05       	cpc	r17, r1
     9b8:	71 f0       	breq	.+28     	; 0x9d6 <fdevopen+0x52>
     9ba:	13 87       	std	Z+11, r17	; 0x0b
     9bc:	02 87       	std	Z+10, r16	; 0x0a
     9be:	81 e8       	ldi	r24, 0x81	; 129
     9c0:	83 83       	std	Z+3, r24	; 0x03
     9c2:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <__iob>
     9c6:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <__iob+0x1>
     9ca:	89 2b       	or	r24, r25
     9cc:	21 f4       	brne	.+8      	; 0x9d6 <fdevopen+0x52>
     9ce:	f0 93 69 02 	sts	0x0269, r31	; 0x800269 <__iob+0x1>
     9d2:	e0 93 68 02 	sts	0x0268, r30	; 0x800268 <__iob>
     9d6:	20 97       	sbiw	r28, 0x00	; 0
     9d8:	c9 f0       	breq	.+50     	; 0xa0c <fdevopen+0x88>
     9da:	d1 87       	std	Z+9, r29	; 0x09
     9dc:	c0 87       	std	Z+8, r28	; 0x08
     9de:	83 81       	ldd	r24, Z+3	; 0x03
     9e0:	82 60       	ori	r24, 0x02	; 2
     9e2:	83 83       	std	Z+3, r24	; 0x03
     9e4:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <__iob+0x2>
     9e8:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <__iob+0x3>
     9ec:	89 2b       	or	r24, r25
     9ee:	71 f4       	brne	.+28     	; 0xa0c <fdevopen+0x88>
     9f0:	f0 93 6b 02 	sts	0x026B, r31	; 0x80026b <__iob+0x3>
     9f4:	e0 93 6a 02 	sts	0x026A, r30	; 0x80026a <__iob+0x2>
     9f8:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <__iob+0x4>
     9fc:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <__iob+0x5>
     a00:	89 2b       	or	r24, r25
     a02:	21 f4       	brne	.+8      	; 0xa0c <fdevopen+0x88>
     a04:	f0 93 6d 02 	sts	0x026D, r31	; 0x80026d <__iob+0x5>
     a08:	e0 93 6c 02 	sts	0x026C, r30	; 0x80026c <__iob+0x4>
     a0c:	cf 01       	movw	r24, r30
     a0e:	df 91       	pop	r29
     a10:	cf 91       	pop	r28
     a12:	1f 91       	pop	r17
     a14:	0f 91       	pop	r16
     a16:	08 95       	ret

00000a18 <printf>:
     a18:	cf 93       	push	r28
     a1a:	df 93       	push	r29
     a1c:	cd b7       	in	r28, 0x3d	; 61
     a1e:	de b7       	in	r29, 0x3e	; 62
     a20:	ae 01       	movw	r20, r28
     a22:	4a 5f       	subi	r20, 0xFA	; 250
     a24:	5f 4f       	sbci	r21, 0xFF	; 255
     a26:	fa 01       	movw	r30, r20
     a28:	61 91       	ld	r22, Z+
     a2a:	71 91       	ld	r23, Z+
     a2c:	af 01       	movw	r20, r30
     a2e:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <__iob+0x2>
     a32:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <__iob+0x3>
     a36:	38 d0       	rcall	.+112    	; 0xaa8 <vfprintf>
     a38:	df 91       	pop	r29
     a3a:	cf 91       	pop	r28
     a3c:	08 95       	ret

00000a3e <putchar>:
     a3e:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <__iob+0x2>
     a42:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <__iob+0x3>
     a46:	95 c3       	rjmp	.+1834   	; 0x1172 <fputc>

00000a48 <puts>:
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	cf 93       	push	r28
     a4e:	df 93       	push	r29
     a50:	e0 91 6a 02 	lds	r30, 0x026A	; 0x80026a <__iob+0x2>
     a54:	f0 91 6b 02 	lds	r31, 0x026B	; 0x80026b <__iob+0x3>
     a58:	23 81       	ldd	r18, Z+3	; 0x03
     a5a:	21 ff       	sbrs	r18, 1
     a5c:	1b c0       	rjmp	.+54     	; 0xa94 <puts+0x4c>
     a5e:	8c 01       	movw	r16, r24
     a60:	d0 e0       	ldi	r29, 0x00	; 0
     a62:	c0 e0       	ldi	r28, 0x00	; 0
     a64:	f8 01       	movw	r30, r16
     a66:	81 91       	ld	r24, Z+
     a68:	8f 01       	movw	r16, r30
     a6a:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <__iob+0x2>
     a6e:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <__iob+0x3>
     a72:	db 01       	movw	r26, r22
     a74:	18 96       	adiw	r26, 0x08	; 8
     a76:	ed 91       	ld	r30, X+
     a78:	fc 91       	ld	r31, X
     a7a:	19 97       	sbiw	r26, 0x09	; 9
     a7c:	88 23       	and	r24, r24
     a7e:	31 f0       	breq	.+12     	; 0xa8c <puts+0x44>
     a80:	19 95       	eicall
     a82:	89 2b       	or	r24, r25
     a84:	79 f3       	breq	.-34     	; 0xa64 <puts+0x1c>
     a86:	df ef       	ldi	r29, 0xFF	; 255
     a88:	cf ef       	ldi	r28, 0xFF	; 255
     a8a:	ec cf       	rjmp	.-40     	; 0xa64 <puts+0x1c>
     a8c:	8a e0       	ldi	r24, 0x0A	; 10
     a8e:	19 95       	eicall
     a90:	89 2b       	or	r24, r25
     a92:	19 f0       	breq	.+6      	; 0xa9a <puts+0x52>
     a94:	8f ef       	ldi	r24, 0xFF	; 255
     a96:	9f ef       	ldi	r25, 0xFF	; 255
     a98:	02 c0       	rjmp	.+4      	; 0xa9e <puts+0x56>
     a9a:	8d 2f       	mov	r24, r29
     a9c:	9c 2f       	mov	r25, r28
     a9e:	df 91       	pop	r29
     aa0:	cf 91       	pop	r28
     aa2:	1f 91       	pop	r17
     aa4:	0f 91       	pop	r16
     aa6:	08 95       	ret

00000aa8 <vfprintf>:
     aa8:	2f 92       	push	r2
     aaa:	3f 92       	push	r3
     aac:	4f 92       	push	r4
     aae:	5f 92       	push	r5
     ab0:	6f 92       	push	r6
     ab2:	7f 92       	push	r7
     ab4:	8f 92       	push	r8
     ab6:	9f 92       	push	r9
     ab8:	af 92       	push	r10
     aba:	bf 92       	push	r11
     abc:	cf 92       	push	r12
     abe:	df 92       	push	r13
     ac0:	ef 92       	push	r14
     ac2:	ff 92       	push	r15
     ac4:	0f 93       	push	r16
     ac6:	1f 93       	push	r17
     ac8:	cf 93       	push	r28
     aca:	df 93       	push	r29
     acc:	cd b7       	in	r28, 0x3d	; 61
     ace:	de b7       	in	r29, 0x3e	; 62
     ad0:	2b 97       	sbiw	r28, 0x0b	; 11
     ad2:	0f b6       	in	r0, 0x3f	; 63
     ad4:	f8 94       	cli
     ad6:	de bf       	out	0x3e, r29	; 62
     ad8:	0f be       	out	0x3f, r0	; 63
     ada:	cd bf       	out	0x3d, r28	; 61
     adc:	6c 01       	movw	r12, r24
     ade:	7b 01       	movw	r14, r22
     ae0:	8a 01       	movw	r16, r20
     ae2:	fc 01       	movw	r30, r24
     ae4:	17 82       	std	Z+7, r1	; 0x07
     ae6:	16 82       	std	Z+6, r1	; 0x06
     ae8:	83 81       	ldd	r24, Z+3	; 0x03
     aea:	81 ff       	sbrs	r24, 1
     aec:	bf c1       	rjmp	.+894    	; 0xe6c <vfprintf+0x3c4>
     aee:	ce 01       	movw	r24, r28
     af0:	01 96       	adiw	r24, 0x01	; 1
     af2:	3c 01       	movw	r6, r24
     af4:	f6 01       	movw	r30, r12
     af6:	93 81       	ldd	r25, Z+3	; 0x03
     af8:	f7 01       	movw	r30, r14
     afa:	93 fd       	sbrc	r25, 3
     afc:	85 91       	lpm	r24, Z+
     afe:	93 ff       	sbrs	r25, 3
     b00:	81 91       	ld	r24, Z+
     b02:	7f 01       	movw	r14, r30
     b04:	88 23       	and	r24, r24
     b06:	09 f4       	brne	.+2      	; 0xb0a <vfprintf+0x62>
     b08:	ad c1       	rjmp	.+858    	; 0xe64 <vfprintf+0x3bc>
     b0a:	85 32       	cpi	r24, 0x25	; 37
     b0c:	39 f4       	brne	.+14     	; 0xb1c <vfprintf+0x74>
     b0e:	93 fd       	sbrc	r25, 3
     b10:	85 91       	lpm	r24, Z+
     b12:	93 ff       	sbrs	r25, 3
     b14:	81 91       	ld	r24, Z+
     b16:	7f 01       	movw	r14, r30
     b18:	85 32       	cpi	r24, 0x25	; 37
     b1a:	21 f4       	brne	.+8      	; 0xb24 <vfprintf+0x7c>
     b1c:	b6 01       	movw	r22, r12
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	28 d3       	rcall	.+1616   	; 0x1172 <fputc>
     b22:	e8 cf       	rjmp	.-48     	; 0xaf4 <vfprintf+0x4c>
     b24:	91 2c       	mov	r9, r1
     b26:	21 2c       	mov	r2, r1
     b28:	31 2c       	mov	r3, r1
     b2a:	ff e1       	ldi	r31, 0x1F	; 31
     b2c:	f3 15       	cp	r31, r3
     b2e:	d8 f0       	brcs	.+54     	; 0xb66 <vfprintf+0xbe>
     b30:	8b 32       	cpi	r24, 0x2B	; 43
     b32:	79 f0       	breq	.+30     	; 0xb52 <vfprintf+0xaa>
     b34:	38 f4       	brcc	.+14     	; 0xb44 <vfprintf+0x9c>
     b36:	80 32       	cpi	r24, 0x20	; 32
     b38:	79 f0       	breq	.+30     	; 0xb58 <vfprintf+0xb0>
     b3a:	83 32       	cpi	r24, 0x23	; 35
     b3c:	a1 f4       	brne	.+40     	; 0xb66 <vfprintf+0xbe>
     b3e:	23 2d       	mov	r18, r3
     b40:	20 61       	ori	r18, 0x10	; 16
     b42:	1d c0       	rjmp	.+58     	; 0xb7e <vfprintf+0xd6>
     b44:	8d 32       	cpi	r24, 0x2D	; 45
     b46:	61 f0       	breq	.+24     	; 0xb60 <vfprintf+0xb8>
     b48:	80 33       	cpi	r24, 0x30	; 48
     b4a:	69 f4       	brne	.+26     	; 0xb66 <vfprintf+0xbe>
     b4c:	23 2d       	mov	r18, r3
     b4e:	21 60       	ori	r18, 0x01	; 1
     b50:	16 c0       	rjmp	.+44     	; 0xb7e <vfprintf+0xd6>
     b52:	83 2d       	mov	r24, r3
     b54:	82 60       	ori	r24, 0x02	; 2
     b56:	38 2e       	mov	r3, r24
     b58:	e3 2d       	mov	r30, r3
     b5a:	e4 60       	ori	r30, 0x04	; 4
     b5c:	3e 2e       	mov	r3, r30
     b5e:	2a c0       	rjmp	.+84     	; 0xbb4 <vfprintf+0x10c>
     b60:	f3 2d       	mov	r31, r3
     b62:	f8 60       	ori	r31, 0x08	; 8
     b64:	1d c0       	rjmp	.+58     	; 0xba0 <vfprintf+0xf8>
     b66:	37 fc       	sbrc	r3, 7
     b68:	2d c0       	rjmp	.+90     	; 0xbc4 <vfprintf+0x11c>
     b6a:	20 ed       	ldi	r18, 0xD0	; 208
     b6c:	28 0f       	add	r18, r24
     b6e:	2a 30       	cpi	r18, 0x0A	; 10
     b70:	40 f0       	brcs	.+16     	; 0xb82 <vfprintf+0xda>
     b72:	8e 32       	cpi	r24, 0x2E	; 46
     b74:	b9 f4       	brne	.+46     	; 0xba4 <vfprintf+0xfc>
     b76:	36 fc       	sbrc	r3, 6
     b78:	75 c1       	rjmp	.+746    	; 0xe64 <vfprintf+0x3bc>
     b7a:	23 2d       	mov	r18, r3
     b7c:	20 64       	ori	r18, 0x40	; 64
     b7e:	32 2e       	mov	r3, r18
     b80:	19 c0       	rjmp	.+50     	; 0xbb4 <vfprintf+0x10c>
     b82:	36 fe       	sbrs	r3, 6
     b84:	06 c0       	rjmp	.+12     	; 0xb92 <vfprintf+0xea>
     b86:	8a e0       	ldi	r24, 0x0A	; 10
     b88:	98 9e       	mul	r9, r24
     b8a:	20 0d       	add	r18, r0
     b8c:	11 24       	eor	r1, r1
     b8e:	92 2e       	mov	r9, r18
     b90:	11 c0       	rjmp	.+34     	; 0xbb4 <vfprintf+0x10c>
     b92:	ea e0       	ldi	r30, 0x0A	; 10
     b94:	2e 9e       	mul	r2, r30
     b96:	20 0d       	add	r18, r0
     b98:	11 24       	eor	r1, r1
     b9a:	22 2e       	mov	r2, r18
     b9c:	f3 2d       	mov	r31, r3
     b9e:	f0 62       	ori	r31, 0x20	; 32
     ba0:	3f 2e       	mov	r3, r31
     ba2:	08 c0       	rjmp	.+16     	; 0xbb4 <vfprintf+0x10c>
     ba4:	8c 36       	cpi	r24, 0x6C	; 108
     ba6:	21 f4       	brne	.+8      	; 0xbb0 <vfprintf+0x108>
     ba8:	83 2d       	mov	r24, r3
     baa:	80 68       	ori	r24, 0x80	; 128
     bac:	38 2e       	mov	r3, r24
     bae:	02 c0       	rjmp	.+4      	; 0xbb4 <vfprintf+0x10c>
     bb0:	88 36       	cpi	r24, 0x68	; 104
     bb2:	41 f4       	brne	.+16     	; 0xbc4 <vfprintf+0x11c>
     bb4:	f7 01       	movw	r30, r14
     bb6:	93 fd       	sbrc	r25, 3
     bb8:	85 91       	lpm	r24, Z+
     bba:	93 ff       	sbrs	r25, 3
     bbc:	81 91       	ld	r24, Z+
     bbe:	7f 01       	movw	r14, r30
     bc0:	81 11       	cpse	r24, r1
     bc2:	b3 cf       	rjmp	.-154    	; 0xb2a <vfprintf+0x82>
     bc4:	98 2f       	mov	r25, r24
     bc6:	9f 7d       	andi	r25, 0xDF	; 223
     bc8:	95 54       	subi	r25, 0x45	; 69
     bca:	93 30       	cpi	r25, 0x03	; 3
     bcc:	28 f4       	brcc	.+10     	; 0xbd8 <vfprintf+0x130>
     bce:	0c 5f       	subi	r16, 0xFC	; 252
     bd0:	1f 4f       	sbci	r17, 0xFF	; 255
     bd2:	9f e3       	ldi	r25, 0x3F	; 63
     bd4:	99 83       	std	Y+1, r25	; 0x01
     bd6:	0d c0       	rjmp	.+26     	; 0xbf2 <vfprintf+0x14a>
     bd8:	83 36       	cpi	r24, 0x63	; 99
     bda:	31 f0       	breq	.+12     	; 0xbe8 <vfprintf+0x140>
     bdc:	83 37       	cpi	r24, 0x73	; 115
     bde:	71 f0       	breq	.+28     	; 0xbfc <vfprintf+0x154>
     be0:	83 35       	cpi	r24, 0x53	; 83
     be2:	09 f0       	breq	.+2      	; 0xbe6 <vfprintf+0x13e>
     be4:	55 c0       	rjmp	.+170    	; 0xc90 <vfprintf+0x1e8>
     be6:	20 c0       	rjmp	.+64     	; 0xc28 <vfprintf+0x180>
     be8:	f8 01       	movw	r30, r16
     bea:	80 81       	ld	r24, Z
     bec:	89 83       	std	Y+1, r24	; 0x01
     bee:	0e 5f       	subi	r16, 0xFE	; 254
     bf0:	1f 4f       	sbci	r17, 0xFF	; 255
     bf2:	88 24       	eor	r8, r8
     bf4:	83 94       	inc	r8
     bf6:	91 2c       	mov	r9, r1
     bf8:	53 01       	movw	r10, r6
     bfa:	12 c0       	rjmp	.+36     	; 0xc20 <vfprintf+0x178>
     bfc:	28 01       	movw	r4, r16
     bfe:	f2 e0       	ldi	r31, 0x02	; 2
     c00:	4f 0e       	add	r4, r31
     c02:	51 1c       	adc	r5, r1
     c04:	f8 01       	movw	r30, r16
     c06:	a0 80       	ld	r10, Z
     c08:	b1 80       	ldd	r11, Z+1	; 0x01
     c0a:	36 fe       	sbrs	r3, 6
     c0c:	03 c0       	rjmp	.+6      	; 0xc14 <vfprintf+0x16c>
     c0e:	69 2d       	mov	r22, r9
     c10:	70 e0       	ldi	r23, 0x00	; 0
     c12:	02 c0       	rjmp	.+4      	; 0xc18 <vfprintf+0x170>
     c14:	6f ef       	ldi	r22, 0xFF	; 255
     c16:	7f ef       	ldi	r23, 0xFF	; 255
     c18:	c5 01       	movw	r24, r10
     c1a:	90 d2       	rcall	.+1312   	; 0x113c <strnlen>
     c1c:	4c 01       	movw	r8, r24
     c1e:	82 01       	movw	r16, r4
     c20:	f3 2d       	mov	r31, r3
     c22:	ff 77       	andi	r31, 0x7F	; 127
     c24:	3f 2e       	mov	r3, r31
     c26:	15 c0       	rjmp	.+42     	; 0xc52 <vfprintf+0x1aa>
     c28:	28 01       	movw	r4, r16
     c2a:	22 e0       	ldi	r18, 0x02	; 2
     c2c:	42 0e       	add	r4, r18
     c2e:	51 1c       	adc	r5, r1
     c30:	f8 01       	movw	r30, r16
     c32:	a0 80       	ld	r10, Z
     c34:	b1 80       	ldd	r11, Z+1	; 0x01
     c36:	36 fe       	sbrs	r3, 6
     c38:	03 c0       	rjmp	.+6      	; 0xc40 <vfprintf+0x198>
     c3a:	69 2d       	mov	r22, r9
     c3c:	70 e0       	ldi	r23, 0x00	; 0
     c3e:	02 c0       	rjmp	.+4      	; 0xc44 <vfprintf+0x19c>
     c40:	6f ef       	ldi	r22, 0xFF	; 255
     c42:	7f ef       	ldi	r23, 0xFF	; 255
     c44:	c5 01       	movw	r24, r10
     c46:	68 d2       	rcall	.+1232   	; 0x1118 <strnlen_P>
     c48:	4c 01       	movw	r8, r24
     c4a:	f3 2d       	mov	r31, r3
     c4c:	f0 68       	ori	r31, 0x80	; 128
     c4e:	3f 2e       	mov	r3, r31
     c50:	82 01       	movw	r16, r4
     c52:	33 fc       	sbrc	r3, 3
     c54:	19 c0       	rjmp	.+50     	; 0xc88 <vfprintf+0x1e0>
     c56:	82 2d       	mov	r24, r2
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	88 16       	cp	r8, r24
     c5c:	99 06       	cpc	r9, r25
     c5e:	a0 f4       	brcc	.+40     	; 0xc88 <vfprintf+0x1e0>
     c60:	b6 01       	movw	r22, r12
     c62:	80 e2       	ldi	r24, 0x20	; 32
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	85 d2       	rcall	.+1290   	; 0x1172 <fputc>
     c68:	2a 94       	dec	r2
     c6a:	f5 cf       	rjmp	.-22     	; 0xc56 <vfprintf+0x1ae>
     c6c:	f5 01       	movw	r30, r10
     c6e:	37 fc       	sbrc	r3, 7
     c70:	85 91       	lpm	r24, Z+
     c72:	37 fe       	sbrs	r3, 7
     c74:	81 91       	ld	r24, Z+
     c76:	5f 01       	movw	r10, r30
     c78:	b6 01       	movw	r22, r12
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	7a d2       	rcall	.+1268   	; 0x1172 <fputc>
     c7e:	21 10       	cpse	r2, r1
     c80:	2a 94       	dec	r2
     c82:	21 e0       	ldi	r18, 0x01	; 1
     c84:	82 1a       	sub	r8, r18
     c86:	91 08       	sbc	r9, r1
     c88:	81 14       	cp	r8, r1
     c8a:	91 04       	cpc	r9, r1
     c8c:	79 f7       	brne	.-34     	; 0xc6c <vfprintf+0x1c4>
     c8e:	e1 c0       	rjmp	.+450    	; 0xe52 <vfprintf+0x3aa>
     c90:	84 36       	cpi	r24, 0x64	; 100
     c92:	11 f0       	breq	.+4      	; 0xc98 <vfprintf+0x1f0>
     c94:	89 36       	cpi	r24, 0x69	; 105
     c96:	39 f5       	brne	.+78     	; 0xce6 <vfprintf+0x23e>
     c98:	f8 01       	movw	r30, r16
     c9a:	37 fe       	sbrs	r3, 7
     c9c:	07 c0       	rjmp	.+14     	; 0xcac <vfprintf+0x204>
     c9e:	60 81       	ld	r22, Z
     ca0:	71 81       	ldd	r23, Z+1	; 0x01
     ca2:	82 81       	ldd	r24, Z+2	; 0x02
     ca4:	93 81       	ldd	r25, Z+3	; 0x03
     ca6:	0c 5f       	subi	r16, 0xFC	; 252
     ca8:	1f 4f       	sbci	r17, 0xFF	; 255
     caa:	08 c0       	rjmp	.+16     	; 0xcbc <vfprintf+0x214>
     cac:	60 81       	ld	r22, Z
     cae:	71 81       	ldd	r23, Z+1	; 0x01
     cb0:	07 2e       	mov	r0, r23
     cb2:	00 0c       	add	r0, r0
     cb4:	88 0b       	sbc	r24, r24
     cb6:	99 0b       	sbc	r25, r25
     cb8:	0e 5f       	subi	r16, 0xFE	; 254
     cba:	1f 4f       	sbci	r17, 0xFF	; 255
     cbc:	f3 2d       	mov	r31, r3
     cbe:	ff 76       	andi	r31, 0x6F	; 111
     cc0:	3f 2e       	mov	r3, r31
     cc2:	97 ff       	sbrs	r25, 7
     cc4:	09 c0       	rjmp	.+18     	; 0xcd8 <vfprintf+0x230>
     cc6:	90 95       	com	r25
     cc8:	80 95       	com	r24
     cca:	70 95       	com	r23
     ccc:	61 95       	neg	r22
     cce:	7f 4f       	sbci	r23, 0xFF	; 255
     cd0:	8f 4f       	sbci	r24, 0xFF	; 255
     cd2:	9f 4f       	sbci	r25, 0xFF	; 255
     cd4:	f0 68       	ori	r31, 0x80	; 128
     cd6:	3f 2e       	mov	r3, r31
     cd8:	2a e0       	ldi	r18, 0x0A	; 10
     cda:	30 e0       	ldi	r19, 0x00	; 0
     cdc:	a3 01       	movw	r20, r6
     cde:	85 d2       	rcall	.+1290   	; 0x11ea <__ultoa_invert>
     ce0:	88 2e       	mov	r8, r24
     ce2:	86 18       	sub	r8, r6
     ce4:	44 c0       	rjmp	.+136    	; 0xd6e <vfprintf+0x2c6>
     ce6:	85 37       	cpi	r24, 0x75	; 117
     ce8:	31 f4       	brne	.+12     	; 0xcf6 <vfprintf+0x24e>
     cea:	23 2d       	mov	r18, r3
     cec:	2f 7e       	andi	r18, 0xEF	; 239
     cee:	b2 2e       	mov	r11, r18
     cf0:	2a e0       	ldi	r18, 0x0A	; 10
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	25 c0       	rjmp	.+74     	; 0xd40 <vfprintf+0x298>
     cf6:	93 2d       	mov	r25, r3
     cf8:	99 7f       	andi	r25, 0xF9	; 249
     cfa:	b9 2e       	mov	r11, r25
     cfc:	8f 36       	cpi	r24, 0x6F	; 111
     cfe:	c1 f0       	breq	.+48     	; 0xd30 <vfprintf+0x288>
     d00:	18 f4       	brcc	.+6      	; 0xd08 <vfprintf+0x260>
     d02:	88 35       	cpi	r24, 0x58	; 88
     d04:	79 f0       	breq	.+30     	; 0xd24 <vfprintf+0x27c>
     d06:	ae c0       	rjmp	.+348    	; 0xe64 <vfprintf+0x3bc>
     d08:	80 37       	cpi	r24, 0x70	; 112
     d0a:	19 f0       	breq	.+6      	; 0xd12 <vfprintf+0x26a>
     d0c:	88 37       	cpi	r24, 0x78	; 120
     d0e:	21 f0       	breq	.+8      	; 0xd18 <vfprintf+0x270>
     d10:	a9 c0       	rjmp	.+338    	; 0xe64 <vfprintf+0x3bc>
     d12:	e9 2f       	mov	r30, r25
     d14:	e0 61       	ori	r30, 0x10	; 16
     d16:	be 2e       	mov	r11, r30
     d18:	b4 fe       	sbrs	r11, 4
     d1a:	0d c0       	rjmp	.+26     	; 0xd36 <vfprintf+0x28e>
     d1c:	fb 2d       	mov	r31, r11
     d1e:	f4 60       	ori	r31, 0x04	; 4
     d20:	bf 2e       	mov	r11, r31
     d22:	09 c0       	rjmp	.+18     	; 0xd36 <vfprintf+0x28e>
     d24:	34 fe       	sbrs	r3, 4
     d26:	0a c0       	rjmp	.+20     	; 0xd3c <vfprintf+0x294>
     d28:	29 2f       	mov	r18, r25
     d2a:	26 60       	ori	r18, 0x06	; 6
     d2c:	b2 2e       	mov	r11, r18
     d2e:	06 c0       	rjmp	.+12     	; 0xd3c <vfprintf+0x294>
     d30:	28 e0       	ldi	r18, 0x08	; 8
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	05 c0       	rjmp	.+10     	; 0xd40 <vfprintf+0x298>
     d36:	20 e1       	ldi	r18, 0x10	; 16
     d38:	30 e0       	ldi	r19, 0x00	; 0
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <vfprintf+0x298>
     d3c:	20 e1       	ldi	r18, 0x10	; 16
     d3e:	32 e0       	ldi	r19, 0x02	; 2
     d40:	f8 01       	movw	r30, r16
     d42:	b7 fe       	sbrs	r11, 7
     d44:	07 c0       	rjmp	.+14     	; 0xd54 <vfprintf+0x2ac>
     d46:	60 81       	ld	r22, Z
     d48:	71 81       	ldd	r23, Z+1	; 0x01
     d4a:	82 81       	ldd	r24, Z+2	; 0x02
     d4c:	93 81       	ldd	r25, Z+3	; 0x03
     d4e:	0c 5f       	subi	r16, 0xFC	; 252
     d50:	1f 4f       	sbci	r17, 0xFF	; 255
     d52:	06 c0       	rjmp	.+12     	; 0xd60 <vfprintf+0x2b8>
     d54:	60 81       	ld	r22, Z
     d56:	71 81       	ldd	r23, Z+1	; 0x01
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 5f       	subi	r16, 0xFE	; 254
     d5e:	1f 4f       	sbci	r17, 0xFF	; 255
     d60:	a3 01       	movw	r20, r6
     d62:	43 d2       	rcall	.+1158   	; 0x11ea <__ultoa_invert>
     d64:	88 2e       	mov	r8, r24
     d66:	86 18       	sub	r8, r6
     d68:	fb 2d       	mov	r31, r11
     d6a:	ff 77       	andi	r31, 0x7F	; 127
     d6c:	3f 2e       	mov	r3, r31
     d6e:	36 fe       	sbrs	r3, 6
     d70:	0d c0       	rjmp	.+26     	; 0xd8c <vfprintf+0x2e4>
     d72:	23 2d       	mov	r18, r3
     d74:	2e 7f       	andi	r18, 0xFE	; 254
     d76:	a2 2e       	mov	r10, r18
     d78:	89 14       	cp	r8, r9
     d7a:	58 f4       	brcc	.+22     	; 0xd92 <vfprintf+0x2ea>
     d7c:	34 fe       	sbrs	r3, 4
     d7e:	0b c0       	rjmp	.+22     	; 0xd96 <vfprintf+0x2ee>
     d80:	32 fc       	sbrc	r3, 2
     d82:	09 c0       	rjmp	.+18     	; 0xd96 <vfprintf+0x2ee>
     d84:	83 2d       	mov	r24, r3
     d86:	8e 7e       	andi	r24, 0xEE	; 238
     d88:	a8 2e       	mov	r10, r24
     d8a:	05 c0       	rjmp	.+10     	; 0xd96 <vfprintf+0x2ee>
     d8c:	b8 2c       	mov	r11, r8
     d8e:	a3 2c       	mov	r10, r3
     d90:	03 c0       	rjmp	.+6      	; 0xd98 <vfprintf+0x2f0>
     d92:	b8 2c       	mov	r11, r8
     d94:	01 c0       	rjmp	.+2      	; 0xd98 <vfprintf+0x2f0>
     d96:	b9 2c       	mov	r11, r9
     d98:	a4 fe       	sbrs	r10, 4
     d9a:	0f c0       	rjmp	.+30     	; 0xdba <vfprintf+0x312>
     d9c:	fe 01       	movw	r30, r28
     d9e:	e8 0d       	add	r30, r8
     da0:	f1 1d       	adc	r31, r1
     da2:	80 81       	ld	r24, Z
     da4:	80 33       	cpi	r24, 0x30	; 48
     da6:	21 f4       	brne	.+8      	; 0xdb0 <vfprintf+0x308>
     da8:	9a 2d       	mov	r25, r10
     daa:	99 7e       	andi	r25, 0xE9	; 233
     dac:	a9 2e       	mov	r10, r25
     dae:	09 c0       	rjmp	.+18     	; 0xdc2 <vfprintf+0x31a>
     db0:	a2 fe       	sbrs	r10, 2
     db2:	06 c0       	rjmp	.+12     	; 0xdc0 <vfprintf+0x318>
     db4:	b3 94       	inc	r11
     db6:	b3 94       	inc	r11
     db8:	04 c0       	rjmp	.+8      	; 0xdc2 <vfprintf+0x31a>
     dba:	8a 2d       	mov	r24, r10
     dbc:	86 78       	andi	r24, 0x86	; 134
     dbe:	09 f0       	breq	.+2      	; 0xdc2 <vfprintf+0x31a>
     dc0:	b3 94       	inc	r11
     dc2:	a3 fc       	sbrc	r10, 3
     dc4:	10 c0       	rjmp	.+32     	; 0xde6 <vfprintf+0x33e>
     dc6:	a0 fe       	sbrs	r10, 0
     dc8:	06 c0       	rjmp	.+12     	; 0xdd6 <vfprintf+0x32e>
     dca:	b2 14       	cp	r11, r2
     dcc:	80 f4       	brcc	.+32     	; 0xdee <vfprintf+0x346>
     dce:	28 0c       	add	r2, r8
     dd0:	92 2c       	mov	r9, r2
     dd2:	9b 18       	sub	r9, r11
     dd4:	0d c0       	rjmp	.+26     	; 0xdf0 <vfprintf+0x348>
     dd6:	b2 14       	cp	r11, r2
     dd8:	58 f4       	brcc	.+22     	; 0xdf0 <vfprintf+0x348>
     dda:	b6 01       	movw	r22, r12
     ddc:	80 e2       	ldi	r24, 0x20	; 32
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	c8 d1       	rcall	.+912    	; 0x1172 <fputc>
     de2:	b3 94       	inc	r11
     de4:	f8 cf       	rjmp	.-16     	; 0xdd6 <vfprintf+0x32e>
     de6:	b2 14       	cp	r11, r2
     de8:	18 f4       	brcc	.+6      	; 0xdf0 <vfprintf+0x348>
     dea:	2b 18       	sub	r2, r11
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <vfprintf+0x34a>
     dee:	98 2c       	mov	r9, r8
     df0:	21 2c       	mov	r2, r1
     df2:	a4 fe       	sbrs	r10, 4
     df4:	0f c0       	rjmp	.+30     	; 0xe14 <vfprintf+0x36c>
     df6:	b6 01       	movw	r22, r12
     df8:	80 e3       	ldi	r24, 0x30	; 48
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	ba d1       	rcall	.+884    	; 0x1172 <fputc>
     dfe:	a2 fe       	sbrs	r10, 2
     e00:	16 c0       	rjmp	.+44     	; 0xe2e <vfprintf+0x386>
     e02:	a1 fc       	sbrc	r10, 1
     e04:	03 c0       	rjmp	.+6      	; 0xe0c <vfprintf+0x364>
     e06:	88 e7       	ldi	r24, 0x78	; 120
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	02 c0       	rjmp	.+4      	; 0xe10 <vfprintf+0x368>
     e0c:	88 e5       	ldi	r24, 0x58	; 88
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	b6 01       	movw	r22, r12
     e12:	0c c0       	rjmp	.+24     	; 0xe2c <vfprintf+0x384>
     e14:	8a 2d       	mov	r24, r10
     e16:	86 78       	andi	r24, 0x86	; 134
     e18:	51 f0       	breq	.+20     	; 0xe2e <vfprintf+0x386>
     e1a:	a1 fe       	sbrs	r10, 1
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <vfprintf+0x37a>
     e1e:	8b e2       	ldi	r24, 0x2B	; 43
     e20:	01 c0       	rjmp	.+2      	; 0xe24 <vfprintf+0x37c>
     e22:	80 e2       	ldi	r24, 0x20	; 32
     e24:	a7 fc       	sbrc	r10, 7
     e26:	8d e2       	ldi	r24, 0x2D	; 45
     e28:	b6 01       	movw	r22, r12
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	a2 d1       	rcall	.+836    	; 0x1172 <fputc>
     e2e:	89 14       	cp	r8, r9
     e30:	30 f4       	brcc	.+12     	; 0xe3e <vfprintf+0x396>
     e32:	b6 01       	movw	r22, r12
     e34:	80 e3       	ldi	r24, 0x30	; 48
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	9c d1       	rcall	.+824    	; 0x1172 <fputc>
     e3a:	9a 94       	dec	r9
     e3c:	f8 cf       	rjmp	.-16     	; 0xe2e <vfprintf+0x386>
     e3e:	8a 94       	dec	r8
     e40:	f3 01       	movw	r30, r6
     e42:	e8 0d       	add	r30, r8
     e44:	f1 1d       	adc	r31, r1
     e46:	80 81       	ld	r24, Z
     e48:	b6 01       	movw	r22, r12
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	92 d1       	rcall	.+804    	; 0x1172 <fputc>
     e4e:	81 10       	cpse	r8, r1
     e50:	f6 cf       	rjmp	.-20     	; 0xe3e <vfprintf+0x396>
     e52:	22 20       	and	r2, r2
     e54:	09 f4       	brne	.+2      	; 0xe58 <vfprintf+0x3b0>
     e56:	4e ce       	rjmp	.-868    	; 0xaf4 <vfprintf+0x4c>
     e58:	b6 01       	movw	r22, r12
     e5a:	80 e2       	ldi	r24, 0x20	; 32
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	89 d1       	rcall	.+786    	; 0x1172 <fputc>
     e60:	2a 94       	dec	r2
     e62:	f7 cf       	rjmp	.-18     	; 0xe52 <vfprintf+0x3aa>
     e64:	f6 01       	movw	r30, r12
     e66:	86 81       	ldd	r24, Z+6	; 0x06
     e68:	97 81       	ldd	r25, Z+7	; 0x07
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <vfprintf+0x3c8>
     e6c:	8f ef       	ldi	r24, 0xFF	; 255
     e6e:	9f ef       	ldi	r25, 0xFF	; 255
     e70:	2b 96       	adiw	r28, 0x0b	; 11
     e72:	0f b6       	in	r0, 0x3f	; 63
     e74:	f8 94       	cli
     e76:	de bf       	out	0x3e, r29	; 62
     e78:	0f be       	out	0x3f, r0	; 63
     e7a:	cd bf       	out	0x3d, r28	; 61
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	1f 91       	pop	r17
     e82:	0f 91       	pop	r16
     e84:	ff 90       	pop	r15
     e86:	ef 90       	pop	r14
     e88:	df 90       	pop	r13
     e8a:	cf 90       	pop	r12
     e8c:	bf 90       	pop	r11
     e8e:	af 90       	pop	r10
     e90:	9f 90       	pop	r9
     e92:	8f 90       	pop	r8
     e94:	7f 90       	pop	r7
     e96:	6f 90       	pop	r6
     e98:	5f 90       	pop	r5
     e9a:	4f 90       	pop	r4
     e9c:	3f 90       	pop	r3
     e9e:	2f 90       	pop	r2
     ea0:	08 95       	ret

00000ea2 <calloc>:
     ea2:	0f 93       	push	r16
     ea4:	1f 93       	push	r17
     ea6:	cf 93       	push	r28
     ea8:	df 93       	push	r29
     eaa:	86 9f       	mul	r24, r22
     eac:	80 01       	movw	r16, r0
     eae:	87 9f       	mul	r24, r23
     eb0:	10 0d       	add	r17, r0
     eb2:	96 9f       	mul	r25, r22
     eb4:	10 0d       	add	r17, r0
     eb6:	11 24       	eor	r1, r1
     eb8:	c8 01       	movw	r24, r16
     eba:	0d d0       	rcall	.+26     	; 0xed6 <malloc>
     ebc:	ec 01       	movw	r28, r24
     ebe:	00 97       	sbiw	r24, 0x00	; 0
     ec0:	21 f0       	breq	.+8      	; 0xeca <calloc+0x28>
     ec2:	a8 01       	movw	r20, r16
     ec4:	60 e0       	ldi	r22, 0x00	; 0
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	32 d1       	rcall	.+612    	; 0x112e <memset>
     eca:	ce 01       	movw	r24, r28
     ecc:	df 91       	pop	r29
     ece:	cf 91       	pop	r28
     ed0:	1f 91       	pop	r17
     ed2:	0f 91       	pop	r16
     ed4:	08 95       	ret

00000ed6 <malloc>:
     ed6:	0f 93       	push	r16
     ed8:	1f 93       	push	r17
     eda:	cf 93       	push	r28
     edc:	df 93       	push	r29
     ede:	82 30       	cpi	r24, 0x02	; 2
     ee0:	91 05       	cpc	r25, r1
     ee2:	10 f4       	brcc	.+4      	; 0xee8 <malloc+0x12>
     ee4:	82 e0       	ldi	r24, 0x02	; 2
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	e0 91 70 02 	lds	r30, 0x0270	; 0x800270 <__flp>
     eec:	f0 91 71 02 	lds	r31, 0x0271	; 0x800271 <__flp+0x1>
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	a0 e0       	ldi	r26, 0x00	; 0
     ef6:	b0 e0       	ldi	r27, 0x00	; 0
     ef8:	30 97       	sbiw	r30, 0x00	; 0
     efa:	19 f1       	breq	.+70     	; 0xf42 <malloc+0x6c>
     efc:	40 81       	ld	r20, Z
     efe:	51 81       	ldd	r21, Z+1	; 0x01
     f00:	02 81       	ldd	r16, Z+2	; 0x02
     f02:	13 81       	ldd	r17, Z+3	; 0x03
     f04:	48 17       	cp	r20, r24
     f06:	59 07       	cpc	r21, r25
     f08:	c8 f0       	brcs	.+50     	; 0xf3c <malloc+0x66>
     f0a:	84 17       	cp	r24, r20
     f0c:	95 07       	cpc	r25, r21
     f0e:	69 f4       	brne	.+26     	; 0xf2a <malloc+0x54>
     f10:	10 97       	sbiw	r26, 0x00	; 0
     f12:	31 f0       	breq	.+12     	; 0xf20 <malloc+0x4a>
     f14:	12 96       	adiw	r26, 0x02	; 2
     f16:	0c 93       	st	X, r16
     f18:	12 97       	sbiw	r26, 0x02	; 2
     f1a:	13 96       	adiw	r26, 0x03	; 3
     f1c:	1c 93       	st	X, r17
     f1e:	27 c0       	rjmp	.+78     	; 0xf6e <malloc+0x98>
     f20:	00 93 70 02 	sts	0x0270, r16	; 0x800270 <__flp>
     f24:	10 93 71 02 	sts	0x0271, r17	; 0x800271 <__flp+0x1>
     f28:	22 c0       	rjmp	.+68     	; 0xf6e <malloc+0x98>
     f2a:	21 15       	cp	r18, r1
     f2c:	31 05       	cpc	r19, r1
     f2e:	19 f0       	breq	.+6      	; 0xf36 <malloc+0x60>
     f30:	42 17       	cp	r20, r18
     f32:	53 07       	cpc	r21, r19
     f34:	18 f4       	brcc	.+6      	; 0xf3c <malloc+0x66>
     f36:	9a 01       	movw	r18, r20
     f38:	bd 01       	movw	r22, r26
     f3a:	ef 01       	movw	r28, r30
     f3c:	df 01       	movw	r26, r30
     f3e:	f8 01       	movw	r30, r16
     f40:	db cf       	rjmp	.-74     	; 0xef8 <malloc+0x22>
     f42:	21 15       	cp	r18, r1
     f44:	31 05       	cpc	r19, r1
     f46:	f9 f0       	breq	.+62     	; 0xf86 <malloc+0xb0>
     f48:	28 1b       	sub	r18, r24
     f4a:	39 0b       	sbc	r19, r25
     f4c:	24 30       	cpi	r18, 0x04	; 4
     f4e:	31 05       	cpc	r19, r1
     f50:	80 f4       	brcc	.+32     	; 0xf72 <malloc+0x9c>
     f52:	8a 81       	ldd	r24, Y+2	; 0x02
     f54:	9b 81       	ldd	r25, Y+3	; 0x03
     f56:	61 15       	cp	r22, r1
     f58:	71 05       	cpc	r23, r1
     f5a:	21 f0       	breq	.+8      	; 0xf64 <malloc+0x8e>
     f5c:	fb 01       	movw	r30, r22
     f5e:	93 83       	std	Z+3, r25	; 0x03
     f60:	82 83       	std	Z+2, r24	; 0x02
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <malloc+0x96>
     f64:	90 93 71 02 	sts	0x0271, r25	; 0x800271 <__flp+0x1>
     f68:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <__flp>
     f6c:	fe 01       	movw	r30, r28
     f6e:	32 96       	adiw	r30, 0x02	; 2
     f70:	44 c0       	rjmp	.+136    	; 0xffa <malloc+0x124>
     f72:	fe 01       	movw	r30, r28
     f74:	e2 0f       	add	r30, r18
     f76:	f3 1f       	adc	r31, r19
     f78:	81 93       	st	Z+, r24
     f7a:	91 93       	st	Z+, r25
     f7c:	22 50       	subi	r18, 0x02	; 2
     f7e:	31 09       	sbc	r19, r1
     f80:	39 83       	std	Y+1, r19	; 0x01
     f82:	28 83       	st	Y, r18
     f84:	3a c0       	rjmp	.+116    	; 0xffa <malloc+0x124>
     f86:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <__brkval>
     f8a:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <__brkval+0x1>
     f8e:	23 2b       	or	r18, r19
     f90:	41 f4       	brne	.+16     	; 0xfa2 <malloc+0xcc>
     f92:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     f96:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     f9a:	30 93 6f 02 	sts	0x026F, r19	; 0x80026f <__brkval+0x1>
     f9e:	20 93 6e 02 	sts	0x026E, r18	; 0x80026e <__brkval>
     fa2:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     fa6:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     faa:	21 15       	cp	r18, r1
     fac:	31 05       	cpc	r19, r1
     fae:	41 f4       	brne	.+16     	; 0xfc0 <malloc+0xea>
     fb0:	2d b7       	in	r18, 0x3d	; 61
     fb2:	3e b7       	in	r19, 0x3e	; 62
     fb4:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     fb8:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     fbc:	24 1b       	sub	r18, r20
     fbe:	35 0b       	sbc	r19, r21
     fc0:	e0 91 6e 02 	lds	r30, 0x026E	; 0x80026e <__brkval>
     fc4:	f0 91 6f 02 	lds	r31, 0x026F	; 0x80026f <__brkval+0x1>
     fc8:	e2 17       	cp	r30, r18
     fca:	f3 07       	cpc	r31, r19
     fcc:	a0 f4       	brcc	.+40     	; 0xff6 <malloc+0x120>
     fce:	2e 1b       	sub	r18, r30
     fd0:	3f 0b       	sbc	r19, r31
     fd2:	28 17       	cp	r18, r24
     fd4:	39 07       	cpc	r19, r25
     fd6:	78 f0       	brcs	.+30     	; 0xff6 <malloc+0x120>
     fd8:	ac 01       	movw	r20, r24
     fda:	4e 5f       	subi	r20, 0xFE	; 254
     fdc:	5f 4f       	sbci	r21, 0xFF	; 255
     fde:	24 17       	cp	r18, r20
     fe0:	35 07       	cpc	r19, r21
     fe2:	48 f0       	brcs	.+18     	; 0xff6 <malloc+0x120>
     fe4:	4e 0f       	add	r20, r30
     fe6:	5f 1f       	adc	r21, r31
     fe8:	50 93 6f 02 	sts	0x026F, r21	; 0x80026f <__brkval+0x1>
     fec:	40 93 6e 02 	sts	0x026E, r20	; 0x80026e <__brkval>
     ff0:	81 93       	st	Z+, r24
     ff2:	91 93       	st	Z+, r25
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <malloc+0x124>
     ff6:	e0 e0       	ldi	r30, 0x00	; 0
     ff8:	f0 e0       	ldi	r31, 0x00	; 0
     ffa:	cf 01       	movw	r24, r30
     ffc:	df 91       	pop	r29
     ffe:	cf 91       	pop	r28
    1000:	1f 91       	pop	r17
    1002:	0f 91       	pop	r16
    1004:	08 95       	ret

00001006 <free>:
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	00 97       	sbiw	r24, 0x00	; 0
    100c:	09 f4       	brne	.+2      	; 0x1010 <free+0xa>
    100e:	81 c0       	rjmp	.+258    	; 0x1112 <free+0x10c>
    1010:	fc 01       	movw	r30, r24
    1012:	32 97       	sbiw	r30, 0x02	; 2
    1014:	13 82       	std	Z+3, r1	; 0x03
    1016:	12 82       	std	Z+2, r1	; 0x02
    1018:	a0 91 70 02 	lds	r26, 0x0270	; 0x800270 <__flp>
    101c:	b0 91 71 02 	lds	r27, 0x0271	; 0x800271 <__flp+0x1>
    1020:	10 97       	sbiw	r26, 0x00	; 0
    1022:	81 f4       	brne	.+32     	; 0x1044 <free+0x3e>
    1024:	20 81       	ld	r18, Z
    1026:	31 81       	ldd	r19, Z+1	; 0x01
    1028:	82 0f       	add	r24, r18
    102a:	93 1f       	adc	r25, r19
    102c:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <__brkval>
    1030:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <__brkval+0x1>
    1034:	28 17       	cp	r18, r24
    1036:	39 07       	cpc	r19, r25
    1038:	51 f5       	brne	.+84     	; 0x108e <free+0x88>
    103a:	f0 93 6f 02 	sts	0x026F, r31	; 0x80026f <__brkval+0x1>
    103e:	e0 93 6e 02 	sts	0x026E, r30	; 0x80026e <__brkval>
    1042:	67 c0       	rjmp	.+206    	; 0x1112 <free+0x10c>
    1044:	ed 01       	movw	r28, r26
    1046:	20 e0       	ldi	r18, 0x00	; 0
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	ce 17       	cp	r28, r30
    104c:	df 07       	cpc	r29, r31
    104e:	40 f4       	brcc	.+16     	; 0x1060 <free+0x5a>
    1050:	4a 81       	ldd	r20, Y+2	; 0x02
    1052:	5b 81       	ldd	r21, Y+3	; 0x03
    1054:	9e 01       	movw	r18, r28
    1056:	41 15       	cp	r20, r1
    1058:	51 05       	cpc	r21, r1
    105a:	f1 f0       	breq	.+60     	; 0x1098 <free+0x92>
    105c:	ea 01       	movw	r28, r20
    105e:	f5 cf       	rjmp	.-22     	; 0x104a <free+0x44>
    1060:	d3 83       	std	Z+3, r29	; 0x03
    1062:	c2 83       	std	Z+2, r28	; 0x02
    1064:	40 81       	ld	r20, Z
    1066:	51 81       	ldd	r21, Z+1	; 0x01
    1068:	84 0f       	add	r24, r20
    106a:	95 1f       	adc	r25, r21
    106c:	c8 17       	cp	r28, r24
    106e:	d9 07       	cpc	r29, r25
    1070:	59 f4       	brne	.+22     	; 0x1088 <free+0x82>
    1072:	88 81       	ld	r24, Y
    1074:	99 81       	ldd	r25, Y+1	; 0x01
    1076:	84 0f       	add	r24, r20
    1078:	95 1f       	adc	r25, r21
    107a:	02 96       	adiw	r24, 0x02	; 2
    107c:	91 83       	std	Z+1, r25	; 0x01
    107e:	80 83       	st	Z, r24
    1080:	8a 81       	ldd	r24, Y+2	; 0x02
    1082:	9b 81       	ldd	r25, Y+3	; 0x03
    1084:	93 83       	std	Z+3, r25	; 0x03
    1086:	82 83       	std	Z+2, r24	; 0x02
    1088:	21 15       	cp	r18, r1
    108a:	31 05       	cpc	r19, r1
    108c:	29 f4       	brne	.+10     	; 0x1098 <free+0x92>
    108e:	f0 93 71 02 	sts	0x0271, r31	; 0x800271 <__flp+0x1>
    1092:	e0 93 70 02 	sts	0x0270, r30	; 0x800270 <__flp>
    1096:	3d c0       	rjmp	.+122    	; 0x1112 <free+0x10c>
    1098:	e9 01       	movw	r28, r18
    109a:	fb 83       	std	Y+3, r31	; 0x03
    109c:	ea 83       	std	Y+2, r30	; 0x02
    109e:	49 91       	ld	r20, Y+
    10a0:	59 91       	ld	r21, Y+
    10a2:	c4 0f       	add	r28, r20
    10a4:	d5 1f       	adc	r29, r21
    10a6:	ec 17       	cp	r30, r28
    10a8:	fd 07       	cpc	r31, r29
    10aa:	61 f4       	brne	.+24     	; 0x10c4 <free+0xbe>
    10ac:	80 81       	ld	r24, Z
    10ae:	91 81       	ldd	r25, Z+1	; 0x01
    10b0:	84 0f       	add	r24, r20
    10b2:	95 1f       	adc	r25, r21
    10b4:	02 96       	adiw	r24, 0x02	; 2
    10b6:	e9 01       	movw	r28, r18
    10b8:	99 83       	std	Y+1, r25	; 0x01
    10ba:	88 83       	st	Y, r24
    10bc:	82 81       	ldd	r24, Z+2	; 0x02
    10be:	93 81       	ldd	r25, Z+3	; 0x03
    10c0:	9b 83       	std	Y+3, r25	; 0x03
    10c2:	8a 83       	std	Y+2, r24	; 0x02
    10c4:	e0 e0       	ldi	r30, 0x00	; 0
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	12 96       	adiw	r26, 0x02	; 2
    10ca:	8d 91       	ld	r24, X+
    10cc:	9c 91       	ld	r25, X
    10ce:	13 97       	sbiw	r26, 0x03	; 3
    10d0:	00 97       	sbiw	r24, 0x00	; 0
    10d2:	19 f0       	breq	.+6      	; 0x10da <free+0xd4>
    10d4:	fd 01       	movw	r30, r26
    10d6:	dc 01       	movw	r26, r24
    10d8:	f7 cf       	rjmp	.-18     	; 0x10c8 <free+0xc2>
    10da:	8d 91       	ld	r24, X+
    10dc:	9c 91       	ld	r25, X
    10de:	11 97       	sbiw	r26, 0x01	; 1
    10e0:	9d 01       	movw	r18, r26
    10e2:	2e 5f       	subi	r18, 0xFE	; 254
    10e4:	3f 4f       	sbci	r19, 0xFF	; 255
    10e6:	82 0f       	add	r24, r18
    10e8:	93 1f       	adc	r25, r19
    10ea:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <__brkval>
    10ee:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <__brkval+0x1>
    10f2:	28 17       	cp	r18, r24
    10f4:	39 07       	cpc	r19, r25
    10f6:	69 f4       	brne	.+26     	; 0x1112 <free+0x10c>
    10f8:	30 97       	sbiw	r30, 0x00	; 0
    10fa:	29 f4       	brne	.+10     	; 0x1106 <free+0x100>
    10fc:	10 92 71 02 	sts	0x0271, r1	; 0x800271 <__flp+0x1>
    1100:	10 92 70 02 	sts	0x0270, r1	; 0x800270 <__flp>
    1104:	02 c0       	rjmp	.+4      	; 0x110a <free+0x104>
    1106:	13 82       	std	Z+3, r1	; 0x03
    1108:	12 82       	std	Z+2, r1	; 0x02
    110a:	b0 93 6f 02 	sts	0x026F, r27	; 0x80026f <__brkval+0x1>
    110e:	a0 93 6e 02 	sts	0x026E, r26	; 0x80026e <__brkval>
    1112:	df 91       	pop	r29
    1114:	cf 91       	pop	r28
    1116:	08 95       	ret

00001118 <strnlen_P>:
    1118:	fc 01       	movw	r30, r24
    111a:	05 90       	lpm	r0, Z+
    111c:	61 50       	subi	r22, 0x01	; 1
    111e:	70 40       	sbci	r23, 0x00	; 0
    1120:	01 10       	cpse	r0, r1
    1122:	d8 f7       	brcc	.-10     	; 0x111a <strnlen_P+0x2>
    1124:	80 95       	com	r24
    1126:	90 95       	com	r25
    1128:	8e 0f       	add	r24, r30
    112a:	9f 1f       	adc	r25, r31
    112c:	08 95       	ret

0000112e <memset>:
    112e:	dc 01       	movw	r26, r24
    1130:	01 c0       	rjmp	.+2      	; 0x1134 <memset+0x6>
    1132:	6d 93       	st	X+, r22
    1134:	41 50       	subi	r20, 0x01	; 1
    1136:	50 40       	sbci	r21, 0x00	; 0
    1138:	e0 f7       	brcc	.-8      	; 0x1132 <memset+0x4>
    113a:	08 95       	ret

0000113c <strnlen>:
    113c:	fc 01       	movw	r30, r24
    113e:	61 50       	subi	r22, 0x01	; 1
    1140:	70 40       	sbci	r23, 0x00	; 0
    1142:	01 90       	ld	r0, Z+
    1144:	01 10       	cpse	r0, r1
    1146:	d8 f7       	brcc	.-10     	; 0x113e <strnlen+0x2>
    1148:	80 95       	com	r24
    114a:	90 95       	com	r25
    114c:	8e 0f       	add	r24, r30
    114e:	9f 1f       	adc	r25, r31
    1150:	08 95       	ret

00001152 <strrev>:
    1152:	dc 01       	movw	r26, r24
    1154:	fc 01       	movw	r30, r24
    1156:	67 2f       	mov	r22, r23
    1158:	71 91       	ld	r23, Z+
    115a:	77 23       	and	r23, r23
    115c:	e1 f7       	brne	.-8      	; 0x1156 <strrev+0x4>
    115e:	32 97       	sbiw	r30, 0x02	; 2
    1160:	04 c0       	rjmp	.+8      	; 0x116a <strrev+0x18>
    1162:	7c 91       	ld	r23, X
    1164:	6d 93       	st	X+, r22
    1166:	70 83       	st	Z, r23
    1168:	62 91       	ld	r22, -Z
    116a:	ae 17       	cp	r26, r30
    116c:	bf 07       	cpc	r27, r31
    116e:	c8 f3       	brcs	.-14     	; 0x1162 <strrev+0x10>
    1170:	08 95       	ret

00001172 <fputc>:
    1172:	0f 93       	push	r16
    1174:	1f 93       	push	r17
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	fb 01       	movw	r30, r22
    117c:	23 81       	ldd	r18, Z+3	; 0x03
    117e:	21 fd       	sbrc	r18, 1
    1180:	03 c0       	rjmp	.+6      	; 0x1188 <fputc+0x16>
    1182:	8f ef       	ldi	r24, 0xFF	; 255
    1184:	9f ef       	ldi	r25, 0xFF	; 255
    1186:	2c c0       	rjmp	.+88     	; 0x11e0 <fputc+0x6e>
    1188:	22 ff       	sbrs	r18, 2
    118a:	16 c0       	rjmp	.+44     	; 0x11b8 <fputc+0x46>
    118c:	46 81       	ldd	r20, Z+6	; 0x06
    118e:	57 81       	ldd	r21, Z+7	; 0x07
    1190:	24 81       	ldd	r18, Z+4	; 0x04
    1192:	35 81       	ldd	r19, Z+5	; 0x05
    1194:	42 17       	cp	r20, r18
    1196:	53 07       	cpc	r21, r19
    1198:	44 f4       	brge	.+16     	; 0x11aa <fputc+0x38>
    119a:	a0 81       	ld	r26, Z
    119c:	b1 81       	ldd	r27, Z+1	; 0x01
    119e:	9d 01       	movw	r18, r26
    11a0:	2f 5f       	subi	r18, 0xFF	; 255
    11a2:	3f 4f       	sbci	r19, 0xFF	; 255
    11a4:	31 83       	std	Z+1, r19	; 0x01
    11a6:	20 83       	st	Z, r18
    11a8:	8c 93       	st	X, r24
    11aa:	26 81       	ldd	r18, Z+6	; 0x06
    11ac:	37 81       	ldd	r19, Z+7	; 0x07
    11ae:	2f 5f       	subi	r18, 0xFF	; 255
    11b0:	3f 4f       	sbci	r19, 0xFF	; 255
    11b2:	37 83       	std	Z+7, r19	; 0x07
    11b4:	26 83       	std	Z+6, r18	; 0x06
    11b6:	14 c0       	rjmp	.+40     	; 0x11e0 <fputc+0x6e>
    11b8:	8b 01       	movw	r16, r22
    11ba:	ec 01       	movw	r28, r24
    11bc:	fb 01       	movw	r30, r22
    11be:	00 84       	ldd	r0, Z+8	; 0x08
    11c0:	f1 85       	ldd	r31, Z+9	; 0x09
    11c2:	e0 2d       	mov	r30, r0
    11c4:	19 95       	eicall
    11c6:	89 2b       	or	r24, r25
    11c8:	e1 f6       	brne	.-72     	; 0x1182 <fputc+0x10>
    11ca:	d8 01       	movw	r26, r16
    11cc:	16 96       	adiw	r26, 0x06	; 6
    11ce:	8d 91       	ld	r24, X+
    11d0:	9c 91       	ld	r25, X
    11d2:	17 97       	sbiw	r26, 0x07	; 7
    11d4:	01 96       	adiw	r24, 0x01	; 1
    11d6:	17 96       	adiw	r26, 0x07	; 7
    11d8:	9c 93       	st	X, r25
    11da:	8e 93       	st	-X, r24
    11dc:	16 97       	sbiw	r26, 0x06	; 6
    11de:	ce 01       	movw	r24, r28
    11e0:	df 91       	pop	r29
    11e2:	cf 91       	pop	r28
    11e4:	1f 91       	pop	r17
    11e6:	0f 91       	pop	r16
    11e8:	08 95       	ret

000011ea <__ultoa_invert>:
    11ea:	fa 01       	movw	r30, r20
    11ec:	aa 27       	eor	r26, r26
    11ee:	28 30       	cpi	r18, 0x08	; 8
    11f0:	51 f1       	breq	.+84     	; 0x1246 <__ultoa_invert+0x5c>
    11f2:	20 31       	cpi	r18, 0x10	; 16
    11f4:	81 f1       	breq	.+96     	; 0x1256 <__ultoa_invert+0x6c>
    11f6:	e8 94       	clt
    11f8:	6f 93       	push	r22
    11fa:	6e 7f       	andi	r22, 0xFE	; 254
    11fc:	6e 5f       	subi	r22, 0xFE	; 254
    11fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1200:	8f 4f       	sbci	r24, 0xFF	; 255
    1202:	9f 4f       	sbci	r25, 0xFF	; 255
    1204:	af 4f       	sbci	r26, 0xFF	; 255
    1206:	b1 e0       	ldi	r27, 0x01	; 1
    1208:	3e d0       	rcall	.+124    	; 0x1286 <__ultoa_invert+0x9c>
    120a:	b4 e0       	ldi	r27, 0x04	; 4
    120c:	3c d0       	rcall	.+120    	; 0x1286 <__ultoa_invert+0x9c>
    120e:	67 0f       	add	r22, r23
    1210:	78 1f       	adc	r23, r24
    1212:	89 1f       	adc	r24, r25
    1214:	9a 1f       	adc	r25, r26
    1216:	a1 1d       	adc	r26, r1
    1218:	68 0f       	add	r22, r24
    121a:	79 1f       	adc	r23, r25
    121c:	8a 1f       	adc	r24, r26
    121e:	91 1d       	adc	r25, r1
    1220:	a1 1d       	adc	r26, r1
    1222:	6a 0f       	add	r22, r26
    1224:	71 1d       	adc	r23, r1
    1226:	81 1d       	adc	r24, r1
    1228:	91 1d       	adc	r25, r1
    122a:	a1 1d       	adc	r26, r1
    122c:	20 d0       	rcall	.+64     	; 0x126e <__ultoa_invert+0x84>
    122e:	09 f4       	brne	.+2      	; 0x1232 <__ultoa_invert+0x48>
    1230:	68 94       	set
    1232:	3f 91       	pop	r19
    1234:	2a e0       	ldi	r18, 0x0A	; 10
    1236:	26 9f       	mul	r18, r22
    1238:	11 24       	eor	r1, r1
    123a:	30 19       	sub	r19, r0
    123c:	30 5d       	subi	r19, 0xD0	; 208
    123e:	31 93       	st	Z+, r19
    1240:	de f6       	brtc	.-74     	; 0x11f8 <__ultoa_invert+0xe>
    1242:	cf 01       	movw	r24, r30
    1244:	08 95       	ret
    1246:	46 2f       	mov	r20, r22
    1248:	47 70       	andi	r20, 0x07	; 7
    124a:	40 5d       	subi	r20, 0xD0	; 208
    124c:	41 93       	st	Z+, r20
    124e:	b3 e0       	ldi	r27, 0x03	; 3
    1250:	0f d0       	rcall	.+30     	; 0x1270 <__ultoa_invert+0x86>
    1252:	c9 f7       	brne	.-14     	; 0x1246 <__ultoa_invert+0x5c>
    1254:	f6 cf       	rjmp	.-20     	; 0x1242 <__ultoa_invert+0x58>
    1256:	46 2f       	mov	r20, r22
    1258:	4f 70       	andi	r20, 0x0F	; 15
    125a:	40 5d       	subi	r20, 0xD0	; 208
    125c:	4a 33       	cpi	r20, 0x3A	; 58
    125e:	18 f0       	brcs	.+6      	; 0x1266 <__ultoa_invert+0x7c>
    1260:	49 5d       	subi	r20, 0xD9	; 217
    1262:	31 fd       	sbrc	r19, 1
    1264:	40 52       	subi	r20, 0x20	; 32
    1266:	41 93       	st	Z+, r20
    1268:	02 d0       	rcall	.+4      	; 0x126e <__ultoa_invert+0x84>
    126a:	a9 f7       	brne	.-22     	; 0x1256 <__ultoa_invert+0x6c>
    126c:	ea cf       	rjmp	.-44     	; 0x1242 <__ultoa_invert+0x58>
    126e:	b4 e0       	ldi	r27, 0x04	; 4
    1270:	a6 95       	lsr	r26
    1272:	97 95       	ror	r25
    1274:	87 95       	ror	r24
    1276:	77 95       	ror	r23
    1278:	67 95       	ror	r22
    127a:	ba 95       	dec	r27
    127c:	c9 f7       	brne	.-14     	; 0x1270 <__ultoa_invert+0x86>
    127e:	00 97       	sbiw	r24, 0x00	; 0
    1280:	61 05       	cpc	r22, r1
    1282:	71 05       	cpc	r23, r1
    1284:	08 95       	ret
    1286:	9b 01       	movw	r18, r22
    1288:	ac 01       	movw	r20, r24
    128a:	0a 2e       	mov	r0, r26
    128c:	06 94       	lsr	r0
    128e:	57 95       	ror	r21
    1290:	47 95       	ror	r20
    1292:	37 95       	ror	r19
    1294:	27 95       	ror	r18
    1296:	ba 95       	dec	r27
    1298:	c9 f7       	brne	.-14     	; 0x128c <__ultoa_invert+0xa2>
    129a:	62 0f       	add	r22, r18
    129c:	73 1f       	adc	r23, r19
    129e:	84 1f       	adc	r24, r20
    12a0:	95 1f       	adc	r25, r21
    12a2:	a0 1d       	adc	r26, r0
    12a4:	08 95       	ret

000012a6 <_exit>:
    12a6:	f8 94       	cli

000012a8 <__stop_program>:
    12a8:	ff cf       	rjmp	.-2      	; 0x12a8 <__stop_program>
