
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000019e  00800200  00002ce8  00002d7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002ce8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a6  0080039e  0080039e  00002f1a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002f1a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002f78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d0  00000000  00000000  00002fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003953  00000000  00000000  00003288  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a58  00000000  00000000  00006bdb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a42  00000000  00000000  00008633  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000096c  00000000  00000000  0000a078  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000da7  00000000  00000000  0000a9e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000256a  00000000  00000000  0000b78b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  0000dcf5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 15 0b 	jmp	0x162a	; 0x162a <__vector_17>
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 a3 0a 	jmp	0x1546	; 0x1546 <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 96 08 	jmp	0x112c	; 0x112c <__vector_25>
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2332>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	e8 ee       	ldi	r30, 0xE8	; 232
     22c:	fc e2       	ldi	r31, 0x2C	; 44
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	ae 39       	cpi	r26, 0x9E	; 158
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	ae e9       	ldi	r26, 0x9E	; 158
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	a4 34       	cpi	r26, 0x44	; 68
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	c1 d5       	rcall	.+2946   	; 0xdd2 <main>
     250:	0c 94 72 16 	jmp	0x2ce4	; 0x2ce4 <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
{	
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     256:	08 95       	ret

00000258 <PWM_update>:
void PWM_update()//motor pwm update
{
     258:	8f 92       	push	r8
     25a:	9f 92       	push	r9
     25c:	af 92       	push	r10
     25e:	bf 92       	push	r11
     260:	cf 92       	push	r12
     262:	df 92       	push	r13
     264:	ef 92       	push	r14
     266:	ff 92       	push	r15
     268:	0f 93       	push	r16
     26a:	1f 93       	push	r17
	PID_roll=Compute_PID(kalman_angle_roll, 0 , &pid_i_roll, &previous_error_roll,dt,kp_roll,ki_roll,kd_roll);
     26c:	a0 90 32 04 	lds	r10, 0x0432	; 0x800432 <dt>
     270:	b0 90 33 04 	lds	r11, 0x0433	; 0x800433 <dt+0x1>
     274:	c0 90 34 04 	lds	r12, 0x0434	; 0x800434 <dt+0x2>
     278:	d0 90 35 04 	lds	r13, 0x0435	; 0x800435 <dt+0x3>
     27c:	60 91 36 04 	lds	r22, 0x0436	; 0x800436 <kalman_angle_roll>
     280:	70 91 37 04 	lds	r23, 0x0437	; 0x800437 <kalman_angle_roll+0x1>
     284:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <kalman_angle_roll+0x2>
     288:	90 91 39 04 	lds	r25, 0x0439	; 0x800439 <kalman_angle_roll+0x3>
     28c:	20 91 7c 03 	lds	r18, 0x037C	; 0x80037c <kd_roll+0x3>
     290:	2f 93       	push	r18
     292:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <kd_roll+0x2>
     296:	2f 93       	push	r18
     298:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <kd_roll+0x1>
     29c:	2f 93       	push	r18
     29e:	20 91 79 03 	lds	r18, 0x0379	; 0x800379 <kd_roll>
     2a2:	2f 93       	push	r18
     2a4:	20 91 ae 03 	lds	r18, 0x03AE	; 0x8003ae <ki_roll+0x3>
     2a8:	2f 93       	push	r18
     2aa:	20 91 ad 03 	lds	r18, 0x03AD	; 0x8003ad <ki_roll+0x2>
     2ae:	2f 93       	push	r18
     2b0:	20 91 ac 03 	lds	r18, 0x03AC	; 0x8003ac <ki_roll+0x1>
     2b4:	2f 93       	push	r18
     2b6:	20 91 ab 03 	lds	r18, 0x03AB	; 0x8003ab <ki_roll>
     2ba:	2f 93       	push	r18
     2bc:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <kp_roll+0x3>
     2c0:	2f 93       	push	r18
     2c2:	20 91 7f 03 	lds	r18, 0x037F	; 0x80037f <kp_roll+0x2>
     2c6:	2f 93       	push	r18
     2c8:	20 91 7e 03 	lds	r18, 0x037E	; 0x80037e <kp_roll+0x1>
     2cc:	2f 93       	push	r18
     2ce:	20 91 7d 03 	lds	r18, 0x037D	; 0x80037d <kp_roll>
     2d2:	2f 93       	push	r18
     2d4:	0f 2e       	mov	r0, r31
     2d6:	f3 eb       	ldi	r31, 0xB3	; 179
     2d8:	ef 2e       	mov	r14, r31
     2da:	f3 e0       	ldi	r31, 0x03	; 3
     2dc:	ff 2e       	mov	r15, r31
     2de:	f0 2d       	mov	r31, r0
     2e0:	0f ea       	ldi	r16, 0xAF	; 175
     2e2:	13 e0       	ldi	r17, 0x03	; 3
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	a9 01       	movw	r20, r18
     2ea:	0e 94 a0 09 	call	0x1340	; 0x1340 <Compute_PID>
     2ee:	4b 01       	movw	r8, r22
     2f0:	5c 01       	movw	r10, r24
     2f2:	60 93 b7 03 	sts	0x03B7, r22	; 0x8003b7 <PID_roll>
     2f6:	70 93 b8 03 	sts	0x03B8, r23	; 0x8003b8 <PID_roll+0x1>
     2fa:	80 93 b9 03 	sts	0x03B9, r24	; 0x8003b9 <PID_roll+0x2>
     2fe:	90 93 ba 03 	sts	0x03BA, r25	; 0x8003ba <PID_roll+0x3>
	//PID_pitch=Compute_PID(kalman_angle_pitch, 0 ,&pid_i_pitch,&previous_error_pitch,dt,kp_pitch,ki_pitch,kd_pitch);

	if (abs(kalman_angle_roll)<0.04|| abs(kalman_angle_roll>45))
     302:	c0 90 36 04 	lds	r12, 0x0436	; 0x800436 <kalman_angle_roll>
     306:	d0 90 37 04 	lds	r13, 0x0437	; 0x800437 <kalman_angle_roll+0x1>
     30a:	e0 90 38 04 	lds	r14, 0x0438	; 0x800438 <kalman_angle_roll+0x2>
     30e:	f0 90 39 04 	lds	r15, 0x0439	; 0x800439 <kalman_angle_roll+0x3>
     312:	c7 01       	movw	r24, r14
     314:	b6 01       	movw	r22, r12
     316:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__fixsfsi>
     31a:	9b 01       	movw	r18, r22
     31c:	77 23       	and	r23, r23
     31e:	24 f4       	brge	.+8      	; 0x328 <PWM_update+0xd0>
     320:	22 27       	eor	r18, r18
     322:	33 27       	eor	r19, r19
     324:	26 1b       	sub	r18, r22
     326:	37 0b       	sbc	r19, r23
     328:	b9 01       	movw	r22, r18
     32a:	33 0f       	add	r19, r19
     32c:	88 0b       	sbc	r24, r24
     32e:	99 0b       	sbc	r25, r25
     330:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <__floatsisf>
     334:	2d b7       	in	r18, 0x3d	; 61
     336:	3e b7       	in	r19, 0x3e	; 62
     338:	24 5f       	subi	r18, 0xF4	; 244
     33a:	3f 4f       	sbci	r19, 0xFF	; 255
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	3e bf       	out	0x3e, r19	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	2d bf       	out	0x3d, r18	; 61
     346:	2a e0       	ldi	r18, 0x0A	; 10
     348:	37 ed       	ldi	r19, 0xD7	; 215
     34a:	43 e2       	ldi	r20, 0x23	; 35
     34c:	5d e3       	ldi	r21, 0x3D	; 61
     34e:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <__cmpsf2>
     352:	88 23       	and	r24, r24
     354:	54 f0       	brlt	.+20     	; 0x36a <PWM_update+0x112>
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	44 e3       	ldi	r20, 0x34	; 52
     35c:	52 e4       	ldi	r21, 0x42	; 66
     35e:	c7 01       	movw	r24, r14
     360:	b6 01       	movw	r22, r12
     362:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <__gesf2>
     366:	18 16       	cp	r1, r24
     368:	6c f4       	brge	.+26     	; 0x384 <PWM_update+0x12c>
	{
		incr=0;
     36a:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <incr+0x1>
     36e:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <incr>
		pid_i_roll=0;
     372:	10 92 af 03 	sts	0x03AF, r1	; 0x8003af <pid_i_roll>
     376:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <pid_i_roll+0x1>
     37a:	10 92 b1 03 	sts	0x03B1, r1	; 0x8003b1 <pid_i_roll+0x2>
     37e:	10 92 b2 03 	sts	0x03B2, r1	; 0x8003b2 <pid_i_roll+0x3>
     382:	30 c0       	rjmp	.+96     	; 0x3e4 <PWM_update+0x18c>
	}
	else
		if (kalman_angle_roll>0.04)
     384:	2a e0       	ldi	r18, 0x0A	; 10
     386:	37 ed       	ldi	r19, 0xD7	; 215
     388:	43 e2       	ldi	r20, 0x23	; 35
     38a:	5d e3       	ldi	r21, 0x3D	; 61
     38c:	c7 01       	movw	r24, r14
     38e:	b6 01       	movw	r22, r12
     390:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <__gesf2>
     394:	18 16       	cp	r1, r24
     396:	94 f4       	brge	.+36     	; 0x3bc <PWM_update+0x164>
		{
			incr=(uint8_t)(abs(PID_roll));
     398:	c5 01       	movw	r24, r10
     39a:	b4 01       	movw	r22, r8
     39c:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__fixsfsi>
     3a0:	9b 01       	movw	r18, r22
     3a2:	77 23       	and	r23, r23
     3a4:	24 f4       	brge	.+8      	; 0x3ae <PWM_update+0x156>
     3a6:	22 27       	eor	r18, r18
     3a8:	33 27       	eor	r19, r19
     3aa:	26 1b       	sub	r18, r22
     3ac:	37 0b       	sbc	r19, r23
     3ae:	c9 01       	movw	r24, r18
     3b0:	99 27       	eor	r25, r25
     3b2:	90 93 c6 03 	sts	0x03C6, r25	; 0x8003c6 <incr+0x1>
     3b6:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <incr>
     3ba:	14 c0       	rjmp	.+40     	; 0x3e4 <PWM_update+0x18c>
			//printf("yes");
		}
		else 
		{
			incr =-(uint8_t)(abs(PID_roll));
     3bc:	c5 01       	movw	r24, r10
     3be:	b4 01       	movw	r22, r8
     3c0:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__fixsfsi>
     3c4:	9b 01       	movw	r18, r22
     3c6:	77 23       	and	r23, r23
     3c8:	24 f4       	brge	.+8      	; 0x3d2 <PWM_update+0x17a>
     3ca:	22 27       	eor	r18, r18
     3cc:	33 27       	eor	r19, r19
     3ce:	26 1b       	sub	r18, r22
     3d0:	37 0b       	sbc	r19, r23
     3d2:	c9 01       	movw	r24, r18
     3d4:	99 27       	eor	r25, r25
     3d6:	91 95       	neg	r25
     3d8:	81 95       	neg	r24
     3da:	91 09       	sbc	r25, r1
     3dc:	90 93 c6 03 	sts	0x03C6, r25	; 0x8003c6 <incr+0x1>
     3e0:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <incr>
			//printf("no");
		}
	U_PWM=pwmSin[U_step];
     3e4:	e0 91 a0 03 	lds	r30, 0x03A0	; 0x8003a0 <U_step>
     3e8:	f0 91 a1 03 	lds	r31, 0x03A1	; 0x8003a1 <U_step+0x1>
     3ec:	ea 5f       	subi	r30, 0xFA	; 250
     3ee:	fd 4f       	sbci	r31, 0xFD	; 253
     3f0:	80 81       	ld	r24, Z
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     3f8:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     3fc:	e0 91 75 03 	lds	r30, 0x0375	; 0x800375 <V_step>
     400:	f0 91 76 03 	lds	r31, 0x0376	; 0x800376 <V_step+0x1>
     404:	ea 5f       	subi	r30, 0xFA	; 250
     406:	fd 4f       	sbci	r31, 0xFD	; 253
     408:	80 81       	ld	r24, Z
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     410:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     414:	e0 91 73 03 	lds	r30, 0x0373	; 0x800373 <W_step>
     418:	f0 91 74 03 	lds	r31, 0x0374	; 0x800374 <W_step+0x1>
     41c:	ea 5f       	subi	r30, 0xFA	; 250
     41e:	fd 4f       	sbci	r31, 0xFD	; 253
     420:	80 81       	ld	r24, Z
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     428:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     42c:	60 91 c5 03 	lds	r22, 0x03C5	; 0x8003c5 <incr>
     430:	70 91 c6 03 	lds	r23, 0x03C6	; 0x8003c6 <incr+0x1>
     434:	40 91 a0 03 	lds	r20, 0x03A0	; 0x8003a0 <U_step>
     438:	50 91 a1 03 	lds	r21, 0x03A1	; 0x8003a1 <U_step+0x1>
     43c:	46 0f       	add	r20, r22
     43e:	57 1f       	adc	r21, r23
     440:	50 93 a1 03 	sts	0x03A1, r21	; 0x8003a1 <U_step+0x1>
     444:	40 93 a0 03 	sts	0x03A0, r20	; 0x8003a0 <U_step>
	V_step=V_step+incr;
     448:	20 91 75 03 	lds	r18, 0x0375	; 0x800375 <V_step>
     44c:	30 91 76 03 	lds	r19, 0x0376	; 0x800376 <V_step+0x1>
     450:	26 0f       	add	r18, r22
     452:	37 1f       	adc	r19, r23
     454:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     458:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step+incr;
     45c:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <W_step>
     460:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <W_step+0x1>
     464:	86 0f       	add	r24, r22
     466:	97 1f       	adc	r25, r23
     468:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     46c:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	if(U_step > SINE_TABLE_SZ)
     470:	49 36       	cpi	r20, 0x69	; 105
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	56 07       	cpc	r21, r22
     476:	2c f0       	brlt	.+10     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
	U_step = 0;
     478:	10 92 a1 03 	sts	0x03A1, r1	; 0x8003a1 <U_step+0x1>
     47c:	10 92 a0 03 	sts	0x03A0, r1	; 0x8003a0 <U_step>
     480:	08 c0       	rjmp	.+16     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
	if(U_step < 0)
     482:	55 23       	and	r21, r21
     484:	34 f4       	brge	.+12     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
	U_step = SINE_TABLE_SZ;
     486:	48 e6       	ldi	r20, 0x68	; 104
     488:	51 e0       	ldi	r21, 0x01	; 1
     48a:	50 93 a1 03 	sts	0x03A1, r21	; 0x8003a1 <U_step+0x1>
     48e:	40 93 a0 03 	sts	0x03A0, r20	; 0x8003a0 <U_step>
	
	if(V_step > SINE_TABLE_SZ)
     492:	29 36       	cpi	r18, 0x69	; 105
     494:	41 e0       	ldi	r20, 0x01	; 1
     496:	34 07       	cpc	r19, r20
     498:	2c f0       	brlt	.+10     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
	V_step = 0;
     49a:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <V_step+0x1>
     49e:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <V_step>
     4a2:	08 c0       	rjmp	.+16     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
	if(V_step < 0)
     4a4:	33 23       	and	r19, r19
     4a6:	34 f4       	brge	.+12     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
	V_step = SINE_TABLE_SZ;
     4a8:	28 e6       	ldi	r18, 0x68	; 104
     4aa:	31 e0       	ldi	r19, 0x01	; 1
     4ac:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     4b0:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     4b4:	89 36       	cpi	r24, 0x69	; 105
     4b6:	61 e0       	ldi	r22, 0x01	; 1
     4b8:	96 07       	cpc	r25, r22
     4ba:	2c f0       	brlt	.+10     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
	W_step = 0;
     4bc:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <W_step+0x1>
     4c0:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <W_step>
     4c4:	08 c0       	rjmp	.+16     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
	if(W_step < 0)
     4c6:	99 23       	and	r25, r25
     4c8:	34 f4       	brge	.+12     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
	W_step = SINE_TABLE_SZ;
     4ca:	88 e6       	ldi	r24, 0x68	; 104
     4cc:	91 e0       	ldi	r25, 0x01	; 1
     4ce:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     4d2:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	//printf("debug 0000000");
	INT_MOTOR_SPEED1=pwm_delay;
     4d6:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <pwm_delay>
     4da:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <pwm_delay+0x1>
     4de:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     4e2:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
}
     4e6:	1f 91       	pop	r17
     4e8:	0f 91       	pop	r16
     4ea:	ff 90       	pop	r15
     4ec:	ef 90       	pop	r14
     4ee:	df 90       	pop	r13
     4f0:	cf 90       	pop	r12
     4f2:	bf 90       	pop	r11
     4f4:	af 90       	pop	r10
     4f6:	9f 90       	pop	r9
     4f8:	8f 90       	pop	r8
     4fa:	08 95       	ret

000004fc <PWM_update_2>:
void PWM_update_2()//motor pwm update
{
	U1_PWM=pwmSin[U_step_2];
     4fc:	e0 91 9e 03 	lds	r30, 0x039E	; 0x80039e <__data_end>
     500:	f0 91 9f 03 	lds	r31, 0x039F	; 0x80039f <__data_end+0x1>
     504:	ea 5f       	subi	r30, 0xFA	; 250
     506:	fd 4f       	sbci	r31, 0xFD	; 253
     508:	80 81       	ld	r24, Z
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     510:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	V1_PWM=pwmSin[V_step_2];
     514:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step_2>
     518:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step_2+0x1>
     51c:	ea 5f       	subi	r30, 0xFA	; 250
     51e:	fd 4f       	sbci	r31, 0xFD	; 253
     520:	80 81       	ld	r24, Z
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     528:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
	W1_PWM=pwmSin[W_step_2];
     52c:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step_2>
     530:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step_2+0x1>
     534:	ea 5f       	subi	r30, 0xFA	; 250
     536:	fd 4f       	sbci	r31, 0xFD	; 253
     538:	80 81       	ld	r24, Z
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     540:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
	U_step_2=U_step_2+incr_2;
     544:	60 91 c3 03 	lds	r22, 0x03C3	; 0x8003c3 <incr_2>
     548:	70 91 c4 03 	lds	r23, 0x03C4	; 0x8003c4 <incr_2+0x1>
     54c:	40 91 9e 03 	lds	r20, 0x039E	; 0x80039e <__data_end>
     550:	50 91 9f 03 	lds	r21, 0x039F	; 0x80039f <__data_end+0x1>
     554:	46 0f       	add	r20, r22
     556:	57 1f       	adc	r21, r23
     558:	50 93 9f 03 	sts	0x039F, r21	; 0x80039f <__data_end+0x1>
     55c:	40 93 9e 03 	sts	0x039E, r20	; 0x80039e <__data_end>
	V_step_2=V_step_2+incr_2;
     560:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step_2>
     564:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step_2+0x1>
     568:	26 0f       	add	r18, r22
     56a:	37 1f       	adc	r19, r23
     56c:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     570:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_2+incr_2;
     574:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step_2>
     578:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step_2+0x1>
     57c:	86 0f       	add	r24, r22
     57e:	97 1f       	adc	r25, r23
     580:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     584:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	if(U_step_2 > SINE_TABLE_SZ)
     588:	49 36       	cpi	r20, 0x69	; 105
     58a:	61 e0       	ldi	r22, 0x01	; 1
     58c:	56 07       	cpc	r21, r22
     58e:	2c f0       	brlt	.+10     	; 0x59a <PWM_update_2+0x9e>
	U_step_2 = 0;
     590:	10 92 9f 03 	sts	0x039F, r1	; 0x80039f <__data_end+0x1>
     594:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <__data_end>
     598:	08 c0       	rjmp	.+16     	; 0x5aa <PWM_update_2+0xae>
	if(U_step_2 < 0)
     59a:	55 23       	and	r21, r21
     59c:	34 f4       	brge	.+12     	; 0x5aa <PWM_update_2+0xae>
	U_step_2 = SINE_TABLE_SZ;
     59e:	48 e6       	ldi	r20, 0x68	; 104
     5a0:	51 e0       	ldi	r21, 0x01	; 1
     5a2:	50 93 9f 03 	sts	0x039F, r21	; 0x80039f <__data_end+0x1>
     5a6:	40 93 9e 03 	sts	0x039E, r20	; 0x80039e <__data_end>
	
	if(V_step_2 > SINE_TABLE_SZ)
     5aa:	29 36       	cpi	r18, 0x69	; 105
     5ac:	41 e0       	ldi	r20, 0x01	; 1
     5ae:	34 07       	cpc	r19, r20
     5b0:	2c f0       	brlt	.+10     	; 0x5bc <PWM_update_2+0xc0>
	V_step_2 = 0;
     5b2:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step_2+0x1>
     5b6:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step_2>
     5ba:	08 c0       	rjmp	.+16     	; 0x5cc <PWM_update_2+0xd0>
	if(V_step_2 < 0)
     5bc:	33 23       	and	r19, r19
     5be:	34 f4       	brge	.+12     	; 0x5cc <PWM_update_2+0xd0>
	V_step = SINE_TABLE_SZ;
     5c0:	28 e6       	ldi	r18, 0x68	; 104
     5c2:	31 e0       	ldi	r19, 0x01	; 1
     5c4:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     5c8:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step_2 > SINE_TABLE_SZ)
     5cc:	89 36       	cpi	r24, 0x69	; 105
     5ce:	61 e0       	ldi	r22, 0x01	; 1
     5d0:	96 07       	cpc	r25, r22
     5d2:	2c f0       	brlt	.+10     	; 0x5de <PWM_update_2+0xe2>
	W_step_2 = 0;
     5d4:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step_2+0x1>
     5d8:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step_2>
     5dc:	08 c0       	rjmp	.+16     	; 0x5ee <PWM_update_2+0xf2>
	if(W_step_2< 0)
     5de:	99 23       	and	r25, r25
     5e0:	34 f4       	brge	.+12     	; 0x5ee <PWM_update_2+0xf2>
	W_step_2 = SINE_TABLE_SZ;
     5e2:	88 e6       	ldi	r24, 0x68	; 104
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     5ea:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	//_delay_us(100);
	INT_MOTOR_SPEED2=pwm_delay_2;
     5ee:	80 91 bb 03 	lds	r24, 0x03BB	; 0x8003bb <pwm_delay_2>
     5f2:	90 91 bc 03 	lds	r25, 0x03BC	; 0x8003bc <pwm_delay_2+0x1>
     5f6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     5fa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     5fe:	08 95       	ret

00000600 <init_motor_gpio>:
	//printf("oopooo");
}
void init_motor_gpio()
{
	//setting pin mode to output for motor 1 
	sbi(DDRH,3);//digital 6 OC4A
     600:	e1 e0       	ldi	r30, 0x01	; 1
     602:	f1 e0       	ldi	r31, 0x01	; 1
     604:	80 81       	ld	r24, Z
     606:	88 60       	ori	r24, 0x08	; 8
     608:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     60a:	80 81       	ld	r24, Z
     60c:	80 61       	ori	r24, 0x10	; 16
     60e:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     610:	80 81       	ld	r24, Z
     612:	80 62       	ori	r24, 0x20	; 32
     614:	80 83       	st	Z, r24
	
	sbi(DDRA,0);//digital 22 EN1
     616:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     618:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     61a:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     61c:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     61e:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     620:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     622:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     624:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     626:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     628:	47 9a       	sbi	0x08, 7	; 8
	
	
	//setting pin mode to output for motor 2
	sbi(DDRE,4);//digital 2 OC3B
     62a:	6c 9a       	sbi	0x0d, 4	; 13
	sbi(DDRE,5);//digital 3 OC3C
     62c:	6d 9a       	sbi	0x0d, 5	; 13
	sbi(DDRE,3);//digital 5 OC3A
     62e:	6b 9a       	sbi	0x0d, 3	; 13
	
	sbi(DDRC,5);//digital 32 EN1
     630:	3d 9a       	sbi	0x07, 5	; 7
	sbi(DDRC,3);//digital 34 EN2
     632:	3b 9a       	sbi	0x07, 3	; 7
	sbi(DDRC,1);//digital 36 EN3
     634:	39 9a       	sbi	0x07, 1	; 7
	sbi(DDRD,7);//digital 38 sleep
     636:	57 9a       	sbi	0x0a, 7	; 10
	sbi(DDRG,1);//digital 40 nf, see drv8313
     638:	99 9a       	sbi	0x13, 1	; 19
	
	sbi(PORTC,5);//sleep HIGH
     63a:	45 9a       	sbi	0x08, 5	; 8
	sbi(PORTC,3);//nf HIGH
     63c:	43 9a       	sbi	0x08, 3	; 8
	sbi(PORTC,1);//EN1 HIGH
     63e:	41 9a       	sbi	0x08, 1	; 8
	sbi(PORTD,7);//EN2 HIGH
     640:	5f 9a       	sbi	0x0b, 7	; 11
	sbi(PORTG,1);//EN3 HIGH
     642:	a1 9a       	sbi	0x14, 1	; 20
     644:	08 95       	ret

00000646 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     646:	4f 92       	push	r4
     648:	5f 92       	push	r5
     64a:	6f 92       	push	r6
     64c:	7f 92       	push	r7
     64e:	8f 92       	push	r8
     650:	9f 92       	push	r9
     652:	af 92       	push	r10
     654:	bf 92       	push	r11
     656:	cf 92       	push	r12
     658:	df 92       	push	r13
     65a:	ef 92       	push	r14
     65c:	ff 92       	push	r15
     65e:	0f 93       	push	r16
     660:	1f 93       	push	r17
     662:	cf 93       	push	r28
     664:	df 93       	push	r29
     666:	cd b7       	in	r28, 0x3d	; 61
     668:	de b7       	in	r29, 0x3e	; 62
     66a:	6c 97       	sbiw	r28, 0x1c	; 28
     66c:	0f b6       	in	r0, 0x3f	; 63
     66e:	f8 94       	cli
     670:	de bf       	out	0x3e, r29	; 62
     672:	0f be       	out	0x3f, r0	; 63
     674:	cd bf       	out	0x3d, r28	; 61
     676:	69 8b       	std	Y+17, r22	; 0x11
     678:	7a 8b       	std	Y+18, r23	; 0x12
     67a:	8b 8b       	std	Y+19, r24	; 0x13
     67c:	9c 8b       	std	Y+20, r25	; 0x14
     67e:	ca 01       	movw	r24, r20
     680:	b9 01       	movw	r22, r18
     682:	e9 82       	std	Y+1, r14	; 0x01
     684:	fa 82       	std	Y+2, r15	; 0x02
     686:	0b 83       	std	Y+3, r16	; 0x03
     688:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     68a:	c0 90 d3 03 	lds	r12, 0x03D3	; 0x8003d3 <bias>
     68e:	d0 90 d4 03 	lds	r13, 0x03D4	; 0x8003d4 <bias+0x1>
     692:	e0 90 d5 03 	lds	r14, 0x03D5	; 0x8003d5 <bias+0x2>
     696:	f0 90 d6 03 	lds	r15, 0x03D6	; 0x8003d6 <bias+0x3>
     69a:	a7 01       	movw	r20, r14
     69c:	96 01       	movw	r18, r12
     69e:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__subsf3>
     6a2:	60 93 cb 03 	sts	0x03CB, r22	; 0x8003cb <rate>
     6a6:	70 93 cc 03 	sts	0x03CC, r23	; 0x8003cc <rate+0x1>
     6aa:	80 93 cd 03 	sts	0x03CD, r24	; 0x8003cd <rate+0x2>
     6ae:	90 93 ce 03 	sts	0x03CE, r25	; 0x8003ce <rate+0x3>
	angle += dt * rate;
     6b2:	29 81       	ldd	r18, Y+1	; 0x01
     6b4:	3a 81       	ldd	r19, Y+2	; 0x02
     6b6:	4b 81       	ldd	r20, Y+3	; 0x03
     6b8:	5c 81       	ldd	r21, Y+4	; 0x04
     6ba:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     6be:	20 91 f7 03 	lds	r18, 0x03F7	; 0x8003f7 <angle>
     6c2:	30 91 f8 03 	lds	r19, 0x03F8	; 0x8003f8 <angle+0x1>
     6c6:	40 91 f9 03 	lds	r20, 0x03F9	; 0x8003f9 <angle+0x2>
     6ca:	50 91 fa 03 	lds	r21, 0x03FA	; 0x8003fa <angle+0x3>
     6ce:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__addsf3>
     6d2:	6d 8b       	std	Y+21, r22	; 0x15
     6d4:	7e 8b       	std	Y+22, r23	; 0x16
     6d6:	8f 8b       	std	Y+23, r24	; 0x17
     6d8:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     6da:	80 90 0f 04 	lds	r8, 0x040F	; 0x80040f <P+0xc>
     6de:	90 90 10 04 	lds	r9, 0x0410	; 0x800410 <P+0xd>
     6e2:	a0 90 11 04 	lds	r10, 0x0411	; 0x800411 <P+0xe>
     6e6:	b0 90 12 04 	lds	r11, 0x0412	; 0x800412 <P+0xf>
     6ea:	a5 01       	movw	r20, r10
     6ec:	94 01       	movw	r18, r8
     6ee:	69 81       	ldd	r22, Y+1	; 0x01
     6f0:	7a 81       	ldd	r23, Y+2	; 0x02
     6f2:	8b 81       	ldd	r24, Y+3	; 0x03
     6f4:	9c 81       	ldd	r25, Y+4	; 0x04
     6f6:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     6fa:	6d 83       	std	Y+5, r22	; 0x05
     6fc:	7e 83       	std	Y+6, r23	; 0x06
     6fe:	8f 83       	std	Y+7, r24	; 0x07
     700:	98 87       	std	Y+8, r25	; 0x08
     702:	40 90 07 04 	lds	r4, 0x0407	; 0x800407 <P+0x4>
     706:	50 90 08 04 	lds	r5, 0x0408	; 0x800408 <P+0x5>
     70a:	60 90 09 04 	lds	r6, 0x0409	; 0x800409 <P+0x6>
     70e:	70 90 0a 04 	lds	r7, 0x040A	; 0x80040a <P+0x7>
     712:	80 91 0b 04 	lds	r24, 0x040B	; 0x80040b <P+0x8>
     716:	90 91 0c 04 	lds	r25, 0x040C	; 0x80040c <P+0x9>
     71a:	a0 91 0d 04 	lds	r26, 0x040D	; 0x80040d <P+0xa>
     71e:	b0 91 0e 04 	lds	r27, 0x040E	; 0x80040e <P+0xb>
     722:	8d 87       	std	Y+13, r24	; 0x0d
     724:	9e 87       	std	Y+14, r25	; 0x0e
     726:	af 87       	std	Y+15, r26	; 0x0f
     728:	b8 8b       	std	Y+16, r27	; 0x10
     72a:	a3 01       	movw	r20, r6
     72c:	92 01       	movw	r18, r4
     72e:	6d 81       	ldd	r22, Y+5	; 0x05
     730:	7e 81       	ldd	r23, Y+6	; 0x06
     732:	8f 81       	ldd	r24, Y+7	; 0x07
     734:	98 85       	ldd	r25, Y+8	; 0x08
     736:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__subsf3>
     73a:	2d 85       	ldd	r18, Y+13	; 0x0d
     73c:	3e 85       	ldd	r19, Y+14	; 0x0e
     73e:	4f 85       	ldd	r20, Y+15	; 0x0f
     740:	58 89       	ldd	r21, Y+16	; 0x10
     742:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__subsf3>
     746:	20 91 cf 03 	lds	r18, 0x03CF	; 0x8003cf <Q_angle>
     74a:	30 91 d0 03 	lds	r19, 0x03D0	; 0x8003d0 <Q_angle+0x1>
     74e:	40 91 d1 03 	lds	r20, 0x03D1	; 0x8003d1 <Q_angle+0x2>
     752:	50 91 d2 03 	lds	r21, 0x03D2	; 0x8003d2 <Q_angle+0x3>
     756:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__addsf3>
     75a:	29 81       	ldd	r18, Y+1	; 0x01
     75c:	3a 81       	ldd	r19, Y+2	; 0x02
     75e:	4b 81       	ldd	r20, Y+3	; 0x03
     760:	5c 81       	ldd	r21, Y+4	; 0x04
     762:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     766:	a3 e0       	ldi	r26, 0x03	; 3
     768:	b4 e0       	ldi	r27, 0x04	; 4
     76a:	2d 91       	ld	r18, X+
     76c:	3d 91       	ld	r19, X+
     76e:	4d 91       	ld	r20, X+
     770:	5c 91       	ld	r21, X
     772:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__addsf3>
     776:	69 87       	std	Y+9, r22	; 0x09
     778:	7a 87       	std	Y+10, r23	; 0x0a
     77a:	8b 87       	std	Y+11, r24	; 0x0b
     77c:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     77e:	2d 81       	ldd	r18, Y+5	; 0x05
     780:	3e 81       	ldd	r19, Y+6	; 0x06
     782:	4f 81       	ldd	r20, Y+7	; 0x07
     784:	58 85       	ldd	r21, Y+8	; 0x08
     786:	c3 01       	movw	r24, r6
     788:	b2 01       	movw	r22, r4
     78a:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__subsf3>
     78e:	2b 01       	movw	r4, r22
     790:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     792:	2d 81       	ldd	r18, Y+5	; 0x05
     794:	3e 81       	ldd	r19, Y+6	; 0x06
     796:	4f 81       	ldd	r20, Y+7	; 0x07
     798:	58 85       	ldd	r21, Y+8	; 0x08
     79a:	6d 85       	ldd	r22, Y+13	; 0x0d
     79c:	7e 85       	ldd	r23, Y+14	; 0x0e
     79e:	8f 85       	ldd	r24, Y+15	; 0x0f
     7a0:	98 89       	ldd	r25, Y+16	; 0x10
     7a2:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__subsf3>
     7a6:	6d 87       	std	Y+13, r22	; 0x0d
     7a8:	7e 87       	std	Y+14, r23	; 0x0e
     7aa:	8f 87       	std	Y+15, r24	; 0x0f
     7ac:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     7ae:	20 91 c7 03 	lds	r18, 0x03C7	; 0x8003c7 <Q_bias>
     7b2:	30 91 c8 03 	lds	r19, 0x03C8	; 0x8003c8 <Q_bias+0x1>
     7b6:	40 91 c9 03 	lds	r20, 0x03C9	; 0x8003c9 <Q_bias+0x2>
     7ba:	50 91 ca 03 	lds	r21, 0x03CA	; 0x8003ca <Q_bias+0x3>
     7be:	69 81       	ldd	r22, Y+1	; 0x01
     7c0:	7a 81       	ldd	r23, Y+2	; 0x02
     7c2:	8b 81       	ldd	r24, Y+3	; 0x03
     7c4:	9c 81       	ldd	r25, Y+4	; 0x04
     7c6:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     7ca:	a5 01       	movw	r20, r10
     7cc:	94 01       	movw	r18, r8
     7ce:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__addsf3>
     7d2:	69 8f       	std	Y+25, r22	; 0x19
     7d4:	7a 8f       	std	Y+26, r23	; 0x1a
     7d6:	8b 8f       	std	Y+27, r24	; 0x1b
     7d8:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     7da:	20 91 ef 03 	lds	r18, 0x03EF	; 0x8003ef <R_measure>
     7de:	30 91 f0 03 	lds	r19, 0x03F0	; 0x8003f0 <R_measure+0x1>
     7e2:	40 91 f1 03 	lds	r20, 0x03F1	; 0x8003f1 <R_measure+0x2>
     7e6:	50 91 f2 03 	lds	r21, 0x03F2	; 0x8003f2 <R_measure+0x3>
     7ea:	69 85       	ldd	r22, Y+9	; 0x09
     7ec:	7a 85       	ldd	r23, Y+10	; 0x0a
     7ee:	8b 85       	ldd	r24, Y+11	; 0x0b
     7f0:	9c 85       	ldd	r25, Y+12	; 0x0c
     7f2:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__addsf3>
     7f6:	4b 01       	movw	r8, r22
     7f8:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     7fa:	9b 01       	movw	r18, r22
     7fc:	ac 01       	movw	r20, r24
     7fe:	69 85       	ldd	r22, Y+9	; 0x09
     800:	7a 85       	ldd	r23, Y+10	; 0x0a
     802:	8b 85       	ldd	r24, Y+11	; 0x0b
     804:	9c 85       	ldd	r25, Y+12	; 0x0c
     806:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__divsf3>
     80a:	69 83       	std	Y+1, r22	; 0x01
     80c:	7a 83       	std	Y+2, r23	; 0x02
     80e:	8b 83       	std	Y+3, r24	; 0x03
     810:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     812:	a5 01       	movw	r20, r10
     814:	94 01       	movw	r18, r8
     816:	6d 85       	ldd	r22, Y+13	; 0x0d
     818:	7e 85       	ldd	r23, Y+14	; 0x0e
     81a:	8f 85       	ldd	r24, Y+15	; 0x0f
     81c:	98 89       	ldd	r25, Y+16	; 0x10
     81e:	0e 94 30 0d 	call	0x1a60	; 0x1a60 <__divsf3>
     822:	6d 83       	std	Y+5, r22	; 0x05
     824:	7e 83       	std	Y+6, r23	; 0x06
     826:	8f 83       	std	Y+7, r24	; 0x07
     828:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     82a:	2d 89       	ldd	r18, Y+21	; 0x15
     82c:	3e 89       	ldd	r19, Y+22	; 0x16
     82e:	4f 89       	ldd	r20, Y+23	; 0x17
     830:	58 8d       	ldd	r21, Y+24	; 0x18
     832:	69 89       	ldd	r22, Y+17	; 0x11
     834:	7a 89       	ldd	r23, Y+18	; 0x12
     836:	8b 89       	ldd	r24, Y+19	; 0x13
     838:	9c 89       	ldd	r25, Y+20	; 0x14
     83a:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__subsf3>
     83e:	69 8b       	std	Y+17, r22	; 0x11
     840:	7a 8b       	std	Y+18, r23	; 0x12
     842:	8b 8b       	std	Y+19, r24	; 0x13
     844:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     846:	9b 01       	movw	r18, r22
     848:	ac 01       	movw	r20, r24
     84a:	69 81       	ldd	r22, Y+1	; 0x01
     84c:	7a 81       	ldd	r23, Y+2	; 0x02
     84e:	8b 81       	ldd	r24, Y+3	; 0x03
     850:	9c 81       	ldd	r25, Y+4	; 0x04
     852:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     856:	2d 89       	ldd	r18, Y+21	; 0x15
     858:	3e 89       	ldd	r19, Y+22	; 0x16
     85a:	4f 89       	ldd	r20, Y+23	; 0x17
     85c:	58 8d       	ldd	r21, Y+24	; 0x18
     85e:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__addsf3>
     862:	4b 01       	movw	r8, r22
     864:	5c 01       	movw	r10, r24
     866:	60 93 f7 03 	sts	0x03F7, r22	; 0x8003f7 <angle>
     86a:	70 93 f8 03 	sts	0x03F8, r23	; 0x8003f8 <angle+0x1>
     86e:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <angle+0x2>
     872:	90 93 fa 03 	sts	0x03FA, r25	; 0x8003fa <angle+0x3>
	bias += K[1] * y;
     876:	29 89       	ldd	r18, Y+17	; 0x11
     878:	3a 89       	ldd	r19, Y+18	; 0x12
     87a:	4b 89       	ldd	r20, Y+19	; 0x13
     87c:	5c 89       	ldd	r21, Y+20	; 0x14
     87e:	6d 81       	ldd	r22, Y+5	; 0x05
     880:	7e 81       	ldd	r23, Y+6	; 0x06
     882:	8f 81       	ldd	r24, Y+7	; 0x07
     884:	98 85       	ldd	r25, Y+8	; 0x08
     886:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     88a:	a7 01       	movw	r20, r14
     88c:	96 01       	movw	r18, r12
     88e:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__addsf3>
     892:	60 93 d3 03 	sts	0x03D3, r22	; 0x8003d3 <bias>
     896:	70 93 d4 03 	sts	0x03D4, r23	; 0x8003d4 <bias+0x1>
     89a:	80 93 d5 03 	sts	0x03D5, r24	; 0x8003d5 <bias+0x2>
     89e:	90 93 d6 03 	sts	0x03D6, r25	; 0x8003d6 <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     8a2:	29 81       	ldd	r18, Y+1	; 0x01
     8a4:	3a 81       	ldd	r19, Y+2	; 0x02
     8a6:	4b 81       	ldd	r20, Y+3	; 0x03
     8a8:	5c 81       	ldd	r21, Y+4	; 0x04
     8aa:	69 85       	ldd	r22, Y+9	; 0x09
     8ac:	7a 85       	ldd	r23, Y+10	; 0x0a
     8ae:	8b 85       	ldd	r24, Y+11	; 0x0b
     8b0:	9c 85       	ldd	r25, Y+12	; 0x0c
     8b2:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     8b6:	9b 01       	movw	r18, r22
     8b8:	ac 01       	movw	r20, r24
     8ba:	69 85       	ldd	r22, Y+9	; 0x09
     8bc:	7a 85       	ldd	r23, Y+10	; 0x0a
     8be:	8b 85       	ldd	r24, Y+11	; 0x0b
     8c0:	9c 85       	ldd	r25, Y+12	; 0x0c
     8c2:	0e 94 65 0c 	call	0x18ca	; 0x18ca <__subsf3>
     8c6:	e3 e0       	ldi	r30, 0x03	; 3
     8c8:	f4 e0       	ldi	r31, 0x04	; 4
     8ca:	60 83       	st	Z, r22
     8cc:	71 83       	std	Z+1, r23	; 0x01
     8ce:	82 83       	std	Z+2, r24	; 0x02
     8d0:	93 83       	std	Z+3, r25	; 0x03
	P[0][1] -= K[0] * P01_temp;
     8d2:	29 81       	ldd	r18, Y+1	; 0x01
     8d4:	3a 81       	ldd	r19, Y+2	; 0x02
     8d6:	4b 81       	ldd	r20, Y+3	; 0x03
     8d8:	5c 81       	ldd	r21, Y+4	; 0x04
     8da:	c3 01       	movw	r24, r6
     8dc:	b2 01       	movw	r22, r4
     8de:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     8e2:	9b 01       	movw	r18, r22
     8e4:	ac 01       	movw	r20, r24
     8e6:	c3 01       	movw	r24, r6
     8e8:	b2 01       	movw	r22, r4
     8ea:	ef d7       	rcall	.+4062   	; 0x18ca <__subsf3>
     8ec:	60 93 07 04 	sts	0x0407, r22	; 0x800407 <P+0x4>
     8f0:	70 93 08 04 	sts	0x0408, r23	; 0x800408 <P+0x5>
     8f4:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <P+0x6>
     8f8:	90 93 0a 04 	sts	0x040A, r25	; 0x80040a <P+0x7>
	P[1][0] -= K[1] * P00_temp;
     8fc:	2d 81       	ldd	r18, Y+5	; 0x05
     8fe:	3e 81       	ldd	r19, Y+6	; 0x06
     900:	4f 81       	ldd	r20, Y+7	; 0x07
     902:	58 85       	ldd	r21, Y+8	; 0x08
     904:	69 85       	ldd	r22, Y+9	; 0x09
     906:	7a 85       	ldd	r23, Y+10	; 0x0a
     908:	8b 85       	ldd	r24, Y+11	; 0x0b
     90a:	9c 85       	ldd	r25, Y+12	; 0x0c
     90c:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     910:	9b 01       	movw	r18, r22
     912:	ac 01       	movw	r20, r24
     914:	6d 85       	ldd	r22, Y+13	; 0x0d
     916:	7e 85       	ldd	r23, Y+14	; 0x0e
     918:	8f 85       	ldd	r24, Y+15	; 0x0f
     91a:	98 89       	ldd	r25, Y+16	; 0x10
     91c:	d6 d7       	rcall	.+4012   	; 0x18ca <__subsf3>
     91e:	60 93 0b 04 	sts	0x040B, r22	; 0x80040b <P+0x8>
     922:	70 93 0c 04 	sts	0x040C, r23	; 0x80040c <P+0x9>
     926:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <P+0xa>
     92a:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <P+0xb>
	P[1][1] -= K[1] * P01_temp;
     92e:	2d 81       	ldd	r18, Y+5	; 0x05
     930:	3e 81       	ldd	r19, Y+6	; 0x06
     932:	4f 81       	ldd	r20, Y+7	; 0x07
     934:	58 85       	ldd	r21, Y+8	; 0x08
     936:	c3 01       	movw	r24, r6
     938:	b2 01       	movw	r22, r4
     93a:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     93e:	9b 01       	movw	r18, r22
     940:	ac 01       	movw	r20, r24
     942:	69 8d       	ldd	r22, Y+25	; 0x19
     944:	7a 8d       	ldd	r23, Y+26	; 0x1a
     946:	8b 8d       	ldd	r24, Y+27	; 0x1b
     948:	9c 8d       	ldd	r25, Y+28	; 0x1c
     94a:	bf d7       	rcall	.+3966   	; 0x18ca <__subsf3>
     94c:	60 93 0f 04 	sts	0x040F, r22	; 0x80040f <P+0xc>
     950:	70 93 10 04 	sts	0x0410, r23	; 0x800410 <P+0xd>
     954:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <P+0xe>
     958:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <P+0xf>

	return angle;
};
     95c:	c5 01       	movw	r24, r10
     95e:	b4 01       	movw	r22, r8
     960:	6c 96       	adiw	r28, 0x1c	; 28
     962:	0f b6       	in	r0, 0x3f	; 63
     964:	f8 94       	cli
     966:	de bf       	out	0x3e, r29	; 62
     968:	0f be       	out	0x3f, r0	; 63
     96a:	cd bf       	out	0x3d, r28	; 61
     96c:	df 91       	pop	r29
     96e:	cf 91       	pop	r28
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	df 90       	pop	r13
     97a:	cf 90       	pop	r12
     97c:	bf 90       	pop	r11
     97e:	af 90       	pop	r10
     980:	9f 90       	pop	r9
     982:	8f 90       	pop	r8
     984:	7f 90       	pop	r7
     986:	6f 90       	pop	r6
     988:	5f 90       	pop	r5
     98a:	4f 90       	pop	r4
     98c:	08 95       	ret

0000098e <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     98e:	8f e6       	ldi	r24, 0x6F	; 111
     990:	92 e1       	ldi	r25, 0x12	; 18
     992:	a3 e8       	ldi	r26, 0x83	; 131
     994:	ba e3       	ldi	r27, 0x3A	; 58
     996:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <Q_angle>
     99a:	90 93 d0 03 	sts	0x03D0, r25	; 0x8003d0 <Q_angle+0x1>
     99e:	a0 93 d1 03 	sts	0x03D1, r26	; 0x8003d1 <Q_angle+0x2>
     9a2:	b0 93 d2 03 	sts	0x03D2, r27	; 0x8003d2 <Q_angle+0x3>
	Q_bias = 0.003f;
     9a6:	86 ea       	ldi	r24, 0xA6	; 166
     9a8:	9b e9       	ldi	r25, 0x9B	; 155
     9aa:	a4 e4       	ldi	r26, 0x44	; 68
     9ac:	bb e3       	ldi	r27, 0x3B	; 59
     9ae:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <Q_bias>
     9b2:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <Q_bias+0x1>
     9b6:	a0 93 c9 03 	sts	0x03C9, r26	; 0x8003c9 <Q_bias+0x2>
     9ba:	b0 93 ca 03 	sts	0x03CA, r27	; 0x8003ca <Q_bias+0x3>
	R_measure = 0.03f;
     9be:	8f e8       	ldi	r24, 0x8F	; 143
     9c0:	92 ec       	ldi	r25, 0xC2	; 194
     9c2:	a5 ef       	ldi	r26, 0xF5	; 245
     9c4:	bc e3       	ldi	r27, 0x3C	; 60
     9c6:	80 93 ef 03 	sts	0x03EF, r24	; 0x8003ef <R_measure>
     9ca:	90 93 f0 03 	sts	0x03F0, r25	; 0x8003f0 <R_measure+0x1>
     9ce:	a0 93 f1 03 	sts	0x03F1, r26	; 0x8003f1 <R_measure+0x2>
     9d2:	b0 93 f2 03 	sts	0x03F2, r27	; 0x8003f2 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     9d6:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <angle>
     9da:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <angle+0x1>
     9de:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <angle+0x2>
     9e2:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <angle+0x3>
	bias = 0.0f; // Reset bias
     9e6:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <bias>
     9ea:	10 92 d4 03 	sts	0x03D4, r1	; 0x8003d4 <bias+0x1>
     9ee:	10 92 d5 03 	sts	0x03D5, r1	; 0x8003d5 <bias+0x2>
     9f2:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     9f6:	e3 e0       	ldi	r30, 0x03	; 3
     9f8:	f4 e0       	ldi	r31, 0x04	; 4
     9fa:	10 82       	st	Z, r1
     9fc:	11 82       	std	Z+1, r1	; 0x01
     9fe:	12 82       	std	Z+2, r1	; 0x02
     a00:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     a02:	14 82       	std	Z+4, r1	; 0x04
     a04:	15 82       	std	Z+5, r1	; 0x05
     a06:	16 82       	std	Z+6, r1	; 0x06
     a08:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     a0a:	10 86       	std	Z+8, r1	; 0x08
     a0c:	11 86       	std	Z+9, r1	; 0x09
     a0e:	12 86       	std	Z+10, r1	; 0x0a
     a10:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     a12:	14 86       	std	Z+12, r1	; 0x0c
     a14:	15 86       	std	Z+13, r1	; 0x0d
     a16:	16 86       	std	Z+14, r1	; 0x0e
     a18:	17 86       	std	Z+15, r1	; 0x0f
     a1a:	08 95       	ret

00000a1c <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     a1c:	4f 92       	push	r4
     a1e:	5f 92       	push	r5
     a20:	6f 92       	push	r6
     a22:	7f 92       	push	r7
     a24:	8f 92       	push	r8
     a26:	9f 92       	push	r9
     a28:	af 92       	push	r10
     a2a:	bf 92       	push	r11
     a2c:	cf 92       	push	r12
     a2e:	df 92       	push	r13
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	6c 97       	sbiw	r28, 0x1c	; 28
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	f8 94       	cli
     a46:	de bf       	out	0x3e, r29	; 62
     a48:	0f be       	out	0x3f, r0	; 63
     a4a:	cd bf       	out	0x3d, r28	; 61
     a4c:	69 8b       	std	Y+17, r22	; 0x11
     a4e:	7a 8b       	std	Y+18, r23	; 0x12
     a50:	8b 8b       	std	Y+19, r24	; 0x13
     a52:	9c 8b       	std	Y+20, r25	; 0x14
     a54:	ca 01       	movw	r24, r20
     a56:	b9 01       	movw	r22, r18
     a58:	e9 82       	std	Y+1, r14	; 0x01
     a5a:	fa 82       	std	Y+2, r15	; 0x02
     a5c:	0b 83       	std	Y+3, r16	; 0x03
     a5e:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     a60:	c0 90 f3 03 	lds	r12, 0x03F3	; 0x8003f3 <bias_1>
     a64:	d0 90 f4 03 	lds	r13, 0x03F4	; 0x8003f4 <bias_1+0x1>
     a68:	e0 90 f5 03 	lds	r14, 0x03F5	; 0x8003f5 <bias_1+0x2>
     a6c:	f0 90 f6 03 	lds	r15, 0x03F6	; 0x8003f6 <bias_1+0x3>
     a70:	a7 01       	movw	r20, r14
     a72:	96 01       	movw	r18, r12
     a74:	2a d7       	rcall	.+3668   	; 0x18ca <__subsf3>
     a76:	60 93 eb 03 	sts	0x03EB, r22	; 0x8003eb <rate_1>
     a7a:	70 93 ec 03 	sts	0x03EC, r23	; 0x8003ec <rate_1+0x1>
     a7e:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <rate_1+0x2>
     a82:	90 93 ee 03 	sts	0x03EE, r25	; 0x8003ee <rate_1+0x3>
	angle_1 += dt * rate_1;
     a86:	29 81       	ldd	r18, Y+1	; 0x01
     a88:	3a 81       	ldd	r19, Y+2	; 0x02
     a8a:	4b 81       	ldd	r20, Y+3	; 0x03
     a8c:	5c 81       	ldd	r21, Y+4	; 0x04
     a8e:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     a92:	20 91 d7 03 	lds	r18, 0x03D7	; 0x8003d7 <angle_1>
     a96:	30 91 d8 03 	lds	r19, 0x03D8	; 0x8003d8 <angle_1+0x1>
     a9a:	40 91 d9 03 	lds	r20, 0x03D9	; 0x8003d9 <angle_1+0x2>
     a9e:	50 91 da 03 	lds	r21, 0x03DA	; 0x8003da <angle_1+0x3>
     aa2:	14 d7       	rcall	.+3624   	; 0x18cc <__addsf3>
     aa4:	6d 8b       	std	Y+21, r22	; 0x15
     aa6:	7e 8b       	std	Y+22, r23	; 0x16
     aa8:	8f 8b       	std	Y+23, r24	; 0x17
     aaa:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     aac:	80 90 e7 03 	lds	r8, 0x03E7	; 0x8003e7 <P_1+0xc>
     ab0:	90 90 e8 03 	lds	r9, 0x03E8	; 0x8003e8 <P_1+0xd>
     ab4:	a0 90 e9 03 	lds	r10, 0x03E9	; 0x8003e9 <P_1+0xe>
     ab8:	b0 90 ea 03 	lds	r11, 0x03EA	; 0x8003ea <P_1+0xf>
     abc:	a5 01       	movw	r20, r10
     abe:	94 01       	movw	r18, r8
     ac0:	69 81       	ldd	r22, Y+1	; 0x01
     ac2:	7a 81       	ldd	r23, Y+2	; 0x02
     ac4:	8b 81       	ldd	r24, Y+3	; 0x03
     ac6:	9c 81       	ldd	r25, Y+4	; 0x04
     ac8:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     acc:	6d 83       	std	Y+5, r22	; 0x05
     ace:	7e 83       	std	Y+6, r23	; 0x06
     ad0:	8f 83       	std	Y+7, r24	; 0x07
     ad2:	98 87       	std	Y+8, r25	; 0x08
     ad4:	40 90 df 03 	lds	r4, 0x03DF	; 0x8003df <P_1+0x4>
     ad8:	50 90 e0 03 	lds	r5, 0x03E0	; 0x8003e0 <P_1+0x5>
     adc:	60 90 e1 03 	lds	r6, 0x03E1	; 0x8003e1 <P_1+0x6>
     ae0:	70 90 e2 03 	lds	r7, 0x03E2	; 0x8003e2 <P_1+0x7>
     ae4:	80 91 e3 03 	lds	r24, 0x03E3	; 0x8003e3 <P_1+0x8>
     ae8:	90 91 e4 03 	lds	r25, 0x03E4	; 0x8003e4 <P_1+0x9>
     aec:	a0 91 e5 03 	lds	r26, 0x03E5	; 0x8003e5 <P_1+0xa>
     af0:	b0 91 e6 03 	lds	r27, 0x03E6	; 0x8003e6 <P_1+0xb>
     af4:	8d 87       	std	Y+13, r24	; 0x0d
     af6:	9e 87       	std	Y+14, r25	; 0x0e
     af8:	af 87       	std	Y+15, r26	; 0x0f
     afa:	b8 8b       	std	Y+16, r27	; 0x10
     afc:	a3 01       	movw	r20, r6
     afe:	92 01       	movw	r18, r4
     b00:	6d 81       	ldd	r22, Y+5	; 0x05
     b02:	7e 81       	ldd	r23, Y+6	; 0x06
     b04:	8f 81       	ldd	r24, Y+7	; 0x07
     b06:	98 85       	ldd	r25, Y+8	; 0x08
     b08:	e0 d6       	rcall	.+3520   	; 0x18ca <__subsf3>
     b0a:	2d 85       	ldd	r18, Y+13	; 0x0d
     b0c:	3e 85       	ldd	r19, Y+14	; 0x0e
     b0e:	4f 85       	ldd	r20, Y+15	; 0x0f
     b10:	58 89       	ldd	r21, Y+16	; 0x10
     b12:	db d6       	rcall	.+3510   	; 0x18ca <__subsf3>
     b14:	20 91 13 04 	lds	r18, 0x0413	; 0x800413 <Q_angle_1>
     b18:	30 91 14 04 	lds	r19, 0x0414	; 0x800414 <Q_angle_1+0x1>
     b1c:	40 91 15 04 	lds	r20, 0x0415	; 0x800415 <Q_angle_1+0x2>
     b20:	50 91 16 04 	lds	r21, 0x0416	; 0x800416 <Q_angle_1+0x3>
     b24:	d3 d6       	rcall	.+3494   	; 0x18cc <__addsf3>
     b26:	29 81       	ldd	r18, Y+1	; 0x01
     b28:	3a 81       	ldd	r19, Y+2	; 0x02
     b2a:	4b 81       	ldd	r20, Y+3	; 0x03
     b2c:	5c 81       	ldd	r21, Y+4	; 0x04
     b2e:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     b32:	ab ed       	ldi	r26, 0xDB	; 219
     b34:	b3 e0       	ldi	r27, 0x03	; 3
     b36:	2d 91       	ld	r18, X+
     b38:	3d 91       	ld	r19, X+
     b3a:	4d 91       	ld	r20, X+
     b3c:	5c 91       	ld	r21, X
     b3e:	c6 d6       	rcall	.+3468   	; 0x18cc <__addsf3>
     b40:	69 87       	std	Y+9, r22	; 0x09
     b42:	7a 87       	std	Y+10, r23	; 0x0a
     b44:	8b 87       	std	Y+11, r24	; 0x0b
	P_1[0][1] -= dt * P_1[1][1];
     b46:	9c 87       	std	Y+12, r25	; 0x0c
     b48:	2d 81       	ldd	r18, Y+5	; 0x05
     b4a:	3e 81       	ldd	r19, Y+6	; 0x06
     b4c:	4f 81       	ldd	r20, Y+7	; 0x07
     b4e:	58 85       	ldd	r21, Y+8	; 0x08
     b50:	c3 01       	movw	r24, r6
     b52:	b2 01       	movw	r22, r4
     b54:	ba d6       	rcall	.+3444   	; 0x18ca <__subsf3>
     b56:	2b 01       	movw	r4, r22
	P_1[1][0] -= dt * P_1[1][1];
     b58:	3c 01       	movw	r6, r24
     b5a:	2d 81       	ldd	r18, Y+5	; 0x05
     b5c:	3e 81       	ldd	r19, Y+6	; 0x06
     b5e:	4f 81       	ldd	r20, Y+7	; 0x07
     b60:	58 85       	ldd	r21, Y+8	; 0x08
     b62:	6d 85       	ldd	r22, Y+13	; 0x0d
     b64:	7e 85       	ldd	r23, Y+14	; 0x0e
     b66:	8f 85       	ldd	r24, Y+15	; 0x0f
     b68:	98 89       	ldd	r25, Y+16	; 0x10
     b6a:	af d6       	rcall	.+3422   	; 0x18ca <__subsf3>
     b6c:	6d 87       	std	Y+13, r22	; 0x0d
     b6e:	7e 87       	std	Y+14, r23	; 0x0e
     b70:	8f 87       	std	Y+15, r24	; 0x0f
	P_1[1][1] += Q_bias_1 * dt;
     b72:	98 8b       	std	Y+16, r25	; 0x10
     b74:	20 91 ff 03 	lds	r18, 0x03FF	; 0x8003ff <Q_bias_1>
     b78:	30 91 00 04 	lds	r19, 0x0400	; 0x800400 <Q_bias_1+0x1>
     b7c:	40 91 01 04 	lds	r20, 0x0401	; 0x800401 <Q_bias_1+0x2>
     b80:	50 91 02 04 	lds	r21, 0x0402	; 0x800402 <Q_bias_1+0x3>
     b84:	69 81       	ldd	r22, Y+1	; 0x01
     b86:	7a 81       	ldd	r23, Y+2	; 0x02
     b88:	8b 81       	ldd	r24, Y+3	; 0x03
     b8a:	9c 81       	ldd	r25, Y+4	; 0x04
     b8c:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     b90:	a5 01       	movw	r20, r10
     b92:	94 01       	movw	r18, r8
     b94:	9b d6       	rcall	.+3382   	; 0x18cc <__addsf3>
     b96:	69 8f       	std	Y+25, r22	; 0x19
     b98:	7a 8f       	std	Y+26, r23	; 0x1a
     b9a:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     b9c:	9c 8f       	std	Y+28, r25	; 0x1c
     b9e:	20 91 fb 03 	lds	r18, 0x03FB	; 0x8003fb <R_measure_1>
     ba2:	30 91 fc 03 	lds	r19, 0x03FC	; 0x8003fc <R_measure_1+0x1>
     ba6:	40 91 fd 03 	lds	r20, 0x03FD	; 0x8003fd <R_measure_1+0x2>
     baa:	50 91 fe 03 	lds	r21, 0x03FE	; 0x8003fe <R_measure_1+0x3>
     bae:	69 85       	ldd	r22, Y+9	; 0x09
     bb0:	7a 85       	ldd	r23, Y+10	; 0x0a
     bb2:	8b 85       	ldd	r24, Y+11	; 0x0b
     bb4:	9c 85       	ldd	r25, Y+12	; 0x0c
     bb6:	8a d6       	rcall	.+3348   	; 0x18cc <__addsf3>
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     bb8:	4b 01       	movw	r8, r22
     bba:	5c 01       	movw	r10, r24
     bbc:	9b 01       	movw	r18, r22
     bbe:	ac 01       	movw	r20, r24
     bc0:	69 85       	ldd	r22, Y+9	; 0x09
     bc2:	7a 85       	ldd	r23, Y+10	; 0x0a
     bc4:	8b 85       	ldd	r24, Y+11	; 0x0b
     bc6:	9c 85       	ldd	r25, Y+12	; 0x0c
     bc8:	4b d7       	rcall	.+3734   	; 0x1a60 <__divsf3>
     bca:	69 83       	std	Y+1, r22	; 0x01
     bcc:	7a 83       	std	Y+2, r23	; 0x02
	K_1[1] = P_1[1][0] / S_1;
     bce:	8b 83       	std	Y+3, r24	; 0x03
     bd0:	9c 83       	std	Y+4, r25	; 0x04
     bd2:	a5 01       	movw	r20, r10
     bd4:	94 01       	movw	r18, r8
     bd6:	6d 85       	ldd	r22, Y+13	; 0x0d
     bd8:	7e 85       	ldd	r23, Y+14	; 0x0e
     bda:	8f 85       	ldd	r24, Y+15	; 0x0f
     bdc:	98 89       	ldd	r25, Y+16	; 0x10
     bde:	40 d7       	rcall	.+3712   	; 0x1a60 <__divsf3>
     be0:	6d 83       	std	Y+5, r22	; 0x05
     be2:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     be4:	8f 83       	std	Y+7, r24	; 0x07
     be6:	98 87       	std	Y+8, r25	; 0x08
     be8:	2d 89       	ldd	r18, Y+21	; 0x15
     bea:	3e 89       	ldd	r19, Y+22	; 0x16
     bec:	4f 89       	ldd	r20, Y+23	; 0x17
     bee:	58 8d       	ldd	r21, Y+24	; 0x18
     bf0:	69 89       	ldd	r22, Y+17	; 0x11
     bf2:	7a 89       	ldd	r23, Y+18	; 0x12
     bf4:	8b 89       	ldd	r24, Y+19	; 0x13
     bf6:	9c 89       	ldd	r25, Y+20	; 0x14
     bf8:	68 d6       	rcall	.+3280   	; 0x18ca <__subsf3>
     bfa:	69 8b       	std	Y+17, r22	; 0x11
     bfc:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     bfe:	8b 8b       	std	Y+19, r24	; 0x13
     c00:	9c 8b       	std	Y+20, r25	; 0x14
     c02:	9b 01       	movw	r18, r22
     c04:	ac 01       	movw	r20, r24
     c06:	69 81       	ldd	r22, Y+1	; 0x01
     c08:	7a 81       	ldd	r23, Y+2	; 0x02
     c0a:	8b 81       	ldd	r24, Y+3	; 0x03
     c0c:	9c 81       	ldd	r25, Y+4	; 0x04
     c0e:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     c12:	2d 89       	ldd	r18, Y+21	; 0x15
     c14:	3e 89       	ldd	r19, Y+22	; 0x16
     c16:	4f 89       	ldd	r20, Y+23	; 0x17
     c18:	58 8d       	ldd	r21, Y+24	; 0x18
     c1a:	58 d6       	rcall	.+3248   	; 0x18cc <__addsf3>
     c1c:	4b 01       	movw	r8, r22
     c1e:	5c 01       	movw	r10, r24
     c20:	60 93 d7 03 	sts	0x03D7, r22	; 0x8003d7 <angle_1>
     c24:	70 93 d8 03 	sts	0x03D8, r23	; 0x8003d8 <angle_1+0x1>
     c28:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <angle_1+0x2>
	bias_1 += K_1[1] * y_1;
     c2c:	90 93 da 03 	sts	0x03DA, r25	; 0x8003da <angle_1+0x3>
     c30:	29 89       	ldd	r18, Y+17	; 0x11
     c32:	3a 89       	ldd	r19, Y+18	; 0x12
     c34:	4b 89       	ldd	r20, Y+19	; 0x13
     c36:	5c 89       	ldd	r21, Y+20	; 0x14
     c38:	6d 81       	ldd	r22, Y+5	; 0x05
     c3a:	7e 81       	ldd	r23, Y+6	; 0x06
     c3c:	8f 81       	ldd	r24, Y+7	; 0x07
     c3e:	98 85       	ldd	r25, Y+8	; 0x08
     c40:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     c44:	a7 01       	movw	r20, r14
     c46:	96 01       	movw	r18, r12
     c48:	41 d6       	rcall	.+3202   	; 0x18cc <__addsf3>
     c4a:	60 93 f3 03 	sts	0x03F3, r22	; 0x8003f3 <bias_1>
     c4e:	70 93 f4 03 	sts	0x03F4, r23	; 0x8003f4 <bias_1+0x1>
     c52:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <bias_1+0x2>
     c56:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <bias_1+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     c5a:	29 81       	ldd	r18, Y+1	; 0x01
     c5c:	3a 81       	ldd	r19, Y+2	; 0x02
     c5e:	4b 81       	ldd	r20, Y+3	; 0x03
     c60:	5c 81       	ldd	r21, Y+4	; 0x04
     c62:	69 85       	ldd	r22, Y+9	; 0x09
     c64:	7a 85       	ldd	r23, Y+10	; 0x0a
     c66:	8b 85       	ldd	r24, Y+11	; 0x0b
     c68:	9c 85       	ldd	r25, Y+12	; 0x0c
     c6a:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     c6e:	9b 01       	movw	r18, r22
     c70:	ac 01       	movw	r20, r24
     c72:	69 85       	ldd	r22, Y+9	; 0x09
     c74:	7a 85       	ldd	r23, Y+10	; 0x0a
     c76:	8b 85       	ldd	r24, Y+11	; 0x0b
     c78:	9c 85       	ldd	r25, Y+12	; 0x0c
     c7a:	27 d6       	rcall	.+3150   	; 0x18ca <__subsf3>
     c7c:	eb ed       	ldi	r30, 0xDB	; 219
     c7e:	f3 e0       	ldi	r31, 0x03	; 3
     c80:	60 83       	st	Z, r22
     c82:	71 83       	std	Z+1, r23	; 0x01
	P_1[0][1] -= K_1[0] * P01_temp_1;
     c84:	82 83       	std	Z+2, r24	; 0x02
     c86:	93 83       	std	Z+3, r25	; 0x03
     c88:	29 81       	ldd	r18, Y+1	; 0x01
     c8a:	3a 81       	ldd	r19, Y+2	; 0x02
     c8c:	4b 81       	ldd	r20, Y+3	; 0x03
     c8e:	5c 81       	ldd	r21, Y+4	; 0x04
     c90:	c3 01       	movw	r24, r6
     c92:	b2 01       	movw	r22, r4
     c94:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     c98:	9b 01       	movw	r18, r22
     c9a:	ac 01       	movw	r20, r24
     c9c:	c3 01       	movw	r24, r6
     c9e:	b2 01       	movw	r22, r4
     ca0:	14 d6       	rcall	.+3112   	; 0x18ca <__subsf3>
     ca2:	60 93 df 03 	sts	0x03DF, r22	; 0x8003df <P_1+0x4>
     ca6:	70 93 e0 03 	sts	0x03E0, r23	; 0x8003e0 <P_1+0x5>
     caa:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <P_1+0x6>
	P_1[1][0] -= K_1[1] * P00_temp_1;
     cae:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <P_1+0x7>
     cb2:	2d 81       	ldd	r18, Y+5	; 0x05
     cb4:	3e 81       	ldd	r19, Y+6	; 0x06
     cb6:	4f 81       	ldd	r20, Y+7	; 0x07
     cb8:	58 85       	ldd	r21, Y+8	; 0x08
     cba:	69 85       	ldd	r22, Y+9	; 0x09
     cbc:	7a 85       	ldd	r23, Y+10	; 0x0a
     cbe:	8b 85       	ldd	r24, Y+11	; 0x0b
     cc0:	9c 85       	ldd	r25, Y+12	; 0x0c
     cc2:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     cc6:	9b 01       	movw	r18, r22
     cc8:	ac 01       	movw	r20, r24
     cca:	6d 85       	ldd	r22, Y+13	; 0x0d
     ccc:	7e 85       	ldd	r23, Y+14	; 0x0e
     cce:	8f 85       	ldd	r24, Y+15	; 0x0f
     cd0:	98 89       	ldd	r25, Y+16	; 0x10
     cd2:	fb d5       	rcall	.+3062   	; 0x18ca <__subsf3>
     cd4:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <P_1+0x8>
     cd8:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <P_1+0x9>
     cdc:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <P_1+0xa>
	P_1[1][1] -= K_1[1] * P01_temp_1;
     ce0:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <P_1+0xb>
     ce4:	2d 81       	ldd	r18, Y+5	; 0x05
     ce6:	3e 81       	ldd	r19, Y+6	; 0x06
     ce8:	4f 81       	ldd	r20, Y+7	; 0x07
     cea:	58 85       	ldd	r21, Y+8	; 0x08
     cec:	c3 01       	movw	r24, r6
     cee:	b2 01       	movw	r22, r4
     cf0:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__mulsf3>
     cf4:	9b 01       	movw	r18, r22
     cf6:	ac 01       	movw	r20, r24
     cf8:	69 8d       	ldd	r22, Y+25	; 0x19
     cfa:	7a 8d       	ldd	r23, Y+26	; 0x1a
     cfc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cfe:	9c 8d       	ldd	r25, Y+28	; 0x1c
     d00:	e4 d5       	rcall	.+3016   	; 0x18ca <__subsf3>
     d02:	60 93 e7 03 	sts	0x03E7, r22	; 0x8003e7 <P_1+0xc>
     d06:	70 93 e8 03 	sts	0x03E8, r23	; 0x8003e8 <P_1+0xd>
     d0a:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <P_1+0xe>
     d0e:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <P_1+0xf>

	return angle_1;
};
     d12:	c5 01       	movw	r24, r10
     d14:	b4 01       	movw	r22, r8
     d16:	6c 96       	adiw	r28, 0x1c	; 28
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	de bf       	out	0x3e, r29	; 62
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	cd bf       	out	0x3d, r28	; 61
     d22:	df 91       	pop	r29
     d24:	cf 91       	pop	r28
     d26:	1f 91       	pop	r17
     d28:	0f 91       	pop	r16
     d2a:	ff 90       	pop	r15
     d2c:	ef 90       	pop	r14
     d2e:	df 90       	pop	r13
     d30:	cf 90       	pop	r12
     d32:	bf 90       	pop	r11
     d34:	af 90       	pop	r10
     d36:	9f 90       	pop	r9
     d38:	8f 90       	pop	r8
     d3a:	7f 90       	pop	r7
     d3c:	6f 90       	pop	r6
     d3e:	5f 90       	pop	r5
     d40:	4f 90       	pop	r4
     d42:	08 95       	ret

00000d44 <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     d44:	8f e6       	ldi	r24, 0x6F	; 111
     d46:	92 e1       	ldi	r25, 0x12	; 18
     d48:	a3 e8       	ldi	r26, 0x83	; 131
     d4a:	ba e3       	ldi	r27, 0x3A	; 58
     d4c:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <Q_angle_1>
     d50:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <Q_angle_1+0x1>
     d54:	a0 93 15 04 	sts	0x0415, r26	; 0x800415 <Q_angle_1+0x2>
     d58:	b0 93 16 04 	sts	0x0416, r27	; 0x800416 <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     d5c:	86 ea       	ldi	r24, 0xA6	; 166
     d5e:	9b e9       	ldi	r25, 0x9B	; 155
     d60:	a4 e4       	ldi	r26, 0x44	; 68
     d62:	bb e3       	ldi	r27, 0x3B	; 59
     d64:	80 93 ff 03 	sts	0x03FF, r24	; 0x8003ff <Q_bias_1>
     d68:	90 93 00 04 	sts	0x0400, r25	; 0x800400 <Q_bias_1+0x1>
     d6c:	a0 93 01 04 	sts	0x0401, r26	; 0x800401 <Q_bias_1+0x2>
     d70:	b0 93 02 04 	sts	0x0402, r27	; 0x800402 <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     d74:	8f e8       	ldi	r24, 0x8F	; 143
     d76:	92 ec       	ldi	r25, 0xC2	; 194
     d78:	a5 ef       	ldi	r26, 0xF5	; 245
     d7a:	bc e3       	ldi	r27, 0x3C	; 60
     d7c:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <R_measure_1>
     d80:	90 93 fc 03 	sts	0x03FC, r25	; 0x8003fc <R_measure_1+0x1>
     d84:	a0 93 fd 03 	sts	0x03FD, r26	; 0x8003fd <R_measure_1+0x2>
     d88:	b0 93 fe 03 	sts	0x03FE, r27	; 0x8003fe <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     d8c:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <angle_1>
     d90:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <angle_1+0x1>
     d94:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <angle_1+0x2>
     d98:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     d9c:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <bias_1>
     da0:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <bias_1+0x1>
     da4:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <bias_1+0x2>
     da8:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     dac:	eb ed       	ldi	r30, 0xDB	; 219
     dae:	f3 e0       	ldi	r31, 0x03	; 3
     db0:	10 82       	st	Z, r1
     db2:	11 82       	std	Z+1, r1	; 0x01
     db4:	12 82       	std	Z+2, r1	; 0x02
     db6:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     db8:	14 82       	std	Z+4, r1	; 0x04
     dba:	15 82       	std	Z+5, r1	; 0x05
     dbc:	16 82       	std	Z+6, r1	; 0x06
     dbe:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     dc0:	10 86       	std	Z+8, r1	; 0x08
     dc2:	11 86       	std	Z+9, r1	; 0x09
     dc4:	12 86       	std	Z+10, r1	; 0x0a
     dc6:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     dc8:	14 86       	std	Z+12, r1	; 0x0c
     dca:	15 86       	std	Z+13, r1	; 0x0d
     dcc:	16 86       	std	Z+14, r1	; 0x0e
     dce:	17 86       	std	Z+15, r1	; 0x0f
     dd0:	08 95       	ret

00000dd2 <main>:
uint8_t buffer[14];
bool loop_bool=true;
unsigned char receiveData;
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     dd2:	cf 93       	push	r28
     dd4:	df 93       	push	r29
     dd6:	cd b7       	in	r28, 0x3d	; 61
     dd8:	de b7       	in	r29, 0x3e	; 62
     dda:	6c 97       	sbiw	r28, 0x1c	; 28
     ddc:	0f b6       	in	r0, 0x3f	; 63
     dde:	f8 94       	cli
     de0:	de bf       	out	0x3e, r29	; 62
     de2:	0f be       	out	0x3f, r0	; 63
     de4:	cd bf       	out	0x3d, r28	; 61
	//variableInit();
	U_step=U_step_predefine;
     de6:	10 92 a1 03 	sts	0x03A1, r1	; 0x8003a1 <U_step+0x1>
     dea:	10 92 a0 03 	sts	0x03A0, r1	; 0x8003a0 <U_step>
	V_step=V_step_predefine;
     dee:	28 e7       	ldi	r18, 0x78	; 120
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     df6:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step_predefine;
     dfa:	80 ef       	ldi	r24, 0xF0	; 240
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     e02:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	U_step_2=U_step_predefine;
     e06:	10 92 9f 03 	sts	0x039F, r1	; 0x80039f <__data_end+0x1>
     e0a:	10 92 9e 03 	sts	0x039E, r1	; 0x80039e <__data_end>
	V_step_2=V_step_predefine;
     e0e:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     e12:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_predefine;
     e16:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     e1a:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	incr=-1;
     e1e:	8f ef       	ldi	r24, 0xFF	; 255
     e20:	9f ef       	ldi	r25, 0xFF	; 255
     e22:	90 93 c6 03 	sts	0x03C6, r25	; 0x8003c6 <incr+0x1>
     e26:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <incr>
	incr_2=-1;
     e2a:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <incr_2+0x1>
     e2e:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <incr_2>
	pwm_delay=25000;
     e32:	88 ea       	ldi	r24, 0xA8	; 168
     e34:	91 e6       	ldi	r25, 0x61	; 97
     e36:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <pwm_delay+0x1>
     e3a:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <pwm_delay>
	pwm_delay_2=32000;
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	9d e7       	ldi	r25, 0x7D	; 125
     e42:	90 93 bc 03 	sts	0x03BC, r25	; 0x8003bc <pwm_delay_2+0x1>
     e46:	80 93 bb 03 	sts	0x03BB, r24	; 0x8003bb <pwm_delay_2>
	cli();
	init_gpio();
     e4a:	f8 94       	cli
     e4c:	04 da       	rcall	.-3064   	; 0x256 <init_gpio>
     e4e:	d8 db       	rcall	.-2128   	; 0x600 <init_motor_gpio>
     e50:	14 d4       	rcall	.+2088   	; 0x167a <i2c_init>
     e52:	83 e0       	ldi	r24, 0x03	; 3
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	c2 d4       	rcall	.+2436   	; 0x17dc <USART_Init>
     e58:	60 e0       	ldi	r22, 0x00	; 0
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	89 ef       	ldi	r24, 0xF9	; 249
     e5e:	9b e0       	ldi	r25, 0x0B	; 11
     e60:	0e 94 06 14 	call	0x280c	; 0x280c <fdevopen>
     e64:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <uart_str+0x1>
     e68:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <uart_str>
     e6c:	39 d3       	rcall	.+1650   	; 0x14e0 <setup_timer0>
     e6e:	3f d3       	rcall	.+1662   	; 0x14ee <Enable_timer0_overflow_interrupt>
     e70:	f7 d2       	rcall	.+1518   	; 0x1460 <setup_timer4>
     e72:	0a d3       	rcall	.+1556   	; 0x1488 <setup_timer3>
     e74:	1d d3       	rcall	.+1594   	; 0x14b0 <setup_timer5>
     e76:	25 d3       	rcall	.+1610   	; 0x14c2 <Enable_timer5_compare_interrupt>
     e78:	2a d3       	rcall	.+1620   	; 0x14ce <setup_timer1>
     e7a:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <pwm_delay>
     e7e:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <pwm_delay+0x1>
     e82:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     e86:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     e8a:	80 91 bb 03 	lds	r24, 0x03BB	; 0x8003bb <pwm_delay_2>
     e8e:	90 91 bc 03 	lds	r25, 0x03BC	; 0x8003bc <pwm_delay_2+0x1>
     e92:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     e96:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     e9a:	2f d3       	rcall	.+1630   	; 0x14fa <micros>
     e9c:	1b 01       	movw	r2, r22
     e9e:	2c 01       	movw	r4, r24
     ea0:	67 e0       	ldi	r22, 0x07	; 7
     ea2:	89 e1       	ldi	r24, 0x19	; 25
     ea4:	8c d1       	rcall	.+792    	; 0x11be <mpu6050_writeByte>
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	8a e1       	ldi	r24, 0x1A	; 26
     eaa:	89 d1       	rcall	.+786    	; 0x11be <mpu6050_writeByte>
     eac:	68 e0       	ldi	r22, 0x08	; 8
     eae:	8b e1       	ldi	r24, 0x1B	; 27
     eb0:	86 d1       	rcall	.+780    	; 0x11be <mpu6050_writeByte>
     eb2:	60 e1       	ldi	r22, 0x10	; 16
     eb4:	8c e1       	ldi	r24, 0x1C	; 28
     eb6:	83 d1       	rcall	.+774    	; 0x11be <mpu6050_writeByte>
     eb8:	61 e0       	ldi	r22, 0x01	; 1
     eba:	8b e6       	ldi	r24, 0x6B	; 107
     ebc:	80 d1       	rcall	.+768    	; 0x11be <mpu6050_writeByte>
     ebe:	67 dd       	rcall	.-1330   	; 0x98e <Kalman_init>
     ec0:	41 df       	rcall	.-382    	; 0xd44 <Kalman_init_1>
     ec2:	2f ef       	ldi	r18, 0xFF	; 255
     ec4:	81 ee       	ldi	r24, 0xE1	; 225
     ec6:	94 e0       	ldi	r25, 0x04	; 4
     ec8:	21 50       	subi	r18, 0x01	; 1
     eca:	80 40       	sbci	r24, 0x00	; 0
     ecc:	90 40       	sbci	r25, 0x00	; 0
     ece:	e1 f7       	brne	.-8      	; 0xec8 <main+0xf6>
     ed0:	00 c0       	rjmp	.+0      	; 0xed2 <main+0x100>
     ed2:	00 00       	nop
     ed4:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <angle>
     ed8:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <angle+0x1>
     edc:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <angle+0x2>
     ee0:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <angle+0x3>
     ee4:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <angle_1>
     ee8:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <angle_1+0x1>
     eec:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <angle_1+0x2>
     ef0:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <angle_1+0x3>
     ef4:	78 94       	sei
     ef6:	ce 01       	movw	r24, r28
     ef8:	05 96       	adiw	r24, 0x05	; 5
     efa:	7c 01       	movw	r14, r24
     efc:	8e 01       	movw	r16, r28
     efe:	0d 5f       	subi	r16, 0xFD	; 253
     f00:	1f 4f       	sbci	r17, 0xFF	; 255
     f02:	9e 01       	movw	r18, r28
     f04:	2f 5f       	subi	r18, 0xFF	; 255
     f06:	3f 4f       	sbci	r19, 0xFF	; 255
     f08:	ae 01       	movw	r20, r28
     f0a:	45 5f       	subi	r20, 0xF5	; 245
     f0c:	5f 4f       	sbci	r21, 0xFF	; 255
     f0e:	be 01       	movw	r22, r28
     f10:	67 5f       	subi	r22, 0xF7	; 247
     f12:	7f 4f       	sbci	r23, 0xFF	; 255
     f14:	02 96       	adiw	r24, 0x02	; 2
     f16:	a9 d1       	rcall	.+850    	; 0x126a <mpu6050_getRawData>
     f18:	89 81       	ldd	r24, Y+1	; 0x01
     f1a:	9a 81       	ldd	r25, Y+2	; 0x02
     f1c:	84 59       	subi	r24, 0x94	; 148
     f1e:	9f 4f       	sbci	r25, 0xFF	; 255
     f20:	9a 83       	std	Y+2, r25	; 0x02
     f22:	89 83       	std	Y+1, r24	; 0x01
     f24:	8b 81       	ldd	r24, Y+3	; 0x03
     f26:	9c 81       	ldd	r25, Y+4	; 0x04
     f28:	80 52       	subi	r24, 0x20	; 32
     f2a:	9f 4f       	sbci	r25, 0xFF	; 255
     f2c:	9c 83       	std	Y+4, r25	; 0x04
     f2e:	8b 83       	std	Y+3, r24	; 0x03
     f30:	8d 81       	ldd	r24, Y+5	; 0x05
     f32:	9e 81       	ldd	r25, Y+6	; 0x06
     f34:	8f 58       	subi	r24, 0x8F	; 143
     f36:	9d 4f       	sbci	r25, 0xFD	; 253
     f38:	9e 83       	std	Y+6, r25	; 0x06
     f3a:	8d 83       	std	Y+5, r24	; 0x05
     f3c:	de d2       	rcall	.+1468   	; 0x14fa <micros>
     f3e:	62 19       	sub	r22, r2
     f40:	73 09       	sbc	r23, r3
     f42:	84 09       	sbc	r24, r4
     f44:	95 09       	sbc	r25, r5
     f46:	25 d6       	rcall	.+3146   	; 0x1b92 <__floatunsisf>
     f48:	20 e0       	ldi	r18, 0x00	; 0
     f4a:	34 e2       	ldi	r19, 0x24	; 36
     f4c:	44 e7       	ldi	r20, 0x74	; 116
     f4e:	59 e4       	ldi	r21, 0x49	; 73
     f50:	87 d5       	rcall	.+2830   	; 0x1a60 <__divsf3>
     f52:	60 93 32 04 	sts	0x0432, r22	; 0x800432 <dt>
     f56:	70 93 33 04 	sts	0x0433, r23	; 0x800433 <dt+0x1>
     f5a:	80 93 34 04 	sts	0x0434, r24	; 0x800434 <dt+0x2>
     f5e:	90 93 35 04 	sts	0x0435, r25	; 0x800435 <dt+0x3>
     f62:	cb d2       	rcall	.+1430   	; 0x14fa <micros>
     f64:	1b 01       	movw	r2, r22
     f66:	2c 01       	movw	r4, r24
     f68:	69 81       	ldd	r22, Y+1	; 0x01
     f6a:	7a 81       	ldd	r23, Y+2	; 0x02
     f6c:	07 2e       	mov	r0, r23
     f6e:	00 0c       	add	r0, r0
     f70:	88 0b       	sbc	r24, r24
     f72:	99 0b       	sbc	r25, r25
     f74:	10 d6       	rcall	.+3104   	; 0x1b96 <__floatsisf>
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	43 e8       	ldi	r20, 0x83	; 131
     f7c:	52 e4       	ldi	r21, 0x42	; 66
     f7e:	70 d5       	rcall	.+2784   	; 0x1a60 <__divsf3>
     f80:	6d 87       	std	Y+13, r22	; 0x0d
     f82:	7e 87       	std	Y+14, r23	; 0x0e
     f84:	8f 87       	std	Y+15, r24	; 0x0f
     f86:	98 8b       	std	Y+16, r25	; 0x10
     f88:	6b 81       	ldd	r22, Y+3	; 0x03
     f8a:	7c 81       	ldd	r23, Y+4	; 0x04
     f8c:	07 2e       	mov	r0, r23
     f8e:	00 0c       	add	r0, r0
     f90:	88 0b       	sbc	r24, r24
     f92:	99 0b       	sbc	r25, r25
     f94:	00 d6       	rcall	.+3072   	; 0x1b96 <__floatsisf>
     f96:	20 e0       	ldi	r18, 0x00	; 0
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	43 e8       	ldi	r20, 0x83	; 131
     f9c:	52 e4       	ldi	r21, 0x42	; 66
     f9e:	60 d5       	rcall	.+2752   	; 0x1a60 <__divsf3>
     fa0:	69 8b       	std	Y+17, r22	; 0x11
     fa2:	7a 8b       	std	Y+18, r23	; 0x12
     fa4:	8b 8b       	std	Y+19, r24	; 0x13
     fa6:	9c 8b       	std	Y+20, r25	; 0x14
     fa8:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <loop_bool>
     fac:	90 91 78 03 	lds	r25, 0x0378	; 0x800378 <loop_bool+0x1>
     fb0:	89 2b       	or	r24, r25
     fb2:	21 f0       	breq	.+8      	; 0xfbc <main+0x1ea>
     fb4:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <loop_bool+0x1>
     fb8:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <loop_bool>
     fbc:	ab 84       	ldd	r10, Y+11	; 0x0b
     fbe:	bc 84       	ldd	r11, Y+12	; 0x0c
     fc0:	e9 84       	ldd	r14, Y+9	; 0x09
     fc2:	fa 84       	ldd	r15, Y+10	; 0x0a
     fc4:	b5 01       	movw	r22, r10
     fc6:	0b 2c       	mov	r0, r11
     fc8:	00 0c       	add	r0, r0
     fca:	88 0b       	sbc	r24, r24
     fcc:	99 0b       	sbc	r25, r25
     fce:	e3 d5       	rcall	.+3014   	; 0x1b96 <__floatsisf>
     fd0:	3b 01       	movw	r6, r22
     fd2:	4c 01       	movw	r8, r24
     fd4:	b7 01       	movw	r22, r14
     fd6:	0f 2c       	mov	r0, r15
     fd8:	00 0c       	add	r0, r0
     fda:	88 0b       	sbc	r24, r24
     fdc:	99 0b       	sbc	r25, r25
     fde:	db d5       	rcall	.+2998   	; 0x1b96 <__floatsisf>
     fe0:	a4 01       	movw	r20, r8
     fe2:	93 01       	movw	r18, r6
     fe4:	e6 d4       	rcall	.+2508   	; 0x19b2 <atan2>
     fe6:	6d 8b       	std	Y+21, r22	; 0x15
     fe8:	7e 8b       	std	Y+22, r23	; 0x16
     fea:	8f 8b       	std	Y+23, r24	; 0x17
     fec:	98 8f       	std	Y+24, r25	; 0x18
     fee:	c7 01       	movw	r24, r14
     ff0:	64 e6       	ldi	r22, 0x64	; 100
     ff2:	70 e0       	ldi	r23, 0x00	; 0
     ff4:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divmodhi4>
     ff8:	07 2e       	mov	r0, r23
     ffa:	00 0c       	add	r0, r0
     ffc:	88 0b       	sbc	r24, r24
     ffe:	99 0b       	sbc	r25, r25
    1000:	ca d5       	rcall	.+2964   	; 0x1b96 <__floatsisf>
    1002:	6b 01       	movw	r12, r22
    1004:	7c 01       	movw	r14, r24
    1006:	c5 01       	movw	r24, r10
    1008:	64 e6       	ldi	r22, 0x64	; 100
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <__divmodhi4>
    1010:	07 2e       	mov	r0, r23
    1012:	00 0c       	add	r0, r0
    1014:	88 0b       	sbc	r24, r24
    1016:	99 0b       	sbc	r25, r25
    1018:	be d5       	rcall	.+2940   	; 0x1b96 <__floatsisf>
    101a:	4b 01       	movw	r8, r22
    101c:	5c 01       	movw	r10, r24
    101e:	a7 01       	movw	r20, r14
    1020:	96 01       	movw	r18, r12
    1022:	c7 01       	movw	r24, r14
    1024:	b6 01       	movw	r22, r12
    1026:	97 d6       	rcall	.+3374   	; 0x1d56 <__mulsf3>
    1028:	69 8f       	std	Y+25, r22	; 0x19
    102a:	7a 8f       	std	Y+26, r23	; 0x1a
    102c:	8b 8f       	std	Y+27, r24	; 0x1b
    102e:	9c 8f       	std	Y+28, r25	; 0x1c
    1030:	a7 01       	movw	r20, r14
    1032:	96 01       	movw	r18, r12
    1034:	c7 01       	movw	r24, r14
    1036:	b6 01       	movw	r22, r12
    1038:	8e d6       	rcall	.+3356   	; 0x1d56 <__mulsf3>
    103a:	6b 01       	movw	r12, r22
    103c:	7c 01       	movw	r14, r24
    103e:	a5 01       	movw	r20, r10
    1040:	94 01       	movw	r18, r8
    1042:	c5 01       	movw	r24, r10
    1044:	b4 01       	movw	r22, r8
    1046:	87 d6       	rcall	.+3342   	; 0x1d56 <__mulsf3>
    1048:	9b 01       	movw	r18, r22
    104a:	ac 01       	movw	r20, r24
    104c:	c7 01       	movw	r24, r14
    104e:	b6 01       	movw	r22, r12
    1050:	3d d4       	rcall	.+2170   	; 0x18cc <__addsf3>
    1052:	e8 d6       	rcall	.+3536   	; 0x1e24 <sqrt>
    1054:	20 e0       	ldi	r18, 0x00	; 0
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	48 ec       	ldi	r20, 0xC8	; 200
    105a:	52 e4       	ldi	r21, 0x42	; 66
    105c:	7c d6       	rcall	.+3320   	; 0x1d56 <__mulsf3>
    105e:	6b 01       	movw	r12, r22
    1060:	7c 01       	movw	r14, r24
    1062:	6f 81       	ldd	r22, Y+7	; 0x07
    1064:	78 85       	ldd	r23, Y+8	; 0x08
    1066:	07 2e       	mov	r0, r23
    1068:	00 0c       	add	r0, r0
    106a:	88 0b       	sbc	r24, r24
    106c:	99 0b       	sbc	r25, r25
    106e:	93 d5       	rcall	.+2854   	; 0x1b96 <__floatsisf>
    1070:	a7 01       	movw	r20, r14
    1072:	96 01       	movw	r18, r12
    1074:	9e d4       	rcall	.+2364   	; 0x19b2 <atan2>
    1076:	4b 01       	movw	r8, r22
    1078:	5c 01       	movw	r10, r24
    107a:	c0 90 32 04 	lds	r12, 0x0432	; 0x800432 <dt>
    107e:	d0 90 33 04 	lds	r13, 0x0433	; 0x800433 <dt+0x1>
    1082:	e0 90 34 04 	lds	r14, 0x0434	; 0x800434 <dt+0x2>
    1086:	f0 90 35 04 	lds	r15, 0x0435	; 0x800435 <dt+0x3>
    108a:	21 ee       	ldi	r18, 0xE1	; 225
    108c:	3e e2       	ldi	r19, 0x2E	; 46
    108e:	45 e6       	ldi	r20, 0x65	; 101
    1090:	52 e4       	ldi	r21, 0x42	; 66
    1092:	6d 89       	ldd	r22, Y+21	; 0x15
    1094:	7e 89       	ldd	r23, Y+22	; 0x16
    1096:	8f 89       	ldd	r24, Y+23	; 0x17
    1098:	98 8d       	ldd	r25, Y+24	; 0x18
    109a:	5d d6       	rcall	.+3258   	; 0x1d56 <__mulsf3>
    109c:	87 01       	movw	r16, r14
    109e:	76 01       	movw	r14, r12
    10a0:	2d 85       	ldd	r18, Y+13	; 0x0d
    10a2:	3e 85       	ldd	r19, Y+14	; 0x0e
    10a4:	4f 85       	ldd	r20, Y+15	; 0x0f
    10a6:	58 89       	ldd	r21, Y+16	; 0x10
    10a8:	ce da       	rcall	.-2660   	; 0x646 <getAngle>
    10aa:	60 93 36 04 	sts	0x0436, r22	; 0x800436 <kalman_angle_roll>
    10ae:	70 93 37 04 	sts	0x0437, r23	; 0x800437 <kalman_angle_roll+0x1>
    10b2:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <kalman_angle_roll+0x2>
    10b6:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <kalman_angle_roll+0x3>
    10ba:	c0 90 32 04 	lds	r12, 0x0432	; 0x800432 <dt>
    10be:	d0 90 33 04 	lds	r13, 0x0433	; 0x800433 <dt+0x1>
    10c2:	e0 90 34 04 	lds	r14, 0x0434	; 0x800434 <dt+0x2>
    10c6:	f0 90 35 04 	lds	r15, 0x0435	; 0x800435 <dt+0x3>
    10ca:	21 ee       	ldi	r18, 0xE1	; 225
    10cc:	3e e2       	ldi	r19, 0x2E	; 46
    10ce:	45 e6       	ldi	r20, 0x65	; 101
    10d0:	52 e4       	ldi	r21, 0x42	; 66
    10d2:	c5 01       	movw	r24, r10
    10d4:	b4 01       	movw	r22, r8
    10d6:	3f d6       	rcall	.+3198   	; 0x1d56 <__mulsf3>
    10d8:	87 01       	movw	r16, r14
    10da:	76 01       	movw	r14, r12
    10dc:	29 89       	ldd	r18, Y+17	; 0x11
    10de:	3a 89       	ldd	r19, Y+18	; 0x12
    10e0:	4b 89       	ldd	r20, Y+19	; 0x13
    10e2:	5c 89       	ldd	r21, Y+20	; 0x14
    10e4:	9b dc       	rcall	.-1738   	; 0xa1c <getAngle_1>
    10e6:	60 93 2a 04 	sts	0x042A, r22	; 0x80042a <kalman_angle_pitch>
    10ea:	70 93 2b 04 	sts	0x042B, r23	; 0x80042b <kalman_angle_pitch+0x1>
    10ee:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <kalman_angle_pitch+0x2>
    10f2:	90 93 2d 04 	sts	0x042D, r25	; 0x80042d <kalman_angle_pitch+0x3>
    10f6:	40 91 36 04 	lds	r20, 0x0436	; 0x800436 <kalman_angle_roll>
    10fa:	50 91 37 04 	lds	r21, 0x0437	; 0x800437 <kalman_angle_roll+0x1>
    10fe:	60 91 38 04 	lds	r22, 0x0438	; 0x800438 <kalman_angle_roll+0x2>
    1102:	70 91 39 04 	lds	r23, 0x0439	; 0x800439 <kalman_angle_roll+0x3>
    1106:	81 e8       	ldi	r24, 0x81	; 129
    1108:	93 e0       	ldi	r25, 0x03	; 3
    110a:	bd d3       	rcall	.+1914   	; 0x1886 <printSD>
    110c:	40 91 b7 03 	lds	r20, 0x03B7	; 0x8003b7 <PID_roll>
    1110:	50 91 b8 03 	lds	r21, 0x03B8	; 0x8003b8 <PID_roll+0x1>
    1114:	60 91 b9 03 	lds	r22, 0x03B9	; 0x8003b9 <PID_roll+0x2>
    1118:	70 91 ba 03 	lds	r23, 0x03BA	; 0x8003ba <PID_roll+0x3>
    111c:	88 e8       	ldi	r24, 0x88	; 136
    111e:	93 e0       	ldi	r25, 0x03	; 3
    1120:	b2 d3       	rcall	.+1892   	; 0x1886 <printSD>
    1122:	8a e0       	ldi	r24, 0x0A	; 10
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	0e 94 9f 14 	call	0x293e	; 0x293e <putchar>
    112a:	e5 ce       	rjmp	.-566    	; 0xef6 <main+0x124>

0000112c <__vector_25>:
    112c:	1f 92       	push	r1
    112e:	0f 92       	push	r0
    1130:	0f b6       	in	r0, 0x3f	; 63
    1132:	0f 92       	push	r0
    1134:	11 24       	eor	r1, r1
    1136:	0b b6       	in	r0, 0x3b	; 59
    1138:	0f 92       	push	r0
    113a:	2f 93       	push	r18
    113c:	3f 93       	push	r19
    113e:	4f 93       	push	r20
    1140:	5f 93       	push	r21
    1142:	6f 93       	push	r22
    1144:	7f 93       	push	r23
    1146:	8f 93       	push	r24
    1148:	9f 93       	push	r25
    114a:	af 93       	push	r26
    114c:	bf 93       	push	r27
    114e:	ef 93       	push	r30
    1150:	ff 93       	push	r31
    1152:	82 e9       	ldi	r24, 0x92	; 146
    1154:	93 e0       	ldi	r25, 0x03	; 3
    1156:	9f 93       	push	r25
    1158:	8f 93       	push	r24
    115a:	0e 94 8c 14 	call	0x2918	; 0x2918 <printf>
    115e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1162:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <receiveData>
    1166:	87 e1       	ldi	r24, 0x17	; 23
    1168:	94 e0       	ldi	r25, 0x04	; 4
    116a:	9f 93       	push	r25
    116c:	8f 93       	push	r24
    116e:	85 e9       	ldi	r24, 0x95	; 149
    1170:	93 e0       	ldi	r25, 0x03	; 3
    1172:	9f 93       	push	r25
    1174:	8f 93       	push	r24
    1176:	0e 94 8c 14 	call	0x2918	; 0x2918 <printf>
    117a:	2f ef       	ldi	r18, 0xFF	; 255
    117c:	83 e2       	ldi	r24, 0x23	; 35
    117e:	94 ef       	ldi	r25, 0xF4	; 244
    1180:	21 50       	subi	r18, 0x01	; 1
    1182:	80 40       	sbci	r24, 0x00	; 0
    1184:	90 40       	sbci	r25, 0x00	; 0
    1186:	e1 f7       	brne	.-8      	; 0x1180 <__vector_25+0x54>
    1188:	00 c0       	rjmp	.+0      	; 0x118a <__vector_25+0x5e>
    118a:	00 00       	nop
    118c:	0f 90       	pop	r0
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
    1194:	0f 90       	pop	r0
    1196:	0f 90       	pop	r0
    1198:	ff 91       	pop	r31
    119a:	ef 91       	pop	r30
    119c:	bf 91       	pop	r27
    119e:	af 91       	pop	r26
    11a0:	9f 91       	pop	r25
    11a2:	8f 91       	pop	r24
    11a4:	7f 91       	pop	r23
    11a6:	6f 91       	pop	r22
    11a8:	5f 91       	pop	r21
    11aa:	4f 91       	pop	r20
    11ac:	3f 91       	pop	r19
    11ae:	2f 91       	pop	r18
    11b0:	0f 90       	pop	r0
    11b2:	0b be       	out	0x3b, r0	; 59
    11b4:	0f 90       	pop	r0
    11b6:	0f be       	out	0x3f, r0	; 63
    11b8:	0f 90       	pop	r0
    11ba:	1f 90       	pop	r1
    11bc:	18 95       	reti

000011be <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	d8 2f       	mov	r29, r24
    11c4:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
    11c6:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
    11c8:	5e d2       	rcall	.+1212   	; 0x1686 <i2c_start>
    11ca:	8d 2f       	mov	r24, r29
	i2c_stop();
    11cc:	b2 d2       	rcall	.+1380   	; 0x1732 <i2c_write>
    11ce:	8c 2f       	mov	r24, r28
}
    11d0:	b0 d2       	rcall	.+1376   	; 0x1732 <i2c_write>
    11d2:	9f d2       	rcall	.+1342   	; 0x1712 <i2c_stop>
    11d4:	df 91       	pop	r29
    11d6:	cf 91       	pop	r28
    11d8:	08 95       	ret

000011da <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
    11da:	af 92       	push	r10
    11dc:	bf 92       	push	r11
    11de:	cf 92       	push	r12
    11e0:	df 92       	push	r13
    11e2:	ff 92       	push	r15
    11e4:	0f 93       	push	r16
    11e6:	1f 93       	push	r17
    11e8:	cf 93       	push	r28
    11ea:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
    11ec:	66 23       	and	r22, r22
    11ee:	89 f1       	breq	.+98     	; 0x1252 <mpu6050_readBytes+0x78>
    11f0:	c5 2f       	mov	r28, r21
    11f2:	d4 2f       	mov	r29, r20
    11f4:	f6 2e       	mov	r15, r22
    11f6:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
    11f8:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
    11fa:	45 d2       	rcall	.+1162   	; 0x1686 <i2c_start>
    11fc:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11fe:	99 d2       	rcall	.+1330   	; 0x1732 <i2c_write>
    1200:	85 e3       	ldi	r24, 0x35	; 53
    1202:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    1204:	f1 f7       	brne	.-4      	; 0x1202 <mpu6050_readBytes+0x28>
    1206:	00 00       	nop
    1208:	81 ed       	ldi	r24, 0xD1	; 209
    120a:	3d d2       	rcall	.+1146   	; 0x1686 <i2c_start>
    120c:	0d 2f       	mov	r16, r29
    120e:	1c 2f       	mov	r17, r28
    1210:	cc 24       	eor	r12, r12
    1212:	ca 94       	dec	r12
    1214:	cf 0c       	add	r12, r15
    1216:	d1 2c       	mov	r13, r1
    1218:	ef ef       	ldi	r30, 0xFF	; 255
    121a:	ce 1a       	sub	r12, r30
    121c:	de 0a       	sbc	r13, r30
    121e:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    1220:	d0 e0       	ldi	r29, 0x00	; 0
    1222:	af 2c       	mov	r10, r15
    1224:	b1 2c       	mov	r11, r1
    1226:	f1 e0       	ldi	r31, 0x01	; 1
    1228:	af 1a       	sub	r10, r31
    122a:	b1 08       	sbc	r11, r1
    122c:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
    122e:	bd 06       	cpc	r11, r29
    1230:	21 f4       	brne	.+8      	; 0x123a <mpu6050_readBytes+0x60>
    1232:	ba d2       	rcall	.+1396   	; 0x17a8 <i2c_readNak>
    1234:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
    1236:	80 83       	st	Z, r24
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <mpu6050_readBytes+0x66>
    123a:	9c d2       	rcall	.+1336   	; 0x1774 <i2c_readAck>
    123c:	f8 01       	movw	r30, r16
    123e:	80 83       	st	Z, r24
    1240:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    1242:	0f 5f       	subi	r16, 0xFF	; 255
    1244:	1f 4f       	sbci	r17, 0xFF	; 255
    1246:	cc 15       	cp	r28, r12
    1248:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    124a:	81 f7       	brne	.-32     	; 0x122c <mpu6050_readBytes+0x52>
    124c:	cf 2d       	mov	r28, r15
    124e:	61 d2       	rcall	.+1218   	; 0x1712 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    1250:	01 c0       	rjmp	.+2      	; 0x1254 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    1252:	c0 e0       	ldi	r28, 0x00	; 0
    1254:	8c 2f       	mov	r24, r28
    1256:	df 91       	pop	r29
    1258:	cf 91       	pop	r28
    125a:	1f 91       	pop	r17
    125c:	0f 91       	pop	r16
    125e:	ff 90       	pop	r15
    1260:	df 90       	pop	r13
    1262:	cf 90       	pop	r12
    1264:	bf 90       	pop	r11
    1266:	af 90       	pop	r10
    1268:	08 95       	ret

0000126a <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    126a:	6f 92       	push	r6
    126c:	7f 92       	push	r7
    126e:	8f 92       	push	r8
    1270:	9f 92       	push	r9
    1272:	af 92       	push	r10
    1274:	bf 92       	push	r11
    1276:	cf 92       	push	r12
    1278:	df 92       	push	r13
    127a:	ef 92       	push	r14
    127c:	ff 92       	push	r15
    127e:	0f 93       	push	r16
    1280:	1f 93       	push	r17
    1282:	cf 93       	push	r28
    1284:	df 93       	push	r29
    1286:	cd b7       	in	r28, 0x3d	; 61
    1288:	de b7       	in	r29, 0x3e	; 62
    128a:	2e 97       	sbiw	r28, 0x0e	; 14
    128c:	0f b6       	in	r0, 0x3f	; 63
    128e:	f8 94       	cli
    1290:	de bf       	out	0x3e, r29	; 62
    1292:	0f be       	out	0x3f, r0	; 63
    1294:	cd bf       	out	0x3d, r28	; 61
    1296:	4c 01       	movw	r8, r24
    1298:	5b 01       	movw	r10, r22
    129a:	6a 01       	movw	r12, r20
    129c:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    129e:	ae 01       	movw	r20, r28
    12a0:	4f 5f       	subi	r20, 0xFF	; 255
    12a2:	5f 4f       	sbci	r21, 0xFF	; 255
    12a4:	6e e0       	ldi	r22, 0x0E	; 14
    12a6:	8b e3       	ldi	r24, 0x3B	; 59
    12a8:	98 df       	rcall	.-208    	; 0x11da <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    12aa:	89 81       	ldd	r24, Y+1	; 0x01
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	98 2f       	mov	r25, r24
    12b0:	88 27       	eor	r24, r24
    12b2:	2a 81       	ldd	r18, Y+2	; 0x02
    12b4:	82 2b       	or	r24, r18
    12b6:	f4 01       	movw	r30, r8
    12b8:	91 83       	std	Z+1, r25	; 0x01
    12ba:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    12bc:	8b 81       	ldd	r24, Y+3	; 0x03
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	98 2f       	mov	r25, r24
    12c2:	88 27       	eor	r24, r24
    12c4:	2c 81       	ldd	r18, Y+4	; 0x04
    12c6:	82 2b       	or	r24, r18
    12c8:	f5 01       	movw	r30, r10
    12ca:	91 83       	std	Z+1, r25	; 0x01
    12cc:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    12ce:	8d 81       	ldd	r24, Y+5	; 0x05
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	98 2f       	mov	r25, r24
    12d4:	88 27       	eor	r24, r24
    12d6:	2e 81       	ldd	r18, Y+6	; 0x06
    12d8:	82 2b       	or	r24, r18
    12da:	f6 01       	movw	r30, r12
    12dc:	91 83       	std	Z+1, r25	; 0x01
    12de:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    12e0:	89 85       	ldd	r24, Y+9	; 0x09
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	98 2f       	mov	r25, r24
    12e6:	88 27       	eor	r24, r24
    12e8:	2a 85       	ldd	r18, Y+10	; 0x0a
    12ea:	82 2b       	or	r24, r18
    12ec:	f3 01       	movw	r30, r6
    12ee:	91 83       	std	Z+1, r25	; 0x01
    12f0:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    12f2:	8b 85       	ldd	r24, Y+11	; 0x0b
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	98 2f       	mov	r25, r24
    12f8:	88 27       	eor	r24, r24
    12fa:	2c 85       	ldd	r18, Y+12	; 0x0c
    12fc:	82 2b       	or	r24, r18
    12fe:	f8 01       	movw	r30, r16
    1300:	91 83       	std	Z+1, r25	; 0x01
    1302:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    1304:	8d 85       	ldd	r24, Y+13	; 0x0d
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	98 2f       	mov	r25, r24
    130a:	88 27       	eor	r24, r24
    130c:	2e 85       	ldd	r18, Y+14	; 0x0e
    130e:	82 2b       	or	r24, r18
    1310:	f7 01       	movw	r30, r14
    1312:	91 83       	std	Z+1, r25	; 0x01
    1314:	80 83       	st	Z, r24
    1316:	2e 96       	adiw	r28, 0x0e	; 14
    1318:	0f b6       	in	r0, 0x3f	; 63
    131a:	f8 94       	cli
    131c:	de bf       	out	0x3e, r29	; 62
    131e:	0f be       	out	0x3f, r0	; 63
    1320:	cd bf       	out	0x3d, r28	; 61
    1322:	df 91       	pop	r29
    1324:	cf 91       	pop	r28
    1326:	1f 91       	pop	r17
    1328:	0f 91       	pop	r16
    132a:	ff 90       	pop	r15
    132c:	ef 90       	pop	r14
    132e:	df 90       	pop	r13
    1330:	cf 90       	pop	r12
    1332:	bf 90       	pop	r11
    1334:	af 90       	pop	r10
    1336:	9f 90       	pop	r9
    1338:	8f 90       	pop	r8
    133a:	7f 90       	pop	r7
    133c:	6f 90       	pop	r6
    133e:	08 95       	ret

00001340 <Compute_PID>:
 * Created: 9/24/2017 10:52:39 AM
 *  Author: rafja
 */ 
#include "PID.h"
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd)
{
    1340:	2f 92       	push	r2
    1342:	3f 92       	push	r3
    1344:	4f 92       	push	r4
    1346:	5f 92       	push	r5
    1348:	6f 92       	push	r6
    134a:	7f 92       	push	r7
    134c:	8f 92       	push	r8
    134e:	9f 92       	push	r9
    1350:	af 92       	push	r10
    1352:	bf 92       	push	r11
    1354:	cf 92       	push	r12
    1356:	df 92       	push	r13
    1358:	ef 92       	push	r14
    135a:	ff 92       	push	r15
    135c:	0f 93       	push	r16
    135e:	1f 93       	push	r17
    1360:	cf 93       	push	r28
    1362:	df 93       	push	r29
    1364:	00 d0       	rcall	.+0      	; 0x1366 <Compute_PID+0x26>
    1366:	1f 92       	push	r1
    1368:	cd b7       	in	r28, 0x3d	; 61
    136a:	de b7       	in	r29, 0x3e	; 62
	
	//printSD("prever_local = ", *previous_error);

	double error = angle-desired_angle;
    136c:	17 01       	movw	r2, r14
    136e:	ad d2       	rcall	.+1370   	; 0x18ca <__subsf3>
    1370:	69 83       	std	Y+1, r22	; 0x01
    1372:	7a 83       	std	Y+2, r23	; 0x02
    1374:	8b 83       	std	Y+3, r24	; 0x03
	double pid_p = kp*error;
    1376:	9c 83       	std	Y+4, r25	; 0x04
    1378:	2a 8d       	ldd	r18, Y+26	; 0x1a
    137a:	3b 8d       	ldd	r19, Y+27	; 0x1b
    137c:	4c 8d       	ldd	r20, Y+28	; 0x1c
    137e:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1380:	ea d4       	rcall	.+2516   	; 0x1d56 <__mulsf3>
    1382:	2b 01       	movw	r4, r22
	if (abs(error)>0.1)
    1384:	3c 01       	movw	r6, r24
    1386:	69 81       	ldd	r22, Y+1	; 0x01
    1388:	7a 81       	ldd	r23, Y+2	; 0x02
    138a:	8b 81       	ldd	r24, Y+3	; 0x03
    138c:	9c 81       	ldd	r25, Y+4	; 0x04
    138e:	d0 d3       	rcall	.+1952   	; 0x1b30 <__fixsfsi>
    1390:	9b 01       	movw	r18, r22
    1392:	77 23       	and	r23, r23
    1394:	24 f4       	brge	.+8      	; 0x139e <Compute_PID+0x5e>
    1396:	22 27       	eor	r18, r18
    1398:	33 27       	eor	r19, r19
    139a:	26 1b       	sub	r18, r22
    139c:	37 0b       	sbc	r19, r23
    139e:	b9 01       	movw	r22, r18
    13a0:	33 0f       	add	r19, r19
    13a2:	88 0b       	sbc	r24, r24
    13a4:	99 0b       	sbc	r25, r25
    13a6:	f7 d3       	rcall	.+2030   	; 0x1b96 <__floatsisf>
    13a8:	2d ec       	ldi	r18, 0xCD	; 205
    13aa:	3c ec       	ldi	r19, 0xCC	; 204
    13ac:	4c ec       	ldi	r20, 0xCC	; 204
    13ae:	5d e3       	ldi	r21, 0x3D	; 61
    13b0:	c7 d4       	rcall	.+2446   	; 0x1d40 <__gesf2>
    13b2:	18 16       	cp	r1, r24
	{
		*pid_i=*pid_i+(ki*error);	
    13b4:	b4 f4       	brge	.+44     	; 0x13e2 <Compute_PID+0xa2>
    13b6:	2e 8d       	ldd	r18, Y+30	; 0x1e
    13b8:	3f 8d       	ldd	r19, Y+31	; 0x1f
    13ba:	48 a1       	ldd	r20, Y+32	; 0x20
    13bc:	59 a1       	ldd	r21, Y+33	; 0x21
    13be:	69 81       	ldd	r22, Y+1	; 0x01
    13c0:	7a 81       	ldd	r23, Y+2	; 0x02
    13c2:	8b 81       	ldd	r24, Y+3	; 0x03
    13c4:	9c 81       	ldd	r25, Y+4	; 0x04
    13c6:	c7 d4       	rcall	.+2446   	; 0x1d56 <__mulsf3>
    13c8:	9b 01       	movw	r18, r22
    13ca:	ac 01       	movw	r20, r24
    13cc:	d8 01       	movw	r26, r16
    13ce:	6d 91       	ld	r22, X+
    13d0:	7d 91       	ld	r23, X+
    13d2:	8d 91       	ld	r24, X+
    13d4:	9c 91       	ld	r25, X
    13d6:	7a d2       	rcall	.+1268   	; 0x18cc <__addsf3>
    13d8:	f8 01       	movw	r30, r16
    13da:	60 83       	st	Z, r22
    13dc:	71 83       	std	Z+1, r23	; 0x01
    13de:	82 83       	std	Z+2, r24	; 0x02
	}
	double pid_d = kd*((error - *previous_error)/dt);
    13e0:	93 83       	std	Z+3, r25	; 0x03
    13e2:	d1 01       	movw	r26, r2
    13e4:	2d 91       	ld	r18, X+
    13e6:	3d 91       	ld	r19, X+
    13e8:	4d 91       	ld	r20, X+
    13ea:	5c 91       	ld	r21, X
    13ec:	69 81       	ldd	r22, Y+1	; 0x01
    13ee:	7a 81       	ldd	r23, Y+2	; 0x02
    13f0:	8b 81       	ldd	r24, Y+3	; 0x03
    13f2:	9c 81       	ldd	r25, Y+4	; 0x04
    13f4:	6a d2       	rcall	.+1236   	; 0x18ca <__subsf3>
    13f6:	a6 01       	movw	r20, r12
    13f8:	95 01       	movw	r18, r10
    13fa:	32 d3       	rcall	.+1636   	; 0x1a60 <__divsf3>
    13fc:	2a a1       	ldd	r18, Y+34	; 0x22
    13fe:	3b a1       	ldd	r19, Y+35	; 0x23
    1400:	4c a1       	ldd	r20, Y+36	; 0x24
    1402:	5d a1       	ldd	r21, Y+37	; 0x25
    1404:	a8 d4       	rcall	.+2384   	; 0x1d56 <__mulsf3>
    1406:	4b 01       	movw	r8, r22
	*previous_error=error;
    1408:	5c 01       	movw	r10, r24
    140a:	89 81       	ldd	r24, Y+1	; 0x01
    140c:	9a 81       	ldd	r25, Y+2	; 0x02
    140e:	ab 81       	ldd	r26, Y+3	; 0x03
    1410:	bc 81       	ldd	r27, Y+4	; 0x04
    1412:	f1 01       	movw	r30, r2
    1414:	80 83       	st	Z, r24
	
	return pid_p + (*pid_i) + pid_d;
    1416:	91 83       	std	Z+1, r25	; 0x01
    1418:	a2 83       	std	Z+2, r26	; 0x02
    141a:	b3 83       	std	Z+3, r27	; 0x03
    141c:	d8 01       	movw	r26, r16
    141e:	2d 91       	ld	r18, X+
    1420:	3d 91       	ld	r19, X+
    1422:	4d 91       	ld	r20, X+
    1424:	5c 91       	ld	r21, X
    1426:	c3 01       	movw	r24, r6
    1428:	b2 01       	movw	r22, r4
    142a:	50 d2       	rcall	.+1184   	; 0x18cc <__addsf3>
    142c:	a5 01       	movw	r20, r10
}
    142e:	94 01       	movw	r18, r8
    1430:	4d d2       	rcall	.+1178   	; 0x18cc <__addsf3>
    1432:	0f 90       	pop	r0
    1434:	0f 90       	pop	r0
    1436:	0f 90       	pop	r0
    1438:	0f 90       	pop	r0
    143a:	df 91       	pop	r29
    143c:	cf 91       	pop	r28
    143e:	1f 91       	pop	r17
    1440:	0f 91       	pop	r16
    1442:	ff 90       	pop	r15
    1444:	ef 90       	pop	r14
    1446:	df 90       	pop	r13
    1448:	cf 90       	pop	r12
    144a:	bf 90       	pop	r11
    144c:	af 90       	pop	r10
    144e:	9f 90       	pop	r9
    1450:	8f 90       	pop	r8
    1452:	7f 90       	pop	r7
    1454:	6f 90       	pop	r6
    1456:	5f 90       	pop	r5
    1458:	4f 90       	pop	r4
    145a:	3f 90       	pop	r3
    145c:	2f 90       	pop	r2
    145e:	08 95       	ret

00001460 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    1460:	e1 ea       	ldi	r30, 0xA1	; 161
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	80 81       	ld	r24, Z
    1466:	81 60       	ori	r24, 0x01	; 1
    1468:	80 83       	st	Z, r24
    146a:	e0 ea       	ldi	r30, 0xA0	; 160
    146c:	f0 e0       	ldi	r31, 0x00	; 0
    146e:	80 81       	ld	r24, Z
    1470:	81 60       	ori	r24, 0x01	; 1
    1472:	80 83       	st	Z, r24
    1474:	80 81       	ld	r24, Z
    1476:	80 68       	ori	r24, 0x80	; 128
    1478:	80 83       	st	Z, r24
    147a:	80 81       	ld	r24, Z
    147c:	80 62       	ori	r24, 0x20	; 32
    147e:	80 83       	st	Z, r24
    1480:	80 81       	ld	r24, Z
    1482:	88 60       	ori	r24, 0x08	; 8
    1484:	80 83       	st	Z, r24
    1486:	08 95       	ret

00001488 <setup_timer3>:
    1488:	e1 e9       	ldi	r30, 0x91	; 145
    148a:	f0 e0       	ldi	r31, 0x00	; 0
    148c:	80 81       	ld	r24, Z
    148e:	81 60       	ori	r24, 0x01	; 1
    1490:	80 83       	st	Z, r24
    1492:	e0 e9       	ldi	r30, 0x90	; 144
    1494:	f0 e0       	ldi	r31, 0x00	; 0
    1496:	80 81       	ld	r24, Z
    1498:	81 60       	ori	r24, 0x01	; 1
    149a:	80 83       	st	Z, r24
    149c:	80 81       	ld	r24, Z
    149e:	80 68       	ori	r24, 0x80	; 128
    14a0:	80 83       	st	Z, r24
    14a2:	80 81       	ld	r24, Z
    14a4:	80 62       	ori	r24, 0x20	; 32
    14a6:	80 83       	st	Z, r24
    14a8:	80 81       	ld	r24, Z
    14aa:	88 60       	ori	r24, 0x08	; 8
    14ac:	80 83       	st	Z, r24
    14ae:	08 95       	ret

000014b0 <setup_timer5>:
    14b0:	e1 e2       	ldi	r30, 0x21	; 33
    14b2:	f1 e0       	ldi	r31, 0x01	; 1
    14b4:	80 81       	ld	r24, Z
    14b6:	81 60       	ori	r24, 0x01	; 1
    14b8:	80 83       	st	Z, r24
    14ba:	80 81       	ld	r24, Z
    14bc:	88 60       	ori	r24, 0x08	; 8
    14be:	80 83       	st	Z, r24
    14c0:	08 95       	ret

000014c2 <Enable_timer5_compare_interrupt>:
    14c2:	e3 e7       	ldi	r30, 0x73	; 115
    14c4:	f0 e0       	ldi	r31, 0x00	; 0
    14c6:	80 81       	ld	r24, Z
    14c8:	82 60       	ori	r24, 0x02	; 2
    14ca:	80 83       	st	Z, r24
    14cc:	08 95       	ret

000014ce <setup_timer1>:
    14ce:	e1 e8       	ldi	r30, 0x81	; 129
    14d0:	f0 e0       	ldi	r31, 0x00	; 0
    14d2:	80 81       	ld	r24, Z
    14d4:	81 60       	ori	r24, 0x01	; 1
    14d6:	80 83       	st	Z, r24
    14d8:	80 81       	ld	r24, Z
    14da:	88 60       	ori	r24, 0x08	; 8
    14dc:	80 83       	st	Z, r24
    14de:	08 95       	ret

000014e0 <setup_timer0>:
    14e0:	85 b5       	in	r24, 0x25	; 37
    14e2:	81 60       	ori	r24, 0x01	; 1
    14e4:	85 bd       	out	0x25, r24	; 37
    14e6:	85 b5       	in	r24, 0x25	; 37
    14e8:	82 60       	ori	r24, 0x02	; 2
    14ea:	85 bd       	out	0x25, r24	; 37
    14ec:	08 95       	ret

000014ee <Enable_timer0_overflow_interrupt>:
    14ee:	ee e6       	ldi	r30, 0x6E	; 110
    14f0:	f0 e0       	ldi	r31, 0x00	; 0
    14f2:	80 81       	ld	r24, Z
    14f4:	81 60       	ori	r24, 0x01	; 1
    14f6:	80 83       	st	Z, r24
    14f8:	08 95       	ret

000014fa <micros>:
    14fa:	3f b7       	in	r19, 0x3f	; 63
    14fc:	f8 94       	cli
    14fe:	80 91 a7 03 	lds	r24, 0x03A7	; 0x8003a7 <timer0_overflow_count>
    1502:	90 91 a8 03 	lds	r25, 0x03A8	; 0x8003a8 <timer0_overflow_count+0x1>
    1506:	a0 91 a9 03 	lds	r26, 0x03A9	; 0x8003a9 <timer0_overflow_count+0x2>
    150a:	b0 91 aa 03 	lds	r27, 0x03AA	; 0x8003aa <timer0_overflow_count+0x3>
    150e:	26 b5       	in	r18, 0x26	; 38
    1510:	a8 9b       	sbis	0x15, 0	; 21
    1512:	05 c0       	rjmp	.+10     	; 0x151e <micros+0x24>
    1514:	2f 3f       	cpi	r18, 0xFF	; 255
    1516:	19 f0       	breq	.+6      	; 0x151e <micros+0x24>
    1518:	01 96       	adiw	r24, 0x01	; 1
    151a:	a1 1d       	adc	r26, r1
    151c:	b1 1d       	adc	r27, r1
    151e:	3f bf       	out	0x3f, r19	; 63
    1520:	ba 2f       	mov	r27, r26
    1522:	a9 2f       	mov	r26, r25
    1524:	98 2f       	mov	r25, r24
    1526:	88 27       	eor	r24, r24
    1528:	82 0f       	add	r24, r18
    152a:	91 1d       	adc	r25, r1
    152c:	a1 1d       	adc	r26, r1
    152e:	b1 1d       	adc	r27, r1
    1530:	bc 01       	movw	r22, r24
    1532:	cd 01       	movw	r24, r26
    1534:	66 0f       	add	r22, r22
    1536:	77 1f       	adc	r23, r23
    1538:	88 1f       	adc	r24, r24
    153a:	99 1f       	adc	r25, r25
    153c:	66 0f       	add	r22, r22
    153e:	77 1f       	adc	r23, r23
    1540:	88 1f       	adc	r24, r24
    1542:	99 1f       	adc	r25, r25
    1544:	08 95       	ret

00001546 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    1546:	1f 92       	push	r1
    1548:	0f 92       	push	r0
    154a:	0f b6       	in	r0, 0x3f	; 63
    154c:	0f 92       	push	r0
    154e:	11 24       	eor	r1, r1
    1550:	2f 93       	push	r18
    1552:	3f 93       	push	r19
    1554:	8f 93       	push	r24
    1556:	9f 93       	push	r25
    1558:	af 93       	push	r26
    155a:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    155c:	80 91 a3 03 	lds	r24, 0x03A3	; 0x8003a3 <timer0_millis>
    1560:	90 91 a4 03 	lds	r25, 0x03A4	; 0x8003a4 <timer0_millis+0x1>
    1564:	a0 91 a5 03 	lds	r26, 0x03A5	; 0x8003a5 <timer0_millis+0x2>
    1568:	b0 91 a6 03 	lds	r27, 0x03A6	; 0x8003a6 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    156c:	30 91 a2 03 	lds	r19, 0x03A2	; 0x8003a2 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    1570:	23 e0       	ldi	r18, 0x03	; 3
    1572:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    1574:	2d 37       	cpi	r18, 0x7D	; 125
    1576:	20 f4       	brcc	.+8      	; 0x1580 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    1578:	01 96       	adiw	r24, 0x01	; 1
    157a:	a1 1d       	adc	r26, r1
    157c:	b1 1d       	adc	r27, r1
    157e:	05 c0       	rjmp	.+10     	; 0x158a <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    1580:	26 e8       	ldi	r18, 0x86	; 134
    1582:	23 0f       	add	r18, r19
		m += 1;
    1584:	02 96       	adiw	r24, 0x02	; 2
    1586:	a1 1d       	adc	r26, r1
    1588:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    158a:	20 93 a2 03 	sts	0x03A2, r18	; 0x8003a2 <timer0_fract>
	timer0_millis = m;
    158e:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <timer0_millis>
    1592:	90 93 a4 03 	sts	0x03A4, r25	; 0x8003a4 <timer0_millis+0x1>
    1596:	a0 93 a5 03 	sts	0x03A5, r26	; 0x8003a5 <timer0_millis+0x2>
    159a:	b0 93 a6 03 	sts	0x03A6, r27	; 0x8003a6 <timer0_millis+0x3>
	timer0_overflow_count++;
    159e:	80 91 a7 03 	lds	r24, 0x03A7	; 0x8003a7 <timer0_overflow_count>
    15a2:	90 91 a8 03 	lds	r25, 0x03A8	; 0x8003a8 <timer0_overflow_count+0x1>
    15a6:	a0 91 a9 03 	lds	r26, 0x03A9	; 0x8003a9 <timer0_overflow_count+0x2>
    15aa:	b0 91 aa 03 	lds	r27, 0x03AA	; 0x8003aa <timer0_overflow_count+0x3>
    15ae:	01 96       	adiw	r24, 0x01	; 1
    15b0:	a1 1d       	adc	r26, r1
    15b2:	b1 1d       	adc	r27, r1
    15b4:	80 93 a7 03 	sts	0x03A7, r24	; 0x8003a7 <timer0_overflow_count>
    15b8:	90 93 a8 03 	sts	0x03A8, r25	; 0x8003a8 <timer0_overflow_count+0x1>
    15bc:	a0 93 a9 03 	sts	0x03A9, r26	; 0x8003a9 <timer0_overflow_count+0x2>
    15c0:	b0 93 aa 03 	sts	0x03AA, r27	; 0x8003aa <timer0_overflow_count+0x3>
}
    15c4:	bf 91       	pop	r27
    15c6:	af 91       	pop	r26
    15c8:	9f 91       	pop	r25
    15ca:	8f 91       	pop	r24
    15cc:	3f 91       	pop	r19
    15ce:	2f 91       	pop	r18
    15d0:	0f 90       	pop	r0
    15d2:	0f be       	out	0x3f, r0	; 63
    15d4:	0f 90       	pop	r0
    15d6:	1f 90       	pop	r1
    15d8:	18 95       	reti

000015da <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    15da:	1f 92       	push	r1
    15dc:	0f 92       	push	r0
    15de:	0f b6       	in	r0, 0x3f	; 63
    15e0:	0f 92       	push	r0
    15e2:	11 24       	eor	r1, r1
    15e4:	0b b6       	in	r0, 0x3b	; 59
    15e6:	0f 92       	push	r0
    15e8:	2f 93       	push	r18
    15ea:	3f 93       	push	r19
    15ec:	4f 93       	push	r20
    15ee:	5f 93       	push	r21
    15f0:	6f 93       	push	r22
    15f2:	7f 93       	push	r23
    15f4:	8f 93       	push	r24
    15f6:	9f 93       	push	r25
    15f8:	af 93       	push	r26
    15fa:	bf 93       	push	r27
    15fc:	ef 93       	push	r30
    15fe:	ff 93       	push	r31
	PWM_update();
    1600:	0e 94 2c 01 	call	0x258	; 0x258 <PWM_update>
}
    1604:	ff 91       	pop	r31
    1606:	ef 91       	pop	r30
    1608:	bf 91       	pop	r27
    160a:	af 91       	pop	r26
    160c:	9f 91       	pop	r25
    160e:	8f 91       	pop	r24
    1610:	7f 91       	pop	r23
    1612:	6f 91       	pop	r22
    1614:	5f 91       	pop	r21
    1616:	4f 91       	pop	r20
    1618:	3f 91       	pop	r19
    161a:	2f 91       	pop	r18
    161c:	0f 90       	pop	r0
    161e:	0b be       	out	0x3b, r0	; 59
    1620:	0f 90       	pop	r0
    1622:	0f be       	out	0x3f, r0	; 63
    1624:	0f 90       	pop	r0
    1626:	1f 90       	pop	r1
    1628:	18 95       	reti

0000162a <__vector_17>:
ISR(TIMER1_COMPA_vect)//motor update interrupt routine
{
    162a:	1f 92       	push	r1
    162c:	0f 92       	push	r0
    162e:	0f b6       	in	r0, 0x3f	; 63
    1630:	0f 92       	push	r0
    1632:	11 24       	eor	r1, r1
    1634:	0b b6       	in	r0, 0x3b	; 59
    1636:	0f 92       	push	r0
    1638:	2f 93       	push	r18
    163a:	3f 93       	push	r19
    163c:	4f 93       	push	r20
    163e:	5f 93       	push	r21
    1640:	6f 93       	push	r22
    1642:	7f 93       	push	r23
    1644:	8f 93       	push	r24
    1646:	9f 93       	push	r25
    1648:	af 93       	push	r26
    164a:	bf 93       	push	r27
    164c:	ef 93       	push	r30
    164e:	ff 93       	push	r31
	PWM_update_2();
    1650:	0e 94 7e 02 	call	0x4fc	; 0x4fc <PWM_update_2>
    1654:	ff 91       	pop	r31
    1656:	ef 91       	pop	r30
    1658:	bf 91       	pop	r27
    165a:	af 91       	pop	r26
    165c:	9f 91       	pop	r25
    165e:	8f 91       	pop	r24
    1660:	7f 91       	pop	r23
    1662:	6f 91       	pop	r22
    1664:	5f 91       	pop	r21
    1666:	4f 91       	pop	r20
    1668:	3f 91       	pop	r19
    166a:	2f 91       	pop	r18
    166c:	0f 90       	pop	r0
    166e:	0b be       	out	0x3b, r0	; 59
    1670:	0f 90       	pop	r0
    1672:	0f be       	out	0x3f, r0	; 63
    1674:	0f 90       	pop	r0
    1676:	1f 90       	pop	r1
    1678:	18 95       	reti

0000167a <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    167a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    167e:	8c e0       	ldi	r24, 0x0C	; 12
    1680:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    1684:	08 95       	ret

00001686 <i2c_start>:
    1686:	94 ea       	ldi	r25, 0xA4	; 164
    1688:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    168c:	4f ef       	ldi	r20, 0xFF	; 255
    168e:	50 e0       	ldi	r21, 0x00	; 0
    1690:	60 e0       	ldi	r22, 0x00	; 0
    1692:	70 e0       	ldi	r23, 0x00	; 0
    1694:	ec eb       	ldi	r30, 0xBC	; 188
    1696:	f0 e0       	ldi	r31, 0x00	; 0
    1698:	90 81       	ld	r25, Z
    169a:	99 23       	and	r25, r25
    169c:	34 f0       	brlt	.+12     	; 0x16aa <i2c_start+0x24>
    169e:	41 50       	subi	r20, 0x01	; 1
    16a0:	51 09       	sbc	r21, r1
    16a2:	61 09       	sbc	r22, r1
    16a4:	71 09       	sbc	r23, r1
    16a6:	c0 f7       	brcc	.-16     	; 0x1698 <i2c_start+0x12>
    16a8:	04 c0       	rjmp	.+8      	; 0x16b2 <i2c_start+0x2c>
    16aa:	45 2b       	or	r20, r21
    16ac:	46 2b       	or	r20, r22
    16ae:	47 2b       	or	r20, r23
    16b0:	41 f1       	breq	.+80     	; 0x1702 <i2c_start+0x7c>
    16b2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    16b6:	98 7f       	andi	r25, 0xF8	; 248
    16b8:	98 30       	cpi	r25, 0x08	; 8
    16ba:	11 f0       	breq	.+4      	; 0x16c0 <i2c_start+0x3a>
    16bc:	90 31       	cpi	r25, 0x10	; 16
    16be:	19 f5       	brne	.+70     	; 0x1706 <i2c_start+0x80>
    16c0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    16c4:	84 e8       	ldi	r24, 0x84	; 132
    16c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    16ca:	8f ef       	ldi	r24, 0xFF	; 255
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	a0 e0       	ldi	r26, 0x00	; 0
    16d0:	b0 e0       	ldi	r27, 0x00	; 0
    16d2:	ec eb       	ldi	r30, 0xBC	; 188
    16d4:	f0 e0       	ldi	r31, 0x00	; 0
    16d6:	20 81       	ld	r18, Z
    16d8:	22 23       	and	r18, r18
    16da:	2c f0       	brlt	.+10     	; 0x16e6 <i2c_start+0x60>
    16dc:	01 97       	sbiw	r24, 0x01	; 1
    16de:	a1 09       	sbc	r26, r1
    16e0:	b1 09       	sbc	r27, r1
    16e2:	c8 f7       	brcc	.-14     	; 0x16d6 <i2c_start+0x50>
    16e4:	04 c0       	rjmp	.+8      	; 0x16ee <i2c_start+0x68>
    16e6:	89 2b       	or	r24, r25
    16e8:	8a 2b       	or	r24, r26
    16ea:	8b 2b       	or	r24, r27
    16ec:	71 f0       	breq	.+28     	; 0x170a <i2c_start+0x84>
    16ee:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    16f2:	98 7f       	andi	r25, 0xF8	; 248
    16f4:	98 31       	cpi	r25, 0x18	; 24
    16f6:	59 f0       	breq	.+22     	; 0x170e <i2c_start+0x88>
    16f8:	81 e0       	ldi	r24, 0x01	; 1
    16fa:	90 34       	cpi	r25, 0x40	; 64
    16fc:	49 f4       	brne	.+18     	; 0x1710 <i2c_start+0x8a>
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	08 95       	ret
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	08 95       	ret
    1706:	81 e0       	ldi	r24, 0x01	; 1
    1708:	08 95       	ret
    170a:	81 e0       	ldi	r24, 0x01	; 1
    170c:	08 95       	ret
    170e:	80 e0       	ldi	r24, 0x00	; 0
    1710:	08 95       	ret

00001712 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    1712:	84 e9       	ldi	r24, 0x94	; 148
    1714:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    1718:	80 e0       	ldi	r24, 0x00	; 0
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	ec eb       	ldi	r30, 0xBC	; 188
    171e:	f0 e0       	ldi	r31, 0x00	; 0
    1720:	20 81       	ld	r18, Z
    1722:	24 ff       	sbrs	r18, 4
    1724:	05 c0       	rjmp	.+10     	; 0x1730 <i2c_stop+0x1e>
    1726:	01 96       	adiw	r24, 0x01	; 1
    1728:	81 15       	cp	r24, r1
    172a:	21 e0       	ldi	r18, 0x01	; 1
    172c:	92 07       	cpc	r25, r18
    172e:	c1 f7       	brne	.-16     	; 0x1720 <i2c_stop+0xe>
    1730:	08 95       	ret

00001732 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    1732:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    1736:	84 e8       	ldi	r24, 0x84	; 132
    1738:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    173c:	8f ef       	ldi	r24, 0xFF	; 255
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	a0 e0       	ldi	r26, 0x00	; 0
    1742:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1744:	ec eb       	ldi	r30, 0xBC	; 188
    1746:	f0 e0       	ldi	r31, 0x00	; 0
    1748:	20 81       	ld	r18, Z
    174a:	22 23       	and	r18, r18
    174c:	2c f0       	brlt	.+10     	; 0x1758 <i2c_write+0x26>
    174e:	01 97       	sbiw	r24, 0x01	; 1
    1750:	a1 09       	sbc	r26, r1
    1752:	b1 09       	sbc	r27, r1
    1754:	c8 f7       	brcc	.-14     	; 0x1748 <i2c_write+0x16>
    1756:	04 c0       	rjmp	.+8      	; 0x1760 <i2c_write+0x2e>
	if(i2c_timer == 0)
    1758:	89 2b       	or	r24, r25
    175a:	8a 2b       	or	r24, r26
    175c:	8b 2b       	or	r24, r27
    175e:	41 f0       	breq	.+16     	; 0x1770 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    1760:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    1764:	98 7f       	andi	r25, 0xF8	; 248
    1766:	81 e0       	ldi	r24, 0x01	; 1
    1768:	98 32       	cpi	r25, 0x28	; 40
    176a:	19 f4       	brne	.+6      	; 0x1772 <i2c_write+0x40>
    176c:	80 e0       	ldi	r24, 0x00	; 0
    176e:	08 95       	ret
    1770:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    1772:	08 95       	ret

00001774 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    1774:	84 ec       	ldi	r24, 0xC4	; 196
    1776:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    177a:	8f ef       	ldi	r24, 0xFF	; 255
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	a0 e0       	ldi	r26, 0x00	; 0
    1780:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1782:	ec eb       	ldi	r30, 0xBC	; 188
    1784:	f0 e0       	ldi	r31, 0x00	; 0
    1786:	20 81       	ld	r18, Z
    1788:	22 23       	and	r18, r18
    178a:	2c f0       	brlt	.+10     	; 0x1796 <i2c_readAck+0x22>
    178c:	01 97       	sbiw	r24, 0x01	; 1
    178e:	a1 09       	sbc	r26, r1
    1790:	b1 09       	sbc	r27, r1
    1792:	c8 f7       	brcc	.-14     	; 0x1786 <i2c_readAck+0x12>
    1794:	04 c0       	rjmp	.+8      	; 0x179e <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    1796:	89 2b       	or	r24, r25
    1798:	8a 2b       	or	r24, r26
    179a:	8b 2b       	or	r24, r27
    179c:	19 f0       	breq	.+6      	; 0x17a4 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    179e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    17a2:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    17a4:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    17a6:	08 95       	ret

000017a8 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    17a8:	84 e8       	ldi	r24, 0x84	; 132
    17aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    17ae:	8f ef       	ldi	r24, 0xFF	; 255
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	a0 e0       	ldi	r26, 0x00	; 0
    17b4:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    17b6:	ec eb       	ldi	r30, 0xBC	; 188
    17b8:	f0 e0       	ldi	r31, 0x00	; 0
    17ba:	20 81       	ld	r18, Z
    17bc:	22 23       	and	r18, r18
    17be:	2c f0       	brlt	.+10     	; 0x17ca <i2c_readNak+0x22>
    17c0:	01 97       	sbiw	r24, 0x01	; 1
    17c2:	a1 09       	sbc	r26, r1
    17c4:	b1 09       	sbc	r27, r1
    17c6:	c8 f7       	brcc	.-14     	; 0x17ba <i2c_readNak+0x12>
    17c8:	04 c0       	rjmp	.+8      	; 0x17d2 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    17ca:	89 2b       	or	r24, r25
    17cc:	8a 2b       	or	r24, r26
    17ce:	8b 2b       	or	r24, r27
    17d0:	19 f0       	breq	.+6      	; 0x17d8 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    17d2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    17d6:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    17d8:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    17da:	08 95       	ret

000017dc <USART_Init>:
void printSI(char c[20],int16_t intToPrint)
{
	printf(c);
	print16(&intToPrint);
	printf("  ");
}
    17dc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    17e0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    17e4:	88 e9       	ldi	r24, 0x98	; 152
    17e6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    17ea:	8e e0       	ldi	r24, 0x0E	; 14
    17ec:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    17f0:	08 95       	ret

000017f2 <uart_putchar>:
    17f2:	cf 93       	push	r28
    17f4:	c8 2f       	mov	r28, r24
    17f6:	8a 30       	cpi	r24, 0x0A	; 10
    17f8:	11 f4       	brne	.+4      	; 0x17fe <uart_putchar+0xc>
    17fa:	8d e0       	ldi	r24, 0x0D	; 13
    17fc:	fa df       	rcall	.-12     	; 0x17f2 <uart_putchar>
    17fe:	e0 ec       	ldi	r30, 0xC0	; 192
    1800:	f0 e0       	ldi	r31, 0x00	; 0
    1802:	80 81       	ld	r24, Z
    1804:	85 ff       	sbrs	r24, 5
    1806:	fd cf       	rjmp	.-6      	; 0x1802 <uart_putchar+0x10>
    1808:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    180c:	80 e0       	ldi	r24, 0x00	; 0
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	cf 91       	pop	r28
    1812:	08 95       	ret

00001814 <printDouble>:
void printDouble(double *value)
{
    1814:	0f 93       	push	r16
    1816:	1f 93       	push	r17
    1818:	cf 93       	push	r28
    181a:	df 93       	push	r29
    181c:	cd b7       	in	r28, 0x3d	; 61
    181e:	de b7       	in	r29, 0x3e	; 62
    1820:	64 97       	sbiw	r28, 0x14	; 20
    1822:	0f b6       	in	r0, 0x3f	; 63
    1824:	f8 94       	cli
    1826:	de bf       	out	0x3e, r29	; 62
    1828:	0f be       	out	0x3f, r0	; 63
    182a:	cd bf       	out	0x3d, r28	; 61
    182c:	fc 01       	movw	r30, r24
	char c[20]={0};
    182e:	8e 01       	movw	r16, r28
    1830:	0f 5f       	subi	r16, 0xFF	; 255
    1832:	1f 4f       	sbci	r17, 0xFF	; 255
    1834:	84 e1       	ldi	r24, 0x14	; 20
    1836:	d8 01       	movw	r26, r16
    1838:	1d 92       	st	X+, r1
    183a:	8a 95       	dec	r24
    183c:	e9 f7       	brne	.-6      	; 0x1838 <printDouble+0x24>
	sprintf(c, "%f", *value);
    183e:	83 81       	ldd	r24, Z+3	; 0x03
    1840:	8f 93       	push	r24
    1842:	82 81       	ldd	r24, Z+2	; 0x02
    1844:	8f 93       	push	r24
    1846:	81 81       	ldd	r24, Z+1	; 0x01
    1848:	8f 93       	push	r24
    184a:	80 81       	ld	r24, Z
    184c:	8f 93       	push	r24
    184e:	8b e9       	ldi	r24, 0x9B	; 155
    1850:	93 e0       	ldi	r25, 0x03	; 3
    1852:	9f 93       	push	r25
    1854:	8f 93       	push	r24
    1856:	1f 93       	push	r17
    1858:	0f 93       	push	r16
    185a:	0e 94 a4 14 	call	0x2948	; 0x2948 <sprintf>
	printf(c);
    185e:	1f 93       	push	r17
    1860:	0f 93       	push	r16
    1862:	0e 94 8c 14 	call	0x2918	; 0x2918 <printf>
}
    1866:	0f b6       	in	r0, 0x3f	; 63
    1868:	f8 94       	cli
    186a:	de bf       	out	0x3e, r29	; 62
    186c:	0f be       	out	0x3f, r0	; 63
    186e:	cd bf       	out	0x3d, r28	; 61
    1870:	64 96       	adiw	r28, 0x14	; 20
    1872:	0f b6       	in	r0, 0x3f	; 63
    1874:	f8 94       	cli
    1876:	de bf       	out	0x3e, r29	; 62
    1878:	0f be       	out	0x3f, r0	; 63
    187a:	cd bf       	out	0x3d, r28	; 61
    187c:	df 91       	pop	r29
    187e:	cf 91       	pop	r28
    1880:	1f 91       	pop	r17
    1882:	0f 91       	pop	r16
    1884:	08 95       	ret

00001886 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    1886:	cf 93       	push	r28
    1888:	df 93       	push	r29
    188a:	00 d0       	rcall	.+0      	; 0x188c <printSD+0x6>
    188c:	1f 92       	push	r1
    188e:	cd b7       	in	r28, 0x3d	; 61
    1890:	de b7       	in	r29, 0x3e	; 62
    1892:	49 83       	std	Y+1, r20	; 0x01
    1894:	5a 83       	std	Y+2, r21	; 0x02
    1896:	6b 83       	std	Y+3, r22	; 0x03
    1898:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    189a:	9f 93       	push	r25
    189c:	8f 93       	push	r24
    189e:	0e 94 8c 14 	call	0x2918	; 0x2918 <printf>
	printDouble(&doubleToPrint);
    18a2:	ce 01       	movw	r24, r28
    18a4:	01 96       	adiw	r24, 0x01	; 1
    18a6:	b6 df       	rcall	.-148    	; 0x1814 <printDouble>
	printf("  ");
    18a8:	88 e9       	ldi	r24, 0x98	; 152
    18aa:	93 e0       	ldi	r25, 0x03	; 3
    18ac:	9f 93       	push	r25
    18ae:	8f 93       	push	r24
    18b0:	0e 94 8c 14 	call	0x2918	; 0x2918 <printf>
}
    18b4:	0f 90       	pop	r0
    18b6:	0f 90       	pop	r0
    18b8:	0f 90       	pop	r0
    18ba:	0f 90       	pop	r0
    18bc:	0f 90       	pop	r0
    18be:	0f 90       	pop	r0
    18c0:	0f 90       	pop	r0
    18c2:	0f 90       	pop	r0
    18c4:	df 91       	pop	r29
    18c6:	cf 91       	pop	r28
    18c8:	08 95       	ret

000018ca <__subsf3>:
    18ca:	50 58       	subi	r21, 0x80	; 128

000018cc <__addsf3>:
    18cc:	bb 27       	eor	r27, r27
    18ce:	aa 27       	eor	r26, r26
    18d0:	0e d0       	rcall	.+28     	; 0x18ee <__addsf3x>
    18d2:	fc c1       	rjmp	.+1016   	; 0x1ccc <__fp_round>
    18d4:	ed d1       	rcall	.+986    	; 0x1cb0 <__fp_pscA>
    18d6:	30 f0       	brcs	.+12     	; 0x18e4 <__addsf3+0x18>
    18d8:	f2 d1       	rcall	.+996    	; 0x1cbe <__fp_pscB>
    18da:	20 f0       	brcs	.+8      	; 0x18e4 <__addsf3+0x18>
    18dc:	31 f4       	brne	.+12     	; 0x18ea <__addsf3+0x1e>
    18de:	9f 3f       	cpi	r25, 0xFF	; 255
    18e0:	11 f4       	brne	.+4      	; 0x18e6 <__addsf3+0x1a>
    18e2:	1e f4       	brtc	.+6      	; 0x18ea <__addsf3+0x1e>
    18e4:	bd c1       	rjmp	.+890    	; 0x1c60 <__fp_nan>
    18e6:	0e f4       	brtc	.+2      	; 0x18ea <__addsf3+0x1e>
    18e8:	e0 95       	com	r30
    18ea:	e7 fb       	bst	r30, 7
    18ec:	b3 c1       	rjmp	.+870    	; 0x1c54 <__fp_inf>

000018ee <__addsf3x>:
    18ee:	e9 2f       	mov	r30, r25
    18f0:	fe d1       	rcall	.+1020   	; 0x1cee <__fp_split3>
    18f2:	80 f3       	brcs	.-32     	; 0x18d4 <__addsf3+0x8>
    18f4:	ba 17       	cp	r27, r26
    18f6:	62 07       	cpc	r22, r18
    18f8:	73 07       	cpc	r23, r19
    18fa:	84 07       	cpc	r24, r20
    18fc:	95 07       	cpc	r25, r21
    18fe:	18 f0       	brcs	.+6      	; 0x1906 <__addsf3x+0x18>
    1900:	71 f4       	brne	.+28     	; 0x191e <__addsf3x+0x30>
    1902:	9e f5       	brtc	.+102    	; 0x196a <__addsf3x+0x7c>
    1904:	16 c2       	rjmp	.+1068   	; 0x1d32 <__fp_zero>
    1906:	0e f4       	brtc	.+2      	; 0x190a <__addsf3x+0x1c>
    1908:	e0 95       	com	r30
    190a:	0b 2e       	mov	r0, r27
    190c:	ba 2f       	mov	r27, r26
    190e:	a0 2d       	mov	r26, r0
    1910:	0b 01       	movw	r0, r22
    1912:	b9 01       	movw	r22, r18
    1914:	90 01       	movw	r18, r0
    1916:	0c 01       	movw	r0, r24
    1918:	ca 01       	movw	r24, r20
    191a:	a0 01       	movw	r20, r0
    191c:	11 24       	eor	r1, r1
    191e:	ff 27       	eor	r31, r31
    1920:	59 1b       	sub	r21, r25
    1922:	99 f0       	breq	.+38     	; 0x194a <__addsf3x+0x5c>
    1924:	59 3f       	cpi	r21, 0xF9	; 249
    1926:	50 f4       	brcc	.+20     	; 0x193c <__addsf3x+0x4e>
    1928:	50 3e       	cpi	r21, 0xE0	; 224
    192a:	68 f1       	brcs	.+90     	; 0x1986 <__addsf3x+0x98>
    192c:	1a 16       	cp	r1, r26
    192e:	f0 40       	sbci	r31, 0x00	; 0
    1930:	a2 2f       	mov	r26, r18
    1932:	23 2f       	mov	r18, r19
    1934:	34 2f       	mov	r19, r20
    1936:	44 27       	eor	r20, r20
    1938:	58 5f       	subi	r21, 0xF8	; 248
    193a:	f3 cf       	rjmp	.-26     	; 0x1922 <__addsf3x+0x34>
    193c:	46 95       	lsr	r20
    193e:	37 95       	ror	r19
    1940:	27 95       	ror	r18
    1942:	a7 95       	ror	r26
    1944:	f0 40       	sbci	r31, 0x00	; 0
    1946:	53 95       	inc	r21
    1948:	c9 f7       	brne	.-14     	; 0x193c <__addsf3x+0x4e>
    194a:	7e f4       	brtc	.+30     	; 0x196a <__addsf3x+0x7c>
    194c:	1f 16       	cp	r1, r31
    194e:	ba 0b       	sbc	r27, r26
    1950:	62 0b       	sbc	r22, r18
    1952:	73 0b       	sbc	r23, r19
    1954:	84 0b       	sbc	r24, r20
    1956:	ba f0       	brmi	.+46     	; 0x1986 <__addsf3x+0x98>
    1958:	91 50       	subi	r25, 0x01	; 1
    195a:	a1 f0       	breq	.+40     	; 0x1984 <__addsf3x+0x96>
    195c:	ff 0f       	add	r31, r31
    195e:	bb 1f       	adc	r27, r27
    1960:	66 1f       	adc	r22, r22
    1962:	77 1f       	adc	r23, r23
    1964:	88 1f       	adc	r24, r24
    1966:	c2 f7       	brpl	.-16     	; 0x1958 <__addsf3x+0x6a>
    1968:	0e c0       	rjmp	.+28     	; 0x1986 <__addsf3x+0x98>
    196a:	ba 0f       	add	r27, r26
    196c:	62 1f       	adc	r22, r18
    196e:	73 1f       	adc	r23, r19
    1970:	84 1f       	adc	r24, r20
    1972:	48 f4       	brcc	.+18     	; 0x1986 <__addsf3x+0x98>
    1974:	87 95       	ror	r24
    1976:	77 95       	ror	r23
    1978:	67 95       	ror	r22
    197a:	b7 95       	ror	r27
    197c:	f7 95       	ror	r31
    197e:	9e 3f       	cpi	r25, 0xFE	; 254
    1980:	08 f0       	brcs	.+2      	; 0x1984 <__addsf3x+0x96>
    1982:	b3 cf       	rjmp	.-154    	; 0x18ea <__addsf3+0x1e>
    1984:	93 95       	inc	r25
    1986:	88 0f       	add	r24, r24
    1988:	08 f0       	brcs	.+2      	; 0x198c <__addsf3x+0x9e>
    198a:	99 27       	eor	r25, r25
    198c:	ee 0f       	add	r30, r30
    198e:	97 95       	ror	r25
    1990:	87 95       	ror	r24
    1992:	08 95       	ret
    1994:	8d d1       	rcall	.+794    	; 0x1cb0 <__fp_pscA>
    1996:	58 f0       	brcs	.+22     	; 0x19ae <__addsf3x+0xc0>
    1998:	80 e8       	ldi	r24, 0x80	; 128
    199a:	91 e0       	ldi	r25, 0x01	; 1
    199c:	09 f4       	brne	.+2      	; 0x19a0 <__addsf3x+0xb2>
    199e:	9e ef       	ldi	r25, 0xFE	; 254
    19a0:	8e d1       	rcall	.+796    	; 0x1cbe <__fp_pscB>
    19a2:	28 f0       	brcs	.+10     	; 0x19ae <__addsf3x+0xc0>
    19a4:	40 e8       	ldi	r20, 0x80	; 128
    19a6:	51 e0       	ldi	r21, 0x01	; 1
    19a8:	59 f4       	brne	.+22     	; 0x19c0 <atan2+0xe>
    19aa:	5e ef       	ldi	r21, 0xFE	; 254
    19ac:	09 c0       	rjmp	.+18     	; 0x19c0 <atan2+0xe>
    19ae:	58 c1       	rjmp	.+688    	; 0x1c60 <__fp_nan>
    19b0:	c0 c1       	rjmp	.+896    	; 0x1d32 <__fp_zero>

000019b2 <atan2>:
    19b2:	e9 2f       	mov	r30, r25
    19b4:	e0 78       	andi	r30, 0x80	; 128
    19b6:	9b d1       	rcall	.+822    	; 0x1cee <__fp_split3>
    19b8:	68 f3       	brcs	.-38     	; 0x1994 <__addsf3x+0xa6>
    19ba:	09 2e       	mov	r0, r25
    19bc:	05 2a       	or	r0, r21
    19be:	c1 f3       	breq	.-16     	; 0x19b0 <__addsf3x+0xc2>
    19c0:	26 17       	cp	r18, r22
    19c2:	37 07       	cpc	r19, r23
    19c4:	48 07       	cpc	r20, r24
    19c6:	59 07       	cpc	r21, r25
    19c8:	38 f0       	brcs	.+14     	; 0x19d8 <atan2+0x26>
    19ca:	0e 2e       	mov	r0, r30
    19cc:	07 f8       	bld	r0, 7
    19ce:	e0 25       	eor	r30, r0
    19d0:	69 f0       	breq	.+26     	; 0x19ec <atan2+0x3a>
    19d2:	e0 25       	eor	r30, r0
    19d4:	e0 64       	ori	r30, 0x40	; 64
    19d6:	0a c0       	rjmp	.+20     	; 0x19ec <atan2+0x3a>
    19d8:	ef 63       	ori	r30, 0x3F	; 63
    19da:	07 f8       	bld	r0, 7
    19dc:	00 94       	com	r0
    19de:	07 fa       	bst	r0, 7
    19e0:	db 01       	movw	r26, r22
    19e2:	b9 01       	movw	r22, r18
    19e4:	9d 01       	movw	r18, r26
    19e6:	dc 01       	movw	r26, r24
    19e8:	ca 01       	movw	r24, r20
    19ea:	ad 01       	movw	r20, r26
    19ec:	ef 93       	push	r30
    19ee:	47 d0       	rcall	.+142    	; 0x1a7e <__divsf3_pse>
    19f0:	6d d1       	rcall	.+730    	; 0x1ccc <__fp_round>
    19f2:	0a d0       	rcall	.+20     	; 0x1a08 <atan>
    19f4:	5f 91       	pop	r21
    19f6:	55 23       	and	r21, r21
    19f8:	31 f0       	breq	.+12     	; 0x1a06 <atan2+0x54>
    19fa:	2b ed       	ldi	r18, 0xDB	; 219
    19fc:	3f e0       	ldi	r19, 0x0F	; 15
    19fe:	49 e4       	ldi	r20, 0x49	; 73
    1a00:	50 fd       	sbrc	r21, 0
    1a02:	49 ec       	ldi	r20, 0xC9	; 201
    1a04:	63 cf       	rjmp	.-314    	; 0x18cc <__addsf3>
    1a06:	08 95       	ret

00001a08 <atan>:
    1a08:	df 93       	push	r29
    1a0a:	dd 27       	eor	r29, r29
    1a0c:	b9 2f       	mov	r27, r25
    1a0e:	bf 77       	andi	r27, 0x7F	; 127
    1a10:	40 e8       	ldi	r20, 0x80	; 128
    1a12:	5f e3       	ldi	r21, 0x3F	; 63
    1a14:	16 16       	cp	r1, r22
    1a16:	17 06       	cpc	r1, r23
    1a18:	48 07       	cpc	r20, r24
    1a1a:	5b 07       	cpc	r21, r27
    1a1c:	10 f4       	brcc	.+4      	; 0x1a22 <atan+0x1a>
    1a1e:	d9 2f       	mov	r29, r25
    1a20:	93 d1       	rcall	.+806    	; 0x1d48 <inverse>
    1a22:	9f 93       	push	r25
    1a24:	8f 93       	push	r24
    1a26:	7f 93       	push	r23
    1a28:	6f 93       	push	r22
    1a2a:	3a d2       	rcall	.+1140   	; 0x1ea0 <square>
    1a2c:	e4 ee       	ldi	r30, 0xE4	; 228
    1a2e:	f0 e0       	ldi	r31, 0x00	; 0
    1a30:	1a d1       	rcall	.+564    	; 0x1c66 <__fp_powser>
    1a32:	4c d1       	rcall	.+664    	; 0x1ccc <__fp_round>
    1a34:	2f 91       	pop	r18
    1a36:	3f 91       	pop	r19
    1a38:	4f 91       	pop	r20
    1a3a:	5f 91       	pop	r21
    1a3c:	98 d1       	rcall	.+816    	; 0x1d6e <__mulsf3x>
    1a3e:	dd 23       	and	r29, r29
    1a40:	49 f0       	breq	.+18     	; 0x1a54 <atan+0x4c>
    1a42:	90 58       	subi	r25, 0x80	; 128
    1a44:	a2 ea       	ldi	r26, 0xA2	; 162
    1a46:	2a ed       	ldi	r18, 0xDA	; 218
    1a48:	3f e0       	ldi	r19, 0x0F	; 15
    1a4a:	49 ec       	ldi	r20, 0xC9	; 201
    1a4c:	5f e3       	ldi	r21, 0x3F	; 63
    1a4e:	d0 78       	andi	r29, 0x80	; 128
    1a50:	5d 27       	eor	r21, r29
    1a52:	4d df       	rcall	.-358    	; 0x18ee <__addsf3x>
    1a54:	df 91       	pop	r29
    1a56:	3a c1       	rjmp	.+628    	; 0x1ccc <__fp_round>

00001a58 <__cmpsf2>:
    1a58:	d9 d0       	rcall	.+434    	; 0x1c0c <__fp_cmp>
    1a5a:	08 f4       	brcc	.+2      	; 0x1a5e <__cmpsf2+0x6>
    1a5c:	81 e0       	ldi	r24, 0x01	; 1
    1a5e:	08 95       	ret

00001a60 <__divsf3>:
    1a60:	0c d0       	rcall	.+24     	; 0x1a7a <__divsf3x>
    1a62:	34 c1       	rjmp	.+616    	; 0x1ccc <__fp_round>
    1a64:	2c d1       	rcall	.+600    	; 0x1cbe <__fp_pscB>
    1a66:	40 f0       	brcs	.+16     	; 0x1a78 <__divsf3+0x18>
    1a68:	23 d1       	rcall	.+582    	; 0x1cb0 <__fp_pscA>
    1a6a:	30 f0       	brcs	.+12     	; 0x1a78 <__divsf3+0x18>
    1a6c:	21 f4       	brne	.+8      	; 0x1a76 <__divsf3+0x16>
    1a6e:	5f 3f       	cpi	r21, 0xFF	; 255
    1a70:	19 f0       	breq	.+6      	; 0x1a78 <__divsf3+0x18>
    1a72:	f0 c0       	rjmp	.+480    	; 0x1c54 <__fp_inf>
    1a74:	51 11       	cpse	r21, r1
    1a76:	5e c1       	rjmp	.+700    	; 0x1d34 <__fp_szero>
    1a78:	f3 c0       	rjmp	.+486    	; 0x1c60 <__fp_nan>

00001a7a <__divsf3x>:
    1a7a:	39 d1       	rcall	.+626    	; 0x1cee <__fp_split3>
    1a7c:	98 f3       	brcs	.-26     	; 0x1a64 <__divsf3+0x4>

00001a7e <__divsf3_pse>:
    1a7e:	99 23       	and	r25, r25
    1a80:	c9 f3       	breq	.-14     	; 0x1a74 <__divsf3+0x14>
    1a82:	55 23       	and	r21, r21
    1a84:	b1 f3       	breq	.-20     	; 0x1a72 <__divsf3+0x12>
    1a86:	95 1b       	sub	r25, r21
    1a88:	55 0b       	sbc	r21, r21
    1a8a:	bb 27       	eor	r27, r27
    1a8c:	aa 27       	eor	r26, r26
    1a8e:	62 17       	cp	r22, r18
    1a90:	73 07       	cpc	r23, r19
    1a92:	84 07       	cpc	r24, r20
    1a94:	38 f0       	brcs	.+14     	; 0x1aa4 <__divsf3_pse+0x26>
    1a96:	9f 5f       	subi	r25, 0xFF	; 255
    1a98:	5f 4f       	sbci	r21, 0xFF	; 255
    1a9a:	22 0f       	add	r18, r18
    1a9c:	33 1f       	adc	r19, r19
    1a9e:	44 1f       	adc	r20, r20
    1aa0:	aa 1f       	adc	r26, r26
    1aa2:	a9 f3       	breq	.-22     	; 0x1a8e <__divsf3_pse+0x10>
    1aa4:	33 d0       	rcall	.+102    	; 0x1b0c <__divsf3_pse+0x8e>
    1aa6:	0e 2e       	mov	r0, r30
    1aa8:	3a f0       	brmi	.+14     	; 0x1ab8 <__divsf3_pse+0x3a>
    1aaa:	e0 e8       	ldi	r30, 0x80	; 128
    1aac:	30 d0       	rcall	.+96     	; 0x1b0e <__divsf3_pse+0x90>
    1aae:	91 50       	subi	r25, 0x01	; 1
    1ab0:	50 40       	sbci	r21, 0x00	; 0
    1ab2:	e6 95       	lsr	r30
    1ab4:	00 1c       	adc	r0, r0
    1ab6:	ca f7       	brpl	.-14     	; 0x1aaa <__divsf3_pse+0x2c>
    1ab8:	29 d0       	rcall	.+82     	; 0x1b0c <__divsf3_pse+0x8e>
    1aba:	fe 2f       	mov	r31, r30
    1abc:	27 d0       	rcall	.+78     	; 0x1b0c <__divsf3_pse+0x8e>
    1abe:	66 0f       	add	r22, r22
    1ac0:	77 1f       	adc	r23, r23
    1ac2:	88 1f       	adc	r24, r24
    1ac4:	bb 1f       	adc	r27, r27
    1ac6:	26 17       	cp	r18, r22
    1ac8:	37 07       	cpc	r19, r23
    1aca:	48 07       	cpc	r20, r24
    1acc:	ab 07       	cpc	r26, r27
    1ace:	b0 e8       	ldi	r27, 0x80	; 128
    1ad0:	09 f0       	breq	.+2      	; 0x1ad4 <__divsf3_pse+0x56>
    1ad2:	bb 0b       	sbc	r27, r27
    1ad4:	80 2d       	mov	r24, r0
    1ad6:	bf 01       	movw	r22, r30
    1ad8:	ff 27       	eor	r31, r31
    1ada:	93 58       	subi	r25, 0x83	; 131
    1adc:	5f 4f       	sbci	r21, 0xFF	; 255
    1ade:	2a f0       	brmi	.+10     	; 0x1aea <__divsf3_pse+0x6c>
    1ae0:	9e 3f       	cpi	r25, 0xFE	; 254
    1ae2:	51 05       	cpc	r21, r1
    1ae4:	68 f0       	brcs	.+26     	; 0x1b00 <__divsf3_pse+0x82>
    1ae6:	b6 c0       	rjmp	.+364    	; 0x1c54 <__fp_inf>
    1ae8:	25 c1       	rjmp	.+586    	; 0x1d34 <__fp_szero>
    1aea:	5f 3f       	cpi	r21, 0xFF	; 255
    1aec:	ec f3       	brlt	.-6      	; 0x1ae8 <__divsf3_pse+0x6a>
    1aee:	98 3e       	cpi	r25, 0xE8	; 232
    1af0:	dc f3       	brlt	.-10     	; 0x1ae8 <__divsf3_pse+0x6a>
    1af2:	86 95       	lsr	r24
    1af4:	77 95       	ror	r23
    1af6:	67 95       	ror	r22
    1af8:	b7 95       	ror	r27
    1afa:	f7 95       	ror	r31
    1afc:	9f 5f       	subi	r25, 0xFF	; 255
    1afe:	c9 f7       	brne	.-14     	; 0x1af2 <__divsf3_pse+0x74>
    1b00:	88 0f       	add	r24, r24
    1b02:	91 1d       	adc	r25, r1
    1b04:	96 95       	lsr	r25
    1b06:	87 95       	ror	r24
    1b08:	97 f9       	bld	r25, 7
    1b0a:	08 95       	ret
    1b0c:	e1 e0       	ldi	r30, 0x01	; 1
    1b0e:	66 0f       	add	r22, r22
    1b10:	77 1f       	adc	r23, r23
    1b12:	88 1f       	adc	r24, r24
    1b14:	bb 1f       	adc	r27, r27
    1b16:	62 17       	cp	r22, r18
    1b18:	73 07       	cpc	r23, r19
    1b1a:	84 07       	cpc	r24, r20
    1b1c:	ba 07       	cpc	r27, r26
    1b1e:	20 f0       	brcs	.+8      	; 0x1b28 <__divsf3_pse+0xaa>
    1b20:	62 1b       	sub	r22, r18
    1b22:	73 0b       	sbc	r23, r19
    1b24:	84 0b       	sbc	r24, r20
    1b26:	ba 0b       	sbc	r27, r26
    1b28:	ee 1f       	adc	r30, r30
    1b2a:	88 f7       	brcc	.-30     	; 0x1b0e <__divsf3_pse+0x90>
    1b2c:	e0 95       	com	r30
    1b2e:	08 95       	ret

00001b30 <__fixsfsi>:
    1b30:	04 d0       	rcall	.+8      	; 0x1b3a <__fixunssfsi>
    1b32:	68 94       	set
    1b34:	b1 11       	cpse	r27, r1
    1b36:	fe c0       	rjmp	.+508    	; 0x1d34 <__fp_szero>
    1b38:	08 95       	ret

00001b3a <__fixunssfsi>:
    1b3a:	e1 d0       	rcall	.+450    	; 0x1cfe <__fp_splitA>
    1b3c:	88 f0       	brcs	.+34     	; 0x1b60 <__fixunssfsi+0x26>
    1b3e:	9f 57       	subi	r25, 0x7F	; 127
    1b40:	90 f0       	brcs	.+36     	; 0x1b66 <__fixunssfsi+0x2c>
    1b42:	b9 2f       	mov	r27, r25
    1b44:	99 27       	eor	r25, r25
    1b46:	b7 51       	subi	r27, 0x17	; 23
    1b48:	a0 f0       	brcs	.+40     	; 0x1b72 <__fixunssfsi+0x38>
    1b4a:	d1 f0       	breq	.+52     	; 0x1b80 <__fixunssfsi+0x46>
    1b4c:	66 0f       	add	r22, r22
    1b4e:	77 1f       	adc	r23, r23
    1b50:	88 1f       	adc	r24, r24
    1b52:	99 1f       	adc	r25, r25
    1b54:	1a f0       	brmi	.+6      	; 0x1b5c <__fixunssfsi+0x22>
    1b56:	ba 95       	dec	r27
    1b58:	c9 f7       	brne	.-14     	; 0x1b4c <__fixunssfsi+0x12>
    1b5a:	12 c0       	rjmp	.+36     	; 0x1b80 <__fixunssfsi+0x46>
    1b5c:	b1 30       	cpi	r27, 0x01	; 1
    1b5e:	81 f0       	breq	.+32     	; 0x1b80 <__fixunssfsi+0x46>
    1b60:	e8 d0       	rcall	.+464    	; 0x1d32 <__fp_zero>
    1b62:	b1 e0       	ldi	r27, 0x01	; 1
    1b64:	08 95       	ret
    1b66:	e5 c0       	rjmp	.+458    	; 0x1d32 <__fp_zero>
    1b68:	67 2f       	mov	r22, r23
    1b6a:	78 2f       	mov	r23, r24
    1b6c:	88 27       	eor	r24, r24
    1b6e:	b8 5f       	subi	r27, 0xF8	; 248
    1b70:	39 f0       	breq	.+14     	; 0x1b80 <__fixunssfsi+0x46>
    1b72:	b9 3f       	cpi	r27, 0xF9	; 249
    1b74:	cc f3       	brlt	.-14     	; 0x1b68 <__fixunssfsi+0x2e>
    1b76:	86 95       	lsr	r24
    1b78:	77 95       	ror	r23
    1b7a:	67 95       	ror	r22
    1b7c:	b3 95       	inc	r27
    1b7e:	d9 f7       	brne	.-10     	; 0x1b76 <__fixunssfsi+0x3c>
    1b80:	3e f4       	brtc	.+14     	; 0x1b90 <__fixunssfsi+0x56>
    1b82:	90 95       	com	r25
    1b84:	80 95       	com	r24
    1b86:	70 95       	com	r23
    1b88:	61 95       	neg	r22
    1b8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b8c:	8f 4f       	sbci	r24, 0xFF	; 255
    1b8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b90:	08 95       	ret

00001b92 <__floatunsisf>:
    1b92:	e8 94       	clt
    1b94:	09 c0       	rjmp	.+18     	; 0x1ba8 <__floatsisf+0x12>

00001b96 <__floatsisf>:
    1b96:	97 fb       	bst	r25, 7
    1b98:	3e f4       	brtc	.+14     	; 0x1ba8 <__floatsisf+0x12>
    1b9a:	90 95       	com	r25
    1b9c:	80 95       	com	r24
    1b9e:	70 95       	com	r23
    1ba0:	61 95       	neg	r22
    1ba2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ba4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ba6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba8:	99 23       	and	r25, r25
    1baa:	a9 f0       	breq	.+42     	; 0x1bd6 <__floatsisf+0x40>
    1bac:	f9 2f       	mov	r31, r25
    1bae:	96 e9       	ldi	r25, 0x96	; 150
    1bb0:	bb 27       	eor	r27, r27
    1bb2:	93 95       	inc	r25
    1bb4:	f6 95       	lsr	r31
    1bb6:	87 95       	ror	r24
    1bb8:	77 95       	ror	r23
    1bba:	67 95       	ror	r22
    1bbc:	b7 95       	ror	r27
    1bbe:	f1 11       	cpse	r31, r1
    1bc0:	f8 cf       	rjmp	.-16     	; 0x1bb2 <__floatsisf+0x1c>
    1bc2:	fa f4       	brpl	.+62     	; 0x1c02 <__floatsisf+0x6c>
    1bc4:	bb 0f       	add	r27, r27
    1bc6:	11 f4       	brne	.+4      	; 0x1bcc <__floatsisf+0x36>
    1bc8:	60 ff       	sbrs	r22, 0
    1bca:	1b c0       	rjmp	.+54     	; 0x1c02 <__floatsisf+0x6c>
    1bcc:	6f 5f       	subi	r22, 0xFF	; 255
    1bce:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd0:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd4:	16 c0       	rjmp	.+44     	; 0x1c02 <__floatsisf+0x6c>
    1bd6:	88 23       	and	r24, r24
    1bd8:	11 f0       	breq	.+4      	; 0x1bde <__floatsisf+0x48>
    1bda:	96 e9       	ldi	r25, 0x96	; 150
    1bdc:	11 c0       	rjmp	.+34     	; 0x1c00 <__floatsisf+0x6a>
    1bde:	77 23       	and	r23, r23
    1be0:	21 f0       	breq	.+8      	; 0x1bea <__floatsisf+0x54>
    1be2:	9e e8       	ldi	r25, 0x8E	; 142
    1be4:	87 2f       	mov	r24, r23
    1be6:	76 2f       	mov	r23, r22
    1be8:	05 c0       	rjmp	.+10     	; 0x1bf4 <__floatsisf+0x5e>
    1bea:	66 23       	and	r22, r22
    1bec:	71 f0       	breq	.+28     	; 0x1c0a <__floatsisf+0x74>
    1bee:	96 e8       	ldi	r25, 0x86	; 134
    1bf0:	86 2f       	mov	r24, r22
    1bf2:	70 e0       	ldi	r23, 0x00	; 0
    1bf4:	60 e0       	ldi	r22, 0x00	; 0
    1bf6:	2a f0       	brmi	.+10     	; 0x1c02 <__floatsisf+0x6c>
    1bf8:	9a 95       	dec	r25
    1bfa:	66 0f       	add	r22, r22
    1bfc:	77 1f       	adc	r23, r23
    1bfe:	88 1f       	adc	r24, r24
    1c00:	da f7       	brpl	.-10     	; 0x1bf8 <__floatsisf+0x62>
    1c02:	88 0f       	add	r24, r24
    1c04:	96 95       	lsr	r25
    1c06:	87 95       	ror	r24
    1c08:	97 f9       	bld	r25, 7
    1c0a:	08 95       	ret

00001c0c <__fp_cmp>:
    1c0c:	99 0f       	add	r25, r25
    1c0e:	00 08       	sbc	r0, r0
    1c10:	55 0f       	add	r21, r21
    1c12:	aa 0b       	sbc	r26, r26
    1c14:	e0 e8       	ldi	r30, 0x80	; 128
    1c16:	fe ef       	ldi	r31, 0xFE	; 254
    1c18:	16 16       	cp	r1, r22
    1c1a:	17 06       	cpc	r1, r23
    1c1c:	e8 07       	cpc	r30, r24
    1c1e:	f9 07       	cpc	r31, r25
    1c20:	c0 f0       	brcs	.+48     	; 0x1c52 <__fp_cmp+0x46>
    1c22:	12 16       	cp	r1, r18
    1c24:	13 06       	cpc	r1, r19
    1c26:	e4 07       	cpc	r30, r20
    1c28:	f5 07       	cpc	r31, r21
    1c2a:	98 f0       	brcs	.+38     	; 0x1c52 <__fp_cmp+0x46>
    1c2c:	62 1b       	sub	r22, r18
    1c2e:	73 0b       	sbc	r23, r19
    1c30:	84 0b       	sbc	r24, r20
    1c32:	95 0b       	sbc	r25, r21
    1c34:	39 f4       	brne	.+14     	; 0x1c44 <__fp_cmp+0x38>
    1c36:	0a 26       	eor	r0, r26
    1c38:	61 f0       	breq	.+24     	; 0x1c52 <__fp_cmp+0x46>
    1c3a:	23 2b       	or	r18, r19
    1c3c:	24 2b       	or	r18, r20
    1c3e:	25 2b       	or	r18, r21
    1c40:	21 f4       	brne	.+8      	; 0x1c4a <__fp_cmp+0x3e>
    1c42:	08 95       	ret
    1c44:	0a 26       	eor	r0, r26
    1c46:	09 f4       	brne	.+2      	; 0x1c4a <__fp_cmp+0x3e>
    1c48:	a1 40       	sbci	r26, 0x01	; 1
    1c4a:	a6 95       	lsr	r26
    1c4c:	8f ef       	ldi	r24, 0xFF	; 255
    1c4e:	81 1d       	adc	r24, r1
    1c50:	81 1d       	adc	r24, r1
    1c52:	08 95       	ret

00001c54 <__fp_inf>:
    1c54:	97 f9       	bld	r25, 7
    1c56:	9f 67       	ori	r25, 0x7F	; 127
    1c58:	80 e8       	ldi	r24, 0x80	; 128
    1c5a:	70 e0       	ldi	r23, 0x00	; 0
    1c5c:	60 e0       	ldi	r22, 0x00	; 0
    1c5e:	08 95       	ret

00001c60 <__fp_nan>:
    1c60:	9f ef       	ldi	r25, 0xFF	; 255
    1c62:	80 ec       	ldi	r24, 0xC0	; 192
    1c64:	08 95       	ret

00001c66 <__fp_powser>:
    1c66:	df 93       	push	r29
    1c68:	cf 93       	push	r28
    1c6a:	1f 93       	push	r17
    1c6c:	0f 93       	push	r16
    1c6e:	ff 92       	push	r15
    1c70:	ef 92       	push	r14
    1c72:	df 92       	push	r13
    1c74:	7b 01       	movw	r14, r22
    1c76:	8c 01       	movw	r16, r24
    1c78:	68 94       	set
    1c7a:	05 c0       	rjmp	.+10     	; 0x1c86 <__fp_powser+0x20>
    1c7c:	da 2e       	mov	r13, r26
    1c7e:	ef 01       	movw	r28, r30
    1c80:	76 d0       	rcall	.+236    	; 0x1d6e <__mulsf3x>
    1c82:	fe 01       	movw	r30, r28
    1c84:	e8 94       	clt
    1c86:	a5 91       	lpm	r26, Z+
    1c88:	25 91       	lpm	r18, Z+
    1c8a:	35 91       	lpm	r19, Z+
    1c8c:	45 91       	lpm	r20, Z+
    1c8e:	55 91       	lpm	r21, Z+
    1c90:	ae f3       	brts	.-22     	; 0x1c7c <__fp_powser+0x16>
    1c92:	ef 01       	movw	r28, r30
    1c94:	2c de       	rcall	.-936    	; 0x18ee <__addsf3x>
    1c96:	fe 01       	movw	r30, r28
    1c98:	97 01       	movw	r18, r14
    1c9a:	a8 01       	movw	r20, r16
    1c9c:	da 94       	dec	r13
    1c9e:	79 f7       	brne	.-34     	; 0x1c7e <__fp_powser+0x18>
    1ca0:	df 90       	pop	r13
    1ca2:	ef 90       	pop	r14
    1ca4:	ff 90       	pop	r15
    1ca6:	0f 91       	pop	r16
    1ca8:	1f 91       	pop	r17
    1caa:	cf 91       	pop	r28
    1cac:	df 91       	pop	r29
    1cae:	08 95       	ret

00001cb0 <__fp_pscA>:
    1cb0:	00 24       	eor	r0, r0
    1cb2:	0a 94       	dec	r0
    1cb4:	16 16       	cp	r1, r22
    1cb6:	17 06       	cpc	r1, r23
    1cb8:	18 06       	cpc	r1, r24
    1cba:	09 06       	cpc	r0, r25
    1cbc:	08 95       	ret

00001cbe <__fp_pscB>:
    1cbe:	00 24       	eor	r0, r0
    1cc0:	0a 94       	dec	r0
    1cc2:	12 16       	cp	r1, r18
    1cc4:	13 06       	cpc	r1, r19
    1cc6:	14 06       	cpc	r1, r20
    1cc8:	05 06       	cpc	r0, r21
    1cca:	08 95       	ret

00001ccc <__fp_round>:
    1ccc:	09 2e       	mov	r0, r25
    1cce:	03 94       	inc	r0
    1cd0:	00 0c       	add	r0, r0
    1cd2:	11 f4       	brne	.+4      	; 0x1cd8 <__fp_round+0xc>
    1cd4:	88 23       	and	r24, r24
    1cd6:	52 f0       	brmi	.+20     	; 0x1cec <__fp_round+0x20>
    1cd8:	bb 0f       	add	r27, r27
    1cda:	40 f4       	brcc	.+16     	; 0x1cec <__fp_round+0x20>
    1cdc:	bf 2b       	or	r27, r31
    1cde:	11 f4       	brne	.+4      	; 0x1ce4 <__fp_round+0x18>
    1ce0:	60 ff       	sbrs	r22, 0
    1ce2:	04 c0       	rjmp	.+8      	; 0x1cec <__fp_round+0x20>
    1ce4:	6f 5f       	subi	r22, 0xFF	; 255
    1ce6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ce8:	8f 4f       	sbci	r24, 0xFF	; 255
    1cea:	9f 4f       	sbci	r25, 0xFF	; 255
    1cec:	08 95       	ret

00001cee <__fp_split3>:
    1cee:	57 fd       	sbrc	r21, 7
    1cf0:	90 58       	subi	r25, 0x80	; 128
    1cf2:	44 0f       	add	r20, r20
    1cf4:	55 1f       	adc	r21, r21
    1cf6:	59 f0       	breq	.+22     	; 0x1d0e <__fp_splitA+0x10>
    1cf8:	5f 3f       	cpi	r21, 0xFF	; 255
    1cfa:	71 f0       	breq	.+28     	; 0x1d18 <__fp_splitA+0x1a>
    1cfc:	47 95       	ror	r20

00001cfe <__fp_splitA>:
    1cfe:	88 0f       	add	r24, r24
    1d00:	97 fb       	bst	r25, 7
    1d02:	99 1f       	adc	r25, r25
    1d04:	61 f0       	breq	.+24     	; 0x1d1e <__fp_splitA+0x20>
    1d06:	9f 3f       	cpi	r25, 0xFF	; 255
    1d08:	79 f0       	breq	.+30     	; 0x1d28 <__fp_splitA+0x2a>
    1d0a:	87 95       	ror	r24
    1d0c:	08 95       	ret
    1d0e:	12 16       	cp	r1, r18
    1d10:	13 06       	cpc	r1, r19
    1d12:	14 06       	cpc	r1, r20
    1d14:	55 1f       	adc	r21, r21
    1d16:	f2 cf       	rjmp	.-28     	; 0x1cfc <__fp_split3+0xe>
    1d18:	46 95       	lsr	r20
    1d1a:	f1 df       	rcall	.-30     	; 0x1cfe <__fp_splitA>
    1d1c:	08 c0       	rjmp	.+16     	; 0x1d2e <__fp_splitA+0x30>
    1d1e:	16 16       	cp	r1, r22
    1d20:	17 06       	cpc	r1, r23
    1d22:	18 06       	cpc	r1, r24
    1d24:	99 1f       	adc	r25, r25
    1d26:	f1 cf       	rjmp	.-30     	; 0x1d0a <__fp_splitA+0xc>
    1d28:	86 95       	lsr	r24
    1d2a:	71 05       	cpc	r23, r1
    1d2c:	61 05       	cpc	r22, r1
    1d2e:	08 94       	sec
    1d30:	08 95       	ret

00001d32 <__fp_zero>:
    1d32:	e8 94       	clt

00001d34 <__fp_szero>:
    1d34:	bb 27       	eor	r27, r27
    1d36:	66 27       	eor	r22, r22
    1d38:	77 27       	eor	r23, r23
    1d3a:	cb 01       	movw	r24, r22
    1d3c:	97 f9       	bld	r25, 7
    1d3e:	08 95       	ret

00001d40 <__gesf2>:
    1d40:	65 df       	rcall	.-310    	; 0x1c0c <__fp_cmp>
    1d42:	08 f4       	brcc	.+2      	; 0x1d46 <__gesf2+0x6>
    1d44:	8f ef       	ldi	r24, 0xFF	; 255
    1d46:	08 95       	ret

00001d48 <inverse>:
    1d48:	9b 01       	movw	r18, r22
    1d4a:	ac 01       	movw	r20, r24
    1d4c:	60 e0       	ldi	r22, 0x00	; 0
    1d4e:	70 e0       	ldi	r23, 0x00	; 0
    1d50:	80 e8       	ldi	r24, 0x80	; 128
    1d52:	9f e3       	ldi	r25, 0x3F	; 63
    1d54:	85 ce       	rjmp	.-758    	; 0x1a60 <__divsf3>

00001d56 <__mulsf3>:
    1d56:	0b d0       	rcall	.+22     	; 0x1d6e <__mulsf3x>
    1d58:	b9 cf       	rjmp	.-142    	; 0x1ccc <__fp_round>
    1d5a:	aa df       	rcall	.-172    	; 0x1cb0 <__fp_pscA>
    1d5c:	28 f0       	brcs	.+10     	; 0x1d68 <__mulsf3+0x12>
    1d5e:	af df       	rcall	.-162    	; 0x1cbe <__fp_pscB>
    1d60:	18 f0       	brcs	.+6      	; 0x1d68 <__mulsf3+0x12>
    1d62:	95 23       	and	r25, r21
    1d64:	09 f0       	breq	.+2      	; 0x1d68 <__mulsf3+0x12>
    1d66:	76 cf       	rjmp	.-276    	; 0x1c54 <__fp_inf>
    1d68:	7b cf       	rjmp	.-266    	; 0x1c60 <__fp_nan>
    1d6a:	11 24       	eor	r1, r1
    1d6c:	e3 cf       	rjmp	.-58     	; 0x1d34 <__fp_szero>

00001d6e <__mulsf3x>:
    1d6e:	bf df       	rcall	.-130    	; 0x1cee <__fp_split3>
    1d70:	a0 f3       	brcs	.-24     	; 0x1d5a <__mulsf3+0x4>

00001d72 <__mulsf3_pse>:
    1d72:	95 9f       	mul	r25, r21
    1d74:	d1 f3       	breq	.-12     	; 0x1d6a <__mulsf3+0x14>
    1d76:	95 0f       	add	r25, r21
    1d78:	50 e0       	ldi	r21, 0x00	; 0
    1d7a:	55 1f       	adc	r21, r21
    1d7c:	62 9f       	mul	r22, r18
    1d7e:	f0 01       	movw	r30, r0
    1d80:	72 9f       	mul	r23, r18
    1d82:	bb 27       	eor	r27, r27
    1d84:	f0 0d       	add	r31, r0
    1d86:	b1 1d       	adc	r27, r1
    1d88:	63 9f       	mul	r22, r19
    1d8a:	aa 27       	eor	r26, r26
    1d8c:	f0 0d       	add	r31, r0
    1d8e:	b1 1d       	adc	r27, r1
    1d90:	aa 1f       	adc	r26, r26
    1d92:	64 9f       	mul	r22, r20
    1d94:	66 27       	eor	r22, r22
    1d96:	b0 0d       	add	r27, r0
    1d98:	a1 1d       	adc	r26, r1
    1d9a:	66 1f       	adc	r22, r22
    1d9c:	82 9f       	mul	r24, r18
    1d9e:	22 27       	eor	r18, r18
    1da0:	b0 0d       	add	r27, r0
    1da2:	a1 1d       	adc	r26, r1
    1da4:	62 1f       	adc	r22, r18
    1da6:	73 9f       	mul	r23, r19
    1da8:	b0 0d       	add	r27, r0
    1daa:	a1 1d       	adc	r26, r1
    1dac:	62 1f       	adc	r22, r18
    1dae:	83 9f       	mul	r24, r19
    1db0:	a0 0d       	add	r26, r0
    1db2:	61 1d       	adc	r22, r1
    1db4:	22 1f       	adc	r18, r18
    1db6:	74 9f       	mul	r23, r20
    1db8:	33 27       	eor	r19, r19
    1dba:	a0 0d       	add	r26, r0
    1dbc:	61 1d       	adc	r22, r1
    1dbe:	23 1f       	adc	r18, r19
    1dc0:	84 9f       	mul	r24, r20
    1dc2:	60 0d       	add	r22, r0
    1dc4:	21 1d       	adc	r18, r1
    1dc6:	82 2f       	mov	r24, r18
    1dc8:	76 2f       	mov	r23, r22
    1dca:	6a 2f       	mov	r22, r26
    1dcc:	11 24       	eor	r1, r1
    1dce:	9f 57       	subi	r25, 0x7F	; 127
    1dd0:	50 40       	sbci	r21, 0x00	; 0
    1dd2:	8a f0       	brmi	.+34     	; 0x1df6 <__mulsf3_pse+0x84>
    1dd4:	e1 f0       	breq	.+56     	; 0x1e0e <__mulsf3_pse+0x9c>
    1dd6:	88 23       	and	r24, r24
    1dd8:	4a f0       	brmi	.+18     	; 0x1dec <__mulsf3_pse+0x7a>
    1dda:	ee 0f       	add	r30, r30
    1ddc:	ff 1f       	adc	r31, r31
    1dde:	bb 1f       	adc	r27, r27
    1de0:	66 1f       	adc	r22, r22
    1de2:	77 1f       	adc	r23, r23
    1de4:	88 1f       	adc	r24, r24
    1de6:	91 50       	subi	r25, 0x01	; 1
    1de8:	50 40       	sbci	r21, 0x00	; 0
    1dea:	a9 f7       	brne	.-22     	; 0x1dd6 <__mulsf3_pse+0x64>
    1dec:	9e 3f       	cpi	r25, 0xFE	; 254
    1dee:	51 05       	cpc	r21, r1
    1df0:	70 f0       	brcs	.+28     	; 0x1e0e <__mulsf3_pse+0x9c>
    1df2:	30 cf       	rjmp	.-416    	; 0x1c54 <__fp_inf>
    1df4:	9f cf       	rjmp	.-194    	; 0x1d34 <__fp_szero>
    1df6:	5f 3f       	cpi	r21, 0xFF	; 255
    1df8:	ec f3       	brlt	.-6      	; 0x1df4 <__mulsf3_pse+0x82>
    1dfa:	98 3e       	cpi	r25, 0xE8	; 232
    1dfc:	dc f3       	brlt	.-10     	; 0x1df4 <__mulsf3_pse+0x82>
    1dfe:	86 95       	lsr	r24
    1e00:	77 95       	ror	r23
    1e02:	67 95       	ror	r22
    1e04:	b7 95       	ror	r27
    1e06:	f7 95       	ror	r31
    1e08:	e7 95       	ror	r30
    1e0a:	9f 5f       	subi	r25, 0xFF	; 255
    1e0c:	c1 f7       	brne	.-16     	; 0x1dfe <__mulsf3_pse+0x8c>
    1e0e:	fe 2b       	or	r31, r30
    1e10:	88 0f       	add	r24, r24
    1e12:	91 1d       	adc	r25, r1
    1e14:	96 95       	lsr	r25
    1e16:	87 95       	ror	r24
    1e18:	97 f9       	bld	r25, 7
    1e1a:	08 95       	ret
    1e1c:	11 f4       	brne	.+4      	; 0x1e22 <__mulsf3_pse+0xb0>
    1e1e:	0e f4       	brtc	.+2      	; 0x1e22 <__mulsf3_pse+0xb0>
    1e20:	1f cf       	rjmp	.-450    	; 0x1c60 <__fp_nan>
    1e22:	41 c0       	rjmp	.+130    	; 0x1ea6 <__fp_mpack>

00001e24 <sqrt>:
    1e24:	6c df       	rcall	.-296    	; 0x1cfe <__fp_splitA>
    1e26:	d0 f3       	brcs	.-12     	; 0x1e1c <__mulsf3_pse+0xaa>
    1e28:	99 23       	and	r25, r25
    1e2a:	d9 f3       	breq	.-10     	; 0x1e22 <__mulsf3_pse+0xb0>
    1e2c:	ce f3       	brts	.-14     	; 0x1e20 <__mulsf3_pse+0xae>
    1e2e:	9f 57       	subi	r25, 0x7F	; 127
    1e30:	55 0b       	sbc	r21, r21
    1e32:	87 ff       	sbrs	r24, 7
    1e34:	46 d0       	rcall	.+140    	; 0x1ec2 <__fp_norm2>
    1e36:	00 24       	eor	r0, r0
    1e38:	a0 e6       	ldi	r26, 0x60	; 96
    1e3a:	40 ea       	ldi	r20, 0xA0	; 160
    1e3c:	90 01       	movw	r18, r0
    1e3e:	80 58       	subi	r24, 0x80	; 128
    1e40:	56 95       	lsr	r21
    1e42:	97 95       	ror	r25
    1e44:	28 f4       	brcc	.+10     	; 0x1e50 <sqrt+0x2c>
    1e46:	80 5c       	subi	r24, 0xC0	; 192
    1e48:	66 0f       	add	r22, r22
    1e4a:	77 1f       	adc	r23, r23
    1e4c:	88 1f       	adc	r24, r24
    1e4e:	20 f0       	brcs	.+8      	; 0x1e58 <sqrt+0x34>
    1e50:	26 17       	cp	r18, r22
    1e52:	37 07       	cpc	r19, r23
    1e54:	48 07       	cpc	r20, r24
    1e56:	30 f4       	brcc	.+12     	; 0x1e64 <sqrt+0x40>
    1e58:	62 1b       	sub	r22, r18
    1e5a:	73 0b       	sbc	r23, r19
    1e5c:	84 0b       	sbc	r24, r20
    1e5e:	20 29       	or	r18, r0
    1e60:	31 29       	or	r19, r1
    1e62:	4a 2b       	or	r20, r26
    1e64:	a6 95       	lsr	r26
    1e66:	17 94       	ror	r1
    1e68:	07 94       	ror	r0
    1e6a:	20 25       	eor	r18, r0
    1e6c:	31 25       	eor	r19, r1
    1e6e:	4a 27       	eor	r20, r26
    1e70:	58 f7       	brcc	.-42     	; 0x1e48 <sqrt+0x24>
    1e72:	66 0f       	add	r22, r22
    1e74:	77 1f       	adc	r23, r23
    1e76:	88 1f       	adc	r24, r24
    1e78:	20 f0       	brcs	.+8      	; 0x1e82 <sqrt+0x5e>
    1e7a:	26 17       	cp	r18, r22
    1e7c:	37 07       	cpc	r19, r23
    1e7e:	48 07       	cpc	r20, r24
    1e80:	30 f4       	brcc	.+12     	; 0x1e8e <sqrt+0x6a>
    1e82:	62 0b       	sbc	r22, r18
    1e84:	73 0b       	sbc	r23, r19
    1e86:	84 0b       	sbc	r24, r20
    1e88:	20 0d       	add	r18, r0
    1e8a:	31 1d       	adc	r19, r1
    1e8c:	41 1d       	adc	r20, r1
    1e8e:	a0 95       	com	r26
    1e90:	81 f7       	brne	.-32     	; 0x1e72 <sqrt+0x4e>
    1e92:	b9 01       	movw	r22, r18
    1e94:	84 2f       	mov	r24, r20
    1e96:	91 58       	subi	r25, 0x81	; 129
    1e98:	88 0f       	add	r24, r24
    1e9a:	96 95       	lsr	r25
    1e9c:	87 95       	ror	r24
    1e9e:	08 95       	ret

00001ea0 <square>:
    1ea0:	9b 01       	movw	r18, r22
    1ea2:	ac 01       	movw	r20, r24
    1ea4:	58 cf       	rjmp	.-336    	; 0x1d56 <__mulsf3>

00001ea6 <__fp_mpack>:
    1ea6:	9f 3f       	cpi	r25, 0xFF	; 255
    1ea8:	31 f0       	breq	.+12     	; 0x1eb6 <__fp_mpack_finite+0xc>

00001eaa <__fp_mpack_finite>:
    1eaa:	91 50       	subi	r25, 0x01	; 1
    1eac:	20 f4       	brcc	.+8      	; 0x1eb6 <__fp_mpack_finite+0xc>
    1eae:	87 95       	ror	r24
    1eb0:	77 95       	ror	r23
    1eb2:	67 95       	ror	r22
    1eb4:	b7 95       	ror	r27
    1eb6:	88 0f       	add	r24, r24
    1eb8:	91 1d       	adc	r25, r1
    1eba:	96 95       	lsr	r25
    1ebc:	87 95       	ror	r24
    1ebe:	97 f9       	bld	r25, 7
    1ec0:	08 95       	ret

00001ec2 <__fp_norm2>:
    1ec2:	91 50       	subi	r25, 0x01	; 1
    1ec4:	50 40       	sbci	r21, 0x00	; 0
    1ec6:	66 0f       	add	r22, r22
    1ec8:	77 1f       	adc	r23, r23
    1eca:	88 1f       	adc	r24, r24
    1ecc:	d2 f7       	brpl	.-12     	; 0x1ec2 <__fp_norm2>
    1ece:	08 95       	ret

00001ed0 <vfprintf>:
    1ed0:	2f 92       	push	r2
    1ed2:	3f 92       	push	r3
    1ed4:	4f 92       	push	r4
    1ed6:	5f 92       	push	r5
    1ed8:	6f 92       	push	r6
    1eda:	7f 92       	push	r7
    1edc:	8f 92       	push	r8
    1ede:	9f 92       	push	r9
    1ee0:	af 92       	push	r10
    1ee2:	bf 92       	push	r11
    1ee4:	cf 92       	push	r12
    1ee6:	df 92       	push	r13
    1ee8:	ef 92       	push	r14
    1eea:	ff 92       	push	r15
    1eec:	0f 93       	push	r16
    1eee:	1f 93       	push	r17
    1ef0:	cf 93       	push	r28
    1ef2:	df 93       	push	r29
    1ef4:	cd b7       	in	r28, 0x3d	; 61
    1ef6:	de b7       	in	r29, 0x3e	; 62
    1ef8:	60 97       	sbiw	r28, 0x10	; 16
    1efa:	0f b6       	in	r0, 0x3f	; 63
    1efc:	f8 94       	cli
    1efe:	de bf       	out	0x3e, r29	; 62
    1f00:	0f be       	out	0x3f, r0	; 63
    1f02:	cd bf       	out	0x3d, r28	; 61
    1f04:	7c 01       	movw	r14, r24
    1f06:	1b 01       	movw	r2, r22
    1f08:	6a 01       	movw	r12, r20
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	17 82       	std	Z+7, r1	; 0x07
    1f0e:	16 82       	std	Z+6, r1	; 0x06
    1f10:	83 81       	ldd	r24, Z+3	; 0x03
    1f12:	81 ff       	sbrs	r24, 1
    1f14:	2a c3       	rjmp	.+1620   	; 0x256a <__stack+0x36b>
    1f16:	9e 01       	movw	r18, r28
    1f18:	2f 5f       	subi	r18, 0xFF	; 255
    1f1a:	3f 4f       	sbci	r19, 0xFF	; 255
    1f1c:	39 01       	movw	r6, r18
    1f1e:	f7 01       	movw	r30, r14
    1f20:	93 81       	ldd	r25, Z+3	; 0x03
    1f22:	f1 01       	movw	r30, r2
    1f24:	93 fd       	sbrc	r25, 3
    1f26:	85 91       	lpm	r24, Z+
    1f28:	93 ff       	sbrs	r25, 3
    1f2a:	81 91       	ld	r24, Z+
    1f2c:	1f 01       	movw	r2, r30
    1f2e:	88 23       	and	r24, r24
    1f30:	09 f4       	brne	.+2      	; 0x1f34 <vfprintf+0x64>
    1f32:	17 c3       	rjmp	.+1582   	; 0x2562 <__stack+0x363>
    1f34:	85 32       	cpi	r24, 0x25	; 37
    1f36:	39 f4       	brne	.+14     	; 0x1f46 <vfprintf+0x76>
    1f38:	93 fd       	sbrc	r25, 3
    1f3a:	85 91       	lpm	r24, Z+
    1f3c:	93 ff       	sbrs	r25, 3
    1f3e:	81 91       	ld	r24, Z+
    1f40:	1f 01       	movw	r2, r30
    1f42:	85 32       	cpi	r24, 0x25	; 37
    1f44:	31 f4       	brne	.+12     	; 0x1f52 <vfprintf+0x82>
    1f46:	b7 01       	movw	r22, r14
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	aa d4       	rcall	.+2388   	; 0x28a0 <fputc>
    1f4c:	56 01       	movw	r10, r12
    1f4e:	65 01       	movw	r12, r10
    1f50:	e6 cf       	rjmp	.-52     	; 0x1f1e <vfprintf+0x4e>
    1f52:	10 e0       	ldi	r17, 0x00	; 0
    1f54:	51 2c       	mov	r5, r1
    1f56:	91 2c       	mov	r9, r1
    1f58:	ff e1       	ldi	r31, 0x1F	; 31
    1f5a:	f9 15       	cp	r31, r9
    1f5c:	d8 f0       	brcs	.+54     	; 0x1f94 <vfprintf+0xc4>
    1f5e:	8b 32       	cpi	r24, 0x2B	; 43
    1f60:	79 f0       	breq	.+30     	; 0x1f80 <vfprintf+0xb0>
    1f62:	38 f4       	brcc	.+14     	; 0x1f72 <vfprintf+0xa2>
    1f64:	80 32       	cpi	r24, 0x20	; 32
    1f66:	79 f0       	breq	.+30     	; 0x1f86 <vfprintf+0xb6>
    1f68:	83 32       	cpi	r24, 0x23	; 35
    1f6a:	a1 f4       	brne	.+40     	; 0x1f94 <vfprintf+0xc4>
    1f6c:	f9 2d       	mov	r31, r9
    1f6e:	f0 61       	ori	r31, 0x10	; 16
    1f70:	2e c0       	rjmp	.+92     	; 0x1fce <vfprintf+0xfe>
    1f72:	8d 32       	cpi	r24, 0x2D	; 45
    1f74:	61 f0       	breq	.+24     	; 0x1f8e <vfprintf+0xbe>
    1f76:	80 33       	cpi	r24, 0x30	; 48
    1f78:	69 f4       	brne	.+26     	; 0x1f94 <vfprintf+0xc4>
    1f7a:	29 2d       	mov	r18, r9
    1f7c:	21 60       	ori	r18, 0x01	; 1
    1f7e:	2d c0       	rjmp	.+90     	; 0x1fda <vfprintf+0x10a>
    1f80:	39 2d       	mov	r19, r9
    1f82:	32 60       	ori	r19, 0x02	; 2
    1f84:	93 2e       	mov	r9, r19
    1f86:	89 2d       	mov	r24, r9
    1f88:	84 60       	ori	r24, 0x04	; 4
    1f8a:	98 2e       	mov	r9, r24
    1f8c:	2a c0       	rjmp	.+84     	; 0x1fe2 <vfprintf+0x112>
    1f8e:	e9 2d       	mov	r30, r9
    1f90:	e8 60       	ori	r30, 0x08	; 8
    1f92:	15 c0       	rjmp	.+42     	; 0x1fbe <vfprintf+0xee>
    1f94:	97 fc       	sbrc	r9, 7
    1f96:	2d c0       	rjmp	.+90     	; 0x1ff2 <vfprintf+0x122>
    1f98:	20 ed       	ldi	r18, 0xD0	; 208
    1f9a:	28 0f       	add	r18, r24
    1f9c:	2a 30       	cpi	r18, 0x0A	; 10
    1f9e:	88 f4       	brcc	.+34     	; 0x1fc2 <vfprintf+0xf2>
    1fa0:	96 fe       	sbrs	r9, 6
    1fa2:	06 c0       	rjmp	.+12     	; 0x1fb0 <vfprintf+0xe0>
    1fa4:	3a e0       	ldi	r19, 0x0A	; 10
    1fa6:	13 9f       	mul	r17, r19
    1fa8:	20 0d       	add	r18, r0
    1faa:	11 24       	eor	r1, r1
    1fac:	12 2f       	mov	r17, r18
    1fae:	19 c0       	rjmp	.+50     	; 0x1fe2 <vfprintf+0x112>
    1fb0:	8a e0       	ldi	r24, 0x0A	; 10
    1fb2:	58 9e       	mul	r5, r24
    1fb4:	20 0d       	add	r18, r0
    1fb6:	11 24       	eor	r1, r1
    1fb8:	52 2e       	mov	r5, r18
    1fba:	e9 2d       	mov	r30, r9
    1fbc:	e0 62       	ori	r30, 0x20	; 32
    1fbe:	9e 2e       	mov	r9, r30
    1fc0:	10 c0       	rjmp	.+32     	; 0x1fe2 <vfprintf+0x112>
    1fc2:	8e 32       	cpi	r24, 0x2E	; 46
    1fc4:	31 f4       	brne	.+12     	; 0x1fd2 <vfprintf+0x102>
    1fc6:	96 fc       	sbrc	r9, 6
    1fc8:	cc c2       	rjmp	.+1432   	; 0x2562 <__stack+0x363>
    1fca:	f9 2d       	mov	r31, r9
    1fcc:	f0 64       	ori	r31, 0x40	; 64
    1fce:	9f 2e       	mov	r9, r31
    1fd0:	08 c0       	rjmp	.+16     	; 0x1fe2 <vfprintf+0x112>
    1fd2:	8c 36       	cpi	r24, 0x6C	; 108
    1fd4:	21 f4       	brne	.+8      	; 0x1fde <vfprintf+0x10e>
    1fd6:	29 2d       	mov	r18, r9
    1fd8:	20 68       	ori	r18, 0x80	; 128
    1fda:	92 2e       	mov	r9, r18
    1fdc:	02 c0       	rjmp	.+4      	; 0x1fe2 <vfprintf+0x112>
    1fde:	88 36       	cpi	r24, 0x68	; 104
    1fe0:	41 f4       	brne	.+16     	; 0x1ff2 <vfprintf+0x122>
    1fe2:	f1 01       	movw	r30, r2
    1fe4:	93 fd       	sbrc	r25, 3
    1fe6:	85 91       	lpm	r24, Z+
    1fe8:	93 ff       	sbrs	r25, 3
    1fea:	81 91       	ld	r24, Z+
    1fec:	1f 01       	movw	r2, r30
    1fee:	81 11       	cpse	r24, r1
    1ff0:	b3 cf       	rjmp	.-154    	; 0x1f58 <vfprintf+0x88>
    1ff2:	9b eb       	ldi	r25, 0xBB	; 187
    1ff4:	98 0f       	add	r25, r24
    1ff6:	93 30       	cpi	r25, 0x03	; 3
    1ff8:	20 f4       	brcc	.+8      	; 0x2002 <vfprintf+0x132>
    1ffa:	99 2d       	mov	r25, r9
    1ffc:	90 61       	ori	r25, 0x10	; 16
    1ffe:	80 5e       	subi	r24, 0xE0	; 224
    2000:	07 c0       	rjmp	.+14     	; 0x2010 <vfprintf+0x140>
    2002:	9b e9       	ldi	r25, 0x9B	; 155
    2004:	98 0f       	add	r25, r24
    2006:	93 30       	cpi	r25, 0x03	; 3
    2008:	08 f0       	brcs	.+2      	; 0x200c <vfprintf+0x13c>
    200a:	59 c1       	rjmp	.+690    	; 0x22be <__stack+0xbf>
    200c:	99 2d       	mov	r25, r9
    200e:	9f 7e       	andi	r25, 0xEF	; 239
    2010:	96 ff       	sbrs	r25, 6
    2012:	16 e0       	ldi	r17, 0x06	; 6
    2014:	9f 73       	andi	r25, 0x3F	; 63
    2016:	99 2e       	mov	r9, r25
    2018:	85 36       	cpi	r24, 0x65	; 101
    201a:	19 f4       	brne	.+6      	; 0x2022 <vfprintf+0x152>
    201c:	90 64       	ori	r25, 0x40	; 64
    201e:	99 2e       	mov	r9, r25
    2020:	08 c0       	rjmp	.+16     	; 0x2032 <vfprintf+0x162>
    2022:	86 36       	cpi	r24, 0x66	; 102
    2024:	21 f4       	brne	.+8      	; 0x202e <vfprintf+0x15e>
    2026:	39 2f       	mov	r19, r25
    2028:	30 68       	ori	r19, 0x80	; 128
    202a:	93 2e       	mov	r9, r19
    202c:	02 c0       	rjmp	.+4      	; 0x2032 <vfprintf+0x162>
    202e:	11 11       	cpse	r17, r1
    2030:	11 50       	subi	r17, 0x01	; 1
    2032:	97 fe       	sbrs	r9, 7
    2034:	07 c0       	rjmp	.+14     	; 0x2044 <vfprintf+0x174>
    2036:	1c 33       	cpi	r17, 0x3C	; 60
    2038:	50 f4       	brcc	.+20     	; 0x204e <vfprintf+0x17e>
    203a:	44 24       	eor	r4, r4
    203c:	43 94       	inc	r4
    203e:	41 0e       	add	r4, r17
    2040:	27 e0       	ldi	r18, 0x07	; 7
    2042:	0b c0       	rjmp	.+22     	; 0x205a <vfprintf+0x18a>
    2044:	18 30       	cpi	r17, 0x08	; 8
    2046:	38 f0       	brcs	.+14     	; 0x2056 <vfprintf+0x186>
    2048:	27 e0       	ldi	r18, 0x07	; 7
    204a:	17 e0       	ldi	r17, 0x07	; 7
    204c:	05 c0       	rjmp	.+10     	; 0x2058 <vfprintf+0x188>
    204e:	27 e0       	ldi	r18, 0x07	; 7
    2050:	9c e3       	ldi	r25, 0x3C	; 60
    2052:	49 2e       	mov	r4, r25
    2054:	02 c0       	rjmp	.+4      	; 0x205a <vfprintf+0x18a>
    2056:	21 2f       	mov	r18, r17
    2058:	41 2c       	mov	r4, r1
    205a:	56 01       	movw	r10, r12
    205c:	84 e0       	ldi	r24, 0x04	; 4
    205e:	a8 0e       	add	r10, r24
    2060:	b1 1c       	adc	r11, r1
    2062:	f6 01       	movw	r30, r12
    2064:	60 81       	ld	r22, Z
    2066:	71 81       	ldd	r23, Z+1	; 0x01
    2068:	82 81       	ldd	r24, Z+2	; 0x02
    206a:	93 81       	ldd	r25, Z+3	; 0x03
    206c:	04 2d       	mov	r16, r4
    206e:	a3 01       	movw	r20, r6
    2070:	df d2       	rcall	.+1470   	; 0x2630 <__ftoa_engine>
    2072:	6c 01       	movw	r12, r24
    2074:	f9 81       	ldd	r31, Y+1	; 0x01
    2076:	fc 87       	std	Y+12, r31	; 0x0c
    2078:	f0 ff       	sbrs	r31, 0
    207a:	02 c0       	rjmp	.+4      	; 0x2080 <vfprintf+0x1b0>
    207c:	f3 ff       	sbrs	r31, 3
    207e:	06 c0       	rjmp	.+12     	; 0x208c <vfprintf+0x1bc>
    2080:	91 fc       	sbrc	r9, 1
    2082:	06 c0       	rjmp	.+12     	; 0x2090 <vfprintf+0x1c0>
    2084:	92 fe       	sbrs	r9, 2
    2086:	06 c0       	rjmp	.+12     	; 0x2094 <vfprintf+0x1c4>
    2088:	00 e2       	ldi	r16, 0x20	; 32
    208a:	05 c0       	rjmp	.+10     	; 0x2096 <vfprintf+0x1c6>
    208c:	0d e2       	ldi	r16, 0x2D	; 45
    208e:	03 c0       	rjmp	.+6      	; 0x2096 <vfprintf+0x1c6>
    2090:	0b e2       	ldi	r16, 0x2B	; 43
    2092:	01 c0       	rjmp	.+2      	; 0x2096 <vfprintf+0x1c6>
    2094:	00 e0       	ldi	r16, 0x00	; 0
    2096:	8c 85       	ldd	r24, Y+12	; 0x0c
    2098:	8c 70       	andi	r24, 0x0C	; 12
    209a:	19 f0       	breq	.+6      	; 0x20a2 <vfprintf+0x1d2>
    209c:	01 11       	cpse	r16, r1
    209e:	43 c2       	rjmp	.+1158   	; 0x2526 <__stack+0x327>
    20a0:	80 c2       	rjmp	.+1280   	; 0x25a2 <__stack+0x3a3>
    20a2:	97 fe       	sbrs	r9, 7
    20a4:	10 c0       	rjmp	.+32     	; 0x20c6 <vfprintf+0x1f6>
    20a6:	4c 0c       	add	r4, r12
    20a8:	fc 85       	ldd	r31, Y+12	; 0x0c
    20aa:	f4 ff       	sbrs	r31, 4
    20ac:	04 c0       	rjmp	.+8      	; 0x20b6 <vfprintf+0x1e6>
    20ae:	8a 81       	ldd	r24, Y+2	; 0x02
    20b0:	81 33       	cpi	r24, 0x31	; 49
    20b2:	09 f4       	brne	.+2      	; 0x20b6 <vfprintf+0x1e6>
    20b4:	4a 94       	dec	r4
    20b6:	14 14       	cp	r1, r4
    20b8:	74 f5       	brge	.+92     	; 0x2116 <vfprintf+0x246>
    20ba:	28 e0       	ldi	r18, 0x08	; 8
    20bc:	24 15       	cp	r18, r4
    20be:	78 f5       	brcc	.+94     	; 0x211e <vfprintf+0x24e>
    20c0:	88 e0       	ldi	r24, 0x08	; 8
    20c2:	48 2e       	mov	r4, r24
    20c4:	2c c0       	rjmp	.+88     	; 0x211e <vfprintf+0x24e>
    20c6:	96 fc       	sbrc	r9, 6
    20c8:	2a c0       	rjmp	.+84     	; 0x211e <vfprintf+0x24e>
    20ca:	81 2f       	mov	r24, r17
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	8c 15       	cp	r24, r12
    20d0:	9d 05       	cpc	r25, r13
    20d2:	9c f0       	brlt	.+38     	; 0x20fa <vfprintf+0x22a>
    20d4:	3c ef       	ldi	r19, 0xFC	; 252
    20d6:	c3 16       	cp	r12, r19
    20d8:	3f ef       	ldi	r19, 0xFF	; 255
    20da:	d3 06       	cpc	r13, r19
    20dc:	74 f0       	brlt	.+28     	; 0x20fa <vfprintf+0x22a>
    20de:	89 2d       	mov	r24, r9
    20e0:	80 68       	ori	r24, 0x80	; 128
    20e2:	98 2e       	mov	r9, r24
    20e4:	0a c0       	rjmp	.+20     	; 0x20fa <vfprintf+0x22a>
    20e6:	e2 e0       	ldi	r30, 0x02	; 2
    20e8:	f0 e0       	ldi	r31, 0x00	; 0
    20ea:	ec 0f       	add	r30, r28
    20ec:	fd 1f       	adc	r31, r29
    20ee:	e1 0f       	add	r30, r17
    20f0:	f1 1d       	adc	r31, r1
    20f2:	80 81       	ld	r24, Z
    20f4:	80 33       	cpi	r24, 0x30	; 48
    20f6:	19 f4       	brne	.+6      	; 0x20fe <vfprintf+0x22e>
    20f8:	11 50       	subi	r17, 0x01	; 1
    20fa:	11 11       	cpse	r17, r1
    20fc:	f4 cf       	rjmp	.-24     	; 0x20e6 <vfprintf+0x216>
    20fe:	97 fe       	sbrs	r9, 7
    2100:	0e c0       	rjmp	.+28     	; 0x211e <vfprintf+0x24e>
    2102:	44 24       	eor	r4, r4
    2104:	43 94       	inc	r4
    2106:	41 0e       	add	r4, r17
    2108:	81 2f       	mov	r24, r17
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	c8 16       	cp	r12, r24
    210e:	d9 06       	cpc	r13, r25
    2110:	2c f4       	brge	.+10     	; 0x211c <vfprintf+0x24c>
    2112:	1c 19       	sub	r17, r12
    2114:	04 c0       	rjmp	.+8      	; 0x211e <vfprintf+0x24e>
    2116:	44 24       	eor	r4, r4
    2118:	43 94       	inc	r4
    211a:	01 c0       	rjmp	.+2      	; 0x211e <vfprintf+0x24e>
    211c:	10 e0       	ldi	r17, 0x00	; 0
    211e:	97 fe       	sbrs	r9, 7
    2120:	06 c0       	rjmp	.+12     	; 0x212e <vfprintf+0x25e>
    2122:	1c 14       	cp	r1, r12
    2124:	1d 04       	cpc	r1, r13
    2126:	34 f4       	brge	.+12     	; 0x2134 <vfprintf+0x264>
    2128:	c6 01       	movw	r24, r12
    212a:	01 96       	adiw	r24, 0x01	; 1
    212c:	05 c0       	rjmp	.+10     	; 0x2138 <vfprintf+0x268>
    212e:	85 e0       	ldi	r24, 0x05	; 5
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	02 c0       	rjmp	.+4      	; 0x2138 <vfprintf+0x268>
    2134:	81 e0       	ldi	r24, 0x01	; 1
    2136:	90 e0       	ldi	r25, 0x00	; 0
    2138:	01 11       	cpse	r16, r1
    213a:	01 96       	adiw	r24, 0x01	; 1
    213c:	11 23       	and	r17, r17
    213e:	31 f0       	breq	.+12     	; 0x214c <vfprintf+0x27c>
    2140:	21 2f       	mov	r18, r17
    2142:	30 e0       	ldi	r19, 0x00	; 0
    2144:	2f 5f       	subi	r18, 0xFF	; 255
    2146:	3f 4f       	sbci	r19, 0xFF	; 255
    2148:	82 0f       	add	r24, r18
    214a:	93 1f       	adc	r25, r19
    214c:	25 2d       	mov	r18, r5
    214e:	30 e0       	ldi	r19, 0x00	; 0
    2150:	82 17       	cp	r24, r18
    2152:	93 07       	cpc	r25, r19
    2154:	14 f4       	brge	.+4      	; 0x215a <vfprintf+0x28a>
    2156:	58 1a       	sub	r5, r24
    2158:	01 c0       	rjmp	.+2      	; 0x215c <vfprintf+0x28c>
    215a:	51 2c       	mov	r5, r1
    215c:	89 2d       	mov	r24, r9
    215e:	89 70       	andi	r24, 0x09	; 9
    2160:	41 f4       	brne	.+16     	; 0x2172 <vfprintf+0x2a2>
    2162:	55 20       	and	r5, r5
    2164:	31 f0       	breq	.+12     	; 0x2172 <vfprintf+0x2a2>
    2166:	b7 01       	movw	r22, r14
    2168:	80 e2       	ldi	r24, 0x20	; 32
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	99 d3       	rcall	.+1842   	; 0x28a0 <fputc>
    216e:	5a 94       	dec	r5
    2170:	f8 cf       	rjmp	.-16     	; 0x2162 <vfprintf+0x292>
    2172:	00 23       	and	r16, r16
    2174:	21 f0       	breq	.+8      	; 0x217e <vfprintf+0x2ae>
    2176:	b7 01       	movw	r22, r14
    2178:	80 2f       	mov	r24, r16
    217a:	90 e0       	ldi	r25, 0x00	; 0
    217c:	91 d3       	rcall	.+1826   	; 0x28a0 <fputc>
    217e:	93 fc       	sbrc	r9, 3
    2180:	08 c0       	rjmp	.+16     	; 0x2192 <vfprintf+0x2c2>
    2182:	55 20       	and	r5, r5
    2184:	31 f0       	breq	.+12     	; 0x2192 <vfprintf+0x2c2>
    2186:	b7 01       	movw	r22, r14
    2188:	80 e3       	ldi	r24, 0x30	; 48
    218a:	90 e0       	ldi	r25, 0x00	; 0
    218c:	89 d3       	rcall	.+1810   	; 0x28a0 <fputc>
    218e:	5a 94       	dec	r5
    2190:	f8 cf       	rjmp	.-16     	; 0x2182 <vfprintf+0x2b2>
    2192:	97 fe       	sbrs	r9, 7
    2194:	4a c0       	rjmp	.+148    	; 0x222a <__stack+0x2b>
    2196:	46 01       	movw	r8, r12
    2198:	d7 fe       	sbrs	r13, 7
    219a:	02 c0       	rjmp	.+4      	; 0x21a0 <vfprintf+0x2d0>
    219c:	81 2c       	mov	r8, r1
    219e:	91 2c       	mov	r9, r1
    21a0:	c6 01       	movw	r24, r12
    21a2:	88 19       	sub	r24, r8
    21a4:	99 09       	sbc	r25, r9
    21a6:	f3 01       	movw	r30, r6
    21a8:	e8 0f       	add	r30, r24
    21aa:	f9 1f       	adc	r31, r25
    21ac:	fe 87       	std	Y+14, r31	; 0x0e
    21ae:	ed 87       	std	Y+13, r30	; 0x0d
    21b0:	96 01       	movw	r18, r12
    21b2:	24 19       	sub	r18, r4
    21b4:	31 09       	sbc	r19, r1
    21b6:	38 8b       	std	Y+16, r19	; 0x10
    21b8:	2f 87       	std	Y+15, r18	; 0x0f
    21ba:	01 2f       	mov	r16, r17
    21bc:	10 e0       	ldi	r17, 0x00	; 0
    21be:	11 95       	neg	r17
    21c0:	01 95       	neg	r16
    21c2:	11 09       	sbc	r17, r1
    21c4:	3f ef       	ldi	r19, 0xFF	; 255
    21c6:	83 16       	cp	r8, r19
    21c8:	93 06       	cpc	r9, r19
    21ca:	21 f4       	brne	.+8      	; 0x21d4 <vfprintf+0x304>
    21cc:	b7 01       	movw	r22, r14
    21ce:	8e e2       	ldi	r24, 0x2E	; 46
    21d0:	90 e0       	ldi	r25, 0x00	; 0
    21d2:	66 d3       	rcall	.+1740   	; 0x28a0 <fputc>
    21d4:	c8 14       	cp	r12, r8
    21d6:	d9 04       	cpc	r13, r9
    21d8:	4c f0       	brlt	.+18     	; 0x21ec <vfprintf+0x31c>
    21da:	8f 85       	ldd	r24, Y+15	; 0x0f
    21dc:	98 89       	ldd	r25, Y+16	; 0x10
    21de:	88 15       	cp	r24, r8
    21e0:	99 05       	cpc	r25, r9
    21e2:	24 f4       	brge	.+8      	; 0x21ec <vfprintf+0x31c>
    21e4:	ed 85       	ldd	r30, Y+13	; 0x0d
    21e6:	fe 85       	ldd	r31, Y+14	; 0x0e
    21e8:	81 81       	ldd	r24, Z+1	; 0x01
    21ea:	01 c0       	rjmp	.+2      	; 0x21ee <vfprintf+0x31e>
    21ec:	80 e3       	ldi	r24, 0x30	; 48
    21ee:	f1 e0       	ldi	r31, 0x01	; 1
    21f0:	8f 1a       	sub	r8, r31
    21f2:	91 08       	sbc	r9, r1
    21f4:	2d 85       	ldd	r18, Y+13	; 0x0d
    21f6:	3e 85       	ldd	r19, Y+14	; 0x0e
    21f8:	2f 5f       	subi	r18, 0xFF	; 255
    21fa:	3f 4f       	sbci	r19, 0xFF	; 255
    21fc:	3e 87       	std	Y+14, r19	; 0x0e
    21fe:	2d 87       	std	Y+13, r18	; 0x0d
    2200:	80 16       	cp	r8, r16
    2202:	91 06       	cpc	r9, r17
    2204:	24 f0       	brlt	.+8      	; 0x220e <__stack+0xf>
    2206:	b7 01       	movw	r22, r14
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	4a d3       	rcall	.+1684   	; 0x28a0 <fputc>
    220c:	db cf       	rjmp	.-74     	; 0x21c4 <vfprintf+0x2f4>
    220e:	c8 14       	cp	r12, r8
    2210:	d9 04       	cpc	r13, r9
    2212:	41 f4       	brne	.+16     	; 0x2224 <__stack+0x25>
    2214:	9a 81       	ldd	r25, Y+2	; 0x02
    2216:	96 33       	cpi	r25, 0x36	; 54
    2218:	20 f4       	brcc	.+8      	; 0x2222 <__stack+0x23>
    221a:	95 33       	cpi	r25, 0x35	; 53
    221c:	19 f4       	brne	.+6      	; 0x2224 <__stack+0x25>
    221e:	3c 85       	ldd	r19, Y+12	; 0x0c
    2220:	34 ff       	sbrs	r19, 4
    2222:	81 e3       	ldi	r24, 0x31	; 49
    2224:	b7 01       	movw	r22, r14
    2226:	90 e0       	ldi	r25, 0x00	; 0
    2228:	48 c0       	rjmp	.+144    	; 0x22ba <__stack+0xbb>
    222a:	8a 81       	ldd	r24, Y+2	; 0x02
    222c:	81 33       	cpi	r24, 0x31	; 49
    222e:	19 f0       	breq	.+6      	; 0x2236 <__stack+0x37>
    2230:	9c 85       	ldd	r25, Y+12	; 0x0c
    2232:	9f 7e       	andi	r25, 0xEF	; 239
    2234:	9c 87       	std	Y+12, r25	; 0x0c
    2236:	b7 01       	movw	r22, r14
    2238:	90 e0       	ldi	r25, 0x00	; 0
    223a:	32 d3       	rcall	.+1636   	; 0x28a0 <fputc>
    223c:	11 11       	cpse	r17, r1
    223e:	05 c0       	rjmp	.+10     	; 0x224a <__stack+0x4b>
    2240:	94 fc       	sbrc	r9, 4
    2242:	16 c0       	rjmp	.+44     	; 0x2270 <__stack+0x71>
    2244:	85 e6       	ldi	r24, 0x65	; 101
    2246:	90 e0       	ldi	r25, 0x00	; 0
    2248:	15 c0       	rjmp	.+42     	; 0x2274 <__stack+0x75>
    224a:	b7 01       	movw	r22, r14
    224c:	8e e2       	ldi	r24, 0x2E	; 46
    224e:	90 e0       	ldi	r25, 0x00	; 0
    2250:	27 d3       	rcall	.+1614   	; 0x28a0 <fputc>
    2252:	1e 5f       	subi	r17, 0xFE	; 254
    2254:	82 e0       	ldi	r24, 0x02	; 2
    2256:	01 e0       	ldi	r16, 0x01	; 1
    2258:	08 0f       	add	r16, r24
    225a:	f3 01       	movw	r30, r6
    225c:	e8 0f       	add	r30, r24
    225e:	f1 1d       	adc	r31, r1
    2260:	80 81       	ld	r24, Z
    2262:	b7 01       	movw	r22, r14
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	1c d3       	rcall	.+1592   	; 0x28a0 <fputc>
    2268:	80 2f       	mov	r24, r16
    226a:	01 13       	cpse	r16, r17
    226c:	f4 cf       	rjmp	.-24     	; 0x2256 <__stack+0x57>
    226e:	e8 cf       	rjmp	.-48     	; 0x2240 <__stack+0x41>
    2270:	85 e4       	ldi	r24, 0x45	; 69
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	b7 01       	movw	r22, r14
    2276:	14 d3       	rcall	.+1576   	; 0x28a0 <fputc>
    2278:	d7 fc       	sbrc	r13, 7
    227a:	06 c0       	rjmp	.+12     	; 0x2288 <__stack+0x89>
    227c:	c1 14       	cp	r12, r1
    227e:	d1 04       	cpc	r13, r1
    2280:	41 f4       	brne	.+16     	; 0x2292 <__stack+0x93>
    2282:	ec 85       	ldd	r30, Y+12	; 0x0c
    2284:	e4 ff       	sbrs	r30, 4
    2286:	05 c0       	rjmp	.+10     	; 0x2292 <__stack+0x93>
    2288:	d1 94       	neg	r13
    228a:	c1 94       	neg	r12
    228c:	d1 08       	sbc	r13, r1
    228e:	8d e2       	ldi	r24, 0x2D	; 45
    2290:	01 c0       	rjmp	.+2      	; 0x2294 <__stack+0x95>
    2292:	8b e2       	ldi	r24, 0x2B	; 43
    2294:	b7 01       	movw	r22, r14
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	03 d3       	rcall	.+1542   	; 0x28a0 <fputc>
    229a:	80 e3       	ldi	r24, 0x30	; 48
    229c:	2a e0       	ldi	r18, 0x0A	; 10
    229e:	c2 16       	cp	r12, r18
    22a0:	d1 04       	cpc	r13, r1
    22a2:	2c f0       	brlt	.+10     	; 0x22ae <__stack+0xaf>
    22a4:	8f 5f       	subi	r24, 0xFF	; 255
    22a6:	fa e0       	ldi	r31, 0x0A	; 10
    22a8:	cf 1a       	sub	r12, r31
    22aa:	d1 08       	sbc	r13, r1
    22ac:	f7 cf       	rjmp	.-18     	; 0x229c <__stack+0x9d>
    22ae:	b7 01       	movw	r22, r14
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	f6 d2       	rcall	.+1516   	; 0x28a0 <fputc>
    22b4:	b7 01       	movw	r22, r14
    22b6:	c6 01       	movw	r24, r12
    22b8:	c0 96       	adiw	r24, 0x30	; 48
    22ba:	f2 d2       	rcall	.+1508   	; 0x28a0 <fputc>
    22bc:	49 c1       	rjmp	.+658    	; 0x2550 <__stack+0x351>
    22be:	83 36       	cpi	r24, 0x63	; 99
    22c0:	31 f0       	breq	.+12     	; 0x22ce <__stack+0xcf>
    22c2:	83 37       	cpi	r24, 0x73	; 115
    22c4:	79 f0       	breq	.+30     	; 0x22e4 <__stack+0xe5>
    22c6:	83 35       	cpi	r24, 0x53	; 83
    22c8:	09 f0       	breq	.+2      	; 0x22cc <__stack+0xcd>
    22ca:	52 c0       	rjmp	.+164    	; 0x2370 <__stack+0x171>
    22cc:	1f c0       	rjmp	.+62     	; 0x230c <__stack+0x10d>
    22ce:	56 01       	movw	r10, r12
    22d0:	32 e0       	ldi	r19, 0x02	; 2
    22d2:	a3 0e       	add	r10, r19
    22d4:	b1 1c       	adc	r11, r1
    22d6:	f6 01       	movw	r30, r12
    22d8:	80 81       	ld	r24, Z
    22da:	89 83       	std	Y+1, r24	; 0x01
    22dc:	01 e0       	ldi	r16, 0x01	; 1
    22de:	10 e0       	ldi	r17, 0x00	; 0
    22e0:	63 01       	movw	r12, r6
    22e2:	11 c0       	rjmp	.+34     	; 0x2306 <__stack+0x107>
    22e4:	56 01       	movw	r10, r12
    22e6:	f2 e0       	ldi	r31, 0x02	; 2
    22e8:	af 0e       	add	r10, r31
    22ea:	b1 1c       	adc	r11, r1
    22ec:	f6 01       	movw	r30, r12
    22ee:	c0 80       	ld	r12, Z
    22f0:	d1 80       	ldd	r13, Z+1	; 0x01
    22f2:	96 fe       	sbrs	r9, 6
    22f4:	03 c0       	rjmp	.+6      	; 0x22fc <__stack+0xfd>
    22f6:	61 2f       	mov	r22, r17
    22f8:	70 e0       	ldi	r23, 0x00	; 0
    22fa:	02 c0       	rjmp	.+4      	; 0x2300 <__stack+0x101>
    22fc:	6f ef       	ldi	r22, 0xFF	; 255
    22fe:	7f ef       	ldi	r23, 0xFF	; 255
    2300:	c6 01       	movw	r24, r12
    2302:	79 d2       	rcall	.+1266   	; 0x27f6 <strnlen>
    2304:	8c 01       	movw	r16, r24
    2306:	f9 2d       	mov	r31, r9
    2308:	ff 77       	andi	r31, 0x7F	; 127
    230a:	13 c0       	rjmp	.+38     	; 0x2332 <__stack+0x133>
    230c:	56 01       	movw	r10, r12
    230e:	22 e0       	ldi	r18, 0x02	; 2
    2310:	a2 0e       	add	r10, r18
    2312:	b1 1c       	adc	r11, r1
    2314:	f6 01       	movw	r30, r12
    2316:	c0 80       	ld	r12, Z
    2318:	d1 80       	ldd	r13, Z+1	; 0x01
    231a:	96 fe       	sbrs	r9, 6
    231c:	03 c0       	rjmp	.+6      	; 0x2324 <__stack+0x125>
    231e:	61 2f       	mov	r22, r17
    2320:	70 e0       	ldi	r23, 0x00	; 0
    2322:	02 c0       	rjmp	.+4      	; 0x2328 <__stack+0x129>
    2324:	6f ef       	ldi	r22, 0xFF	; 255
    2326:	7f ef       	ldi	r23, 0xFF	; 255
    2328:	c6 01       	movw	r24, r12
    232a:	5a d2       	rcall	.+1204   	; 0x27e0 <strnlen_P>
    232c:	8c 01       	movw	r16, r24
    232e:	f9 2d       	mov	r31, r9
    2330:	f0 68       	ori	r31, 0x80	; 128
    2332:	9f 2e       	mov	r9, r31
    2334:	f3 fd       	sbrc	r31, 3
    2336:	18 c0       	rjmp	.+48     	; 0x2368 <__stack+0x169>
    2338:	85 2d       	mov	r24, r5
    233a:	90 e0       	ldi	r25, 0x00	; 0
    233c:	08 17       	cp	r16, r24
    233e:	19 07       	cpc	r17, r25
    2340:	98 f4       	brcc	.+38     	; 0x2368 <__stack+0x169>
    2342:	b7 01       	movw	r22, r14
    2344:	80 e2       	ldi	r24, 0x20	; 32
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	ab d2       	rcall	.+1366   	; 0x28a0 <fputc>
    234a:	5a 94       	dec	r5
    234c:	f5 cf       	rjmp	.-22     	; 0x2338 <__stack+0x139>
    234e:	f6 01       	movw	r30, r12
    2350:	97 fc       	sbrc	r9, 7
    2352:	85 91       	lpm	r24, Z+
    2354:	97 fe       	sbrs	r9, 7
    2356:	81 91       	ld	r24, Z+
    2358:	6f 01       	movw	r12, r30
    235a:	b7 01       	movw	r22, r14
    235c:	90 e0       	ldi	r25, 0x00	; 0
    235e:	a0 d2       	rcall	.+1344   	; 0x28a0 <fputc>
    2360:	51 10       	cpse	r5, r1
    2362:	5a 94       	dec	r5
    2364:	01 50       	subi	r16, 0x01	; 1
    2366:	11 09       	sbc	r17, r1
    2368:	01 15       	cp	r16, r1
    236a:	11 05       	cpc	r17, r1
    236c:	81 f7       	brne	.-32     	; 0x234e <__stack+0x14f>
    236e:	f0 c0       	rjmp	.+480    	; 0x2550 <__stack+0x351>
    2370:	84 36       	cpi	r24, 0x64	; 100
    2372:	11 f0       	breq	.+4      	; 0x2378 <__stack+0x179>
    2374:	89 36       	cpi	r24, 0x69	; 105
    2376:	59 f5       	brne	.+86     	; 0x23ce <__stack+0x1cf>
    2378:	56 01       	movw	r10, r12
    237a:	97 fe       	sbrs	r9, 7
    237c:	09 c0       	rjmp	.+18     	; 0x2390 <__stack+0x191>
    237e:	24 e0       	ldi	r18, 0x04	; 4
    2380:	a2 0e       	add	r10, r18
    2382:	b1 1c       	adc	r11, r1
    2384:	f6 01       	movw	r30, r12
    2386:	60 81       	ld	r22, Z
    2388:	71 81       	ldd	r23, Z+1	; 0x01
    238a:	82 81       	ldd	r24, Z+2	; 0x02
    238c:	93 81       	ldd	r25, Z+3	; 0x03
    238e:	0a c0       	rjmp	.+20     	; 0x23a4 <__stack+0x1a5>
    2390:	f2 e0       	ldi	r31, 0x02	; 2
    2392:	af 0e       	add	r10, r31
    2394:	b1 1c       	adc	r11, r1
    2396:	f6 01       	movw	r30, r12
    2398:	60 81       	ld	r22, Z
    239a:	71 81       	ldd	r23, Z+1	; 0x01
    239c:	07 2e       	mov	r0, r23
    239e:	00 0c       	add	r0, r0
    23a0:	88 0b       	sbc	r24, r24
    23a2:	99 0b       	sbc	r25, r25
    23a4:	f9 2d       	mov	r31, r9
    23a6:	ff 76       	andi	r31, 0x6F	; 111
    23a8:	9f 2e       	mov	r9, r31
    23aa:	97 ff       	sbrs	r25, 7
    23ac:	09 c0       	rjmp	.+18     	; 0x23c0 <__stack+0x1c1>
    23ae:	90 95       	com	r25
    23b0:	80 95       	com	r24
    23b2:	70 95       	com	r23
    23b4:	61 95       	neg	r22
    23b6:	7f 4f       	sbci	r23, 0xFF	; 255
    23b8:	8f 4f       	sbci	r24, 0xFF	; 255
    23ba:	9f 4f       	sbci	r25, 0xFF	; 255
    23bc:	f0 68       	ori	r31, 0x80	; 128
    23be:	9f 2e       	mov	r9, r31
    23c0:	2a e0       	ldi	r18, 0x0A	; 10
    23c2:	30 e0       	ldi	r19, 0x00	; 0
    23c4:	a3 01       	movw	r20, r6
    23c6:	ee d2       	rcall	.+1500   	; 0x29a4 <__ultoa_invert>
    23c8:	c8 2e       	mov	r12, r24
    23ca:	c6 18       	sub	r12, r6
    23cc:	3e c0       	rjmp	.+124    	; 0x244a <__stack+0x24b>
    23ce:	09 2d       	mov	r16, r9
    23d0:	85 37       	cpi	r24, 0x75	; 117
    23d2:	21 f4       	brne	.+8      	; 0x23dc <__stack+0x1dd>
    23d4:	0f 7e       	andi	r16, 0xEF	; 239
    23d6:	2a e0       	ldi	r18, 0x0A	; 10
    23d8:	30 e0       	ldi	r19, 0x00	; 0
    23da:	1d c0       	rjmp	.+58     	; 0x2416 <__stack+0x217>
    23dc:	09 7f       	andi	r16, 0xF9	; 249
    23de:	8f 36       	cpi	r24, 0x6F	; 111
    23e0:	91 f0       	breq	.+36     	; 0x2406 <__stack+0x207>
    23e2:	18 f4       	brcc	.+6      	; 0x23ea <__stack+0x1eb>
    23e4:	88 35       	cpi	r24, 0x58	; 88
    23e6:	59 f0       	breq	.+22     	; 0x23fe <__stack+0x1ff>
    23e8:	bc c0       	rjmp	.+376    	; 0x2562 <__stack+0x363>
    23ea:	80 37       	cpi	r24, 0x70	; 112
    23ec:	19 f0       	breq	.+6      	; 0x23f4 <__stack+0x1f5>
    23ee:	88 37       	cpi	r24, 0x78	; 120
    23f0:	11 f0       	breq	.+4      	; 0x23f6 <__stack+0x1f7>
    23f2:	b7 c0       	rjmp	.+366    	; 0x2562 <__stack+0x363>
    23f4:	00 61       	ori	r16, 0x10	; 16
    23f6:	04 ff       	sbrs	r16, 4
    23f8:	09 c0       	rjmp	.+18     	; 0x240c <__stack+0x20d>
    23fa:	04 60       	ori	r16, 0x04	; 4
    23fc:	07 c0       	rjmp	.+14     	; 0x240c <__stack+0x20d>
    23fe:	94 fe       	sbrs	r9, 4
    2400:	08 c0       	rjmp	.+16     	; 0x2412 <__stack+0x213>
    2402:	06 60       	ori	r16, 0x06	; 6
    2404:	06 c0       	rjmp	.+12     	; 0x2412 <__stack+0x213>
    2406:	28 e0       	ldi	r18, 0x08	; 8
    2408:	30 e0       	ldi	r19, 0x00	; 0
    240a:	05 c0       	rjmp	.+10     	; 0x2416 <__stack+0x217>
    240c:	20 e1       	ldi	r18, 0x10	; 16
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	02 c0       	rjmp	.+4      	; 0x2416 <__stack+0x217>
    2412:	20 e1       	ldi	r18, 0x10	; 16
    2414:	32 e0       	ldi	r19, 0x02	; 2
    2416:	56 01       	movw	r10, r12
    2418:	07 ff       	sbrs	r16, 7
    241a:	09 c0       	rjmp	.+18     	; 0x242e <__stack+0x22f>
    241c:	84 e0       	ldi	r24, 0x04	; 4
    241e:	a8 0e       	add	r10, r24
    2420:	b1 1c       	adc	r11, r1
    2422:	f6 01       	movw	r30, r12
    2424:	60 81       	ld	r22, Z
    2426:	71 81       	ldd	r23, Z+1	; 0x01
    2428:	82 81       	ldd	r24, Z+2	; 0x02
    242a:	93 81       	ldd	r25, Z+3	; 0x03
    242c:	08 c0       	rjmp	.+16     	; 0x243e <__stack+0x23f>
    242e:	f2 e0       	ldi	r31, 0x02	; 2
    2430:	af 0e       	add	r10, r31
    2432:	b1 1c       	adc	r11, r1
    2434:	f6 01       	movw	r30, r12
    2436:	60 81       	ld	r22, Z
    2438:	71 81       	ldd	r23, Z+1	; 0x01
    243a:	80 e0       	ldi	r24, 0x00	; 0
    243c:	90 e0       	ldi	r25, 0x00	; 0
    243e:	a3 01       	movw	r20, r6
    2440:	b1 d2       	rcall	.+1378   	; 0x29a4 <__ultoa_invert>
    2442:	c8 2e       	mov	r12, r24
    2444:	c6 18       	sub	r12, r6
    2446:	0f 77       	andi	r16, 0x7F	; 127
    2448:	90 2e       	mov	r9, r16
    244a:	96 fe       	sbrs	r9, 6
    244c:	0b c0       	rjmp	.+22     	; 0x2464 <__stack+0x265>
    244e:	09 2d       	mov	r16, r9
    2450:	0e 7f       	andi	r16, 0xFE	; 254
    2452:	c1 16       	cp	r12, r17
    2454:	50 f4       	brcc	.+20     	; 0x246a <__stack+0x26b>
    2456:	94 fe       	sbrs	r9, 4
    2458:	0a c0       	rjmp	.+20     	; 0x246e <__stack+0x26f>
    245a:	92 fc       	sbrc	r9, 2
    245c:	08 c0       	rjmp	.+16     	; 0x246e <__stack+0x26f>
    245e:	09 2d       	mov	r16, r9
    2460:	0e 7e       	andi	r16, 0xEE	; 238
    2462:	05 c0       	rjmp	.+10     	; 0x246e <__stack+0x26f>
    2464:	dc 2c       	mov	r13, r12
    2466:	09 2d       	mov	r16, r9
    2468:	03 c0       	rjmp	.+6      	; 0x2470 <__stack+0x271>
    246a:	dc 2c       	mov	r13, r12
    246c:	01 c0       	rjmp	.+2      	; 0x2470 <__stack+0x271>
    246e:	d1 2e       	mov	r13, r17
    2470:	04 ff       	sbrs	r16, 4
    2472:	0d c0       	rjmp	.+26     	; 0x248e <__stack+0x28f>
    2474:	fe 01       	movw	r30, r28
    2476:	ec 0d       	add	r30, r12
    2478:	f1 1d       	adc	r31, r1
    247a:	80 81       	ld	r24, Z
    247c:	80 33       	cpi	r24, 0x30	; 48
    247e:	11 f4       	brne	.+4      	; 0x2484 <__stack+0x285>
    2480:	09 7e       	andi	r16, 0xE9	; 233
    2482:	09 c0       	rjmp	.+18     	; 0x2496 <__stack+0x297>
    2484:	02 ff       	sbrs	r16, 2
    2486:	06 c0       	rjmp	.+12     	; 0x2494 <__stack+0x295>
    2488:	d3 94       	inc	r13
    248a:	d3 94       	inc	r13
    248c:	04 c0       	rjmp	.+8      	; 0x2496 <__stack+0x297>
    248e:	80 2f       	mov	r24, r16
    2490:	86 78       	andi	r24, 0x86	; 134
    2492:	09 f0       	breq	.+2      	; 0x2496 <__stack+0x297>
    2494:	d3 94       	inc	r13
    2496:	03 fd       	sbrc	r16, 3
    2498:	10 c0       	rjmp	.+32     	; 0x24ba <__stack+0x2bb>
    249a:	00 ff       	sbrs	r16, 0
    249c:	06 c0       	rjmp	.+12     	; 0x24aa <__stack+0x2ab>
    249e:	1c 2d       	mov	r17, r12
    24a0:	d5 14       	cp	r13, r5
    24a2:	78 f4       	brcc	.+30     	; 0x24c2 <__stack+0x2c3>
    24a4:	15 0d       	add	r17, r5
    24a6:	1d 19       	sub	r17, r13
    24a8:	0c c0       	rjmp	.+24     	; 0x24c2 <__stack+0x2c3>
    24aa:	d5 14       	cp	r13, r5
    24ac:	50 f4       	brcc	.+20     	; 0x24c2 <__stack+0x2c3>
    24ae:	b7 01       	movw	r22, r14
    24b0:	80 e2       	ldi	r24, 0x20	; 32
    24b2:	90 e0       	ldi	r25, 0x00	; 0
    24b4:	f5 d1       	rcall	.+1002   	; 0x28a0 <fputc>
    24b6:	d3 94       	inc	r13
    24b8:	f8 cf       	rjmp	.-16     	; 0x24aa <__stack+0x2ab>
    24ba:	d5 14       	cp	r13, r5
    24bc:	10 f4       	brcc	.+4      	; 0x24c2 <__stack+0x2c3>
    24be:	5d 18       	sub	r5, r13
    24c0:	01 c0       	rjmp	.+2      	; 0x24c4 <__stack+0x2c5>
    24c2:	51 2c       	mov	r5, r1
    24c4:	04 ff       	sbrs	r16, 4
    24c6:	0f c0       	rjmp	.+30     	; 0x24e6 <__stack+0x2e7>
    24c8:	b7 01       	movw	r22, r14
    24ca:	80 e3       	ldi	r24, 0x30	; 48
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	e8 d1       	rcall	.+976    	; 0x28a0 <fputc>
    24d0:	02 ff       	sbrs	r16, 2
    24d2:	16 c0       	rjmp	.+44     	; 0x2500 <__stack+0x301>
    24d4:	01 fd       	sbrc	r16, 1
    24d6:	03 c0       	rjmp	.+6      	; 0x24de <__stack+0x2df>
    24d8:	88 e7       	ldi	r24, 0x78	; 120
    24da:	90 e0       	ldi	r25, 0x00	; 0
    24dc:	02 c0       	rjmp	.+4      	; 0x24e2 <__stack+0x2e3>
    24de:	88 e5       	ldi	r24, 0x58	; 88
    24e0:	90 e0       	ldi	r25, 0x00	; 0
    24e2:	b7 01       	movw	r22, r14
    24e4:	0c c0       	rjmp	.+24     	; 0x24fe <__stack+0x2ff>
    24e6:	80 2f       	mov	r24, r16
    24e8:	86 78       	andi	r24, 0x86	; 134
    24ea:	51 f0       	breq	.+20     	; 0x2500 <__stack+0x301>
    24ec:	01 ff       	sbrs	r16, 1
    24ee:	02 c0       	rjmp	.+4      	; 0x24f4 <__stack+0x2f5>
    24f0:	8b e2       	ldi	r24, 0x2B	; 43
    24f2:	01 c0       	rjmp	.+2      	; 0x24f6 <__stack+0x2f7>
    24f4:	80 e2       	ldi	r24, 0x20	; 32
    24f6:	07 fd       	sbrc	r16, 7
    24f8:	8d e2       	ldi	r24, 0x2D	; 45
    24fa:	b7 01       	movw	r22, r14
    24fc:	90 e0       	ldi	r25, 0x00	; 0
    24fe:	d0 d1       	rcall	.+928    	; 0x28a0 <fputc>
    2500:	c1 16       	cp	r12, r17
    2502:	30 f4       	brcc	.+12     	; 0x2510 <__stack+0x311>
    2504:	b7 01       	movw	r22, r14
    2506:	80 e3       	ldi	r24, 0x30	; 48
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	ca d1       	rcall	.+916    	; 0x28a0 <fputc>
    250c:	11 50       	subi	r17, 0x01	; 1
    250e:	f8 cf       	rjmp	.-16     	; 0x2500 <__stack+0x301>
    2510:	ca 94       	dec	r12
    2512:	f3 01       	movw	r30, r6
    2514:	ec 0d       	add	r30, r12
    2516:	f1 1d       	adc	r31, r1
    2518:	80 81       	ld	r24, Z
    251a:	b7 01       	movw	r22, r14
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	c0 d1       	rcall	.+896    	; 0x28a0 <fputc>
    2520:	c1 10       	cpse	r12, r1
    2522:	f6 cf       	rjmp	.-20     	; 0x2510 <__stack+0x311>
    2524:	15 c0       	rjmp	.+42     	; 0x2550 <__stack+0x351>
    2526:	f4 e0       	ldi	r31, 0x04	; 4
    2528:	f5 15       	cp	r31, r5
    252a:	50 f5       	brcc	.+84     	; 0x2580 <__stack+0x381>
    252c:	84 e0       	ldi	r24, 0x04	; 4
    252e:	58 1a       	sub	r5, r24
    2530:	93 fe       	sbrs	r9, 3
    2532:	1e c0       	rjmp	.+60     	; 0x2570 <__stack+0x371>
    2534:	01 11       	cpse	r16, r1
    2536:	25 c0       	rjmp	.+74     	; 0x2582 <__stack+0x383>
    2538:	2c 85       	ldd	r18, Y+12	; 0x0c
    253a:	23 ff       	sbrs	r18, 3
    253c:	27 c0       	rjmp	.+78     	; 0x258c <__stack+0x38d>
    253e:	02 e1       	ldi	r16, 0x12	; 18
    2540:	11 e0       	ldi	r17, 0x01	; 1
    2542:	39 2d       	mov	r19, r9
    2544:	30 71       	andi	r19, 0x10	; 16
    2546:	93 2e       	mov	r9, r19
    2548:	f8 01       	movw	r30, r16
    254a:	84 91       	lpm	r24, Z
    254c:	81 11       	cpse	r24, r1
    254e:	21 c0       	rjmp	.+66     	; 0x2592 <__stack+0x393>
    2550:	55 20       	and	r5, r5
    2552:	09 f4       	brne	.+2      	; 0x2556 <__stack+0x357>
    2554:	fc cc       	rjmp	.-1544   	; 0x1f4e <vfprintf+0x7e>
    2556:	b7 01       	movw	r22, r14
    2558:	80 e2       	ldi	r24, 0x20	; 32
    255a:	90 e0       	ldi	r25, 0x00	; 0
    255c:	a1 d1       	rcall	.+834    	; 0x28a0 <fputc>
    255e:	5a 94       	dec	r5
    2560:	f7 cf       	rjmp	.-18     	; 0x2550 <__stack+0x351>
    2562:	f7 01       	movw	r30, r14
    2564:	86 81       	ldd	r24, Z+6	; 0x06
    2566:	97 81       	ldd	r25, Z+7	; 0x07
    2568:	23 c0       	rjmp	.+70     	; 0x25b0 <__stack+0x3b1>
    256a:	8f ef       	ldi	r24, 0xFF	; 255
    256c:	9f ef       	ldi	r25, 0xFF	; 255
    256e:	20 c0       	rjmp	.+64     	; 0x25b0 <__stack+0x3b1>
    2570:	b7 01       	movw	r22, r14
    2572:	80 e2       	ldi	r24, 0x20	; 32
    2574:	90 e0       	ldi	r25, 0x00	; 0
    2576:	94 d1       	rcall	.+808    	; 0x28a0 <fputc>
    2578:	5a 94       	dec	r5
    257a:	51 10       	cpse	r5, r1
    257c:	f9 cf       	rjmp	.-14     	; 0x2570 <__stack+0x371>
    257e:	da cf       	rjmp	.-76     	; 0x2534 <__stack+0x335>
    2580:	51 2c       	mov	r5, r1
    2582:	b7 01       	movw	r22, r14
    2584:	80 2f       	mov	r24, r16
    2586:	90 e0       	ldi	r25, 0x00	; 0
    2588:	8b d1       	rcall	.+790    	; 0x28a0 <fputc>
    258a:	d6 cf       	rjmp	.-84     	; 0x2538 <__stack+0x339>
    258c:	06 e1       	ldi	r16, 0x16	; 22
    258e:	11 e0       	ldi	r17, 0x01	; 1
    2590:	d8 cf       	rjmp	.-80     	; 0x2542 <__stack+0x343>
    2592:	91 10       	cpse	r9, r1
    2594:	80 52       	subi	r24, 0x20	; 32
    2596:	b7 01       	movw	r22, r14
    2598:	90 e0       	ldi	r25, 0x00	; 0
    259a:	82 d1       	rcall	.+772    	; 0x28a0 <fputc>
    259c:	0f 5f       	subi	r16, 0xFF	; 255
    259e:	1f 4f       	sbci	r17, 0xFF	; 255
    25a0:	d3 cf       	rjmp	.-90     	; 0x2548 <__stack+0x349>
    25a2:	23 e0       	ldi	r18, 0x03	; 3
    25a4:	25 15       	cp	r18, r5
    25a6:	10 f4       	brcc	.+4      	; 0x25ac <__stack+0x3ad>
    25a8:	83 e0       	ldi	r24, 0x03	; 3
    25aa:	c1 cf       	rjmp	.-126    	; 0x252e <__stack+0x32f>
    25ac:	51 2c       	mov	r5, r1
    25ae:	c4 cf       	rjmp	.-120    	; 0x2538 <__stack+0x339>
    25b0:	60 96       	adiw	r28, 0x10	; 16
    25b2:	0f b6       	in	r0, 0x3f	; 63
    25b4:	f8 94       	cli
    25b6:	de bf       	out	0x3e, r29	; 62
    25b8:	0f be       	out	0x3f, r0	; 63
    25ba:	cd bf       	out	0x3d, r28	; 61
    25bc:	df 91       	pop	r29
    25be:	cf 91       	pop	r28
    25c0:	1f 91       	pop	r17
    25c2:	0f 91       	pop	r16
    25c4:	ff 90       	pop	r15
    25c6:	ef 90       	pop	r14
    25c8:	df 90       	pop	r13
    25ca:	cf 90       	pop	r12
    25cc:	bf 90       	pop	r11
    25ce:	af 90       	pop	r10
    25d0:	9f 90       	pop	r9
    25d2:	8f 90       	pop	r8
    25d4:	7f 90       	pop	r7
    25d6:	6f 90       	pop	r6
    25d8:	5f 90       	pop	r5
    25da:	4f 90       	pop	r4
    25dc:	3f 90       	pop	r3
    25de:	2f 90       	pop	r2
    25e0:	08 95       	ret

000025e2 <__divmodhi4>:
    25e2:	97 fb       	bst	r25, 7
    25e4:	07 2e       	mov	r0, r23
    25e6:	16 f4       	brtc	.+4      	; 0x25ec <__divmodhi4+0xa>
    25e8:	00 94       	com	r0
    25ea:	06 d0       	rcall	.+12     	; 0x25f8 <__divmodhi4_neg1>
    25ec:	77 fd       	sbrc	r23, 7
    25ee:	08 d0       	rcall	.+16     	; 0x2600 <__divmodhi4_neg2>
    25f0:	0b d0       	rcall	.+22     	; 0x2608 <__udivmodhi4>
    25f2:	07 fc       	sbrc	r0, 7
    25f4:	05 d0       	rcall	.+10     	; 0x2600 <__divmodhi4_neg2>
    25f6:	3e f4       	brtc	.+14     	; 0x2606 <__divmodhi4_exit>

000025f8 <__divmodhi4_neg1>:
    25f8:	90 95       	com	r25
    25fa:	81 95       	neg	r24
    25fc:	9f 4f       	sbci	r25, 0xFF	; 255
    25fe:	08 95       	ret

00002600 <__divmodhi4_neg2>:
    2600:	70 95       	com	r23
    2602:	61 95       	neg	r22
    2604:	7f 4f       	sbci	r23, 0xFF	; 255

00002606 <__divmodhi4_exit>:
    2606:	08 95       	ret

00002608 <__udivmodhi4>:
    2608:	aa 1b       	sub	r26, r26
    260a:	bb 1b       	sub	r27, r27
    260c:	51 e1       	ldi	r21, 0x11	; 17
    260e:	07 c0       	rjmp	.+14     	; 0x261e <__udivmodhi4_ep>

00002610 <__udivmodhi4_loop>:
    2610:	aa 1f       	adc	r26, r26
    2612:	bb 1f       	adc	r27, r27
    2614:	a6 17       	cp	r26, r22
    2616:	b7 07       	cpc	r27, r23
    2618:	10 f0       	brcs	.+4      	; 0x261e <__udivmodhi4_ep>
    261a:	a6 1b       	sub	r26, r22
    261c:	b7 0b       	sbc	r27, r23

0000261e <__udivmodhi4_ep>:
    261e:	88 1f       	adc	r24, r24
    2620:	99 1f       	adc	r25, r25
    2622:	5a 95       	dec	r21
    2624:	a9 f7       	brne	.-22     	; 0x2610 <__udivmodhi4_loop>
    2626:	80 95       	com	r24
    2628:	90 95       	com	r25
    262a:	bc 01       	movw	r22, r24
    262c:	cd 01       	movw	r24, r26
    262e:	08 95       	ret

00002630 <__ftoa_engine>:
    2630:	28 30       	cpi	r18, 0x08	; 8
    2632:	08 f0       	brcs	.+2      	; 0x2636 <__ftoa_engine+0x6>
    2634:	27 e0       	ldi	r18, 0x07	; 7
    2636:	33 27       	eor	r19, r19
    2638:	da 01       	movw	r26, r20
    263a:	99 0f       	add	r25, r25
    263c:	31 1d       	adc	r19, r1
    263e:	87 fd       	sbrc	r24, 7
    2640:	91 60       	ori	r25, 0x01	; 1
    2642:	00 96       	adiw	r24, 0x00	; 0
    2644:	61 05       	cpc	r22, r1
    2646:	71 05       	cpc	r23, r1
    2648:	39 f4       	brne	.+14     	; 0x2658 <__ftoa_engine+0x28>
    264a:	32 60       	ori	r19, 0x02	; 2
    264c:	2e 5f       	subi	r18, 0xFE	; 254
    264e:	3d 93       	st	X+, r19
    2650:	30 e3       	ldi	r19, 0x30	; 48
    2652:	2a 95       	dec	r18
    2654:	e1 f7       	brne	.-8      	; 0x264e <__ftoa_engine+0x1e>
    2656:	08 95       	ret
    2658:	9f 3f       	cpi	r25, 0xFF	; 255
    265a:	30 f0       	brcs	.+12     	; 0x2668 <__ftoa_engine+0x38>
    265c:	80 38       	cpi	r24, 0x80	; 128
    265e:	71 05       	cpc	r23, r1
    2660:	61 05       	cpc	r22, r1
    2662:	09 f0       	breq	.+2      	; 0x2666 <__ftoa_engine+0x36>
    2664:	3c 5f       	subi	r19, 0xFC	; 252
    2666:	3c 5f       	subi	r19, 0xFC	; 252
    2668:	3d 93       	st	X+, r19
    266a:	91 30       	cpi	r25, 0x01	; 1
    266c:	08 f0       	brcs	.+2      	; 0x2670 <__ftoa_engine+0x40>
    266e:	80 68       	ori	r24, 0x80	; 128
    2670:	91 1d       	adc	r25, r1
    2672:	df 93       	push	r29
    2674:	cf 93       	push	r28
    2676:	1f 93       	push	r17
    2678:	0f 93       	push	r16
    267a:	ff 92       	push	r15
    267c:	ef 92       	push	r14
    267e:	19 2f       	mov	r17, r25
    2680:	98 7f       	andi	r25, 0xF8	; 248
    2682:	96 95       	lsr	r25
    2684:	e9 2f       	mov	r30, r25
    2686:	96 95       	lsr	r25
    2688:	96 95       	lsr	r25
    268a:	e9 0f       	add	r30, r25
    268c:	ff 27       	eor	r31, r31
    268e:	ec 58       	subi	r30, 0x8C	; 140
    2690:	fe 4f       	sbci	r31, 0xFE	; 254
    2692:	99 27       	eor	r25, r25
    2694:	33 27       	eor	r19, r19
    2696:	ee 24       	eor	r14, r14
    2698:	ff 24       	eor	r15, r15
    269a:	a7 01       	movw	r20, r14
    269c:	e7 01       	movw	r28, r14
    269e:	05 90       	lpm	r0, Z+
    26a0:	08 94       	sec
    26a2:	07 94       	ror	r0
    26a4:	28 f4       	brcc	.+10     	; 0x26b0 <__ftoa_engine+0x80>
    26a6:	36 0f       	add	r19, r22
    26a8:	e7 1e       	adc	r14, r23
    26aa:	f8 1e       	adc	r15, r24
    26ac:	49 1f       	adc	r20, r25
    26ae:	51 1d       	adc	r21, r1
    26b0:	66 0f       	add	r22, r22
    26b2:	77 1f       	adc	r23, r23
    26b4:	88 1f       	adc	r24, r24
    26b6:	99 1f       	adc	r25, r25
    26b8:	06 94       	lsr	r0
    26ba:	a1 f7       	brne	.-24     	; 0x26a4 <__ftoa_engine+0x74>
    26bc:	05 90       	lpm	r0, Z+
    26be:	07 94       	ror	r0
    26c0:	28 f4       	brcc	.+10     	; 0x26cc <__ftoa_engine+0x9c>
    26c2:	e7 0e       	add	r14, r23
    26c4:	f8 1e       	adc	r15, r24
    26c6:	49 1f       	adc	r20, r25
    26c8:	56 1f       	adc	r21, r22
    26ca:	c1 1d       	adc	r28, r1
    26cc:	77 0f       	add	r23, r23
    26ce:	88 1f       	adc	r24, r24
    26d0:	99 1f       	adc	r25, r25
    26d2:	66 1f       	adc	r22, r22
    26d4:	06 94       	lsr	r0
    26d6:	a1 f7       	brne	.-24     	; 0x26c0 <__ftoa_engine+0x90>
    26d8:	05 90       	lpm	r0, Z+
    26da:	07 94       	ror	r0
    26dc:	28 f4       	brcc	.+10     	; 0x26e8 <__ftoa_engine+0xb8>
    26de:	f8 0e       	add	r15, r24
    26e0:	49 1f       	adc	r20, r25
    26e2:	56 1f       	adc	r21, r22
    26e4:	c7 1f       	adc	r28, r23
    26e6:	d1 1d       	adc	r29, r1
    26e8:	88 0f       	add	r24, r24
    26ea:	99 1f       	adc	r25, r25
    26ec:	66 1f       	adc	r22, r22
    26ee:	77 1f       	adc	r23, r23
    26f0:	06 94       	lsr	r0
    26f2:	a1 f7       	brne	.-24     	; 0x26dc <__ftoa_engine+0xac>
    26f4:	05 90       	lpm	r0, Z+
    26f6:	07 94       	ror	r0
    26f8:	20 f4       	brcc	.+8      	; 0x2702 <__ftoa_engine+0xd2>
    26fa:	49 0f       	add	r20, r25
    26fc:	56 1f       	adc	r21, r22
    26fe:	c7 1f       	adc	r28, r23
    2700:	d8 1f       	adc	r29, r24
    2702:	99 0f       	add	r25, r25
    2704:	66 1f       	adc	r22, r22
    2706:	77 1f       	adc	r23, r23
    2708:	88 1f       	adc	r24, r24
    270a:	06 94       	lsr	r0
    270c:	a9 f7       	brne	.-22     	; 0x26f8 <__ftoa_engine+0xc8>
    270e:	84 91       	lpm	r24, Z
    2710:	10 95       	com	r17
    2712:	17 70       	andi	r17, 0x07	; 7
    2714:	41 f0       	breq	.+16     	; 0x2726 <__ftoa_engine+0xf6>
    2716:	d6 95       	lsr	r29
    2718:	c7 95       	ror	r28
    271a:	57 95       	ror	r21
    271c:	47 95       	ror	r20
    271e:	f7 94       	ror	r15
    2720:	e7 94       	ror	r14
    2722:	1a 95       	dec	r17
    2724:	c1 f7       	brne	.-16     	; 0x2716 <__ftoa_engine+0xe6>
    2726:	ea e1       	ldi	r30, 0x1A	; 26
    2728:	f1 e0       	ldi	r31, 0x01	; 1
    272a:	68 94       	set
    272c:	15 90       	lpm	r1, Z+
    272e:	15 91       	lpm	r17, Z+
    2730:	35 91       	lpm	r19, Z+
    2732:	65 91       	lpm	r22, Z+
    2734:	95 91       	lpm	r25, Z+
    2736:	05 90       	lpm	r0, Z+
    2738:	7f e2       	ldi	r23, 0x2F	; 47
    273a:	73 95       	inc	r23
    273c:	e1 18       	sub	r14, r1
    273e:	f1 0a       	sbc	r15, r17
    2740:	43 0b       	sbc	r20, r19
    2742:	56 0b       	sbc	r21, r22
    2744:	c9 0b       	sbc	r28, r25
    2746:	d0 09       	sbc	r29, r0
    2748:	c0 f7       	brcc	.-16     	; 0x273a <__ftoa_engine+0x10a>
    274a:	e1 0c       	add	r14, r1
    274c:	f1 1e       	adc	r15, r17
    274e:	43 1f       	adc	r20, r19
    2750:	56 1f       	adc	r21, r22
    2752:	c9 1f       	adc	r28, r25
    2754:	d0 1d       	adc	r29, r0
    2756:	7e f4       	brtc	.+30     	; 0x2776 <__ftoa_engine+0x146>
    2758:	70 33       	cpi	r23, 0x30	; 48
    275a:	11 f4       	brne	.+4      	; 0x2760 <__ftoa_engine+0x130>
    275c:	8a 95       	dec	r24
    275e:	e6 cf       	rjmp	.-52     	; 0x272c <__ftoa_engine+0xfc>
    2760:	e8 94       	clt
    2762:	01 50       	subi	r16, 0x01	; 1
    2764:	30 f0       	brcs	.+12     	; 0x2772 <__ftoa_engine+0x142>
    2766:	08 0f       	add	r16, r24
    2768:	0a f4       	brpl	.+2      	; 0x276c <__ftoa_engine+0x13c>
    276a:	00 27       	eor	r16, r16
    276c:	02 17       	cp	r16, r18
    276e:	08 f4       	brcc	.+2      	; 0x2772 <__ftoa_engine+0x142>
    2770:	20 2f       	mov	r18, r16
    2772:	23 95       	inc	r18
    2774:	02 2f       	mov	r16, r18
    2776:	7a 33       	cpi	r23, 0x3A	; 58
    2778:	28 f0       	brcs	.+10     	; 0x2784 <__ftoa_engine+0x154>
    277a:	79 e3       	ldi	r23, 0x39	; 57
    277c:	7d 93       	st	X+, r23
    277e:	2a 95       	dec	r18
    2780:	e9 f7       	brne	.-6      	; 0x277c <__ftoa_engine+0x14c>
    2782:	10 c0       	rjmp	.+32     	; 0x27a4 <__ftoa_engine+0x174>
    2784:	7d 93       	st	X+, r23
    2786:	2a 95       	dec	r18
    2788:	89 f6       	brne	.-94     	; 0x272c <__ftoa_engine+0xfc>
    278a:	06 94       	lsr	r0
    278c:	97 95       	ror	r25
    278e:	67 95       	ror	r22
    2790:	37 95       	ror	r19
    2792:	17 95       	ror	r17
    2794:	17 94       	ror	r1
    2796:	e1 18       	sub	r14, r1
    2798:	f1 0a       	sbc	r15, r17
    279a:	43 0b       	sbc	r20, r19
    279c:	56 0b       	sbc	r21, r22
    279e:	c9 0b       	sbc	r28, r25
    27a0:	d0 09       	sbc	r29, r0
    27a2:	98 f0       	brcs	.+38     	; 0x27ca <__ftoa_engine+0x19a>
    27a4:	23 95       	inc	r18
    27a6:	7e 91       	ld	r23, -X
    27a8:	73 95       	inc	r23
    27aa:	7a 33       	cpi	r23, 0x3A	; 58
    27ac:	08 f0       	brcs	.+2      	; 0x27b0 <__ftoa_engine+0x180>
    27ae:	70 e3       	ldi	r23, 0x30	; 48
    27b0:	7c 93       	st	X, r23
    27b2:	20 13       	cpse	r18, r16
    27b4:	b8 f7       	brcc	.-18     	; 0x27a4 <__ftoa_engine+0x174>
    27b6:	7e 91       	ld	r23, -X
    27b8:	70 61       	ori	r23, 0x10	; 16
    27ba:	7d 93       	st	X+, r23
    27bc:	30 f0       	brcs	.+12     	; 0x27ca <__ftoa_engine+0x19a>
    27be:	83 95       	inc	r24
    27c0:	71 e3       	ldi	r23, 0x31	; 49
    27c2:	7d 93       	st	X+, r23
    27c4:	70 e3       	ldi	r23, 0x30	; 48
    27c6:	2a 95       	dec	r18
    27c8:	e1 f7       	brne	.-8      	; 0x27c2 <__ftoa_engine+0x192>
    27ca:	11 24       	eor	r1, r1
    27cc:	ef 90       	pop	r14
    27ce:	ff 90       	pop	r15
    27d0:	0f 91       	pop	r16
    27d2:	1f 91       	pop	r17
    27d4:	cf 91       	pop	r28
    27d6:	df 91       	pop	r29
    27d8:	99 27       	eor	r25, r25
    27da:	87 fd       	sbrc	r24, 7
    27dc:	90 95       	com	r25
    27de:	08 95       	ret

000027e0 <strnlen_P>:
    27e0:	fc 01       	movw	r30, r24
    27e2:	05 90       	lpm	r0, Z+
    27e4:	61 50       	subi	r22, 0x01	; 1
    27e6:	70 40       	sbci	r23, 0x00	; 0
    27e8:	01 10       	cpse	r0, r1
    27ea:	d8 f7       	brcc	.-10     	; 0x27e2 <strnlen_P+0x2>
    27ec:	80 95       	com	r24
    27ee:	90 95       	com	r25
    27f0:	8e 0f       	add	r24, r30
    27f2:	9f 1f       	adc	r25, r31
    27f4:	08 95       	ret

000027f6 <strnlen>:
    27f6:	fc 01       	movw	r30, r24
    27f8:	61 50       	subi	r22, 0x01	; 1
    27fa:	70 40       	sbci	r23, 0x00	; 0
    27fc:	01 90       	ld	r0, Z+
    27fe:	01 10       	cpse	r0, r1
    2800:	d8 f7       	brcc	.-10     	; 0x27f8 <strnlen+0x2>
    2802:	80 95       	com	r24
    2804:	90 95       	com	r25
    2806:	8e 0f       	add	r24, r30
    2808:	9f 1f       	adc	r25, r31
    280a:	08 95       	ret

0000280c <fdevopen>:
    280c:	0f 93       	push	r16
    280e:	1f 93       	push	r17
    2810:	cf 93       	push	r28
    2812:	df 93       	push	r29
    2814:	00 97       	sbiw	r24, 0x00	; 0
    2816:	31 f4       	brne	.+12     	; 0x2824 <fdevopen+0x18>
    2818:	61 15       	cp	r22, r1
    281a:	71 05       	cpc	r23, r1
    281c:	19 f4       	brne	.+6      	; 0x2824 <fdevopen+0x18>
    281e:	80 e0       	ldi	r24, 0x00	; 0
    2820:	90 e0       	ldi	r25, 0x00	; 0
    2822:	39 c0       	rjmp	.+114    	; 0x2896 <fdevopen+0x8a>
    2824:	8b 01       	movw	r16, r22
    2826:	ec 01       	movw	r28, r24
    2828:	6e e0       	ldi	r22, 0x0E	; 14
    282a:	70 e0       	ldi	r23, 0x00	; 0
    282c:	81 e0       	ldi	r24, 0x01	; 1
    282e:	90 e0       	ldi	r25, 0x00	; 0
    2830:	17 d1       	rcall	.+558    	; 0x2a60 <calloc>
    2832:	fc 01       	movw	r30, r24
    2834:	89 2b       	or	r24, r25
    2836:	99 f3       	breq	.-26     	; 0x281e <fdevopen+0x12>
    2838:	80 e8       	ldi	r24, 0x80	; 128
    283a:	83 83       	std	Z+3, r24	; 0x03
    283c:	01 15       	cp	r16, r1
    283e:	11 05       	cpc	r17, r1
    2840:	71 f0       	breq	.+28     	; 0x285e <fdevopen+0x52>
    2842:	13 87       	std	Z+11, r17	; 0x0b
    2844:	02 87       	std	Z+10, r16	; 0x0a
    2846:	81 e8       	ldi	r24, 0x81	; 129
    2848:	83 83       	std	Z+3, r24	; 0x03
    284a:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__iob>
    284e:	90 91 3b 04 	lds	r25, 0x043B	; 0x80043b <__iob+0x1>
    2852:	89 2b       	or	r24, r25
    2854:	21 f4       	brne	.+8      	; 0x285e <fdevopen+0x52>
    2856:	f0 93 3b 04 	sts	0x043B, r31	; 0x80043b <__iob+0x1>
    285a:	e0 93 3a 04 	sts	0x043A, r30	; 0x80043a <__iob>
    285e:	20 97       	sbiw	r28, 0x00	; 0
    2860:	c9 f0       	breq	.+50     	; 0x2894 <fdevopen+0x88>
    2862:	d1 87       	std	Z+9, r29	; 0x09
    2864:	c0 87       	std	Z+8, r28	; 0x08
    2866:	83 81       	ldd	r24, Z+3	; 0x03
    2868:	82 60       	ori	r24, 0x02	; 2
    286a:	83 83       	std	Z+3, r24	; 0x03
    286c:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <__iob+0x2>
    2870:	90 91 3d 04 	lds	r25, 0x043D	; 0x80043d <__iob+0x3>
    2874:	89 2b       	or	r24, r25
    2876:	71 f4       	brne	.+28     	; 0x2894 <fdevopen+0x88>
    2878:	f0 93 3d 04 	sts	0x043D, r31	; 0x80043d <__iob+0x3>
    287c:	e0 93 3c 04 	sts	0x043C, r30	; 0x80043c <__iob+0x2>
    2880:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <__iob+0x4>
    2884:	90 91 3f 04 	lds	r25, 0x043F	; 0x80043f <__iob+0x5>
    2888:	89 2b       	or	r24, r25
    288a:	21 f4       	brne	.+8      	; 0x2894 <fdevopen+0x88>
    288c:	f0 93 3f 04 	sts	0x043F, r31	; 0x80043f <__iob+0x5>
    2890:	e0 93 3e 04 	sts	0x043E, r30	; 0x80043e <__iob+0x4>
    2894:	cf 01       	movw	r24, r30
    2896:	df 91       	pop	r29
    2898:	cf 91       	pop	r28
    289a:	1f 91       	pop	r17
    289c:	0f 91       	pop	r16
    289e:	08 95       	ret

000028a0 <fputc>:
    28a0:	0f 93       	push	r16
    28a2:	1f 93       	push	r17
    28a4:	cf 93       	push	r28
    28a6:	df 93       	push	r29
    28a8:	fb 01       	movw	r30, r22
    28aa:	23 81       	ldd	r18, Z+3	; 0x03
    28ac:	21 fd       	sbrc	r18, 1
    28ae:	03 c0       	rjmp	.+6      	; 0x28b6 <fputc+0x16>
    28b0:	8f ef       	ldi	r24, 0xFF	; 255
    28b2:	9f ef       	ldi	r25, 0xFF	; 255
    28b4:	2c c0       	rjmp	.+88     	; 0x290e <fputc+0x6e>
    28b6:	22 ff       	sbrs	r18, 2
    28b8:	16 c0       	rjmp	.+44     	; 0x28e6 <fputc+0x46>
    28ba:	46 81       	ldd	r20, Z+6	; 0x06
    28bc:	57 81       	ldd	r21, Z+7	; 0x07
    28be:	24 81       	ldd	r18, Z+4	; 0x04
    28c0:	35 81       	ldd	r19, Z+5	; 0x05
    28c2:	42 17       	cp	r20, r18
    28c4:	53 07       	cpc	r21, r19
    28c6:	44 f4       	brge	.+16     	; 0x28d8 <fputc+0x38>
    28c8:	a0 81       	ld	r26, Z
    28ca:	b1 81       	ldd	r27, Z+1	; 0x01
    28cc:	9d 01       	movw	r18, r26
    28ce:	2f 5f       	subi	r18, 0xFF	; 255
    28d0:	3f 4f       	sbci	r19, 0xFF	; 255
    28d2:	31 83       	std	Z+1, r19	; 0x01
    28d4:	20 83       	st	Z, r18
    28d6:	8c 93       	st	X, r24
    28d8:	26 81       	ldd	r18, Z+6	; 0x06
    28da:	37 81       	ldd	r19, Z+7	; 0x07
    28dc:	2f 5f       	subi	r18, 0xFF	; 255
    28de:	3f 4f       	sbci	r19, 0xFF	; 255
    28e0:	37 83       	std	Z+7, r19	; 0x07
    28e2:	26 83       	std	Z+6, r18	; 0x06
    28e4:	14 c0       	rjmp	.+40     	; 0x290e <fputc+0x6e>
    28e6:	8b 01       	movw	r16, r22
    28e8:	ec 01       	movw	r28, r24
    28ea:	fb 01       	movw	r30, r22
    28ec:	00 84       	ldd	r0, Z+8	; 0x08
    28ee:	f1 85       	ldd	r31, Z+9	; 0x09
    28f0:	e0 2d       	mov	r30, r0
    28f2:	19 95       	eicall
    28f4:	89 2b       	or	r24, r25
    28f6:	e1 f6       	brne	.-72     	; 0x28b0 <fputc+0x10>
    28f8:	d8 01       	movw	r26, r16
    28fa:	16 96       	adiw	r26, 0x06	; 6
    28fc:	8d 91       	ld	r24, X+
    28fe:	9c 91       	ld	r25, X
    2900:	17 97       	sbiw	r26, 0x07	; 7
    2902:	01 96       	adiw	r24, 0x01	; 1
    2904:	17 96       	adiw	r26, 0x07	; 7
    2906:	9c 93       	st	X, r25
    2908:	8e 93       	st	-X, r24
    290a:	16 97       	sbiw	r26, 0x06	; 6
    290c:	ce 01       	movw	r24, r28
    290e:	df 91       	pop	r29
    2910:	cf 91       	pop	r28
    2912:	1f 91       	pop	r17
    2914:	0f 91       	pop	r16
    2916:	08 95       	ret

00002918 <printf>:
    2918:	cf 93       	push	r28
    291a:	df 93       	push	r29
    291c:	cd b7       	in	r28, 0x3d	; 61
    291e:	de b7       	in	r29, 0x3e	; 62
    2920:	ae 01       	movw	r20, r28
    2922:	4a 5f       	subi	r20, 0xFA	; 250
    2924:	5f 4f       	sbci	r21, 0xFF	; 255
    2926:	fa 01       	movw	r30, r20
    2928:	61 91       	ld	r22, Z+
    292a:	71 91       	ld	r23, Z+
    292c:	af 01       	movw	r20, r30
    292e:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <__iob+0x2>
    2932:	90 91 3d 04 	lds	r25, 0x043D	; 0x80043d <__iob+0x3>
    2936:	cc da       	rcall	.-2664   	; 0x1ed0 <vfprintf>
    2938:	df 91       	pop	r29
    293a:	cf 91       	pop	r28
    293c:	08 95       	ret

0000293e <putchar>:
    293e:	60 91 3c 04 	lds	r22, 0x043C	; 0x80043c <__iob+0x2>
    2942:	70 91 3d 04 	lds	r23, 0x043D	; 0x80043d <__iob+0x3>
    2946:	ac cf       	rjmp	.-168    	; 0x28a0 <fputc>

00002948 <sprintf>:
    2948:	0f 93       	push	r16
    294a:	1f 93       	push	r17
    294c:	cf 93       	push	r28
    294e:	df 93       	push	r29
    2950:	cd b7       	in	r28, 0x3d	; 61
    2952:	de b7       	in	r29, 0x3e	; 62
    2954:	2e 97       	sbiw	r28, 0x0e	; 14
    2956:	0f b6       	in	r0, 0x3f	; 63
    2958:	f8 94       	cli
    295a:	de bf       	out	0x3e, r29	; 62
    295c:	0f be       	out	0x3f, r0	; 63
    295e:	cd bf       	out	0x3d, r28	; 61
    2960:	0e 89       	ldd	r16, Y+22	; 0x16
    2962:	1f 89       	ldd	r17, Y+23	; 0x17
    2964:	86 e0       	ldi	r24, 0x06	; 6
    2966:	8c 83       	std	Y+4, r24	; 0x04
    2968:	1a 83       	std	Y+2, r17	; 0x02
    296a:	09 83       	std	Y+1, r16	; 0x01
    296c:	8f ef       	ldi	r24, 0xFF	; 255
    296e:	9f e7       	ldi	r25, 0x7F	; 127
    2970:	9e 83       	std	Y+6, r25	; 0x06
    2972:	8d 83       	std	Y+5, r24	; 0x05
    2974:	ae 01       	movw	r20, r28
    2976:	46 5e       	subi	r20, 0xE6	; 230
    2978:	5f 4f       	sbci	r21, 0xFF	; 255
    297a:	68 8d       	ldd	r22, Y+24	; 0x18
    297c:	79 8d       	ldd	r23, Y+25	; 0x19
    297e:	ce 01       	movw	r24, r28
    2980:	01 96       	adiw	r24, 0x01	; 1
    2982:	a6 da       	rcall	.-2740   	; 0x1ed0 <vfprintf>
    2984:	ef 81       	ldd	r30, Y+7	; 0x07
    2986:	f8 85       	ldd	r31, Y+8	; 0x08
    2988:	e0 0f       	add	r30, r16
    298a:	f1 1f       	adc	r31, r17
    298c:	10 82       	st	Z, r1
    298e:	2e 96       	adiw	r28, 0x0e	; 14
    2990:	0f b6       	in	r0, 0x3f	; 63
    2992:	f8 94       	cli
    2994:	de bf       	out	0x3e, r29	; 62
    2996:	0f be       	out	0x3f, r0	; 63
    2998:	cd bf       	out	0x3d, r28	; 61
    299a:	df 91       	pop	r29
    299c:	cf 91       	pop	r28
    299e:	1f 91       	pop	r17
    29a0:	0f 91       	pop	r16
    29a2:	08 95       	ret

000029a4 <__ultoa_invert>:
    29a4:	fa 01       	movw	r30, r20
    29a6:	aa 27       	eor	r26, r26
    29a8:	28 30       	cpi	r18, 0x08	; 8
    29aa:	51 f1       	breq	.+84     	; 0x2a00 <__ultoa_invert+0x5c>
    29ac:	20 31       	cpi	r18, 0x10	; 16
    29ae:	81 f1       	breq	.+96     	; 0x2a10 <__ultoa_invert+0x6c>
    29b0:	e8 94       	clt
    29b2:	6f 93       	push	r22
    29b4:	6e 7f       	andi	r22, 0xFE	; 254
    29b6:	6e 5f       	subi	r22, 0xFE	; 254
    29b8:	7f 4f       	sbci	r23, 0xFF	; 255
    29ba:	8f 4f       	sbci	r24, 0xFF	; 255
    29bc:	9f 4f       	sbci	r25, 0xFF	; 255
    29be:	af 4f       	sbci	r26, 0xFF	; 255
    29c0:	b1 e0       	ldi	r27, 0x01	; 1
    29c2:	3e d0       	rcall	.+124    	; 0x2a40 <__ultoa_invert+0x9c>
    29c4:	b4 e0       	ldi	r27, 0x04	; 4
    29c6:	3c d0       	rcall	.+120    	; 0x2a40 <__ultoa_invert+0x9c>
    29c8:	67 0f       	add	r22, r23
    29ca:	78 1f       	adc	r23, r24
    29cc:	89 1f       	adc	r24, r25
    29ce:	9a 1f       	adc	r25, r26
    29d0:	a1 1d       	adc	r26, r1
    29d2:	68 0f       	add	r22, r24
    29d4:	79 1f       	adc	r23, r25
    29d6:	8a 1f       	adc	r24, r26
    29d8:	91 1d       	adc	r25, r1
    29da:	a1 1d       	adc	r26, r1
    29dc:	6a 0f       	add	r22, r26
    29de:	71 1d       	adc	r23, r1
    29e0:	81 1d       	adc	r24, r1
    29e2:	91 1d       	adc	r25, r1
    29e4:	a1 1d       	adc	r26, r1
    29e6:	20 d0       	rcall	.+64     	; 0x2a28 <__ultoa_invert+0x84>
    29e8:	09 f4       	brne	.+2      	; 0x29ec <__ultoa_invert+0x48>
    29ea:	68 94       	set
    29ec:	3f 91       	pop	r19
    29ee:	2a e0       	ldi	r18, 0x0A	; 10
    29f0:	26 9f       	mul	r18, r22
    29f2:	11 24       	eor	r1, r1
    29f4:	30 19       	sub	r19, r0
    29f6:	30 5d       	subi	r19, 0xD0	; 208
    29f8:	31 93       	st	Z+, r19
    29fa:	de f6       	brtc	.-74     	; 0x29b2 <__ultoa_invert+0xe>
    29fc:	cf 01       	movw	r24, r30
    29fe:	08 95       	ret
    2a00:	46 2f       	mov	r20, r22
    2a02:	47 70       	andi	r20, 0x07	; 7
    2a04:	40 5d       	subi	r20, 0xD0	; 208
    2a06:	41 93       	st	Z+, r20
    2a08:	b3 e0       	ldi	r27, 0x03	; 3
    2a0a:	0f d0       	rcall	.+30     	; 0x2a2a <__ultoa_invert+0x86>
    2a0c:	c9 f7       	brne	.-14     	; 0x2a00 <__ultoa_invert+0x5c>
    2a0e:	f6 cf       	rjmp	.-20     	; 0x29fc <__ultoa_invert+0x58>
    2a10:	46 2f       	mov	r20, r22
    2a12:	4f 70       	andi	r20, 0x0F	; 15
    2a14:	40 5d       	subi	r20, 0xD0	; 208
    2a16:	4a 33       	cpi	r20, 0x3A	; 58
    2a18:	18 f0       	brcs	.+6      	; 0x2a20 <__ultoa_invert+0x7c>
    2a1a:	49 5d       	subi	r20, 0xD9	; 217
    2a1c:	31 fd       	sbrc	r19, 1
    2a1e:	40 52       	subi	r20, 0x20	; 32
    2a20:	41 93       	st	Z+, r20
    2a22:	02 d0       	rcall	.+4      	; 0x2a28 <__ultoa_invert+0x84>
    2a24:	a9 f7       	brne	.-22     	; 0x2a10 <__ultoa_invert+0x6c>
    2a26:	ea cf       	rjmp	.-44     	; 0x29fc <__ultoa_invert+0x58>
    2a28:	b4 e0       	ldi	r27, 0x04	; 4
    2a2a:	a6 95       	lsr	r26
    2a2c:	97 95       	ror	r25
    2a2e:	87 95       	ror	r24
    2a30:	77 95       	ror	r23
    2a32:	67 95       	ror	r22
    2a34:	ba 95       	dec	r27
    2a36:	c9 f7       	brne	.-14     	; 0x2a2a <__ultoa_invert+0x86>
    2a38:	00 97       	sbiw	r24, 0x00	; 0
    2a3a:	61 05       	cpc	r22, r1
    2a3c:	71 05       	cpc	r23, r1
    2a3e:	08 95       	ret
    2a40:	9b 01       	movw	r18, r22
    2a42:	ac 01       	movw	r20, r24
    2a44:	0a 2e       	mov	r0, r26
    2a46:	06 94       	lsr	r0
    2a48:	57 95       	ror	r21
    2a4a:	47 95       	ror	r20
    2a4c:	37 95       	ror	r19
    2a4e:	27 95       	ror	r18
    2a50:	ba 95       	dec	r27
    2a52:	c9 f7       	brne	.-14     	; 0x2a46 <__ultoa_invert+0xa2>
    2a54:	62 0f       	add	r22, r18
    2a56:	73 1f       	adc	r23, r19
    2a58:	84 1f       	adc	r24, r20
    2a5a:	95 1f       	adc	r25, r21
    2a5c:	a0 1d       	adc	r26, r0
    2a5e:	08 95       	ret

00002a60 <calloc>:
    2a60:	0f 93       	push	r16
    2a62:	1f 93       	push	r17
    2a64:	cf 93       	push	r28
    2a66:	df 93       	push	r29
    2a68:	86 9f       	mul	r24, r22
    2a6a:	80 01       	movw	r16, r0
    2a6c:	87 9f       	mul	r24, r23
    2a6e:	10 0d       	add	r17, r0
    2a70:	96 9f       	mul	r25, r22
    2a72:	10 0d       	add	r17, r0
    2a74:	11 24       	eor	r1, r1
    2a76:	c8 01       	movw	r24, r16
    2a78:	0d d0       	rcall	.+26     	; 0x2a94 <malloc>
    2a7a:	ec 01       	movw	r28, r24
    2a7c:	00 97       	sbiw	r24, 0x00	; 0
    2a7e:	21 f0       	breq	.+8      	; 0x2a88 <calloc+0x28>
    2a80:	a8 01       	movw	r20, r16
    2a82:	60 e0       	ldi	r22, 0x00	; 0
    2a84:	70 e0       	ldi	r23, 0x00	; 0
    2a86:	27 d1       	rcall	.+590    	; 0x2cd6 <memset>
    2a88:	ce 01       	movw	r24, r28
    2a8a:	df 91       	pop	r29
    2a8c:	cf 91       	pop	r28
    2a8e:	1f 91       	pop	r17
    2a90:	0f 91       	pop	r16
    2a92:	08 95       	ret

00002a94 <malloc>:
    2a94:	0f 93       	push	r16
    2a96:	1f 93       	push	r17
    2a98:	cf 93       	push	r28
    2a9a:	df 93       	push	r29
    2a9c:	82 30       	cpi	r24, 0x02	; 2
    2a9e:	91 05       	cpc	r25, r1
    2aa0:	10 f4       	brcc	.+4      	; 0x2aa6 <malloc+0x12>
    2aa2:	82 e0       	ldi	r24, 0x02	; 2
    2aa4:	90 e0       	ldi	r25, 0x00	; 0
    2aa6:	e0 91 42 04 	lds	r30, 0x0442	; 0x800442 <__flp>
    2aaa:	f0 91 43 04 	lds	r31, 0x0443	; 0x800443 <__flp+0x1>
    2aae:	20 e0       	ldi	r18, 0x00	; 0
    2ab0:	30 e0       	ldi	r19, 0x00	; 0
    2ab2:	a0 e0       	ldi	r26, 0x00	; 0
    2ab4:	b0 e0       	ldi	r27, 0x00	; 0
    2ab6:	30 97       	sbiw	r30, 0x00	; 0
    2ab8:	19 f1       	breq	.+70     	; 0x2b00 <malloc+0x6c>
    2aba:	40 81       	ld	r20, Z
    2abc:	51 81       	ldd	r21, Z+1	; 0x01
    2abe:	02 81       	ldd	r16, Z+2	; 0x02
    2ac0:	13 81       	ldd	r17, Z+3	; 0x03
    2ac2:	48 17       	cp	r20, r24
    2ac4:	59 07       	cpc	r21, r25
    2ac6:	c8 f0       	brcs	.+50     	; 0x2afa <malloc+0x66>
    2ac8:	84 17       	cp	r24, r20
    2aca:	95 07       	cpc	r25, r21
    2acc:	69 f4       	brne	.+26     	; 0x2ae8 <malloc+0x54>
    2ace:	10 97       	sbiw	r26, 0x00	; 0
    2ad0:	31 f0       	breq	.+12     	; 0x2ade <malloc+0x4a>
    2ad2:	12 96       	adiw	r26, 0x02	; 2
    2ad4:	0c 93       	st	X, r16
    2ad6:	12 97       	sbiw	r26, 0x02	; 2
    2ad8:	13 96       	adiw	r26, 0x03	; 3
    2ada:	1c 93       	st	X, r17
    2adc:	27 c0       	rjmp	.+78     	; 0x2b2c <malloc+0x98>
    2ade:	00 93 42 04 	sts	0x0442, r16	; 0x800442 <__flp>
    2ae2:	10 93 43 04 	sts	0x0443, r17	; 0x800443 <__flp+0x1>
    2ae6:	22 c0       	rjmp	.+68     	; 0x2b2c <malloc+0x98>
    2ae8:	21 15       	cp	r18, r1
    2aea:	31 05       	cpc	r19, r1
    2aec:	19 f0       	breq	.+6      	; 0x2af4 <malloc+0x60>
    2aee:	42 17       	cp	r20, r18
    2af0:	53 07       	cpc	r21, r19
    2af2:	18 f4       	brcc	.+6      	; 0x2afa <malloc+0x66>
    2af4:	9a 01       	movw	r18, r20
    2af6:	bd 01       	movw	r22, r26
    2af8:	ef 01       	movw	r28, r30
    2afa:	df 01       	movw	r26, r30
    2afc:	f8 01       	movw	r30, r16
    2afe:	db cf       	rjmp	.-74     	; 0x2ab6 <malloc+0x22>
    2b00:	21 15       	cp	r18, r1
    2b02:	31 05       	cpc	r19, r1
    2b04:	f9 f0       	breq	.+62     	; 0x2b44 <malloc+0xb0>
    2b06:	28 1b       	sub	r18, r24
    2b08:	39 0b       	sbc	r19, r25
    2b0a:	24 30       	cpi	r18, 0x04	; 4
    2b0c:	31 05       	cpc	r19, r1
    2b0e:	80 f4       	brcc	.+32     	; 0x2b30 <malloc+0x9c>
    2b10:	8a 81       	ldd	r24, Y+2	; 0x02
    2b12:	9b 81       	ldd	r25, Y+3	; 0x03
    2b14:	61 15       	cp	r22, r1
    2b16:	71 05       	cpc	r23, r1
    2b18:	21 f0       	breq	.+8      	; 0x2b22 <malloc+0x8e>
    2b1a:	fb 01       	movw	r30, r22
    2b1c:	93 83       	std	Z+3, r25	; 0x03
    2b1e:	82 83       	std	Z+2, r24	; 0x02
    2b20:	04 c0       	rjmp	.+8      	; 0x2b2a <malloc+0x96>
    2b22:	90 93 43 04 	sts	0x0443, r25	; 0x800443 <__flp+0x1>
    2b26:	80 93 42 04 	sts	0x0442, r24	; 0x800442 <__flp>
    2b2a:	fe 01       	movw	r30, r28
    2b2c:	32 96       	adiw	r30, 0x02	; 2
    2b2e:	44 c0       	rjmp	.+136    	; 0x2bb8 <malloc+0x124>
    2b30:	fe 01       	movw	r30, r28
    2b32:	e2 0f       	add	r30, r18
    2b34:	f3 1f       	adc	r31, r19
    2b36:	81 93       	st	Z+, r24
    2b38:	91 93       	st	Z+, r25
    2b3a:	22 50       	subi	r18, 0x02	; 2
    2b3c:	31 09       	sbc	r19, r1
    2b3e:	39 83       	std	Y+1, r19	; 0x01
    2b40:	28 83       	st	Y, r18
    2b42:	3a c0       	rjmp	.+116    	; 0x2bb8 <malloc+0x124>
    2b44:	20 91 40 04 	lds	r18, 0x0440	; 0x800440 <__brkval>
    2b48:	30 91 41 04 	lds	r19, 0x0441	; 0x800441 <__brkval+0x1>
    2b4c:	23 2b       	or	r18, r19
    2b4e:	41 f4       	brne	.+16     	; 0x2b60 <malloc+0xcc>
    2b50:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2b54:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2b58:	30 93 41 04 	sts	0x0441, r19	; 0x800441 <__brkval+0x1>
    2b5c:	20 93 40 04 	sts	0x0440, r18	; 0x800440 <__brkval>
    2b60:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2b64:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2b68:	21 15       	cp	r18, r1
    2b6a:	31 05       	cpc	r19, r1
    2b6c:	41 f4       	brne	.+16     	; 0x2b7e <malloc+0xea>
    2b6e:	2d b7       	in	r18, 0x3d	; 61
    2b70:	3e b7       	in	r19, 0x3e	; 62
    2b72:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2b76:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2b7a:	24 1b       	sub	r18, r20
    2b7c:	35 0b       	sbc	r19, r21
    2b7e:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <__brkval>
    2b82:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <__brkval+0x1>
    2b86:	e2 17       	cp	r30, r18
    2b88:	f3 07       	cpc	r31, r19
    2b8a:	a0 f4       	brcc	.+40     	; 0x2bb4 <malloc+0x120>
    2b8c:	2e 1b       	sub	r18, r30
    2b8e:	3f 0b       	sbc	r19, r31
    2b90:	28 17       	cp	r18, r24
    2b92:	39 07       	cpc	r19, r25
    2b94:	78 f0       	brcs	.+30     	; 0x2bb4 <malloc+0x120>
    2b96:	ac 01       	movw	r20, r24
    2b98:	4e 5f       	subi	r20, 0xFE	; 254
    2b9a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b9c:	24 17       	cp	r18, r20
    2b9e:	35 07       	cpc	r19, r21
    2ba0:	48 f0       	brcs	.+18     	; 0x2bb4 <malloc+0x120>
    2ba2:	4e 0f       	add	r20, r30
    2ba4:	5f 1f       	adc	r21, r31
    2ba6:	50 93 41 04 	sts	0x0441, r21	; 0x800441 <__brkval+0x1>
    2baa:	40 93 40 04 	sts	0x0440, r20	; 0x800440 <__brkval>
    2bae:	81 93       	st	Z+, r24
    2bb0:	91 93       	st	Z+, r25
    2bb2:	02 c0       	rjmp	.+4      	; 0x2bb8 <malloc+0x124>
    2bb4:	e0 e0       	ldi	r30, 0x00	; 0
    2bb6:	f0 e0       	ldi	r31, 0x00	; 0
    2bb8:	cf 01       	movw	r24, r30
    2bba:	df 91       	pop	r29
    2bbc:	cf 91       	pop	r28
    2bbe:	1f 91       	pop	r17
    2bc0:	0f 91       	pop	r16
    2bc2:	08 95       	ret

00002bc4 <free>:
    2bc4:	cf 93       	push	r28
    2bc6:	df 93       	push	r29
    2bc8:	00 97       	sbiw	r24, 0x00	; 0
    2bca:	09 f4       	brne	.+2      	; 0x2bce <free+0xa>
    2bcc:	81 c0       	rjmp	.+258    	; 0x2cd0 <free+0x10c>
    2bce:	fc 01       	movw	r30, r24
    2bd0:	32 97       	sbiw	r30, 0x02	; 2
    2bd2:	13 82       	std	Z+3, r1	; 0x03
    2bd4:	12 82       	std	Z+2, r1	; 0x02
    2bd6:	a0 91 42 04 	lds	r26, 0x0442	; 0x800442 <__flp>
    2bda:	b0 91 43 04 	lds	r27, 0x0443	; 0x800443 <__flp+0x1>
    2bde:	10 97       	sbiw	r26, 0x00	; 0
    2be0:	81 f4       	brne	.+32     	; 0x2c02 <free+0x3e>
    2be2:	20 81       	ld	r18, Z
    2be4:	31 81       	ldd	r19, Z+1	; 0x01
    2be6:	82 0f       	add	r24, r18
    2be8:	93 1f       	adc	r25, r19
    2bea:	20 91 40 04 	lds	r18, 0x0440	; 0x800440 <__brkval>
    2bee:	30 91 41 04 	lds	r19, 0x0441	; 0x800441 <__brkval+0x1>
    2bf2:	28 17       	cp	r18, r24
    2bf4:	39 07       	cpc	r19, r25
    2bf6:	51 f5       	brne	.+84     	; 0x2c4c <free+0x88>
    2bf8:	f0 93 41 04 	sts	0x0441, r31	; 0x800441 <__brkval+0x1>
    2bfc:	e0 93 40 04 	sts	0x0440, r30	; 0x800440 <__brkval>
    2c00:	67 c0       	rjmp	.+206    	; 0x2cd0 <free+0x10c>
    2c02:	ed 01       	movw	r28, r26
    2c04:	20 e0       	ldi	r18, 0x00	; 0
    2c06:	30 e0       	ldi	r19, 0x00	; 0
    2c08:	ce 17       	cp	r28, r30
    2c0a:	df 07       	cpc	r29, r31
    2c0c:	40 f4       	brcc	.+16     	; 0x2c1e <free+0x5a>
    2c0e:	4a 81       	ldd	r20, Y+2	; 0x02
    2c10:	5b 81       	ldd	r21, Y+3	; 0x03
    2c12:	9e 01       	movw	r18, r28
    2c14:	41 15       	cp	r20, r1
    2c16:	51 05       	cpc	r21, r1
    2c18:	f1 f0       	breq	.+60     	; 0x2c56 <free+0x92>
    2c1a:	ea 01       	movw	r28, r20
    2c1c:	f5 cf       	rjmp	.-22     	; 0x2c08 <free+0x44>
    2c1e:	d3 83       	std	Z+3, r29	; 0x03
    2c20:	c2 83       	std	Z+2, r28	; 0x02
    2c22:	40 81       	ld	r20, Z
    2c24:	51 81       	ldd	r21, Z+1	; 0x01
    2c26:	84 0f       	add	r24, r20
    2c28:	95 1f       	adc	r25, r21
    2c2a:	c8 17       	cp	r28, r24
    2c2c:	d9 07       	cpc	r29, r25
    2c2e:	59 f4       	brne	.+22     	; 0x2c46 <free+0x82>
    2c30:	88 81       	ld	r24, Y
    2c32:	99 81       	ldd	r25, Y+1	; 0x01
    2c34:	84 0f       	add	r24, r20
    2c36:	95 1f       	adc	r25, r21
    2c38:	02 96       	adiw	r24, 0x02	; 2
    2c3a:	91 83       	std	Z+1, r25	; 0x01
    2c3c:	80 83       	st	Z, r24
    2c3e:	8a 81       	ldd	r24, Y+2	; 0x02
    2c40:	9b 81       	ldd	r25, Y+3	; 0x03
    2c42:	93 83       	std	Z+3, r25	; 0x03
    2c44:	82 83       	std	Z+2, r24	; 0x02
    2c46:	21 15       	cp	r18, r1
    2c48:	31 05       	cpc	r19, r1
    2c4a:	29 f4       	brne	.+10     	; 0x2c56 <free+0x92>
    2c4c:	f0 93 43 04 	sts	0x0443, r31	; 0x800443 <__flp+0x1>
    2c50:	e0 93 42 04 	sts	0x0442, r30	; 0x800442 <__flp>
    2c54:	3d c0       	rjmp	.+122    	; 0x2cd0 <free+0x10c>
    2c56:	e9 01       	movw	r28, r18
    2c58:	fb 83       	std	Y+3, r31	; 0x03
    2c5a:	ea 83       	std	Y+2, r30	; 0x02
    2c5c:	49 91       	ld	r20, Y+
    2c5e:	59 91       	ld	r21, Y+
    2c60:	c4 0f       	add	r28, r20
    2c62:	d5 1f       	adc	r29, r21
    2c64:	ec 17       	cp	r30, r28
    2c66:	fd 07       	cpc	r31, r29
    2c68:	61 f4       	brne	.+24     	; 0x2c82 <free+0xbe>
    2c6a:	80 81       	ld	r24, Z
    2c6c:	91 81       	ldd	r25, Z+1	; 0x01
    2c6e:	84 0f       	add	r24, r20
    2c70:	95 1f       	adc	r25, r21
    2c72:	02 96       	adiw	r24, 0x02	; 2
    2c74:	e9 01       	movw	r28, r18
    2c76:	99 83       	std	Y+1, r25	; 0x01
    2c78:	88 83       	st	Y, r24
    2c7a:	82 81       	ldd	r24, Z+2	; 0x02
    2c7c:	93 81       	ldd	r25, Z+3	; 0x03
    2c7e:	9b 83       	std	Y+3, r25	; 0x03
    2c80:	8a 83       	std	Y+2, r24	; 0x02
    2c82:	e0 e0       	ldi	r30, 0x00	; 0
    2c84:	f0 e0       	ldi	r31, 0x00	; 0
    2c86:	12 96       	adiw	r26, 0x02	; 2
    2c88:	8d 91       	ld	r24, X+
    2c8a:	9c 91       	ld	r25, X
    2c8c:	13 97       	sbiw	r26, 0x03	; 3
    2c8e:	00 97       	sbiw	r24, 0x00	; 0
    2c90:	19 f0       	breq	.+6      	; 0x2c98 <free+0xd4>
    2c92:	fd 01       	movw	r30, r26
    2c94:	dc 01       	movw	r26, r24
    2c96:	f7 cf       	rjmp	.-18     	; 0x2c86 <free+0xc2>
    2c98:	8d 91       	ld	r24, X+
    2c9a:	9c 91       	ld	r25, X
    2c9c:	11 97       	sbiw	r26, 0x01	; 1
    2c9e:	9d 01       	movw	r18, r26
    2ca0:	2e 5f       	subi	r18, 0xFE	; 254
    2ca2:	3f 4f       	sbci	r19, 0xFF	; 255
    2ca4:	82 0f       	add	r24, r18
    2ca6:	93 1f       	adc	r25, r19
    2ca8:	20 91 40 04 	lds	r18, 0x0440	; 0x800440 <__brkval>
    2cac:	30 91 41 04 	lds	r19, 0x0441	; 0x800441 <__brkval+0x1>
    2cb0:	28 17       	cp	r18, r24
    2cb2:	39 07       	cpc	r19, r25
    2cb4:	69 f4       	brne	.+26     	; 0x2cd0 <free+0x10c>
    2cb6:	30 97       	sbiw	r30, 0x00	; 0
    2cb8:	29 f4       	brne	.+10     	; 0x2cc4 <free+0x100>
    2cba:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <__flp+0x1>
    2cbe:	10 92 42 04 	sts	0x0442, r1	; 0x800442 <__flp>
    2cc2:	02 c0       	rjmp	.+4      	; 0x2cc8 <free+0x104>
    2cc4:	13 82       	std	Z+3, r1	; 0x03
    2cc6:	12 82       	std	Z+2, r1	; 0x02
    2cc8:	b0 93 41 04 	sts	0x0441, r27	; 0x800441 <__brkval+0x1>
    2ccc:	a0 93 40 04 	sts	0x0440, r26	; 0x800440 <__brkval>
    2cd0:	df 91       	pop	r29
    2cd2:	cf 91       	pop	r28
    2cd4:	08 95       	ret

00002cd6 <memset>:
    2cd6:	dc 01       	movw	r26, r24
    2cd8:	01 c0       	rjmp	.+2      	; 0x2cdc <memset+0x6>
    2cda:	6d 93       	st	X+, r22
    2cdc:	41 50       	subi	r20, 0x01	; 1
    2cde:	50 40       	sbci	r21, 0x00	; 0
    2ce0:	e0 f7       	brcc	.-8      	; 0x2cda <memset+0x4>
    2ce2:	08 95       	ret

00002ce4 <_exit>:
    2ce4:	f8 94       	cli

00002ce6 <__stop_program>:
    2ce6:	ff cf       	rjmp	.-2      	; 0x2ce6 <__stop_program>
