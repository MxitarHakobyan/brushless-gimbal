
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000242  00800200  00001bce  00001c62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  00800442  00800442  00001ea4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ea4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00001f40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000256b  00000000  00000000  00002118  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000134b  00000000  00000000  00004683  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011f3  00000000  00000000  000059ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000590  00000000  00000000  00006bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b32  00000000  00000000  00007154  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018a9  00000000  00000000  00007c86  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  0000952f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8a c0       	rjmp	.+276    	; 0x116 <__ctors_end>
       2:	00 00       	nop
       4:	a8 c0       	rjmp	.+336    	; 0x156 <__bad_interrupt>
       6:	00 00       	nop
       8:	a6 c0       	rjmp	.+332    	; 0x156 <__bad_interrupt>
       a:	00 00       	nop
       c:	a4 c0       	rjmp	.+328    	; 0x156 <__bad_interrupt>
       e:	00 00       	nop
      10:	a2 c0       	rjmp	.+324    	; 0x156 <__bad_interrupt>
      12:	00 00       	nop
      14:	a0 c0       	rjmp	.+320    	; 0x156 <__bad_interrupt>
      16:	00 00       	nop
      18:	9e c0       	rjmp	.+316    	; 0x156 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9c c0       	rjmp	.+312    	; 0x156 <__bad_interrupt>
      1e:	00 00       	nop
      20:	9a c0       	rjmp	.+308    	; 0x156 <__bad_interrupt>
      22:	00 00       	nop
      24:	98 c0       	rjmp	.+304    	; 0x156 <__bad_interrupt>
      26:	00 00       	nop
      28:	96 c0       	rjmp	.+300    	; 0x156 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	94 c0       	rjmp	.+296    	; 0x156 <__bad_interrupt>
      2e:	00 00       	nop
      30:	92 c0       	rjmp	.+292    	; 0x156 <__bad_interrupt>
      32:	00 00       	nop
      34:	90 c0       	rjmp	.+288    	; 0x156 <__bad_interrupt>
      36:	00 00       	nop
      38:	8e c0       	rjmp	.+284    	; 0x156 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8c c0       	rjmp	.+280    	; 0x156 <__bad_interrupt>
      3e:	00 00       	nop
      40:	8a c0       	rjmp	.+276    	; 0x156 <__bad_interrupt>
      42:	00 00       	nop
      44:	88 c0       	rjmp	.+272    	; 0x156 <__bad_interrupt>
      46:	00 00       	nop
      48:	86 c0       	rjmp	.+268    	; 0x156 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	84 c0       	rjmp	.+264    	; 0x156 <__bad_interrupt>
      4e:	00 00       	nop
      50:	82 c0       	rjmp	.+260    	; 0x156 <__bad_interrupt>
      52:	00 00       	nop
      54:	80 c0       	rjmp	.+256    	; 0x156 <__bad_interrupt>
      56:	00 00       	nop
      58:	7e c0       	rjmp	.+252    	; 0x156 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7c c0       	rjmp	.+248    	; 0x156 <__bad_interrupt>
      5e:	00 00       	nop
      60:	7a c0       	rjmp	.+244    	; 0x156 <__bad_interrupt>
      62:	00 00       	nop
      64:	78 c0       	rjmp	.+240    	; 0x156 <__bad_interrupt>
      66:	00 00       	nop
      68:	76 c0       	rjmp	.+236    	; 0x156 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	74 c0       	rjmp	.+232    	; 0x156 <__bad_interrupt>
      6e:	00 00       	nop
      70:	72 c0       	rjmp	.+228    	; 0x156 <__bad_interrupt>
      72:	00 00       	nop
      74:	70 c0       	rjmp	.+224    	; 0x156 <__bad_interrupt>
      76:	00 00       	nop
      78:	6e c0       	rjmp	.+220    	; 0x156 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6c c0       	rjmp	.+216    	; 0x156 <__bad_interrupt>
      7e:	00 00       	nop
      80:	88 c0       	rjmp	.+272    	; 0x192 <__vector_32>
      82:	00 00       	nop
      84:	68 c0       	rjmp	.+208    	; 0x156 <__bad_interrupt>
      86:	00 00       	nop
      88:	66 c0       	rjmp	.+204    	; 0x156 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	64 c0       	rjmp	.+200    	; 0x156 <__bad_interrupt>
      8e:	00 00       	nop
      90:	62 c0       	rjmp	.+196    	; 0x156 <__bad_interrupt>
      92:	00 00       	nop
      94:	60 c0       	rjmp	.+192    	; 0x156 <__bad_interrupt>
      96:	00 00       	nop
      98:	5e c0       	rjmp	.+188    	; 0x156 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5c c0       	rjmp	.+184    	; 0x156 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	5a c0       	rjmp	.+180    	; 0x156 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	58 c0       	rjmp	.+176    	; 0x156 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	56 c0       	rjmp	.+172    	; 0x156 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	54 c0       	rjmp	.+168    	; 0x156 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	52 c0       	rjmp	.+164    	; 0x156 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	50 c0       	rjmp	.+160    	; 0x156 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	4e c0       	rjmp	.+156    	; 0x156 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c c1       	rjmp	.+536    	; 0x2d6 <__vector_47>
      be:	00 00       	nop
      c0:	4a c0       	rjmp	.+148    	; 0x156 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	48 c0       	rjmp	.+144    	; 0x156 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	46 c0       	rjmp	.+140    	; 0x156 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	44 c0       	rjmp	.+136    	; 0x156 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	42 c0       	rjmp	.+132    	; 0x156 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	40 c0       	rjmp	.+128    	; 0x156 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	3e c0       	rjmp	.+124    	; 0x156 <__bad_interrupt>
      da:	00 00       	nop
      dc:	3c c0       	rjmp	.+120    	; 0x156 <__bad_interrupt>
      de:	00 00       	nop
      e0:	3a c0       	rjmp	.+116    	; 0x156 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	e4 02       	muls	r30, r20
      e6:	ed 02       	muls	r30, r29
      e8:	f6 02       	muls	r31, r22
      ea:	ff 02       	muls	r31, r31
      ec:	08 03       	fmul	r16, r16
      ee:	11 03       	mulsu	r17, r17
      f0:	1a 03       	fmul	r17, r18
      f2:	23 03       	mulsu	r18, r19
      f4:	2c 03       	fmul	r18, r20
      f6:	35 03       	mulsu	r19, r21
      f8:	05 a8       	ldd	r0, Z+53	; 0x35
      fa:	4c cd       	rjmp	.-1384   	; 0xfffffb94 <__eeprom_end+0xff7efb94>
      fc:	b2 d4       	rcall	.+2404   	; 0xa62 <mpu6050_getRawData+0x70>
      fe:	4e b9       	out	0x0e, r20	; 14
     100:	38 36       	cpi	r19, 0x68	; 104
     102:	a9 02       	muls	r26, r25
     104:	0c 50       	subi	r16, 0x0C	; 12
     106:	b9 91       	ld	r27, Y+
     108:	86 88       	ldd	r8, Z+22	; 0x16
     10a:	08 3c       	cpi	r16, 0xC8	; 200
     10c:	a6 aa       	std	Z+54, r10	; 0x36
     10e:	aa 2a       	or	r10, r26
     110:	be 00       	.word	0x00be	; ????
     112:	00 00       	nop
     114:	80 3f       	cpi	r24, 0xF0	; 240

00000116 <__ctors_end>:
     116:	11 24       	eor	r1, r1
     118:	1f be       	out	0x3f, r1	; 63
     11a:	cf ef       	ldi	r28, 0xFF	; 255
     11c:	d1 e2       	ldi	r29, 0x21	; 33
     11e:	de bf       	out	0x3e, r29	; 62
     120:	cd bf       	out	0x3d, r28	; 61
     122:	00 e0       	ldi	r16, 0x00	; 0
     124:	0c bf       	out	0x3c, r16	; 60

00000126 <__do_copy_data>:
     126:	14 e0       	ldi	r17, 0x04	; 4
     128:	a0 e0       	ldi	r26, 0x00	; 0
     12a:	b2 e0       	ldi	r27, 0x02	; 2
     12c:	ee ec       	ldi	r30, 0xCE	; 206
     12e:	fb e1       	ldi	r31, 0x1B	; 27
     130:	00 e0       	ldi	r16, 0x00	; 0
     132:	0b bf       	out	0x3b, r16	; 59
     134:	02 c0       	rjmp	.+4      	; 0x13a <__do_copy_data+0x14>
     136:	07 90       	elpm	r0, Z+
     138:	0d 92       	st	X+, r0
     13a:	a2 34       	cpi	r26, 0x42	; 66
     13c:	b1 07       	cpc	r27, r17
     13e:	d9 f7       	brne	.-10     	; 0x136 <__do_copy_data+0x10>

00000140 <__do_clear_bss>:
     140:	24 e0       	ldi	r18, 0x04	; 4
     142:	a2 e4       	ldi	r26, 0x42	; 66
     144:	b4 e0       	ldi	r27, 0x04	; 4
     146:	01 c0       	rjmp	.+2      	; 0x14a <.do_clear_bss_start>

00000148 <.do_clear_bss_loop>:
     148:	1d 92       	st	X+, r1

0000014a <.do_clear_bss_start>:
     14a:	a6 36       	cpi	r26, 0x66	; 102
     14c:	b2 07       	cpc	r27, r18
     14e:	e1 f7       	brne	.-8      	; 0x148 <.do_clear_bss_loop>
     150:	0e d1       	rcall	.+540    	; 0x36e <main>
     152:	0c 94 e5 0d 	jmp	0x1bca	; 0x1bca <_exit>

00000156 <__bad_interrupt>:
     156:	54 cf       	rjmp	.-344    	; 0x0 <__vectors>

00000158 <init_gpio>:
	*/
	//DDRB|=(1<<PB5);//LED13
	//sbi(DDRB,4);//digital 10
	//sbi(DDRB,5);//digital 11
	//sbi(DDRB,6);//digital 12
	sbi(DDRH,3);//digital 6 OC4A
     158:	e1 e0       	ldi	r30, 0x01	; 1
     15a:	f1 e0       	ldi	r31, 0x01	; 1
     15c:	80 81       	ld	r24, Z
     15e:	88 60       	ori	r24, 0x08	; 8
     160:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     162:	80 81       	ld	r24, Z
     164:	80 61       	ori	r24, 0x10	; 16
     166:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     168:	80 81       	ld	r24, Z
     16a:	80 62       	ori	r24, 0x20	; 32
     16c:	80 83       	st	Z, r24
     16e:	08 95       	ret

00000170 <uart_putchar>:
}
void writeOcr(uint16_t bla)
{	
	cli();
	OCR1A=bla;
	sei();
     170:	cf 93       	push	r28
     172:	c8 2f       	mov	r28, r24
     174:	8a 30       	cpi	r24, 0x0A	; 10
     176:	11 f4       	brne	.+4      	; 0x17c <uart_putchar+0xc>
     178:	8d e0       	ldi	r24, 0x0D	; 13
     17a:	fa df       	rcall	.-12     	; 0x170 <uart_putchar>
     17c:	e0 ec       	ldi	r30, 0xC0	; 192
     17e:	f0 e0       	ldi	r31, 0x00	; 0
     180:	80 81       	ld	r24, Z
     182:	85 ff       	sbrs	r24, 5
     184:	fd cf       	rjmp	.-6      	; 0x180 <uart_putchar+0x10>
     186:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     18a:	80 e0       	ldi	r24, 0x00	; 0
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	cf 91       	pop	r28
     190:	08 95       	ret

00000192 <__vector_32>:
     192:	1f 92       	push	r1
     194:	0f 92       	push	r0
     196:	0f b6       	in	r0, 0x3f	; 63
     198:	0f 92       	push	r0
     19a:	11 24       	eor	r1, r1
     19c:	8f 93       	push	r24
     19e:	9f 93       	push	r25
     1a0:	af 93       	push	r26
     1a2:	bf 93       	push	r27
     1a4:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <_10micros>
     1a8:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <_10micros+0x1>
     1ac:	a0 91 46 04 	lds	r26, 0x0446	; 0x800446 <_10micros+0x2>
     1b0:	b0 91 47 04 	lds	r27, 0x0447	; 0x800447 <_10micros+0x3>
     1b4:	01 96       	adiw	r24, 0x01	; 1
     1b6:	a1 1d       	adc	r26, r1
     1b8:	b1 1d       	adc	r27, r1
     1ba:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <_10micros>
     1be:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <_10micros+0x1>
     1c2:	a0 93 46 04 	sts	0x0446, r26	; 0x800446 <_10micros+0x2>
     1c6:	b0 93 47 04 	sts	0x0447, r27	; 0x800447 <_10micros+0x3>
     1ca:	bf 91       	pop	r27
     1cc:	af 91       	pop	r26
     1ce:	9f 91       	pop	r25
     1d0:	8f 91       	pop	r24
     1d2:	0f 90       	pop	r0
     1d4:	0f be       	out	0x3f, r0	; 63
     1d6:	0f 90       	pop	r0
     1d8:	1f 90       	pop	r1
     1da:	18 95       	reti

000001dc <PWM_update>:
     1dc:	e0 91 48 04 	lds	r30, 0x0448	; 0x800448 <U_step>
     1e0:	f0 91 49 04 	lds	r31, 0x0449	; 0x800449 <U_step+0x1>
     1e4:	ee 5c       	subi	r30, 0xCE	; 206
     1e6:	fd 4f       	sbci	r31, 0xFD	; 253
     1e8:	80 81       	ld	r24, Z
     1ea:	90 e0       	ldi	r25, 0x00	; 0
     1ec:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     1f0:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     1f4:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <V_step>
     1f8:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <V_step+0x1>
     1fc:	ee 5c       	subi	r30, 0xCE	; 206
     1fe:	fd 4f       	sbci	r31, 0xFD	; 253
     200:	80 81       	ld	r24, Z
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     208:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     20c:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <W_step>
     210:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <W_step+0x1>
     214:	ee 5c       	subi	r30, 0xCE	; 206
     216:	fd 4f       	sbci	r31, 0xFD	; 253
     218:	80 81       	ld	r24, Z
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     220:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     224:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <incr>
     228:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <incr+0x1>
     22c:	40 91 48 04 	lds	r20, 0x0448	; 0x800448 <U_step>
     230:	50 91 49 04 	lds	r21, 0x0449	; 0x800449 <U_step+0x1>
     234:	46 0f       	add	r20, r22
     236:	57 1f       	adc	r21, r23
     238:	50 93 49 04 	sts	0x0449, r21	; 0x800449 <U_step+0x1>
     23c:	40 93 48 04 	sts	0x0448, r20	; 0x800448 <U_step>
     240:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <V_step>
     244:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <V_step+0x1>
     248:	26 0f       	add	r18, r22
     24a:	37 1f       	adc	r19, r23
     24c:	30 93 0b 02 	sts	0x020B, r19	; 0x80020b <V_step+0x1>
     250:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <V_step>
     254:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <W_step>
     258:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <W_step+0x1>
     25c:	86 0f       	add	r24, r22
     25e:	97 1f       	adc	r25, r23
     260:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <W_step+0x1>
     264:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <W_step>
     268:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <sinTableSize>
     26c:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <sinTableSize+0x1>
     270:	64 17       	cp	r22, r20
     272:	75 07       	cpc	r23, r21
     274:	2c f4       	brge	.+10     	; 0x280 <PWM_update+0xa4>
     276:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <U_step+0x1>
     27a:	10 92 48 04 	sts	0x0448, r1	; 0x800448 <U_step>
     27e:	06 c0       	rjmp	.+12     	; 0x28c <PWM_update+0xb0>
     280:	55 23       	and	r21, r21
     282:	24 f4       	brge	.+8      	; 0x28c <PWM_update+0xb0>
     284:	70 93 49 04 	sts	0x0449, r23	; 0x800449 <U_step+0x1>
     288:	60 93 48 04 	sts	0x0448, r22	; 0x800448 <U_step>
     28c:	62 17       	cp	r22, r18
     28e:	73 07       	cpc	r23, r19
     290:	2c f4       	brge	.+10     	; 0x29c <PWM_update+0xc0>
     292:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <V_step+0x1>
     296:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <V_step>
     29a:	06 c0       	rjmp	.+12     	; 0x2a8 <PWM_update+0xcc>
     29c:	33 23       	and	r19, r19
     29e:	24 f4       	brge	.+8      	; 0x2a8 <PWM_update+0xcc>
     2a0:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <V_step+0x1>
     2a4:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <V_step>
     2a8:	68 17       	cp	r22, r24
     2aa:	79 07       	cpc	r23, r25
     2ac:	2c f4       	brge	.+10     	; 0x2b8 <PWM_update+0xdc>
     2ae:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <W_step+0x1>
     2b2:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <W_step>
     2b6:	06 c0       	rjmp	.+12     	; 0x2c4 <PWM_update+0xe8>
     2b8:	99 23       	and	r25, r25
     2ba:	24 f4       	brge	.+8      	; 0x2c4 <PWM_update+0xe8>
     2bc:	70 93 09 02 	sts	0x0209, r23	; 0x800209 <W_step+0x1>
     2c0:	60 93 08 02 	sts	0x0208, r22	; 0x800208 <W_step>
     2c4:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <__data_end>
     2c8:	90 91 43 04 	lds	r25, 0x0443	; 0x800443 <__data_end+0x1>
     2cc:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     2d0:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     2d4:	08 95       	ret

000002d6 <__vector_47>:
     2d6:	1f 92       	push	r1
     2d8:	0f 92       	push	r0
     2da:	0f b6       	in	r0, 0x3f	; 63
     2dc:	0f 92       	push	r0
     2de:	11 24       	eor	r1, r1
     2e0:	0b b6       	in	r0, 0x3b	; 59
     2e2:	0f 92       	push	r0
     2e4:	2f 93       	push	r18
     2e6:	3f 93       	push	r19
     2e8:	4f 93       	push	r20
     2ea:	5f 93       	push	r21
     2ec:	6f 93       	push	r22
     2ee:	7f 93       	push	r23
     2f0:	8f 93       	push	r24
     2f2:	9f 93       	push	r25
     2f4:	af 93       	push	r26
     2f6:	bf 93       	push	r27
     2f8:	ef 93       	push	r30
     2fa:	ff 93       	push	r31
     2fc:	6f df       	rcall	.-290    	; 0x1dc <PWM_update>
     2fe:	ff 91       	pop	r31
     300:	ef 91       	pop	r30
     302:	bf 91       	pop	r27
     304:	af 91       	pop	r26
     306:	9f 91       	pop	r25
     308:	8f 91       	pop	r24
     30a:	7f 91       	pop	r23
     30c:	6f 91       	pop	r22
     30e:	5f 91       	pop	r21
     310:	4f 91       	pop	r20
     312:	3f 91       	pop	r19
     314:	2f 91       	pop	r18
     316:	0f 90       	pop	r0
     318:	0b be       	out	0x3b, r0	; 59
     31a:	0f 90       	pop	r0
     31c:	0f be       	out	0x3f, r0	; 63
     31e:	0f 90       	pop	r0
     320:	1f 90       	pop	r1
     322:	18 95       	reti

00000324 <print16>:
//}

void print16(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     324:	0f 93       	push	r16
     326:	1f 93       	push	r17
     328:	cf 93       	push	r28
     32a:	df 93       	push	r29
     32c:	cd b7       	in	r28, 0x3d	; 61
     32e:	de b7       	in	r29, 0x3e	; 62
     330:	2a 97       	sbiw	r28, 0x0a	; 10
     332:	0f b6       	in	r0, 0x3f	; 63
     334:	f8 94       	cli
     336:	de bf       	out	0x3e, r29	; 62
     338:	0f be       	out	0x3f, r0	; 63
     33a:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     33c:	4a e0       	ldi	r20, 0x0A	; 10
     33e:	8e 01       	movw	r16, r28
     340:	0f 5f       	subi	r16, 0xFF	; 255
     342:	1f 4f       	sbci	r17, 0xFF	; 255
     344:	b8 01       	movw	r22, r16
     346:	fc 01       	movw	r30, r24
     348:	80 81       	ld	r24, Z
     34a:	91 81       	ldd	r25, Z+1	; 0x01
     34c:	8a d7       	rcall	.+3860   	; 0x1262 <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     34e:	1f 93       	push	r17
     350:	0f 93       	push	r16
     352:	f4 d7       	rcall	.+4072   	; 0x133c <printf>
	//printf("\n");
}
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	2a 96       	adiw	r28, 0x0a	; 10
     35a:	0f b6       	in	r0, 0x3f	; 63
     35c:	f8 94       	cli
     35e:	de bf       	out	0x3e, r29	; 62
     360:	0f be       	out	0x3f, r0	; 63
     362:	cd bf       	out	0x3d, r28	; 61
     364:	df 91       	pop	r29
     366:	cf 91       	pop	r28
     368:	1f 91       	pop	r17
     36a:	0f 91       	pop	r16
     36c:	08 95       	ret

0000036e <main>:
uint8_t phase = 60;//sinTableSize / 3;         // Find phase shift and initial A, B C phase values

uint16_t pwm_delay=0;
int main(void)

{	
     36e:	cf 93       	push	r28
     370:	df 93       	push	r29
     372:	cd b7       	in	r28, 0x3d	; 61
     374:	de b7       	in	r29, 0x3e	; 62
     376:	a4 97       	sbiw	r28, 0x24	; 36
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	f8 94       	cli
     37c:	de bf       	out	0x3e, r29	; 62
     37e:	0f be       	out	0x3f, r0	; 63
	
	init_gpio();
	i2c_init();
     380:	cd bf       	out	0x3d, r28	; 61
	USART_Init(MY_UBRR);
     382:	ea de       	rcall	.-556    	; 0x158 <init_gpio>
     384:	d3 d3       	rcall	.+1958   	; 0xb2c <i2c_init>
     386:	80 e1       	ldi	r24, 0x10	; 16
	uart_str = fdevopen(uart_putchar, NULL);
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	81 d4       	rcall	.+2306   	; 0xc8e <USART_Init>
     38c:	60 e0       	ldi	r22, 0x00	; 0
     38e:	70 e0       	ldi	r23, 0x00	; 0
     390:	88 eb       	ldi	r24, 0xB8	; 184
     392:	90 e0       	ldi	r25, 0x00	; 0
	setup_timer1();
	setup_timer3();
     394:	89 d7       	rcall	.+3858   	; 0x12a8 <fdevopen>
     396:	90 93 4b 04 	sts	0x044B, r25	; 0x80044b <uart_str+0x1>
	setup_timer4();//pwm
     39a:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <uart_str>
	Enable_timer3_compare_interrupt();
     39e:	b7 d3       	rcall	.+1902   	; 0xb0e <setup_timer1>
	Enable_timer1_compare_interrupt();
     3a0:	a7 d3       	rcall	.+1870   	; 0xaf0 <setup_timer3>
     3a2:	92 d3       	rcall	.+1828   	; 0xac8 <setup_timer4>
	OCR3A=159;//interrupt every 10us
     3a4:	ae d3       	rcall	.+1884   	; 0xb02 <Enable_timer3_compare_interrupt>
     3a6:	bc d3       	rcall	.+1912   	; 0xb20 <Enable_timer1_compare_interrupt>
     3a8:	8f e9       	ldi	r24, 0x9F	; 159
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
	OCR5A=4000;
     3b0:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     3b4:	80 ea       	ldi	r24, 0xA0	; 160
     3b6:	9f e0       	ldi	r25, 0x0F	; 15
     3b8:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
	float acc_total_vector=0;
	float angle_pitch_acc=0;
	float angle_roll_acc=0;
	bool set_gyro_angles;
	#ifdef CALIBERATED_DATA
		int32_t gyroX_calib=0;
     3bc:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     3c0:	1d 86       	std	Y+13, r1	; 0x0d
     3c2:	1e 86       	std	Y+14, r1	; 0x0e
		int32_t gyroY_calib=0;
     3c4:	1f 86       	std	Y+15, r1	; 0x0f
     3c6:	18 8a       	std	Y+16, r1	; 0x10
     3c8:	19 8a       	std	Y+17, r1	; 0x11
     3ca:	1a 8a       	std	Y+18, r1	; 0x12
		int32_t gyroZ_calib=0;
     3cc:	1b 8a       	std	Y+19, r1	; 0x13
     3ce:	1c 8a       	std	Y+20, r1	; 0x14
     3d0:	1d 8a       	std	Y+21, r1	; 0x15
		int32_t accelX_calib=0;
		int32_t accelY_calib=0;
		int32_t accelZ_calib=0;
		mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
     3d2:	1e 8a       	std	Y+22, r1	; 0x16
     3d4:	1f 8a       	std	Y+23, r1	; 0x17
     3d6:	18 8e       	std	Y+24, r1	; 0x18
     3d8:	ae 01       	movw	r20, r28
     3da:	4b 5e       	subi	r20, 0xEB	; 235
     3dc:	5f 4f       	sbci	r21, 0xFF	; 255
		//mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
	#endif
	mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     3de:	be 01       	movw	r22, r28
     3e0:	6f 5e       	subi	r22, 0xEF	; 239
     3e2:	7f 4f       	sbci	r23, 0xFF	; 255
	mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     3e4:	ce 01       	movw	r24, r28
     3e6:	0d 96       	adiw	r24, 0x0d	; 13
     3e8:	f1 d1       	rcall	.+994    	; 0x7cc <mpu6050_calibrate_gyro>
	mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     3ea:	67 e0       	ldi	r22, 0x07	; 7
     3ec:	89 e1       	ldi	r24, 0x19	; 25
     3ee:	a5 d2       	rcall	.+1354   	; 0x93a <mpu6050_writeByte>
     3f0:	60 e0       	ldi	r22, 0x00	; 0
	mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     3f2:	8a e1       	ldi	r24, 0x1A	; 26
     3f4:	a2 d2       	rcall	.+1348   	; 0x93a <mpu6050_writeByte>
     3f6:	68 e0       	ldi	r22, 0x08	; 8
     3f8:	8b e1       	ldi	r24, 0x1B	; 27
	mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     3fa:	9f d2       	rcall	.+1342   	; 0x93a <mpu6050_writeByte>
     3fc:	60 e1       	ldi	r22, 0x10	; 16
     3fe:	8c e1       	ldi	r24, 0x1C	; 28
     400:	9c d2       	rcall	.+1336   	; 0x93a <mpu6050_writeByte>
	
	/*-----------------end---------------*/
	sei();
     402:	61 e0       	ldi	r22, 0x01	; 1
	uint32_t timer1=_10micros;
     404:	8b e6       	ldi	r24, 0x6B	; 107
     406:	99 d2       	rcall	.+1330   	; 0x93a <mpu6050_writeByte>
     408:	78 94       	sei
     40a:	80 90 44 04 	lds	r8, 0x0444	; 0x800444 <_10micros>
     40e:	90 90 45 04 	lds	r9, 0x0445	; 0x800445 <_10micros+0x1>
     412:	a0 90 46 04 	lds	r10, 0x0446	; 0x800446 <_10micros+0x2>
	int16_t gyro_z;
	int16_t accel_x;
	int16_t accel_y;
	int16_t accel_z;
	float angle_pitch=0;
	float angle_roll=0;
     416:	b0 90 47 04 	lds	r11, 0x0447	; 0x800447 <_10micros+0x3>
	int16_t gyro_y;
	int16_t gyro_z;
	int16_t accel_x;
	int16_t accel_y;
	int16_t accel_z;
	float angle_pitch=0;
     41a:	41 2c       	mov	r4, r1
     41c:	51 2c       	mov	r5, r1
     41e:	32 01       	movw	r6, r4
     420:	49 a2       	std	Y+33, r4	; 0x21
				print16ln(&reg);*/
				
				#ifdef DRV8313
					int reg=angle_roll;
					//printf(" ");
					printf("angle_y= ");
     422:	5a a2       	std	Y+34, r5	; 0x22
     424:	6b a2       	std	Y+35, r6	; 0x23
     426:	7c a2       	std	Y+36, r7	; 0x24
     428:	0f 2e       	mov	r0, r31
     42a:	fe e0       	ldi	r31, 0x0E	; 14
     42c:	cf 2e       	mov	r12, r31
	/*-----------------end---------------*/
	sei();
	uint32_t timer1=_10micros;
    while (1) 
    {
    	mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     42e:	f2 e0       	ldi	r31, 0x02	; 2
     430:	df 2e       	mov	r13, r31
     432:	f0 2d       	mov	r31, r0
     434:	ce 01       	movw	r24, r28
     436:	05 96       	adiw	r24, 0x05	; 5
     438:	7c 01       	movw	r14, r24
     43a:	8e 01       	movw	r16, r28
     43c:	0d 5f       	subi	r16, 0xFD	; 253
     43e:	1f 4f       	sbci	r17, 0xFF	; 255
     440:	9e 01       	movw	r18, r28
     442:	2f 5f       	subi	r18, 0xFF	; 255
     444:	3f 4f       	sbci	r19, 0xFF	; 255
     446:	ae 01       	movw	r20, r28
     448:	45 5f       	subi	r20, 0xF5	; 245
     44a:	5f 4f       	sbci	r21, 0xFF	; 255
     44c:	be 01       	movw	r22, r28
    	double dt = (double)((_10micros - timer1));
     44e:	67 5f       	subi	r22, 0xF7	; 247
     450:	7f 4f       	sbci	r23, 0xFF	; 255
     452:	02 96       	adiw	r24, 0x02	; 2
     454:	ce d2       	rcall	.+1436   	; 0x9f2 <mpu6050_getRawData>
     456:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <_10micros>
     45a:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <_10micros+0x1>
     45e:	a0 91 46 04 	lds	r26, 0x0446	; 0x800446 <_10micros+0x2>
     462:	b0 91 47 04 	lds	r27, 0x0447	; 0x800447 <_10micros+0x3>
     466:	bc 01       	movw	r22, r24
     468:	cd 01       	movw	r24, r26
     46a:	68 19       	sub	r22, r8
     46c:	79 09       	sbc	r23, r9
     46e:	8a 09       	sbc	r24, r10
     470:	9b 09       	sbc	r25, r11
     472:	16 d5       	rcall	.+2604   	; 0xea0 <__floatunsisf>
     474:	6d 8f       	std	Y+29, r22	; 0x1d
    	timer1 = _10micros;
     476:	7e 8f       	std	Y+30, r23	; 0x1e
     478:	8f 8f       	std	Y+31, r24	; 0x1f
     47a:	98 a3       	std	Y+32, r25	; 0x20
     47c:	80 90 44 04 	lds	r8, 0x0444	; 0x800444 <_10micros>
     480:	90 90 45 04 	lds	r9, 0x0445	; 0x800445 <_10micros+0x1>
     484:	a0 90 46 04 	lds	r10, 0x0446	; 0x800446 <_10micros+0x2>
			#ifdef CALIBERATED_DATA
				accX;
				accY;
				accZ;
				grX;
     488:	b0 90 47 04 	lds	r11, 0x0447	; 0x800447 <_10micros+0x3>
     48c:	69 81       	ldd	r22, Y+1	; 0x01
     48e:	7a 81       	ldd	r23, Y+2	; 0x02
     490:	8d 85       	ldd	r24, Y+13	; 0x0d
     492:	9e 85       	ldd	r25, Y+14	; 0x0e
     494:	68 1b       	sub	r22, r24
				grY;
     496:	79 0b       	sbc	r23, r25
     498:	7a 83       	std	Y+2, r23	; 0x02
     49a:	69 83       	std	Y+1, r22	; 0x01
     49c:	0b 81       	ldd	r16, Y+3	; 0x03
     49e:	1c 81       	ldd	r17, Y+4	; 0x04
     4a0:	89 89       	ldd	r24, Y+17	; 0x11
     4a2:	9a 89       	ldd	r25, Y+18	; 0x12
				grZ;
     4a4:	08 1b       	sub	r16, r24
     4a6:	19 0b       	sbc	r17, r25
     4a8:	1c 83       	std	Y+4, r17	; 0x04
     4aa:	0b 83       	std	Y+3, r16	; 0x03
     4ac:	ed 80       	ldd	r14, Y+5	; 0x05
     4ae:	fe 80       	ldd	r15, Y+6	; 0x06
		#else
			#ifdef GYRO
				//Accelerometer angle calculations
				double gyroXrate = gyro_x / 65.5; // Convert to deg/s
				double gyroYrate = gyro_y / 65.5; // Convert to deg/s
				angle_pitch += gyroXrate*dt/100000; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     4b0:	8d 89       	ldd	r24, Y+21	; 0x15
     4b2:	9e 89       	ldd	r25, Y+22	; 0x16
     4b4:	e8 1a       	sub	r14, r24
     4b6:	f9 0a       	sbc	r15, r25
     4b8:	fe 82       	std	Y+6, r15	; 0x06
     4ba:	ed 82       	std	Y+5, r14	; 0x05
     4bc:	07 2e       	mov	r0, r23
     4be:	00 0c       	add	r0, r0
     4c0:	88 0b       	sbc	r24, r24
     4c2:	99 0b       	sbc	r25, r25
     4c4:	ef d4       	rcall	.+2526   	; 0xea4 <__floatsisf>
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	43 e8       	ldi	r20, 0x83	; 131
     4cc:	52 e4       	ldi	r21, 0x42	; 66
     4ce:	4f d4       	rcall	.+2206   	; 0xd6e <__divsf3>
     4d0:	2d 8d       	ldd	r18, Y+29	; 0x1d
     4d2:	3e 8d       	ldd	r19, Y+30	; 0x1e
     4d4:	4f 8d       	ldd	r20, Y+31	; 0x1f
     4d6:	58 a1       	ldd	r21, Y+32	; 0x20
     4d8:	71 d5       	rcall	.+2786   	; 0xfbc <__mulsf3>
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e5       	ldi	r19, 0x50	; 80
     4de:	43 ec       	ldi	r20, 0xC3	; 195
     4e0:	57 e4       	ldi	r21, 0x47	; 71
     4e2:	45 d4       	rcall	.+2186   	; 0xd6e <__divsf3>
     4e4:	29 a1       	ldd	r18, Y+33	; 0x21
     4e6:	3a a1       	ldd	r19, Y+34	; 0x22
				angle_roll += gyroYrate*dt/100000;  //Calculate the traveled roll angle and add this to the angle_roll variable
     4e8:	4b a1       	ldd	r20, Y+35	; 0x23
     4ea:	5c a1       	ldd	r21, Y+36	; 0x24
     4ec:	dc d3       	rcall	.+1976   	; 0xca6 <__addsf3>
     4ee:	69 a3       	std	Y+33, r22	; 0x21
     4f0:	7a a3       	std	Y+34, r23	; 0x22
     4f2:	8b a3       	std	Y+35, r24	; 0x23
     4f4:	9c a3       	std	Y+36, r25	; 0x24
     4f6:	b8 01       	movw	r22, r16
     4f8:	11 0f       	add	r17, r17
     4fa:	88 0b       	sbc	r24, r24
     4fc:	99 0b       	sbc	r25, r25
     4fe:	d2 d4       	rcall	.+2468   	; 0xea4 <__floatsisf>
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	43 e8       	ldi	r20, 0x83	; 131
     506:	52 e4       	ldi	r21, 0x42	; 66
     508:	32 d4       	rcall	.+2148   	; 0xd6e <__divsf3>
     50a:	2d 8d       	ldd	r18, Y+29	; 0x1d
     50c:	3e 8d       	ldd	r19, Y+30	; 0x1e
     50e:	4f 8d       	ldd	r20, Y+31	; 0x1f
     510:	58 a1       	ldd	r21, Y+32	; 0x20
     512:	54 d5       	rcall	.+2728   	; 0xfbc <__mulsf3>
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	30 e5       	ldi	r19, 0x50	; 80
				
				//0.000001066 = 0.0000611 * (3.142(PI) / 180degr) The Arduino sin function is in radians
				angle_pitch += angle_roll * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the roll angle to the pitch angel
     518:	43 ec       	ldi	r20, 0xC3	; 195
     51a:	57 e4       	ldi	r21, 0x47	; 71
     51c:	28 d4       	rcall	.+2128   	; 0xd6e <__divsf3>
     51e:	a3 01       	movw	r20, r6
     520:	92 01       	movw	r18, r4
     522:	c1 d3       	rcall	.+1922   	; 0xca6 <__addsf3>
     524:	2b 01       	movw	r4, r22
     526:	3c 01       	movw	r6, r24
     528:	b7 01       	movw	r22, r14
     52a:	ff 0c       	add	r15, r15
     52c:	88 0b       	sbc	r24, r24
     52e:	99 0b       	sbc	r25, r25
     530:	b9 d4       	rcall	.+2418   	; 0xea4 <__floatsisf>
     532:	2b e7       	ldi	r18, 0x7B	; 123
     534:	33 e1       	ldi	r19, 0x13	; 19
     536:	4f e8       	ldi	r20, 0x8F	; 143
     538:	55 e3       	ldi	r21, 0x35	; 53
     53a:	40 d5       	rcall	.+2688   	; 0xfbc <__mulsf3>
     53c:	a2 d5       	rcall	.+2884   	; 0x1082 <sin>
     53e:	6d 8f       	std	Y+29, r22	; 0x1d
     540:	7e 8f       	std	Y+30, r23	; 0x1e
     542:	8f 8f       	std	Y+31, r24	; 0x1f
     544:	98 a3       	std	Y+32, r25	; 0x20
     546:	9b 01       	movw	r18, r22
     548:	ac 01       	movw	r20, r24
     54a:	c3 01       	movw	r24, r6
     54c:	b2 01       	movw	r22, r4
     54e:	36 d5       	rcall	.+2668   	; 0xfbc <__mulsf3>
				angle_roll -= angle_pitch * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the pitch angle to the roll angel
     550:	29 a1       	ldd	r18, Y+33	; 0x21
     552:	3a a1       	ldd	r19, Y+34	; 0x22
     554:	4b a1       	ldd	r20, Y+35	; 0x23
     556:	5c a1       	ldd	r21, Y+36	; 0x24
     558:	a6 d3       	rcall	.+1868   	; 0xca6 <__addsf3>
     55a:	69 a3       	std	Y+33, r22	; 0x21
     55c:	7a a3       	std	Y+34, r23	; 0x22
     55e:	8b a3       	std	Y+35, r24	; 0x23
     560:	9c a3       	std	Y+36, r25	; 0x24
     562:	9b 01       	movw	r18, r22
     564:	ac 01       	movw	r20, r24
     566:	6d 8d       	ldd	r22, Y+29	; 0x1d
     568:	7e 8d       	ldd	r23, Y+30	; 0x1e
     56a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     56c:	98 a1       	ldd	r25, Y+32	; 0x20
     56e:	26 d5       	rcall	.+2636   	; 0xfbc <__mulsf3>
				printf(" ");
				printf("accel= ");
				print16ln(&reg);*/
				
				#ifdef DRV8313
					int reg=angle_roll;
     570:	9b 01       	movw	r18, r22
     572:	ac 01       	movw	r20, r24
     574:	c3 01       	movw	r24, r6
					//printf(" ");
					printf("angle_y= ");
     576:	b2 01       	movw	r22, r4
     578:	95 d3       	rcall	.+1834   	; 0xca4 <__subsf3>
     57a:	2b 01       	movw	r4, r22
     57c:	3c 01       	movw	r6, r24
					print16(&reg);
     57e:	5f d4       	rcall	.+2238   	; 0xe3e <__fixsfsi>
     580:	7c 8f       	std	Y+28, r23	; 0x1c
     582:	6b 8f       	std	Y+27, r22	; 0x1b
     584:	df 92       	push	r13
					printf(" ");
     586:	cf 92       	push	r12
     588:	d9 d6       	rcall	.+3506   	; 0x133c <printf>
     58a:	ce 01       	movw	r24, r28
     58c:	4b 96       	adiw	r24, 0x1b	; 27
					uint16_t learing_rate;
					int absoulute_y=abs(reg);
     58e:	ca de       	rcall	.-620    	; 0x324 <print16>
     590:	80 e2       	ldi	r24, 0x20	; 32
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	e6 d6       	rcall	.+3532   	; 0x1362 <putchar>
     596:	eb 8d       	ldd	r30, Y+27	; 0x1b
     598:	fc 8d       	ldd	r31, Y+28	; 0x1c
     59a:	ff 23       	and	r31, r31
					if(absoulute_y>0 && absoulute_y<10)
     59c:	1c f4       	brge	.+6      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
     59e:	f1 95       	neg	r31
     5a0:	e1 95       	neg	r30
     5a2:	f1 09       	sbc	r31, r1
     5a4:	8f 01       	movw	r16, r30
     5a6:	0f 90       	pop	r0
     5a8:	0f 90       	pop	r0
     5aa:	cf 01       	movw	r24, r30
     5ac:	01 97       	sbiw	r24, 0x01	; 1
					{
						switch (absoulute_y)
     5ae:	89 30       	cpi	r24, 0x09	; 9
     5b0:	91 05       	cpc	r25, r1
     5b2:	08 f0       	brcs	.+2      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
     5b4:	69 c0       	rjmp	.+210    	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
     5b6:	fc 01       	movw	r30, r24
     5b8:	0a 97       	sbiw	r24, 0x0a	; 10
     5ba:	08 f0       	brcs	.+2      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
     5bc:	5e c0       	rjmp	.+188    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     5be:	88 27       	eor	r24, r24
     5c0:	ee 58       	subi	r30, 0x8E	; 142
						{
							case 1:
								learing_rate=6000;
     5c2:	ff 4f       	sbci	r31, 0xFF	; 255
     5c4:	8f 4f       	sbci	r24, 0xFF	; 255
     5c6:	0f c6       	rjmp	.+3102   	; 0x11e6 <__tablejump2__>
     5c8:	0f 2e       	mov	r0, r31
     5ca:	f0 e7       	ldi	r31, 0x70	; 112
     5cc:	2f 2e       	mov	r2, r31
     5ce:	f0 2d       	mov	r31, r0
     5d0:	0f 2e       	mov	r0, r31
     5d2:	f7 e1       	ldi	r31, 0x17	; 23
								break;
							case 2:
							learing_rate=3000;
     5d4:	3f 2e       	mov	r3, r31
     5d6:	f0 2d       	mov	r31, r0
     5d8:	50 c0       	rjmp	.+160    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     5da:	0f 2e       	mov	r0, r31
     5dc:	f8 eb       	ldi	r31, 0xB8	; 184
     5de:	2f 2e       	mov	r2, r31
     5e0:	f0 2d       	mov	r31, r0
     5e2:	0f 2e       	mov	r0, r31
							break;
     5e4:	fb e0       	ldi	r31, 0x0B	; 11
							case 3:
							learing_rate=3000;
     5e6:	3f 2e       	mov	r3, r31
     5e8:	f0 2d       	mov	r31, r0
     5ea:	47 c0       	rjmp	.+142    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     5ec:	0f 2e       	mov	r0, r31
     5ee:	f8 eb       	ldi	r31, 0xB8	; 184
     5f0:	2f 2e       	mov	r2, r31
     5f2:	f0 2d       	mov	r31, r0
     5f4:	0f 2e       	mov	r0, r31
							break;
     5f6:	fb e0       	ldi	r31, 0x0B	; 11
							case 4:
							learing_rate=4000;
     5f8:	3f 2e       	mov	r3, r31
     5fa:	f0 2d       	mov	r31, r0
     5fc:	3e c0       	rjmp	.+124    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     5fe:	0f 2e       	mov	r0, r31
     600:	f0 ea       	ldi	r31, 0xA0	; 160
     602:	2f 2e       	mov	r2, r31
     604:	f0 2d       	mov	r31, r0
     606:	0f 2e       	mov	r0, r31
							break;
     608:	ff e0       	ldi	r31, 0x0F	; 15
							case 5:
							learing_rate=4000;
     60a:	3f 2e       	mov	r3, r31
     60c:	f0 2d       	mov	r31, r0
     60e:	35 c0       	rjmp	.+106    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     610:	0f 2e       	mov	r0, r31
     612:	f0 ea       	ldi	r31, 0xA0	; 160
     614:	2f 2e       	mov	r2, r31
     616:	f0 2d       	mov	r31, r0
     618:	0f 2e       	mov	r0, r31
							break;
     61a:	ff e0       	ldi	r31, 0x0F	; 15
							case 6:
							learing_rate=3000;
     61c:	3f 2e       	mov	r3, r31
     61e:	f0 2d       	mov	r31, r0
     620:	2c c0       	rjmp	.+88     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     622:	0f 2e       	mov	r0, r31
     624:	f8 eb       	ldi	r31, 0xB8	; 184
     626:	2f 2e       	mov	r2, r31
     628:	f0 2d       	mov	r31, r0
     62a:	0f 2e       	mov	r0, r31
							break;
     62c:	fb e0       	ldi	r31, 0x0B	; 11
							case 7:
							learing_rate=3000;
     62e:	3f 2e       	mov	r3, r31
     630:	f0 2d       	mov	r31, r0
     632:	23 c0       	rjmp	.+70     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     634:	0f 2e       	mov	r0, r31
     636:	f8 eb       	ldi	r31, 0xB8	; 184
     638:	2f 2e       	mov	r2, r31
     63a:	f0 2d       	mov	r31, r0
							break;
     63c:	0f 2e       	mov	r0, r31
							case 8:
							learing_rate=3000;
     63e:	fb e0       	ldi	r31, 0x0B	; 11
     640:	3f 2e       	mov	r3, r31
     642:	f0 2d       	mov	r31, r0
     644:	1a c0       	rjmp	.+52     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     646:	0f 2e       	mov	r0, r31
     648:	f8 eb       	ldi	r31, 0xB8	; 184
     64a:	2f 2e       	mov	r2, r31
     64c:	f0 2d       	mov	r31, r0
							break;
     64e:	0f 2e       	mov	r0, r31
							case 9:
							learing_rate=3000;
     650:	fb e0       	ldi	r31, 0x0B	; 11
     652:	3f 2e       	mov	r3, r31
     654:	f0 2d       	mov	r31, r0
     656:	11 c0       	rjmp	.+34     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     658:	0f 2e       	mov	r0, r31
     65a:	f8 eb       	ldi	r31, 0xB8	; 184
     65c:	2f 2e       	mov	r2, r31
     65e:	f0 2d       	mov	r31, r0
							break;
     660:	0f 2e       	mov	r0, r31
							case 10:
							learing_rate=3000;
     662:	fb e0       	ldi	r31, 0x0B	; 11
     664:	3f 2e       	mov	r3, r31
     666:	f0 2d       	mov	r31, r0
     668:	08 c0       	rjmp	.+16     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
     66a:	0f 2e       	mov	r0, r31
     66c:	f8 eb       	ldi	r31, 0xB8	; 184
     66e:	2f 2e       	mov	r2, r31
     670:	f0 2d       	mov	r31, r0
							break;
							
						}
						
						printf(" haleluya ");
     672:	0f 2e       	mov	r0, r31
     674:	fb e0       	ldi	r31, 0x0B	; 11
     676:	3f 2e       	mov	r3, r31
     678:	f0 2d       	mov	r31, r0
     67a:	88 e1       	ldi	r24, 0x18	; 24
     67c:	92 e0       	ldi	r25, 0x02	; 2
     67e:	9f 93       	push	r25
     680:	8f 93       	push	r24
					}
					if(absoulute_y>10 && absoulute_y<20)
     682:	5c d6       	rcall	.+3256   	; 0x133c <printf>
     684:	0f 90       	pop	r0
     686:	0f 90       	pop	r0
     688:	c8 01       	movw	r24, r16
					{
						learing_rate=250;
     68a:	0b 97       	sbiw	r24, 0x0b	; 11
     68c:	09 97       	sbiw	r24, 0x09	; 9
     68e:	28 f4       	brcc	.+10     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
     690:	0f 2e       	mov	r0, r31
     692:	fa ef       	ldi	r31, 0xFA	; 250
					}
					if(absoulute_y>20 && absoulute_y<30)
     694:	2f 2e       	mov	r2, r31
     696:	31 2c       	mov	r3, r1
     698:	f0 2d       	mov	r31, r0
					{
						learing_rate=150;
     69a:	c8 01       	movw	r24, r16
     69c:	45 97       	sbiw	r24, 0x15	; 21
     69e:	09 97       	sbiw	r24, 0x09	; 9
					}
					if(absoulute_y>30 && absoulute_y<50)
     6a0:	28 f4       	brcc	.+10     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
     6a2:	0f 2e       	mov	r0, r31
     6a4:	f6 e9       	ldi	r31, 0x96	; 150
     6a6:	2f 2e       	mov	r2, r31
					{
						learing_rate=50;
     6a8:	31 2c       	mov	r3, r1
     6aa:	f0 2d       	mov	r31, r0
     6ac:	c8 01       	movw	r24, r16
     6ae:	4f 97       	sbiw	r24, 0x1f	; 31
     6b0:	43 97       	sbiw	r24, 0x13	; 19
					}
					uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     6b2:	28 f4       	brcc	.+10     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
     6b4:	0f 2e       	mov	r0, r31
     6b6:	f2 e3       	ldi	r31, 0x32	; 50
     6b8:	2f 2e       	mov	r2, r31
     6ba:	31 2c       	mov	r3, r1
     6bc:	f0 2d       	mov	r31, r0
     6be:	20 9e       	mul	r2, r16
     6c0:	90 01       	movw	r18, r0
     6c2:	21 9e       	mul	r2, r17
     6c4:	30 0d       	add	r19, r0
					if (local_motor_delay>2000)
     6c6:	30 9e       	mul	r3, r16
     6c8:	30 0d       	add	r19, r0
     6ca:	11 24       	eor	r1, r1
					{
						pwm_delay=local_motor_delay;
     6cc:	8f ed       	ldi	r24, 0xDF	; 223
     6ce:	9f e7       	ldi	r25, 0x7F	; 127
     6d0:	82 1b       	sub	r24, r18
					}
					uint16_t reg_ = local_motor_delay;
     6d2:	93 0b       	sbc	r25, r19
     6d4:	81 3d       	cpi	r24, 0xD1	; 209
					printf("ocr= ");
     6d6:	27 e0       	ldi	r18, 0x07	; 7
     6d8:	92 07       	cpc	r25, r18
     6da:	20 f0       	brcs	.+8      	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
     6dc:	90 93 43 04 	sts	0x0443, r25	; 0x800443 <__data_end+0x1>
					print16(&reg_);
     6e0:	80 93 42 04 	sts	0x0442, r24	; 0x800442 <__data_end>
     6e4:	9a 8f       	std	Y+26, r25	; 0x1a
					if (reg==0)
     6e6:	89 8f       	std	Y+25, r24	; 0x19
     6e8:	83 e2       	ldi	r24, 0x23	; 35
     6ea:	92 e0       	ldi	r25, 0x02	; 2
     6ec:	9f 93       	push	r25
     6ee:	8f 93       	push	r24
     6f0:	25 d6       	rcall	.+3146   	; 0x133c <printf>
					{
						incr=0;
     6f2:	ce 01       	movw	r24, r28
     6f4:	49 96       	adiw	r24, 0x19	; 25
     6f6:	16 de       	rcall	.-980    	; 0x324 <print16>
     6f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
						printf("\n");	
     6fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6fc:	0f 90       	pop	r0
     6fe:	0f 90       	pop	r0
     700:	00 97       	sbiw	r24, 0x00	; 0
     702:	41 f4       	brne	.+16     	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
					}
					else if (reg<0)
     704:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <incr+0x1>
						{
							cli();
     708:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <incr>
							incr=1;
     70c:	8a e0       	ldi	r24, 0x0A	; 10
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	28 d6       	rcall	.+3152   	; 0x1362 <putchar>
     712:	90 ce       	rjmp	.-736    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     714:	99 23       	and	r25, r25
							printf(" yes\n");
     716:	64 f4       	brge	.+24     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
     718:	f8 94       	cli
     71a:	81 e0       	ldi	r24, 0x01	; 1
     71c:	90 e0       	ldi	r25, 0x00	; 0
							
							sei();
     71e:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <incr+0x1>
						}
						else
						{	cli();
     722:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <incr>
							incr=-1;
     726:	89 e2       	ldi	r24, 0x29	; 41
     728:	92 e0       	ldi	r25, 0x02	; 2
     72a:	20 d6       	rcall	.+3136   	; 0x136c <puts>
     72c:	78 94       	sei
     72e:	82 ce       	rjmp	.-764    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
							printf(" no\n");
     730:	f8 94       	cli
     732:	8f ef       	ldi	r24, 0xFF	; 255
     734:	9f ef       	ldi	r25, 0xFF	; 255
     736:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <incr+0x1>
			////	//print16ln(&pop);
			////}
			
			
		#endif  
	}
     73a:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <incr>
     73e:	8e e2       	ldi	r24, 0x2E	; 46
     740:	92 e0       	ldi	r25, 0x02	; 2
     742:	14 d6       	rcall	.+3112   	; 0x136c <puts>
     744:	78 94       	sei
     746:	76 ce       	rjmp	.-788    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>

00000748 <mpu6050_readByte>:
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     748:	cf 93       	push	r28
     74a:	c8 2f       	mov	r28, r24
     74c:	80 ed       	ldi	r24, 0xD0	; 208
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	f3 d1       	rcall	.+998    	; 0xb38 <i2c_start>
     752:	8c 2f       	mov	r24, r28
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	46 d2       	rcall	.+1164   	; 0xbe4 <i2c_write>
     758:	35 d2       	rcall	.+1130   	; 0xbc4 <i2c_stop>
     75a:	81 ed       	ldi	r24, 0xD1	; 209
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	ec d1       	rcall	.+984    	; 0xb38 <i2c_start>
     760:	7c d2       	rcall	.+1272   	; 0xc5a <i2c_readNak>
     762:	c8 2f       	mov	r28, r24
     764:	2f d2       	rcall	.+1118   	; 0xbc4 <i2c_stop>
     766:	8c 2f       	mov	r24, r28
     768:	cf 91       	pop	r28
     76a:	08 95       	ret

0000076c <mpu6050_read_gyroX>:
     76c:	cf 93       	push	r28
     76e:	df 93       	push	r29
     770:	83 e4       	ldi	r24, 0x43	; 67
     772:	ea df       	rcall	.-44     	; 0x748 <mpu6050_readByte>
     774:	c8 2f       	mov	r28, r24
     776:	d0 e0       	ldi	r29, 0x00	; 0
     778:	dc 2f       	mov	r29, r28
     77a:	cc 27       	eor	r28, r28
     77c:	84 e4       	ldi	r24, 0x44	; 68
     77e:	e4 df       	rcall	.-56     	; 0x748 <mpu6050_readByte>
     780:	9e 01       	movw	r18, r28
     782:	28 2b       	or	r18, r24
     784:	c9 01       	movw	r24, r18
     786:	df 91       	pop	r29
     788:	cf 91       	pop	r28
     78a:	08 95       	ret

0000078c <mpu6050_read_gyroY>:
     78c:	cf 93       	push	r28
     78e:	df 93       	push	r29
     790:	85 e4       	ldi	r24, 0x45	; 69
     792:	da df       	rcall	.-76     	; 0x748 <mpu6050_readByte>
     794:	c8 2f       	mov	r28, r24
     796:	d0 e0       	ldi	r29, 0x00	; 0
     798:	dc 2f       	mov	r29, r28
     79a:	cc 27       	eor	r28, r28
     79c:	86 e4       	ldi	r24, 0x46	; 70
     79e:	d4 df       	rcall	.-88     	; 0x748 <mpu6050_readByte>
     7a0:	9e 01       	movw	r18, r28
     7a2:	28 2b       	or	r18, r24
     7a4:	c9 01       	movw	r24, r18
     7a6:	df 91       	pop	r29
     7a8:	cf 91       	pop	r28
     7aa:	08 95       	ret

000007ac <mpu6050_read_gyroZ>:
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	87 e4       	ldi	r24, 0x47	; 71
     7b2:	ca df       	rcall	.-108    	; 0x748 <mpu6050_readByte>
     7b4:	c8 2f       	mov	r28, r24
     7b6:	d0 e0       	ldi	r29, 0x00	; 0
     7b8:	dc 2f       	mov	r29, r28
     7ba:	cc 27       	eor	r28, r28
     7bc:	88 e4       	ldi	r24, 0x48	; 72
     7be:	c4 df       	rcall	.-120    	; 0x748 <mpu6050_readByte>
     7c0:	9e 01       	movw	r18, r28
     7c2:	28 2b       	or	r18, r24
     7c4:	c9 01       	movw	r24, r18
     7c6:	df 91       	pop	r29
     7c8:	cf 91       	pop	r28
     7ca:	08 95       	ret

000007cc <mpu6050_calibrate_gyro>:
     7cc:	cf 92       	push	r12
     7ce:	df 92       	push	r13
     7d0:	ef 92       	push	r14
     7d2:	ff 92       	push	r15
     7d4:	0f 93       	push	r16
     7d6:	1f 93       	push	r17
     7d8:	cf 93       	push	r28
     7da:	df 93       	push	r29
     7dc:	6c 01       	movw	r12, r24
     7de:	7b 01       	movw	r14, r22
     7e0:	8a 01       	movw	r16, r20
     7e2:	81 e1       	ldi	r24, 0x11	; 17
     7e4:	94 e0       	ldi	r25, 0x04	; 4
     7e6:	c2 d5       	rcall	.+2948   	; 0x136c <puts>
     7e8:	c4 e1       	ldi	r28, 0x14	; 20
     7ea:	d0 e0       	ldi	r29, 0x00	; 0
     7ec:	bf df       	rcall	.-130    	; 0x76c <mpu6050_read_gyroX>
     7ee:	f6 01       	movw	r30, r12
     7f0:	40 81       	ld	r20, Z
     7f2:	51 81       	ldd	r21, Z+1	; 0x01
     7f4:	62 81       	ldd	r22, Z+2	; 0x02
     7f6:	73 81       	ldd	r23, Z+3	; 0x03
     7f8:	48 0f       	add	r20, r24
     7fa:	59 1f       	adc	r21, r25
     7fc:	61 1d       	adc	r22, r1
     7fe:	71 1d       	adc	r23, r1
     800:	40 83       	st	Z, r20
     802:	51 83       	std	Z+1, r21	; 0x01
     804:	62 83       	std	Z+2, r22	; 0x02
     806:	73 83       	std	Z+3, r23	; 0x03
     808:	c1 df       	rcall	.-126    	; 0x78c <mpu6050_read_gyroY>
     80a:	f7 01       	movw	r30, r14
     80c:	40 81       	ld	r20, Z
     80e:	51 81       	ldd	r21, Z+1	; 0x01
     810:	62 81       	ldd	r22, Z+2	; 0x02
     812:	73 81       	ldd	r23, Z+3	; 0x03
     814:	48 0f       	add	r20, r24
     816:	59 1f       	adc	r21, r25
     818:	61 1d       	adc	r22, r1
     81a:	71 1d       	adc	r23, r1
     81c:	40 83       	st	Z, r20
     81e:	51 83       	std	Z+1, r21	; 0x01
     820:	62 83       	std	Z+2, r22	; 0x02
     822:	73 83       	std	Z+3, r23	; 0x03
     824:	c3 df       	rcall	.-122    	; 0x7ac <mpu6050_read_gyroZ>
     826:	f8 01       	movw	r30, r16
     828:	40 81       	ld	r20, Z
     82a:	51 81       	ldd	r21, Z+1	; 0x01
     82c:	62 81       	ldd	r22, Z+2	; 0x02
     82e:	73 81       	ldd	r23, Z+3	; 0x03
     830:	48 0f       	add	r20, r24
     832:	59 1f       	adc	r21, r25
     834:	61 1d       	adc	r22, r1
     836:	71 1d       	adc	r23, r1
     838:	40 83       	st	Z, r20
     83a:	51 83       	std	Z+1, r21	; 0x01
     83c:	62 83       	std	Z+2, r22	; 0x02
     83e:	73 83       	std	Z+3, r23	; 0x03
     840:	21 97       	sbiw	r28, 0x01	; 1
     842:	a1 f6       	brne	.-88     	; 0x7ec <mpu6050_calibrate_gyro+0x20>
     844:	f6 01       	movw	r30, r12
     846:	60 81       	ld	r22, Z
     848:	71 81       	ldd	r23, Z+1	; 0x01
     84a:	82 81       	ldd	r24, Z+2	; 0x02
     84c:	93 81       	ldd	r25, Z+3	; 0x03
     84e:	99 23       	and	r25, r25
     850:	ac f4       	brge	.+42     	; 0x87c <mpu6050_calibrate_gyro+0xb0>
     852:	9b 01       	movw	r18, r22
     854:	77 23       	and	r23, r23
     856:	24 f4       	brge	.+8      	; 0x860 <mpu6050_calibrate_gyro+0x94>
     858:	22 27       	eor	r18, r18
     85a:	33 27       	eor	r19, r19
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	c9 01       	movw	r24, r18
     862:	64 e1       	ldi	r22, 0x14	; 20
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	90 d4       	rcall	.+2336   	; 0x1188 <__divmodhi4>
     868:	cb 01       	movw	r24, r22
     86a:	77 0f       	add	r23, r23
     86c:	aa 0b       	sbc	r26, r26
     86e:	bb 0b       	sbc	r27, r27
     870:	f6 01       	movw	r30, r12
     872:	80 83       	st	Z, r24
     874:	91 83       	std	Z+1, r25	; 0x01
     876:	a2 83       	std	Z+2, r26	; 0x02
     878:	b3 83       	std	Z+3, r27	; 0x03
     87a:	0a c0       	rjmp	.+20     	; 0x890 <mpu6050_calibrate_gyro+0xc4>
     87c:	24 e1       	ldi	r18, 0x14	; 20
     87e:	30 e0       	ldi	r19, 0x00	; 0
     880:	40 e0       	ldi	r20, 0x00	; 0
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	94 d4       	rcall	.+2344   	; 0x11ae <__divmodsi4>
     886:	f6 01       	movw	r30, r12
     888:	20 83       	st	Z, r18
     88a:	31 83       	std	Z+1, r19	; 0x01
     88c:	42 83       	std	Z+2, r20	; 0x02
     88e:	53 83       	std	Z+3, r21	; 0x03
     890:	f7 01       	movw	r30, r14
     892:	60 81       	ld	r22, Z
     894:	71 81       	ldd	r23, Z+1	; 0x01
     896:	82 81       	ldd	r24, Z+2	; 0x02
     898:	93 81       	ldd	r25, Z+3	; 0x03
     89a:	99 23       	and	r25, r25
     89c:	ac f4       	brge	.+42     	; 0x8c8 <mpu6050_calibrate_gyro+0xfc>
     89e:	9b 01       	movw	r18, r22
     8a0:	77 23       	and	r23, r23
     8a2:	24 f4       	brge	.+8      	; 0x8ac <mpu6050_calibrate_gyro+0xe0>
     8a4:	22 27       	eor	r18, r18
     8a6:	33 27       	eor	r19, r19
     8a8:	26 1b       	sub	r18, r22
     8aa:	37 0b       	sbc	r19, r23
     8ac:	c9 01       	movw	r24, r18
     8ae:	64 e1       	ldi	r22, 0x14	; 20
     8b0:	70 e0       	ldi	r23, 0x00	; 0
     8b2:	6a d4       	rcall	.+2260   	; 0x1188 <__divmodhi4>
     8b4:	cb 01       	movw	r24, r22
     8b6:	77 0f       	add	r23, r23
     8b8:	aa 0b       	sbc	r26, r26
     8ba:	bb 0b       	sbc	r27, r27
     8bc:	f7 01       	movw	r30, r14
     8be:	80 83       	st	Z, r24
     8c0:	91 83       	std	Z+1, r25	; 0x01
     8c2:	a2 83       	std	Z+2, r26	; 0x02
     8c4:	b3 83       	std	Z+3, r27	; 0x03
     8c6:	0a c0       	rjmp	.+20     	; 0x8dc <mpu6050_calibrate_gyro+0x110>
     8c8:	24 e1       	ldi	r18, 0x14	; 20
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	40 e0       	ldi	r20, 0x00	; 0
     8ce:	50 e0       	ldi	r21, 0x00	; 0
     8d0:	6e d4       	rcall	.+2268   	; 0x11ae <__divmodsi4>
     8d2:	f7 01       	movw	r30, r14
     8d4:	20 83       	st	Z, r18
     8d6:	31 83       	std	Z+1, r19	; 0x01
     8d8:	42 83       	std	Z+2, r20	; 0x02
     8da:	53 83       	std	Z+3, r21	; 0x03
     8dc:	f8 01       	movw	r30, r16
     8de:	60 81       	ld	r22, Z
     8e0:	71 81       	ldd	r23, Z+1	; 0x01
     8e2:	82 81       	ldd	r24, Z+2	; 0x02
     8e4:	93 81       	ldd	r25, Z+3	; 0x03
     8e6:	99 23       	and	r25, r25
     8e8:	ac f4       	brge	.+42     	; 0x914 <mpu6050_calibrate_gyro+0x148>
     8ea:	9b 01       	movw	r18, r22
     8ec:	77 23       	and	r23, r23
     8ee:	24 f4       	brge	.+8      	; 0x8f8 <mpu6050_calibrate_gyro+0x12c>
     8f0:	22 27       	eor	r18, r18
     8f2:	33 27       	eor	r19, r19
     8f4:	26 1b       	sub	r18, r22
     8f6:	37 0b       	sbc	r19, r23
     8f8:	c9 01       	movw	r24, r18
     8fa:	64 e1       	ldi	r22, 0x14	; 20
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	44 d4       	rcall	.+2184   	; 0x1188 <__divmodhi4>
     900:	cb 01       	movw	r24, r22
     902:	77 0f       	add	r23, r23
     904:	aa 0b       	sbc	r26, r26
     906:	bb 0b       	sbc	r27, r27
     908:	f8 01       	movw	r30, r16
     90a:	80 83       	st	Z, r24
     90c:	91 83       	std	Z+1, r25	; 0x01
     90e:	a2 83       	std	Z+2, r26	; 0x02
     910:	b3 83       	std	Z+3, r27	; 0x03
     912:	0a c0       	rjmp	.+20     	; 0x928 <mpu6050_calibrate_gyro+0x15c>
     914:	24 e1       	ldi	r18, 0x14	; 20
     916:	30 e0       	ldi	r19, 0x00	; 0
     918:	40 e0       	ldi	r20, 0x00	; 0
     91a:	50 e0       	ldi	r21, 0x00	; 0
     91c:	48 d4       	rcall	.+2192   	; 0x11ae <__divmodsi4>
     91e:	f8 01       	movw	r30, r16
     920:	20 83       	st	Z, r18
     922:	31 83       	std	Z+1, r19	; 0x01
     924:	42 83       	std	Z+2, r20	; 0x02
     926:	53 83       	std	Z+3, r21	; 0x03
     928:	df 91       	pop	r29
     92a:	cf 91       	pop	r28
     92c:	1f 91       	pop	r17
     92e:	0f 91       	pop	r16
     930:	ff 90       	pop	r15
     932:	ef 90       	pop	r14
     934:	df 90       	pop	r13
     936:	cf 90       	pop	r12
     938:	08 95       	ret

0000093a <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     93a:	cf 93       	push	r28
     93c:	df 93       	push	r29
     93e:	d8 2f       	mov	r29, r24
     940:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     942:	80 ed       	ldi	r24, 0xD0	; 208
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	f8 d0       	rcall	.+496    	; 0xb38 <i2c_start>
	i2c_write(wereToWrite);
     948:	8d 2f       	mov	r24, r29
     94a:	90 e0       	ldi	r25, 0x00	; 0
	i2c_write(byteToWrite);
     94c:	4b d1       	rcall	.+662    	; 0xbe4 <i2c_write>
     94e:	8c 2f       	mov	r24, r28
	i2c_stop();
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	48 d1       	rcall	.+656    	; 0xbe4 <i2c_write>
}
     954:	37 d1       	rcall	.+622    	; 0xbc4 <i2c_stop>
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	08 95       	ret

0000095c <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     95c:	af 92       	push	r10
     95e:	bf 92       	push	r11
     960:	cf 92       	push	r12
     962:	df 92       	push	r13
     964:	ff 92       	push	r15
     966:	0f 93       	push	r16
     968:	1f 93       	push	r17
     96a:	cf 93       	push	r28
     96c:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     96e:	66 23       	and	r22, r22
     970:	a1 f1       	breq	.+104    	; 0x9da <mpu6050_readBytes+0x7e>
     972:	c5 2f       	mov	r28, r21
     974:	d4 2f       	mov	r29, r20
     976:	f6 2e       	mov	r15, r22
     978:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     97a:	80 ed       	ldi	r24, 0xD0	; 208
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	dc d0       	rcall	.+440    	; 0xb38 <i2c_start>
		i2c_write(regAddr);
     980:	81 2f       	mov	r24, r17
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	2f d1       	rcall	.+606    	; 0xbe4 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     986:	85 e3       	ldi	r24, 0x35	; 53
     988:	8a 95       	dec	r24
     98a:	f1 f7       	brne	.-4      	; 0x988 <mpu6050_readBytes+0x2c>
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     98c:	00 00       	nop
     98e:	81 ed       	ldi	r24, 0xD1	; 209
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	d2 d0       	rcall	.+420    	; 0xb38 <i2c_start>
     994:	0d 2f       	mov	r16, r29
     996:	1c 2f       	mov	r17, r28
     998:	cc 24       	eor	r12, r12
     99a:	ca 94       	dec	r12
     99c:	cf 0c       	add	r12, r15
     99e:	d1 2c       	mov	r13, r1
     9a0:	ef ef       	ldi	r30, 0xFF	; 255
     9a2:	ce 1a       	sub	r12, r30
     9a4:	de 0a       	sbc	r13, r30
     9a6:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     9a8:	d0 e0       	ldi	r29, 0x00	; 0
     9aa:	af 2c       	mov	r10, r15
     9ac:	b1 2c       	mov	r11, r1
     9ae:	f1 e0       	ldi	r31, 0x01	; 1
     9b0:	af 1a       	sub	r10, r31
     9b2:	b1 08       	sbc	r11, r1
     9b4:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     9b6:	bd 06       	cpc	r11, r29
     9b8:	21 f4       	brne	.+8      	; 0x9c2 <mpu6050_readBytes+0x66>
     9ba:	4f d1       	rcall	.+670    	; 0xc5a <i2c_readNak>
     9bc:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     9be:	80 83       	st	Z, r24
     9c0:	03 c0       	rjmp	.+6      	; 0x9c8 <mpu6050_readBytes+0x6c>
     9c2:	31 d1       	rcall	.+610    	; 0xc26 <i2c_readAck>
     9c4:	f8 01       	movw	r30, r16
     9c6:	80 83       	st	Z, r24
     9c8:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     9ca:	0f 5f       	subi	r16, 0xFF	; 255
     9cc:	1f 4f       	sbci	r17, 0xFF	; 255
     9ce:	cc 15       	cp	r28, r12
     9d0:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     9d2:	81 f7       	brne	.-32     	; 0x9b4 <mpu6050_readBytes+0x58>
     9d4:	cf 2d       	mov	r28, r15
     9d6:	f6 d0       	rcall	.+492    	; 0xbc4 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     9d8:	01 c0       	rjmp	.+2      	; 0x9dc <mpu6050_readBytes+0x80>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     9da:	c0 e0       	ldi	r28, 0x00	; 0
     9dc:	8c 2f       	mov	r24, r28
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	1f 91       	pop	r17
     9e4:	0f 91       	pop	r16
     9e6:	ff 90       	pop	r15
     9e8:	df 90       	pop	r13
     9ea:	cf 90       	pop	r12
     9ec:	bf 90       	pop	r11
     9ee:	af 90       	pop	r10
     9f0:	08 95       	ret

000009f2 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     9f2:	6f 92       	push	r6
     9f4:	7f 92       	push	r7
     9f6:	8f 92       	push	r8
     9f8:	9f 92       	push	r9
     9fa:	af 92       	push	r10
     9fc:	bf 92       	push	r11
     9fe:	cf 92       	push	r12
     a00:	df 92       	push	r13
     a02:	ef 92       	push	r14
     a04:	ff 92       	push	r15
     a06:	0f 93       	push	r16
     a08:	1f 93       	push	r17
     a0a:	cf 93       	push	r28
     a0c:	df 93       	push	r29
     a0e:	cd b7       	in	r28, 0x3d	; 61
     a10:	de b7       	in	r29, 0x3e	; 62
     a12:	2e 97       	sbiw	r28, 0x0e	; 14
     a14:	0f b6       	in	r0, 0x3f	; 63
     a16:	f8 94       	cli
     a18:	de bf       	out	0x3e, r29	; 62
     a1a:	0f be       	out	0x3f, r0	; 63
     a1c:	cd bf       	out	0x3d, r28	; 61
     a1e:	4c 01       	movw	r8, r24
     a20:	5b 01       	movw	r10, r22
     a22:	6a 01       	movw	r12, r20
     a24:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     a26:	ae 01       	movw	r20, r28
     a28:	4f 5f       	subi	r20, 0xFF	; 255
     a2a:	5f 4f       	sbci	r21, 0xFF	; 255
     a2c:	6e e0       	ldi	r22, 0x0E	; 14
     a2e:	8b e3       	ldi	r24, 0x3B	; 59
     a30:	95 df       	rcall	.-214    	; 0x95c <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     a32:	89 81       	ldd	r24, Y+1	; 0x01
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	98 2f       	mov	r25, r24
     a38:	88 27       	eor	r24, r24
     a3a:	2a 81       	ldd	r18, Y+2	; 0x02
     a3c:	82 2b       	or	r24, r18
     a3e:	f4 01       	movw	r30, r8
     a40:	91 83       	std	Z+1, r25	; 0x01
     a42:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     a44:	8b 81       	ldd	r24, Y+3	; 0x03
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	98 2f       	mov	r25, r24
     a4a:	88 27       	eor	r24, r24
     a4c:	2c 81       	ldd	r18, Y+4	; 0x04
     a4e:	82 2b       	or	r24, r18
     a50:	f5 01       	movw	r30, r10
     a52:	91 83       	std	Z+1, r25	; 0x01
     a54:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     a56:	8d 81       	ldd	r24, Y+5	; 0x05
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	98 2f       	mov	r25, r24
     a5c:	88 27       	eor	r24, r24
     a5e:	2e 81       	ldd	r18, Y+6	; 0x06
     a60:	82 2b       	or	r24, r18
     a62:	f6 01       	movw	r30, r12
     a64:	91 83       	std	Z+1, r25	; 0x01
     a66:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     a68:	89 85       	ldd	r24, Y+9	; 0x09
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	98 2f       	mov	r25, r24
     a6e:	88 27       	eor	r24, r24
     a70:	2a 85       	ldd	r18, Y+10	; 0x0a
     a72:	82 2b       	or	r24, r18
     a74:	f3 01       	movw	r30, r6
     a76:	91 83       	std	Z+1, r25	; 0x01
     a78:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     a7a:	8b 85       	ldd	r24, Y+11	; 0x0b
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	98 2f       	mov	r25, r24
     a80:	88 27       	eor	r24, r24
     a82:	2c 85       	ldd	r18, Y+12	; 0x0c
     a84:	82 2b       	or	r24, r18
     a86:	f8 01       	movw	r30, r16
     a88:	91 83       	std	Z+1, r25	; 0x01
     a8a:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     a8c:	8d 85       	ldd	r24, Y+13	; 0x0d
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	98 2f       	mov	r25, r24
     a92:	88 27       	eor	r24, r24
     a94:	2e 85       	ldd	r18, Y+14	; 0x0e
     a96:	82 2b       	or	r24, r18
     a98:	f7 01       	movw	r30, r14
     a9a:	91 83       	std	Z+1, r25	; 0x01
     a9c:	80 83       	st	Z, r24
     a9e:	2e 96       	adiw	r28, 0x0e	; 14
     aa0:	0f b6       	in	r0, 0x3f	; 63
     aa2:	f8 94       	cli
     aa4:	de bf       	out	0x3e, r29	; 62
     aa6:	0f be       	out	0x3f, r0	; 63
     aa8:	cd bf       	out	0x3d, r28	; 61
     aaa:	df 91       	pop	r29
     aac:	cf 91       	pop	r28
     aae:	1f 91       	pop	r17
     ab0:	0f 91       	pop	r16
     ab2:	ff 90       	pop	r15
     ab4:	ef 90       	pop	r14
     ab6:	df 90       	pop	r13
     ab8:	cf 90       	pop	r12
     aba:	bf 90       	pop	r11
     abc:	af 90       	pop	r10
     abe:	9f 90       	pop	r9
     ac0:	8f 90       	pop	r8
     ac2:	7f 90       	pop	r7
     ac4:	6f 90       	pop	r6
     ac6:	08 95       	ret

00000ac8 <setup_timer4>:
	sbi (TIMSK3, TOIE3);
}*/
/*-----------Timter 1-----------*/
void setup_timer4(void)
{
    sbi (TCCR4B, CS40);//prescakaer 256
     ac8:	e1 ea       	ldi	r30, 0xA1	; 161
     aca:	f0 e0       	ldi	r31, 0x00	; 0
     acc:	80 81       	ld	r24, Z
     ace:	81 60       	ori	r24, 0x01	; 1
     ad0:	80 83       	st	Z, r24
    sbi (TCCR4A, WGM40);//8 bit phase correct PWM
     ad2:	e0 ea       	ldi	r30, 0xA0	; 160
     ad4:	f0 e0       	ldi	r31, 0x00	; 0
     ad6:	80 81       	ld	r24, Z
     ad8:	81 60       	ori	r24, 0x01	; 1
     ada:	80 83       	st	Z, r24
	
	//sbi (TCCR4A,COM4A0);
	sbi (TCCR4A,COM4A1);
     adc:	80 81       	ld	r24, Z
     ade:	80 68       	ori	r24, 0x80	; 128
     ae0:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4B0);
	sbi (TCCR4A,COM4B1);
     ae2:	80 81       	ld	r24, Z
     ae4:	80 62       	ori	r24, 0x20	; 32
     ae6:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4C0);
	sbi (TCCR4A,COM4C1);
     ae8:	80 81       	ld	r24, Z
     aea:	88 60       	ori	r24, 0x08	; 8
     aec:	80 83       	st	Z, r24
     aee:	08 95       	ret

00000af0 <setup_timer3>:
void setup_timer3(void)
{
	//64 pres, 250.000 hz 0.000004s
	//sbi (TCCR5B, CS50);//only this no prescaling
	
	sbi (TCCR3B, CS30);//only this 8
     af0:	e1 e9       	ldi	r30, 0x91	; 145
     af2:	f0 e0       	ldi	r31, 0x00	; 0
     af4:	80 81       	ld	r24, Z
     af6:	81 60       	ori	r24, 0x01	; 1
     af8:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR3B, WGM32);//OCR4A compare interrupt
     afa:	80 81       	ld	r24, Z
     afc:	88 60       	ori	r24, 0x08	; 8
     afe:	80 83       	st	Z, r24
     b00:	08 95       	ret

00000b02 <Enable_timer3_compare_interrupt>:
}
void Enable_timer3_compare_interrupt()
{
	sbi (TIMSK3, OCIE3A);
     b02:	e1 e7       	ldi	r30, 0x71	; 113
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	80 81       	ld	r24, Z
     b08:	82 60       	ori	r24, 0x02	; 2
     b0a:	80 83       	st	Z, r24
     b0c:	08 95       	ret

00000b0e <setup_timer1>:
}
void setup_timer1(void)
{
	sbi (TCCR5B, CS50);//only this 8
     b0e:	e1 e2       	ldi	r30, 0x21	; 33
     b10:	f1 e0       	ldi	r31, 0x01	; 1
     b12:	80 81       	ld	r24, Z
     b14:	81 60       	ori	r24, 0x01	; 1
     b16:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR5B, WGM52);//OCR4A compare interrupt
     b18:	80 81       	ld	r24, Z
     b1a:	88 60       	ori	r24, 0x08	; 8
     b1c:	80 83       	st	Z, r24
     b1e:	08 95       	ret

00000b20 <Enable_timer1_compare_interrupt>:
	
}
void Enable_timer1_compare_interrupt()
{
	sbi (TIMSK5, OCIE5A);
     b20:	e3 e7       	ldi	r30, 0x73	; 115
     b22:	f0 e0       	ldi	r31, 0x00	; 0
     b24:	80 81       	ld	r24, Z
     b26:	82 60       	ori	r24, 0x02	; 2
     b28:	80 83       	st	Z, r24
     b2a:	08 95       	ret

00000b2c <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     b2c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     b30:	8c e0       	ldi	r24, 0x0C	; 12
     b32:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     b36:	08 95       	ret

00000b38 <i2c_start>:
     b38:	94 ea       	ldi	r25, 0xA4	; 164
     b3a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     b3e:	4f ef       	ldi	r20, 0xFF	; 255
     b40:	50 e0       	ldi	r21, 0x00	; 0
     b42:	60 e0       	ldi	r22, 0x00	; 0
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	ec eb       	ldi	r30, 0xBC	; 188
     b48:	f0 e0       	ldi	r31, 0x00	; 0
     b4a:	90 81       	ld	r25, Z
     b4c:	99 23       	and	r25, r25
     b4e:	34 f0       	brlt	.+12     	; 0xb5c <i2c_start+0x24>
     b50:	41 50       	subi	r20, 0x01	; 1
     b52:	51 09       	sbc	r21, r1
     b54:	61 09       	sbc	r22, r1
     b56:	71 09       	sbc	r23, r1
     b58:	c0 f7       	brcc	.-16     	; 0xb4a <i2c_start+0x12>
     b5a:	04 c0       	rjmp	.+8      	; 0xb64 <i2c_start+0x2c>
     b5c:	45 2b       	or	r20, r21
     b5e:	46 2b       	or	r20, r22
     b60:	47 2b       	or	r20, r23
     b62:	41 f1       	breq	.+80     	; 0xbb4 <i2c_start+0x7c>
     b64:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     b68:	98 7f       	andi	r25, 0xF8	; 248
     b6a:	98 30       	cpi	r25, 0x08	; 8
     b6c:	11 f0       	breq	.+4      	; 0xb72 <i2c_start+0x3a>
     b6e:	90 31       	cpi	r25, 0x10	; 16
     b70:	19 f5       	brne	.+70     	; 0xbb8 <i2c_start+0x80>
     b72:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     b76:	84 e8       	ldi	r24, 0x84	; 132
     b78:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     b7c:	8f ef       	ldi	r24, 0xFF	; 255
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	a0 e0       	ldi	r26, 0x00	; 0
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	ec eb       	ldi	r30, 0xBC	; 188
     b86:	f0 e0       	ldi	r31, 0x00	; 0
     b88:	20 81       	ld	r18, Z
     b8a:	22 23       	and	r18, r18
     b8c:	2c f0       	brlt	.+10     	; 0xb98 <i2c_start+0x60>
     b8e:	01 97       	sbiw	r24, 0x01	; 1
     b90:	a1 09       	sbc	r26, r1
     b92:	b1 09       	sbc	r27, r1
     b94:	c8 f7       	brcc	.-14     	; 0xb88 <i2c_start+0x50>
     b96:	04 c0       	rjmp	.+8      	; 0xba0 <i2c_start+0x68>
     b98:	89 2b       	or	r24, r25
     b9a:	8a 2b       	or	r24, r26
     b9c:	8b 2b       	or	r24, r27
     b9e:	71 f0       	breq	.+28     	; 0xbbc <i2c_start+0x84>
     ba0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     ba4:	98 7f       	andi	r25, 0xF8	; 248
     ba6:	98 31       	cpi	r25, 0x18	; 24
     ba8:	59 f0       	breq	.+22     	; 0xbc0 <i2c_start+0x88>
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	90 34       	cpi	r25, 0x40	; 64
     bae:	49 f4       	brne	.+18     	; 0xbc2 <i2c_start+0x8a>
     bb0:	80 e0       	ldi	r24, 0x00	; 0
     bb2:	08 95       	ret
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	08 95       	ret
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	08 95       	ret
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	08 95       	ret
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	08 95       	ret

00000bc4 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     bc4:	84 e9       	ldi	r24, 0x94	; 148
     bc6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     bca:	80 e0       	ldi	r24, 0x00	; 0
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	ec eb       	ldi	r30, 0xBC	; 188
     bd0:	f0 e0       	ldi	r31, 0x00	; 0
     bd2:	20 81       	ld	r18, Z
     bd4:	24 ff       	sbrs	r18, 4
     bd6:	05 c0       	rjmp	.+10     	; 0xbe2 <i2c_stop+0x1e>
     bd8:	01 96       	adiw	r24, 0x01	; 1
     bda:	81 15       	cp	r24, r1
     bdc:	21 e0       	ldi	r18, 0x01	; 1
     bde:	92 07       	cpc	r25, r18
     be0:	c1 f7       	brne	.-16     	; 0xbd2 <i2c_stop+0xe>
     be2:	08 95       	ret

00000be4 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     be4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     be8:	84 e8       	ldi	r24, 0x84	; 132
     bea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     bee:	8f ef       	ldi	r24, 0xFF	; 255
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	a0 e0       	ldi	r26, 0x00	; 0
     bf4:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     bf6:	ec eb       	ldi	r30, 0xBC	; 188
     bf8:	f0 e0       	ldi	r31, 0x00	; 0
     bfa:	20 81       	ld	r18, Z
     bfc:	22 23       	and	r18, r18
     bfe:	2c f0       	brlt	.+10     	; 0xc0a <i2c_write+0x26>
     c00:	01 97       	sbiw	r24, 0x01	; 1
     c02:	a1 09       	sbc	r26, r1
     c04:	b1 09       	sbc	r27, r1
     c06:	c8 f7       	brcc	.-14     	; 0xbfa <i2c_write+0x16>
     c08:	04 c0       	rjmp	.+8      	; 0xc12 <i2c_write+0x2e>
	if(i2c_timer == 0)
     c0a:	89 2b       	or	r24, r25
     c0c:	8a 2b       	or	r24, r26
     c0e:	8b 2b       	or	r24, r27
     c10:	41 f0       	breq	.+16     	; 0xc22 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     c12:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     c16:	98 7f       	andi	r25, 0xF8	; 248
     c18:	81 e0       	ldi	r24, 0x01	; 1
     c1a:	98 32       	cpi	r25, 0x28	; 40
     c1c:	19 f4       	brne	.+6      	; 0xc24 <i2c_write+0x40>
     c1e:	80 e0       	ldi	r24, 0x00	; 0
     c20:	08 95       	ret
     c22:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     c24:	08 95       	ret

00000c26 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     c26:	84 ec       	ldi	r24, 0xC4	; 196
     c28:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     c2c:	8f ef       	ldi	r24, 0xFF	; 255
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	a0 e0       	ldi	r26, 0x00	; 0
     c32:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     c34:	ec eb       	ldi	r30, 0xBC	; 188
     c36:	f0 e0       	ldi	r31, 0x00	; 0
     c38:	20 81       	ld	r18, Z
     c3a:	22 23       	and	r18, r18
     c3c:	2c f0       	brlt	.+10     	; 0xc48 <i2c_readAck+0x22>
     c3e:	01 97       	sbiw	r24, 0x01	; 1
     c40:	a1 09       	sbc	r26, r1
     c42:	b1 09       	sbc	r27, r1
     c44:	c8 f7       	brcc	.-14     	; 0xc38 <i2c_readAck+0x12>
     c46:	04 c0       	rjmp	.+8      	; 0xc50 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     c48:	89 2b       	or	r24, r25
     c4a:	8a 2b       	or	r24, r26
     c4c:	8b 2b       	or	r24, r27
     c4e:	19 f0       	breq	.+6      	; 0xc56 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     c50:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     c54:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     c56:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     c58:	08 95       	ret

00000c5a <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     c5a:	84 e8       	ldi	r24, 0x84	; 132
     c5c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     c60:	8f ef       	ldi	r24, 0xFF	; 255
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	a0 e0       	ldi	r26, 0x00	; 0
     c66:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     c68:	ec eb       	ldi	r30, 0xBC	; 188
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	20 81       	ld	r18, Z
     c6e:	22 23       	and	r18, r18
     c70:	2c f0       	brlt	.+10     	; 0xc7c <i2c_readNak+0x22>
     c72:	01 97       	sbiw	r24, 0x01	; 1
     c74:	a1 09       	sbc	r26, r1
     c76:	b1 09       	sbc	r27, r1
     c78:	c8 f7       	brcc	.-14     	; 0xc6c <i2c_readNak+0x12>
     c7a:	04 c0       	rjmp	.+8      	; 0xc84 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     c7c:	89 2b       	or	r24, r25
     c7e:	8a 2b       	or	r24, r26
     c80:	8b 2b       	or	r24, r27
     c82:	19 f0       	breq	.+6      	; 0xc8a <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     c84:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     c88:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     c8a:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     c8c:	08 95       	ret

00000c8e <USART_Init>:
#include <avr/io.h>
#include <stdio.h>
void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     c8e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)ubrr;
     c92:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	UCSR0B = (1<<TXEN0);// | (1<<TXCIE0);
     c96:	88 e0       	ldi	r24, 0x08	; 8
     c98:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);//2 stop bit 8 bit
     c9c:	8e e0       	ldi	r24, 0x0E	; 14
     c9e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     ca2:	08 95       	ret

00000ca4 <__subsf3>:
     ca4:	50 58       	subi	r21, 0x80	; 128

00000ca6 <__addsf3>:
     ca6:	bb 27       	eor	r27, r27
     ca8:	aa 27       	eor	r26, r26
     caa:	0e d0       	rcall	.+28     	; 0xcc8 <__addsf3x>
     cac:	4d c1       	rjmp	.+666    	; 0xf48 <__fp_round>
     cae:	3e d1       	rcall	.+636    	; 0xf2c <__fp_pscA>
     cb0:	30 f0       	brcs	.+12     	; 0xcbe <__addsf3+0x18>
     cb2:	43 d1       	rcall	.+646    	; 0xf3a <__fp_pscB>
     cb4:	20 f0       	brcs	.+8      	; 0xcbe <__addsf3+0x18>
     cb6:	31 f4       	brne	.+12     	; 0xcc4 <__addsf3+0x1e>
     cb8:	9f 3f       	cpi	r25, 0xFF	; 255
     cba:	11 f4       	brne	.+4      	; 0xcc0 <__addsf3+0x1a>
     cbc:	1e f4       	brtc	.+6      	; 0xcc4 <__addsf3+0x1e>
     cbe:	33 c1       	rjmp	.+614    	; 0xf26 <__fp_nan>
     cc0:	0e f4       	brtc	.+2      	; 0xcc4 <__addsf3+0x1e>
     cc2:	e0 95       	com	r30
     cc4:	e7 fb       	bst	r30, 7
     cc6:	29 c1       	rjmp	.+594    	; 0xf1a <__fp_inf>

00000cc8 <__addsf3x>:
     cc8:	e9 2f       	mov	r30, r25
     cca:	4f d1       	rcall	.+670    	; 0xf6a <__fp_split3>
     ccc:	80 f3       	brcs	.-32     	; 0xcae <__addsf3+0x8>
     cce:	ba 17       	cp	r27, r26
     cd0:	62 07       	cpc	r22, r18
     cd2:	73 07       	cpc	r23, r19
     cd4:	84 07       	cpc	r24, r20
     cd6:	95 07       	cpc	r25, r21
     cd8:	18 f0       	brcs	.+6      	; 0xce0 <__addsf3x+0x18>
     cda:	71 f4       	brne	.+28     	; 0xcf8 <__addsf3x+0x30>
     cdc:	9e f5       	brtc	.+102    	; 0xd44 <__addsf3x+0x7c>
     cde:	67 c1       	rjmp	.+718    	; 0xfae <__fp_zero>
     ce0:	0e f4       	brtc	.+2      	; 0xce4 <__addsf3x+0x1c>
     ce2:	e0 95       	com	r30
     ce4:	0b 2e       	mov	r0, r27
     ce6:	ba 2f       	mov	r27, r26
     ce8:	a0 2d       	mov	r26, r0
     cea:	0b 01       	movw	r0, r22
     cec:	b9 01       	movw	r22, r18
     cee:	90 01       	movw	r18, r0
     cf0:	0c 01       	movw	r0, r24
     cf2:	ca 01       	movw	r24, r20
     cf4:	a0 01       	movw	r20, r0
     cf6:	11 24       	eor	r1, r1
     cf8:	ff 27       	eor	r31, r31
     cfa:	59 1b       	sub	r21, r25
     cfc:	99 f0       	breq	.+38     	; 0xd24 <__addsf3x+0x5c>
     cfe:	59 3f       	cpi	r21, 0xF9	; 249
     d00:	50 f4       	brcc	.+20     	; 0xd16 <__addsf3x+0x4e>
     d02:	50 3e       	cpi	r21, 0xE0	; 224
     d04:	68 f1       	brcs	.+90     	; 0xd60 <__addsf3x+0x98>
     d06:	1a 16       	cp	r1, r26
     d08:	f0 40       	sbci	r31, 0x00	; 0
     d0a:	a2 2f       	mov	r26, r18
     d0c:	23 2f       	mov	r18, r19
     d0e:	34 2f       	mov	r19, r20
     d10:	44 27       	eor	r20, r20
     d12:	58 5f       	subi	r21, 0xF8	; 248
     d14:	f3 cf       	rjmp	.-26     	; 0xcfc <__addsf3x+0x34>
     d16:	46 95       	lsr	r20
     d18:	37 95       	ror	r19
     d1a:	27 95       	ror	r18
     d1c:	a7 95       	ror	r26
     d1e:	f0 40       	sbci	r31, 0x00	; 0
     d20:	53 95       	inc	r21
     d22:	c9 f7       	brne	.-14     	; 0xd16 <__addsf3x+0x4e>
     d24:	7e f4       	brtc	.+30     	; 0xd44 <__addsf3x+0x7c>
     d26:	1f 16       	cp	r1, r31
     d28:	ba 0b       	sbc	r27, r26
     d2a:	62 0b       	sbc	r22, r18
     d2c:	73 0b       	sbc	r23, r19
     d2e:	84 0b       	sbc	r24, r20
     d30:	ba f0       	brmi	.+46     	; 0xd60 <__addsf3x+0x98>
     d32:	91 50       	subi	r25, 0x01	; 1
     d34:	a1 f0       	breq	.+40     	; 0xd5e <__addsf3x+0x96>
     d36:	ff 0f       	add	r31, r31
     d38:	bb 1f       	adc	r27, r27
     d3a:	66 1f       	adc	r22, r22
     d3c:	77 1f       	adc	r23, r23
     d3e:	88 1f       	adc	r24, r24
     d40:	c2 f7       	brpl	.-16     	; 0xd32 <__addsf3x+0x6a>
     d42:	0e c0       	rjmp	.+28     	; 0xd60 <__addsf3x+0x98>
     d44:	ba 0f       	add	r27, r26
     d46:	62 1f       	adc	r22, r18
     d48:	73 1f       	adc	r23, r19
     d4a:	84 1f       	adc	r24, r20
     d4c:	48 f4       	brcc	.+18     	; 0xd60 <__addsf3x+0x98>
     d4e:	87 95       	ror	r24
     d50:	77 95       	ror	r23
     d52:	67 95       	ror	r22
     d54:	b7 95       	ror	r27
     d56:	f7 95       	ror	r31
     d58:	9e 3f       	cpi	r25, 0xFE	; 254
     d5a:	08 f0       	brcs	.+2      	; 0xd5e <__addsf3x+0x96>
     d5c:	b3 cf       	rjmp	.-154    	; 0xcc4 <__addsf3+0x1e>
     d5e:	93 95       	inc	r25
     d60:	88 0f       	add	r24, r24
     d62:	08 f0       	brcs	.+2      	; 0xd66 <__addsf3x+0x9e>
     d64:	99 27       	eor	r25, r25
     d66:	ee 0f       	add	r30, r30
     d68:	97 95       	ror	r25
     d6a:	87 95       	ror	r24
     d6c:	08 95       	ret

00000d6e <__divsf3>:
     d6e:	0c d0       	rcall	.+24     	; 0xd88 <__divsf3x>
     d70:	eb c0       	rjmp	.+470    	; 0xf48 <__fp_round>
     d72:	e3 d0       	rcall	.+454    	; 0xf3a <__fp_pscB>
     d74:	40 f0       	brcs	.+16     	; 0xd86 <__divsf3+0x18>
     d76:	da d0       	rcall	.+436    	; 0xf2c <__fp_pscA>
     d78:	30 f0       	brcs	.+12     	; 0xd86 <__divsf3+0x18>
     d7a:	21 f4       	brne	.+8      	; 0xd84 <__divsf3+0x16>
     d7c:	5f 3f       	cpi	r21, 0xFF	; 255
     d7e:	19 f0       	breq	.+6      	; 0xd86 <__divsf3+0x18>
     d80:	cc c0       	rjmp	.+408    	; 0xf1a <__fp_inf>
     d82:	51 11       	cpse	r21, r1
     d84:	15 c1       	rjmp	.+554    	; 0xfb0 <__fp_szero>
     d86:	cf c0       	rjmp	.+414    	; 0xf26 <__fp_nan>

00000d88 <__divsf3x>:
     d88:	f0 d0       	rcall	.+480    	; 0xf6a <__fp_split3>
     d8a:	98 f3       	brcs	.-26     	; 0xd72 <__divsf3+0x4>

00000d8c <__divsf3_pse>:
     d8c:	99 23       	and	r25, r25
     d8e:	c9 f3       	breq	.-14     	; 0xd82 <__divsf3+0x14>
     d90:	55 23       	and	r21, r21
     d92:	b1 f3       	breq	.-20     	; 0xd80 <__divsf3+0x12>
     d94:	95 1b       	sub	r25, r21
     d96:	55 0b       	sbc	r21, r21
     d98:	bb 27       	eor	r27, r27
     d9a:	aa 27       	eor	r26, r26
     d9c:	62 17       	cp	r22, r18
     d9e:	73 07       	cpc	r23, r19
     da0:	84 07       	cpc	r24, r20
     da2:	38 f0       	brcs	.+14     	; 0xdb2 <__divsf3_pse+0x26>
     da4:	9f 5f       	subi	r25, 0xFF	; 255
     da6:	5f 4f       	sbci	r21, 0xFF	; 255
     da8:	22 0f       	add	r18, r18
     daa:	33 1f       	adc	r19, r19
     dac:	44 1f       	adc	r20, r20
     dae:	aa 1f       	adc	r26, r26
     db0:	a9 f3       	breq	.-22     	; 0xd9c <__divsf3_pse+0x10>
     db2:	33 d0       	rcall	.+102    	; 0xe1a <__divsf3_pse+0x8e>
     db4:	0e 2e       	mov	r0, r30
     db6:	3a f0       	brmi	.+14     	; 0xdc6 <__divsf3_pse+0x3a>
     db8:	e0 e8       	ldi	r30, 0x80	; 128
     dba:	30 d0       	rcall	.+96     	; 0xe1c <__divsf3_pse+0x90>
     dbc:	91 50       	subi	r25, 0x01	; 1
     dbe:	50 40       	sbci	r21, 0x00	; 0
     dc0:	e6 95       	lsr	r30
     dc2:	00 1c       	adc	r0, r0
     dc4:	ca f7       	brpl	.-14     	; 0xdb8 <__divsf3_pse+0x2c>
     dc6:	29 d0       	rcall	.+82     	; 0xe1a <__divsf3_pse+0x8e>
     dc8:	fe 2f       	mov	r31, r30
     dca:	27 d0       	rcall	.+78     	; 0xe1a <__divsf3_pse+0x8e>
     dcc:	66 0f       	add	r22, r22
     dce:	77 1f       	adc	r23, r23
     dd0:	88 1f       	adc	r24, r24
     dd2:	bb 1f       	adc	r27, r27
     dd4:	26 17       	cp	r18, r22
     dd6:	37 07       	cpc	r19, r23
     dd8:	48 07       	cpc	r20, r24
     dda:	ab 07       	cpc	r26, r27
     ddc:	b0 e8       	ldi	r27, 0x80	; 128
     dde:	09 f0       	breq	.+2      	; 0xde2 <__divsf3_pse+0x56>
     de0:	bb 0b       	sbc	r27, r27
     de2:	80 2d       	mov	r24, r0
     de4:	bf 01       	movw	r22, r30
     de6:	ff 27       	eor	r31, r31
     de8:	93 58       	subi	r25, 0x83	; 131
     dea:	5f 4f       	sbci	r21, 0xFF	; 255
     dec:	2a f0       	brmi	.+10     	; 0xdf8 <__divsf3_pse+0x6c>
     dee:	9e 3f       	cpi	r25, 0xFE	; 254
     df0:	51 05       	cpc	r21, r1
     df2:	68 f0       	brcs	.+26     	; 0xe0e <__divsf3_pse+0x82>
     df4:	92 c0       	rjmp	.+292    	; 0xf1a <__fp_inf>
     df6:	dc c0       	rjmp	.+440    	; 0xfb0 <__fp_szero>
     df8:	5f 3f       	cpi	r21, 0xFF	; 255
     dfa:	ec f3       	brlt	.-6      	; 0xdf6 <__divsf3_pse+0x6a>
     dfc:	98 3e       	cpi	r25, 0xE8	; 232
     dfe:	dc f3       	brlt	.-10     	; 0xdf6 <__divsf3_pse+0x6a>
     e00:	86 95       	lsr	r24
     e02:	77 95       	ror	r23
     e04:	67 95       	ror	r22
     e06:	b7 95       	ror	r27
     e08:	f7 95       	ror	r31
     e0a:	9f 5f       	subi	r25, 0xFF	; 255
     e0c:	c9 f7       	brne	.-14     	; 0xe00 <__divsf3_pse+0x74>
     e0e:	88 0f       	add	r24, r24
     e10:	91 1d       	adc	r25, r1
     e12:	96 95       	lsr	r25
     e14:	87 95       	ror	r24
     e16:	97 f9       	bld	r25, 7
     e18:	08 95       	ret
     e1a:	e1 e0       	ldi	r30, 0x01	; 1
     e1c:	66 0f       	add	r22, r22
     e1e:	77 1f       	adc	r23, r23
     e20:	88 1f       	adc	r24, r24
     e22:	bb 1f       	adc	r27, r27
     e24:	62 17       	cp	r22, r18
     e26:	73 07       	cpc	r23, r19
     e28:	84 07       	cpc	r24, r20
     e2a:	ba 07       	cpc	r27, r26
     e2c:	20 f0       	brcs	.+8      	; 0xe36 <__divsf3_pse+0xaa>
     e2e:	62 1b       	sub	r22, r18
     e30:	73 0b       	sbc	r23, r19
     e32:	84 0b       	sbc	r24, r20
     e34:	ba 0b       	sbc	r27, r26
     e36:	ee 1f       	adc	r30, r30
     e38:	88 f7       	brcc	.-30     	; 0xe1c <__divsf3_pse+0x90>
     e3a:	e0 95       	com	r30
     e3c:	08 95       	ret

00000e3e <__fixsfsi>:
     e3e:	04 d0       	rcall	.+8      	; 0xe48 <__fixunssfsi>
     e40:	68 94       	set
     e42:	b1 11       	cpse	r27, r1
     e44:	b5 c0       	rjmp	.+362    	; 0xfb0 <__fp_szero>
     e46:	08 95       	ret

00000e48 <__fixunssfsi>:
     e48:	98 d0       	rcall	.+304    	; 0xf7a <__fp_splitA>
     e4a:	88 f0       	brcs	.+34     	; 0xe6e <__fixunssfsi+0x26>
     e4c:	9f 57       	subi	r25, 0x7F	; 127
     e4e:	90 f0       	brcs	.+36     	; 0xe74 <__fixunssfsi+0x2c>
     e50:	b9 2f       	mov	r27, r25
     e52:	99 27       	eor	r25, r25
     e54:	b7 51       	subi	r27, 0x17	; 23
     e56:	a0 f0       	brcs	.+40     	; 0xe80 <__fixunssfsi+0x38>
     e58:	d1 f0       	breq	.+52     	; 0xe8e <__fixunssfsi+0x46>
     e5a:	66 0f       	add	r22, r22
     e5c:	77 1f       	adc	r23, r23
     e5e:	88 1f       	adc	r24, r24
     e60:	99 1f       	adc	r25, r25
     e62:	1a f0       	brmi	.+6      	; 0xe6a <__fixunssfsi+0x22>
     e64:	ba 95       	dec	r27
     e66:	c9 f7       	brne	.-14     	; 0xe5a <__fixunssfsi+0x12>
     e68:	12 c0       	rjmp	.+36     	; 0xe8e <__fixunssfsi+0x46>
     e6a:	b1 30       	cpi	r27, 0x01	; 1
     e6c:	81 f0       	breq	.+32     	; 0xe8e <__fixunssfsi+0x46>
     e6e:	9f d0       	rcall	.+318    	; 0xfae <__fp_zero>
     e70:	b1 e0       	ldi	r27, 0x01	; 1
     e72:	08 95       	ret
     e74:	9c c0       	rjmp	.+312    	; 0xfae <__fp_zero>
     e76:	67 2f       	mov	r22, r23
     e78:	78 2f       	mov	r23, r24
     e7a:	88 27       	eor	r24, r24
     e7c:	b8 5f       	subi	r27, 0xF8	; 248
     e7e:	39 f0       	breq	.+14     	; 0xe8e <__fixunssfsi+0x46>
     e80:	b9 3f       	cpi	r27, 0xF9	; 249
     e82:	cc f3       	brlt	.-14     	; 0xe76 <__fixunssfsi+0x2e>
     e84:	86 95       	lsr	r24
     e86:	77 95       	ror	r23
     e88:	67 95       	ror	r22
     e8a:	b3 95       	inc	r27
     e8c:	d9 f7       	brne	.-10     	; 0xe84 <__fixunssfsi+0x3c>
     e8e:	3e f4       	brtc	.+14     	; 0xe9e <__fixunssfsi+0x56>
     e90:	90 95       	com	r25
     e92:	80 95       	com	r24
     e94:	70 95       	com	r23
     e96:	61 95       	neg	r22
     e98:	7f 4f       	sbci	r23, 0xFF	; 255
     e9a:	8f 4f       	sbci	r24, 0xFF	; 255
     e9c:	9f 4f       	sbci	r25, 0xFF	; 255
     e9e:	08 95       	ret

00000ea0 <__floatunsisf>:
     ea0:	e8 94       	clt
     ea2:	09 c0       	rjmp	.+18     	; 0xeb6 <__floatsisf+0x12>

00000ea4 <__floatsisf>:
     ea4:	97 fb       	bst	r25, 7
     ea6:	3e f4       	brtc	.+14     	; 0xeb6 <__floatsisf+0x12>
     ea8:	90 95       	com	r25
     eaa:	80 95       	com	r24
     eac:	70 95       	com	r23
     eae:	61 95       	neg	r22
     eb0:	7f 4f       	sbci	r23, 0xFF	; 255
     eb2:	8f 4f       	sbci	r24, 0xFF	; 255
     eb4:	9f 4f       	sbci	r25, 0xFF	; 255
     eb6:	99 23       	and	r25, r25
     eb8:	a9 f0       	breq	.+42     	; 0xee4 <__floatsisf+0x40>
     eba:	f9 2f       	mov	r31, r25
     ebc:	96 e9       	ldi	r25, 0x96	; 150
     ebe:	bb 27       	eor	r27, r27
     ec0:	93 95       	inc	r25
     ec2:	f6 95       	lsr	r31
     ec4:	87 95       	ror	r24
     ec6:	77 95       	ror	r23
     ec8:	67 95       	ror	r22
     eca:	b7 95       	ror	r27
     ecc:	f1 11       	cpse	r31, r1
     ece:	f8 cf       	rjmp	.-16     	; 0xec0 <__floatsisf+0x1c>
     ed0:	fa f4       	brpl	.+62     	; 0xf10 <__floatsisf+0x6c>
     ed2:	bb 0f       	add	r27, r27
     ed4:	11 f4       	brne	.+4      	; 0xeda <__floatsisf+0x36>
     ed6:	60 ff       	sbrs	r22, 0
     ed8:	1b c0       	rjmp	.+54     	; 0xf10 <__floatsisf+0x6c>
     eda:	6f 5f       	subi	r22, 0xFF	; 255
     edc:	7f 4f       	sbci	r23, 0xFF	; 255
     ede:	8f 4f       	sbci	r24, 0xFF	; 255
     ee0:	9f 4f       	sbci	r25, 0xFF	; 255
     ee2:	16 c0       	rjmp	.+44     	; 0xf10 <__floatsisf+0x6c>
     ee4:	88 23       	and	r24, r24
     ee6:	11 f0       	breq	.+4      	; 0xeec <__floatsisf+0x48>
     ee8:	96 e9       	ldi	r25, 0x96	; 150
     eea:	11 c0       	rjmp	.+34     	; 0xf0e <__floatsisf+0x6a>
     eec:	77 23       	and	r23, r23
     eee:	21 f0       	breq	.+8      	; 0xef8 <__floatsisf+0x54>
     ef0:	9e e8       	ldi	r25, 0x8E	; 142
     ef2:	87 2f       	mov	r24, r23
     ef4:	76 2f       	mov	r23, r22
     ef6:	05 c0       	rjmp	.+10     	; 0xf02 <__floatsisf+0x5e>
     ef8:	66 23       	and	r22, r22
     efa:	71 f0       	breq	.+28     	; 0xf18 <__floatsisf+0x74>
     efc:	96 e8       	ldi	r25, 0x86	; 134
     efe:	86 2f       	mov	r24, r22
     f00:	70 e0       	ldi	r23, 0x00	; 0
     f02:	60 e0       	ldi	r22, 0x00	; 0
     f04:	2a f0       	brmi	.+10     	; 0xf10 <__floatsisf+0x6c>
     f06:	9a 95       	dec	r25
     f08:	66 0f       	add	r22, r22
     f0a:	77 1f       	adc	r23, r23
     f0c:	88 1f       	adc	r24, r24
     f0e:	da f7       	brpl	.-10     	; 0xf06 <__floatsisf+0x62>
     f10:	88 0f       	add	r24, r24
     f12:	96 95       	lsr	r25
     f14:	87 95       	ror	r24
     f16:	97 f9       	bld	r25, 7
     f18:	08 95       	ret

00000f1a <__fp_inf>:
     f1a:	97 f9       	bld	r25, 7
     f1c:	9f 67       	ori	r25, 0x7F	; 127
     f1e:	80 e8       	ldi	r24, 0x80	; 128
     f20:	70 e0       	ldi	r23, 0x00	; 0
     f22:	60 e0       	ldi	r22, 0x00	; 0
     f24:	08 95       	ret

00000f26 <__fp_nan>:
     f26:	9f ef       	ldi	r25, 0xFF	; 255
     f28:	80 ec       	ldi	r24, 0xC0	; 192
     f2a:	08 95       	ret

00000f2c <__fp_pscA>:
     f2c:	00 24       	eor	r0, r0
     f2e:	0a 94       	dec	r0
     f30:	16 16       	cp	r1, r22
     f32:	17 06       	cpc	r1, r23
     f34:	18 06       	cpc	r1, r24
     f36:	09 06       	cpc	r0, r25
     f38:	08 95       	ret

00000f3a <__fp_pscB>:
     f3a:	00 24       	eor	r0, r0
     f3c:	0a 94       	dec	r0
     f3e:	12 16       	cp	r1, r18
     f40:	13 06       	cpc	r1, r19
     f42:	14 06       	cpc	r1, r20
     f44:	05 06       	cpc	r0, r21
     f46:	08 95       	ret

00000f48 <__fp_round>:
     f48:	09 2e       	mov	r0, r25
     f4a:	03 94       	inc	r0
     f4c:	00 0c       	add	r0, r0
     f4e:	11 f4       	brne	.+4      	; 0xf54 <__fp_round+0xc>
     f50:	88 23       	and	r24, r24
     f52:	52 f0       	brmi	.+20     	; 0xf68 <__fp_round+0x20>
     f54:	bb 0f       	add	r27, r27
     f56:	40 f4       	brcc	.+16     	; 0xf68 <__fp_round+0x20>
     f58:	bf 2b       	or	r27, r31
     f5a:	11 f4       	brne	.+4      	; 0xf60 <__fp_round+0x18>
     f5c:	60 ff       	sbrs	r22, 0
     f5e:	04 c0       	rjmp	.+8      	; 0xf68 <__fp_round+0x20>
     f60:	6f 5f       	subi	r22, 0xFF	; 255
     f62:	7f 4f       	sbci	r23, 0xFF	; 255
     f64:	8f 4f       	sbci	r24, 0xFF	; 255
     f66:	9f 4f       	sbci	r25, 0xFF	; 255
     f68:	08 95       	ret

00000f6a <__fp_split3>:
     f6a:	57 fd       	sbrc	r21, 7
     f6c:	90 58       	subi	r25, 0x80	; 128
     f6e:	44 0f       	add	r20, r20
     f70:	55 1f       	adc	r21, r21
     f72:	59 f0       	breq	.+22     	; 0xf8a <__fp_splitA+0x10>
     f74:	5f 3f       	cpi	r21, 0xFF	; 255
     f76:	71 f0       	breq	.+28     	; 0xf94 <__fp_splitA+0x1a>
     f78:	47 95       	ror	r20

00000f7a <__fp_splitA>:
     f7a:	88 0f       	add	r24, r24
     f7c:	97 fb       	bst	r25, 7
     f7e:	99 1f       	adc	r25, r25
     f80:	61 f0       	breq	.+24     	; 0xf9a <__fp_splitA+0x20>
     f82:	9f 3f       	cpi	r25, 0xFF	; 255
     f84:	79 f0       	breq	.+30     	; 0xfa4 <__fp_splitA+0x2a>
     f86:	87 95       	ror	r24
     f88:	08 95       	ret
     f8a:	12 16       	cp	r1, r18
     f8c:	13 06       	cpc	r1, r19
     f8e:	14 06       	cpc	r1, r20
     f90:	55 1f       	adc	r21, r21
     f92:	f2 cf       	rjmp	.-28     	; 0xf78 <__fp_split3+0xe>
     f94:	46 95       	lsr	r20
     f96:	f1 df       	rcall	.-30     	; 0xf7a <__fp_splitA>
     f98:	08 c0       	rjmp	.+16     	; 0xfaa <__fp_splitA+0x30>
     f9a:	16 16       	cp	r1, r22
     f9c:	17 06       	cpc	r1, r23
     f9e:	18 06       	cpc	r1, r24
     fa0:	99 1f       	adc	r25, r25
     fa2:	f1 cf       	rjmp	.-30     	; 0xf86 <__fp_splitA+0xc>
     fa4:	86 95       	lsr	r24
     fa6:	71 05       	cpc	r23, r1
     fa8:	61 05       	cpc	r22, r1
     faa:	08 94       	sec
     fac:	08 95       	ret

00000fae <__fp_zero>:
     fae:	e8 94       	clt

00000fb0 <__fp_szero>:
     fb0:	bb 27       	eor	r27, r27
     fb2:	66 27       	eor	r22, r22
     fb4:	77 27       	eor	r23, r23
     fb6:	cb 01       	movw	r24, r22
     fb8:	97 f9       	bld	r25, 7
     fba:	08 95       	ret

00000fbc <__mulsf3>:
     fbc:	0b d0       	rcall	.+22     	; 0xfd4 <__mulsf3x>
     fbe:	c4 cf       	rjmp	.-120    	; 0xf48 <__fp_round>
     fc0:	b5 df       	rcall	.-150    	; 0xf2c <__fp_pscA>
     fc2:	28 f0       	brcs	.+10     	; 0xfce <__mulsf3+0x12>
     fc4:	ba df       	rcall	.-140    	; 0xf3a <__fp_pscB>
     fc6:	18 f0       	brcs	.+6      	; 0xfce <__mulsf3+0x12>
     fc8:	95 23       	and	r25, r21
     fca:	09 f0       	breq	.+2      	; 0xfce <__mulsf3+0x12>
     fcc:	a6 cf       	rjmp	.-180    	; 0xf1a <__fp_inf>
     fce:	ab cf       	rjmp	.-170    	; 0xf26 <__fp_nan>
     fd0:	11 24       	eor	r1, r1
     fd2:	ee cf       	rjmp	.-36     	; 0xfb0 <__fp_szero>

00000fd4 <__mulsf3x>:
     fd4:	ca df       	rcall	.-108    	; 0xf6a <__fp_split3>
     fd6:	a0 f3       	brcs	.-24     	; 0xfc0 <__mulsf3+0x4>

00000fd8 <__mulsf3_pse>:
     fd8:	95 9f       	mul	r25, r21
     fda:	d1 f3       	breq	.-12     	; 0xfd0 <__mulsf3+0x14>
     fdc:	95 0f       	add	r25, r21
     fde:	50 e0       	ldi	r21, 0x00	; 0
     fe0:	55 1f       	adc	r21, r21
     fe2:	62 9f       	mul	r22, r18
     fe4:	f0 01       	movw	r30, r0
     fe6:	72 9f       	mul	r23, r18
     fe8:	bb 27       	eor	r27, r27
     fea:	f0 0d       	add	r31, r0
     fec:	b1 1d       	adc	r27, r1
     fee:	63 9f       	mul	r22, r19
     ff0:	aa 27       	eor	r26, r26
     ff2:	f0 0d       	add	r31, r0
     ff4:	b1 1d       	adc	r27, r1
     ff6:	aa 1f       	adc	r26, r26
     ff8:	64 9f       	mul	r22, r20
     ffa:	66 27       	eor	r22, r22
     ffc:	b0 0d       	add	r27, r0
     ffe:	a1 1d       	adc	r26, r1
    1000:	66 1f       	adc	r22, r22
    1002:	82 9f       	mul	r24, r18
    1004:	22 27       	eor	r18, r18
    1006:	b0 0d       	add	r27, r0
    1008:	a1 1d       	adc	r26, r1
    100a:	62 1f       	adc	r22, r18
    100c:	73 9f       	mul	r23, r19
    100e:	b0 0d       	add	r27, r0
    1010:	a1 1d       	adc	r26, r1
    1012:	62 1f       	adc	r22, r18
    1014:	83 9f       	mul	r24, r19
    1016:	a0 0d       	add	r26, r0
    1018:	61 1d       	adc	r22, r1
    101a:	22 1f       	adc	r18, r18
    101c:	74 9f       	mul	r23, r20
    101e:	33 27       	eor	r19, r19
    1020:	a0 0d       	add	r26, r0
    1022:	61 1d       	adc	r22, r1
    1024:	23 1f       	adc	r18, r19
    1026:	84 9f       	mul	r24, r20
    1028:	60 0d       	add	r22, r0
    102a:	21 1d       	adc	r18, r1
    102c:	82 2f       	mov	r24, r18
    102e:	76 2f       	mov	r23, r22
    1030:	6a 2f       	mov	r22, r26
    1032:	11 24       	eor	r1, r1
    1034:	9f 57       	subi	r25, 0x7F	; 127
    1036:	50 40       	sbci	r21, 0x00	; 0
    1038:	8a f0       	brmi	.+34     	; 0x105c <__mulsf3_pse+0x84>
    103a:	e1 f0       	breq	.+56     	; 0x1074 <__mulsf3_pse+0x9c>
    103c:	88 23       	and	r24, r24
    103e:	4a f0       	brmi	.+18     	; 0x1052 <__mulsf3_pse+0x7a>
    1040:	ee 0f       	add	r30, r30
    1042:	ff 1f       	adc	r31, r31
    1044:	bb 1f       	adc	r27, r27
    1046:	66 1f       	adc	r22, r22
    1048:	77 1f       	adc	r23, r23
    104a:	88 1f       	adc	r24, r24
    104c:	91 50       	subi	r25, 0x01	; 1
    104e:	50 40       	sbci	r21, 0x00	; 0
    1050:	a9 f7       	brne	.-22     	; 0x103c <__mulsf3_pse+0x64>
    1052:	9e 3f       	cpi	r25, 0xFE	; 254
    1054:	51 05       	cpc	r21, r1
    1056:	70 f0       	brcs	.+28     	; 0x1074 <__mulsf3_pse+0x9c>
    1058:	60 cf       	rjmp	.-320    	; 0xf1a <__fp_inf>
    105a:	aa cf       	rjmp	.-172    	; 0xfb0 <__fp_szero>
    105c:	5f 3f       	cpi	r21, 0xFF	; 255
    105e:	ec f3       	brlt	.-6      	; 0x105a <__mulsf3_pse+0x82>
    1060:	98 3e       	cpi	r25, 0xE8	; 232
    1062:	dc f3       	brlt	.-10     	; 0x105a <__mulsf3_pse+0x82>
    1064:	86 95       	lsr	r24
    1066:	77 95       	ror	r23
    1068:	67 95       	ror	r22
    106a:	b7 95       	ror	r27
    106c:	f7 95       	ror	r31
    106e:	e7 95       	ror	r30
    1070:	9f 5f       	subi	r25, 0xFF	; 255
    1072:	c1 f7       	brne	.-16     	; 0x1064 <__mulsf3_pse+0x8c>
    1074:	fe 2b       	or	r31, r30
    1076:	88 0f       	add	r24, r24
    1078:	91 1d       	adc	r25, r1
    107a:	96 95       	lsr	r25
    107c:	87 95       	ror	r24
    107e:	97 f9       	bld	r25, 7
    1080:	08 95       	ret

00001082 <sin>:
    1082:	9f 93       	push	r25
    1084:	2a d0       	rcall	.+84     	; 0x10da <__fp_rempio2>
    1086:	0f 90       	pop	r0
    1088:	07 fc       	sbrc	r0, 7
    108a:	ee 5f       	subi	r30, 0xFE	; 254
    108c:	4d c0       	rjmp	.+154    	; 0x1128 <__fp_sinus>

0000108e <__fp_powser>:
    108e:	df 93       	push	r29
    1090:	cf 93       	push	r28
    1092:	1f 93       	push	r17
    1094:	0f 93       	push	r16
    1096:	ff 92       	push	r15
    1098:	ef 92       	push	r14
    109a:	df 92       	push	r13
    109c:	7b 01       	movw	r14, r22
    109e:	8c 01       	movw	r16, r24
    10a0:	68 94       	set
    10a2:	05 c0       	rjmp	.+10     	; 0x10ae <__fp_powser+0x20>
    10a4:	da 2e       	mov	r13, r26
    10a6:	ef 01       	movw	r28, r30
    10a8:	95 df       	rcall	.-214    	; 0xfd4 <__mulsf3x>
    10aa:	fe 01       	movw	r30, r28
    10ac:	e8 94       	clt
    10ae:	a5 91       	lpm	r26, Z+
    10b0:	25 91       	lpm	r18, Z+
    10b2:	35 91       	lpm	r19, Z+
    10b4:	45 91       	lpm	r20, Z+
    10b6:	55 91       	lpm	r21, Z+
    10b8:	ae f3       	brts	.-22     	; 0x10a4 <__fp_powser+0x16>
    10ba:	ef 01       	movw	r28, r30
    10bc:	05 de       	rcall	.-1014   	; 0xcc8 <__addsf3x>
    10be:	fe 01       	movw	r30, r28
    10c0:	97 01       	movw	r18, r14
    10c2:	a8 01       	movw	r20, r16
    10c4:	da 94       	dec	r13
    10c6:	79 f7       	brne	.-34     	; 0x10a6 <__fp_powser+0x18>
    10c8:	df 90       	pop	r13
    10ca:	ef 90       	pop	r14
    10cc:	ff 90       	pop	r15
    10ce:	0f 91       	pop	r16
    10d0:	1f 91       	pop	r17
    10d2:	cf 91       	pop	r28
    10d4:	df 91       	pop	r29
    10d6:	08 95       	ret
    10d8:	26 cf       	rjmp	.-436    	; 0xf26 <__fp_nan>

000010da <__fp_rempio2>:
    10da:	4f df       	rcall	.-354    	; 0xf7a <__fp_splitA>
    10dc:	e8 f3       	brcs	.-6      	; 0x10d8 <__fp_powser+0x4a>
    10de:	e8 94       	clt
    10e0:	e0 e0       	ldi	r30, 0x00	; 0
    10e2:	bb 27       	eor	r27, r27
    10e4:	9f 57       	subi	r25, 0x7F	; 127
    10e6:	f0 f0       	brcs	.+60     	; 0x1124 <__fp_rempio2+0x4a>
    10e8:	2a ed       	ldi	r18, 0xDA	; 218
    10ea:	3f e0       	ldi	r19, 0x0F	; 15
    10ec:	49 ec       	ldi	r20, 0xC9	; 201
    10ee:	06 c0       	rjmp	.+12     	; 0x10fc <__fp_rempio2+0x22>
    10f0:	ee 0f       	add	r30, r30
    10f2:	bb 0f       	add	r27, r27
    10f4:	66 1f       	adc	r22, r22
    10f6:	77 1f       	adc	r23, r23
    10f8:	88 1f       	adc	r24, r24
    10fa:	28 f0       	brcs	.+10     	; 0x1106 <__fp_rempio2+0x2c>
    10fc:	b2 3a       	cpi	r27, 0xA2	; 162
    10fe:	62 07       	cpc	r22, r18
    1100:	73 07       	cpc	r23, r19
    1102:	84 07       	cpc	r24, r20
    1104:	28 f0       	brcs	.+10     	; 0x1110 <__fp_rempio2+0x36>
    1106:	b2 5a       	subi	r27, 0xA2	; 162
    1108:	62 0b       	sbc	r22, r18
    110a:	73 0b       	sbc	r23, r19
    110c:	84 0b       	sbc	r24, r20
    110e:	e3 95       	inc	r30
    1110:	9a 95       	dec	r25
    1112:	72 f7       	brpl	.-36     	; 0x10f0 <__fp_rempio2+0x16>
    1114:	80 38       	cpi	r24, 0x80	; 128
    1116:	30 f4       	brcc	.+12     	; 0x1124 <__fp_rempio2+0x4a>
    1118:	9a 95       	dec	r25
    111a:	bb 0f       	add	r27, r27
    111c:	66 1f       	adc	r22, r22
    111e:	77 1f       	adc	r23, r23
    1120:	88 1f       	adc	r24, r24
    1122:	d2 f7       	brpl	.-12     	; 0x1118 <__fp_rempio2+0x3e>
    1124:	90 48       	sbci	r25, 0x80	; 128
    1126:	13 c0       	rjmp	.+38     	; 0x114e <__fp_mpack_finite>

00001128 <__fp_sinus>:
    1128:	ef 93       	push	r30
    112a:	e0 ff       	sbrs	r30, 0
    112c:	06 c0       	rjmp	.+12     	; 0x113a <__fp_sinus+0x12>
    112e:	a2 ea       	ldi	r26, 0xA2	; 162
    1130:	2a ed       	ldi	r18, 0xDA	; 218
    1132:	3f e0       	ldi	r19, 0x0F	; 15
    1134:	49 ec       	ldi	r20, 0xC9	; 201
    1136:	5f eb       	ldi	r21, 0xBF	; 191
    1138:	c7 dd       	rcall	.-1138   	; 0xcc8 <__addsf3x>
    113a:	06 df       	rcall	.-500    	; 0xf48 <__fp_round>
    113c:	0f 90       	pop	r0
    113e:	03 94       	inc	r0
    1140:	01 fc       	sbrc	r0, 1
    1142:	90 58       	subi	r25, 0x80	; 128
    1144:	e8 ef       	ldi	r30, 0xF8	; 248
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	0e c0       	rjmp	.+28     	; 0x1166 <__fp_powsodd>

0000114a <__fp_mpack>:
    114a:	9f 3f       	cpi	r25, 0xFF	; 255
    114c:	31 f0       	breq	.+12     	; 0x115a <__fp_mpack_finite+0xc>

0000114e <__fp_mpack_finite>:
    114e:	91 50       	subi	r25, 0x01	; 1
    1150:	20 f4       	brcc	.+8      	; 0x115a <__fp_mpack_finite+0xc>
    1152:	87 95       	ror	r24
    1154:	77 95       	ror	r23
    1156:	67 95       	ror	r22
    1158:	b7 95       	ror	r27
    115a:	88 0f       	add	r24, r24
    115c:	91 1d       	adc	r25, r1
    115e:	96 95       	lsr	r25
    1160:	87 95       	ror	r24
    1162:	97 f9       	bld	r25, 7
    1164:	08 95       	ret

00001166 <__fp_powsodd>:
    1166:	9f 93       	push	r25
    1168:	8f 93       	push	r24
    116a:	7f 93       	push	r23
    116c:	6f 93       	push	r22
    116e:	ff 93       	push	r31
    1170:	ef 93       	push	r30
    1172:	9b 01       	movw	r18, r22
    1174:	ac 01       	movw	r20, r24
    1176:	22 df       	rcall	.-444    	; 0xfbc <__mulsf3>
    1178:	ef 91       	pop	r30
    117a:	ff 91       	pop	r31
    117c:	88 df       	rcall	.-240    	; 0x108e <__fp_powser>
    117e:	2f 91       	pop	r18
    1180:	3f 91       	pop	r19
    1182:	4f 91       	pop	r20
    1184:	5f 91       	pop	r21
    1186:	1a cf       	rjmp	.-460    	; 0xfbc <__mulsf3>

00001188 <__divmodhi4>:
    1188:	97 fb       	bst	r25, 7
    118a:	07 2e       	mov	r0, r23
    118c:	16 f4       	brtc	.+4      	; 0x1192 <__divmodhi4+0xa>
    118e:	00 94       	com	r0
    1190:	06 d0       	rcall	.+12     	; 0x119e <__divmodhi4_neg1>
    1192:	77 fd       	sbrc	r23, 7
    1194:	08 d0       	rcall	.+16     	; 0x11a6 <__divmodhi4_neg2>
    1196:	2f d0       	rcall	.+94     	; 0x11f6 <__udivmodhi4>
    1198:	07 fc       	sbrc	r0, 7
    119a:	05 d0       	rcall	.+10     	; 0x11a6 <__divmodhi4_neg2>
    119c:	3e f4       	brtc	.+14     	; 0x11ac <__divmodhi4_exit>

0000119e <__divmodhi4_neg1>:
    119e:	90 95       	com	r25
    11a0:	81 95       	neg	r24
    11a2:	9f 4f       	sbci	r25, 0xFF	; 255
    11a4:	08 95       	ret

000011a6 <__divmodhi4_neg2>:
    11a6:	70 95       	com	r23
    11a8:	61 95       	neg	r22
    11aa:	7f 4f       	sbci	r23, 0xFF	; 255

000011ac <__divmodhi4_exit>:
    11ac:	08 95       	ret

000011ae <__divmodsi4>:
    11ae:	05 2e       	mov	r0, r21
    11b0:	97 fb       	bst	r25, 7
    11b2:	16 f4       	brtc	.+4      	; 0x11b8 <__divmodsi4+0xa>
    11b4:	00 94       	com	r0
    11b6:	0f d0       	rcall	.+30     	; 0x11d6 <__negsi2>
    11b8:	57 fd       	sbrc	r21, 7
    11ba:	05 d0       	rcall	.+10     	; 0x11c6 <__divmodsi4_neg2>
    11bc:	30 d0       	rcall	.+96     	; 0x121e <__udivmodsi4>
    11be:	07 fc       	sbrc	r0, 7
    11c0:	02 d0       	rcall	.+4      	; 0x11c6 <__divmodsi4_neg2>
    11c2:	46 f4       	brtc	.+16     	; 0x11d4 <__divmodsi4_exit>
    11c4:	08 c0       	rjmp	.+16     	; 0x11d6 <__negsi2>

000011c6 <__divmodsi4_neg2>:
    11c6:	50 95       	com	r21
    11c8:	40 95       	com	r20
    11ca:	30 95       	com	r19
    11cc:	21 95       	neg	r18
    11ce:	3f 4f       	sbci	r19, 0xFF	; 255
    11d0:	4f 4f       	sbci	r20, 0xFF	; 255
    11d2:	5f 4f       	sbci	r21, 0xFF	; 255

000011d4 <__divmodsi4_exit>:
    11d4:	08 95       	ret

000011d6 <__negsi2>:
    11d6:	90 95       	com	r25
    11d8:	80 95       	com	r24
    11da:	70 95       	com	r23
    11dc:	61 95       	neg	r22
    11de:	7f 4f       	sbci	r23, 0xFF	; 255
    11e0:	8f 4f       	sbci	r24, 0xFF	; 255
    11e2:	9f 4f       	sbci	r25, 0xFF	; 255
    11e4:	08 95       	ret

000011e6 <__tablejump2__>:
    11e6:	ee 0f       	add	r30, r30
    11e8:	ff 1f       	adc	r31, r31
    11ea:	88 1f       	adc	r24, r24
    11ec:	8b bf       	out	0x3b, r24	; 59
    11ee:	07 90       	elpm	r0, Z+
    11f0:	f6 91       	elpm	r31, Z
    11f2:	e0 2d       	mov	r30, r0
    11f4:	19 94       	eijmp

000011f6 <__udivmodhi4>:
    11f6:	aa 1b       	sub	r26, r26
    11f8:	bb 1b       	sub	r27, r27
    11fa:	51 e1       	ldi	r21, 0x11	; 17
    11fc:	07 c0       	rjmp	.+14     	; 0x120c <__udivmodhi4_ep>

000011fe <__udivmodhi4_loop>:
    11fe:	aa 1f       	adc	r26, r26
    1200:	bb 1f       	adc	r27, r27
    1202:	a6 17       	cp	r26, r22
    1204:	b7 07       	cpc	r27, r23
    1206:	10 f0       	brcs	.+4      	; 0x120c <__udivmodhi4_ep>
    1208:	a6 1b       	sub	r26, r22
    120a:	b7 0b       	sbc	r27, r23

0000120c <__udivmodhi4_ep>:
    120c:	88 1f       	adc	r24, r24
    120e:	99 1f       	adc	r25, r25
    1210:	5a 95       	dec	r21
    1212:	a9 f7       	brne	.-22     	; 0x11fe <__udivmodhi4_loop>
    1214:	80 95       	com	r24
    1216:	90 95       	com	r25
    1218:	bc 01       	movw	r22, r24
    121a:	cd 01       	movw	r24, r26
    121c:	08 95       	ret

0000121e <__udivmodsi4>:
    121e:	a1 e2       	ldi	r26, 0x21	; 33
    1220:	1a 2e       	mov	r1, r26
    1222:	aa 1b       	sub	r26, r26
    1224:	bb 1b       	sub	r27, r27
    1226:	fd 01       	movw	r30, r26
    1228:	0d c0       	rjmp	.+26     	; 0x1244 <__udivmodsi4_ep>

0000122a <__udivmodsi4_loop>:
    122a:	aa 1f       	adc	r26, r26
    122c:	bb 1f       	adc	r27, r27
    122e:	ee 1f       	adc	r30, r30
    1230:	ff 1f       	adc	r31, r31
    1232:	a2 17       	cp	r26, r18
    1234:	b3 07       	cpc	r27, r19
    1236:	e4 07       	cpc	r30, r20
    1238:	f5 07       	cpc	r31, r21
    123a:	20 f0       	brcs	.+8      	; 0x1244 <__udivmodsi4_ep>
    123c:	a2 1b       	sub	r26, r18
    123e:	b3 0b       	sbc	r27, r19
    1240:	e4 0b       	sbc	r30, r20
    1242:	f5 0b       	sbc	r31, r21

00001244 <__udivmodsi4_ep>:
    1244:	66 1f       	adc	r22, r22
    1246:	77 1f       	adc	r23, r23
    1248:	88 1f       	adc	r24, r24
    124a:	99 1f       	adc	r25, r25
    124c:	1a 94       	dec	r1
    124e:	69 f7       	brne	.-38     	; 0x122a <__udivmodsi4_loop>
    1250:	60 95       	com	r22
    1252:	70 95       	com	r23
    1254:	80 95       	com	r24
    1256:	90 95       	com	r25
    1258:	9b 01       	movw	r18, r22
    125a:	ac 01       	movw	r20, r24
    125c:	bd 01       	movw	r22, r26
    125e:	cf 01       	movw	r24, r30
    1260:	08 95       	ret

00001262 <__itoa_ncheck>:
    1262:	bb 27       	eor	r27, r27
    1264:	4a 30       	cpi	r20, 0x0A	; 10
    1266:	31 f4       	brne	.+12     	; 0x1274 <__itoa_ncheck+0x12>
    1268:	99 23       	and	r25, r25
    126a:	22 f4       	brpl	.+8      	; 0x1274 <__itoa_ncheck+0x12>
    126c:	bd e2       	ldi	r27, 0x2D	; 45
    126e:	90 95       	com	r25
    1270:	81 95       	neg	r24
    1272:	9f 4f       	sbci	r25, 0xFF	; 255
    1274:	01 c0       	rjmp	.+2      	; 0x1278 <__utoa_common>

00001276 <__utoa_ncheck>:
    1276:	bb 27       	eor	r27, r27

00001278 <__utoa_common>:
    1278:	fb 01       	movw	r30, r22
    127a:	55 27       	eor	r21, r21
    127c:	aa 27       	eor	r26, r26
    127e:	88 0f       	add	r24, r24
    1280:	99 1f       	adc	r25, r25
    1282:	aa 1f       	adc	r26, r26
    1284:	a4 17       	cp	r26, r20
    1286:	10 f0       	brcs	.+4      	; 0x128c <__utoa_common+0x14>
    1288:	a4 1b       	sub	r26, r20
    128a:	83 95       	inc	r24
    128c:	50 51       	subi	r21, 0x10	; 16
    128e:	b9 f7       	brne	.-18     	; 0x127e <__utoa_common+0x6>
    1290:	a0 5d       	subi	r26, 0xD0	; 208
    1292:	aa 33       	cpi	r26, 0x3A	; 58
    1294:	08 f0       	brcs	.+2      	; 0x1298 <__utoa_common+0x20>
    1296:	a9 5d       	subi	r26, 0xD9	; 217
    1298:	a1 93       	st	Z+, r26
    129a:	00 97       	sbiw	r24, 0x00	; 0
    129c:	79 f7       	brne	.-34     	; 0x127c <__utoa_common+0x4>
    129e:	b1 11       	cpse	r27, r1
    12a0:	b1 93       	st	Z+, r27
    12a2:	11 92       	st	Z+, r1
    12a4:	cb 01       	movw	r24, r22
    12a6:	e7 c3       	rjmp	.+1998   	; 0x1a76 <strrev>

000012a8 <fdevopen>:
    12a8:	0f 93       	push	r16
    12aa:	1f 93       	push	r17
    12ac:	cf 93       	push	r28
    12ae:	df 93       	push	r29
    12b0:	00 97       	sbiw	r24, 0x00	; 0
    12b2:	31 f4       	brne	.+12     	; 0x12c0 <fdevopen+0x18>
    12b4:	61 15       	cp	r22, r1
    12b6:	71 05       	cpc	r23, r1
    12b8:	19 f4       	brne	.+6      	; 0x12c0 <fdevopen+0x18>
    12ba:	80 e0       	ldi	r24, 0x00	; 0
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	39 c0       	rjmp	.+114    	; 0x1332 <fdevopen+0x8a>
    12c0:	8b 01       	movw	r16, r22
    12c2:	ec 01       	movw	r28, r24
    12c4:	6e e0       	ldi	r22, 0x0E	; 14
    12c6:	70 e0       	ldi	r23, 0x00	; 0
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	7c d2       	rcall	.+1272   	; 0x17c6 <calloc>
    12ce:	fc 01       	movw	r30, r24
    12d0:	89 2b       	or	r24, r25
    12d2:	99 f3       	breq	.-26     	; 0x12ba <fdevopen+0x12>
    12d4:	80 e8       	ldi	r24, 0x80	; 128
    12d6:	83 83       	std	Z+3, r24	; 0x03
    12d8:	01 15       	cp	r16, r1
    12da:	11 05       	cpc	r17, r1
    12dc:	71 f0       	breq	.+28     	; 0x12fa <fdevopen+0x52>
    12de:	13 87       	std	Z+11, r17	; 0x0b
    12e0:	02 87       	std	Z+10, r16	; 0x0a
    12e2:	81 e8       	ldi	r24, 0x81	; 129
    12e4:	83 83       	std	Z+3, r24	; 0x03
    12e6:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <__iob>
    12ea:	90 91 5d 04 	lds	r25, 0x045D	; 0x80045d <__iob+0x1>
    12ee:	89 2b       	or	r24, r25
    12f0:	21 f4       	brne	.+8      	; 0x12fa <fdevopen+0x52>
    12f2:	f0 93 5d 04 	sts	0x045D, r31	; 0x80045d <__iob+0x1>
    12f6:	e0 93 5c 04 	sts	0x045C, r30	; 0x80045c <__iob>
    12fa:	20 97       	sbiw	r28, 0x00	; 0
    12fc:	c9 f0       	breq	.+50     	; 0x1330 <fdevopen+0x88>
    12fe:	d1 87       	std	Z+9, r29	; 0x09
    1300:	c0 87       	std	Z+8, r28	; 0x08
    1302:	83 81       	ldd	r24, Z+3	; 0x03
    1304:	82 60       	ori	r24, 0x02	; 2
    1306:	83 83       	std	Z+3, r24	; 0x03
    1308:	80 91 5e 04 	lds	r24, 0x045E	; 0x80045e <__iob+0x2>
    130c:	90 91 5f 04 	lds	r25, 0x045F	; 0x80045f <__iob+0x3>
    1310:	89 2b       	or	r24, r25
    1312:	71 f4       	brne	.+28     	; 0x1330 <fdevopen+0x88>
    1314:	f0 93 5f 04 	sts	0x045F, r31	; 0x80045f <__iob+0x3>
    1318:	e0 93 5e 04 	sts	0x045E, r30	; 0x80045e <__iob+0x2>
    131c:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <__iob+0x4>
    1320:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <__iob+0x5>
    1324:	89 2b       	or	r24, r25
    1326:	21 f4       	brne	.+8      	; 0x1330 <fdevopen+0x88>
    1328:	f0 93 61 04 	sts	0x0461, r31	; 0x800461 <__iob+0x5>
    132c:	e0 93 60 04 	sts	0x0460, r30	; 0x800460 <__iob+0x4>
    1330:	cf 01       	movw	r24, r30
    1332:	df 91       	pop	r29
    1334:	cf 91       	pop	r28
    1336:	1f 91       	pop	r17
    1338:	0f 91       	pop	r16
    133a:	08 95       	ret

0000133c <printf>:
    133c:	cf 93       	push	r28
    133e:	df 93       	push	r29
    1340:	cd b7       	in	r28, 0x3d	; 61
    1342:	de b7       	in	r29, 0x3e	; 62
    1344:	ae 01       	movw	r20, r28
    1346:	4a 5f       	subi	r20, 0xFA	; 250
    1348:	5f 4f       	sbci	r21, 0xFF	; 255
    134a:	fa 01       	movw	r30, r20
    134c:	61 91       	ld	r22, Z+
    134e:	71 91       	ld	r23, Z+
    1350:	af 01       	movw	r20, r30
    1352:	80 91 5e 04 	lds	r24, 0x045E	; 0x80045e <__iob+0x2>
    1356:	90 91 5f 04 	lds	r25, 0x045F	; 0x80045f <__iob+0x3>
    135a:	38 d0       	rcall	.+112    	; 0x13cc <vfprintf>
    135c:	df 91       	pop	r29
    135e:	cf 91       	pop	r28
    1360:	08 95       	ret

00001362 <putchar>:
    1362:	60 91 5e 04 	lds	r22, 0x045E	; 0x80045e <__iob+0x2>
    1366:	70 91 5f 04 	lds	r23, 0x045F	; 0x80045f <__iob+0x3>
    136a:	95 c3       	rjmp	.+1834   	; 0x1a96 <fputc>

0000136c <puts>:
    136c:	0f 93       	push	r16
    136e:	1f 93       	push	r17
    1370:	cf 93       	push	r28
    1372:	df 93       	push	r29
    1374:	e0 91 5e 04 	lds	r30, 0x045E	; 0x80045e <__iob+0x2>
    1378:	f0 91 5f 04 	lds	r31, 0x045F	; 0x80045f <__iob+0x3>
    137c:	23 81       	ldd	r18, Z+3	; 0x03
    137e:	21 ff       	sbrs	r18, 1
    1380:	1b c0       	rjmp	.+54     	; 0x13b8 <puts+0x4c>
    1382:	8c 01       	movw	r16, r24
    1384:	d0 e0       	ldi	r29, 0x00	; 0
    1386:	c0 e0       	ldi	r28, 0x00	; 0
    1388:	f8 01       	movw	r30, r16
    138a:	81 91       	ld	r24, Z+
    138c:	8f 01       	movw	r16, r30
    138e:	60 91 5e 04 	lds	r22, 0x045E	; 0x80045e <__iob+0x2>
    1392:	70 91 5f 04 	lds	r23, 0x045F	; 0x80045f <__iob+0x3>
    1396:	db 01       	movw	r26, r22
    1398:	18 96       	adiw	r26, 0x08	; 8
    139a:	ed 91       	ld	r30, X+
    139c:	fc 91       	ld	r31, X
    139e:	19 97       	sbiw	r26, 0x09	; 9
    13a0:	88 23       	and	r24, r24
    13a2:	31 f0       	breq	.+12     	; 0x13b0 <puts+0x44>
    13a4:	19 95       	eicall
    13a6:	89 2b       	or	r24, r25
    13a8:	79 f3       	breq	.-34     	; 0x1388 <puts+0x1c>
    13aa:	df ef       	ldi	r29, 0xFF	; 255
    13ac:	cf ef       	ldi	r28, 0xFF	; 255
    13ae:	ec cf       	rjmp	.-40     	; 0x1388 <puts+0x1c>
    13b0:	8a e0       	ldi	r24, 0x0A	; 10
    13b2:	19 95       	eicall
    13b4:	89 2b       	or	r24, r25
    13b6:	19 f0       	breq	.+6      	; 0x13be <puts+0x52>
    13b8:	8f ef       	ldi	r24, 0xFF	; 255
    13ba:	9f ef       	ldi	r25, 0xFF	; 255
    13bc:	02 c0       	rjmp	.+4      	; 0x13c2 <puts+0x56>
    13be:	8d 2f       	mov	r24, r29
    13c0:	9c 2f       	mov	r25, r28
    13c2:	df 91       	pop	r29
    13c4:	cf 91       	pop	r28
    13c6:	1f 91       	pop	r17
    13c8:	0f 91       	pop	r16
    13ca:	08 95       	ret

000013cc <vfprintf>:
    13cc:	2f 92       	push	r2
    13ce:	3f 92       	push	r3
    13d0:	4f 92       	push	r4
    13d2:	5f 92       	push	r5
    13d4:	6f 92       	push	r6
    13d6:	7f 92       	push	r7
    13d8:	8f 92       	push	r8
    13da:	9f 92       	push	r9
    13dc:	af 92       	push	r10
    13de:	bf 92       	push	r11
    13e0:	cf 92       	push	r12
    13e2:	df 92       	push	r13
    13e4:	ef 92       	push	r14
    13e6:	ff 92       	push	r15
    13e8:	0f 93       	push	r16
    13ea:	1f 93       	push	r17
    13ec:	cf 93       	push	r28
    13ee:	df 93       	push	r29
    13f0:	cd b7       	in	r28, 0x3d	; 61
    13f2:	de b7       	in	r29, 0x3e	; 62
    13f4:	2b 97       	sbiw	r28, 0x0b	; 11
    13f6:	0f b6       	in	r0, 0x3f	; 63
    13f8:	f8 94       	cli
    13fa:	de bf       	out	0x3e, r29	; 62
    13fc:	0f be       	out	0x3f, r0	; 63
    13fe:	cd bf       	out	0x3d, r28	; 61
    1400:	6c 01       	movw	r12, r24
    1402:	7b 01       	movw	r14, r22
    1404:	8a 01       	movw	r16, r20
    1406:	fc 01       	movw	r30, r24
    1408:	17 82       	std	Z+7, r1	; 0x07
    140a:	16 82       	std	Z+6, r1	; 0x06
    140c:	83 81       	ldd	r24, Z+3	; 0x03
    140e:	81 ff       	sbrs	r24, 1
    1410:	bf c1       	rjmp	.+894    	; 0x1790 <vfprintf+0x3c4>
    1412:	ce 01       	movw	r24, r28
    1414:	01 96       	adiw	r24, 0x01	; 1
    1416:	3c 01       	movw	r6, r24
    1418:	f6 01       	movw	r30, r12
    141a:	93 81       	ldd	r25, Z+3	; 0x03
    141c:	f7 01       	movw	r30, r14
    141e:	93 fd       	sbrc	r25, 3
    1420:	85 91       	lpm	r24, Z+
    1422:	93 ff       	sbrs	r25, 3
    1424:	81 91       	ld	r24, Z+
    1426:	7f 01       	movw	r14, r30
    1428:	88 23       	and	r24, r24
    142a:	09 f4       	brne	.+2      	; 0x142e <vfprintf+0x62>
    142c:	ad c1       	rjmp	.+858    	; 0x1788 <vfprintf+0x3bc>
    142e:	85 32       	cpi	r24, 0x25	; 37
    1430:	39 f4       	brne	.+14     	; 0x1440 <vfprintf+0x74>
    1432:	93 fd       	sbrc	r25, 3
    1434:	85 91       	lpm	r24, Z+
    1436:	93 ff       	sbrs	r25, 3
    1438:	81 91       	ld	r24, Z+
    143a:	7f 01       	movw	r14, r30
    143c:	85 32       	cpi	r24, 0x25	; 37
    143e:	21 f4       	brne	.+8      	; 0x1448 <vfprintf+0x7c>
    1440:	b6 01       	movw	r22, r12
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	28 d3       	rcall	.+1616   	; 0x1a96 <fputc>
    1446:	e8 cf       	rjmp	.-48     	; 0x1418 <vfprintf+0x4c>
    1448:	91 2c       	mov	r9, r1
    144a:	21 2c       	mov	r2, r1
    144c:	31 2c       	mov	r3, r1
    144e:	ff e1       	ldi	r31, 0x1F	; 31
    1450:	f3 15       	cp	r31, r3
    1452:	d8 f0       	brcs	.+54     	; 0x148a <vfprintf+0xbe>
    1454:	8b 32       	cpi	r24, 0x2B	; 43
    1456:	79 f0       	breq	.+30     	; 0x1476 <vfprintf+0xaa>
    1458:	38 f4       	brcc	.+14     	; 0x1468 <vfprintf+0x9c>
    145a:	80 32       	cpi	r24, 0x20	; 32
    145c:	79 f0       	breq	.+30     	; 0x147c <vfprintf+0xb0>
    145e:	83 32       	cpi	r24, 0x23	; 35
    1460:	a1 f4       	brne	.+40     	; 0x148a <vfprintf+0xbe>
    1462:	23 2d       	mov	r18, r3
    1464:	20 61       	ori	r18, 0x10	; 16
    1466:	1d c0       	rjmp	.+58     	; 0x14a2 <vfprintf+0xd6>
    1468:	8d 32       	cpi	r24, 0x2D	; 45
    146a:	61 f0       	breq	.+24     	; 0x1484 <vfprintf+0xb8>
    146c:	80 33       	cpi	r24, 0x30	; 48
    146e:	69 f4       	brne	.+26     	; 0x148a <vfprintf+0xbe>
    1470:	23 2d       	mov	r18, r3
    1472:	21 60       	ori	r18, 0x01	; 1
    1474:	16 c0       	rjmp	.+44     	; 0x14a2 <vfprintf+0xd6>
    1476:	83 2d       	mov	r24, r3
    1478:	82 60       	ori	r24, 0x02	; 2
    147a:	38 2e       	mov	r3, r24
    147c:	e3 2d       	mov	r30, r3
    147e:	e4 60       	ori	r30, 0x04	; 4
    1480:	3e 2e       	mov	r3, r30
    1482:	2a c0       	rjmp	.+84     	; 0x14d8 <vfprintf+0x10c>
    1484:	f3 2d       	mov	r31, r3
    1486:	f8 60       	ori	r31, 0x08	; 8
    1488:	1d c0       	rjmp	.+58     	; 0x14c4 <vfprintf+0xf8>
    148a:	37 fc       	sbrc	r3, 7
    148c:	2d c0       	rjmp	.+90     	; 0x14e8 <vfprintf+0x11c>
    148e:	20 ed       	ldi	r18, 0xD0	; 208
    1490:	28 0f       	add	r18, r24
    1492:	2a 30       	cpi	r18, 0x0A	; 10
    1494:	40 f0       	brcs	.+16     	; 0x14a6 <vfprintf+0xda>
    1496:	8e 32       	cpi	r24, 0x2E	; 46
    1498:	b9 f4       	brne	.+46     	; 0x14c8 <vfprintf+0xfc>
    149a:	36 fc       	sbrc	r3, 6
    149c:	75 c1       	rjmp	.+746    	; 0x1788 <vfprintf+0x3bc>
    149e:	23 2d       	mov	r18, r3
    14a0:	20 64       	ori	r18, 0x40	; 64
    14a2:	32 2e       	mov	r3, r18
    14a4:	19 c0       	rjmp	.+50     	; 0x14d8 <vfprintf+0x10c>
    14a6:	36 fe       	sbrs	r3, 6
    14a8:	06 c0       	rjmp	.+12     	; 0x14b6 <vfprintf+0xea>
    14aa:	8a e0       	ldi	r24, 0x0A	; 10
    14ac:	98 9e       	mul	r9, r24
    14ae:	20 0d       	add	r18, r0
    14b0:	11 24       	eor	r1, r1
    14b2:	92 2e       	mov	r9, r18
    14b4:	11 c0       	rjmp	.+34     	; 0x14d8 <vfprintf+0x10c>
    14b6:	ea e0       	ldi	r30, 0x0A	; 10
    14b8:	2e 9e       	mul	r2, r30
    14ba:	20 0d       	add	r18, r0
    14bc:	11 24       	eor	r1, r1
    14be:	22 2e       	mov	r2, r18
    14c0:	f3 2d       	mov	r31, r3
    14c2:	f0 62       	ori	r31, 0x20	; 32
    14c4:	3f 2e       	mov	r3, r31
    14c6:	08 c0       	rjmp	.+16     	; 0x14d8 <vfprintf+0x10c>
    14c8:	8c 36       	cpi	r24, 0x6C	; 108
    14ca:	21 f4       	brne	.+8      	; 0x14d4 <vfprintf+0x108>
    14cc:	83 2d       	mov	r24, r3
    14ce:	80 68       	ori	r24, 0x80	; 128
    14d0:	38 2e       	mov	r3, r24
    14d2:	02 c0       	rjmp	.+4      	; 0x14d8 <vfprintf+0x10c>
    14d4:	88 36       	cpi	r24, 0x68	; 104
    14d6:	41 f4       	brne	.+16     	; 0x14e8 <vfprintf+0x11c>
    14d8:	f7 01       	movw	r30, r14
    14da:	93 fd       	sbrc	r25, 3
    14dc:	85 91       	lpm	r24, Z+
    14de:	93 ff       	sbrs	r25, 3
    14e0:	81 91       	ld	r24, Z+
    14e2:	7f 01       	movw	r14, r30
    14e4:	81 11       	cpse	r24, r1
    14e6:	b3 cf       	rjmp	.-154    	; 0x144e <vfprintf+0x82>
    14e8:	98 2f       	mov	r25, r24
    14ea:	9f 7d       	andi	r25, 0xDF	; 223
    14ec:	95 54       	subi	r25, 0x45	; 69
    14ee:	93 30       	cpi	r25, 0x03	; 3
    14f0:	28 f4       	brcc	.+10     	; 0x14fc <vfprintf+0x130>
    14f2:	0c 5f       	subi	r16, 0xFC	; 252
    14f4:	1f 4f       	sbci	r17, 0xFF	; 255
    14f6:	9f e3       	ldi	r25, 0x3F	; 63
    14f8:	99 83       	std	Y+1, r25	; 0x01
    14fa:	0d c0       	rjmp	.+26     	; 0x1516 <vfprintf+0x14a>
    14fc:	83 36       	cpi	r24, 0x63	; 99
    14fe:	31 f0       	breq	.+12     	; 0x150c <vfprintf+0x140>
    1500:	83 37       	cpi	r24, 0x73	; 115
    1502:	71 f0       	breq	.+28     	; 0x1520 <vfprintf+0x154>
    1504:	83 35       	cpi	r24, 0x53	; 83
    1506:	09 f0       	breq	.+2      	; 0x150a <vfprintf+0x13e>
    1508:	55 c0       	rjmp	.+170    	; 0x15b4 <vfprintf+0x1e8>
    150a:	20 c0       	rjmp	.+64     	; 0x154c <vfprintf+0x180>
    150c:	f8 01       	movw	r30, r16
    150e:	80 81       	ld	r24, Z
    1510:	89 83       	std	Y+1, r24	; 0x01
    1512:	0e 5f       	subi	r16, 0xFE	; 254
    1514:	1f 4f       	sbci	r17, 0xFF	; 255
    1516:	88 24       	eor	r8, r8
    1518:	83 94       	inc	r8
    151a:	91 2c       	mov	r9, r1
    151c:	53 01       	movw	r10, r6
    151e:	12 c0       	rjmp	.+36     	; 0x1544 <vfprintf+0x178>
    1520:	28 01       	movw	r4, r16
    1522:	f2 e0       	ldi	r31, 0x02	; 2
    1524:	4f 0e       	add	r4, r31
    1526:	51 1c       	adc	r5, r1
    1528:	f8 01       	movw	r30, r16
    152a:	a0 80       	ld	r10, Z
    152c:	b1 80       	ldd	r11, Z+1	; 0x01
    152e:	36 fe       	sbrs	r3, 6
    1530:	03 c0       	rjmp	.+6      	; 0x1538 <vfprintf+0x16c>
    1532:	69 2d       	mov	r22, r9
    1534:	70 e0       	ldi	r23, 0x00	; 0
    1536:	02 c0       	rjmp	.+4      	; 0x153c <vfprintf+0x170>
    1538:	6f ef       	ldi	r22, 0xFF	; 255
    153a:	7f ef       	ldi	r23, 0xFF	; 255
    153c:	c5 01       	movw	r24, r10
    153e:	90 d2       	rcall	.+1312   	; 0x1a60 <strnlen>
    1540:	4c 01       	movw	r8, r24
    1542:	82 01       	movw	r16, r4
    1544:	f3 2d       	mov	r31, r3
    1546:	ff 77       	andi	r31, 0x7F	; 127
    1548:	3f 2e       	mov	r3, r31
    154a:	15 c0       	rjmp	.+42     	; 0x1576 <vfprintf+0x1aa>
    154c:	28 01       	movw	r4, r16
    154e:	22 e0       	ldi	r18, 0x02	; 2
    1550:	42 0e       	add	r4, r18
    1552:	51 1c       	adc	r5, r1
    1554:	f8 01       	movw	r30, r16
    1556:	a0 80       	ld	r10, Z
    1558:	b1 80       	ldd	r11, Z+1	; 0x01
    155a:	36 fe       	sbrs	r3, 6
    155c:	03 c0       	rjmp	.+6      	; 0x1564 <vfprintf+0x198>
    155e:	69 2d       	mov	r22, r9
    1560:	70 e0       	ldi	r23, 0x00	; 0
    1562:	02 c0       	rjmp	.+4      	; 0x1568 <vfprintf+0x19c>
    1564:	6f ef       	ldi	r22, 0xFF	; 255
    1566:	7f ef       	ldi	r23, 0xFF	; 255
    1568:	c5 01       	movw	r24, r10
    156a:	68 d2       	rcall	.+1232   	; 0x1a3c <strnlen_P>
    156c:	4c 01       	movw	r8, r24
    156e:	f3 2d       	mov	r31, r3
    1570:	f0 68       	ori	r31, 0x80	; 128
    1572:	3f 2e       	mov	r3, r31
    1574:	82 01       	movw	r16, r4
    1576:	33 fc       	sbrc	r3, 3
    1578:	19 c0       	rjmp	.+50     	; 0x15ac <vfprintf+0x1e0>
    157a:	82 2d       	mov	r24, r2
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	88 16       	cp	r8, r24
    1580:	99 06       	cpc	r9, r25
    1582:	a0 f4       	brcc	.+40     	; 0x15ac <vfprintf+0x1e0>
    1584:	b6 01       	movw	r22, r12
    1586:	80 e2       	ldi	r24, 0x20	; 32
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	85 d2       	rcall	.+1290   	; 0x1a96 <fputc>
    158c:	2a 94       	dec	r2
    158e:	f5 cf       	rjmp	.-22     	; 0x157a <vfprintf+0x1ae>
    1590:	f5 01       	movw	r30, r10
    1592:	37 fc       	sbrc	r3, 7
    1594:	85 91       	lpm	r24, Z+
    1596:	37 fe       	sbrs	r3, 7
    1598:	81 91       	ld	r24, Z+
    159a:	5f 01       	movw	r10, r30
    159c:	b6 01       	movw	r22, r12
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	7a d2       	rcall	.+1268   	; 0x1a96 <fputc>
    15a2:	21 10       	cpse	r2, r1
    15a4:	2a 94       	dec	r2
    15a6:	21 e0       	ldi	r18, 0x01	; 1
    15a8:	82 1a       	sub	r8, r18
    15aa:	91 08       	sbc	r9, r1
    15ac:	81 14       	cp	r8, r1
    15ae:	91 04       	cpc	r9, r1
    15b0:	79 f7       	brne	.-34     	; 0x1590 <vfprintf+0x1c4>
    15b2:	e1 c0       	rjmp	.+450    	; 0x1776 <vfprintf+0x3aa>
    15b4:	84 36       	cpi	r24, 0x64	; 100
    15b6:	11 f0       	breq	.+4      	; 0x15bc <vfprintf+0x1f0>
    15b8:	89 36       	cpi	r24, 0x69	; 105
    15ba:	39 f5       	brne	.+78     	; 0x160a <vfprintf+0x23e>
    15bc:	f8 01       	movw	r30, r16
    15be:	37 fe       	sbrs	r3, 7
    15c0:	07 c0       	rjmp	.+14     	; 0x15d0 <vfprintf+0x204>
    15c2:	60 81       	ld	r22, Z
    15c4:	71 81       	ldd	r23, Z+1	; 0x01
    15c6:	82 81       	ldd	r24, Z+2	; 0x02
    15c8:	93 81       	ldd	r25, Z+3	; 0x03
    15ca:	0c 5f       	subi	r16, 0xFC	; 252
    15cc:	1f 4f       	sbci	r17, 0xFF	; 255
    15ce:	08 c0       	rjmp	.+16     	; 0x15e0 <vfprintf+0x214>
    15d0:	60 81       	ld	r22, Z
    15d2:	71 81       	ldd	r23, Z+1	; 0x01
    15d4:	07 2e       	mov	r0, r23
    15d6:	00 0c       	add	r0, r0
    15d8:	88 0b       	sbc	r24, r24
    15da:	99 0b       	sbc	r25, r25
    15dc:	0e 5f       	subi	r16, 0xFE	; 254
    15de:	1f 4f       	sbci	r17, 0xFF	; 255
    15e0:	f3 2d       	mov	r31, r3
    15e2:	ff 76       	andi	r31, 0x6F	; 111
    15e4:	3f 2e       	mov	r3, r31
    15e6:	97 ff       	sbrs	r25, 7
    15e8:	09 c0       	rjmp	.+18     	; 0x15fc <vfprintf+0x230>
    15ea:	90 95       	com	r25
    15ec:	80 95       	com	r24
    15ee:	70 95       	com	r23
    15f0:	61 95       	neg	r22
    15f2:	7f 4f       	sbci	r23, 0xFF	; 255
    15f4:	8f 4f       	sbci	r24, 0xFF	; 255
    15f6:	9f 4f       	sbci	r25, 0xFF	; 255
    15f8:	f0 68       	ori	r31, 0x80	; 128
    15fa:	3f 2e       	mov	r3, r31
    15fc:	2a e0       	ldi	r18, 0x0A	; 10
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	a3 01       	movw	r20, r6
    1602:	85 d2       	rcall	.+1290   	; 0x1b0e <__ultoa_invert>
    1604:	88 2e       	mov	r8, r24
    1606:	86 18       	sub	r8, r6
    1608:	44 c0       	rjmp	.+136    	; 0x1692 <vfprintf+0x2c6>
    160a:	85 37       	cpi	r24, 0x75	; 117
    160c:	31 f4       	brne	.+12     	; 0x161a <vfprintf+0x24e>
    160e:	23 2d       	mov	r18, r3
    1610:	2f 7e       	andi	r18, 0xEF	; 239
    1612:	b2 2e       	mov	r11, r18
    1614:	2a e0       	ldi	r18, 0x0A	; 10
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	25 c0       	rjmp	.+74     	; 0x1664 <vfprintf+0x298>
    161a:	93 2d       	mov	r25, r3
    161c:	99 7f       	andi	r25, 0xF9	; 249
    161e:	b9 2e       	mov	r11, r25
    1620:	8f 36       	cpi	r24, 0x6F	; 111
    1622:	c1 f0       	breq	.+48     	; 0x1654 <vfprintf+0x288>
    1624:	18 f4       	brcc	.+6      	; 0x162c <vfprintf+0x260>
    1626:	88 35       	cpi	r24, 0x58	; 88
    1628:	79 f0       	breq	.+30     	; 0x1648 <vfprintf+0x27c>
    162a:	ae c0       	rjmp	.+348    	; 0x1788 <vfprintf+0x3bc>
    162c:	80 37       	cpi	r24, 0x70	; 112
    162e:	19 f0       	breq	.+6      	; 0x1636 <vfprintf+0x26a>
    1630:	88 37       	cpi	r24, 0x78	; 120
    1632:	21 f0       	breq	.+8      	; 0x163c <vfprintf+0x270>
    1634:	a9 c0       	rjmp	.+338    	; 0x1788 <vfprintf+0x3bc>
    1636:	e9 2f       	mov	r30, r25
    1638:	e0 61       	ori	r30, 0x10	; 16
    163a:	be 2e       	mov	r11, r30
    163c:	b4 fe       	sbrs	r11, 4
    163e:	0d c0       	rjmp	.+26     	; 0x165a <vfprintf+0x28e>
    1640:	fb 2d       	mov	r31, r11
    1642:	f4 60       	ori	r31, 0x04	; 4
    1644:	bf 2e       	mov	r11, r31
    1646:	09 c0       	rjmp	.+18     	; 0x165a <vfprintf+0x28e>
    1648:	34 fe       	sbrs	r3, 4
    164a:	0a c0       	rjmp	.+20     	; 0x1660 <vfprintf+0x294>
    164c:	29 2f       	mov	r18, r25
    164e:	26 60       	ori	r18, 0x06	; 6
    1650:	b2 2e       	mov	r11, r18
    1652:	06 c0       	rjmp	.+12     	; 0x1660 <vfprintf+0x294>
    1654:	28 e0       	ldi	r18, 0x08	; 8
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	05 c0       	rjmp	.+10     	; 0x1664 <vfprintf+0x298>
    165a:	20 e1       	ldi	r18, 0x10	; 16
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	02 c0       	rjmp	.+4      	; 0x1664 <vfprintf+0x298>
    1660:	20 e1       	ldi	r18, 0x10	; 16
    1662:	32 e0       	ldi	r19, 0x02	; 2
    1664:	f8 01       	movw	r30, r16
    1666:	b7 fe       	sbrs	r11, 7
    1668:	07 c0       	rjmp	.+14     	; 0x1678 <vfprintf+0x2ac>
    166a:	60 81       	ld	r22, Z
    166c:	71 81       	ldd	r23, Z+1	; 0x01
    166e:	82 81       	ldd	r24, Z+2	; 0x02
    1670:	93 81       	ldd	r25, Z+3	; 0x03
    1672:	0c 5f       	subi	r16, 0xFC	; 252
    1674:	1f 4f       	sbci	r17, 0xFF	; 255
    1676:	06 c0       	rjmp	.+12     	; 0x1684 <vfprintf+0x2b8>
    1678:	60 81       	ld	r22, Z
    167a:	71 81       	ldd	r23, Z+1	; 0x01
    167c:	80 e0       	ldi	r24, 0x00	; 0
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	0e 5f       	subi	r16, 0xFE	; 254
    1682:	1f 4f       	sbci	r17, 0xFF	; 255
    1684:	a3 01       	movw	r20, r6
    1686:	43 d2       	rcall	.+1158   	; 0x1b0e <__ultoa_invert>
    1688:	88 2e       	mov	r8, r24
    168a:	86 18       	sub	r8, r6
    168c:	fb 2d       	mov	r31, r11
    168e:	ff 77       	andi	r31, 0x7F	; 127
    1690:	3f 2e       	mov	r3, r31
    1692:	36 fe       	sbrs	r3, 6
    1694:	0d c0       	rjmp	.+26     	; 0x16b0 <vfprintf+0x2e4>
    1696:	23 2d       	mov	r18, r3
    1698:	2e 7f       	andi	r18, 0xFE	; 254
    169a:	a2 2e       	mov	r10, r18
    169c:	89 14       	cp	r8, r9
    169e:	58 f4       	brcc	.+22     	; 0x16b6 <vfprintf+0x2ea>
    16a0:	34 fe       	sbrs	r3, 4
    16a2:	0b c0       	rjmp	.+22     	; 0x16ba <vfprintf+0x2ee>
    16a4:	32 fc       	sbrc	r3, 2
    16a6:	09 c0       	rjmp	.+18     	; 0x16ba <vfprintf+0x2ee>
    16a8:	83 2d       	mov	r24, r3
    16aa:	8e 7e       	andi	r24, 0xEE	; 238
    16ac:	a8 2e       	mov	r10, r24
    16ae:	05 c0       	rjmp	.+10     	; 0x16ba <vfprintf+0x2ee>
    16b0:	b8 2c       	mov	r11, r8
    16b2:	a3 2c       	mov	r10, r3
    16b4:	03 c0       	rjmp	.+6      	; 0x16bc <vfprintf+0x2f0>
    16b6:	b8 2c       	mov	r11, r8
    16b8:	01 c0       	rjmp	.+2      	; 0x16bc <vfprintf+0x2f0>
    16ba:	b9 2c       	mov	r11, r9
    16bc:	a4 fe       	sbrs	r10, 4
    16be:	0f c0       	rjmp	.+30     	; 0x16de <vfprintf+0x312>
    16c0:	fe 01       	movw	r30, r28
    16c2:	e8 0d       	add	r30, r8
    16c4:	f1 1d       	adc	r31, r1
    16c6:	80 81       	ld	r24, Z
    16c8:	80 33       	cpi	r24, 0x30	; 48
    16ca:	21 f4       	brne	.+8      	; 0x16d4 <vfprintf+0x308>
    16cc:	9a 2d       	mov	r25, r10
    16ce:	99 7e       	andi	r25, 0xE9	; 233
    16d0:	a9 2e       	mov	r10, r25
    16d2:	09 c0       	rjmp	.+18     	; 0x16e6 <vfprintf+0x31a>
    16d4:	a2 fe       	sbrs	r10, 2
    16d6:	06 c0       	rjmp	.+12     	; 0x16e4 <vfprintf+0x318>
    16d8:	b3 94       	inc	r11
    16da:	b3 94       	inc	r11
    16dc:	04 c0       	rjmp	.+8      	; 0x16e6 <vfprintf+0x31a>
    16de:	8a 2d       	mov	r24, r10
    16e0:	86 78       	andi	r24, 0x86	; 134
    16e2:	09 f0       	breq	.+2      	; 0x16e6 <vfprintf+0x31a>
    16e4:	b3 94       	inc	r11
    16e6:	a3 fc       	sbrc	r10, 3
    16e8:	10 c0       	rjmp	.+32     	; 0x170a <vfprintf+0x33e>
    16ea:	a0 fe       	sbrs	r10, 0
    16ec:	06 c0       	rjmp	.+12     	; 0x16fa <vfprintf+0x32e>
    16ee:	b2 14       	cp	r11, r2
    16f0:	80 f4       	brcc	.+32     	; 0x1712 <vfprintf+0x346>
    16f2:	28 0c       	add	r2, r8
    16f4:	92 2c       	mov	r9, r2
    16f6:	9b 18       	sub	r9, r11
    16f8:	0d c0       	rjmp	.+26     	; 0x1714 <vfprintf+0x348>
    16fa:	b2 14       	cp	r11, r2
    16fc:	58 f4       	brcc	.+22     	; 0x1714 <vfprintf+0x348>
    16fe:	b6 01       	movw	r22, r12
    1700:	80 e2       	ldi	r24, 0x20	; 32
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	c8 d1       	rcall	.+912    	; 0x1a96 <fputc>
    1706:	b3 94       	inc	r11
    1708:	f8 cf       	rjmp	.-16     	; 0x16fa <vfprintf+0x32e>
    170a:	b2 14       	cp	r11, r2
    170c:	18 f4       	brcc	.+6      	; 0x1714 <vfprintf+0x348>
    170e:	2b 18       	sub	r2, r11
    1710:	02 c0       	rjmp	.+4      	; 0x1716 <vfprintf+0x34a>
    1712:	98 2c       	mov	r9, r8
    1714:	21 2c       	mov	r2, r1
    1716:	a4 fe       	sbrs	r10, 4
    1718:	0f c0       	rjmp	.+30     	; 0x1738 <vfprintf+0x36c>
    171a:	b6 01       	movw	r22, r12
    171c:	80 e3       	ldi	r24, 0x30	; 48
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	ba d1       	rcall	.+884    	; 0x1a96 <fputc>
    1722:	a2 fe       	sbrs	r10, 2
    1724:	16 c0       	rjmp	.+44     	; 0x1752 <vfprintf+0x386>
    1726:	a1 fc       	sbrc	r10, 1
    1728:	03 c0       	rjmp	.+6      	; 0x1730 <vfprintf+0x364>
    172a:	88 e7       	ldi	r24, 0x78	; 120
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	02 c0       	rjmp	.+4      	; 0x1734 <vfprintf+0x368>
    1730:	88 e5       	ldi	r24, 0x58	; 88
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	b6 01       	movw	r22, r12
    1736:	0c c0       	rjmp	.+24     	; 0x1750 <vfprintf+0x384>
    1738:	8a 2d       	mov	r24, r10
    173a:	86 78       	andi	r24, 0x86	; 134
    173c:	51 f0       	breq	.+20     	; 0x1752 <vfprintf+0x386>
    173e:	a1 fe       	sbrs	r10, 1
    1740:	02 c0       	rjmp	.+4      	; 0x1746 <vfprintf+0x37a>
    1742:	8b e2       	ldi	r24, 0x2B	; 43
    1744:	01 c0       	rjmp	.+2      	; 0x1748 <vfprintf+0x37c>
    1746:	80 e2       	ldi	r24, 0x20	; 32
    1748:	a7 fc       	sbrc	r10, 7
    174a:	8d e2       	ldi	r24, 0x2D	; 45
    174c:	b6 01       	movw	r22, r12
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	a2 d1       	rcall	.+836    	; 0x1a96 <fputc>
    1752:	89 14       	cp	r8, r9
    1754:	30 f4       	brcc	.+12     	; 0x1762 <vfprintf+0x396>
    1756:	b6 01       	movw	r22, r12
    1758:	80 e3       	ldi	r24, 0x30	; 48
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	9c d1       	rcall	.+824    	; 0x1a96 <fputc>
    175e:	9a 94       	dec	r9
    1760:	f8 cf       	rjmp	.-16     	; 0x1752 <vfprintf+0x386>
    1762:	8a 94       	dec	r8
    1764:	f3 01       	movw	r30, r6
    1766:	e8 0d       	add	r30, r8
    1768:	f1 1d       	adc	r31, r1
    176a:	80 81       	ld	r24, Z
    176c:	b6 01       	movw	r22, r12
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	92 d1       	rcall	.+804    	; 0x1a96 <fputc>
    1772:	81 10       	cpse	r8, r1
    1774:	f6 cf       	rjmp	.-20     	; 0x1762 <vfprintf+0x396>
    1776:	22 20       	and	r2, r2
    1778:	09 f4       	brne	.+2      	; 0x177c <vfprintf+0x3b0>
    177a:	4e ce       	rjmp	.-868    	; 0x1418 <vfprintf+0x4c>
    177c:	b6 01       	movw	r22, r12
    177e:	80 e2       	ldi	r24, 0x20	; 32
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	89 d1       	rcall	.+786    	; 0x1a96 <fputc>
    1784:	2a 94       	dec	r2
    1786:	f7 cf       	rjmp	.-18     	; 0x1776 <vfprintf+0x3aa>
    1788:	f6 01       	movw	r30, r12
    178a:	86 81       	ldd	r24, Z+6	; 0x06
    178c:	97 81       	ldd	r25, Z+7	; 0x07
    178e:	02 c0       	rjmp	.+4      	; 0x1794 <vfprintf+0x3c8>
    1790:	8f ef       	ldi	r24, 0xFF	; 255
    1792:	9f ef       	ldi	r25, 0xFF	; 255
    1794:	2b 96       	adiw	r28, 0x0b	; 11
    1796:	0f b6       	in	r0, 0x3f	; 63
    1798:	f8 94       	cli
    179a:	de bf       	out	0x3e, r29	; 62
    179c:	0f be       	out	0x3f, r0	; 63
    179e:	cd bf       	out	0x3d, r28	; 61
    17a0:	df 91       	pop	r29
    17a2:	cf 91       	pop	r28
    17a4:	1f 91       	pop	r17
    17a6:	0f 91       	pop	r16
    17a8:	ff 90       	pop	r15
    17aa:	ef 90       	pop	r14
    17ac:	df 90       	pop	r13
    17ae:	cf 90       	pop	r12
    17b0:	bf 90       	pop	r11
    17b2:	af 90       	pop	r10
    17b4:	9f 90       	pop	r9
    17b6:	8f 90       	pop	r8
    17b8:	7f 90       	pop	r7
    17ba:	6f 90       	pop	r6
    17bc:	5f 90       	pop	r5
    17be:	4f 90       	pop	r4
    17c0:	3f 90       	pop	r3
    17c2:	2f 90       	pop	r2
    17c4:	08 95       	ret

000017c6 <calloc>:
    17c6:	0f 93       	push	r16
    17c8:	1f 93       	push	r17
    17ca:	cf 93       	push	r28
    17cc:	df 93       	push	r29
    17ce:	86 9f       	mul	r24, r22
    17d0:	80 01       	movw	r16, r0
    17d2:	87 9f       	mul	r24, r23
    17d4:	10 0d       	add	r17, r0
    17d6:	96 9f       	mul	r25, r22
    17d8:	10 0d       	add	r17, r0
    17da:	11 24       	eor	r1, r1
    17dc:	c8 01       	movw	r24, r16
    17de:	0d d0       	rcall	.+26     	; 0x17fa <malloc>
    17e0:	ec 01       	movw	r28, r24
    17e2:	00 97       	sbiw	r24, 0x00	; 0
    17e4:	21 f0       	breq	.+8      	; 0x17ee <calloc+0x28>
    17e6:	a8 01       	movw	r20, r16
    17e8:	60 e0       	ldi	r22, 0x00	; 0
    17ea:	70 e0       	ldi	r23, 0x00	; 0
    17ec:	32 d1       	rcall	.+612    	; 0x1a52 <memset>
    17ee:	ce 01       	movw	r24, r28
    17f0:	df 91       	pop	r29
    17f2:	cf 91       	pop	r28
    17f4:	1f 91       	pop	r17
    17f6:	0f 91       	pop	r16
    17f8:	08 95       	ret

000017fa <malloc>:
    17fa:	0f 93       	push	r16
    17fc:	1f 93       	push	r17
    17fe:	cf 93       	push	r28
    1800:	df 93       	push	r29
    1802:	82 30       	cpi	r24, 0x02	; 2
    1804:	91 05       	cpc	r25, r1
    1806:	10 f4       	brcc	.+4      	; 0x180c <malloc+0x12>
    1808:	82 e0       	ldi	r24, 0x02	; 2
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	e0 91 64 04 	lds	r30, 0x0464	; 0x800464 <__flp>
    1810:	f0 91 65 04 	lds	r31, 0x0465	; 0x800465 <__flp+0x1>
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	a0 e0       	ldi	r26, 0x00	; 0
    181a:	b0 e0       	ldi	r27, 0x00	; 0
    181c:	30 97       	sbiw	r30, 0x00	; 0
    181e:	19 f1       	breq	.+70     	; 0x1866 <malloc+0x6c>
    1820:	40 81       	ld	r20, Z
    1822:	51 81       	ldd	r21, Z+1	; 0x01
    1824:	02 81       	ldd	r16, Z+2	; 0x02
    1826:	13 81       	ldd	r17, Z+3	; 0x03
    1828:	48 17       	cp	r20, r24
    182a:	59 07       	cpc	r21, r25
    182c:	c8 f0       	brcs	.+50     	; 0x1860 <malloc+0x66>
    182e:	84 17       	cp	r24, r20
    1830:	95 07       	cpc	r25, r21
    1832:	69 f4       	brne	.+26     	; 0x184e <malloc+0x54>
    1834:	10 97       	sbiw	r26, 0x00	; 0
    1836:	31 f0       	breq	.+12     	; 0x1844 <malloc+0x4a>
    1838:	12 96       	adiw	r26, 0x02	; 2
    183a:	0c 93       	st	X, r16
    183c:	12 97       	sbiw	r26, 0x02	; 2
    183e:	13 96       	adiw	r26, 0x03	; 3
    1840:	1c 93       	st	X, r17
    1842:	27 c0       	rjmp	.+78     	; 0x1892 <malloc+0x98>
    1844:	00 93 64 04 	sts	0x0464, r16	; 0x800464 <__flp>
    1848:	10 93 65 04 	sts	0x0465, r17	; 0x800465 <__flp+0x1>
    184c:	22 c0       	rjmp	.+68     	; 0x1892 <malloc+0x98>
    184e:	21 15       	cp	r18, r1
    1850:	31 05       	cpc	r19, r1
    1852:	19 f0       	breq	.+6      	; 0x185a <malloc+0x60>
    1854:	42 17       	cp	r20, r18
    1856:	53 07       	cpc	r21, r19
    1858:	18 f4       	brcc	.+6      	; 0x1860 <malloc+0x66>
    185a:	9a 01       	movw	r18, r20
    185c:	bd 01       	movw	r22, r26
    185e:	ef 01       	movw	r28, r30
    1860:	df 01       	movw	r26, r30
    1862:	f8 01       	movw	r30, r16
    1864:	db cf       	rjmp	.-74     	; 0x181c <malloc+0x22>
    1866:	21 15       	cp	r18, r1
    1868:	31 05       	cpc	r19, r1
    186a:	f9 f0       	breq	.+62     	; 0x18aa <malloc+0xb0>
    186c:	28 1b       	sub	r18, r24
    186e:	39 0b       	sbc	r19, r25
    1870:	24 30       	cpi	r18, 0x04	; 4
    1872:	31 05       	cpc	r19, r1
    1874:	80 f4       	brcc	.+32     	; 0x1896 <malloc+0x9c>
    1876:	8a 81       	ldd	r24, Y+2	; 0x02
    1878:	9b 81       	ldd	r25, Y+3	; 0x03
    187a:	61 15       	cp	r22, r1
    187c:	71 05       	cpc	r23, r1
    187e:	21 f0       	breq	.+8      	; 0x1888 <malloc+0x8e>
    1880:	fb 01       	movw	r30, r22
    1882:	93 83       	std	Z+3, r25	; 0x03
    1884:	82 83       	std	Z+2, r24	; 0x02
    1886:	04 c0       	rjmp	.+8      	; 0x1890 <malloc+0x96>
    1888:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <__flp+0x1>
    188c:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <__flp>
    1890:	fe 01       	movw	r30, r28
    1892:	32 96       	adiw	r30, 0x02	; 2
    1894:	44 c0       	rjmp	.+136    	; 0x191e <malloc+0x124>
    1896:	fe 01       	movw	r30, r28
    1898:	e2 0f       	add	r30, r18
    189a:	f3 1f       	adc	r31, r19
    189c:	81 93       	st	Z+, r24
    189e:	91 93       	st	Z+, r25
    18a0:	22 50       	subi	r18, 0x02	; 2
    18a2:	31 09       	sbc	r19, r1
    18a4:	39 83       	std	Y+1, r19	; 0x01
    18a6:	28 83       	st	Y, r18
    18a8:	3a c0       	rjmp	.+116    	; 0x191e <malloc+0x124>
    18aa:	20 91 62 04 	lds	r18, 0x0462	; 0x800462 <__brkval>
    18ae:	30 91 63 04 	lds	r19, 0x0463	; 0x800463 <__brkval+0x1>
    18b2:	23 2b       	or	r18, r19
    18b4:	41 f4       	brne	.+16     	; 0x18c6 <malloc+0xcc>
    18b6:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    18ba:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    18be:	30 93 63 04 	sts	0x0463, r19	; 0x800463 <__brkval+0x1>
    18c2:	20 93 62 04 	sts	0x0462, r18	; 0x800462 <__brkval>
    18c6:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    18ca:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    18ce:	21 15       	cp	r18, r1
    18d0:	31 05       	cpc	r19, r1
    18d2:	41 f4       	brne	.+16     	; 0x18e4 <malloc+0xea>
    18d4:	2d b7       	in	r18, 0x3d	; 61
    18d6:	3e b7       	in	r19, 0x3e	; 62
    18d8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    18dc:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    18e0:	24 1b       	sub	r18, r20
    18e2:	35 0b       	sbc	r19, r21
    18e4:	e0 91 62 04 	lds	r30, 0x0462	; 0x800462 <__brkval>
    18e8:	f0 91 63 04 	lds	r31, 0x0463	; 0x800463 <__brkval+0x1>
    18ec:	e2 17       	cp	r30, r18
    18ee:	f3 07       	cpc	r31, r19
    18f0:	a0 f4       	brcc	.+40     	; 0x191a <malloc+0x120>
    18f2:	2e 1b       	sub	r18, r30
    18f4:	3f 0b       	sbc	r19, r31
    18f6:	28 17       	cp	r18, r24
    18f8:	39 07       	cpc	r19, r25
    18fa:	78 f0       	brcs	.+30     	; 0x191a <malloc+0x120>
    18fc:	ac 01       	movw	r20, r24
    18fe:	4e 5f       	subi	r20, 0xFE	; 254
    1900:	5f 4f       	sbci	r21, 0xFF	; 255
    1902:	24 17       	cp	r18, r20
    1904:	35 07       	cpc	r19, r21
    1906:	48 f0       	brcs	.+18     	; 0x191a <malloc+0x120>
    1908:	4e 0f       	add	r20, r30
    190a:	5f 1f       	adc	r21, r31
    190c:	50 93 63 04 	sts	0x0463, r21	; 0x800463 <__brkval+0x1>
    1910:	40 93 62 04 	sts	0x0462, r20	; 0x800462 <__brkval>
    1914:	81 93       	st	Z+, r24
    1916:	91 93       	st	Z+, r25
    1918:	02 c0       	rjmp	.+4      	; 0x191e <malloc+0x124>
    191a:	e0 e0       	ldi	r30, 0x00	; 0
    191c:	f0 e0       	ldi	r31, 0x00	; 0
    191e:	cf 01       	movw	r24, r30
    1920:	df 91       	pop	r29
    1922:	cf 91       	pop	r28
    1924:	1f 91       	pop	r17
    1926:	0f 91       	pop	r16
    1928:	08 95       	ret

0000192a <free>:
    192a:	cf 93       	push	r28
    192c:	df 93       	push	r29
    192e:	00 97       	sbiw	r24, 0x00	; 0
    1930:	09 f4       	brne	.+2      	; 0x1934 <free+0xa>
    1932:	81 c0       	rjmp	.+258    	; 0x1a36 <free+0x10c>
    1934:	fc 01       	movw	r30, r24
    1936:	32 97       	sbiw	r30, 0x02	; 2
    1938:	13 82       	std	Z+3, r1	; 0x03
    193a:	12 82       	std	Z+2, r1	; 0x02
    193c:	a0 91 64 04 	lds	r26, 0x0464	; 0x800464 <__flp>
    1940:	b0 91 65 04 	lds	r27, 0x0465	; 0x800465 <__flp+0x1>
    1944:	10 97       	sbiw	r26, 0x00	; 0
    1946:	81 f4       	brne	.+32     	; 0x1968 <free+0x3e>
    1948:	20 81       	ld	r18, Z
    194a:	31 81       	ldd	r19, Z+1	; 0x01
    194c:	82 0f       	add	r24, r18
    194e:	93 1f       	adc	r25, r19
    1950:	20 91 62 04 	lds	r18, 0x0462	; 0x800462 <__brkval>
    1954:	30 91 63 04 	lds	r19, 0x0463	; 0x800463 <__brkval+0x1>
    1958:	28 17       	cp	r18, r24
    195a:	39 07       	cpc	r19, r25
    195c:	51 f5       	brne	.+84     	; 0x19b2 <free+0x88>
    195e:	f0 93 63 04 	sts	0x0463, r31	; 0x800463 <__brkval+0x1>
    1962:	e0 93 62 04 	sts	0x0462, r30	; 0x800462 <__brkval>
    1966:	67 c0       	rjmp	.+206    	; 0x1a36 <free+0x10c>
    1968:	ed 01       	movw	r28, r26
    196a:	20 e0       	ldi	r18, 0x00	; 0
    196c:	30 e0       	ldi	r19, 0x00	; 0
    196e:	ce 17       	cp	r28, r30
    1970:	df 07       	cpc	r29, r31
    1972:	40 f4       	brcc	.+16     	; 0x1984 <free+0x5a>
    1974:	4a 81       	ldd	r20, Y+2	; 0x02
    1976:	5b 81       	ldd	r21, Y+3	; 0x03
    1978:	9e 01       	movw	r18, r28
    197a:	41 15       	cp	r20, r1
    197c:	51 05       	cpc	r21, r1
    197e:	f1 f0       	breq	.+60     	; 0x19bc <free+0x92>
    1980:	ea 01       	movw	r28, r20
    1982:	f5 cf       	rjmp	.-22     	; 0x196e <free+0x44>
    1984:	d3 83       	std	Z+3, r29	; 0x03
    1986:	c2 83       	std	Z+2, r28	; 0x02
    1988:	40 81       	ld	r20, Z
    198a:	51 81       	ldd	r21, Z+1	; 0x01
    198c:	84 0f       	add	r24, r20
    198e:	95 1f       	adc	r25, r21
    1990:	c8 17       	cp	r28, r24
    1992:	d9 07       	cpc	r29, r25
    1994:	59 f4       	brne	.+22     	; 0x19ac <free+0x82>
    1996:	88 81       	ld	r24, Y
    1998:	99 81       	ldd	r25, Y+1	; 0x01
    199a:	84 0f       	add	r24, r20
    199c:	95 1f       	adc	r25, r21
    199e:	02 96       	adiw	r24, 0x02	; 2
    19a0:	91 83       	std	Z+1, r25	; 0x01
    19a2:	80 83       	st	Z, r24
    19a4:	8a 81       	ldd	r24, Y+2	; 0x02
    19a6:	9b 81       	ldd	r25, Y+3	; 0x03
    19a8:	93 83       	std	Z+3, r25	; 0x03
    19aa:	82 83       	std	Z+2, r24	; 0x02
    19ac:	21 15       	cp	r18, r1
    19ae:	31 05       	cpc	r19, r1
    19b0:	29 f4       	brne	.+10     	; 0x19bc <free+0x92>
    19b2:	f0 93 65 04 	sts	0x0465, r31	; 0x800465 <__flp+0x1>
    19b6:	e0 93 64 04 	sts	0x0464, r30	; 0x800464 <__flp>
    19ba:	3d c0       	rjmp	.+122    	; 0x1a36 <free+0x10c>
    19bc:	e9 01       	movw	r28, r18
    19be:	fb 83       	std	Y+3, r31	; 0x03
    19c0:	ea 83       	std	Y+2, r30	; 0x02
    19c2:	49 91       	ld	r20, Y+
    19c4:	59 91       	ld	r21, Y+
    19c6:	c4 0f       	add	r28, r20
    19c8:	d5 1f       	adc	r29, r21
    19ca:	ec 17       	cp	r30, r28
    19cc:	fd 07       	cpc	r31, r29
    19ce:	61 f4       	brne	.+24     	; 0x19e8 <free+0xbe>
    19d0:	80 81       	ld	r24, Z
    19d2:	91 81       	ldd	r25, Z+1	; 0x01
    19d4:	84 0f       	add	r24, r20
    19d6:	95 1f       	adc	r25, r21
    19d8:	02 96       	adiw	r24, 0x02	; 2
    19da:	e9 01       	movw	r28, r18
    19dc:	99 83       	std	Y+1, r25	; 0x01
    19de:	88 83       	st	Y, r24
    19e0:	82 81       	ldd	r24, Z+2	; 0x02
    19e2:	93 81       	ldd	r25, Z+3	; 0x03
    19e4:	9b 83       	std	Y+3, r25	; 0x03
    19e6:	8a 83       	std	Y+2, r24	; 0x02
    19e8:	e0 e0       	ldi	r30, 0x00	; 0
    19ea:	f0 e0       	ldi	r31, 0x00	; 0
    19ec:	12 96       	adiw	r26, 0x02	; 2
    19ee:	8d 91       	ld	r24, X+
    19f0:	9c 91       	ld	r25, X
    19f2:	13 97       	sbiw	r26, 0x03	; 3
    19f4:	00 97       	sbiw	r24, 0x00	; 0
    19f6:	19 f0       	breq	.+6      	; 0x19fe <free+0xd4>
    19f8:	fd 01       	movw	r30, r26
    19fa:	dc 01       	movw	r26, r24
    19fc:	f7 cf       	rjmp	.-18     	; 0x19ec <free+0xc2>
    19fe:	8d 91       	ld	r24, X+
    1a00:	9c 91       	ld	r25, X
    1a02:	11 97       	sbiw	r26, 0x01	; 1
    1a04:	9d 01       	movw	r18, r26
    1a06:	2e 5f       	subi	r18, 0xFE	; 254
    1a08:	3f 4f       	sbci	r19, 0xFF	; 255
    1a0a:	82 0f       	add	r24, r18
    1a0c:	93 1f       	adc	r25, r19
    1a0e:	20 91 62 04 	lds	r18, 0x0462	; 0x800462 <__brkval>
    1a12:	30 91 63 04 	lds	r19, 0x0463	; 0x800463 <__brkval+0x1>
    1a16:	28 17       	cp	r18, r24
    1a18:	39 07       	cpc	r19, r25
    1a1a:	69 f4       	brne	.+26     	; 0x1a36 <free+0x10c>
    1a1c:	30 97       	sbiw	r30, 0x00	; 0
    1a1e:	29 f4       	brne	.+10     	; 0x1a2a <free+0x100>
    1a20:	10 92 65 04 	sts	0x0465, r1	; 0x800465 <__flp+0x1>
    1a24:	10 92 64 04 	sts	0x0464, r1	; 0x800464 <__flp>
    1a28:	02 c0       	rjmp	.+4      	; 0x1a2e <free+0x104>
    1a2a:	13 82       	std	Z+3, r1	; 0x03
    1a2c:	12 82       	std	Z+2, r1	; 0x02
    1a2e:	b0 93 63 04 	sts	0x0463, r27	; 0x800463 <__brkval+0x1>
    1a32:	a0 93 62 04 	sts	0x0462, r26	; 0x800462 <__brkval>
    1a36:	df 91       	pop	r29
    1a38:	cf 91       	pop	r28
    1a3a:	08 95       	ret

00001a3c <strnlen_P>:
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	05 90       	lpm	r0, Z+
    1a40:	61 50       	subi	r22, 0x01	; 1
    1a42:	70 40       	sbci	r23, 0x00	; 0
    1a44:	01 10       	cpse	r0, r1
    1a46:	d8 f7       	brcc	.-10     	; 0x1a3e <strnlen_P+0x2>
    1a48:	80 95       	com	r24
    1a4a:	90 95       	com	r25
    1a4c:	8e 0f       	add	r24, r30
    1a4e:	9f 1f       	adc	r25, r31
    1a50:	08 95       	ret

00001a52 <memset>:
    1a52:	dc 01       	movw	r26, r24
    1a54:	01 c0       	rjmp	.+2      	; 0x1a58 <memset+0x6>
    1a56:	6d 93       	st	X+, r22
    1a58:	41 50       	subi	r20, 0x01	; 1
    1a5a:	50 40       	sbci	r21, 0x00	; 0
    1a5c:	e0 f7       	brcc	.-8      	; 0x1a56 <memset+0x4>
    1a5e:	08 95       	ret

00001a60 <strnlen>:
    1a60:	fc 01       	movw	r30, r24
    1a62:	61 50       	subi	r22, 0x01	; 1
    1a64:	70 40       	sbci	r23, 0x00	; 0
    1a66:	01 90       	ld	r0, Z+
    1a68:	01 10       	cpse	r0, r1
    1a6a:	d8 f7       	brcc	.-10     	; 0x1a62 <strnlen+0x2>
    1a6c:	80 95       	com	r24
    1a6e:	90 95       	com	r25
    1a70:	8e 0f       	add	r24, r30
    1a72:	9f 1f       	adc	r25, r31
    1a74:	08 95       	ret

00001a76 <strrev>:
    1a76:	dc 01       	movw	r26, r24
    1a78:	fc 01       	movw	r30, r24
    1a7a:	67 2f       	mov	r22, r23
    1a7c:	71 91       	ld	r23, Z+
    1a7e:	77 23       	and	r23, r23
    1a80:	e1 f7       	brne	.-8      	; 0x1a7a <strrev+0x4>
    1a82:	32 97       	sbiw	r30, 0x02	; 2
    1a84:	04 c0       	rjmp	.+8      	; 0x1a8e <strrev+0x18>
    1a86:	7c 91       	ld	r23, X
    1a88:	6d 93       	st	X+, r22
    1a8a:	70 83       	st	Z, r23
    1a8c:	62 91       	ld	r22, -Z
    1a8e:	ae 17       	cp	r26, r30
    1a90:	bf 07       	cpc	r27, r31
    1a92:	c8 f3       	brcs	.-14     	; 0x1a86 <strrev+0x10>
    1a94:	08 95       	ret

00001a96 <fputc>:
    1a96:	0f 93       	push	r16
    1a98:	1f 93       	push	r17
    1a9a:	cf 93       	push	r28
    1a9c:	df 93       	push	r29
    1a9e:	fb 01       	movw	r30, r22
    1aa0:	23 81       	ldd	r18, Z+3	; 0x03
    1aa2:	21 fd       	sbrc	r18, 1
    1aa4:	03 c0       	rjmp	.+6      	; 0x1aac <fputc+0x16>
    1aa6:	8f ef       	ldi	r24, 0xFF	; 255
    1aa8:	9f ef       	ldi	r25, 0xFF	; 255
    1aaa:	2c c0       	rjmp	.+88     	; 0x1b04 <fputc+0x6e>
    1aac:	22 ff       	sbrs	r18, 2
    1aae:	16 c0       	rjmp	.+44     	; 0x1adc <fputc+0x46>
    1ab0:	46 81       	ldd	r20, Z+6	; 0x06
    1ab2:	57 81       	ldd	r21, Z+7	; 0x07
    1ab4:	24 81       	ldd	r18, Z+4	; 0x04
    1ab6:	35 81       	ldd	r19, Z+5	; 0x05
    1ab8:	42 17       	cp	r20, r18
    1aba:	53 07       	cpc	r21, r19
    1abc:	44 f4       	brge	.+16     	; 0x1ace <fputc+0x38>
    1abe:	a0 81       	ld	r26, Z
    1ac0:	b1 81       	ldd	r27, Z+1	; 0x01
    1ac2:	9d 01       	movw	r18, r26
    1ac4:	2f 5f       	subi	r18, 0xFF	; 255
    1ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ac8:	31 83       	std	Z+1, r19	; 0x01
    1aca:	20 83       	st	Z, r18
    1acc:	8c 93       	st	X, r24
    1ace:	26 81       	ldd	r18, Z+6	; 0x06
    1ad0:	37 81       	ldd	r19, Z+7	; 0x07
    1ad2:	2f 5f       	subi	r18, 0xFF	; 255
    1ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad6:	37 83       	std	Z+7, r19	; 0x07
    1ad8:	26 83       	std	Z+6, r18	; 0x06
    1ada:	14 c0       	rjmp	.+40     	; 0x1b04 <fputc+0x6e>
    1adc:	8b 01       	movw	r16, r22
    1ade:	ec 01       	movw	r28, r24
    1ae0:	fb 01       	movw	r30, r22
    1ae2:	00 84       	ldd	r0, Z+8	; 0x08
    1ae4:	f1 85       	ldd	r31, Z+9	; 0x09
    1ae6:	e0 2d       	mov	r30, r0
    1ae8:	19 95       	eicall
    1aea:	89 2b       	or	r24, r25
    1aec:	e1 f6       	brne	.-72     	; 0x1aa6 <fputc+0x10>
    1aee:	d8 01       	movw	r26, r16
    1af0:	16 96       	adiw	r26, 0x06	; 6
    1af2:	8d 91       	ld	r24, X+
    1af4:	9c 91       	ld	r25, X
    1af6:	17 97       	sbiw	r26, 0x07	; 7
    1af8:	01 96       	adiw	r24, 0x01	; 1
    1afa:	17 96       	adiw	r26, 0x07	; 7
    1afc:	9c 93       	st	X, r25
    1afe:	8e 93       	st	-X, r24
    1b00:	16 97       	sbiw	r26, 0x06	; 6
    1b02:	ce 01       	movw	r24, r28
    1b04:	df 91       	pop	r29
    1b06:	cf 91       	pop	r28
    1b08:	1f 91       	pop	r17
    1b0a:	0f 91       	pop	r16
    1b0c:	08 95       	ret

00001b0e <__ultoa_invert>:
    1b0e:	fa 01       	movw	r30, r20
    1b10:	aa 27       	eor	r26, r26
    1b12:	28 30       	cpi	r18, 0x08	; 8
    1b14:	51 f1       	breq	.+84     	; 0x1b6a <__ultoa_invert+0x5c>
    1b16:	20 31       	cpi	r18, 0x10	; 16
    1b18:	81 f1       	breq	.+96     	; 0x1b7a <__ultoa_invert+0x6c>
    1b1a:	e8 94       	clt
    1b1c:	6f 93       	push	r22
    1b1e:	6e 7f       	andi	r22, 0xFE	; 254
    1b20:	6e 5f       	subi	r22, 0xFE	; 254
    1b22:	7f 4f       	sbci	r23, 0xFF	; 255
    1b24:	8f 4f       	sbci	r24, 0xFF	; 255
    1b26:	9f 4f       	sbci	r25, 0xFF	; 255
    1b28:	af 4f       	sbci	r26, 0xFF	; 255
    1b2a:	b1 e0       	ldi	r27, 0x01	; 1
    1b2c:	3e d0       	rcall	.+124    	; 0x1baa <__ultoa_invert+0x9c>
    1b2e:	b4 e0       	ldi	r27, 0x04	; 4
    1b30:	3c d0       	rcall	.+120    	; 0x1baa <__ultoa_invert+0x9c>
    1b32:	67 0f       	add	r22, r23
    1b34:	78 1f       	adc	r23, r24
    1b36:	89 1f       	adc	r24, r25
    1b38:	9a 1f       	adc	r25, r26
    1b3a:	a1 1d       	adc	r26, r1
    1b3c:	68 0f       	add	r22, r24
    1b3e:	79 1f       	adc	r23, r25
    1b40:	8a 1f       	adc	r24, r26
    1b42:	91 1d       	adc	r25, r1
    1b44:	a1 1d       	adc	r26, r1
    1b46:	6a 0f       	add	r22, r26
    1b48:	71 1d       	adc	r23, r1
    1b4a:	81 1d       	adc	r24, r1
    1b4c:	91 1d       	adc	r25, r1
    1b4e:	a1 1d       	adc	r26, r1
    1b50:	20 d0       	rcall	.+64     	; 0x1b92 <__ultoa_invert+0x84>
    1b52:	09 f4       	brne	.+2      	; 0x1b56 <__ultoa_invert+0x48>
    1b54:	68 94       	set
    1b56:	3f 91       	pop	r19
    1b58:	2a e0       	ldi	r18, 0x0A	; 10
    1b5a:	26 9f       	mul	r18, r22
    1b5c:	11 24       	eor	r1, r1
    1b5e:	30 19       	sub	r19, r0
    1b60:	30 5d       	subi	r19, 0xD0	; 208
    1b62:	31 93       	st	Z+, r19
    1b64:	de f6       	brtc	.-74     	; 0x1b1c <__ultoa_invert+0xe>
    1b66:	cf 01       	movw	r24, r30
    1b68:	08 95       	ret
    1b6a:	46 2f       	mov	r20, r22
    1b6c:	47 70       	andi	r20, 0x07	; 7
    1b6e:	40 5d       	subi	r20, 0xD0	; 208
    1b70:	41 93       	st	Z+, r20
    1b72:	b3 e0       	ldi	r27, 0x03	; 3
    1b74:	0f d0       	rcall	.+30     	; 0x1b94 <__ultoa_invert+0x86>
    1b76:	c9 f7       	brne	.-14     	; 0x1b6a <__ultoa_invert+0x5c>
    1b78:	f6 cf       	rjmp	.-20     	; 0x1b66 <__ultoa_invert+0x58>
    1b7a:	46 2f       	mov	r20, r22
    1b7c:	4f 70       	andi	r20, 0x0F	; 15
    1b7e:	40 5d       	subi	r20, 0xD0	; 208
    1b80:	4a 33       	cpi	r20, 0x3A	; 58
    1b82:	18 f0       	brcs	.+6      	; 0x1b8a <__ultoa_invert+0x7c>
    1b84:	49 5d       	subi	r20, 0xD9	; 217
    1b86:	31 fd       	sbrc	r19, 1
    1b88:	40 52       	subi	r20, 0x20	; 32
    1b8a:	41 93       	st	Z+, r20
    1b8c:	02 d0       	rcall	.+4      	; 0x1b92 <__ultoa_invert+0x84>
    1b8e:	a9 f7       	brne	.-22     	; 0x1b7a <__ultoa_invert+0x6c>
    1b90:	ea cf       	rjmp	.-44     	; 0x1b66 <__ultoa_invert+0x58>
    1b92:	b4 e0       	ldi	r27, 0x04	; 4
    1b94:	a6 95       	lsr	r26
    1b96:	97 95       	ror	r25
    1b98:	87 95       	ror	r24
    1b9a:	77 95       	ror	r23
    1b9c:	67 95       	ror	r22
    1b9e:	ba 95       	dec	r27
    1ba0:	c9 f7       	brne	.-14     	; 0x1b94 <__ultoa_invert+0x86>
    1ba2:	00 97       	sbiw	r24, 0x00	; 0
    1ba4:	61 05       	cpc	r22, r1
    1ba6:	71 05       	cpc	r23, r1
    1ba8:	08 95       	ret
    1baa:	9b 01       	movw	r18, r22
    1bac:	ac 01       	movw	r20, r24
    1bae:	0a 2e       	mov	r0, r26
    1bb0:	06 94       	lsr	r0
    1bb2:	57 95       	ror	r21
    1bb4:	47 95       	ror	r20
    1bb6:	37 95       	ror	r19
    1bb8:	27 95       	ror	r18
    1bba:	ba 95       	dec	r27
    1bbc:	c9 f7       	brne	.-14     	; 0x1bb0 <__ultoa_invert+0xa2>
    1bbe:	62 0f       	add	r22, r18
    1bc0:	73 1f       	adc	r23, r19
    1bc2:	84 1f       	adc	r24, r20
    1bc4:	95 1f       	adc	r25, r21
    1bc6:	a0 1d       	adc	r26, r0
    1bc8:	08 95       	ret

00001bca <_exit>:
    1bca:	f8 94       	cli

00001bcc <__stop_program>:
    1bcc:	ff cf       	rjmp	.-2      	; 0x1bcc <__stop_program>
