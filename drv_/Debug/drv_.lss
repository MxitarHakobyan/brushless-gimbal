
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000019a  00800200  00002a28  00002abc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a28  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007b  0080039a  0080039a  00002c56  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002c56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002cb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  00002cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003347  00000000  00000000  00002f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000188a  00000000  00000000  000062a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001546  00000000  00000000  00007b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007d8  00000000  00000000  00009074  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c73  00000000  00000000  0000984c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002376  00000000  00000000  0000a4bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000c835  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	07 c1       	rjmp	.+526    	; 0x254 <__bad_interrupt>
      46:	00 00       	nop
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 67 09 	jmp	0x12ce	; 0x12ce <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__bad_interrupt>
      66:	00 00       	nop
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 b1 09 	jmp	0x1362	; 0x1362 <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2240>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	e8 e2       	ldi	r30, 0x28	; 40
     22c:	fa e2       	ldi	r31, 0x2A	; 42
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	aa 39       	cpi	r26, 0x9A	; 154
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	aa e9       	ldi	r26, 0x9A	; 154
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	a5 31       	cpi	r26, 0x15	; 21
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	c5 d4       	rcall	.+2442   	; 0xbda <main>
     250:	0c 94 12 15 	jmp	0x2a24	; 0x2a24 <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
{
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     256:	e1 e0       	ldi	r30, 0x01	; 1
     258:	f1 e0       	ldi	r31, 0x01	; 1
     25a:	80 81       	ld	r24, Z
     25c:	88 60       	ori	r24, 0x08	; 8
     25e:	80 83       	st	Z, r24
     260:	80 81       	ld	r24, Z
     262:	80 61       	ori	r24, 0x10	; 16
     264:	80 83       	st	Z, r24
     266:	80 81       	ld	r24, Z
     268:	80 62       	ori	r24, 0x20	; 32
     26a:	80 83       	st	Z, r24
     26c:	08 95       	ret

0000026e <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     26e:	e0 91 9a 03 	lds	r30, 0x039A	; 0x80039a <__data_end>
     272:	f0 91 9b 03 	lds	r31, 0x039B	; 0x80039b <__data_end+0x1>
     276:	ea 5f       	subi	r30, 0xFA	; 250
     278:	fd 4f       	sbci	r31, 0xFD	; 253
     27a:	80 81       	ld	r24, Z
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     282:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     286:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step>
     28a:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step+0x1>
     28e:	ea 5f       	subi	r30, 0xFA	; 250
     290:	fd 4f       	sbci	r31, 0xFD	; 253
     292:	80 81       	ld	r24, Z
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     29a:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     29e:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step>
     2a2:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step+0x1>
     2a6:	ea 5f       	subi	r30, 0xFA	; 250
     2a8:	fd 4f       	sbci	r31, 0xFD	; 253
     2aa:	80 81       	ld	r24, Z
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     2b2:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     2b6:	60 91 a9 03 	lds	r22, 0x03A9	; 0x8003a9 <incr>
     2ba:	70 91 aa 03 	lds	r23, 0x03AA	; 0x8003aa <incr+0x1>
     2be:	40 91 9a 03 	lds	r20, 0x039A	; 0x80039a <__data_end>
     2c2:	50 91 9b 03 	lds	r21, 0x039B	; 0x80039b <__data_end+0x1>
     2c6:	46 0f       	add	r20, r22
     2c8:	57 1f       	adc	r21, r23
     2ca:	50 93 9b 03 	sts	0x039B, r21	; 0x80039b <__data_end+0x1>
     2ce:	40 93 9a 03 	sts	0x039A, r20	; 0x80039a <__data_end>
	V_step=V_step+incr;
     2d2:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     2d6:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     2da:	26 0f       	add	r18, r22
     2dc:	37 1f       	adc	r19, r23
     2de:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     2e2:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	W_step=W_step+incr;
     2e6:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     2ea:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     2ee:	86 0f       	add	r24, r22
     2f0:	97 1f       	adc	r25, r23
     2f2:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     2f6:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	if(U_step > SINE_TABLE_SZ)
     2fa:	49 36       	cpi	r20, 0x69	; 105
     2fc:	51 40       	sbci	r21, 0x01	; 1
     2fe:	2c f0       	brlt	.+10     	; 0x30a <PWM_update+0x9c>
	U_step = 0;
     300:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <__data_end+0x1>
     304:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <__data_end>
     308:	0c c0       	rjmp	.+24     	; 0x322 <PWM_update+0xb4>
	if(U_step < 0)
     30a:	40 91 9a 03 	lds	r20, 0x039A	; 0x80039a <__data_end>
     30e:	50 91 9b 03 	lds	r21, 0x039B	; 0x80039b <__data_end+0x1>
     312:	55 23       	and	r21, r21
     314:	34 f4       	brge	.+12     	; 0x322 <PWM_update+0xb4>
	U_step = SINE_TABLE_SZ;
     316:	48 e6       	ldi	r20, 0x68	; 104
     318:	51 e0       	ldi	r21, 0x01	; 1
     31a:	50 93 9b 03 	sts	0x039B, r21	; 0x80039b <__data_end+0x1>
     31e:	40 93 9a 03 	sts	0x039A, r20	; 0x80039a <__data_end>
	
	if(V_step > SINE_TABLE_SZ)
     322:	29 36       	cpi	r18, 0x69	; 105
     324:	31 40       	sbci	r19, 0x01	; 1
     326:	2c f0       	brlt	.+10     	; 0x332 <PWM_update+0xc4>
	V_step = 0;
     328:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step+0x1>
     32c:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step>
     330:	0c c0       	rjmp	.+24     	; 0x34a <PWM_update+0xdc>
	if(V_step < 0)
     332:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     336:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     33a:	33 23       	and	r19, r19
     33c:	34 f4       	brge	.+12     	; 0x34a <PWM_update+0xdc>
	V_step = SINE_TABLE_SZ;
     33e:	28 e6       	ldi	r18, 0x68	; 104
     340:	31 e0       	ldi	r19, 0x01	; 1
     342:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     346:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     34a:	89 36       	cpi	r24, 0x69	; 105
     34c:	91 40       	sbci	r25, 0x01	; 1
     34e:	2c f0       	brlt	.+10     	; 0x35a <PWM_update+0xec>
	W_step = 0;
     350:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step+0x1>
     354:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step>
     358:	0c c0       	rjmp	.+24     	; 0x372 <PWM_update+0x104>
	if(W_step < 0)
     35a:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     35e:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     362:	99 23       	and	r25, r25
     364:	34 f4       	brge	.+12     	; 0x372 <PWM_update+0x104>
	W_step = SINE_TABLE_SZ;
     366:	88 e6       	ldi	r24, 0x68	; 104
     368:	91 e0       	ldi	r25, 0x01	; 1
     36a:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     36e:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     372:	80 91 a5 03 	lds	r24, 0x03A5	; 0x8003a5 <pwm_delay>
     376:	90 91 a6 03 	lds	r25, 0x03A6	; 0x8003a6 <pwm_delay+0x1>
     37a:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     37e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     382:	08 95       	ret

00000384 <init_motor_gpio>:
}
void init_motor_gpio()
{
	//setting pin mode to output
	sbi(DDRA,0);//digital 22 EN1
     384:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     386:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     388:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     38a:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     38c:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     38e:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     390:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     392:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     394:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     396:	47 9a       	sbi	0x08, 7	; 8
     398:	08 95       	ret

0000039a <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     39a:	4f 92       	push	r4
     39c:	5f 92       	push	r5
     39e:	6f 92       	push	r6
     3a0:	7f 92       	push	r7
     3a2:	8f 92       	push	r8
     3a4:	9f 92       	push	r9
     3a6:	af 92       	push	r10
     3a8:	bf 92       	push	r11
     3aa:	cf 92       	push	r12
     3ac:	df 92       	push	r13
     3ae:	ef 92       	push	r14
     3b0:	ff 92       	push	r15
     3b2:	0f 93       	push	r16
     3b4:	1f 93       	push	r17
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	cd b7       	in	r28, 0x3d	; 61
     3bc:	de b7       	in	r29, 0x3e	; 62
     3be:	6c 97       	sbiw	r28, 0x1c	; 28
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	de bf       	out	0x3e, r29	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	cd bf       	out	0x3d, r28	; 61
     3ca:	69 8b       	std	Y+17, r22	; 0x11
     3cc:	7a 8b       	std	Y+18, r23	; 0x12
     3ce:	8b 8b       	std	Y+19, r24	; 0x13
     3d0:	9c 8b       	std	Y+20, r25	; 0x14
     3d2:	ca 01       	movw	r24, r20
     3d4:	b9 01       	movw	r22, r18
     3d6:	e9 82       	std	Y+1, r14	; 0x01
     3d8:	fa 82       	std	Y+2, r15	; 0x02
     3da:	0b 83       	std	Y+3, r16	; 0x03
     3dc:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     3de:	c0 90 b7 03 	lds	r12, 0x03B7	; 0x8003b7 <bias>
     3e2:	d0 90 b8 03 	lds	r13, 0x03B8	; 0x8003b8 <bias+0x1>
     3e6:	e0 90 b9 03 	lds	r14, 0x03B9	; 0x8003b9 <bias+0x2>
     3ea:	f0 90 ba 03 	lds	r15, 0x03BA	; 0x8003ba <bias+0x3>
     3ee:	a7 01       	movw	r20, r14
     3f0:	96 01       	movw	r18, r12
     3f2:	0e 94 01 0b 	call	0x1602	; 0x1602 <__subsf3>
     3f6:	60 93 af 03 	sts	0x03AF, r22	; 0x8003af <rate>
     3fa:	70 93 b0 03 	sts	0x03B0, r23	; 0x8003b0 <rate+0x1>
     3fe:	80 93 b1 03 	sts	0x03B1, r24	; 0x8003b1 <rate+0x2>
     402:	90 93 b2 03 	sts	0x03B2, r25	; 0x8003b2 <rate+0x3>
	angle += dt * rate;
     406:	29 81       	ldd	r18, Y+1	; 0x01
     408:	3a 81       	ldd	r19, Y+2	; 0x02
     40a:	4b 81       	ldd	r20, Y+3	; 0x03
     40c:	5c 81       	ldd	r21, Y+4	; 0x04
     40e:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     412:	20 91 db 03 	lds	r18, 0x03DB	; 0x8003db <angle>
     416:	30 91 dc 03 	lds	r19, 0x03DC	; 0x8003dc <angle+0x1>
     41a:	40 91 dd 03 	lds	r20, 0x03DD	; 0x8003dd <angle+0x2>
     41e:	50 91 de 03 	lds	r21, 0x03DE	; 0x8003de <angle+0x3>
     422:	0e 94 02 0b 	call	0x1604	; 0x1604 <__addsf3>
     426:	6d 8b       	std	Y+21, r22	; 0x15
     428:	7e 8b       	std	Y+22, r23	; 0x16
     42a:	8f 8b       	std	Y+23, r24	; 0x17
     42c:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     42e:	07 ee       	ldi	r16, 0xE7	; 231
     430:	13 e0       	ldi	r17, 0x03	; 3
     432:	d8 01       	movw	r26, r16
     434:	1c 96       	adiw	r26, 0x0c	; 12
     436:	8d 90       	ld	r8, X+
     438:	9d 90       	ld	r9, X+
     43a:	ad 90       	ld	r10, X+
     43c:	bc 90       	ld	r11, X
     43e:	1f 97       	sbiw	r26, 0x0f	; 15
     440:	29 81       	ldd	r18, Y+1	; 0x01
     442:	3a 81       	ldd	r19, Y+2	; 0x02
     444:	4b 81       	ldd	r20, Y+3	; 0x03
     446:	5c 81       	ldd	r21, Y+4	; 0x04
     448:	c5 01       	movw	r24, r10
     44a:	b4 01       	movw	r22, r8
     44c:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     450:	6d 83       	std	Y+5, r22	; 0x05
     452:	7e 83       	std	Y+6, r23	; 0x06
     454:	8f 83       	std	Y+7, r24	; 0x07
     456:	98 87       	std	Y+8, r25	; 0x08
     458:	f8 01       	movw	r30, r16
     45a:	44 80       	ldd	r4, Z+4	; 0x04
     45c:	55 80       	ldd	r5, Z+5	; 0x05
     45e:	66 80       	ldd	r6, Z+6	; 0x06
     460:	77 80       	ldd	r7, Z+7	; 0x07
     462:	80 85       	ldd	r24, Z+8	; 0x08
     464:	91 85       	ldd	r25, Z+9	; 0x09
     466:	a2 85       	ldd	r26, Z+10	; 0x0a
     468:	b3 85       	ldd	r27, Z+11	; 0x0b
     46a:	8d 87       	std	Y+13, r24	; 0x0d
     46c:	9e 87       	std	Y+14, r25	; 0x0e
     46e:	af 87       	std	Y+15, r26	; 0x0f
     470:	b8 8b       	std	Y+16, r27	; 0x10
     472:	a3 01       	movw	r20, r6
     474:	92 01       	movw	r18, r4
     476:	6d 81       	ldd	r22, Y+5	; 0x05
     478:	7e 81       	ldd	r23, Y+6	; 0x06
     47a:	8f 81       	ldd	r24, Y+7	; 0x07
     47c:	98 85       	ldd	r25, Y+8	; 0x08
     47e:	0e 94 01 0b 	call	0x1602	; 0x1602 <__subsf3>
     482:	2d 85       	ldd	r18, Y+13	; 0x0d
     484:	3e 85       	ldd	r19, Y+14	; 0x0e
     486:	4f 85       	ldd	r20, Y+15	; 0x0f
     488:	58 89       	ldd	r21, Y+16	; 0x10
     48a:	0e 94 01 0b 	call	0x1602	; 0x1602 <__subsf3>
     48e:	20 91 b3 03 	lds	r18, 0x03B3	; 0x8003b3 <Q_angle>
     492:	30 91 b4 03 	lds	r19, 0x03B4	; 0x8003b4 <Q_angle+0x1>
     496:	40 91 b5 03 	lds	r20, 0x03B5	; 0x8003b5 <Q_angle+0x2>
     49a:	50 91 b6 03 	lds	r21, 0x03B6	; 0x8003b6 <Q_angle+0x3>
     49e:	0e 94 02 0b 	call	0x1604	; 0x1604 <__addsf3>
     4a2:	29 81       	ldd	r18, Y+1	; 0x01
     4a4:	3a 81       	ldd	r19, Y+2	; 0x02
     4a6:	4b 81       	ldd	r20, Y+3	; 0x03
     4a8:	5c 81       	ldd	r21, Y+4	; 0x04
     4aa:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     4ae:	f8 01       	movw	r30, r16
     4b0:	20 81       	ld	r18, Z
     4b2:	31 81       	ldd	r19, Z+1	; 0x01
     4b4:	42 81       	ldd	r20, Z+2	; 0x02
     4b6:	53 81       	ldd	r21, Z+3	; 0x03
     4b8:	0e 94 02 0b 	call	0x1604	; 0x1604 <__addsf3>
     4bc:	69 87       	std	Y+9, r22	; 0x09
     4be:	7a 87       	std	Y+10, r23	; 0x0a
     4c0:	8b 87       	std	Y+11, r24	; 0x0b
     4c2:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     4c4:	2d 81       	ldd	r18, Y+5	; 0x05
     4c6:	3e 81       	ldd	r19, Y+6	; 0x06
     4c8:	4f 81       	ldd	r20, Y+7	; 0x07
     4ca:	58 85       	ldd	r21, Y+8	; 0x08
     4cc:	c3 01       	movw	r24, r6
     4ce:	b2 01       	movw	r22, r4
     4d0:	0e 94 01 0b 	call	0x1602	; 0x1602 <__subsf3>
     4d4:	2b 01       	movw	r4, r22
     4d6:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     4d8:	2d 81       	ldd	r18, Y+5	; 0x05
     4da:	3e 81       	ldd	r19, Y+6	; 0x06
     4dc:	4f 81       	ldd	r20, Y+7	; 0x07
     4de:	58 85       	ldd	r21, Y+8	; 0x08
     4e0:	6d 85       	ldd	r22, Y+13	; 0x0d
     4e2:	7e 85       	ldd	r23, Y+14	; 0x0e
     4e4:	8f 85       	ldd	r24, Y+15	; 0x0f
     4e6:	98 89       	ldd	r25, Y+16	; 0x10
     4e8:	0e 94 01 0b 	call	0x1602	; 0x1602 <__subsf3>
     4ec:	6d 87       	std	Y+13, r22	; 0x0d
     4ee:	7e 87       	std	Y+14, r23	; 0x0e
     4f0:	8f 87       	std	Y+15, r24	; 0x0f
     4f2:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     4f4:	20 91 ab 03 	lds	r18, 0x03AB	; 0x8003ab <Q_bias>
     4f8:	30 91 ac 03 	lds	r19, 0x03AC	; 0x8003ac <Q_bias+0x1>
     4fc:	40 91 ad 03 	lds	r20, 0x03AD	; 0x8003ad <Q_bias+0x2>
     500:	50 91 ae 03 	lds	r21, 0x03AE	; 0x8003ae <Q_bias+0x3>
     504:	69 81       	ldd	r22, Y+1	; 0x01
     506:	7a 81       	ldd	r23, Y+2	; 0x02
     508:	8b 81       	ldd	r24, Y+3	; 0x03
     50a:	9c 81       	ldd	r25, Y+4	; 0x04
     50c:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     510:	9b 01       	movw	r18, r22
     512:	ac 01       	movw	r20, r24
     514:	c5 01       	movw	r24, r10
     516:	b4 01       	movw	r22, r8
     518:	0e 94 02 0b 	call	0x1604	; 0x1604 <__addsf3>
     51c:	69 8f       	std	Y+25, r22	; 0x19
     51e:	7a 8f       	std	Y+26, r23	; 0x1a
     520:	8b 8f       	std	Y+27, r24	; 0x1b
     522:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     524:	20 91 d3 03 	lds	r18, 0x03D3	; 0x8003d3 <R_measure>
     528:	30 91 d4 03 	lds	r19, 0x03D4	; 0x8003d4 <R_measure+0x1>
     52c:	40 91 d5 03 	lds	r20, 0x03D5	; 0x8003d5 <R_measure+0x2>
     530:	50 91 d6 03 	lds	r21, 0x03D6	; 0x8003d6 <R_measure+0x3>
     534:	69 85       	ldd	r22, Y+9	; 0x09
     536:	7a 85       	ldd	r23, Y+10	; 0x0a
     538:	8b 85       	ldd	r24, Y+11	; 0x0b
     53a:	9c 85       	ldd	r25, Y+12	; 0x0c
     53c:	0e 94 02 0b 	call	0x1604	; 0x1604 <__addsf3>
     540:	4b 01       	movw	r8, r22
     542:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     544:	9b 01       	movw	r18, r22
     546:	ac 01       	movw	r20, r24
     548:	69 85       	ldd	r22, Y+9	; 0x09
     54a:	7a 85       	ldd	r23, Y+10	; 0x0a
     54c:	8b 85       	ldd	r24, Y+11	; 0x0b
     54e:	9c 85       	ldd	r25, Y+12	; 0x0c
     550:	0e 94 cc 0b 	call	0x1798	; 0x1798 <__divsf3>
     554:	69 83       	std	Y+1, r22	; 0x01
     556:	7a 83       	std	Y+2, r23	; 0x02
     558:	8b 83       	std	Y+3, r24	; 0x03
     55a:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     55c:	a5 01       	movw	r20, r10
     55e:	94 01       	movw	r18, r8
     560:	6d 85       	ldd	r22, Y+13	; 0x0d
     562:	7e 85       	ldd	r23, Y+14	; 0x0e
     564:	8f 85       	ldd	r24, Y+15	; 0x0f
     566:	98 89       	ldd	r25, Y+16	; 0x10
     568:	0e 94 cc 0b 	call	0x1798	; 0x1798 <__divsf3>
     56c:	6d 83       	std	Y+5, r22	; 0x05
     56e:	7e 83       	std	Y+6, r23	; 0x06
     570:	8f 83       	std	Y+7, r24	; 0x07
     572:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     574:	2d 89       	ldd	r18, Y+21	; 0x15
     576:	3e 89       	ldd	r19, Y+22	; 0x16
     578:	4f 89       	ldd	r20, Y+23	; 0x17
     57a:	58 8d       	ldd	r21, Y+24	; 0x18
     57c:	69 89       	ldd	r22, Y+17	; 0x11
     57e:	7a 89       	ldd	r23, Y+18	; 0x12
     580:	8b 89       	ldd	r24, Y+19	; 0x13
     582:	9c 89       	ldd	r25, Y+20	; 0x14
     584:	0e 94 01 0b 	call	0x1602	; 0x1602 <__subsf3>
     588:	69 8b       	std	Y+17, r22	; 0x11
     58a:	7a 8b       	std	Y+18, r23	; 0x12
     58c:	8b 8b       	std	Y+19, r24	; 0x13
     58e:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     590:	9b 01       	movw	r18, r22
     592:	ac 01       	movw	r20, r24
     594:	69 81       	ldd	r22, Y+1	; 0x01
     596:	7a 81       	ldd	r23, Y+2	; 0x02
     598:	8b 81       	ldd	r24, Y+3	; 0x03
     59a:	9c 81       	ldd	r25, Y+4	; 0x04
     59c:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     5a0:	9b 01       	movw	r18, r22
     5a2:	ac 01       	movw	r20, r24
     5a4:	6d 89       	ldd	r22, Y+21	; 0x15
     5a6:	7e 89       	ldd	r23, Y+22	; 0x16
     5a8:	8f 89       	ldd	r24, Y+23	; 0x17
     5aa:	98 8d       	ldd	r25, Y+24	; 0x18
     5ac:	0e 94 02 0b 	call	0x1604	; 0x1604 <__addsf3>
     5b0:	4b 01       	movw	r8, r22
     5b2:	5c 01       	movw	r10, r24
     5b4:	60 93 db 03 	sts	0x03DB, r22	; 0x8003db <angle>
     5b8:	70 93 dc 03 	sts	0x03DC, r23	; 0x8003dc <angle+0x1>
     5bc:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <angle+0x2>
     5c0:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <angle+0x3>
	bias += K[1] * y;
     5c4:	29 89       	ldd	r18, Y+17	; 0x11
     5c6:	3a 89       	ldd	r19, Y+18	; 0x12
     5c8:	4b 89       	ldd	r20, Y+19	; 0x13
     5ca:	5c 89       	ldd	r21, Y+20	; 0x14
     5cc:	6d 81       	ldd	r22, Y+5	; 0x05
     5ce:	7e 81       	ldd	r23, Y+6	; 0x06
     5d0:	8f 81       	ldd	r24, Y+7	; 0x07
     5d2:	98 85       	ldd	r25, Y+8	; 0x08
     5d4:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     5d8:	9b 01       	movw	r18, r22
     5da:	ac 01       	movw	r20, r24
     5dc:	c7 01       	movw	r24, r14
     5de:	b6 01       	movw	r22, r12
     5e0:	0e 94 02 0b 	call	0x1604	; 0x1604 <__addsf3>
     5e4:	60 93 b7 03 	sts	0x03B7, r22	; 0x8003b7 <bias>
     5e8:	70 93 b8 03 	sts	0x03B8, r23	; 0x8003b8 <bias+0x1>
     5ec:	80 93 b9 03 	sts	0x03B9, r24	; 0x8003b9 <bias+0x2>
     5f0:	90 93 ba 03 	sts	0x03BA, r25	; 0x8003ba <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     5f4:	29 81       	ldd	r18, Y+1	; 0x01
     5f6:	3a 81       	ldd	r19, Y+2	; 0x02
     5f8:	4b 81       	ldd	r20, Y+3	; 0x03
     5fa:	5c 81       	ldd	r21, Y+4	; 0x04
     5fc:	69 85       	ldd	r22, Y+9	; 0x09
     5fe:	7a 85       	ldd	r23, Y+10	; 0x0a
     600:	8b 85       	ldd	r24, Y+11	; 0x0b
     602:	9c 85       	ldd	r25, Y+12	; 0x0c
     604:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     608:	9b 01       	movw	r18, r22
     60a:	ac 01       	movw	r20, r24
     60c:	69 85       	ldd	r22, Y+9	; 0x09
     60e:	7a 85       	ldd	r23, Y+10	; 0x0a
     610:	8b 85       	ldd	r24, Y+11	; 0x0b
     612:	9c 85       	ldd	r25, Y+12	; 0x0c
     614:	f6 d7       	rcall	.+4076   	; 0x1602 <__subsf3>
     616:	d8 01       	movw	r26, r16
     618:	6d 93       	st	X+, r22
     61a:	7d 93       	st	X+, r23
     61c:	8d 93       	st	X+, r24
     61e:	9c 93       	st	X, r25
     620:	13 97       	sbiw	r26, 0x03	; 3
	P[0][1] -= K[0] * P01_temp;
     622:	29 81       	ldd	r18, Y+1	; 0x01
     624:	3a 81       	ldd	r19, Y+2	; 0x02
     626:	4b 81       	ldd	r20, Y+3	; 0x03
     628:	5c 81       	ldd	r21, Y+4	; 0x04
     62a:	c3 01       	movw	r24, r6
     62c:	b2 01       	movw	r22, r4
     62e:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     632:	9b 01       	movw	r18, r22
     634:	ac 01       	movw	r20, r24
     636:	c3 01       	movw	r24, r6
     638:	b2 01       	movw	r22, r4
     63a:	e3 d7       	rcall	.+4038   	; 0x1602 <__subsf3>
     63c:	f8 01       	movw	r30, r16
     63e:	64 83       	std	Z+4, r22	; 0x04
     640:	75 83       	std	Z+5, r23	; 0x05
     642:	86 83       	std	Z+6, r24	; 0x06
     644:	97 83       	std	Z+7, r25	; 0x07
	P[1][0] -= K[1] * P00_temp;
     646:	2d 81       	ldd	r18, Y+5	; 0x05
     648:	3e 81       	ldd	r19, Y+6	; 0x06
     64a:	4f 81       	ldd	r20, Y+7	; 0x07
     64c:	58 85       	ldd	r21, Y+8	; 0x08
     64e:	69 85       	ldd	r22, Y+9	; 0x09
     650:	7a 85       	ldd	r23, Y+10	; 0x0a
     652:	8b 85       	ldd	r24, Y+11	; 0x0b
     654:	9c 85       	ldd	r25, Y+12	; 0x0c
     656:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     65a:	9b 01       	movw	r18, r22
     65c:	ac 01       	movw	r20, r24
     65e:	6d 85       	ldd	r22, Y+13	; 0x0d
     660:	7e 85       	ldd	r23, Y+14	; 0x0e
     662:	8f 85       	ldd	r24, Y+15	; 0x0f
     664:	98 89       	ldd	r25, Y+16	; 0x10
     666:	cd d7       	rcall	.+3994   	; 0x1602 <__subsf3>
     668:	d8 01       	movw	r26, r16
     66a:	18 96       	adiw	r26, 0x08	; 8
     66c:	6d 93       	st	X+, r22
     66e:	7d 93       	st	X+, r23
     670:	8d 93       	st	X+, r24
     672:	9c 93       	st	X, r25
     674:	1b 97       	sbiw	r26, 0x0b	; 11
	P[1][1] -= K[1] * P01_temp;
     676:	2d 81       	ldd	r18, Y+5	; 0x05
     678:	3e 81       	ldd	r19, Y+6	; 0x06
     67a:	4f 81       	ldd	r20, Y+7	; 0x07
     67c:	58 85       	ldd	r21, Y+8	; 0x08
     67e:	c3 01       	movw	r24, r6
     680:	b2 01       	movw	r22, r4
     682:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     686:	9b 01       	movw	r18, r22
     688:	ac 01       	movw	r20, r24
     68a:	69 8d       	ldd	r22, Y+25	; 0x19
     68c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     68e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     690:	9c 8d       	ldd	r25, Y+28	; 0x1c
     692:	b7 d7       	rcall	.+3950   	; 0x1602 <__subsf3>
     694:	f8 01       	movw	r30, r16
     696:	64 87       	std	Z+12, r22	; 0x0c
     698:	75 87       	std	Z+13, r23	; 0x0d
     69a:	86 87       	std	Z+14, r24	; 0x0e
     69c:	97 87       	std	Z+15, r25	; 0x0f

	return angle;
};
     69e:	c5 01       	movw	r24, r10
     6a0:	b4 01       	movw	r22, r8
     6a2:	6c 96       	adiw	r28, 0x1c	; 28
     6a4:	0f b6       	in	r0, 0x3f	; 63
     6a6:	f8 94       	cli
     6a8:	de bf       	out	0x3e, r29	; 62
     6aa:	0f be       	out	0x3f, r0	; 63
     6ac:	cd bf       	out	0x3d, r28	; 61
     6ae:	df 91       	pop	r29
     6b0:	cf 91       	pop	r28
     6b2:	1f 91       	pop	r17
     6b4:	0f 91       	pop	r16
     6b6:	ff 90       	pop	r15
     6b8:	ef 90       	pop	r14
     6ba:	df 90       	pop	r13
     6bc:	cf 90       	pop	r12
     6be:	bf 90       	pop	r11
     6c0:	af 90       	pop	r10
     6c2:	9f 90       	pop	r9
     6c4:	8f 90       	pop	r8
     6c6:	7f 90       	pop	r7
     6c8:	6f 90       	pop	r6
     6ca:	5f 90       	pop	r5
     6cc:	4f 90       	pop	r4
     6ce:	08 95       	ret

000006d0 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     6d0:	8f e6       	ldi	r24, 0x6F	; 111
     6d2:	92 e1       	ldi	r25, 0x12	; 18
     6d4:	a3 e8       	ldi	r26, 0x83	; 131
     6d6:	ba e3       	ldi	r27, 0x3A	; 58
     6d8:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <Q_angle>
     6dc:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <Q_angle+0x1>
     6e0:	a0 93 b5 03 	sts	0x03B5, r26	; 0x8003b5 <Q_angle+0x2>
     6e4:	b0 93 b6 03 	sts	0x03B6, r27	; 0x8003b6 <Q_angle+0x3>
	Q_bias = 0.003f;
     6e8:	86 ea       	ldi	r24, 0xA6	; 166
     6ea:	9b e9       	ldi	r25, 0x9B	; 155
     6ec:	a4 e4       	ldi	r26, 0x44	; 68
     6ee:	bb e3       	ldi	r27, 0x3B	; 59
     6f0:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <Q_bias>
     6f4:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <Q_bias+0x1>
     6f8:	a0 93 ad 03 	sts	0x03AD, r26	; 0x8003ad <Q_bias+0x2>
     6fc:	b0 93 ae 03 	sts	0x03AE, r27	; 0x8003ae <Q_bias+0x3>
	R_measure = 0.03f;
     700:	8f e8       	ldi	r24, 0x8F	; 143
     702:	92 ec       	ldi	r25, 0xC2	; 194
     704:	a5 ef       	ldi	r26, 0xF5	; 245
     706:	bc e3       	ldi	r27, 0x3C	; 60
     708:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <R_measure>
     70c:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <R_measure+0x1>
     710:	a0 93 d5 03 	sts	0x03D5, r26	; 0x8003d5 <R_measure+0x2>
     714:	b0 93 d6 03 	sts	0x03D6, r27	; 0x8003d6 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     718:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <angle>
     71c:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <angle+0x1>
     720:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <angle+0x2>
     724:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <angle+0x3>
	bias = 0.0f; // Reset bias
     728:	10 92 b7 03 	sts	0x03B7, r1	; 0x8003b7 <bias>
     72c:	10 92 b8 03 	sts	0x03B8, r1	; 0x8003b8 <bias+0x1>
     730:	10 92 b9 03 	sts	0x03B9, r1	; 0x8003b9 <bias+0x2>
     734:	10 92 ba 03 	sts	0x03BA, r1	; 0x8003ba <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     738:	e7 ee       	ldi	r30, 0xE7	; 231
     73a:	f3 e0       	ldi	r31, 0x03	; 3
     73c:	10 82       	st	Z, r1
     73e:	11 82       	std	Z+1, r1	; 0x01
     740:	12 82       	std	Z+2, r1	; 0x02
     742:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     744:	14 82       	std	Z+4, r1	; 0x04
     746:	15 82       	std	Z+5, r1	; 0x05
     748:	16 82       	std	Z+6, r1	; 0x06
     74a:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     74c:	10 86       	std	Z+8, r1	; 0x08
     74e:	11 86       	std	Z+9, r1	; 0x09
     750:	12 86       	std	Z+10, r1	; 0x0a
     752:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     754:	14 86       	std	Z+12, r1	; 0x0c
     756:	15 86       	std	Z+13, r1	; 0x0d
     758:	16 86       	std	Z+14, r1	; 0x0e
     75a:	17 86       	std	Z+15, r1	; 0x0f
     75c:	08 95       	ret

0000075e <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     75e:	4f 92       	push	r4
     760:	5f 92       	push	r5
     762:	6f 92       	push	r6
     764:	7f 92       	push	r7
     766:	8f 92       	push	r8
     768:	9f 92       	push	r9
     76a:	af 92       	push	r10
     76c:	bf 92       	push	r11
     76e:	cf 92       	push	r12
     770:	df 92       	push	r13
     772:	ef 92       	push	r14
     774:	ff 92       	push	r15
     776:	0f 93       	push	r16
     778:	1f 93       	push	r17
     77a:	cf 93       	push	r28
     77c:	df 93       	push	r29
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	6c 97       	sbiw	r28, 0x1c	; 28
     784:	0f b6       	in	r0, 0x3f	; 63
     786:	f8 94       	cli
     788:	de bf       	out	0x3e, r29	; 62
     78a:	0f be       	out	0x3f, r0	; 63
     78c:	cd bf       	out	0x3d, r28	; 61
     78e:	69 8b       	std	Y+17, r22	; 0x11
     790:	7a 8b       	std	Y+18, r23	; 0x12
     792:	8b 8b       	std	Y+19, r24	; 0x13
     794:	9c 8b       	std	Y+20, r25	; 0x14
     796:	ca 01       	movw	r24, r20
     798:	b9 01       	movw	r22, r18
     79a:	e9 82       	std	Y+1, r14	; 0x01
     79c:	fa 82       	std	Y+2, r15	; 0x02
     79e:	0b 83       	std	Y+3, r16	; 0x03
     7a0:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     7a2:	c0 90 d7 03 	lds	r12, 0x03D7	; 0x8003d7 <bias_1>
     7a6:	d0 90 d8 03 	lds	r13, 0x03D8	; 0x8003d8 <bias_1+0x1>
     7aa:	e0 90 d9 03 	lds	r14, 0x03D9	; 0x8003d9 <bias_1+0x2>
     7ae:	f0 90 da 03 	lds	r15, 0x03DA	; 0x8003da <bias_1+0x3>
     7b2:	a7 01       	movw	r20, r14
     7b4:	96 01       	movw	r18, r12
     7b6:	25 d7       	rcall	.+3658   	; 0x1602 <__subsf3>
     7b8:	60 93 cf 03 	sts	0x03CF, r22	; 0x8003cf <rate_1>
     7bc:	70 93 d0 03 	sts	0x03D0, r23	; 0x8003d0 <rate_1+0x1>
     7c0:	80 93 d1 03 	sts	0x03D1, r24	; 0x8003d1 <rate_1+0x2>
     7c4:	90 93 d2 03 	sts	0x03D2, r25	; 0x8003d2 <rate_1+0x3>
	angle_1 += dt * rate_1;
     7c8:	29 81       	ldd	r18, Y+1	; 0x01
     7ca:	3a 81       	ldd	r19, Y+2	; 0x02
     7cc:	4b 81       	ldd	r20, Y+3	; 0x03
     7ce:	5c 81       	ldd	r21, Y+4	; 0x04
     7d0:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     7d4:	20 91 bb 03 	lds	r18, 0x03BB	; 0x8003bb <angle_1>
     7d8:	30 91 bc 03 	lds	r19, 0x03BC	; 0x8003bc <angle_1+0x1>
     7dc:	40 91 bd 03 	lds	r20, 0x03BD	; 0x8003bd <angle_1+0x2>
     7e0:	50 91 be 03 	lds	r21, 0x03BE	; 0x8003be <angle_1+0x3>
     7e4:	0f d7       	rcall	.+3614   	; 0x1604 <__addsf3>
     7e6:	6d 8b       	std	Y+21, r22	; 0x15
     7e8:	7e 8b       	std	Y+22, r23	; 0x16
     7ea:	8f 8b       	std	Y+23, r24	; 0x17
     7ec:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     7ee:	0f eb       	ldi	r16, 0xBF	; 191
     7f0:	13 e0       	ldi	r17, 0x03	; 3
     7f2:	d8 01       	movw	r26, r16
     7f4:	1c 96       	adiw	r26, 0x0c	; 12
     7f6:	8d 90       	ld	r8, X+
     7f8:	9d 90       	ld	r9, X+
     7fa:	ad 90       	ld	r10, X+
     7fc:	bc 90       	ld	r11, X
     7fe:	1f 97       	sbiw	r26, 0x0f	; 15
     800:	29 81       	ldd	r18, Y+1	; 0x01
     802:	3a 81       	ldd	r19, Y+2	; 0x02
     804:	4b 81       	ldd	r20, Y+3	; 0x03
     806:	5c 81       	ldd	r21, Y+4	; 0x04
     808:	c5 01       	movw	r24, r10
     80a:	b4 01       	movw	r22, r8
     80c:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     810:	6d 83       	std	Y+5, r22	; 0x05
     812:	7e 83       	std	Y+6, r23	; 0x06
     814:	8f 83       	std	Y+7, r24	; 0x07
     816:	98 87       	std	Y+8, r25	; 0x08
     818:	f8 01       	movw	r30, r16
     81a:	44 80       	ldd	r4, Z+4	; 0x04
     81c:	55 80       	ldd	r5, Z+5	; 0x05
     81e:	66 80       	ldd	r6, Z+6	; 0x06
     820:	77 80       	ldd	r7, Z+7	; 0x07
     822:	80 85       	ldd	r24, Z+8	; 0x08
     824:	91 85       	ldd	r25, Z+9	; 0x09
     826:	a2 85       	ldd	r26, Z+10	; 0x0a
     828:	b3 85       	ldd	r27, Z+11	; 0x0b
     82a:	8d 87       	std	Y+13, r24	; 0x0d
     82c:	9e 87       	std	Y+14, r25	; 0x0e
     82e:	af 87       	std	Y+15, r26	; 0x0f
     830:	b8 8b       	std	Y+16, r27	; 0x10
     832:	a3 01       	movw	r20, r6
     834:	92 01       	movw	r18, r4
     836:	6d 81       	ldd	r22, Y+5	; 0x05
     838:	7e 81       	ldd	r23, Y+6	; 0x06
     83a:	8f 81       	ldd	r24, Y+7	; 0x07
     83c:	98 85       	ldd	r25, Y+8	; 0x08
     83e:	e1 d6       	rcall	.+3522   	; 0x1602 <__subsf3>
     840:	2d 85       	ldd	r18, Y+13	; 0x0d
     842:	3e 85       	ldd	r19, Y+14	; 0x0e
     844:	4f 85       	ldd	r20, Y+15	; 0x0f
     846:	58 89       	ldd	r21, Y+16	; 0x10
     848:	dc d6       	rcall	.+3512   	; 0x1602 <__subsf3>
     84a:	20 91 f7 03 	lds	r18, 0x03F7	; 0x8003f7 <Q_angle_1>
     84e:	30 91 f8 03 	lds	r19, 0x03F8	; 0x8003f8 <Q_angle_1+0x1>
     852:	40 91 f9 03 	lds	r20, 0x03F9	; 0x8003f9 <Q_angle_1+0x2>
     856:	50 91 fa 03 	lds	r21, 0x03FA	; 0x8003fa <Q_angle_1+0x3>
     85a:	d4 d6       	rcall	.+3496   	; 0x1604 <__addsf3>
     85c:	29 81       	ldd	r18, Y+1	; 0x01
     85e:	3a 81       	ldd	r19, Y+2	; 0x02
     860:	4b 81       	ldd	r20, Y+3	; 0x03
     862:	5c 81       	ldd	r21, Y+4	; 0x04
     864:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     868:	f8 01       	movw	r30, r16
     86a:	20 81       	ld	r18, Z
     86c:	31 81       	ldd	r19, Z+1	; 0x01
     86e:	42 81       	ldd	r20, Z+2	; 0x02
     870:	53 81       	ldd	r21, Z+3	; 0x03
     872:	c8 d6       	rcall	.+3472   	; 0x1604 <__addsf3>
     874:	69 87       	std	Y+9, r22	; 0x09
     876:	7a 87       	std	Y+10, r23	; 0x0a
     878:	8b 87       	std	Y+11, r24	; 0x0b
     87a:	9c 87       	std	Y+12, r25	; 0x0c
	P_1[0][1] -= dt * P_1[1][1];
     87c:	2d 81       	ldd	r18, Y+5	; 0x05
     87e:	3e 81       	ldd	r19, Y+6	; 0x06
     880:	4f 81       	ldd	r20, Y+7	; 0x07
     882:	58 85       	ldd	r21, Y+8	; 0x08
     884:	c3 01       	movw	r24, r6
     886:	b2 01       	movw	r22, r4
     888:	bc d6       	rcall	.+3448   	; 0x1602 <__subsf3>
     88a:	2b 01       	movw	r4, r22
     88c:	3c 01       	movw	r6, r24
	P_1[1][0] -= dt * P_1[1][1];
     88e:	2d 81       	ldd	r18, Y+5	; 0x05
     890:	3e 81       	ldd	r19, Y+6	; 0x06
     892:	4f 81       	ldd	r20, Y+7	; 0x07
     894:	58 85       	ldd	r21, Y+8	; 0x08
     896:	6d 85       	ldd	r22, Y+13	; 0x0d
     898:	7e 85       	ldd	r23, Y+14	; 0x0e
     89a:	8f 85       	ldd	r24, Y+15	; 0x0f
     89c:	98 89       	ldd	r25, Y+16	; 0x10
     89e:	b1 d6       	rcall	.+3426   	; 0x1602 <__subsf3>
     8a0:	6d 87       	std	Y+13, r22	; 0x0d
     8a2:	7e 87       	std	Y+14, r23	; 0x0e
     8a4:	8f 87       	std	Y+15, r24	; 0x0f
     8a6:	98 8b       	std	Y+16, r25	; 0x10
	P_1[1][1] += Q_bias_1 * dt;
     8a8:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <Q_bias_1>
     8ac:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <Q_bias_1+0x1>
     8b0:	40 91 e5 03 	lds	r20, 0x03E5	; 0x8003e5 <Q_bias_1+0x2>
     8b4:	50 91 e6 03 	lds	r21, 0x03E6	; 0x8003e6 <Q_bias_1+0x3>
     8b8:	69 81       	ldd	r22, Y+1	; 0x01
     8ba:	7a 81       	ldd	r23, Y+2	; 0x02
     8bc:	8b 81       	ldd	r24, Y+3	; 0x03
     8be:	9c 81       	ldd	r25, Y+4	; 0x04
     8c0:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     8c4:	9b 01       	movw	r18, r22
     8c6:	ac 01       	movw	r20, r24
     8c8:	c5 01       	movw	r24, r10
     8ca:	b4 01       	movw	r22, r8
     8cc:	9b d6       	rcall	.+3382   	; 0x1604 <__addsf3>
     8ce:	69 8f       	std	Y+25, r22	; 0x19
     8d0:	7a 8f       	std	Y+26, r23	; 0x1a
     8d2:	8b 8f       	std	Y+27, r24	; 0x1b
     8d4:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     8d6:	20 91 df 03 	lds	r18, 0x03DF	; 0x8003df <R_measure_1>
     8da:	30 91 e0 03 	lds	r19, 0x03E0	; 0x8003e0 <R_measure_1+0x1>
     8de:	40 91 e1 03 	lds	r20, 0x03E1	; 0x8003e1 <R_measure_1+0x2>
     8e2:	50 91 e2 03 	lds	r21, 0x03E2	; 0x8003e2 <R_measure_1+0x3>
     8e6:	69 85       	ldd	r22, Y+9	; 0x09
     8e8:	7a 85       	ldd	r23, Y+10	; 0x0a
     8ea:	8b 85       	ldd	r24, Y+11	; 0x0b
     8ec:	9c 85       	ldd	r25, Y+12	; 0x0c
     8ee:	8a d6       	rcall	.+3348   	; 0x1604 <__addsf3>
     8f0:	4b 01       	movw	r8, r22
     8f2:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     8f4:	9b 01       	movw	r18, r22
     8f6:	ac 01       	movw	r20, r24
     8f8:	69 85       	ldd	r22, Y+9	; 0x09
     8fa:	7a 85       	ldd	r23, Y+10	; 0x0a
     8fc:	8b 85       	ldd	r24, Y+11	; 0x0b
     8fe:	9c 85       	ldd	r25, Y+12	; 0x0c
     900:	4b d7       	rcall	.+3734   	; 0x1798 <__divsf3>
     902:	69 83       	std	Y+1, r22	; 0x01
     904:	7a 83       	std	Y+2, r23	; 0x02
     906:	8b 83       	std	Y+3, r24	; 0x03
     908:	9c 83       	std	Y+4, r25	; 0x04
	K_1[1] = P_1[1][0] / S_1;
     90a:	a5 01       	movw	r20, r10
     90c:	94 01       	movw	r18, r8
     90e:	6d 85       	ldd	r22, Y+13	; 0x0d
     910:	7e 85       	ldd	r23, Y+14	; 0x0e
     912:	8f 85       	ldd	r24, Y+15	; 0x0f
     914:	98 89       	ldd	r25, Y+16	; 0x10
     916:	40 d7       	rcall	.+3712   	; 0x1798 <__divsf3>
     918:	6d 83       	std	Y+5, r22	; 0x05
     91a:	7e 83       	std	Y+6, r23	; 0x06
     91c:	8f 83       	std	Y+7, r24	; 0x07
     91e:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     920:	2d 89       	ldd	r18, Y+21	; 0x15
     922:	3e 89       	ldd	r19, Y+22	; 0x16
     924:	4f 89       	ldd	r20, Y+23	; 0x17
     926:	58 8d       	ldd	r21, Y+24	; 0x18
     928:	69 89       	ldd	r22, Y+17	; 0x11
     92a:	7a 89       	ldd	r23, Y+18	; 0x12
     92c:	8b 89       	ldd	r24, Y+19	; 0x13
     92e:	9c 89       	ldd	r25, Y+20	; 0x14
     930:	68 d6       	rcall	.+3280   	; 0x1602 <__subsf3>
     932:	69 8b       	std	Y+17, r22	; 0x11
     934:	7a 8b       	std	Y+18, r23	; 0x12
     936:	8b 8b       	std	Y+19, r24	; 0x13
     938:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     93a:	9b 01       	movw	r18, r22
     93c:	ac 01       	movw	r20, r24
     93e:	69 81       	ldd	r22, Y+1	; 0x01
     940:	7a 81       	ldd	r23, Y+2	; 0x02
     942:	8b 81       	ldd	r24, Y+3	; 0x03
     944:	9c 81       	ldd	r25, Y+4	; 0x04
     946:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     94a:	9b 01       	movw	r18, r22
     94c:	ac 01       	movw	r20, r24
     94e:	6d 89       	ldd	r22, Y+21	; 0x15
     950:	7e 89       	ldd	r23, Y+22	; 0x16
     952:	8f 89       	ldd	r24, Y+23	; 0x17
     954:	98 8d       	ldd	r25, Y+24	; 0x18
     956:	56 d6       	rcall	.+3244   	; 0x1604 <__addsf3>
     958:	4b 01       	movw	r8, r22
     95a:	5c 01       	movw	r10, r24
     95c:	60 93 bb 03 	sts	0x03BB, r22	; 0x8003bb <angle_1>
     960:	70 93 bc 03 	sts	0x03BC, r23	; 0x8003bc <angle_1+0x1>
     964:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <angle_1+0x2>
     968:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <angle_1+0x3>
	bias_1 += K_1[1] * y_1;
     96c:	29 89       	ldd	r18, Y+17	; 0x11
     96e:	3a 89       	ldd	r19, Y+18	; 0x12
     970:	4b 89       	ldd	r20, Y+19	; 0x13
     972:	5c 89       	ldd	r21, Y+20	; 0x14
     974:	6d 81       	ldd	r22, Y+5	; 0x05
     976:	7e 81       	ldd	r23, Y+6	; 0x06
     978:	8f 81       	ldd	r24, Y+7	; 0x07
     97a:	98 85       	ldd	r25, Y+8	; 0x08
     97c:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     980:	9b 01       	movw	r18, r22
     982:	ac 01       	movw	r20, r24
     984:	c7 01       	movw	r24, r14
     986:	b6 01       	movw	r22, r12
     988:	3d d6       	rcall	.+3194   	; 0x1604 <__addsf3>
     98a:	60 93 d7 03 	sts	0x03D7, r22	; 0x8003d7 <bias_1>
     98e:	70 93 d8 03 	sts	0x03D8, r23	; 0x8003d8 <bias_1+0x1>
     992:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <bias_1+0x2>
     996:	90 93 da 03 	sts	0x03DA, r25	; 0x8003da <bias_1+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     99a:	29 81       	ldd	r18, Y+1	; 0x01
     99c:	3a 81       	ldd	r19, Y+2	; 0x02
     99e:	4b 81       	ldd	r20, Y+3	; 0x03
     9a0:	5c 81       	ldd	r21, Y+4	; 0x04
     9a2:	69 85       	ldd	r22, Y+9	; 0x09
     9a4:	7a 85       	ldd	r23, Y+10	; 0x0a
     9a6:	8b 85       	ldd	r24, Y+11	; 0x0b
     9a8:	9c 85       	ldd	r25, Y+12	; 0x0c
     9aa:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     9ae:	9b 01       	movw	r18, r22
     9b0:	ac 01       	movw	r20, r24
     9b2:	69 85       	ldd	r22, Y+9	; 0x09
     9b4:	7a 85       	ldd	r23, Y+10	; 0x0a
     9b6:	8b 85       	ldd	r24, Y+11	; 0x0b
     9b8:	9c 85       	ldd	r25, Y+12	; 0x0c
     9ba:	23 d6       	rcall	.+3142   	; 0x1602 <__subsf3>
     9bc:	d8 01       	movw	r26, r16
     9be:	6d 93       	st	X+, r22
     9c0:	7d 93       	st	X+, r23
     9c2:	8d 93       	st	X+, r24
     9c4:	9c 93       	st	X, r25
     9c6:	13 97       	sbiw	r26, 0x03	; 3
	P_1[0][1] -= K_1[0] * P01_temp_1;
     9c8:	29 81       	ldd	r18, Y+1	; 0x01
     9ca:	3a 81       	ldd	r19, Y+2	; 0x02
     9cc:	4b 81       	ldd	r20, Y+3	; 0x03
     9ce:	5c 81       	ldd	r21, Y+4	; 0x04
     9d0:	c3 01       	movw	r24, r6
     9d2:	b2 01       	movw	r22, r4
     9d4:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     9d8:	9b 01       	movw	r18, r22
     9da:	ac 01       	movw	r20, r24
     9dc:	c3 01       	movw	r24, r6
     9de:	b2 01       	movw	r22, r4
     9e0:	10 d6       	rcall	.+3104   	; 0x1602 <__subsf3>
     9e2:	f8 01       	movw	r30, r16
     9e4:	64 83       	std	Z+4, r22	; 0x04
     9e6:	75 83       	std	Z+5, r23	; 0x05
     9e8:	86 83       	std	Z+6, r24	; 0x06
     9ea:	97 83       	std	Z+7, r25	; 0x07
	P_1[1][0] -= K_1[1] * P00_temp_1;
     9ec:	2d 81       	ldd	r18, Y+5	; 0x05
     9ee:	3e 81       	ldd	r19, Y+6	; 0x06
     9f0:	4f 81       	ldd	r20, Y+7	; 0x07
     9f2:	58 85       	ldd	r21, Y+8	; 0x08
     9f4:	69 85       	ldd	r22, Y+9	; 0x09
     9f6:	7a 85       	ldd	r23, Y+10	; 0x0a
     9f8:	8b 85       	ldd	r24, Y+11	; 0x0b
     9fa:	9c 85       	ldd	r25, Y+12	; 0x0c
     9fc:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     a00:	9b 01       	movw	r18, r22
     a02:	ac 01       	movw	r20, r24
     a04:	6d 85       	ldd	r22, Y+13	; 0x0d
     a06:	7e 85       	ldd	r23, Y+14	; 0x0e
     a08:	8f 85       	ldd	r24, Y+15	; 0x0f
     a0a:	98 89       	ldd	r25, Y+16	; 0x10
     a0c:	fa d5       	rcall	.+3060   	; 0x1602 <__subsf3>
     a0e:	d8 01       	movw	r26, r16
     a10:	18 96       	adiw	r26, 0x08	; 8
     a12:	6d 93       	st	X+, r22
     a14:	7d 93       	st	X+, r23
     a16:	8d 93       	st	X+, r24
     a18:	9c 93       	st	X, r25
     a1a:	1b 97       	sbiw	r26, 0x0b	; 11
	P_1[1][1] -= K_1[1] * P01_temp_1;
     a1c:	2d 81       	ldd	r18, Y+5	; 0x05
     a1e:	3e 81       	ldd	r19, Y+6	; 0x06
     a20:	4f 81       	ldd	r20, Y+7	; 0x07
     a22:	58 85       	ldd	r21, Y+8	; 0x08
     a24:	c3 01       	movw	r24, r6
     a26:	b2 01       	movw	r22, r4
     a28:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <__mulsf3>
     a2c:	9b 01       	movw	r18, r22
     a2e:	ac 01       	movw	r20, r24
     a30:	69 8d       	ldd	r22, Y+25	; 0x19
     a32:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a34:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a36:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a38:	e4 d5       	rcall	.+3016   	; 0x1602 <__subsf3>
     a3a:	f8 01       	movw	r30, r16
     a3c:	64 87       	std	Z+12, r22	; 0x0c
     a3e:	75 87       	std	Z+13, r23	; 0x0d
     a40:	86 87       	std	Z+14, r24	; 0x0e
     a42:	97 87       	std	Z+15, r25	; 0x0f

	return angle_1;
};
     a44:	c5 01       	movw	r24, r10
     a46:	b4 01       	movw	r22, r8
     a48:	6c 96       	adiw	r28, 0x1c	; 28
     a4a:	0f b6       	in	r0, 0x3f	; 63
     a4c:	f8 94       	cli
     a4e:	de bf       	out	0x3e, r29	; 62
     a50:	0f be       	out	0x3f, r0	; 63
     a52:	cd bf       	out	0x3d, r28	; 61
     a54:	df 91       	pop	r29
     a56:	cf 91       	pop	r28
     a58:	1f 91       	pop	r17
     a5a:	0f 91       	pop	r16
     a5c:	ff 90       	pop	r15
     a5e:	ef 90       	pop	r14
     a60:	df 90       	pop	r13
     a62:	cf 90       	pop	r12
     a64:	bf 90       	pop	r11
     a66:	af 90       	pop	r10
     a68:	9f 90       	pop	r9
     a6a:	8f 90       	pop	r8
     a6c:	7f 90       	pop	r7
     a6e:	6f 90       	pop	r6
     a70:	5f 90       	pop	r5
     a72:	4f 90       	pop	r4
     a74:	08 95       	ret

00000a76 <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     a76:	8f e6       	ldi	r24, 0x6F	; 111
     a78:	92 e1       	ldi	r25, 0x12	; 18
     a7a:	a3 e8       	ldi	r26, 0x83	; 131
     a7c:	ba e3       	ldi	r27, 0x3A	; 58
     a7e:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <Q_angle_1>
     a82:	90 93 f8 03 	sts	0x03F8, r25	; 0x8003f8 <Q_angle_1+0x1>
     a86:	a0 93 f9 03 	sts	0x03F9, r26	; 0x8003f9 <Q_angle_1+0x2>
     a8a:	b0 93 fa 03 	sts	0x03FA, r27	; 0x8003fa <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     a8e:	86 ea       	ldi	r24, 0xA6	; 166
     a90:	9b e9       	ldi	r25, 0x9B	; 155
     a92:	a4 e4       	ldi	r26, 0x44	; 68
     a94:	bb e3       	ldi	r27, 0x3B	; 59
     a96:	80 93 e3 03 	sts	0x03E3, r24	; 0x8003e3 <Q_bias_1>
     a9a:	90 93 e4 03 	sts	0x03E4, r25	; 0x8003e4 <Q_bias_1+0x1>
     a9e:	a0 93 e5 03 	sts	0x03E5, r26	; 0x8003e5 <Q_bias_1+0x2>
     aa2:	b0 93 e6 03 	sts	0x03E6, r27	; 0x8003e6 <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     aa6:	8f e8       	ldi	r24, 0x8F	; 143
     aa8:	92 ec       	ldi	r25, 0xC2	; 194
     aaa:	a5 ef       	ldi	r26, 0xF5	; 245
     aac:	bc e3       	ldi	r27, 0x3C	; 60
     aae:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <R_measure_1>
     ab2:	90 93 e0 03 	sts	0x03E0, r25	; 0x8003e0 <R_measure_1+0x1>
     ab6:	a0 93 e1 03 	sts	0x03E1, r26	; 0x8003e1 <R_measure_1+0x2>
     aba:	b0 93 e2 03 	sts	0x03E2, r27	; 0x8003e2 <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     abe:	10 92 bb 03 	sts	0x03BB, r1	; 0x8003bb <angle_1>
     ac2:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <angle_1+0x1>
     ac6:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <angle_1+0x2>
     aca:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     ace:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <bias_1>
     ad2:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <bias_1+0x1>
     ad6:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <bias_1+0x2>
     ada:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     ade:	ef eb       	ldi	r30, 0xBF	; 191
     ae0:	f3 e0       	ldi	r31, 0x03	; 3
     ae2:	10 82       	st	Z, r1
     ae4:	11 82       	std	Z+1, r1	; 0x01
     ae6:	12 82       	std	Z+2, r1	; 0x02
     ae8:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     aea:	14 82       	std	Z+4, r1	; 0x04
     aec:	15 82       	std	Z+5, r1	; 0x05
     aee:	16 82       	std	Z+6, r1	; 0x06
     af0:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     af2:	10 86       	std	Z+8, r1	; 0x08
     af4:	11 86       	std	Z+9, r1	; 0x09
     af6:	12 86       	std	Z+10, r1	; 0x0a
     af8:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     afa:	14 86       	std	Z+12, r1	; 0x0c
     afc:	15 86       	std	Z+13, r1	; 0x0d
     afe:	16 86       	std	Z+14, r1	; 0x0e
     b00:	17 86       	std	Z+15, r1	; 0x0f
     b02:	08 95       	ret

00000b04 <Compute_PID>:
		#endif //GYRO
	}
	return 0;
}
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd)
{
     b04:	4f 92       	push	r4
     b06:	5f 92       	push	r5
     b08:	6f 92       	push	r6
     b0a:	7f 92       	push	r7
     b0c:	af 92       	push	r10
     b0e:	bf 92       	push	r11
     b10:	cf 92       	push	r12
     b12:	df 92       	push	r13
     b14:	ef 92       	push	r14
     b16:	ff 92       	push	r15
     b18:	0f 93       	push	r16
     b1a:	1f 93       	push	r17
     b1c:	cf 93       	push	r28
     b1e:	df 93       	push	r29
     b20:	00 d0       	rcall	.+0      	; 0xb22 <Compute_PID+0x1e>
     b22:	1f 92       	push	r1
     b24:	cd b7       	in	r28, 0x3d	; 61
     b26:	de b7       	in	r29, 0x3e	; 62
	double error =angle-desired_angle;
     b28:	6c d5       	rcall	.+2776   	; 0x1602 <__subsf3>
     b2a:	69 83       	std	Y+1, r22	; 0x01
     b2c:	7a 83       	std	Y+2, r23	; 0x02
     b2e:	8b 83       	std	Y+3, r24	; 0x03
     b30:	9c 83       	std	Y+4, r25	; 0x04
	double pid_p=kp*error;
	if (-3 <error <3)
	{
		*pid_i=*pid_i+(ki*error);
     b32:	9b 01       	movw	r18, r22
     b34:	ac 01       	movw	r20, r24
     b36:	6a 8d       	ldd	r22, Y+26	; 0x1a
     b38:	7b 8d       	ldd	r23, Y+27	; 0x1b
     b3a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     b3c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     b3e:	a3 d7       	rcall	.+3910   	; 0x1a86 <__mulsf3>
     b40:	9b 01       	movw	r18, r22
     b42:	ac 01       	movw	r20, r24
     b44:	d8 01       	movw	r26, r16
     b46:	6d 91       	ld	r22, X+
     b48:	7d 91       	ld	r23, X+
     b4a:	8d 91       	ld	r24, X+
     b4c:	9c 91       	ld	r25, X
     b4e:	5a d5       	rcall	.+2740   	; 0x1604 <__addsf3>
     b50:	f8 01       	movw	r30, r16
     b52:	60 83       	st	Z, r22
     b54:	71 83       	std	Z+1, r23	; 0x01
     b56:	82 83       	std	Z+2, r24	; 0x02
     b58:	93 83       	std	Z+3, r25	; 0x03
	}
	double pid_d = kd*((error - *previous_error)/dt);
     b5a:	d7 01       	movw	r26, r14
     b5c:	2d 91       	ld	r18, X+
     b5e:	3d 91       	ld	r19, X+
     b60:	4d 91       	ld	r20, X+
     b62:	5c 91       	ld	r21, X
     b64:	69 81       	ldd	r22, Y+1	; 0x01
     b66:	7a 81       	ldd	r23, Y+2	; 0x02
     b68:	8b 81       	ldd	r24, Y+3	; 0x03
     b6a:	9c 81       	ldd	r25, Y+4	; 0x04
     b6c:	4a d5       	rcall	.+2708   	; 0x1602 <__subsf3>
     b6e:	a6 01       	movw	r20, r12
     b70:	95 01       	movw	r18, r10
     b72:	12 d6       	rcall	.+3108   	; 0x1798 <__divsf3>
     b74:	2e 8d       	ldd	r18, Y+30	; 0x1e
     b76:	3f 8d       	ldd	r19, Y+31	; 0x1f
     b78:	48 a1       	ldd	r20, Y+32	; 0x20
     b7a:	59 a1       	ldd	r21, Y+33	; 0x21
     b7c:	84 d7       	rcall	.+3848   	; 0x1a86 <__mulsf3>
     b7e:	2b 01       	movw	r4, r22
     b80:	3c 01       	movw	r6, r24
	*previous_error=error;
     b82:	89 81       	ldd	r24, Y+1	; 0x01
     b84:	9a 81       	ldd	r25, Y+2	; 0x02
     b86:	ab 81       	ldd	r26, Y+3	; 0x03
     b88:	bc 81       	ldd	r27, Y+4	; 0x04
     b8a:	f7 01       	movw	r30, r14
     b8c:	80 83       	st	Z, r24
     b8e:	91 83       	std	Z+1, r25	; 0x01
     b90:	a2 83       	std	Z+2, r26	; 0x02
     b92:	b3 83       	std	Z+3, r27	; 0x03
	return 0;
}
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd)
{
	double error =angle-desired_angle;
	double pid_p=kp*error;
     b94:	9c 01       	movw	r18, r24
     b96:	ad 01       	movw	r20, r26
     b98:	6e 89       	ldd	r22, Y+22	; 0x16
     b9a:	7f 89       	ldd	r23, Y+23	; 0x17
     b9c:	88 8d       	ldd	r24, Y+24	; 0x18
     b9e:	99 8d       	ldd	r25, Y+25	; 0x19
     ba0:	72 d7       	rcall	.+3812   	; 0x1a86 <__mulsf3>
	{
		*pid_i=*pid_i+(ki*error);
	}
	double pid_d = kd*((error - *previous_error)/dt);
	*previous_error=error;
	return pid_p + *pid_i + pid_d;
     ba2:	d8 01       	movw	r26, r16
     ba4:	2d 91       	ld	r18, X+
     ba6:	3d 91       	ld	r19, X+
     ba8:	4d 91       	ld	r20, X+
     baa:	5c 91       	ld	r21, X
     bac:	2b d5       	rcall	.+2646   	; 0x1604 <__addsf3>
     bae:	a3 01       	movw	r20, r6
     bb0:	92 01       	movw	r18, r4
     bb2:	28 d5       	rcall	.+2640   	; 0x1604 <__addsf3>
     bb4:	0f 90       	pop	r0
     bb6:	0f 90       	pop	r0
     bb8:	0f 90       	pop	r0
     bba:	0f 90       	pop	r0
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	ff 90       	pop	r15
     bc6:	ef 90       	pop	r14
     bc8:	df 90       	pop	r13
     bca:	cf 90       	pop	r12
     bcc:	bf 90       	pop	r11
     bce:	af 90       	pop	r10
     bd0:	7f 90       	pop	r7
     bd2:	6f 90       	pop	r6
     bd4:	5f 90       	pop	r5
     bd6:	4f 90       	pop	r4
     bd8:	08 95       	ret

00000bda <main>:
uint8_t buffer[14];
bool loop_bool=true;
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd);
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     bda:	cf 93       	push	r28
     bdc:	df 93       	push	r29
     bde:	cd b7       	in	r28, 0x3d	; 61
     be0:	de b7       	in	r29, 0x3e	; 62
     be2:	e6 97       	sbiw	r28, 0x36	; 54
     be4:	0f b6       	in	r0, 0x3f	; 63
     be6:	f8 94       	cli
     be8:	de bf       	out	0x3e, r29	; 62
     bea:	0f be       	out	0x3f, r0	; 63
     bec:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     bee:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <__data_end+0x1>
     bf2:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <__data_end>
	V_step=V_step_predefine;
     bf6:	88 e7       	ldi	r24, 0x78	; 120
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	90 93 72 03 	sts	0x0372, r25	; 0x800372 <V_step+0x1>
     bfe:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <V_step>
	W_step=W_step_predefine;
     c02:	80 ef       	ldi	r24, 0xF0	; 240
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     c0a:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	incr=-1;
     c0e:	8f ef       	ldi	r24, 0xFF	; 255
     c10:	9f ef       	ldi	r25, 0xFF	; 255
     c12:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <incr+0x1>
     c16:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <incr>
	pwm_delay=2000;
     c1a:	80 ed       	ldi	r24, 0xD0	; 208
     c1c:	97 e0       	ldi	r25, 0x07	; 7
     c1e:	90 93 a6 03 	sts	0x03A6, r25	; 0x8003a6 <pwm_delay+0x1>
     c22:	80 93 a5 03 	sts	0x03A5, r24	; 0x8003a5 <pwm_delay>
	cli();
     c26:	f8 94       	cli
	init_gpio();
     c28:	16 db       	rcall	.-2516   	; 0x256 <init_gpio>
	init_motor_gpio();
     c2a:	ac db       	rcall	.-2216   	; 0x384 <init_motor_gpio>
		#ifdef GYRO
			i2c_init();
     c2c:	c2 d3       	rcall	.+1924   	; 0x13b2 <i2c_init>
		#endif
	USART_Init(MY_UBRR);
     c2e:	8c e0       	ldi	r24, 0x0C	; 12
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	70 d4       	rcall	.+2272   	; 0x1514 <USART_Init>
	uart_str = fdevopen(uart_putchar, NULL);
     c34:	60 e0       	ldi	r22, 0x00	; 0
     c36:	70 e0       	ldi	r23, 0x00	; 0
     c38:	85 e9       	ldi	r24, 0x95	; 149
     c3a:	9a e0       	ldi	r25, 0x0A	; 10
     c3c:	0e 94 9d 12 	call	0x253a	; 0x253a <fdevopen>
     c40:	90 93 fc 03 	sts	0x03FC, r25	; 0x8003fc <uart_str+0x1>
     c44:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <uart_str>
	setup_timer0();
     c48:	0f d3       	rcall	.+1566   	; 0x1268 <setup_timer0>
	Enable_timer0_overflow_interrupt();//micros
     c4a:	15 d3       	rcall	.+1578   	; 0x1276 <Enable_timer0_overflow_interrupt>
	setup_timer4();//pwm
     c4c:	ea d2       	rcall	.+1492   	; 0x1222 <setup_timer4>
	setup_timer5();
     c4e:	fd d2       	rcall	.+1530   	; 0x124a <setup_timer5>
	Enable_timer5_compare_interrupt();//motor
     c50:	05 d3       	rcall	.+1546   	; 0x125c <Enable_timer5_compare_interrupt>
	OCR5A=4000;
     c52:	80 ea       	ldi	r24, 0xA0	; 160
     c54:	9f e0       	ldi	r25, 0x0F	; 15
     c56:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     c5a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
	unsigned long timer1=micros();
     c5e:	11 d3       	rcall	.+1570   	; 0x1282 <micros>
     c60:	6d a3       	std	Y+37, r22	; 0x25
     c62:	7e a3       	std	Y+38, r23	; 0x26
     c64:	8f a3       	std	Y+39, r24	; 0x27
     c66:	98 a7       	std	Y+40, r25	; 0x28
				int16_t gyroZ_calib=gyro_offset_z;
				int16_t accelX_calib=accel_offset_x;
				int16_t accelY_calib=accel_offset_y;
				int16_t accelZ_calib=accel_offset_z;
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     c68:	67 e0       	ldi	r22, 0x07	; 7
     c6a:	89 e1       	ldi	r24, 0x19	; 25
     c6c:	19 d2       	rcall	.+1074   	; 0x10a0 <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     c6e:	60 e0       	ldi	r22, 0x00	; 0
     c70:	8a e1       	ldi	r24, 0x1A	; 26
     c72:	16 d2       	rcall	.+1068   	; 0x10a0 <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     c74:	68 e0       	ldi	r22, 0x08	; 8
     c76:	8b e1       	ldi	r24, 0x1B	; 27
     c78:	13 d2       	rcall	.+1062   	; 0x10a0 <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     c7a:	60 e1       	ldi	r22, 0x10	; 16
     c7c:	8c e1       	ldi	r24, 0x1C	; 28
     c7e:	10 d2       	rcall	.+1056   	; 0x10a0 <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     c80:	61 e0       	ldi	r22, 0x01	; 1
     c82:	8b e6       	ldi	r24, 0x6B	; 107
     c84:	0d d2       	rcall	.+1050   	; 0x10a0 <mpu6050_writeByte>
		double compAngleY;
	#endif  
	
	
	/*---------------------------kalman_init----------------------*/
	Kalman_init();
     c86:	24 dd       	rcall	.-1464   	; 0x6d0 <Kalman_init>
	Kalman_init_1();
     c88:	f6 de       	rcall	.-532    	; 0xa76 <Kalman_init_1>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c8a:	2f ef       	ldi	r18, 0xFF	; 255
     c8c:	31 ee       	ldi	r19, 0xE1	; 225
     c8e:	44 e0       	ldi	r20, 0x04	; 4
     c90:	21 50       	subi	r18, 0x01	; 1
     c92:	30 40       	sbci	r19, 0x00	; 0
     c94:	40 40       	sbci	r20, 0x00	; 0
     c96:	e1 f7       	brne	.-8      	; 0xc90 <main+0xb6>
     c98:	00 c0       	rjmp	.+0      	; 0xc9a <main+0xc0>
     c9a:	00 00       	nop
	_delay_ms(100);
	double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
	double pitch =  atan2(accel_x, sqrt(accel_y*accel_y + accel_z*accel_z)) * RAD_TO_DEG;// atan(-accel_x / sqrt(accel_y * accel_y + accel_z * accel_z)) * RAD_TO_DEG;
	angle=0;
     c9c:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <angle>
     ca0:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <angle+0x1>
     ca4:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <angle+0x2>
     ca8:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <angle+0x3>
	angle_1=0;
     cac:	10 92 bb 03 	sts	0x03BB, r1	; 0x8003bb <angle_1>
     cb0:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <angle_1+0x1>
     cb4:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <angle_1+0x2>
     cb8:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <angle_1+0x3>
		double kd=10;//2.05
		float desired_angle = 0;
		//PID_TEST	
		double pid_i_new;
		double previous_error_new;
	sei();
     cbc:	78 94       	sei
	
	
	/*---------------------------PID_INIT-------------------------*/
		float PID, error, previous_error;
		float pid_p=0;
		float pid_i=0;
     cbe:	1d 8e       	std	Y+29, r1	; 0x1d
     cc0:	1e 8e       	std	Y+30, r1	; 0x1e
     cc2:	1f 8e       	std	Y+31, r1	; 0x1f
     cc4:	18 a2       	std	Y+32, r1	; 0x20

			printf("\n");	
			#ifdef DRV8313
				int absoulute_y=abs(THE_MAIN_OUTPUT);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-abs(PID));
     cc6:	0f 2e       	mov	r0, r31
     cc8:	ff ed       	ldi	r31, 0xDF	; 223
     cca:	4f 2e       	mov	r4, r31
     ccc:	ff e7       	ldi	r31, 0x7F	; 127
     cce:	5f 2e       	mov	r5, r31
     cd0:	f0 2d       	mov	r31, r0
     cd2:	04 c0       	rjmp	.+8      	; 0xcdc <main+0x102>
uint8_t buffer[14];
bool loop_bool=true;
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd);
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     cd4:	7d aa       	std	Y+53, r7	; 0x35
     cd6:	6e aa       	std	Y+54, r6	; 0x36
     cd8:	92 2c       	mov	r9, r2
     cda:	83 2c       	mov	r8, r3
	
	
    while (1) /*---------------------------while(1)---------------------------------*/
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     cdc:	ce 01       	movw	r24, r28
     cde:	05 96       	adiw	r24, 0x05	; 5
     ce0:	7c 01       	movw	r14, r24
     ce2:	8e 01       	movw	r16, r28
     ce4:	0d 5f       	subi	r16, 0xFD	; 253
     ce6:	1f 4f       	sbci	r17, 0xFF	; 255
     ce8:	9e 01       	movw	r18, r28
     cea:	2f 5f       	subi	r18, 0xFF	; 255
     cec:	3f 4f       	sbci	r19, 0xFF	; 255
     cee:	ae 01       	movw	r20, r28
     cf0:	45 5f       	subi	r20, 0xF5	; 245
     cf2:	5f 4f       	sbci	r21, 0xFF	; 255
     cf4:	be 01       	movw	r22, r28
     cf6:	67 5f       	subi	r22, 0xF7	; 247
     cf8:	7f 4f       	sbci	r23, 0xFF	; 255
     cfa:	02 96       	adiw	r24, 0x02	; 2
     cfc:	27 d2       	rcall	.+1102   	; 0x114c <mpu6050_getRawData>
			//accel_x-=accelX_calib;
			//accel_y-=accelY_calib;
			//accel_z-=accelZ_calib;
			gyro_x-=gyroX_calib;
     cfe:	89 81       	ldd	r24, Y+1	; 0x01
     d00:	9a 81       	ldd	r25, Y+2	; 0x02
     d02:	84 59       	subi	r24, 0x94	; 148
     d04:	9f 4f       	sbci	r25, 0xFF	; 255
     d06:	9a 83       	std	Y+2, r25	; 0x02
     d08:	89 83       	std	Y+1, r24	; 0x01
			gyro_y-=gyroY_calib;
     d0a:	8b 81       	ldd	r24, Y+3	; 0x03
     d0c:	9c 81       	ldd	r25, Y+4	; 0x04
     d0e:	80 52       	subi	r24, 0x20	; 32
     d10:	9f 4f       	sbci	r25, 0xFF	; 255
     d12:	9c 83       	std	Y+4, r25	; 0x04
     d14:	8b 83       	std	Y+3, r24	; 0x03
			gyro_z-=gyroZ_calib;
     d16:	8d 81       	ldd	r24, Y+5	; 0x05
     d18:	9e 81       	ldd	r25, Y+6	; 0x06
     d1a:	8f 58       	subi	r24, 0x8F	; 143
     d1c:	9d 4f       	sbci	r25, 0xFD	; 253
     d1e:	9e 83       	std	Y+6, r25	; 0x06
     d20:	8d 83       	std	Y+5, r24	; 0x05
			printSI("ay=",accel_y);
			printSI("az=",accel_z);
			printf("\n");
			/*--------end------*/			
		#else
			double dt = ((double)(micros() - timer1))/1000000;
     d22:	af d2       	rcall	.+1374   	; 0x1282 <micros>
     d24:	2d a1       	ldd	r18, Y+37	; 0x25
     d26:	3e a1       	ldd	r19, Y+38	; 0x26
     d28:	4f a1       	ldd	r20, Y+39	; 0x27
     d2a:	58 a5       	ldd	r21, Y+40	; 0x28
     d2c:	62 1b       	sub	r22, r18
     d2e:	73 0b       	sbc	r23, r19
     d30:	84 0b       	sbc	r24, r20
     d32:	95 0b       	sbc	r25, r21
     d34:	ca d5       	rcall	.+2964   	; 0x18ca <__floatunsisf>
     d36:	20 e0       	ldi	r18, 0x00	; 0
     d38:	34 e2       	ldi	r19, 0x24	; 36
     d3a:	44 e7       	ldi	r20, 0x74	; 116
     d3c:	59 e4       	ldi	r21, 0x49	; 73
     d3e:	2c d5       	rcall	.+2648   	; 0x1798 <__divsf3>
     d40:	5b 01       	movw	r10, r22
     d42:	6c 01       	movw	r12, r24
			timer1=micros();
     d44:	9e d2       	rcall	.+1340   	; 0x1282 <micros>
     d46:	6d a3       	std	Y+37, r22	; 0x25
     d48:	7e a3       	std	Y+38, r23	; 0x26
     d4a:	8f a3       	std	Y+39, r24	; 0x27
     d4c:	98 a7       	std	Y+40, r25	; 0x28
			double gyroXrate = gyro_x/65.5;// deg/s 
     d4e:	69 81       	ldd	r22, Y+1	; 0x01
     d50:	7a 81       	ldd	r23, Y+2	; 0x02
     d52:	07 2e       	mov	r0, r23
     d54:	00 0c       	add	r0, r0
     d56:	88 0b       	sbc	r24, r24
     d58:	99 0b       	sbc	r25, r25
     d5a:	b9 d5       	rcall	.+2930   	; 0x18ce <__floatsisf>
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	43 e8       	ldi	r20, 0x83	; 131
     d62:	52 e4       	ldi	r21, 0x42	; 66
     d64:	19 d5       	rcall	.+2610   	; 0x1798 <__divsf3>
     d66:	69 a7       	std	Y+41, r22	; 0x29
     d68:	7a a7       	std	Y+42, r23	; 0x2a
     d6a:	8b a7       	std	Y+43, r24	; 0x2b
     d6c:	9c a7       	std	Y+44, r25	; 0x2c
			double gyroYrate = gyro_y/65.5;// deg/s
     d6e:	6b 81       	ldd	r22, Y+3	; 0x03
     d70:	7c 81       	ldd	r23, Y+4	; 0x04
     d72:	07 2e       	mov	r0, r23
     d74:	00 0c       	add	r0, r0
     d76:	88 0b       	sbc	r24, r24
     d78:	99 0b       	sbc	r25, r25
     d7a:	a9 d5       	rcall	.+2898   	; 0x18ce <__floatsisf>
     d7c:	20 e0       	ldi	r18, 0x00	; 0
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	43 e8       	ldi	r20, 0x83	; 131
     d82:	52 e4       	ldi	r21, 0x42	; 66
     d84:	09 d5       	rcall	.+2578   	; 0x1798 <__divsf3>
     d86:	6d a7       	std	Y+45, r22	; 0x2d
     d88:	7e a7       	std	Y+46, r23	; 0x2e
     d8a:	8f a7       	std	Y+47, r24	; 0x2f
     d8c:	98 ab       	std	Y+48, r25	; 0x30
			if (!loop_bool) {
     d8e:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <loop_bool>
     d92:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <loop_bool+0x1>
     d96:	89 2b       	or	r24, r25
     d98:	21 f0       	breq	.+8      	; 0xda2 <main+0x1c8>
				angle_roll += gyroXrate*dt; //Calculate the traveled pitch angle and add this to the angle_pitch variable
				angle_pitch += gyroYrate*dt;  //Calculate the traveled roll angle and add this to the angle_roll variable			
			}
			else loop_bool=false;	
     d9a:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <loop_bool+0x1>
     d9e:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <loop_bool>
			//angle_pitch += angle_roll * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the roll angle to the pitch angel
			//angle_roll -= angle_pitch * sin(gyro_z * (dt/65.5*pi/180));
			               //If the IMU has yawed transfer the pitch angle to the roll angel
		
			//-------------------------------NEW accel-----------------
			roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
     da2:	6b 84       	ldd	r6, Y+11	; 0x0b
     da4:	7c 84       	ldd	r7, Y+12	; 0x0c
     da6:	e9 84       	ldd	r14, Y+9	; 0x09
     da8:	fa 84       	ldd	r15, Y+10	; 0x0a
     daa:	b3 01       	movw	r22, r6
     dac:	07 2c       	mov	r0, r7
     dae:	00 0c       	add	r0, r0
     db0:	88 0b       	sbc	r24, r24
     db2:	99 0b       	sbc	r25, r25
     db4:	8c d5       	rcall	.+2840   	; 0x18ce <__floatsisf>
     db6:	6d 8b       	std	Y+21, r22	; 0x15
     db8:	7e 8b       	std	Y+22, r23	; 0x16
     dba:	8f 8b       	std	Y+23, r24	; 0x17
     dbc:	98 8f       	std	Y+24, r25	; 0x18
     dbe:	b7 01       	movw	r22, r14
     dc0:	0f 2c       	mov	r0, r15
     dc2:	00 0c       	add	r0, r0
     dc4:	88 0b       	sbc	r24, r24
     dc6:	99 0b       	sbc	r25, r25
     dc8:	82 d5       	rcall	.+2820   	; 0x18ce <__floatsisf>
     dca:	2d 89       	ldd	r18, Y+21	; 0x15
     dcc:	3e 89       	ldd	r19, Y+22	; 0x16
     dce:	4f 89       	ldd	r20, Y+23	; 0x17
     dd0:	58 8d       	ldd	r21, Y+24	; 0x18
     dd2:	8b d4       	rcall	.+2326   	; 0x16ea <atan2>
     dd4:	21 ee       	ldi	r18, 0xE1	; 225
     dd6:	3e e2       	ldi	r19, 0x2E	; 46
     dd8:	45 e6       	ldi	r20, 0x65	; 101
     dda:	52 e4       	ldi	r21, 0x42	; 66
     ddc:	54 d6       	rcall	.+3240   	; 0x1a86 <__mulsf3>
     dde:	69 a3       	std	Y+33, r22	; 0x21
     de0:	7a a3       	std	Y+34, r23	; 0x22
     de2:	8b a3       	std	Y+35, r24	; 0x23
     de4:	9c a3       	std	Y+36, r25	; 0x24
			double temporar_accel_x=accel_x/100;
			double temporar_accel_y=accel_y/100;
     de6:	c7 01       	movw	r24, r14
     de8:	64 e6       	ldi	r22, 0x64	; 100
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	0e 94 88 11 	call	0x2310	; 0x2310 <__divmodhi4>
     df0:	07 2e       	mov	r0, r23
     df2:	00 0c       	add	r0, r0
     df4:	88 0b       	sbc	r24, r24
     df6:	99 0b       	sbc	r25, r25
     df8:	6a d5       	rcall	.+2772   	; 0x18ce <__floatsisf>
     dfa:	6d 8b       	std	Y+21, r22	; 0x15
     dfc:	7e 8b       	std	Y+22, r23	; 0x16
     dfe:	8f 8b       	std	Y+23, r24	; 0x17
     e00:	98 8f       	std	Y+24, r25	; 0x18
			double temporar_accel_z=accel_z/100;
     e02:	c3 01       	movw	r24, r6
     e04:	64 e6       	ldi	r22, 0x64	; 100
     e06:	70 e0       	ldi	r23, 0x00	; 0
     e08:	0e 94 88 11 	call	0x2310	; 0x2310 <__divmodhi4>
     e0c:	07 2e       	mov	r0, r23
     e0e:	00 0c       	add	r0, r0
     e10:	88 0b       	sbc	r24, r24
     e12:	99 0b       	sbc	r25, r25
     e14:	5c d5       	rcall	.+2744   	; 0x18ce <__floatsisf>
     e16:	69 8f       	std	Y+25, r22	; 0x19
     e18:	7a 8f       	std	Y+26, r23	; 0x1a
     e1a:	8b 8f       	std	Y+27, r24	; 0x1b
     e1c:	9c 8f       	std	Y+28, r25	; 0x1c
			double temporar_var=sqrt(temporar_accel_y*temporar_accel_y + temporar_accel_z*temporar_accel_z);
     e1e:	2d 89       	ldd	r18, Y+21	; 0x15
     e20:	3e 89       	ldd	r19, Y+22	; 0x16
     e22:	4f 89       	ldd	r20, Y+23	; 0x17
     e24:	58 8d       	ldd	r21, Y+24	; 0x18
     e26:	ca 01       	movw	r24, r20
     e28:	b9 01       	movw	r22, r18
     e2a:	2d d6       	rcall	.+3162   	; 0x1a86 <__mulsf3>
     e2c:	69 ab       	std	Y+49, r22	; 0x31
     e2e:	7a ab       	std	Y+50, r23	; 0x32
     e30:	8b ab       	std	Y+51, r24	; 0x33
     e32:	9c ab       	std	Y+52, r25	; 0x34
     e34:	2d 89       	ldd	r18, Y+21	; 0x15
     e36:	3e 89       	ldd	r19, Y+22	; 0x16
     e38:	4f 89       	ldd	r20, Y+23	; 0x17
     e3a:	58 8d       	ldd	r21, Y+24	; 0x18
     e3c:	ca 01       	movw	r24, r20
     e3e:	b9 01       	movw	r22, r18
     e40:	22 d6       	rcall	.+3140   	; 0x1a86 <__mulsf3>
     e42:	6d 8b       	std	Y+21, r22	; 0x15
     e44:	7e 8b       	std	Y+22, r23	; 0x16
     e46:	8f 8b       	std	Y+23, r24	; 0x17
     e48:	98 8f       	std	Y+24, r25	; 0x18
     e4a:	29 8d       	ldd	r18, Y+25	; 0x19
     e4c:	3a 8d       	ldd	r19, Y+26	; 0x1a
     e4e:	4b 8d       	ldd	r20, Y+27	; 0x1b
     e50:	5c 8d       	ldd	r21, Y+28	; 0x1c
     e52:	ca 01       	movw	r24, r20
     e54:	b9 01       	movw	r22, r18
     e56:	17 d6       	rcall	.+3118   	; 0x1a86 <__mulsf3>
     e58:	9b 01       	movw	r18, r22
     e5a:	ac 01       	movw	r20, r24
     e5c:	6d 89       	ldd	r22, Y+21	; 0x15
     e5e:	7e 89       	ldd	r23, Y+22	; 0x16
     e60:	8f 89       	ldd	r24, Y+23	; 0x17
     e62:	98 8d       	ldd	r25, Y+24	; 0x18
     e64:	cf d3       	rcall	.+1950   	; 0x1604 <__addsf3>
     e66:	76 d6       	rcall	.+3308   	; 0x1b54 <sqrt>
			temporar_var*=100;
     e68:	20 e0       	ldi	r18, 0x00	; 0
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	48 ec       	ldi	r20, 0xC8	; 200
     e6e:	52 e4       	ldi	r21, 0x42	; 66
     e70:	0a d6       	rcall	.+3092   	; 0x1a86 <__mulsf3>
     e72:	6d 8b       	std	Y+21, r22	; 0x15
     e74:	7e 8b       	std	Y+22, r23	; 0x16
     e76:	8f 8b       	std	Y+23, r24	; 0x17
     e78:	98 8f       	std	Y+24, r25	; 0x18
			pitch = atan2(accel_x, temporar_var) * RAD_TO_DEG;
     e7a:	6f 81       	ldd	r22, Y+7	; 0x07
     e7c:	78 85       	ldd	r23, Y+8	; 0x08
     e7e:	07 2e       	mov	r0, r23
     e80:	00 0c       	add	r0, r0
     e82:	88 0b       	sbc	r24, r24
     e84:	99 0b       	sbc	r25, r25
     e86:	23 d5       	rcall	.+2630   	; 0x18ce <__floatsisf>
     e88:	2d 89       	ldd	r18, Y+21	; 0x15
     e8a:	3e 89       	ldd	r19, Y+22	; 0x16
     e8c:	4f 89       	ldd	r20, Y+23	; 0x17
     e8e:	58 8d       	ldd	r21, Y+24	; 0x18
     e90:	2c d4       	rcall	.+2136   	; 0x16ea <atan2>
     e92:	21 ee       	ldi	r18, 0xE1	; 225
     e94:	3e e2       	ldi	r19, 0x2E	; 46
     e96:	45 e6       	ldi	r20, 0x65	; 101
     e98:	52 e4       	ldi	r21, 0x42	; 66
     e9a:	f5 d5       	rcall	.+3050   	; 0x1a86 <__mulsf3>
     e9c:	6d 8b       	std	Y+21, r22	; 0x15
     e9e:	7e 8b       	std	Y+22, r23	; 0x16
     ea0:	8f 8b       	std	Y+23, r24	; 0x17
     ea2:	98 8f       	std	Y+24, r25	; 0x18

						
			/*-------------------------Kalman--------------------------------*/		
			float kalman_angle_x=getAngle(roll,gyroXrate,dt);
     ea4:	86 01       	movw	r16, r12
     ea6:	75 01       	movw	r14, r10
     ea8:	29 a5       	ldd	r18, Y+41	; 0x29
     eaa:	3a a5       	ldd	r19, Y+42	; 0x2a
     eac:	4b a5       	ldd	r20, Y+43	; 0x2b
     eae:	5c a5       	ldd	r21, Y+44	; 0x2c
     eb0:	69 a1       	ldd	r22, Y+33	; 0x21
     eb2:	7a a1       	ldd	r23, Y+34	; 0x22
     eb4:	8b a1       	ldd	r24, Y+35	; 0x23
     eb6:	9c a1       	ldd	r25, Y+36	; 0x24
     eb8:	70 da       	rcall	.-2848   	; 0x39a <getAngle>
     eba:	76 2e       	mov	r7, r22
     ebc:	67 2e       	mov	r6, r23
     ebe:	28 2e       	mov	r2, r24
     ec0:	39 2e       	mov	r3, r25
			float kalman_angle_y=getAngle_1(pitch,gyroYrate,dt);
     ec2:	2d a5       	ldd	r18, Y+45	; 0x2d
     ec4:	3e a5       	ldd	r19, Y+46	; 0x2e
     ec6:	4f a5       	ldd	r20, Y+47	; 0x2f
     ec8:	58 a9       	ldd	r21, Y+48	; 0x30
     eca:	6d 89       	ldd	r22, Y+21	; 0x15
     ecc:	7e 89       	ldd	r23, Y+22	; 0x16
     ece:	8f 89       	ldd	r24, Y+23	; 0x17
     ed0:	98 8d       	ldd	r25, Y+24	; 0x18
     ed2:	45 dc       	rcall	.-1910   	; 0x75e <getAngle_1>
     ed4:	69 8f       	std	Y+25, r22	; 0x19
     ed6:	7a 8f       	std	Y+26, r23	; 0x1a
     ed8:	8b 8f       	std	Y+27, r24	; 0x1b
     eda:	9c 8f       	std	Y+28, r25	; 0x1c
			
			printSD("kro = ",kalman_angle_x);
     edc:	47 2d       	mov	r20, r7
     ede:	56 2d       	mov	r21, r6
     ee0:	62 2d       	mov	r22, r2
     ee2:	73 2d       	mov	r23, r3
     ee4:	85 e7       	ldi	r24, 0x75	; 117
     ee6:	93 e0       	ldi	r25, 0x03	; 3
     ee8:	6a d3       	rcall	.+1748   	; 0x15be <printSD>
			printSD("kpi = ",kalman_angle_y);
     eea:	49 8d       	ldd	r20, Y+25	; 0x19
     eec:	5a 8d       	ldd	r21, Y+26	; 0x1a
     eee:	6b 8d       	ldd	r22, Y+27	; 0x1b
     ef0:	7c 8d       	ldd	r23, Y+28	; 0x1c
     ef2:	8c e7       	ldi	r24, 0x7C	; 124
     ef4:	93 e0       	ldi	r25, 0x03	; 3
     ef6:	63 d3       	rcall	.+1734   	; 0x15be <printSD>
			printSD("roll = ",roll);
     ef8:	49 a1       	ldd	r20, Y+33	; 0x21
     efa:	5a a1       	ldd	r21, Y+34	; 0x22
     efc:	6b a1       	ldd	r22, Y+35	; 0x23
     efe:	7c a1       	ldd	r23, Y+36	; 0x24
     f00:	83 e8       	ldi	r24, 0x83	; 131
     f02:	93 e0       	ldi	r25, 0x03	; 3
     f04:	5c d3       	rcall	.+1720   	; 0x15be <printSD>
			printSD("pitch = ",pitch);
     f06:	4d 89       	ldd	r20, Y+21	; 0x15
     f08:	5e 89       	ldd	r21, Y+22	; 0x16
     f0a:	6f 89       	ldd	r22, Y+23	; 0x17
     f0c:	78 8d       	ldd	r23, Y+24	; 0x18
     f0e:	8b e8       	ldi	r24, 0x8B	; 139
     f10:	93 e0       	ldi	r25, 0x03	; 3
     f12:	55 d3       	rcall	.+1706   	; 0x15be <printSD>
			/*---------------------PID calculations--------------------------*/
			error = kalman_angle_x - desired_angle;
			pid_p = kp*error;
			if(-3 <error <3)
			{
				pid_i = pid_i+(ki*error);
     f14:	20 e0       	ldi	r18, 0x00	; 0
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	a9 01       	movw	r20, r18
     f1a:	67 2d       	mov	r22, r7
     f1c:	76 2d       	mov	r23, r6
     f1e:	82 2d       	mov	r24, r2
     f20:	93 2d       	mov	r25, r3
     f22:	b1 d5       	rcall	.+2914   	; 0x1a86 <__mulsf3>
     f24:	9b 01       	movw	r18, r22
     f26:	ac 01       	movw	r20, r24
     f28:	6d 8d       	ldd	r22, Y+29	; 0x1d
     f2a:	7e 8d       	ldd	r23, Y+30	; 0x1e
     f2c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f2e:	98 a1       	ldd	r25, Y+32	; 0x20
     f30:	69 d3       	rcall	.+1746   	; 0x1604 <__addsf3>
     f32:	6d 8f       	std	Y+29, r22	; 0x1d
     f34:	7e 8f       	std	Y+30, r23	; 0x1e
     f36:	8f 8f       	std	Y+31, r24	; 0x1f
     f38:	98 a3       	std	Y+32, r25	; 0x20
			printSD("pitch = ",pitch);
			
			
			/*---------------------PID calculations--------------------------*/
			error = kalman_angle_x - desired_angle;
			pid_p = kp*error;
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	4a ef       	ldi	r20, 0xFA	; 250
     f40:	53 e4       	ldi	r21, 0x43	; 67
     f42:	67 2d       	mov	r22, r7
     f44:	76 2d       	mov	r23, r6
     f46:	82 2d       	mov	r24, r2
     f48:	93 2d       	mov	r25, r3
     f4a:	9d d5       	rcall	.+2874   	; 0x1a86 <__mulsf3>
			}
			
			pid_d = kd*((error - previous_error)/dt);

			/*The final PID values is the sum of each of this 3 parts*/
			PID = pid_p + pid_i + pid_d;
     f4c:	2d 8d       	ldd	r18, Y+29	; 0x1d
     f4e:	3e 8d       	ldd	r19, Y+30	; 0x1e
     f50:	4f 8d       	ldd	r20, Y+31	; 0x1f
     f52:	58 a1       	ldd	r21, Y+32	; 0x20
     f54:	57 d3       	rcall	.+1710   	; 0x1604 <__addsf3>
     f56:	6d 8b       	std	Y+21, r22	; 0x15
     f58:	7e 8b       	std	Y+22, r23	; 0x16
     f5a:	8f 8b       	std	Y+23, r24	; 0x17
     f5c:	98 8f       	std	Y+24, r25	; 0x18
			if(-3 <error <3)
			{
				pid_i = pid_i+(ki*error);
			}
			
			pid_d = kd*((error - previous_error)/dt);
     f5e:	2d a9       	ldd	r18, Y+53	; 0x35
     f60:	3e a9       	ldd	r19, Y+54	; 0x36
     f62:	49 2d       	mov	r20, r9
     f64:	58 2d       	mov	r21, r8
     f66:	67 2d       	mov	r22, r7
     f68:	76 2d       	mov	r23, r6
     f6a:	82 2d       	mov	r24, r2
     f6c:	93 2d       	mov	r25, r3
     f6e:	49 d3       	rcall	.+1682   	; 0x1602 <__subsf3>
     f70:	a6 01       	movw	r20, r12
     f72:	95 01       	movw	r18, r10
     f74:	11 d4       	rcall	.+2082   	; 0x1798 <__divsf3>
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	40 e2       	ldi	r20, 0x20	; 32
     f7c:	51 e4       	ldi	r21, 0x41	; 65
     f7e:	83 d5       	rcall	.+2822   	; 0x1a86 <__mulsf3>
     f80:	9b 01       	movw	r18, r22
     f82:	ac 01       	movw	r20, r24

			/*The final PID values is the sum of each of this 3 parts*/
			PID = pid_p + pid_i + pid_d;
     f84:	6d 89       	ldd	r22, Y+21	; 0x15
     f86:	7e 89       	ldd	r23, Y+22	; 0x16
     f88:	8f 89       	ldd	r24, Y+23	; 0x17
     f8a:	98 8d       	ldd	r25, Y+24	; 0x18
     f8c:	3b d3       	rcall	.+1654   	; 0x1604 <__addsf3>
     f8e:	6d 8b       	std	Y+21, r22	; 0x15
     f90:	7e 8b       	std	Y+22, r23	; 0x16
     f92:	8f 8b       	std	Y+23, r24	; 0x17
     f94:	98 8f       	std	Y+24, r25	; 0x18
			//printSI("ay=",accel_y);
			//printSI("az=",accel_z);


			//PID_test
			double PID_new=Compute_PID(kalman_angle_x,0,&pid_i_new,&previous_error_new,dt,kp,ki,kd);
     f96:	31 e4       	ldi	r19, 0x41	; 65
     f98:	3f 93       	push	r19
     f9a:	80 e2       	ldi	r24, 0x20	; 32
     f9c:	8f 93       	push	r24
     f9e:	1f 92       	push	r1
     fa0:	1f 92       	push	r1
     fa2:	1f 92       	push	r1
     fa4:	1f 92       	push	r1
     fa6:	1f 92       	push	r1
     fa8:	1f 92       	push	r1
     faa:	83 e4       	ldi	r24, 0x43	; 67
     fac:	8f 93       	push	r24
     fae:	8a ef       	ldi	r24, 0xFA	; 250
     fb0:	8f 93       	push	r24
     fb2:	1f 92       	push	r1
     fb4:	1f 92       	push	r1
     fb6:	ae 01       	movw	r20, r28
     fb8:	4f 5e       	subi	r20, 0xEF	; 239
     fba:	5f 4f       	sbci	r21, 0xFF	; 255
     fbc:	7a 01       	movw	r14, r20
     fbe:	8e 01       	movw	r16, r28
     fc0:	03 5f       	subi	r16, 0xF3	; 243
     fc2:	1f 4f       	sbci	r17, 0xFF	; 255
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	a9 01       	movw	r20, r18
     fca:	67 2d       	mov	r22, r7
     fcc:	76 2d       	mov	r23, r6
     fce:	82 2d       	mov	r24, r2
     fd0:	93 2d       	mov	r25, r3
     fd2:	98 dd       	rcall	.-1232   	; 0xb04 <Compute_PID>

			printf("\n");	
     fd4:	8a e0       	ldi	r24, 0x0A	; 10
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	0e 94 32 13 	call	0x2664	; 0x2664 <putchar>
			#ifdef DRV8313
				int absoulute_y=abs(THE_MAIN_OUTPUT);
     fdc:	67 2d       	mov	r22, r7
     fde:	76 2d       	mov	r23, r6
     fe0:	82 2d       	mov	r24, r2
     fe2:	93 2d       	mov	r25, r3
     fe4:	41 d4       	rcall	.+2178   	; 0x1868 <__fixsfsi>
     fe6:	9b 01       	movw	r18, r22
     fe8:	77 23       	and	r23, r23
     fea:	24 f4       	brge	.+8      	; 0xff4 <main+0x41a>
     fec:	22 27       	eor	r18, r18
     fee:	33 27       	eor	r19, r19
     ff0:	26 1b       	sub	r18, r22
     ff2:	37 0b       	sbc	r19, r23
     ff4:	79 01       	movw	r14, r18
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-abs(PID));
     ff6:	6d 89       	ldd	r22, Y+21	; 0x15
     ff8:	7e 89       	ldd	r23, Y+22	; 0x16
     ffa:	8f 89       	ldd	r24, Y+23	; 0x17
     ffc:	98 8d       	ldd	r25, Y+24	; 0x18
     ffe:	34 d4       	rcall	.+2152   	; 0x1868 <__fixsfsi>
    1000:	9b 01       	movw	r18, r22
    1002:	77 23       	and	r23, r23
    1004:	24 f4       	brge	.+8      	; 0x100e <main+0x434>
    1006:	22 27       	eor	r18, r18
    1008:	33 27       	eor	r19, r19
    100a:	26 1b       	sub	r18, r22
    100c:	37 0b       	sbc	r19, r23
    100e:	c2 01       	movw	r24, r4
    1010:	82 1b       	sub	r24, r18
    1012:	93 0b       	sbc	r25, r19
    1014:	9c 01       	movw	r18, r24
				if (abs(local_motor_delay)>5000)
    1016:	22 f4       	brpl	.+8      	; 0x1020 <main+0x446>
    1018:	88 27       	eor	r24, r24
    101a:	99 27       	eor	r25, r25
    101c:	82 1b       	sub	r24, r18
    101e:	93 0b       	sbc	r25, r19
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	f8 94       	cli
    1024:	de bf       	out	0x3e, r29	; 62
    1026:	0f be       	out	0x3f, r0	; 63
    1028:	cd bf       	out	0x3d, r28	; 61
    102a:	89 38       	cpi	r24, 0x89	; 137
    102c:	33 e1       	ldi	r19, 0x13	; 19
    102e:	93 07       	cpc	r25, r19
    1030:	24 f0       	brlt	.+8      	; 0x103a <main+0x460>
				{
					pwm_delay=abs(local_motor_delay);
    1032:	90 93 a6 03 	sts	0x03A6, r25	; 0x8003a6 <pwm_delay+0x1>
    1036:	80 93 a5 03 	sts	0x03A5, r24	; 0x8003a5 <pwm_delay>
				}
				//printSI("pwm_delay = ",pwm_delay);
				int16_t reg_ = local_motor_delay;
				//printSI("ocr=",reg_);
				if ((absoulute_y<=0.18) || (abs(kalman_angle_x) >45))
    103a:	b7 01       	movw	r22, r14
    103c:	0f 2c       	mov	r0, r15
    103e:	00 0c       	add	r0, r0
    1040:	88 0b       	sbc	r24, r24
    1042:	99 0b       	sbc	r25, r25
    1044:	44 d4       	rcall	.+2184   	; 0x18ce <__floatsisf>
    1046:	2c ee       	ldi	r18, 0xEC	; 236
    1048:	31 e5       	ldi	r19, 0x51	; 81
    104a:	48 e3       	ldi	r20, 0x38	; 56
    104c:	5e e3       	ldi	r21, 0x3E	; 62
    104e:	a0 d3       	rcall	.+1856   	; 0x1790 <__cmpsf2>
    1050:	18 16       	cp	r1, r24
    1052:	24 f4       	brge	.+8      	; 0x105c <main+0x482>
    1054:	4e e2       	ldi	r20, 0x2E	; 46
    1056:	e4 16       	cp	r14, r20
    1058:	f1 04       	cpc	r15, r1
    105a:	2c f0       	brlt	.+10     	; 0x1066 <main+0x48c>
				{
					incr=0;
    105c:	10 92 aa 03 	sts	0x03AA, r1	; 0x8003aa <incr+0x1>
    1060:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <incr>
    1064:	37 ce       	rjmp	.-914    	; 0xcd4 <main+0xfa>
					//printf("\n");	
				}
				else 
					if (kalman_angle_x<0.18)
    1066:	2c ee       	ldi	r18, 0xEC	; 236
    1068:	31 e5       	ldi	r19, 0x51	; 81
    106a:	48 e3       	ldi	r20, 0x38	; 56
    106c:	5e e3       	ldi	r21, 0x3E	; 62
    106e:	67 2d       	mov	r22, r7
    1070:	76 2d       	mov	r23, r6
    1072:	82 2d       	mov	r24, r2
    1074:	93 2d       	mov	r25, r3
    1076:	8c d3       	rcall	.+1816   	; 0x1790 <__cmpsf2>
    1078:	88 23       	and	r24, r24
    107a:	4c f4       	brge	.+18     	; 0x108e <main+0x4b4>
					{
						cli();
    107c:	f8 94       	cli
						incr=1;						
    107e:	81 e0       	ldi	r24, 0x01	; 1
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <incr+0x1>
    1086:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <incr>
						//printf(" ");
						//int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" yes\n");					
						sei();
    108a:	78 94       	sei
    108c:	23 ce       	rjmp	.-954    	; 0xcd4 <main+0xfa>
					}
					else
					{	cli();
    108e:	f8 94       	cli
						incr=-1;
    1090:	2f ef       	ldi	r18, 0xFF	; 255
    1092:	3f ef       	ldi	r19, 0xFF	; 255
    1094:	30 93 aa 03 	sts	0x03AA, r19	; 0x8003aa <incr+0x1>
    1098:	20 93 a9 03 	sts	0x03A9, r18	; 0x8003a9 <incr>
						//printf(" ");
						//int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" no\n");
						sei();
    109c:	78 94       	sei
    109e:	1a ce       	rjmp	.-972    	; 0xcd4 <main+0xfa>

000010a0 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
    10a0:	cf 93       	push	r28
    10a2:	df 93       	push	r29
    10a4:	d8 2f       	mov	r29, r24
    10a6:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
    10a8:	80 ed       	ldi	r24, 0xD0	; 208
    10aa:	89 d1       	rcall	.+786    	; 0x13be <i2c_start>
	i2c_write(wereToWrite);
    10ac:	8d 2f       	mov	r24, r29
    10ae:	dd d1       	rcall	.+954    	; 0x146a <i2c_write>
	i2c_write(byteToWrite);
    10b0:	8c 2f       	mov	r24, r28
    10b2:	db d1       	rcall	.+950    	; 0x146a <i2c_write>
	i2c_stop();
    10b4:	ca d1       	rcall	.+916    	; 0x144a <i2c_stop>
}
    10b6:	df 91       	pop	r29
    10b8:	cf 91       	pop	r28
    10ba:	08 95       	ret

000010bc <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
    10bc:	af 92       	push	r10
    10be:	bf 92       	push	r11
    10c0:	df 92       	push	r13
    10c2:	ef 92       	push	r14
    10c4:	ff 92       	push	r15
    10c6:	0f 93       	push	r16
    10c8:	1f 93       	push	r17
    10ca:	cf 93       	push	r28
    10cc:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
    10ce:	66 23       	and	r22, r22
    10d0:	89 f1       	breq	.+98     	; 0x1134 <mpu6050_readBytes+0x78>
    10d2:	c5 2f       	mov	r28, r21
    10d4:	d4 2f       	mov	r29, r20
    10d6:	d6 2e       	mov	r13, r22
    10d8:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
    10da:	80 ed       	ldi	r24, 0xD0	; 208
    10dc:	70 d1       	rcall	.+736    	; 0x13be <i2c_start>
		i2c_write(regAddr);
    10de:	81 2f       	mov	r24, r17
    10e0:	c4 d1       	rcall	.+904    	; 0x146a <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10e2:	85 e3       	ldi	r24, 0x35	; 53
    10e4:	8a 95       	dec	r24
    10e6:	f1 f7       	brne	.-4      	; 0x10e4 <mpu6050_readBytes+0x28>
    10e8:	00 00       	nop
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    10ea:	81 ed       	ldi	r24, 0xD1	; 209
    10ec:	68 d1       	rcall	.+720    	; 0x13be <i2c_start>
    10ee:	0d 2f       	mov	r16, r29
    10f0:	1c 2f       	mov	r17, r28
    10f2:	ee 24       	eor	r14, r14
    10f4:	ea 94       	dec	r14
    10f6:	ed 0c       	add	r14, r13
    10f8:	f1 2c       	mov	r15, r1
    10fa:	ef ef       	ldi	r30, 0xFF	; 255
    10fc:	ee 1a       	sub	r14, r30
    10fe:	fe 0a       	sbc	r15, r30
    1100:	c0 e0       	ldi	r28, 0x00	; 0
    1102:	d0 e0       	ldi	r29, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    1104:	ad 2c       	mov	r10, r13
    1106:	b1 2c       	mov	r11, r1
    1108:	f1 e0       	ldi	r31, 0x01	; 1
    110a:	af 1a       	sub	r10, r31
    110c:	b1 08       	sbc	r11, r1
    110e:	ca 15       	cp	r28, r10
    1110:	db 05       	cpc	r29, r11
    1112:	21 f4       	brne	.+8      	; 0x111c <mpu6050_readBytes+0x60>
			data[i] = i2c_readNak();
    1114:	e5 d1       	rcall	.+970    	; 0x14e0 <i2c_readNak>
    1116:	f8 01       	movw	r30, r16
    1118:	80 83       	st	Z, r24
    111a:	03 c0       	rjmp	.+6      	; 0x1122 <mpu6050_readBytes+0x66>
			else
			data[i] = i2c_readAck();
    111c:	c7 d1       	rcall	.+910    	; 0x14ac <i2c_readAck>
    111e:	f8 01       	movw	r30, r16
    1120:	80 83       	st	Z, r24
    1122:	21 96       	adiw	r28, 0x01	; 1
    1124:	0f 5f       	subi	r16, 0xFF	; 255
    1126:	1f 4f       	sbci	r17, 0xFF	; 255
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    1128:	ce 15       	cp	r28, r14
    112a:	df 05       	cpc	r29, r15
    112c:	81 f7       	brne	.-32     	; 0x110e <mpu6050_readBytes+0x52>
    112e:	cd 2d       	mov	r28, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    1130:	8c d1       	rcall	.+792    	; 0x144a <i2c_stop>
    1132:	01 c0       	rjmp	.+2      	; 0x1136 <mpu6050_readBytes+0x7a>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    1134:	c0 e0       	ldi	r28, 0x00	; 0
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    1136:	8c 2f       	mov	r24, r28
    1138:	df 91       	pop	r29
    113a:	cf 91       	pop	r28
    113c:	1f 91       	pop	r17
    113e:	0f 91       	pop	r16
    1140:	ff 90       	pop	r15
    1142:	ef 90       	pop	r14
    1144:	df 90       	pop	r13
    1146:	bf 90       	pop	r11
    1148:	af 90       	pop	r10
    114a:	08 95       	ret

0000114c <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    114c:	6f 92       	push	r6
    114e:	7f 92       	push	r7
    1150:	8f 92       	push	r8
    1152:	9f 92       	push	r9
    1154:	af 92       	push	r10
    1156:	bf 92       	push	r11
    1158:	cf 92       	push	r12
    115a:	df 92       	push	r13
    115c:	ef 92       	push	r14
    115e:	ff 92       	push	r15
    1160:	0f 93       	push	r16
    1162:	1f 93       	push	r17
    1164:	cf 93       	push	r28
    1166:	df 93       	push	r29
    1168:	cd b7       	in	r28, 0x3d	; 61
    116a:	de b7       	in	r29, 0x3e	; 62
    116c:	2e 97       	sbiw	r28, 0x0e	; 14
    116e:	0f b6       	in	r0, 0x3f	; 63
    1170:	f8 94       	cli
    1172:	de bf       	out	0x3e, r29	; 62
    1174:	0f be       	out	0x3f, r0	; 63
    1176:	cd bf       	out	0x3d, r28	; 61
    1178:	4c 01       	movw	r8, r24
    117a:	5b 01       	movw	r10, r22
    117c:	6a 01       	movw	r12, r20
    117e:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    1180:	ae 01       	movw	r20, r28
    1182:	4f 5f       	subi	r20, 0xFF	; 255
    1184:	5f 4f       	sbci	r21, 0xFF	; 255
    1186:	6e e0       	ldi	r22, 0x0E	; 14
    1188:	8b e3       	ldi	r24, 0x3B	; 59
    118a:	98 df       	rcall	.-208    	; 0x10bc <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    118c:	89 81       	ldd	r24, Y+1	; 0x01
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	98 2f       	mov	r25, r24
    1192:	88 27       	eor	r24, r24
    1194:	2a 81       	ldd	r18, Y+2	; 0x02
    1196:	82 2b       	or	r24, r18
    1198:	f4 01       	movw	r30, r8
    119a:	91 83       	std	Z+1, r25	; 0x01
    119c:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    119e:	8b 81       	ldd	r24, Y+3	; 0x03
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	98 2f       	mov	r25, r24
    11a4:	88 27       	eor	r24, r24
    11a6:	2c 81       	ldd	r18, Y+4	; 0x04
    11a8:	82 2b       	or	r24, r18
    11aa:	f5 01       	movw	r30, r10
    11ac:	91 83       	std	Z+1, r25	; 0x01
    11ae:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    11b0:	8d 81       	ldd	r24, Y+5	; 0x05
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	98 2f       	mov	r25, r24
    11b6:	88 27       	eor	r24, r24
    11b8:	2e 81       	ldd	r18, Y+6	; 0x06
    11ba:	82 2b       	or	r24, r18
    11bc:	f6 01       	movw	r30, r12
    11be:	91 83       	std	Z+1, r25	; 0x01
    11c0:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    11c2:	89 85       	ldd	r24, Y+9	; 0x09
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	98 2f       	mov	r25, r24
    11c8:	88 27       	eor	r24, r24
    11ca:	2a 85       	ldd	r18, Y+10	; 0x0a
    11cc:	82 2b       	or	r24, r18
    11ce:	f3 01       	movw	r30, r6
    11d0:	91 83       	std	Z+1, r25	; 0x01
    11d2:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    11d4:	8b 85       	ldd	r24, Y+11	; 0x0b
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	98 2f       	mov	r25, r24
    11da:	88 27       	eor	r24, r24
    11dc:	2c 85       	ldd	r18, Y+12	; 0x0c
    11de:	82 2b       	or	r24, r18
    11e0:	f8 01       	movw	r30, r16
    11e2:	91 83       	std	Z+1, r25	; 0x01
    11e4:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    11e6:	8d 85       	ldd	r24, Y+13	; 0x0d
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	98 2f       	mov	r25, r24
    11ec:	88 27       	eor	r24, r24
    11ee:	2e 85       	ldd	r18, Y+14	; 0x0e
    11f0:	82 2b       	or	r24, r18
    11f2:	f7 01       	movw	r30, r14
    11f4:	91 83       	std	Z+1, r25	; 0x01
    11f6:	80 83       	st	Z, r24
    11f8:	2e 96       	adiw	r28, 0x0e	; 14
    11fa:	0f b6       	in	r0, 0x3f	; 63
    11fc:	f8 94       	cli
    11fe:	de bf       	out	0x3e, r29	; 62
    1200:	0f be       	out	0x3f, r0	; 63
    1202:	cd bf       	out	0x3d, r28	; 61
    1204:	df 91       	pop	r29
    1206:	cf 91       	pop	r28
    1208:	1f 91       	pop	r17
    120a:	0f 91       	pop	r16
    120c:	ff 90       	pop	r15
    120e:	ef 90       	pop	r14
    1210:	df 90       	pop	r13
    1212:	cf 90       	pop	r12
    1214:	bf 90       	pop	r11
    1216:	af 90       	pop	r10
    1218:	9f 90       	pop	r9
    121a:	8f 90       	pop	r8
    121c:	7f 90       	pop	r7
    121e:	6f 90       	pop	r6
    1220:	08 95       	ret

00001222 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    1222:	e1 ea       	ldi	r30, 0xA1	; 161
    1224:	f0 e0       	ldi	r31, 0x00	; 0
    1226:	80 81       	ld	r24, Z
    1228:	81 60       	ori	r24, 0x01	; 1
    122a:	80 83       	st	Z, r24
    122c:	e0 ea       	ldi	r30, 0xA0	; 160
    122e:	f0 e0       	ldi	r31, 0x00	; 0
    1230:	80 81       	ld	r24, Z
    1232:	81 60       	ori	r24, 0x01	; 1
    1234:	80 83       	st	Z, r24
    1236:	80 81       	ld	r24, Z
    1238:	80 68       	ori	r24, 0x80	; 128
    123a:	80 83       	st	Z, r24
    123c:	80 81       	ld	r24, Z
    123e:	80 62       	ori	r24, 0x20	; 32
    1240:	80 83       	st	Z, r24
    1242:	80 81       	ld	r24, Z
    1244:	88 60       	ori	r24, 0x08	; 8
    1246:	80 83       	st	Z, r24
    1248:	08 95       	ret

0000124a <setup_timer5>:
    124a:	e1 e2       	ldi	r30, 0x21	; 33
    124c:	f1 e0       	ldi	r31, 0x01	; 1
    124e:	80 81       	ld	r24, Z
    1250:	81 60       	ori	r24, 0x01	; 1
    1252:	80 83       	st	Z, r24
    1254:	80 81       	ld	r24, Z
    1256:	88 60       	ori	r24, 0x08	; 8
    1258:	80 83       	st	Z, r24
    125a:	08 95       	ret

0000125c <Enable_timer5_compare_interrupt>:
    125c:	e3 e7       	ldi	r30, 0x73	; 115
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	80 81       	ld	r24, Z
    1262:	82 60       	ori	r24, 0x02	; 2
    1264:	80 83       	st	Z, r24
    1266:	08 95       	ret

00001268 <setup_timer0>:
    1268:	85 b5       	in	r24, 0x25	; 37
    126a:	81 60       	ori	r24, 0x01	; 1
    126c:	85 bd       	out	0x25, r24	; 37
    126e:	85 b5       	in	r24, 0x25	; 37
    1270:	82 60       	ori	r24, 0x02	; 2
    1272:	85 bd       	out	0x25, r24	; 37
    1274:	08 95       	ret

00001276 <Enable_timer0_overflow_interrupt>:
    1276:	ee e6       	ldi	r30, 0x6E	; 110
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	80 81       	ld	r24, Z
    127c:	81 60       	ori	r24, 0x01	; 1
    127e:	80 83       	st	Z, r24
    1280:	08 95       	ret

00001282 <micros>:
    1282:	3f b7       	in	r19, 0x3f	; 63
    1284:	f8 94       	cli
    1286:	80 91 a1 03 	lds	r24, 0x03A1	; 0x8003a1 <timer0_overflow_count>
    128a:	90 91 a2 03 	lds	r25, 0x03A2	; 0x8003a2 <timer0_overflow_count+0x1>
    128e:	a0 91 a3 03 	lds	r26, 0x03A3	; 0x8003a3 <timer0_overflow_count+0x2>
    1292:	b0 91 a4 03 	lds	r27, 0x03A4	; 0x8003a4 <timer0_overflow_count+0x3>
    1296:	26 b5       	in	r18, 0x26	; 38
    1298:	a8 9b       	sbis	0x15, 0	; 21
    129a:	05 c0       	rjmp	.+10     	; 0x12a6 <micros+0x24>
    129c:	2f 3f       	cpi	r18, 0xFF	; 255
    129e:	19 f0       	breq	.+6      	; 0x12a6 <micros+0x24>
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	a1 1d       	adc	r26, r1
    12a4:	b1 1d       	adc	r27, r1
    12a6:	3f bf       	out	0x3f, r19	; 63
    12a8:	ba 2f       	mov	r27, r26
    12aa:	a9 2f       	mov	r26, r25
    12ac:	98 2f       	mov	r25, r24
    12ae:	88 27       	eor	r24, r24
    12b0:	82 0f       	add	r24, r18
    12b2:	91 1d       	adc	r25, r1
    12b4:	a1 1d       	adc	r26, r1
    12b6:	b1 1d       	adc	r27, r1
    12b8:	bc 01       	movw	r22, r24
    12ba:	cd 01       	movw	r24, r26
    12bc:	66 0f       	add	r22, r22
    12be:	77 1f       	adc	r23, r23
    12c0:	88 1f       	adc	r24, r24
    12c2:	99 1f       	adc	r25, r25
    12c4:	66 0f       	add	r22, r22
    12c6:	77 1f       	adc	r23, r23
    12c8:	88 1f       	adc	r24, r24
    12ca:	99 1f       	adc	r25, r25
    12cc:	08 95       	ret

000012ce <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    12ce:	1f 92       	push	r1
    12d0:	0f 92       	push	r0
    12d2:	0f b6       	in	r0, 0x3f	; 63
    12d4:	0f 92       	push	r0
    12d6:	11 24       	eor	r1, r1
    12d8:	2f 93       	push	r18
    12da:	3f 93       	push	r19
    12dc:	8f 93       	push	r24
    12de:	9f 93       	push	r25
    12e0:	af 93       	push	r26
    12e2:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    12e4:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <timer0_millis>
    12e8:	90 91 9e 03 	lds	r25, 0x039E	; 0x80039e <timer0_millis+0x1>
    12ec:	a0 91 9f 03 	lds	r26, 0x039F	; 0x80039f <timer0_millis+0x2>
    12f0:	b0 91 a0 03 	lds	r27, 0x03A0	; 0x8003a0 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    12f4:	30 91 9c 03 	lds	r19, 0x039C	; 0x80039c <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    12f8:	23 e0       	ldi	r18, 0x03	; 3
    12fa:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    12fc:	2d 37       	cpi	r18, 0x7D	; 125
    12fe:	20 f4       	brcc	.+8      	; 0x1308 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    1300:	01 96       	adiw	r24, 0x01	; 1
    1302:	a1 1d       	adc	r26, r1
    1304:	b1 1d       	adc	r27, r1
    1306:	05 c0       	rjmp	.+10     	; 0x1312 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    1308:	26 e8       	ldi	r18, 0x86	; 134
    130a:	23 0f       	add	r18, r19
		m += 1;
    130c:	02 96       	adiw	r24, 0x02	; 2
    130e:	a1 1d       	adc	r26, r1
    1310:	b1 1d       	adc	r27, r1
	}


	timer0_fract = f;
    1312:	20 93 9c 03 	sts	0x039C, r18	; 0x80039c <timer0_fract>
	timer0_millis = m;
    1316:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <timer0_millis>
    131a:	90 93 9e 03 	sts	0x039E, r25	; 0x80039e <timer0_millis+0x1>
    131e:	a0 93 9f 03 	sts	0x039F, r26	; 0x80039f <timer0_millis+0x2>
    1322:	b0 93 a0 03 	sts	0x03A0, r27	; 0x8003a0 <timer0_millis+0x3>
	timer0_overflow_count++;
    1326:	80 91 a1 03 	lds	r24, 0x03A1	; 0x8003a1 <timer0_overflow_count>
    132a:	90 91 a2 03 	lds	r25, 0x03A2	; 0x8003a2 <timer0_overflow_count+0x1>
    132e:	a0 91 a3 03 	lds	r26, 0x03A3	; 0x8003a3 <timer0_overflow_count+0x2>
    1332:	b0 91 a4 03 	lds	r27, 0x03A4	; 0x8003a4 <timer0_overflow_count+0x3>
    1336:	01 96       	adiw	r24, 0x01	; 1
    1338:	a1 1d       	adc	r26, r1
    133a:	b1 1d       	adc	r27, r1
    133c:	80 93 a1 03 	sts	0x03A1, r24	; 0x8003a1 <timer0_overflow_count>
    1340:	90 93 a2 03 	sts	0x03A2, r25	; 0x8003a2 <timer0_overflow_count+0x1>
    1344:	a0 93 a3 03 	sts	0x03A3, r26	; 0x8003a3 <timer0_overflow_count+0x2>
    1348:	b0 93 a4 03 	sts	0x03A4, r27	; 0x8003a4 <timer0_overflow_count+0x3>
}
    134c:	bf 91       	pop	r27
    134e:	af 91       	pop	r26
    1350:	9f 91       	pop	r25
    1352:	8f 91       	pop	r24
    1354:	3f 91       	pop	r19
    1356:	2f 91       	pop	r18
    1358:	0f 90       	pop	r0
    135a:	0f be       	out	0x3f, r0	; 63
    135c:	0f 90       	pop	r0
    135e:	1f 90       	pop	r1
    1360:	18 95       	reti

00001362 <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    1362:	1f 92       	push	r1
    1364:	0f 92       	push	r0
    1366:	0f b6       	in	r0, 0x3f	; 63
    1368:	0f 92       	push	r0
    136a:	11 24       	eor	r1, r1
    136c:	0b b6       	in	r0, 0x3b	; 59
    136e:	0f 92       	push	r0
    1370:	2f 93       	push	r18
    1372:	3f 93       	push	r19
    1374:	4f 93       	push	r20
    1376:	5f 93       	push	r21
    1378:	6f 93       	push	r22
    137a:	7f 93       	push	r23
    137c:	8f 93       	push	r24
    137e:	9f 93       	push	r25
    1380:	af 93       	push	r26
    1382:	bf 93       	push	r27
    1384:	ef 93       	push	r30
    1386:	ff 93       	push	r31
	PWM_update();
    1388:	0e 94 37 01 	call	0x26e	; 0x26e <PWM_update>
    138c:	ff 91       	pop	r31
    138e:	ef 91       	pop	r30
    1390:	bf 91       	pop	r27
    1392:	af 91       	pop	r26
    1394:	9f 91       	pop	r25
    1396:	8f 91       	pop	r24
    1398:	7f 91       	pop	r23
    139a:	6f 91       	pop	r22
    139c:	5f 91       	pop	r21
    139e:	4f 91       	pop	r20
    13a0:	3f 91       	pop	r19
    13a2:	2f 91       	pop	r18
    13a4:	0f 90       	pop	r0
    13a6:	0b be       	out	0x3b, r0	; 59
    13a8:	0f 90       	pop	r0
    13aa:	0f be       	out	0x3f, r0	; 63
    13ac:	0f 90       	pop	r0
    13ae:	1f 90       	pop	r1
    13b0:	18 95       	reti

000013b2 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    13b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    13b6:	8c e0       	ldi	r24, 0x0C	; 12
    13b8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    13bc:	08 95       	ret

000013be <i2c_start>:
    13be:	94 ea       	ldi	r25, 0xA4	; 164
    13c0:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    13c4:	4f ef       	ldi	r20, 0xFF	; 255
    13c6:	50 e0       	ldi	r21, 0x00	; 0
    13c8:	60 e0       	ldi	r22, 0x00	; 0
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	ec eb       	ldi	r30, 0xBC	; 188
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	90 81       	ld	r25, Z
    13d2:	99 23       	and	r25, r25
    13d4:	34 f0       	brlt	.+12     	; 0x13e2 <i2c_start+0x24>
    13d6:	41 50       	subi	r20, 0x01	; 1
    13d8:	51 09       	sbc	r21, r1
    13da:	61 09       	sbc	r22, r1
    13dc:	71 09       	sbc	r23, r1
    13de:	c0 f7       	brcc	.-16     	; 0x13d0 <i2c_start+0x12>
    13e0:	04 c0       	rjmp	.+8      	; 0x13ea <i2c_start+0x2c>
    13e2:	45 2b       	or	r20, r21
    13e4:	46 2b       	or	r20, r22
    13e6:	47 2b       	or	r20, r23
    13e8:	41 f1       	breq	.+80     	; 0x143a <i2c_start+0x7c>
    13ea:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    13ee:	98 7f       	andi	r25, 0xF8	; 248
    13f0:	98 30       	cpi	r25, 0x08	; 8
    13f2:	11 f0       	breq	.+4      	; 0x13f8 <i2c_start+0x3a>
    13f4:	90 31       	cpi	r25, 0x10	; 16
    13f6:	19 f5       	brne	.+70     	; 0x143e <i2c_start+0x80>
    13f8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    13fc:	84 e8       	ldi	r24, 0x84	; 132
    13fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1402:	8f ef       	ldi	r24, 0xFF	; 255
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	a0 e0       	ldi	r26, 0x00	; 0
    1408:	b0 e0       	ldi	r27, 0x00	; 0
    140a:	ec eb       	ldi	r30, 0xBC	; 188
    140c:	f0 e0       	ldi	r31, 0x00	; 0
    140e:	20 81       	ld	r18, Z
    1410:	22 23       	and	r18, r18
    1412:	2c f0       	brlt	.+10     	; 0x141e <i2c_start+0x60>
    1414:	01 97       	sbiw	r24, 0x01	; 1
    1416:	a1 09       	sbc	r26, r1
    1418:	b1 09       	sbc	r27, r1
    141a:	c8 f7       	brcc	.-14     	; 0x140e <i2c_start+0x50>
    141c:	04 c0       	rjmp	.+8      	; 0x1426 <i2c_start+0x68>
    141e:	89 2b       	or	r24, r25
    1420:	8a 2b       	or	r24, r26
    1422:	8b 2b       	or	r24, r27
    1424:	71 f0       	breq	.+28     	; 0x1442 <i2c_start+0x84>
    1426:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    142a:	98 7f       	andi	r25, 0xF8	; 248
    142c:	98 31       	cpi	r25, 0x18	; 24
    142e:	59 f0       	breq	.+22     	; 0x1446 <i2c_start+0x88>
    1430:	81 e0       	ldi	r24, 0x01	; 1
    1432:	90 34       	cpi	r25, 0x40	; 64
    1434:	49 f4       	brne	.+18     	; 0x1448 <i2c_start+0x8a>
    1436:	80 e0       	ldi	r24, 0x00	; 0
    1438:	08 95       	ret
    143a:	81 e0       	ldi	r24, 0x01	; 1
    143c:	08 95       	ret
    143e:	81 e0       	ldi	r24, 0x01	; 1
    1440:	08 95       	ret
    1442:	81 e0       	ldi	r24, 0x01	; 1
    1444:	08 95       	ret
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	08 95       	ret

0000144a <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    144a:	84 e9       	ldi	r24, 0x94	; 148
    144c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    1450:	80 e0       	ldi	r24, 0x00	; 0
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	ec eb       	ldi	r30, 0xBC	; 188
    1456:	f0 e0       	ldi	r31, 0x00	; 0
    1458:	20 81       	ld	r18, Z
    145a:	24 ff       	sbrs	r18, 4
    145c:	05 c0       	rjmp	.+10     	; 0x1468 <i2c_stop+0x1e>
    145e:	01 96       	adiw	r24, 0x01	; 1
    1460:	81 15       	cp	r24, r1
    1462:	21 e0       	ldi	r18, 0x01	; 1
    1464:	92 07       	cpc	r25, r18
    1466:	c1 f7       	brne	.-16     	; 0x1458 <i2c_stop+0xe>
    1468:	08 95       	ret

0000146a <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    146a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    146e:	84 e8       	ldi	r24, 0x84	; 132
    1470:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    1474:	8f ef       	ldi	r24, 0xFF	; 255
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	a0 e0       	ldi	r26, 0x00	; 0
    147a:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    147c:	ec eb       	ldi	r30, 0xBC	; 188
    147e:	f0 e0       	ldi	r31, 0x00	; 0
    1480:	20 81       	ld	r18, Z
    1482:	22 23       	and	r18, r18
    1484:	2c f0       	brlt	.+10     	; 0x1490 <i2c_write+0x26>
    1486:	01 97       	sbiw	r24, 0x01	; 1
    1488:	a1 09       	sbc	r26, r1
    148a:	b1 09       	sbc	r27, r1
    148c:	c8 f7       	brcc	.-14     	; 0x1480 <i2c_write+0x16>
    148e:	04 c0       	rjmp	.+8      	; 0x1498 <i2c_write+0x2e>
	if(i2c_timer == 0)
    1490:	89 2b       	or	r24, r25
    1492:	8a 2b       	or	r24, r26
    1494:	8b 2b       	or	r24, r27
    1496:	41 f0       	breq	.+16     	; 0x14a8 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    1498:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    149c:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	98 32       	cpi	r25, 0x28	; 40
    14a2:	19 f4       	brne	.+6      	; 0x14aa <i2c_write+0x40>
    14a4:	80 e0       	ldi	r24, 0x00	; 0
    14a6:	08 95       	ret

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    14a8:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    14aa:	08 95       	ret

000014ac <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    14ac:	84 ec       	ldi	r24, 0xC4	; 196
    14ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    14b2:	8f ef       	ldi	r24, 0xFF	; 255
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	a0 e0       	ldi	r26, 0x00	; 0
    14b8:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    14ba:	ec eb       	ldi	r30, 0xBC	; 188
    14bc:	f0 e0       	ldi	r31, 0x00	; 0
    14be:	20 81       	ld	r18, Z
    14c0:	22 23       	and	r18, r18
    14c2:	2c f0       	brlt	.+10     	; 0x14ce <i2c_readAck+0x22>
    14c4:	01 97       	sbiw	r24, 0x01	; 1
    14c6:	a1 09       	sbc	r26, r1
    14c8:	b1 09       	sbc	r27, r1
    14ca:	c8 f7       	brcc	.-14     	; 0x14be <i2c_readAck+0x12>
    14cc:	04 c0       	rjmp	.+8      	; 0x14d6 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    14ce:	89 2b       	or	r24, r25
    14d0:	8a 2b       	or	r24, r26
    14d2:	8b 2b       	or	r24, r27
    14d4:	19 f0       	breq	.+6      	; 0x14dc <i2c_readAck+0x30>
		return 0;

    return TWDR;
    14d6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    14da:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    14dc:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    14de:	08 95       	ret

000014e0 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    14e0:	84 e8       	ldi	r24, 0x84	; 132
    14e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    14e6:	8f ef       	ldi	r24, 0xFF	; 255
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	a0 e0       	ldi	r26, 0x00	; 0
    14ec:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    14ee:	ec eb       	ldi	r30, 0xBC	; 188
    14f0:	f0 e0       	ldi	r31, 0x00	; 0
    14f2:	20 81       	ld	r18, Z
    14f4:	22 23       	and	r18, r18
    14f6:	2c f0       	brlt	.+10     	; 0x1502 <i2c_readNak+0x22>
    14f8:	01 97       	sbiw	r24, 0x01	; 1
    14fa:	a1 09       	sbc	r26, r1
    14fc:	b1 09       	sbc	r27, r1
    14fe:	c8 f7       	brcc	.-14     	; 0x14f2 <i2c_readNak+0x12>
    1500:	04 c0       	rjmp	.+8      	; 0x150a <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    1502:	89 2b       	or	r24, r25
    1504:	8a 2b       	or	r24, r26
    1506:	8b 2b       	or	r24, r27
    1508:	19 f0       	breq	.+6      	; 0x1510 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    150a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    150e:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    1510:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    1512:	08 95       	ret

00001514 <USART_Init>:
{
	printf(c);
	//printf(" ");
	print16(&intToPrint);
	printf("  ");
}
    1514:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1518:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    151c:	88 e0       	ldi	r24, 0x08	; 8
    151e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    1522:	8e e0       	ldi	r24, 0x0E	; 14
    1524:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1528:	08 95       	ret

0000152a <uart_putchar>:
    152a:	cf 93       	push	r28
    152c:	c8 2f       	mov	r28, r24
    152e:	8a 30       	cpi	r24, 0x0A	; 10
    1530:	11 f4       	brne	.+4      	; 0x1536 <uart_putchar+0xc>
    1532:	8d e0       	ldi	r24, 0x0D	; 13
    1534:	fa df       	rcall	.-12     	; 0x152a <uart_putchar>
    1536:	e0 ec       	ldi	r30, 0xC0	; 192
    1538:	f0 e0       	ldi	r31, 0x00	; 0
    153a:	90 81       	ld	r25, Z
    153c:	95 ff       	sbrs	r25, 5
    153e:	fd cf       	rjmp	.-6      	; 0x153a <uart_putchar+0x10>
    1540:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1544:	80 e0       	ldi	r24, 0x00	; 0
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	cf 91       	pop	r28
    154a:	08 95       	ret

0000154c <printDouble>:
void printDouble(double *value)
{
    154c:	0f 93       	push	r16
    154e:	1f 93       	push	r17
    1550:	cf 93       	push	r28
    1552:	df 93       	push	r29
    1554:	cd b7       	in	r28, 0x3d	; 61
    1556:	de b7       	in	r29, 0x3e	; 62
    1558:	64 97       	sbiw	r28, 0x14	; 20
    155a:	0f b6       	in	r0, 0x3f	; 63
    155c:	f8 94       	cli
    155e:	de bf       	out	0x3e, r29	; 62
    1560:	0f be       	out	0x3f, r0	; 63
    1562:	cd bf       	out	0x3d, r28	; 61
    1564:	fc 01       	movw	r30, r24
	char c[20]={0};
    1566:	8e 01       	movw	r16, r28
    1568:	0f 5f       	subi	r16, 0xFF	; 255
    156a:	1f 4f       	sbci	r17, 0xFF	; 255
    156c:	84 e1       	ldi	r24, 0x14	; 20
    156e:	d8 01       	movw	r26, r16
    1570:	1d 92       	st	X+, r1
    1572:	8a 95       	dec	r24
    1574:	e9 f7       	brne	.-6      	; 0x1570 <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    1576:	83 81       	ldd	r24, Z+3	; 0x03
    1578:	8f 93       	push	r24
    157a:	82 81       	ldd	r24, Z+2	; 0x02
    157c:	8f 93       	push	r24
    157e:	81 81       	ldd	r24, Z+1	; 0x01
    1580:	8f 93       	push	r24
    1582:	80 81       	ld	r24, Z
    1584:	8f 93       	push	r24
    1586:	87 e9       	ldi	r24, 0x97	; 151
    1588:	93 e0       	ldi	r25, 0x03	; 3
    158a:	9f 93       	push	r25
    158c:	8f 93       	push	r24
    158e:	1f 93       	push	r17
    1590:	0f 93       	push	r16
    1592:	0e 94 37 13 	call	0x266e	; 0x266e <sprintf>
	printf(c);
    1596:	1f 93       	push	r17
    1598:	0f 93       	push	r16
    159a:	0e 94 1f 13 	call	0x263e	; 0x263e <printf>
    159e:	0f b6       	in	r0, 0x3f	; 63
    15a0:	f8 94       	cli
    15a2:	de bf       	out	0x3e, r29	; 62
    15a4:	0f be       	out	0x3f, r0	; 63
    15a6:	cd bf       	out	0x3d, r28	; 61
}
    15a8:	64 96       	adiw	r28, 0x14	; 20
    15aa:	0f b6       	in	r0, 0x3f	; 63
    15ac:	f8 94       	cli
    15ae:	de bf       	out	0x3e, r29	; 62
    15b0:	0f be       	out	0x3f, r0	; 63
    15b2:	cd bf       	out	0x3d, r28	; 61
    15b4:	df 91       	pop	r29
    15b6:	cf 91       	pop	r28
    15b8:	1f 91       	pop	r17
    15ba:	0f 91       	pop	r16
    15bc:	08 95       	ret

000015be <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    15be:	cf 93       	push	r28
    15c0:	df 93       	push	r29
    15c2:	00 d0       	rcall	.+0      	; 0x15c4 <printSD+0x6>
    15c4:	1f 92       	push	r1
    15c6:	cd b7       	in	r28, 0x3d	; 61
    15c8:	de b7       	in	r29, 0x3e	; 62
    15ca:	49 83       	std	Y+1, r20	; 0x01
    15cc:	5a 83       	std	Y+2, r21	; 0x02
    15ce:	6b 83       	std	Y+3, r22	; 0x03
    15d0:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    15d2:	9f 93       	push	r25
    15d4:	8f 93       	push	r24
    15d6:	0e 94 1f 13 	call	0x263e	; 0x263e <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    15da:	ce 01       	movw	r24, r28
    15dc:	01 96       	adiw	r24, 0x01	; 1
    15de:	b6 df       	rcall	.-148    	; 0x154c <printDouble>
	printf("  ");
    15e0:	84 e9       	ldi	r24, 0x94	; 148
    15e2:	93 e0       	ldi	r25, 0x03	; 3
    15e4:	9f 93       	push	r25
    15e6:	8f 93       	push	r24
    15e8:	0e 94 1f 13 	call	0x263e	; 0x263e <printf>
    15ec:	0f 90       	pop	r0
    15ee:	0f 90       	pop	r0
    15f0:	0f 90       	pop	r0
    15f2:	0f 90       	pop	r0
    15f4:	0f 90       	pop	r0
    15f6:	0f 90       	pop	r0
    15f8:	0f 90       	pop	r0
    15fa:	0f 90       	pop	r0
    15fc:	df 91       	pop	r29
    15fe:	cf 91       	pop	r28
    1600:	08 95       	ret

00001602 <__subsf3>:
    1602:	50 58       	subi	r21, 0x80	; 128

00001604 <__addsf3>:
    1604:	bb 27       	eor	r27, r27
    1606:	aa 27       	eor	r26, r26
    1608:	0e d0       	rcall	.+28     	; 0x1626 <__addsf3x>
    160a:	fc c1       	rjmp	.+1016   	; 0x1a04 <__fp_round>
    160c:	ed d1       	rcall	.+986    	; 0x19e8 <__fp_pscA>
    160e:	30 f0       	brcs	.+12     	; 0x161c <__addsf3+0x18>
    1610:	f2 d1       	rcall	.+996    	; 0x19f6 <__fp_pscB>
    1612:	20 f0       	brcs	.+8      	; 0x161c <__addsf3+0x18>
    1614:	31 f4       	brne	.+12     	; 0x1622 <__addsf3+0x1e>
    1616:	9f 3f       	cpi	r25, 0xFF	; 255
    1618:	11 f4       	brne	.+4      	; 0x161e <__addsf3+0x1a>
    161a:	1e f4       	brtc	.+6      	; 0x1622 <__addsf3+0x1e>
    161c:	bd c1       	rjmp	.+890    	; 0x1998 <__fp_nan>
    161e:	0e f4       	brtc	.+2      	; 0x1622 <__addsf3+0x1e>
    1620:	e0 95       	com	r30
    1622:	e7 fb       	bst	r30, 7
    1624:	b3 c1       	rjmp	.+870    	; 0x198c <__fp_inf>

00001626 <__addsf3x>:
    1626:	e9 2f       	mov	r30, r25
    1628:	fe d1       	rcall	.+1020   	; 0x1a26 <__fp_split3>
    162a:	80 f3       	brcs	.-32     	; 0x160c <__addsf3+0x8>
    162c:	ba 17       	cp	r27, r26
    162e:	62 07       	cpc	r22, r18
    1630:	73 07       	cpc	r23, r19
    1632:	84 07       	cpc	r24, r20
    1634:	95 07       	cpc	r25, r21
    1636:	18 f0       	brcs	.+6      	; 0x163e <__addsf3x+0x18>
    1638:	71 f4       	brne	.+28     	; 0x1656 <__addsf3x+0x30>
    163a:	9e f5       	brtc	.+102    	; 0x16a2 <__addsf3x+0x7c>
    163c:	16 c2       	rjmp	.+1068   	; 0x1a6a <__fp_zero>
    163e:	0e f4       	brtc	.+2      	; 0x1642 <__addsf3x+0x1c>
    1640:	e0 95       	com	r30
    1642:	0b 2e       	mov	r0, r27
    1644:	ba 2f       	mov	r27, r26
    1646:	a0 2d       	mov	r26, r0
    1648:	0b 01       	movw	r0, r22
    164a:	b9 01       	movw	r22, r18
    164c:	90 01       	movw	r18, r0
    164e:	0c 01       	movw	r0, r24
    1650:	ca 01       	movw	r24, r20
    1652:	a0 01       	movw	r20, r0
    1654:	11 24       	eor	r1, r1
    1656:	ff 27       	eor	r31, r31
    1658:	59 1b       	sub	r21, r25
    165a:	99 f0       	breq	.+38     	; 0x1682 <__addsf3x+0x5c>
    165c:	59 3f       	cpi	r21, 0xF9	; 249
    165e:	50 f4       	brcc	.+20     	; 0x1674 <__addsf3x+0x4e>
    1660:	50 3e       	cpi	r21, 0xE0	; 224
    1662:	68 f1       	brcs	.+90     	; 0x16be <__addsf3x+0x98>
    1664:	1a 16       	cp	r1, r26
    1666:	f0 40       	sbci	r31, 0x00	; 0
    1668:	a2 2f       	mov	r26, r18
    166a:	23 2f       	mov	r18, r19
    166c:	34 2f       	mov	r19, r20
    166e:	44 27       	eor	r20, r20
    1670:	58 5f       	subi	r21, 0xF8	; 248
    1672:	f3 cf       	rjmp	.-26     	; 0x165a <__addsf3x+0x34>
    1674:	46 95       	lsr	r20
    1676:	37 95       	ror	r19
    1678:	27 95       	ror	r18
    167a:	a7 95       	ror	r26
    167c:	f0 40       	sbci	r31, 0x00	; 0
    167e:	53 95       	inc	r21
    1680:	c9 f7       	brne	.-14     	; 0x1674 <__addsf3x+0x4e>
    1682:	7e f4       	brtc	.+30     	; 0x16a2 <__addsf3x+0x7c>
    1684:	1f 16       	cp	r1, r31
    1686:	ba 0b       	sbc	r27, r26
    1688:	62 0b       	sbc	r22, r18
    168a:	73 0b       	sbc	r23, r19
    168c:	84 0b       	sbc	r24, r20
    168e:	ba f0       	brmi	.+46     	; 0x16be <__addsf3x+0x98>
    1690:	91 50       	subi	r25, 0x01	; 1
    1692:	a1 f0       	breq	.+40     	; 0x16bc <__addsf3x+0x96>
    1694:	ff 0f       	add	r31, r31
    1696:	bb 1f       	adc	r27, r27
    1698:	66 1f       	adc	r22, r22
    169a:	77 1f       	adc	r23, r23
    169c:	88 1f       	adc	r24, r24
    169e:	c2 f7       	brpl	.-16     	; 0x1690 <__addsf3x+0x6a>
    16a0:	0e c0       	rjmp	.+28     	; 0x16be <__addsf3x+0x98>
    16a2:	ba 0f       	add	r27, r26
    16a4:	62 1f       	adc	r22, r18
    16a6:	73 1f       	adc	r23, r19
    16a8:	84 1f       	adc	r24, r20
    16aa:	48 f4       	brcc	.+18     	; 0x16be <__addsf3x+0x98>
    16ac:	87 95       	ror	r24
    16ae:	77 95       	ror	r23
    16b0:	67 95       	ror	r22
    16b2:	b7 95       	ror	r27
    16b4:	f7 95       	ror	r31
    16b6:	9e 3f       	cpi	r25, 0xFE	; 254
    16b8:	08 f0       	brcs	.+2      	; 0x16bc <__addsf3x+0x96>
    16ba:	b3 cf       	rjmp	.-154    	; 0x1622 <__addsf3+0x1e>
    16bc:	93 95       	inc	r25
    16be:	88 0f       	add	r24, r24
    16c0:	08 f0       	brcs	.+2      	; 0x16c4 <__addsf3x+0x9e>
    16c2:	99 27       	eor	r25, r25
    16c4:	ee 0f       	add	r30, r30
    16c6:	97 95       	ror	r25
    16c8:	87 95       	ror	r24
    16ca:	08 95       	ret
    16cc:	8d d1       	rcall	.+794    	; 0x19e8 <__fp_pscA>
    16ce:	58 f0       	brcs	.+22     	; 0x16e6 <__addsf3x+0xc0>
    16d0:	80 e8       	ldi	r24, 0x80	; 128
    16d2:	91 e0       	ldi	r25, 0x01	; 1
    16d4:	09 f4       	brne	.+2      	; 0x16d8 <__addsf3x+0xb2>
    16d6:	9e ef       	ldi	r25, 0xFE	; 254
    16d8:	8e d1       	rcall	.+796    	; 0x19f6 <__fp_pscB>
    16da:	28 f0       	brcs	.+10     	; 0x16e6 <__addsf3x+0xc0>
    16dc:	40 e8       	ldi	r20, 0x80	; 128
    16de:	51 e0       	ldi	r21, 0x01	; 1
    16e0:	59 f4       	brne	.+22     	; 0x16f8 <atan2+0xe>
    16e2:	5e ef       	ldi	r21, 0xFE	; 254
    16e4:	09 c0       	rjmp	.+18     	; 0x16f8 <atan2+0xe>
    16e6:	58 c1       	rjmp	.+688    	; 0x1998 <__fp_nan>
    16e8:	c0 c1       	rjmp	.+896    	; 0x1a6a <__fp_zero>

000016ea <atan2>:
    16ea:	e9 2f       	mov	r30, r25
    16ec:	e0 78       	andi	r30, 0x80	; 128
    16ee:	9b d1       	rcall	.+822    	; 0x1a26 <__fp_split3>
    16f0:	68 f3       	brcs	.-38     	; 0x16cc <__addsf3x+0xa6>
    16f2:	09 2e       	mov	r0, r25
    16f4:	05 2a       	or	r0, r21
    16f6:	c1 f3       	breq	.-16     	; 0x16e8 <__addsf3x+0xc2>
    16f8:	26 17       	cp	r18, r22
    16fa:	37 07       	cpc	r19, r23
    16fc:	48 07       	cpc	r20, r24
    16fe:	59 07       	cpc	r21, r25
    1700:	38 f0       	brcs	.+14     	; 0x1710 <atan2+0x26>
    1702:	0e 2e       	mov	r0, r30
    1704:	07 f8       	bld	r0, 7
    1706:	e0 25       	eor	r30, r0
    1708:	69 f0       	breq	.+26     	; 0x1724 <atan2+0x3a>
    170a:	e0 25       	eor	r30, r0
    170c:	e0 64       	ori	r30, 0x40	; 64
    170e:	0a c0       	rjmp	.+20     	; 0x1724 <atan2+0x3a>
    1710:	ef 63       	ori	r30, 0x3F	; 63
    1712:	07 f8       	bld	r0, 7
    1714:	00 94       	com	r0
    1716:	07 fa       	bst	r0, 7
    1718:	db 01       	movw	r26, r22
    171a:	b9 01       	movw	r22, r18
    171c:	9d 01       	movw	r18, r26
    171e:	dc 01       	movw	r26, r24
    1720:	ca 01       	movw	r24, r20
    1722:	ad 01       	movw	r20, r26
    1724:	ef 93       	push	r30
    1726:	47 d0       	rcall	.+142    	; 0x17b6 <__divsf3_pse>
    1728:	6d d1       	rcall	.+730    	; 0x1a04 <__fp_round>
    172a:	0a d0       	rcall	.+20     	; 0x1740 <atan>
    172c:	5f 91       	pop	r21
    172e:	55 23       	and	r21, r21
    1730:	31 f0       	breq	.+12     	; 0x173e <atan2+0x54>
    1732:	2b ed       	ldi	r18, 0xDB	; 219
    1734:	3f e0       	ldi	r19, 0x0F	; 15
    1736:	49 e4       	ldi	r20, 0x49	; 73
    1738:	50 fd       	sbrc	r21, 0
    173a:	49 ec       	ldi	r20, 0xC9	; 201
    173c:	63 cf       	rjmp	.-314    	; 0x1604 <__addsf3>
    173e:	08 95       	ret

00001740 <atan>:
    1740:	df 93       	push	r29
    1742:	dd 27       	eor	r29, r29
    1744:	b9 2f       	mov	r27, r25
    1746:	bf 77       	andi	r27, 0x7F	; 127
    1748:	40 e8       	ldi	r20, 0x80	; 128
    174a:	5f e3       	ldi	r21, 0x3F	; 63
    174c:	16 16       	cp	r1, r22
    174e:	17 06       	cpc	r1, r23
    1750:	48 07       	cpc	r20, r24
    1752:	5b 07       	cpc	r21, r27
    1754:	10 f4       	brcc	.+4      	; 0x175a <atan+0x1a>
    1756:	d9 2f       	mov	r29, r25
    1758:	8f d1       	rcall	.+798    	; 0x1a78 <inverse>
    175a:	9f 93       	push	r25
    175c:	8f 93       	push	r24
    175e:	7f 93       	push	r23
    1760:	6f 93       	push	r22
    1762:	36 d2       	rcall	.+1132   	; 0x1bd0 <square>
    1764:	e4 ee       	ldi	r30, 0xE4	; 228
    1766:	f0 e0       	ldi	r31, 0x00	; 0
    1768:	1a d1       	rcall	.+564    	; 0x199e <__fp_powser>
    176a:	4c d1       	rcall	.+664    	; 0x1a04 <__fp_round>
    176c:	2f 91       	pop	r18
    176e:	3f 91       	pop	r19
    1770:	4f 91       	pop	r20
    1772:	5f 91       	pop	r21
    1774:	94 d1       	rcall	.+808    	; 0x1a9e <__mulsf3x>
    1776:	dd 23       	and	r29, r29
    1778:	49 f0       	breq	.+18     	; 0x178c <atan+0x4c>
    177a:	90 58       	subi	r25, 0x80	; 128
    177c:	a2 ea       	ldi	r26, 0xA2	; 162
    177e:	2a ed       	ldi	r18, 0xDA	; 218
    1780:	3f e0       	ldi	r19, 0x0F	; 15
    1782:	49 ec       	ldi	r20, 0xC9	; 201
    1784:	5f e3       	ldi	r21, 0x3F	; 63
    1786:	d0 78       	andi	r29, 0x80	; 128
    1788:	5d 27       	eor	r21, r29
    178a:	4d df       	rcall	.-358    	; 0x1626 <__addsf3x>
    178c:	df 91       	pop	r29
    178e:	3a c1       	rjmp	.+628    	; 0x1a04 <__fp_round>

00001790 <__cmpsf2>:
    1790:	d9 d0       	rcall	.+434    	; 0x1944 <__fp_cmp>
    1792:	08 f4       	brcc	.+2      	; 0x1796 <__cmpsf2+0x6>
    1794:	81 e0       	ldi	r24, 0x01	; 1
    1796:	08 95       	ret

00001798 <__divsf3>:
    1798:	0c d0       	rcall	.+24     	; 0x17b2 <__divsf3x>
    179a:	34 c1       	rjmp	.+616    	; 0x1a04 <__fp_round>
    179c:	2c d1       	rcall	.+600    	; 0x19f6 <__fp_pscB>
    179e:	40 f0       	brcs	.+16     	; 0x17b0 <__divsf3+0x18>
    17a0:	23 d1       	rcall	.+582    	; 0x19e8 <__fp_pscA>
    17a2:	30 f0       	brcs	.+12     	; 0x17b0 <__divsf3+0x18>
    17a4:	21 f4       	brne	.+8      	; 0x17ae <__divsf3+0x16>
    17a6:	5f 3f       	cpi	r21, 0xFF	; 255
    17a8:	19 f0       	breq	.+6      	; 0x17b0 <__divsf3+0x18>
    17aa:	f0 c0       	rjmp	.+480    	; 0x198c <__fp_inf>
    17ac:	51 11       	cpse	r21, r1
    17ae:	5e c1       	rjmp	.+700    	; 0x1a6c <__fp_szero>
    17b0:	f3 c0       	rjmp	.+486    	; 0x1998 <__fp_nan>

000017b2 <__divsf3x>:
    17b2:	39 d1       	rcall	.+626    	; 0x1a26 <__fp_split3>
    17b4:	98 f3       	brcs	.-26     	; 0x179c <__divsf3+0x4>

000017b6 <__divsf3_pse>:
    17b6:	99 23       	and	r25, r25
    17b8:	c9 f3       	breq	.-14     	; 0x17ac <__divsf3+0x14>
    17ba:	55 23       	and	r21, r21
    17bc:	b1 f3       	breq	.-20     	; 0x17aa <__divsf3+0x12>
    17be:	95 1b       	sub	r25, r21
    17c0:	55 0b       	sbc	r21, r21
    17c2:	bb 27       	eor	r27, r27
    17c4:	aa 27       	eor	r26, r26
    17c6:	62 17       	cp	r22, r18
    17c8:	73 07       	cpc	r23, r19
    17ca:	84 07       	cpc	r24, r20
    17cc:	38 f0       	brcs	.+14     	; 0x17dc <__divsf3_pse+0x26>
    17ce:	9f 5f       	subi	r25, 0xFF	; 255
    17d0:	5f 4f       	sbci	r21, 0xFF	; 255
    17d2:	22 0f       	add	r18, r18
    17d4:	33 1f       	adc	r19, r19
    17d6:	44 1f       	adc	r20, r20
    17d8:	aa 1f       	adc	r26, r26
    17da:	a9 f3       	breq	.-22     	; 0x17c6 <__divsf3_pse+0x10>
    17dc:	33 d0       	rcall	.+102    	; 0x1844 <__divsf3_pse+0x8e>
    17de:	0e 2e       	mov	r0, r30
    17e0:	3a f0       	brmi	.+14     	; 0x17f0 <__divsf3_pse+0x3a>
    17e2:	e0 e8       	ldi	r30, 0x80	; 128
    17e4:	30 d0       	rcall	.+96     	; 0x1846 <__divsf3_pse+0x90>
    17e6:	91 50       	subi	r25, 0x01	; 1
    17e8:	50 40       	sbci	r21, 0x00	; 0
    17ea:	e6 95       	lsr	r30
    17ec:	00 1c       	adc	r0, r0
    17ee:	ca f7       	brpl	.-14     	; 0x17e2 <__divsf3_pse+0x2c>
    17f0:	29 d0       	rcall	.+82     	; 0x1844 <__divsf3_pse+0x8e>
    17f2:	fe 2f       	mov	r31, r30
    17f4:	27 d0       	rcall	.+78     	; 0x1844 <__divsf3_pse+0x8e>
    17f6:	66 0f       	add	r22, r22
    17f8:	77 1f       	adc	r23, r23
    17fa:	88 1f       	adc	r24, r24
    17fc:	bb 1f       	adc	r27, r27
    17fe:	26 17       	cp	r18, r22
    1800:	37 07       	cpc	r19, r23
    1802:	48 07       	cpc	r20, r24
    1804:	ab 07       	cpc	r26, r27
    1806:	b0 e8       	ldi	r27, 0x80	; 128
    1808:	09 f0       	breq	.+2      	; 0x180c <__divsf3_pse+0x56>
    180a:	bb 0b       	sbc	r27, r27
    180c:	80 2d       	mov	r24, r0
    180e:	bf 01       	movw	r22, r30
    1810:	ff 27       	eor	r31, r31
    1812:	93 58       	subi	r25, 0x83	; 131
    1814:	5f 4f       	sbci	r21, 0xFF	; 255
    1816:	2a f0       	brmi	.+10     	; 0x1822 <__divsf3_pse+0x6c>
    1818:	9e 3f       	cpi	r25, 0xFE	; 254
    181a:	51 05       	cpc	r21, r1
    181c:	68 f0       	brcs	.+26     	; 0x1838 <__divsf3_pse+0x82>
    181e:	b6 c0       	rjmp	.+364    	; 0x198c <__fp_inf>
    1820:	25 c1       	rjmp	.+586    	; 0x1a6c <__fp_szero>
    1822:	5f 3f       	cpi	r21, 0xFF	; 255
    1824:	ec f3       	brlt	.-6      	; 0x1820 <__divsf3_pse+0x6a>
    1826:	98 3e       	cpi	r25, 0xE8	; 232
    1828:	dc f3       	brlt	.-10     	; 0x1820 <__divsf3_pse+0x6a>
    182a:	86 95       	lsr	r24
    182c:	77 95       	ror	r23
    182e:	67 95       	ror	r22
    1830:	b7 95       	ror	r27
    1832:	f7 95       	ror	r31
    1834:	9f 5f       	subi	r25, 0xFF	; 255
    1836:	c9 f7       	brne	.-14     	; 0x182a <__divsf3_pse+0x74>
    1838:	88 0f       	add	r24, r24
    183a:	91 1d       	adc	r25, r1
    183c:	96 95       	lsr	r25
    183e:	87 95       	ror	r24
    1840:	97 f9       	bld	r25, 7
    1842:	08 95       	ret
    1844:	e1 e0       	ldi	r30, 0x01	; 1
    1846:	66 0f       	add	r22, r22
    1848:	77 1f       	adc	r23, r23
    184a:	88 1f       	adc	r24, r24
    184c:	bb 1f       	adc	r27, r27
    184e:	62 17       	cp	r22, r18
    1850:	73 07       	cpc	r23, r19
    1852:	84 07       	cpc	r24, r20
    1854:	ba 07       	cpc	r27, r26
    1856:	20 f0       	brcs	.+8      	; 0x1860 <__divsf3_pse+0xaa>
    1858:	62 1b       	sub	r22, r18
    185a:	73 0b       	sbc	r23, r19
    185c:	84 0b       	sbc	r24, r20
    185e:	ba 0b       	sbc	r27, r26
    1860:	ee 1f       	adc	r30, r30
    1862:	88 f7       	brcc	.-30     	; 0x1846 <__divsf3_pse+0x90>
    1864:	e0 95       	com	r30
    1866:	08 95       	ret

00001868 <__fixsfsi>:
    1868:	04 d0       	rcall	.+8      	; 0x1872 <__fixunssfsi>
    186a:	68 94       	set
    186c:	b1 11       	cpse	r27, r1
    186e:	fe c0       	rjmp	.+508    	; 0x1a6c <__fp_szero>
    1870:	08 95       	ret

00001872 <__fixunssfsi>:
    1872:	e1 d0       	rcall	.+450    	; 0x1a36 <__fp_splitA>
    1874:	88 f0       	brcs	.+34     	; 0x1898 <__fixunssfsi+0x26>
    1876:	9f 57       	subi	r25, 0x7F	; 127
    1878:	90 f0       	brcs	.+36     	; 0x189e <__fixunssfsi+0x2c>
    187a:	b9 2f       	mov	r27, r25
    187c:	99 27       	eor	r25, r25
    187e:	b7 51       	subi	r27, 0x17	; 23
    1880:	a0 f0       	brcs	.+40     	; 0x18aa <__fixunssfsi+0x38>
    1882:	d1 f0       	breq	.+52     	; 0x18b8 <__fixunssfsi+0x46>
    1884:	66 0f       	add	r22, r22
    1886:	77 1f       	adc	r23, r23
    1888:	88 1f       	adc	r24, r24
    188a:	99 1f       	adc	r25, r25
    188c:	1a f0       	brmi	.+6      	; 0x1894 <__fixunssfsi+0x22>
    188e:	ba 95       	dec	r27
    1890:	c9 f7       	brne	.-14     	; 0x1884 <__fixunssfsi+0x12>
    1892:	12 c0       	rjmp	.+36     	; 0x18b8 <__fixunssfsi+0x46>
    1894:	b1 30       	cpi	r27, 0x01	; 1
    1896:	81 f0       	breq	.+32     	; 0x18b8 <__fixunssfsi+0x46>
    1898:	e8 d0       	rcall	.+464    	; 0x1a6a <__fp_zero>
    189a:	b1 e0       	ldi	r27, 0x01	; 1
    189c:	08 95       	ret
    189e:	e5 c0       	rjmp	.+458    	; 0x1a6a <__fp_zero>
    18a0:	67 2f       	mov	r22, r23
    18a2:	78 2f       	mov	r23, r24
    18a4:	88 27       	eor	r24, r24
    18a6:	b8 5f       	subi	r27, 0xF8	; 248
    18a8:	39 f0       	breq	.+14     	; 0x18b8 <__fixunssfsi+0x46>
    18aa:	b9 3f       	cpi	r27, 0xF9	; 249
    18ac:	cc f3       	brlt	.-14     	; 0x18a0 <__fixunssfsi+0x2e>
    18ae:	86 95       	lsr	r24
    18b0:	77 95       	ror	r23
    18b2:	67 95       	ror	r22
    18b4:	b3 95       	inc	r27
    18b6:	d9 f7       	brne	.-10     	; 0x18ae <__fixunssfsi+0x3c>
    18b8:	3e f4       	brtc	.+14     	; 0x18c8 <__fixunssfsi+0x56>
    18ba:	90 95       	com	r25
    18bc:	80 95       	com	r24
    18be:	70 95       	com	r23
    18c0:	61 95       	neg	r22
    18c2:	7f 4f       	sbci	r23, 0xFF	; 255
    18c4:	8f 4f       	sbci	r24, 0xFF	; 255
    18c6:	9f 4f       	sbci	r25, 0xFF	; 255
    18c8:	08 95       	ret

000018ca <__floatunsisf>:
    18ca:	e8 94       	clt
    18cc:	09 c0       	rjmp	.+18     	; 0x18e0 <__floatsisf+0x12>

000018ce <__floatsisf>:
    18ce:	97 fb       	bst	r25, 7
    18d0:	3e f4       	brtc	.+14     	; 0x18e0 <__floatsisf+0x12>
    18d2:	90 95       	com	r25
    18d4:	80 95       	com	r24
    18d6:	70 95       	com	r23
    18d8:	61 95       	neg	r22
    18da:	7f 4f       	sbci	r23, 0xFF	; 255
    18dc:	8f 4f       	sbci	r24, 0xFF	; 255
    18de:	9f 4f       	sbci	r25, 0xFF	; 255
    18e0:	99 23       	and	r25, r25
    18e2:	a9 f0       	breq	.+42     	; 0x190e <__floatsisf+0x40>
    18e4:	f9 2f       	mov	r31, r25
    18e6:	96 e9       	ldi	r25, 0x96	; 150
    18e8:	bb 27       	eor	r27, r27
    18ea:	93 95       	inc	r25
    18ec:	f6 95       	lsr	r31
    18ee:	87 95       	ror	r24
    18f0:	77 95       	ror	r23
    18f2:	67 95       	ror	r22
    18f4:	b7 95       	ror	r27
    18f6:	f1 11       	cpse	r31, r1
    18f8:	f8 cf       	rjmp	.-16     	; 0x18ea <__floatsisf+0x1c>
    18fa:	fa f4       	brpl	.+62     	; 0x193a <__floatsisf+0x6c>
    18fc:	bb 0f       	add	r27, r27
    18fe:	11 f4       	brne	.+4      	; 0x1904 <__floatsisf+0x36>
    1900:	60 ff       	sbrs	r22, 0
    1902:	1b c0       	rjmp	.+54     	; 0x193a <__floatsisf+0x6c>
    1904:	6f 5f       	subi	r22, 0xFF	; 255
    1906:	7f 4f       	sbci	r23, 0xFF	; 255
    1908:	8f 4f       	sbci	r24, 0xFF	; 255
    190a:	9f 4f       	sbci	r25, 0xFF	; 255
    190c:	16 c0       	rjmp	.+44     	; 0x193a <__floatsisf+0x6c>
    190e:	88 23       	and	r24, r24
    1910:	11 f0       	breq	.+4      	; 0x1916 <__floatsisf+0x48>
    1912:	96 e9       	ldi	r25, 0x96	; 150
    1914:	11 c0       	rjmp	.+34     	; 0x1938 <__floatsisf+0x6a>
    1916:	77 23       	and	r23, r23
    1918:	21 f0       	breq	.+8      	; 0x1922 <__floatsisf+0x54>
    191a:	9e e8       	ldi	r25, 0x8E	; 142
    191c:	87 2f       	mov	r24, r23
    191e:	76 2f       	mov	r23, r22
    1920:	05 c0       	rjmp	.+10     	; 0x192c <__floatsisf+0x5e>
    1922:	66 23       	and	r22, r22
    1924:	71 f0       	breq	.+28     	; 0x1942 <__floatsisf+0x74>
    1926:	96 e8       	ldi	r25, 0x86	; 134
    1928:	86 2f       	mov	r24, r22
    192a:	70 e0       	ldi	r23, 0x00	; 0
    192c:	60 e0       	ldi	r22, 0x00	; 0
    192e:	2a f0       	brmi	.+10     	; 0x193a <__floatsisf+0x6c>
    1930:	9a 95       	dec	r25
    1932:	66 0f       	add	r22, r22
    1934:	77 1f       	adc	r23, r23
    1936:	88 1f       	adc	r24, r24
    1938:	da f7       	brpl	.-10     	; 0x1930 <__floatsisf+0x62>
    193a:	88 0f       	add	r24, r24
    193c:	96 95       	lsr	r25
    193e:	87 95       	ror	r24
    1940:	97 f9       	bld	r25, 7
    1942:	08 95       	ret

00001944 <__fp_cmp>:
    1944:	99 0f       	add	r25, r25
    1946:	00 08       	sbc	r0, r0
    1948:	55 0f       	add	r21, r21
    194a:	aa 0b       	sbc	r26, r26
    194c:	e0 e8       	ldi	r30, 0x80	; 128
    194e:	fe ef       	ldi	r31, 0xFE	; 254
    1950:	16 16       	cp	r1, r22
    1952:	17 06       	cpc	r1, r23
    1954:	e8 07       	cpc	r30, r24
    1956:	f9 07       	cpc	r31, r25
    1958:	c0 f0       	brcs	.+48     	; 0x198a <__fp_cmp+0x46>
    195a:	12 16       	cp	r1, r18
    195c:	13 06       	cpc	r1, r19
    195e:	e4 07       	cpc	r30, r20
    1960:	f5 07       	cpc	r31, r21
    1962:	98 f0       	brcs	.+38     	; 0x198a <__fp_cmp+0x46>
    1964:	62 1b       	sub	r22, r18
    1966:	73 0b       	sbc	r23, r19
    1968:	84 0b       	sbc	r24, r20
    196a:	95 0b       	sbc	r25, r21
    196c:	39 f4       	brne	.+14     	; 0x197c <__fp_cmp+0x38>
    196e:	0a 26       	eor	r0, r26
    1970:	61 f0       	breq	.+24     	; 0x198a <__fp_cmp+0x46>
    1972:	23 2b       	or	r18, r19
    1974:	24 2b       	or	r18, r20
    1976:	25 2b       	or	r18, r21
    1978:	21 f4       	brne	.+8      	; 0x1982 <__fp_cmp+0x3e>
    197a:	08 95       	ret
    197c:	0a 26       	eor	r0, r26
    197e:	09 f4       	brne	.+2      	; 0x1982 <__fp_cmp+0x3e>
    1980:	a1 40       	sbci	r26, 0x01	; 1
    1982:	a6 95       	lsr	r26
    1984:	8f ef       	ldi	r24, 0xFF	; 255
    1986:	81 1d       	adc	r24, r1
    1988:	81 1d       	adc	r24, r1
    198a:	08 95       	ret

0000198c <__fp_inf>:
    198c:	97 f9       	bld	r25, 7
    198e:	9f 67       	ori	r25, 0x7F	; 127
    1990:	80 e8       	ldi	r24, 0x80	; 128
    1992:	70 e0       	ldi	r23, 0x00	; 0
    1994:	60 e0       	ldi	r22, 0x00	; 0
    1996:	08 95       	ret

00001998 <__fp_nan>:
    1998:	9f ef       	ldi	r25, 0xFF	; 255
    199a:	80 ec       	ldi	r24, 0xC0	; 192
    199c:	08 95       	ret

0000199e <__fp_powser>:
    199e:	df 93       	push	r29
    19a0:	cf 93       	push	r28
    19a2:	1f 93       	push	r17
    19a4:	0f 93       	push	r16
    19a6:	ff 92       	push	r15
    19a8:	ef 92       	push	r14
    19aa:	df 92       	push	r13
    19ac:	7b 01       	movw	r14, r22
    19ae:	8c 01       	movw	r16, r24
    19b0:	68 94       	set
    19b2:	05 c0       	rjmp	.+10     	; 0x19be <__fp_powser+0x20>
    19b4:	da 2e       	mov	r13, r26
    19b6:	ef 01       	movw	r28, r30
    19b8:	72 d0       	rcall	.+228    	; 0x1a9e <__mulsf3x>
    19ba:	fe 01       	movw	r30, r28
    19bc:	e8 94       	clt
    19be:	a5 91       	lpm	r26, Z+
    19c0:	25 91       	lpm	r18, Z+
    19c2:	35 91       	lpm	r19, Z+
    19c4:	45 91       	lpm	r20, Z+
    19c6:	55 91       	lpm	r21, Z+
    19c8:	ae f3       	brts	.-22     	; 0x19b4 <__fp_powser+0x16>
    19ca:	ef 01       	movw	r28, r30
    19cc:	2c de       	rcall	.-936    	; 0x1626 <__addsf3x>
    19ce:	fe 01       	movw	r30, r28
    19d0:	97 01       	movw	r18, r14
    19d2:	a8 01       	movw	r20, r16
    19d4:	da 94       	dec	r13
    19d6:	79 f7       	brne	.-34     	; 0x19b6 <__fp_powser+0x18>
    19d8:	df 90       	pop	r13
    19da:	ef 90       	pop	r14
    19dc:	ff 90       	pop	r15
    19de:	0f 91       	pop	r16
    19e0:	1f 91       	pop	r17
    19e2:	cf 91       	pop	r28
    19e4:	df 91       	pop	r29
    19e6:	08 95       	ret

000019e8 <__fp_pscA>:
    19e8:	00 24       	eor	r0, r0
    19ea:	0a 94       	dec	r0
    19ec:	16 16       	cp	r1, r22
    19ee:	17 06       	cpc	r1, r23
    19f0:	18 06       	cpc	r1, r24
    19f2:	09 06       	cpc	r0, r25
    19f4:	08 95       	ret

000019f6 <__fp_pscB>:
    19f6:	00 24       	eor	r0, r0
    19f8:	0a 94       	dec	r0
    19fa:	12 16       	cp	r1, r18
    19fc:	13 06       	cpc	r1, r19
    19fe:	14 06       	cpc	r1, r20
    1a00:	05 06       	cpc	r0, r21
    1a02:	08 95       	ret

00001a04 <__fp_round>:
    1a04:	09 2e       	mov	r0, r25
    1a06:	03 94       	inc	r0
    1a08:	00 0c       	add	r0, r0
    1a0a:	11 f4       	brne	.+4      	; 0x1a10 <__fp_round+0xc>
    1a0c:	88 23       	and	r24, r24
    1a0e:	52 f0       	brmi	.+20     	; 0x1a24 <__fp_round+0x20>
    1a10:	bb 0f       	add	r27, r27
    1a12:	40 f4       	brcc	.+16     	; 0x1a24 <__fp_round+0x20>
    1a14:	bf 2b       	or	r27, r31
    1a16:	11 f4       	brne	.+4      	; 0x1a1c <__fp_round+0x18>
    1a18:	60 ff       	sbrs	r22, 0
    1a1a:	04 c0       	rjmp	.+8      	; 0x1a24 <__fp_round+0x20>
    1a1c:	6f 5f       	subi	r22, 0xFF	; 255
    1a1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1a20:	8f 4f       	sbci	r24, 0xFF	; 255
    1a22:	9f 4f       	sbci	r25, 0xFF	; 255
    1a24:	08 95       	ret

00001a26 <__fp_split3>:
    1a26:	57 fd       	sbrc	r21, 7
    1a28:	90 58       	subi	r25, 0x80	; 128
    1a2a:	44 0f       	add	r20, r20
    1a2c:	55 1f       	adc	r21, r21
    1a2e:	59 f0       	breq	.+22     	; 0x1a46 <__fp_splitA+0x10>
    1a30:	5f 3f       	cpi	r21, 0xFF	; 255
    1a32:	71 f0       	breq	.+28     	; 0x1a50 <__fp_splitA+0x1a>
    1a34:	47 95       	ror	r20

00001a36 <__fp_splitA>:
    1a36:	88 0f       	add	r24, r24
    1a38:	97 fb       	bst	r25, 7
    1a3a:	99 1f       	adc	r25, r25
    1a3c:	61 f0       	breq	.+24     	; 0x1a56 <__fp_splitA+0x20>
    1a3e:	9f 3f       	cpi	r25, 0xFF	; 255
    1a40:	79 f0       	breq	.+30     	; 0x1a60 <__fp_splitA+0x2a>
    1a42:	87 95       	ror	r24
    1a44:	08 95       	ret
    1a46:	12 16       	cp	r1, r18
    1a48:	13 06       	cpc	r1, r19
    1a4a:	14 06       	cpc	r1, r20
    1a4c:	55 1f       	adc	r21, r21
    1a4e:	f2 cf       	rjmp	.-28     	; 0x1a34 <__fp_split3+0xe>
    1a50:	46 95       	lsr	r20
    1a52:	f1 df       	rcall	.-30     	; 0x1a36 <__fp_splitA>
    1a54:	08 c0       	rjmp	.+16     	; 0x1a66 <__fp_splitA+0x30>
    1a56:	16 16       	cp	r1, r22
    1a58:	17 06       	cpc	r1, r23
    1a5a:	18 06       	cpc	r1, r24
    1a5c:	99 1f       	adc	r25, r25
    1a5e:	f1 cf       	rjmp	.-30     	; 0x1a42 <__fp_splitA+0xc>
    1a60:	86 95       	lsr	r24
    1a62:	71 05       	cpc	r23, r1
    1a64:	61 05       	cpc	r22, r1
    1a66:	08 94       	sec
    1a68:	08 95       	ret

00001a6a <__fp_zero>:
    1a6a:	e8 94       	clt

00001a6c <__fp_szero>:
    1a6c:	bb 27       	eor	r27, r27
    1a6e:	66 27       	eor	r22, r22
    1a70:	77 27       	eor	r23, r23
    1a72:	cb 01       	movw	r24, r22
    1a74:	97 f9       	bld	r25, 7
    1a76:	08 95       	ret

00001a78 <inverse>:
    1a78:	9b 01       	movw	r18, r22
    1a7a:	ac 01       	movw	r20, r24
    1a7c:	60 e0       	ldi	r22, 0x00	; 0
    1a7e:	70 e0       	ldi	r23, 0x00	; 0
    1a80:	80 e8       	ldi	r24, 0x80	; 128
    1a82:	9f e3       	ldi	r25, 0x3F	; 63
    1a84:	89 ce       	rjmp	.-750    	; 0x1798 <__divsf3>

00001a86 <__mulsf3>:
    1a86:	0b d0       	rcall	.+22     	; 0x1a9e <__mulsf3x>
    1a88:	bd cf       	rjmp	.-134    	; 0x1a04 <__fp_round>
    1a8a:	ae df       	rcall	.-164    	; 0x19e8 <__fp_pscA>
    1a8c:	28 f0       	brcs	.+10     	; 0x1a98 <__mulsf3+0x12>
    1a8e:	b3 df       	rcall	.-154    	; 0x19f6 <__fp_pscB>
    1a90:	18 f0       	brcs	.+6      	; 0x1a98 <__mulsf3+0x12>
    1a92:	95 23       	and	r25, r21
    1a94:	09 f0       	breq	.+2      	; 0x1a98 <__mulsf3+0x12>
    1a96:	7a cf       	rjmp	.-268    	; 0x198c <__fp_inf>
    1a98:	7f cf       	rjmp	.-258    	; 0x1998 <__fp_nan>
    1a9a:	11 24       	eor	r1, r1
    1a9c:	e7 cf       	rjmp	.-50     	; 0x1a6c <__fp_szero>

00001a9e <__mulsf3x>:
    1a9e:	c3 df       	rcall	.-122    	; 0x1a26 <__fp_split3>
    1aa0:	a0 f3       	brcs	.-24     	; 0x1a8a <__mulsf3+0x4>

00001aa2 <__mulsf3_pse>:
    1aa2:	95 9f       	mul	r25, r21
    1aa4:	d1 f3       	breq	.-12     	; 0x1a9a <__mulsf3+0x14>
    1aa6:	95 0f       	add	r25, r21
    1aa8:	50 e0       	ldi	r21, 0x00	; 0
    1aaa:	55 1f       	adc	r21, r21
    1aac:	62 9f       	mul	r22, r18
    1aae:	f0 01       	movw	r30, r0
    1ab0:	72 9f       	mul	r23, r18
    1ab2:	bb 27       	eor	r27, r27
    1ab4:	f0 0d       	add	r31, r0
    1ab6:	b1 1d       	adc	r27, r1
    1ab8:	63 9f       	mul	r22, r19
    1aba:	aa 27       	eor	r26, r26
    1abc:	f0 0d       	add	r31, r0
    1abe:	b1 1d       	adc	r27, r1
    1ac0:	aa 1f       	adc	r26, r26
    1ac2:	64 9f       	mul	r22, r20
    1ac4:	66 27       	eor	r22, r22
    1ac6:	b0 0d       	add	r27, r0
    1ac8:	a1 1d       	adc	r26, r1
    1aca:	66 1f       	adc	r22, r22
    1acc:	82 9f       	mul	r24, r18
    1ace:	22 27       	eor	r18, r18
    1ad0:	b0 0d       	add	r27, r0
    1ad2:	a1 1d       	adc	r26, r1
    1ad4:	62 1f       	adc	r22, r18
    1ad6:	73 9f       	mul	r23, r19
    1ad8:	b0 0d       	add	r27, r0
    1ada:	a1 1d       	adc	r26, r1
    1adc:	62 1f       	adc	r22, r18
    1ade:	83 9f       	mul	r24, r19
    1ae0:	a0 0d       	add	r26, r0
    1ae2:	61 1d       	adc	r22, r1
    1ae4:	22 1f       	adc	r18, r18
    1ae6:	74 9f       	mul	r23, r20
    1ae8:	33 27       	eor	r19, r19
    1aea:	a0 0d       	add	r26, r0
    1aec:	61 1d       	adc	r22, r1
    1aee:	23 1f       	adc	r18, r19
    1af0:	84 9f       	mul	r24, r20
    1af2:	60 0d       	add	r22, r0
    1af4:	21 1d       	adc	r18, r1
    1af6:	82 2f       	mov	r24, r18
    1af8:	76 2f       	mov	r23, r22
    1afa:	6a 2f       	mov	r22, r26
    1afc:	11 24       	eor	r1, r1
    1afe:	9f 57       	subi	r25, 0x7F	; 127
    1b00:	50 40       	sbci	r21, 0x00	; 0
    1b02:	8a f0       	brmi	.+34     	; 0x1b26 <__mulsf3_pse+0x84>
    1b04:	e1 f0       	breq	.+56     	; 0x1b3e <__mulsf3_pse+0x9c>
    1b06:	88 23       	and	r24, r24
    1b08:	4a f0       	brmi	.+18     	; 0x1b1c <__mulsf3_pse+0x7a>
    1b0a:	ee 0f       	add	r30, r30
    1b0c:	ff 1f       	adc	r31, r31
    1b0e:	bb 1f       	adc	r27, r27
    1b10:	66 1f       	adc	r22, r22
    1b12:	77 1f       	adc	r23, r23
    1b14:	88 1f       	adc	r24, r24
    1b16:	91 50       	subi	r25, 0x01	; 1
    1b18:	50 40       	sbci	r21, 0x00	; 0
    1b1a:	a9 f7       	brne	.-22     	; 0x1b06 <__mulsf3_pse+0x64>
    1b1c:	9e 3f       	cpi	r25, 0xFE	; 254
    1b1e:	51 05       	cpc	r21, r1
    1b20:	70 f0       	brcs	.+28     	; 0x1b3e <__mulsf3_pse+0x9c>
    1b22:	34 cf       	rjmp	.-408    	; 0x198c <__fp_inf>
    1b24:	a3 cf       	rjmp	.-186    	; 0x1a6c <__fp_szero>
    1b26:	5f 3f       	cpi	r21, 0xFF	; 255
    1b28:	ec f3       	brlt	.-6      	; 0x1b24 <__mulsf3_pse+0x82>
    1b2a:	98 3e       	cpi	r25, 0xE8	; 232
    1b2c:	dc f3       	brlt	.-10     	; 0x1b24 <__mulsf3_pse+0x82>
    1b2e:	86 95       	lsr	r24
    1b30:	77 95       	ror	r23
    1b32:	67 95       	ror	r22
    1b34:	b7 95       	ror	r27
    1b36:	f7 95       	ror	r31
    1b38:	e7 95       	ror	r30
    1b3a:	9f 5f       	subi	r25, 0xFF	; 255
    1b3c:	c1 f7       	brne	.-16     	; 0x1b2e <__mulsf3_pse+0x8c>
    1b3e:	fe 2b       	or	r31, r30
    1b40:	88 0f       	add	r24, r24
    1b42:	91 1d       	adc	r25, r1
    1b44:	96 95       	lsr	r25
    1b46:	87 95       	ror	r24
    1b48:	97 f9       	bld	r25, 7
    1b4a:	08 95       	ret
    1b4c:	11 f4       	brne	.+4      	; 0x1b52 <__mulsf3_pse+0xb0>
    1b4e:	0e f4       	brtc	.+2      	; 0x1b52 <__mulsf3_pse+0xb0>
    1b50:	23 cf       	rjmp	.-442    	; 0x1998 <__fp_nan>
    1b52:	41 c0       	rjmp	.+130    	; 0x1bd6 <__fp_mpack>

00001b54 <sqrt>:
    1b54:	70 df       	rcall	.-288    	; 0x1a36 <__fp_splitA>
    1b56:	d0 f3       	brcs	.-12     	; 0x1b4c <__mulsf3_pse+0xaa>
    1b58:	99 23       	and	r25, r25
    1b5a:	d9 f3       	breq	.-10     	; 0x1b52 <__mulsf3_pse+0xb0>
    1b5c:	ce f3       	brts	.-14     	; 0x1b50 <__mulsf3_pse+0xae>
    1b5e:	9f 57       	subi	r25, 0x7F	; 127
    1b60:	55 0b       	sbc	r21, r21
    1b62:	87 ff       	sbrs	r24, 7
    1b64:	46 d0       	rcall	.+140    	; 0x1bf2 <__fp_norm2>
    1b66:	00 24       	eor	r0, r0
    1b68:	a0 e6       	ldi	r26, 0x60	; 96
    1b6a:	40 ea       	ldi	r20, 0xA0	; 160
    1b6c:	90 01       	movw	r18, r0
    1b6e:	80 58       	subi	r24, 0x80	; 128
    1b70:	56 95       	lsr	r21
    1b72:	97 95       	ror	r25
    1b74:	28 f4       	brcc	.+10     	; 0x1b80 <sqrt+0x2c>
    1b76:	80 5c       	subi	r24, 0xC0	; 192
    1b78:	66 0f       	add	r22, r22
    1b7a:	77 1f       	adc	r23, r23
    1b7c:	88 1f       	adc	r24, r24
    1b7e:	20 f0       	brcs	.+8      	; 0x1b88 <sqrt+0x34>
    1b80:	26 17       	cp	r18, r22
    1b82:	37 07       	cpc	r19, r23
    1b84:	48 07       	cpc	r20, r24
    1b86:	30 f4       	brcc	.+12     	; 0x1b94 <sqrt+0x40>
    1b88:	62 1b       	sub	r22, r18
    1b8a:	73 0b       	sbc	r23, r19
    1b8c:	84 0b       	sbc	r24, r20
    1b8e:	20 29       	or	r18, r0
    1b90:	31 29       	or	r19, r1
    1b92:	4a 2b       	or	r20, r26
    1b94:	a6 95       	lsr	r26
    1b96:	17 94       	ror	r1
    1b98:	07 94       	ror	r0
    1b9a:	20 25       	eor	r18, r0
    1b9c:	31 25       	eor	r19, r1
    1b9e:	4a 27       	eor	r20, r26
    1ba0:	58 f7       	brcc	.-42     	; 0x1b78 <sqrt+0x24>
    1ba2:	66 0f       	add	r22, r22
    1ba4:	77 1f       	adc	r23, r23
    1ba6:	88 1f       	adc	r24, r24
    1ba8:	20 f0       	brcs	.+8      	; 0x1bb2 <sqrt+0x5e>
    1baa:	26 17       	cp	r18, r22
    1bac:	37 07       	cpc	r19, r23
    1bae:	48 07       	cpc	r20, r24
    1bb0:	30 f4       	brcc	.+12     	; 0x1bbe <sqrt+0x6a>
    1bb2:	62 0b       	sbc	r22, r18
    1bb4:	73 0b       	sbc	r23, r19
    1bb6:	84 0b       	sbc	r24, r20
    1bb8:	20 0d       	add	r18, r0
    1bba:	31 1d       	adc	r19, r1
    1bbc:	41 1d       	adc	r20, r1
    1bbe:	a0 95       	com	r26
    1bc0:	81 f7       	brne	.-32     	; 0x1ba2 <sqrt+0x4e>
    1bc2:	b9 01       	movw	r22, r18
    1bc4:	84 2f       	mov	r24, r20
    1bc6:	91 58       	subi	r25, 0x81	; 129
    1bc8:	88 0f       	add	r24, r24
    1bca:	96 95       	lsr	r25
    1bcc:	87 95       	ror	r24
    1bce:	08 95       	ret

00001bd0 <square>:
    1bd0:	9b 01       	movw	r18, r22
    1bd2:	ac 01       	movw	r20, r24
    1bd4:	58 cf       	rjmp	.-336    	; 0x1a86 <__mulsf3>

00001bd6 <__fp_mpack>:
    1bd6:	9f 3f       	cpi	r25, 0xFF	; 255
    1bd8:	31 f0       	breq	.+12     	; 0x1be6 <__fp_mpack_finite+0xc>

00001bda <__fp_mpack_finite>:
    1bda:	91 50       	subi	r25, 0x01	; 1
    1bdc:	20 f4       	brcc	.+8      	; 0x1be6 <__fp_mpack_finite+0xc>
    1bde:	87 95       	ror	r24
    1be0:	77 95       	ror	r23
    1be2:	67 95       	ror	r22
    1be4:	b7 95       	ror	r27
    1be6:	88 0f       	add	r24, r24
    1be8:	91 1d       	adc	r25, r1
    1bea:	96 95       	lsr	r25
    1bec:	87 95       	ror	r24
    1bee:	97 f9       	bld	r25, 7
    1bf0:	08 95       	ret

00001bf2 <__fp_norm2>:
    1bf2:	91 50       	subi	r25, 0x01	; 1
    1bf4:	50 40       	sbci	r21, 0x00	; 0
    1bf6:	66 0f       	add	r22, r22
    1bf8:	77 1f       	adc	r23, r23
    1bfa:	88 1f       	adc	r24, r24
    1bfc:	d2 f7       	brpl	.-12     	; 0x1bf2 <__fp_norm2>
    1bfe:	08 95       	ret

00001c00 <vfprintf>:
    1c00:	2f 92       	push	r2
    1c02:	3f 92       	push	r3
    1c04:	4f 92       	push	r4
    1c06:	5f 92       	push	r5
    1c08:	6f 92       	push	r6
    1c0a:	7f 92       	push	r7
    1c0c:	8f 92       	push	r8
    1c0e:	9f 92       	push	r9
    1c10:	af 92       	push	r10
    1c12:	bf 92       	push	r11
    1c14:	cf 92       	push	r12
    1c16:	df 92       	push	r13
    1c18:	ef 92       	push	r14
    1c1a:	ff 92       	push	r15
    1c1c:	0f 93       	push	r16
    1c1e:	1f 93       	push	r17
    1c20:	cf 93       	push	r28
    1c22:	df 93       	push	r29
    1c24:	cd b7       	in	r28, 0x3d	; 61
    1c26:	de b7       	in	r29, 0x3e	; 62
    1c28:	63 97       	sbiw	r28, 0x13	; 19
    1c2a:	0f b6       	in	r0, 0x3f	; 63
    1c2c:	f8 94       	cli
    1c2e:	de bf       	out	0x3e, r29	; 62
    1c30:	0f be       	out	0x3f, r0	; 63
    1c32:	cd bf       	out	0x3d, r28	; 61
    1c34:	6c 01       	movw	r12, r24
    1c36:	4b 01       	movw	r8, r22
    1c38:	2a 01       	movw	r4, r20
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	17 82       	std	Z+7, r1	; 0x07
    1c3e:	16 82       	std	Z+6, r1	; 0x06
    1c40:	83 81       	ldd	r24, Z+3	; 0x03
    1c42:	81 ff       	sbrs	r24, 1
    1c44:	29 c3       	rjmp	.+1618   	; 0x2298 <__stack+0x99>
    1c46:	ae 01       	movw	r20, r28
    1c48:	4f 5f       	subi	r20, 0xFF	; 255
    1c4a:	5f 4f       	sbci	r21, 0xFF	; 255
    1c4c:	3a 01       	movw	r6, r20
    1c4e:	f6 01       	movw	r30, r12
    1c50:	93 81       	ldd	r25, Z+3	; 0x03
    1c52:	f4 01       	movw	r30, r8
    1c54:	93 fd       	sbrc	r25, 3
    1c56:	85 91       	lpm	r24, Z+
    1c58:	93 ff       	sbrs	r25, 3
    1c5a:	81 91       	ld	r24, Z+
    1c5c:	4f 01       	movw	r8, r30
    1c5e:	88 23       	and	r24, r24
    1c60:	09 f4       	brne	.+2      	; 0x1c64 <vfprintf+0x64>
    1c62:	16 c3       	rjmp	.+1580   	; 0x2290 <__stack+0x91>
    1c64:	85 32       	cpi	r24, 0x25	; 37
    1c66:	39 f4       	brne	.+14     	; 0x1c76 <vfprintf+0x76>
    1c68:	93 fd       	sbrc	r25, 3
    1c6a:	85 91       	lpm	r24, Z+
    1c6c:	93 ff       	sbrs	r25, 3
    1c6e:	81 91       	ld	r24, Z+
    1c70:	4f 01       	movw	r8, r30
    1c72:	85 32       	cpi	r24, 0x25	; 37
    1c74:	31 f4       	brne	.+12     	; 0x1c82 <vfprintf+0x82>
    1c76:	b6 01       	movw	r22, r12
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	a9 d4       	rcall	.+2386   	; 0x25ce <fputc>
    1c7c:	52 01       	movw	r10, r4
    1c7e:	25 01       	movw	r4, r10
    1c80:	e6 cf       	rjmp	.-52     	; 0x1c4e <vfprintf+0x4e>
    1c82:	10 e0       	ldi	r17, 0x00	; 0
    1c84:	f1 2c       	mov	r15, r1
    1c86:	20 e0       	ldi	r18, 0x00	; 0
    1c88:	20 32       	cpi	r18, 0x20	; 32
    1c8a:	a0 f4       	brcc	.+40     	; 0x1cb4 <vfprintf+0xb4>
    1c8c:	8b 32       	cpi	r24, 0x2B	; 43
    1c8e:	69 f0       	breq	.+26     	; 0x1caa <vfprintf+0xaa>
    1c90:	30 f4       	brcc	.+12     	; 0x1c9e <vfprintf+0x9e>
    1c92:	80 32       	cpi	r24, 0x20	; 32
    1c94:	59 f0       	breq	.+22     	; 0x1cac <vfprintf+0xac>
    1c96:	83 32       	cpi	r24, 0x23	; 35
    1c98:	69 f4       	brne	.+26     	; 0x1cb4 <vfprintf+0xb4>
    1c9a:	20 61       	ori	r18, 0x10	; 16
    1c9c:	2c c0       	rjmp	.+88     	; 0x1cf6 <vfprintf+0xf6>
    1c9e:	8d 32       	cpi	r24, 0x2D	; 45
    1ca0:	39 f0       	breq	.+14     	; 0x1cb0 <vfprintf+0xb0>
    1ca2:	80 33       	cpi	r24, 0x30	; 48
    1ca4:	39 f4       	brne	.+14     	; 0x1cb4 <vfprintf+0xb4>
    1ca6:	21 60       	ori	r18, 0x01	; 1
    1ca8:	26 c0       	rjmp	.+76     	; 0x1cf6 <vfprintf+0xf6>
    1caa:	22 60       	ori	r18, 0x02	; 2
    1cac:	24 60       	ori	r18, 0x04	; 4
    1cae:	23 c0       	rjmp	.+70     	; 0x1cf6 <vfprintf+0xf6>
    1cb0:	28 60       	ori	r18, 0x08	; 8
    1cb2:	21 c0       	rjmp	.+66     	; 0x1cf6 <vfprintf+0xf6>
    1cb4:	27 fd       	sbrc	r18, 7
    1cb6:	27 c0       	rjmp	.+78     	; 0x1d06 <vfprintf+0x106>
    1cb8:	30 ed       	ldi	r19, 0xD0	; 208
    1cba:	38 0f       	add	r19, r24
    1cbc:	3a 30       	cpi	r19, 0x0A	; 10
    1cbe:	78 f4       	brcc	.+30     	; 0x1cde <vfprintf+0xde>
    1cc0:	26 ff       	sbrs	r18, 6
    1cc2:	06 c0       	rjmp	.+12     	; 0x1cd0 <vfprintf+0xd0>
    1cc4:	fa e0       	ldi	r31, 0x0A	; 10
    1cc6:	1f 9f       	mul	r17, r31
    1cc8:	30 0d       	add	r19, r0
    1cca:	11 24       	eor	r1, r1
    1ccc:	13 2f       	mov	r17, r19
    1cce:	13 c0       	rjmp	.+38     	; 0x1cf6 <vfprintf+0xf6>
    1cd0:	4a e0       	ldi	r20, 0x0A	; 10
    1cd2:	f4 9e       	mul	r15, r20
    1cd4:	30 0d       	add	r19, r0
    1cd6:	11 24       	eor	r1, r1
    1cd8:	f3 2e       	mov	r15, r19
    1cda:	20 62       	ori	r18, 0x20	; 32
    1cdc:	0c c0       	rjmp	.+24     	; 0x1cf6 <vfprintf+0xf6>
    1cde:	8e 32       	cpi	r24, 0x2E	; 46
    1ce0:	21 f4       	brne	.+8      	; 0x1cea <vfprintf+0xea>
    1ce2:	26 fd       	sbrc	r18, 6
    1ce4:	d5 c2       	rjmp	.+1450   	; 0x2290 <__stack+0x91>
    1ce6:	20 64       	ori	r18, 0x40	; 64
    1ce8:	06 c0       	rjmp	.+12     	; 0x1cf6 <vfprintf+0xf6>
    1cea:	8c 36       	cpi	r24, 0x6C	; 108
    1cec:	11 f4       	brne	.+4      	; 0x1cf2 <vfprintf+0xf2>
    1cee:	20 68       	ori	r18, 0x80	; 128
    1cf0:	02 c0       	rjmp	.+4      	; 0x1cf6 <vfprintf+0xf6>
    1cf2:	88 36       	cpi	r24, 0x68	; 104
    1cf4:	41 f4       	brne	.+16     	; 0x1d06 <vfprintf+0x106>
    1cf6:	f4 01       	movw	r30, r8
    1cf8:	93 fd       	sbrc	r25, 3
    1cfa:	85 91       	lpm	r24, Z+
    1cfc:	93 ff       	sbrs	r25, 3
    1cfe:	81 91       	ld	r24, Z+
    1d00:	4f 01       	movw	r8, r30
    1d02:	81 11       	cpse	r24, r1
    1d04:	c1 cf       	rjmp	.-126    	; 0x1c88 <vfprintf+0x88>
    1d06:	9b eb       	ldi	r25, 0xBB	; 187
    1d08:	98 0f       	add	r25, r24
    1d0a:	93 30       	cpi	r25, 0x03	; 3
    1d0c:	18 f4       	brcc	.+6      	; 0x1d14 <vfprintf+0x114>
    1d0e:	20 61       	ori	r18, 0x10	; 16
    1d10:	80 5e       	subi	r24, 0xE0	; 224
    1d12:	06 c0       	rjmp	.+12     	; 0x1d20 <vfprintf+0x120>
    1d14:	9b e9       	ldi	r25, 0x9B	; 155
    1d16:	98 0f       	add	r25, r24
    1d18:	93 30       	cpi	r25, 0x03	; 3
    1d1a:	08 f0       	brcs	.+2      	; 0x1d1e <vfprintf+0x11e>
    1d1c:	64 c1       	rjmp	.+712    	; 0x1fe6 <vfprintf+0x3e6>
    1d1e:	2f 7e       	andi	r18, 0xEF	; 239
    1d20:	26 ff       	sbrs	r18, 6
    1d22:	16 e0       	ldi	r17, 0x06	; 6
    1d24:	2f 73       	andi	r18, 0x3F	; 63
    1d26:	32 2e       	mov	r3, r18
    1d28:	85 36       	cpi	r24, 0x65	; 101
    1d2a:	19 f4       	brne	.+6      	; 0x1d32 <vfprintf+0x132>
    1d2c:	20 64       	ori	r18, 0x40	; 64
    1d2e:	32 2e       	mov	r3, r18
    1d30:	08 c0       	rjmp	.+16     	; 0x1d42 <vfprintf+0x142>
    1d32:	86 36       	cpi	r24, 0x66	; 102
    1d34:	21 f4       	brne	.+8      	; 0x1d3e <vfprintf+0x13e>
    1d36:	f2 2f       	mov	r31, r18
    1d38:	f0 68       	ori	r31, 0x80	; 128
    1d3a:	3f 2e       	mov	r3, r31
    1d3c:	02 c0       	rjmp	.+4      	; 0x1d42 <vfprintf+0x142>
    1d3e:	11 11       	cpse	r17, r1
    1d40:	11 50       	subi	r17, 0x01	; 1
    1d42:	37 fe       	sbrs	r3, 7
    1d44:	07 c0       	rjmp	.+14     	; 0x1d54 <vfprintf+0x154>
    1d46:	1c 33       	cpi	r17, 0x3C	; 60
    1d48:	50 f4       	brcc	.+20     	; 0x1d5e <vfprintf+0x15e>
    1d4a:	ee 24       	eor	r14, r14
    1d4c:	e3 94       	inc	r14
    1d4e:	e1 0e       	add	r14, r17
    1d50:	27 e0       	ldi	r18, 0x07	; 7
    1d52:	0b c0       	rjmp	.+22     	; 0x1d6a <vfprintf+0x16a>
    1d54:	18 30       	cpi	r17, 0x08	; 8
    1d56:	38 f0       	brcs	.+14     	; 0x1d66 <vfprintf+0x166>
    1d58:	27 e0       	ldi	r18, 0x07	; 7
    1d5a:	17 e0       	ldi	r17, 0x07	; 7
    1d5c:	05 c0       	rjmp	.+10     	; 0x1d68 <vfprintf+0x168>
    1d5e:	27 e0       	ldi	r18, 0x07	; 7
    1d60:	4c e3       	ldi	r20, 0x3C	; 60
    1d62:	e4 2e       	mov	r14, r20
    1d64:	02 c0       	rjmp	.+4      	; 0x1d6a <vfprintf+0x16a>
    1d66:	21 2f       	mov	r18, r17
    1d68:	e1 2c       	mov	r14, r1
    1d6a:	52 01       	movw	r10, r4
    1d6c:	44 e0       	ldi	r20, 0x04	; 4
    1d6e:	a4 0e       	add	r10, r20
    1d70:	b1 1c       	adc	r11, r1
    1d72:	f2 01       	movw	r30, r4
    1d74:	60 81       	ld	r22, Z
    1d76:	71 81       	ldd	r23, Z+1	; 0x01
    1d78:	82 81       	ldd	r24, Z+2	; 0x02
    1d7a:	93 81       	ldd	r25, Z+3	; 0x03
    1d7c:	0e 2d       	mov	r16, r14
    1d7e:	a3 01       	movw	r20, r6
    1d80:	ee d2       	rcall	.+1500   	; 0x235e <__ftoa_engine>
    1d82:	2c 01       	movw	r4, r24
    1d84:	09 81       	ldd	r16, Y+1	; 0x01
    1d86:	00 ff       	sbrs	r16, 0
    1d88:	02 c0       	rjmp	.+4      	; 0x1d8e <vfprintf+0x18e>
    1d8a:	03 ff       	sbrs	r16, 3
    1d8c:	07 c0       	rjmp	.+14     	; 0x1d9c <vfprintf+0x19c>
    1d8e:	31 fc       	sbrc	r3, 1
    1d90:	08 c0       	rjmp	.+16     	; 0x1da2 <vfprintf+0x1a2>
    1d92:	32 fe       	sbrs	r3, 2
    1d94:	09 c0       	rjmp	.+18     	; 0x1da8 <vfprintf+0x1a8>
    1d96:	30 e2       	ldi	r19, 0x20	; 32
    1d98:	23 2e       	mov	r2, r19
    1d9a:	07 c0       	rjmp	.+14     	; 0x1daa <vfprintf+0x1aa>
    1d9c:	2d e2       	ldi	r18, 0x2D	; 45
    1d9e:	22 2e       	mov	r2, r18
    1da0:	04 c0       	rjmp	.+8      	; 0x1daa <vfprintf+0x1aa>
    1da2:	9b e2       	ldi	r25, 0x2B	; 43
    1da4:	29 2e       	mov	r2, r25
    1da6:	01 c0       	rjmp	.+2      	; 0x1daa <vfprintf+0x1aa>
    1da8:	21 2c       	mov	r2, r1
    1daa:	80 2f       	mov	r24, r16
    1dac:	8c 70       	andi	r24, 0x0C	; 12
    1dae:	19 f0       	breq	.+6      	; 0x1db6 <vfprintf+0x1b6>
    1db0:	21 10       	cpse	r2, r1
    1db2:	51 c2       	rjmp	.+1186   	; 0x2256 <__stack+0x57>
    1db4:	8d c2       	rjmp	.+1306   	; 0x22d0 <__stack+0xd1>
    1db6:	37 fe       	sbrs	r3, 7
    1db8:	0f c0       	rjmp	.+30     	; 0x1dd8 <vfprintf+0x1d8>
    1dba:	e4 0c       	add	r14, r4
    1dbc:	04 ff       	sbrs	r16, 4
    1dbe:	04 c0       	rjmp	.+8      	; 0x1dc8 <vfprintf+0x1c8>
    1dc0:	8a 81       	ldd	r24, Y+2	; 0x02
    1dc2:	81 33       	cpi	r24, 0x31	; 49
    1dc4:	09 f4       	brne	.+2      	; 0x1dc8 <vfprintf+0x1c8>
    1dc6:	ea 94       	dec	r14
    1dc8:	1e 14       	cp	r1, r14
    1dca:	74 f5       	brge	.+92     	; 0x1e28 <vfprintf+0x228>
    1dcc:	f8 e0       	ldi	r31, 0x08	; 8
    1dce:	fe 15       	cp	r31, r14
    1dd0:	78 f5       	brcc	.+94     	; 0x1e30 <vfprintf+0x230>
    1dd2:	88 e0       	ldi	r24, 0x08	; 8
    1dd4:	e8 2e       	mov	r14, r24
    1dd6:	2c c0       	rjmp	.+88     	; 0x1e30 <vfprintf+0x230>
    1dd8:	36 fc       	sbrc	r3, 6
    1dda:	2a c0       	rjmp	.+84     	; 0x1e30 <vfprintf+0x230>
    1ddc:	81 2f       	mov	r24, r17
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	84 15       	cp	r24, r4
    1de2:	95 05       	cpc	r25, r5
    1de4:	9c f0       	brlt	.+38     	; 0x1e0c <vfprintf+0x20c>
    1de6:	2c ef       	ldi	r18, 0xFC	; 252
    1de8:	42 16       	cp	r4, r18
    1dea:	2f ef       	ldi	r18, 0xFF	; 255
    1dec:	52 06       	cpc	r5, r18
    1dee:	74 f0       	brlt	.+28     	; 0x1e0c <vfprintf+0x20c>
    1df0:	43 2d       	mov	r20, r3
    1df2:	40 68       	ori	r20, 0x80	; 128
    1df4:	34 2e       	mov	r3, r20
    1df6:	0a c0       	rjmp	.+20     	; 0x1e0c <vfprintf+0x20c>
    1df8:	e2 e0       	ldi	r30, 0x02	; 2
    1dfa:	f0 e0       	ldi	r31, 0x00	; 0
    1dfc:	ec 0f       	add	r30, r28
    1dfe:	fd 1f       	adc	r31, r29
    1e00:	e1 0f       	add	r30, r17
    1e02:	f1 1d       	adc	r31, r1
    1e04:	80 81       	ld	r24, Z
    1e06:	80 33       	cpi	r24, 0x30	; 48
    1e08:	19 f4       	brne	.+6      	; 0x1e10 <vfprintf+0x210>
    1e0a:	11 50       	subi	r17, 0x01	; 1
    1e0c:	11 11       	cpse	r17, r1
    1e0e:	f4 cf       	rjmp	.-24     	; 0x1df8 <vfprintf+0x1f8>
    1e10:	37 fe       	sbrs	r3, 7
    1e12:	0e c0       	rjmp	.+28     	; 0x1e30 <vfprintf+0x230>
    1e14:	ee 24       	eor	r14, r14
    1e16:	e3 94       	inc	r14
    1e18:	e1 0e       	add	r14, r17
    1e1a:	81 2f       	mov	r24, r17
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	48 16       	cp	r4, r24
    1e20:	59 06       	cpc	r5, r25
    1e22:	2c f4       	brge	.+10     	; 0x1e2e <vfprintf+0x22e>
    1e24:	14 19       	sub	r17, r4
    1e26:	04 c0       	rjmp	.+8      	; 0x1e30 <vfprintf+0x230>
    1e28:	ee 24       	eor	r14, r14
    1e2a:	e3 94       	inc	r14
    1e2c:	01 c0       	rjmp	.+2      	; 0x1e30 <vfprintf+0x230>
    1e2e:	10 e0       	ldi	r17, 0x00	; 0
    1e30:	37 fe       	sbrs	r3, 7
    1e32:	06 c0       	rjmp	.+12     	; 0x1e40 <vfprintf+0x240>
    1e34:	14 14       	cp	r1, r4
    1e36:	15 04       	cpc	r1, r5
    1e38:	34 f4       	brge	.+12     	; 0x1e46 <vfprintf+0x246>
    1e3a:	c2 01       	movw	r24, r4
    1e3c:	01 96       	adiw	r24, 0x01	; 1
    1e3e:	05 c0       	rjmp	.+10     	; 0x1e4a <vfprintf+0x24a>
    1e40:	85 e0       	ldi	r24, 0x05	; 5
    1e42:	90 e0       	ldi	r25, 0x00	; 0
    1e44:	02 c0       	rjmp	.+4      	; 0x1e4a <vfprintf+0x24a>
    1e46:	81 e0       	ldi	r24, 0x01	; 1
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	21 10       	cpse	r2, r1
    1e4c:	01 96       	adiw	r24, 0x01	; 1
    1e4e:	11 23       	and	r17, r17
    1e50:	31 f0       	breq	.+12     	; 0x1e5e <vfprintf+0x25e>
    1e52:	21 2f       	mov	r18, r17
    1e54:	30 e0       	ldi	r19, 0x00	; 0
    1e56:	2f 5f       	subi	r18, 0xFF	; 255
    1e58:	3f 4f       	sbci	r19, 0xFF	; 255
    1e5a:	82 0f       	add	r24, r18
    1e5c:	93 1f       	adc	r25, r19
    1e5e:	2f 2d       	mov	r18, r15
    1e60:	30 e0       	ldi	r19, 0x00	; 0
    1e62:	82 17       	cp	r24, r18
    1e64:	93 07       	cpc	r25, r19
    1e66:	14 f4       	brge	.+4      	; 0x1e6c <vfprintf+0x26c>
    1e68:	f8 1a       	sub	r15, r24
    1e6a:	01 c0       	rjmp	.+2      	; 0x1e6e <vfprintf+0x26e>
    1e6c:	f1 2c       	mov	r15, r1
    1e6e:	83 2d       	mov	r24, r3
    1e70:	89 70       	andi	r24, 0x09	; 9
    1e72:	41 f4       	brne	.+16     	; 0x1e84 <vfprintf+0x284>
    1e74:	ff 20       	and	r15, r15
    1e76:	31 f0       	breq	.+12     	; 0x1e84 <vfprintf+0x284>
    1e78:	b6 01       	movw	r22, r12
    1e7a:	80 e2       	ldi	r24, 0x20	; 32
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	a7 d3       	rcall	.+1870   	; 0x25ce <fputc>
    1e80:	fa 94       	dec	r15
    1e82:	f8 cf       	rjmp	.-16     	; 0x1e74 <vfprintf+0x274>
    1e84:	22 20       	and	r2, r2
    1e86:	21 f0       	breq	.+8      	; 0x1e90 <vfprintf+0x290>
    1e88:	b6 01       	movw	r22, r12
    1e8a:	82 2d       	mov	r24, r2
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	9f d3       	rcall	.+1854   	; 0x25ce <fputc>
    1e90:	33 fc       	sbrc	r3, 3
    1e92:	08 c0       	rjmp	.+16     	; 0x1ea4 <vfprintf+0x2a4>
    1e94:	ff 20       	and	r15, r15
    1e96:	31 f0       	breq	.+12     	; 0x1ea4 <vfprintf+0x2a4>
    1e98:	b6 01       	movw	r22, r12
    1e9a:	80 e3       	ldi	r24, 0x30	; 48
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	97 d3       	rcall	.+1838   	; 0x25ce <fputc>
    1ea0:	fa 94       	dec	r15
    1ea2:	f8 cf       	rjmp	.-16     	; 0x1e94 <vfprintf+0x294>
    1ea4:	37 fe       	sbrs	r3, 7
    1ea6:	58 c0       	rjmp	.+176    	; 0x1f58 <vfprintf+0x358>
    1ea8:	94 2d       	mov	r25, r4
    1eaa:	85 2d       	mov	r24, r5
    1eac:	57 fe       	sbrs	r5, 7
    1eae:	02 c0       	rjmp	.+4      	; 0x1eb4 <vfprintf+0x2b4>
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	80 e0       	ldi	r24, 0x00	; 0
    1eb4:	29 2e       	mov	r2, r25
    1eb6:	38 2e       	mov	r3, r24
    1eb8:	20 e0       	ldi	r18, 0x00	; 0
    1eba:	30 e0       	ldi	r19, 0x00	; 0
    1ebc:	a2 01       	movw	r20, r4
    1ebe:	4e 19       	sub	r20, r14
    1ec0:	51 09       	sbc	r21, r1
    1ec2:	5d 87       	std	Y+13, r21	; 0x0d
    1ec4:	4c 87       	std	Y+12, r20	; 0x0c
    1ec6:	a2 01       	movw	r20, r4
    1ec8:	42 19       	sub	r20, r2
    1eca:	53 09       	sbc	r21, r3
    1ecc:	5f 87       	std	Y+15, r21	; 0x0f
    1ece:	4e 87       	std	Y+14, r20	; 0x0e
    1ed0:	61 2f       	mov	r22, r17
    1ed2:	70 e0       	ldi	r23, 0x00	; 0
    1ed4:	44 27       	eor	r20, r20
    1ed6:	55 27       	eor	r21, r21
    1ed8:	46 1b       	sub	r20, r22
    1eda:	57 0b       	sbc	r21, r23
    1edc:	59 8b       	std	Y+17, r21	; 0x11
    1ede:	48 8b       	std	Y+16, r20	; 0x10
    1ee0:	5f ef       	ldi	r21, 0xFF	; 255
    1ee2:	25 16       	cp	r2, r21
    1ee4:	35 06       	cpc	r3, r21
    1ee6:	41 f4       	brne	.+16     	; 0x1ef8 <vfprintf+0x2f8>
    1ee8:	b6 01       	movw	r22, r12
    1eea:	8e e2       	ldi	r24, 0x2E	; 46
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	2a 8b       	std	Y+18, r18	; 0x12
    1ef0:	3b 8b       	std	Y+19, r19	; 0x13
    1ef2:	6d d3       	rcall	.+1754   	; 0x25ce <fputc>
    1ef4:	3b 89       	ldd	r19, Y+19	; 0x13
    1ef6:	2a 89       	ldd	r18, Y+18	; 0x12
    1ef8:	42 14       	cp	r4, r2
    1efa:	53 04       	cpc	r5, r3
    1efc:	6c f0       	brlt	.+26     	; 0x1f18 <vfprintf+0x318>
    1efe:	4c 85       	ldd	r20, Y+12	; 0x0c
    1f00:	5d 85       	ldd	r21, Y+13	; 0x0d
    1f02:	42 15       	cp	r20, r2
    1f04:	53 05       	cpc	r21, r3
    1f06:	44 f4       	brge	.+16     	; 0x1f18 <vfprintf+0x318>
    1f08:	ee 85       	ldd	r30, Y+14	; 0x0e
    1f0a:	ff 85       	ldd	r31, Y+15	; 0x0f
    1f0c:	e2 0f       	add	r30, r18
    1f0e:	f3 1f       	adc	r31, r19
    1f10:	e6 0d       	add	r30, r6
    1f12:	f7 1d       	adc	r31, r7
    1f14:	81 81       	ldd	r24, Z+1	; 0x01
    1f16:	01 c0       	rjmp	.+2      	; 0x1f1a <vfprintf+0x31a>
    1f18:	80 e3       	ldi	r24, 0x30	; 48
    1f1a:	51 e0       	ldi	r21, 0x01	; 1
    1f1c:	25 1a       	sub	r2, r21
    1f1e:	31 08       	sbc	r3, r1
    1f20:	2f 5f       	subi	r18, 0xFF	; 255
    1f22:	3f 4f       	sbci	r19, 0xFF	; 255
    1f24:	48 89       	ldd	r20, Y+16	; 0x10
    1f26:	59 89       	ldd	r21, Y+17	; 0x11
    1f28:	24 16       	cp	r2, r20
    1f2a:	35 06       	cpc	r3, r21
    1f2c:	44 f0       	brlt	.+16     	; 0x1f3e <vfprintf+0x33e>
    1f2e:	b6 01       	movw	r22, r12
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	2a 8b       	std	Y+18, r18	; 0x12
    1f34:	3b 8b       	std	Y+19, r19	; 0x13
    1f36:	4b d3       	rcall	.+1686   	; 0x25ce <fputc>
    1f38:	2a 89       	ldd	r18, Y+18	; 0x12
    1f3a:	3b 89       	ldd	r19, Y+19	; 0x13
    1f3c:	d1 cf       	rjmp	.-94     	; 0x1ee0 <vfprintf+0x2e0>
    1f3e:	24 14       	cp	r2, r4
    1f40:	35 04       	cpc	r3, r5
    1f42:	39 f4       	brne	.+14     	; 0x1f52 <vfprintf+0x352>
    1f44:	9a 81       	ldd	r25, Y+2	; 0x02
    1f46:	96 33       	cpi	r25, 0x36	; 54
    1f48:	18 f4       	brcc	.+6      	; 0x1f50 <vfprintf+0x350>
    1f4a:	95 33       	cpi	r25, 0x35	; 53
    1f4c:	11 f4       	brne	.+4      	; 0x1f52 <vfprintf+0x352>
    1f4e:	04 ff       	sbrs	r16, 4
    1f50:	81 e3       	ldi	r24, 0x31	; 49
    1f52:	b6 01       	movw	r22, r12
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	45 c0       	rjmp	.+138    	; 0x1fe2 <vfprintf+0x3e2>
    1f58:	8a 81       	ldd	r24, Y+2	; 0x02
    1f5a:	81 33       	cpi	r24, 0x31	; 49
    1f5c:	09 f0       	breq	.+2      	; 0x1f60 <vfprintf+0x360>
    1f5e:	0f 7e       	andi	r16, 0xEF	; 239
    1f60:	b6 01       	movw	r22, r12
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	34 d3       	rcall	.+1640   	; 0x25ce <fputc>
    1f66:	11 11       	cpse	r17, r1
    1f68:	05 c0       	rjmp	.+10     	; 0x1f74 <vfprintf+0x374>
    1f6a:	34 fc       	sbrc	r3, 4
    1f6c:	16 c0       	rjmp	.+44     	; 0x1f9a <vfprintf+0x39a>
    1f6e:	85 e6       	ldi	r24, 0x65	; 101
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	15 c0       	rjmp	.+42     	; 0x1f9e <vfprintf+0x39e>
    1f74:	b6 01       	movw	r22, r12
    1f76:	8e e2       	ldi	r24, 0x2E	; 46
    1f78:	90 e0       	ldi	r25, 0x00	; 0
    1f7a:	29 d3       	rcall	.+1618   	; 0x25ce <fputc>
    1f7c:	82 e0       	ldi	r24, 0x02	; 2
    1f7e:	ee 24       	eor	r14, r14
    1f80:	e3 94       	inc	r14
    1f82:	e8 0e       	add	r14, r24
    1f84:	f3 01       	movw	r30, r6
    1f86:	e8 0f       	add	r30, r24
    1f88:	f1 1d       	adc	r31, r1
    1f8a:	80 81       	ld	r24, Z
    1f8c:	b6 01       	movw	r22, r12
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	1e d3       	rcall	.+1596   	; 0x25ce <fputc>
    1f92:	11 50       	subi	r17, 0x01	; 1
    1f94:	8e 2d       	mov	r24, r14
    1f96:	99 f7       	brne	.-26     	; 0x1f7e <vfprintf+0x37e>
    1f98:	e8 cf       	rjmp	.-48     	; 0x1f6a <vfprintf+0x36a>
    1f9a:	85 e4       	ldi	r24, 0x45	; 69
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	b6 01       	movw	r22, r12
    1fa0:	16 d3       	rcall	.+1580   	; 0x25ce <fputc>
    1fa2:	57 fc       	sbrc	r5, 7
    1fa4:	05 c0       	rjmp	.+10     	; 0x1fb0 <vfprintf+0x3b0>
    1fa6:	41 14       	cp	r4, r1
    1fa8:	51 04       	cpc	r5, r1
    1faa:	39 f4       	brne	.+14     	; 0x1fba <vfprintf+0x3ba>
    1fac:	04 ff       	sbrs	r16, 4
    1fae:	05 c0       	rjmp	.+10     	; 0x1fba <vfprintf+0x3ba>
    1fb0:	51 94       	neg	r5
    1fb2:	41 94       	neg	r4
    1fb4:	51 08       	sbc	r5, r1
    1fb6:	8d e2       	ldi	r24, 0x2D	; 45
    1fb8:	01 c0       	rjmp	.+2      	; 0x1fbc <vfprintf+0x3bc>
    1fba:	8b e2       	ldi	r24, 0x2B	; 43
    1fbc:	b6 01       	movw	r22, r12
    1fbe:	90 e0       	ldi	r25, 0x00	; 0
    1fc0:	06 d3       	rcall	.+1548   	; 0x25ce <fputc>
    1fc2:	80 e3       	ldi	r24, 0x30	; 48
    1fc4:	9a e0       	ldi	r25, 0x0A	; 10
    1fc6:	49 16       	cp	r4, r25
    1fc8:	51 04       	cpc	r5, r1
    1fca:	2c f0       	brlt	.+10     	; 0x1fd6 <vfprintf+0x3d6>
    1fcc:	8f 5f       	subi	r24, 0xFF	; 255
    1fce:	5a e0       	ldi	r21, 0x0A	; 10
    1fd0:	45 1a       	sub	r4, r21
    1fd2:	51 08       	sbc	r5, r1
    1fd4:	f7 cf       	rjmp	.-18     	; 0x1fc4 <vfprintf+0x3c4>
    1fd6:	b6 01       	movw	r22, r12
    1fd8:	90 e0       	ldi	r25, 0x00	; 0
    1fda:	f9 d2       	rcall	.+1522   	; 0x25ce <fputc>
    1fdc:	b6 01       	movw	r22, r12
    1fde:	c2 01       	movw	r24, r4
    1fe0:	c0 96       	adiw	r24, 0x30	; 48
    1fe2:	f5 d2       	rcall	.+1514   	; 0x25ce <fputc>
    1fe4:	4c c1       	rjmp	.+664    	; 0x227e <__stack+0x7f>
    1fe6:	83 36       	cpi	r24, 0x63	; 99
    1fe8:	31 f0       	breq	.+12     	; 0x1ff6 <vfprintf+0x3f6>
    1fea:	83 37       	cpi	r24, 0x73	; 115
    1fec:	79 f0       	breq	.+30     	; 0x200c <vfprintf+0x40c>
    1fee:	83 35       	cpi	r24, 0x53	; 83
    1ff0:	09 f0       	breq	.+2      	; 0x1ff4 <vfprintf+0x3f4>
    1ff2:	54 c0       	rjmp	.+168    	; 0x209c <vfprintf+0x49c>
    1ff4:	20 c0       	rjmp	.+64     	; 0x2036 <vfprintf+0x436>
    1ff6:	52 01       	movw	r10, r4
    1ff8:	e2 e0       	ldi	r30, 0x02	; 2
    1ffa:	ae 0e       	add	r10, r30
    1ffc:	b1 1c       	adc	r11, r1
    1ffe:	f2 01       	movw	r30, r4
    2000:	80 81       	ld	r24, Z
    2002:	89 83       	std	Y+1, r24	; 0x01
    2004:	01 e0       	ldi	r16, 0x01	; 1
    2006:	10 e0       	ldi	r17, 0x00	; 0
    2008:	23 01       	movw	r4, r6
    200a:	13 c0       	rjmp	.+38     	; 0x2032 <vfprintf+0x432>
    200c:	52 01       	movw	r10, r4
    200e:	f2 e0       	ldi	r31, 0x02	; 2
    2010:	af 0e       	add	r10, r31
    2012:	b1 1c       	adc	r11, r1
    2014:	f2 01       	movw	r30, r4
    2016:	40 80       	ld	r4, Z
    2018:	51 80       	ldd	r5, Z+1	; 0x01
    201a:	26 ff       	sbrs	r18, 6
    201c:	03 c0       	rjmp	.+6      	; 0x2024 <vfprintf+0x424>
    201e:	61 2f       	mov	r22, r17
    2020:	70 e0       	ldi	r23, 0x00	; 0
    2022:	02 c0       	rjmp	.+4      	; 0x2028 <vfprintf+0x428>
    2024:	6f ef       	ldi	r22, 0xFF	; 255
    2026:	7f ef       	ldi	r23, 0xFF	; 255
    2028:	c2 01       	movw	r24, r4
    202a:	2a 8b       	std	Y+18, r18	; 0x12
    202c:	7b d2       	rcall	.+1270   	; 0x2524 <strnlen>
    202e:	8c 01       	movw	r16, r24
    2030:	2a 89       	ldd	r18, Y+18	; 0x12
    2032:	2f 77       	andi	r18, 0x7F	; 127
    2034:	14 c0       	rjmp	.+40     	; 0x205e <vfprintf+0x45e>
    2036:	52 01       	movw	r10, r4
    2038:	f2 e0       	ldi	r31, 0x02	; 2
    203a:	af 0e       	add	r10, r31
    203c:	b1 1c       	adc	r11, r1
    203e:	f2 01       	movw	r30, r4
    2040:	40 80       	ld	r4, Z
    2042:	51 80       	ldd	r5, Z+1	; 0x01
    2044:	26 ff       	sbrs	r18, 6
    2046:	03 c0       	rjmp	.+6      	; 0x204e <vfprintf+0x44e>
    2048:	61 2f       	mov	r22, r17
    204a:	70 e0       	ldi	r23, 0x00	; 0
    204c:	02 c0       	rjmp	.+4      	; 0x2052 <vfprintf+0x452>
    204e:	6f ef       	ldi	r22, 0xFF	; 255
    2050:	7f ef       	ldi	r23, 0xFF	; 255
    2052:	c2 01       	movw	r24, r4
    2054:	2a 8b       	std	Y+18, r18	; 0x12
    2056:	5b d2       	rcall	.+1206   	; 0x250e <strnlen_P>
    2058:	8c 01       	movw	r16, r24
    205a:	2a 89       	ldd	r18, Y+18	; 0x12
    205c:	20 68       	ori	r18, 0x80	; 128
    205e:	32 2e       	mov	r3, r18
    2060:	23 fd       	sbrc	r18, 3
    2062:	18 c0       	rjmp	.+48     	; 0x2094 <vfprintf+0x494>
    2064:	8f 2d       	mov	r24, r15
    2066:	90 e0       	ldi	r25, 0x00	; 0
    2068:	08 17       	cp	r16, r24
    206a:	19 07       	cpc	r17, r25
    206c:	98 f4       	brcc	.+38     	; 0x2094 <vfprintf+0x494>
    206e:	b6 01       	movw	r22, r12
    2070:	80 e2       	ldi	r24, 0x20	; 32
    2072:	90 e0       	ldi	r25, 0x00	; 0
    2074:	ac d2       	rcall	.+1368   	; 0x25ce <fputc>
    2076:	fa 94       	dec	r15
    2078:	f5 cf       	rjmp	.-22     	; 0x2064 <vfprintf+0x464>
    207a:	f2 01       	movw	r30, r4
    207c:	37 fc       	sbrc	r3, 7
    207e:	85 91       	lpm	r24, Z+
    2080:	37 fe       	sbrs	r3, 7
    2082:	81 91       	ld	r24, Z+
    2084:	2f 01       	movw	r4, r30
    2086:	b6 01       	movw	r22, r12
    2088:	90 e0       	ldi	r25, 0x00	; 0
    208a:	a1 d2       	rcall	.+1346   	; 0x25ce <fputc>
    208c:	f1 10       	cpse	r15, r1
    208e:	fa 94       	dec	r15
    2090:	01 50       	subi	r16, 0x01	; 1
    2092:	11 09       	sbc	r17, r1
    2094:	01 15       	cp	r16, r1
    2096:	11 05       	cpc	r17, r1
    2098:	81 f7       	brne	.-32     	; 0x207a <vfprintf+0x47a>
    209a:	f1 c0       	rjmp	.+482    	; 0x227e <__stack+0x7f>
    209c:	84 36       	cpi	r24, 0x64	; 100
    209e:	11 f0       	breq	.+4      	; 0x20a4 <vfprintf+0x4a4>
    20a0:	89 36       	cpi	r24, 0x69	; 105
    20a2:	51 f5       	brne	.+84     	; 0x20f8 <vfprintf+0x4f8>
    20a4:	52 01       	movw	r10, r4
    20a6:	27 ff       	sbrs	r18, 7
    20a8:	09 c0       	rjmp	.+18     	; 0x20bc <vfprintf+0x4bc>
    20aa:	f4 e0       	ldi	r31, 0x04	; 4
    20ac:	af 0e       	add	r10, r31
    20ae:	b1 1c       	adc	r11, r1
    20b0:	f2 01       	movw	r30, r4
    20b2:	60 81       	ld	r22, Z
    20b4:	71 81       	ldd	r23, Z+1	; 0x01
    20b6:	82 81       	ldd	r24, Z+2	; 0x02
    20b8:	93 81       	ldd	r25, Z+3	; 0x03
    20ba:	0a c0       	rjmp	.+20     	; 0x20d0 <vfprintf+0x4d0>
    20bc:	f2 e0       	ldi	r31, 0x02	; 2
    20be:	af 0e       	add	r10, r31
    20c0:	b1 1c       	adc	r11, r1
    20c2:	f2 01       	movw	r30, r4
    20c4:	60 81       	ld	r22, Z
    20c6:	71 81       	ldd	r23, Z+1	; 0x01
    20c8:	07 2e       	mov	r0, r23
    20ca:	00 0c       	add	r0, r0
    20cc:	88 0b       	sbc	r24, r24
    20ce:	99 0b       	sbc	r25, r25
    20d0:	2f 76       	andi	r18, 0x6F	; 111
    20d2:	32 2e       	mov	r3, r18
    20d4:	97 ff       	sbrs	r25, 7
    20d6:	09 c0       	rjmp	.+18     	; 0x20ea <vfprintf+0x4ea>
    20d8:	90 95       	com	r25
    20da:	80 95       	com	r24
    20dc:	70 95       	com	r23
    20de:	61 95       	neg	r22
    20e0:	7f 4f       	sbci	r23, 0xFF	; 255
    20e2:	8f 4f       	sbci	r24, 0xFF	; 255
    20e4:	9f 4f       	sbci	r25, 0xFF	; 255
    20e6:	20 68       	ori	r18, 0x80	; 128
    20e8:	32 2e       	mov	r3, r18
    20ea:	2a e0       	ldi	r18, 0x0A	; 10
    20ec:	30 e0       	ldi	r19, 0x00	; 0
    20ee:	a3 01       	movw	r20, r6
    20f0:	ed d2       	rcall	.+1498   	; 0x26cc <__ultoa_invert>
    20f2:	e8 2e       	mov	r14, r24
    20f4:	e6 18       	sub	r14, r6
    20f6:	3e c0       	rjmp	.+124    	; 0x2174 <vfprintf+0x574>
    20f8:	02 2f       	mov	r16, r18
    20fa:	85 37       	cpi	r24, 0x75	; 117
    20fc:	21 f4       	brne	.+8      	; 0x2106 <vfprintf+0x506>
    20fe:	0f 7e       	andi	r16, 0xEF	; 239
    2100:	2a e0       	ldi	r18, 0x0A	; 10
    2102:	30 e0       	ldi	r19, 0x00	; 0
    2104:	1d c0       	rjmp	.+58     	; 0x2140 <vfprintf+0x540>
    2106:	09 7f       	andi	r16, 0xF9	; 249
    2108:	8f 36       	cpi	r24, 0x6F	; 111
    210a:	91 f0       	breq	.+36     	; 0x2130 <vfprintf+0x530>
    210c:	18 f4       	brcc	.+6      	; 0x2114 <vfprintf+0x514>
    210e:	88 35       	cpi	r24, 0x58	; 88
    2110:	59 f0       	breq	.+22     	; 0x2128 <vfprintf+0x528>
    2112:	be c0       	rjmp	.+380    	; 0x2290 <__stack+0x91>
    2114:	80 37       	cpi	r24, 0x70	; 112
    2116:	19 f0       	breq	.+6      	; 0x211e <vfprintf+0x51e>
    2118:	88 37       	cpi	r24, 0x78	; 120
    211a:	11 f0       	breq	.+4      	; 0x2120 <vfprintf+0x520>
    211c:	b9 c0       	rjmp	.+370    	; 0x2290 <__stack+0x91>
    211e:	00 61       	ori	r16, 0x10	; 16
    2120:	04 ff       	sbrs	r16, 4
    2122:	09 c0       	rjmp	.+18     	; 0x2136 <vfprintf+0x536>
    2124:	04 60       	ori	r16, 0x04	; 4
    2126:	07 c0       	rjmp	.+14     	; 0x2136 <vfprintf+0x536>
    2128:	24 ff       	sbrs	r18, 4
    212a:	08 c0       	rjmp	.+16     	; 0x213c <vfprintf+0x53c>
    212c:	06 60       	ori	r16, 0x06	; 6
    212e:	06 c0       	rjmp	.+12     	; 0x213c <vfprintf+0x53c>
    2130:	28 e0       	ldi	r18, 0x08	; 8
    2132:	30 e0       	ldi	r19, 0x00	; 0
    2134:	05 c0       	rjmp	.+10     	; 0x2140 <vfprintf+0x540>
    2136:	20 e1       	ldi	r18, 0x10	; 16
    2138:	30 e0       	ldi	r19, 0x00	; 0
    213a:	02 c0       	rjmp	.+4      	; 0x2140 <vfprintf+0x540>
    213c:	20 e1       	ldi	r18, 0x10	; 16
    213e:	32 e0       	ldi	r19, 0x02	; 2
    2140:	52 01       	movw	r10, r4
    2142:	07 ff       	sbrs	r16, 7
    2144:	09 c0       	rjmp	.+18     	; 0x2158 <vfprintf+0x558>
    2146:	f4 e0       	ldi	r31, 0x04	; 4
    2148:	af 0e       	add	r10, r31
    214a:	b1 1c       	adc	r11, r1
    214c:	f2 01       	movw	r30, r4
    214e:	60 81       	ld	r22, Z
    2150:	71 81       	ldd	r23, Z+1	; 0x01
    2152:	82 81       	ldd	r24, Z+2	; 0x02
    2154:	93 81       	ldd	r25, Z+3	; 0x03
    2156:	08 c0       	rjmp	.+16     	; 0x2168 <vfprintf+0x568>
    2158:	f2 e0       	ldi	r31, 0x02	; 2
    215a:	af 0e       	add	r10, r31
    215c:	b1 1c       	adc	r11, r1
    215e:	f2 01       	movw	r30, r4
    2160:	60 81       	ld	r22, Z
    2162:	71 81       	ldd	r23, Z+1	; 0x01
    2164:	80 e0       	ldi	r24, 0x00	; 0
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	a3 01       	movw	r20, r6
    216a:	b0 d2       	rcall	.+1376   	; 0x26cc <__ultoa_invert>
    216c:	e8 2e       	mov	r14, r24
    216e:	e6 18       	sub	r14, r6
    2170:	0f 77       	andi	r16, 0x7F	; 127
    2172:	30 2e       	mov	r3, r16
    2174:	36 fe       	sbrs	r3, 6
    2176:	0b c0       	rjmp	.+22     	; 0x218e <vfprintf+0x58e>
    2178:	33 2d       	mov	r19, r3
    217a:	3e 7f       	andi	r19, 0xFE	; 254
    217c:	e1 16       	cp	r14, r17
    217e:	50 f4       	brcc	.+20     	; 0x2194 <vfprintf+0x594>
    2180:	34 fe       	sbrs	r3, 4
    2182:	0a c0       	rjmp	.+20     	; 0x2198 <vfprintf+0x598>
    2184:	32 fc       	sbrc	r3, 2
    2186:	08 c0       	rjmp	.+16     	; 0x2198 <vfprintf+0x598>
    2188:	33 2d       	mov	r19, r3
    218a:	3e 7e       	andi	r19, 0xEE	; 238
    218c:	05 c0       	rjmp	.+10     	; 0x2198 <vfprintf+0x598>
    218e:	0e 2d       	mov	r16, r14
    2190:	33 2d       	mov	r19, r3
    2192:	03 c0       	rjmp	.+6      	; 0x219a <vfprintf+0x59a>
    2194:	0e 2d       	mov	r16, r14
    2196:	01 c0       	rjmp	.+2      	; 0x219a <vfprintf+0x59a>
    2198:	01 2f       	mov	r16, r17
    219a:	34 ff       	sbrs	r19, 4
    219c:	0c c0       	rjmp	.+24     	; 0x21b6 <vfprintf+0x5b6>
    219e:	fe 01       	movw	r30, r28
    21a0:	ee 0d       	add	r30, r14
    21a2:	f1 1d       	adc	r31, r1
    21a4:	80 81       	ld	r24, Z
    21a6:	80 33       	cpi	r24, 0x30	; 48
    21a8:	11 f4       	brne	.+4      	; 0x21ae <vfprintf+0x5ae>
    21aa:	39 7e       	andi	r19, 0xE9	; 233
    21ac:	08 c0       	rjmp	.+16     	; 0x21be <vfprintf+0x5be>
    21ae:	32 ff       	sbrs	r19, 2
    21b0:	05 c0       	rjmp	.+10     	; 0x21bc <vfprintf+0x5bc>
    21b2:	0e 5f       	subi	r16, 0xFE	; 254
    21b4:	04 c0       	rjmp	.+8      	; 0x21be <vfprintf+0x5be>
    21b6:	83 2f       	mov	r24, r19
    21b8:	86 78       	andi	r24, 0x86	; 134
    21ba:	09 f0       	breq	.+2      	; 0x21be <vfprintf+0x5be>
    21bc:	0f 5f       	subi	r16, 0xFF	; 255
    21be:	33 fd       	sbrc	r19, 3
    21c0:	12 c0       	rjmp	.+36     	; 0x21e6 <vfprintf+0x5e6>
    21c2:	30 ff       	sbrs	r19, 0
    21c4:	06 c0       	rjmp	.+12     	; 0x21d2 <vfprintf+0x5d2>
    21c6:	1e 2d       	mov	r17, r14
    21c8:	0f 15       	cp	r16, r15
    21ca:	18 f4       	brcc	.+6      	; 0x21d2 <vfprintf+0x5d2>
    21cc:	1f 0d       	add	r17, r15
    21ce:	10 1b       	sub	r17, r16
    21d0:	0f 2d       	mov	r16, r15
    21d2:	0f 15       	cp	r16, r15
    21d4:	60 f4       	brcc	.+24     	; 0x21ee <vfprintf+0x5ee>
    21d6:	b6 01       	movw	r22, r12
    21d8:	80 e2       	ldi	r24, 0x20	; 32
    21da:	90 e0       	ldi	r25, 0x00	; 0
    21dc:	3b 8b       	std	Y+19, r19	; 0x13
    21de:	f7 d1       	rcall	.+1006   	; 0x25ce <fputc>
    21e0:	0f 5f       	subi	r16, 0xFF	; 255
    21e2:	3b 89       	ldd	r19, Y+19	; 0x13
    21e4:	f6 cf       	rjmp	.-20     	; 0x21d2 <vfprintf+0x5d2>
    21e6:	0f 15       	cp	r16, r15
    21e8:	10 f4       	brcc	.+4      	; 0x21ee <vfprintf+0x5ee>
    21ea:	f0 1a       	sub	r15, r16
    21ec:	01 c0       	rjmp	.+2      	; 0x21f0 <vfprintf+0x5f0>
    21ee:	f1 2c       	mov	r15, r1
    21f0:	34 ff       	sbrs	r19, 4
    21f2:	11 c0       	rjmp	.+34     	; 0x2216 <__stack+0x17>
    21f4:	b6 01       	movw	r22, r12
    21f6:	80 e3       	ldi	r24, 0x30	; 48
    21f8:	90 e0       	ldi	r25, 0x00	; 0
    21fa:	3b 8b       	std	Y+19, r19	; 0x13
    21fc:	e8 d1       	rcall	.+976    	; 0x25ce <fputc>
    21fe:	3b 89       	ldd	r19, Y+19	; 0x13
    2200:	32 ff       	sbrs	r19, 2
    2202:	16 c0       	rjmp	.+44     	; 0x2230 <__stack+0x31>
    2204:	31 fd       	sbrc	r19, 1
    2206:	03 c0       	rjmp	.+6      	; 0x220e <__stack+0xf>
    2208:	88 e7       	ldi	r24, 0x78	; 120
    220a:	90 e0       	ldi	r25, 0x00	; 0
    220c:	02 c0       	rjmp	.+4      	; 0x2212 <__stack+0x13>
    220e:	88 e5       	ldi	r24, 0x58	; 88
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	b6 01       	movw	r22, r12
    2214:	0c c0       	rjmp	.+24     	; 0x222e <__stack+0x2f>
    2216:	83 2f       	mov	r24, r19
    2218:	86 78       	andi	r24, 0x86	; 134
    221a:	51 f0       	breq	.+20     	; 0x2230 <__stack+0x31>
    221c:	31 ff       	sbrs	r19, 1
    221e:	02 c0       	rjmp	.+4      	; 0x2224 <__stack+0x25>
    2220:	8b e2       	ldi	r24, 0x2B	; 43
    2222:	01 c0       	rjmp	.+2      	; 0x2226 <__stack+0x27>
    2224:	80 e2       	ldi	r24, 0x20	; 32
    2226:	37 fd       	sbrc	r19, 7
    2228:	8d e2       	ldi	r24, 0x2D	; 45
    222a:	b6 01       	movw	r22, r12
    222c:	90 e0       	ldi	r25, 0x00	; 0
    222e:	cf d1       	rcall	.+926    	; 0x25ce <fputc>
    2230:	e1 16       	cp	r14, r17
    2232:	30 f4       	brcc	.+12     	; 0x2240 <__stack+0x41>
    2234:	b6 01       	movw	r22, r12
    2236:	80 e3       	ldi	r24, 0x30	; 48
    2238:	90 e0       	ldi	r25, 0x00	; 0
    223a:	c9 d1       	rcall	.+914    	; 0x25ce <fputc>
    223c:	11 50       	subi	r17, 0x01	; 1
    223e:	f8 cf       	rjmp	.-16     	; 0x2230 <__stack+0x31>
    2240:	ea 94       	dec	r14
    2242:	f3 01       	movw	r30, r6
    2244:	ee 0d       	add	r30, r14
    2246:	f1 1d       	adc	r31, r1
    2248:	80 81       	ld	r24, Z
    224a:	b6 01       	movw	r22, r12
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	bf d1       	rcall	.+894    	; 0x25ce <fputc>
    2250:	e1 10       	cpse	r14, r1
    2252:	f6 cf       	rjmp	.-20     	; 0x2240 <__stack+0x41>
    2254:	14 c0       	rjmp	.+40     	; 0x227e <__stack+0x7f>
    2256:	f4 e0       	ldi	r31, 0x04	; 4
    2258:	ff 15       	cp	r31, r15
    225a:	48 f5       	brcc	.+82     	; 0x22ae <__stack+0xaf>
    225c:	84 e0       	ldi	r24, 0x04	; 4
    225e:	f8 1a       	sub	r15, r24
    2260:	33 fe       	sbrs	r3, 3
    2262:	1d c0       	rjmp	.+58     	; 0x229e <__stack+0x9f>
    2264:	21 10       	cpse	r2, r1
    2266:	24 c0       	rjmp	.+72     	; 0x22b0 <__stack+0xb1>
    2268:	03 ff       	sbrs	r16, 3
    226a:	27 c0       	rjmp	.+78     	; 0x22ba <__stack+0xbb>
    226c:	02 e1       	ldi	r16, 0x12	; 18
    226e:	11 e0       	ldi	r17, 0x01	; 1
    2270:	f3 2d       	mov	r31, r3
    2272:	f0 71       	andi	r31, 0x10	; 16
    2274:	3f 2e       	mov	r3, r31
    2276:	f8 01       	movw	r30, r16
    2278:	84 91       	lpm	r24, Z
    227a:	81 11       	cpse	r24, r1
    227c:	21 c0       	rjmp	.+66     	; 0x22c0 <__stack+0xc1>
    227e:	ff 20       	and	r15, r15
    2280:	09 f4       	brne	.+2      	; 0x2284 <__stack+0x85>
    2282:	fd cc       	rjmp	.-1542   	; 0x1c7e <vfprintf+0x7e>
    2284:	b6 01       	movw	r22, r12
    2286:	80 e2       	ldi	r24, 0x20	; 32
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	a1 d1       	rcall	.+834    	; 0x25ce <fputc>
    228c:	fa 94       	dec	r15
    228e:	f7 cf       	rjmp	.-18     	; 0x227e <__stack+0x7f>
    2290:	f6 01       	movw	r30, r12
    2292:	86 81       	ldd	r24, Z+6	; 0x06
    2294:	97 81       	ldd	r25, Z+7	; 0x07
    2296:	23 c0       	rjmp	.+70     	; 0x22de <__stack+0xdf>
    2298:	8f ef       	ldi	r24, 0xFF	; 255
    229a:	9f ef       	ldi	r25, 0xFF	; 255
    229c:	20 c0       	rjmp	.+64     	; 0x22de <__stack+0xdf>
    229e:	b6 01       	movw	r22, r12
    22a0:	80 e2       	ldi	r24, 0x20	; 32
    22a2:	90 e0       	ldi	r25, 0x00	; 0
    22a4:	94 d1       	rcall	.+808    	; 0x25ce <fputc>
    22a6:	fa 94       	dec	r15
    22a8:	f1 10       	cpse	r15, r1
    22aa:	f9 cf       	rjmp	.-14     	; 0x229e <__stack+0x9f>
    22ac:	db cf       	rjmp	.-74     	; 0x2264 <__stack+0x65>
    22ae:	f1 2c       	mov	r15, r1
    22b0:	b6 01       	movw	r22, r12
    22b2:	82 2d       	mov	r24, r2
    22b4:	90 e0       	ldi	r25, 0x00	; 0
    22b6:	8b d1       	rcall	.+790    	; 0x25ce <fputc>
    22b8:	d7 cf       	rjmp	.-82     	; 0x2268 <__stack+0x69>
    22ba:	06 e1       	ldi	r16, 0x16	; 22
    22bc:	11 e0       	ldi	r17, 0x01	; 1
    22be:	d8 cf       	rjmp	.-80     	; 0x2270 <__stack+0x71>
    22c0:	31 10       	cpse	r3, r1
    22c2:	80 52       	subi	r24, 0x20	; 32
    22c4:	b6 01       	movw	r22, r12
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	82 d1       	rcall	.+772    	; 0x25ce <fputc>
    22ca:	0f 5f       	subi	r16, 0xFF	; 255
    22cc:	1f 4f       	sbci	r17, 0xFF	; 255
    22ce:	d3 cf       	rjmp	.-90     	; 0x2276 <__stack+0x77>
    22d0:	23 e0       	ldi	r18, 0x03	; 3
    22d2:	2f 15       	cp	r18, r15
    22d4:	10 f4       	brcc	.+4      	; 0x22da <__stack+0xdb>
    22d6:	83 e0       	ldi	r24, 0x03	; 3
    22d8:	c2 cf       	rjmp	.-124    	; 0x225e <__stack+0x5f>
    22da:	f1 2c       	mov	r15, r1
    22dc:	c5 cf       	rjmp	.-118    	; 0x2268 <__stack+0x69>
    22de:	63 96       	adiw	r28, 0x13	; 19
    22e0:	0f b6       	in	r0, 0x3f	; 63
    22e2:	f8 94       	cli
    22e4:	de bf       	out	0x3e, r29	; 62
    22e6:	0f be       	out	0x3f, r0	; 63
    22e8:	cd bf       	out	0x3d, r28	; 61
    22ea:	df 91       	pop	r29
    22ec:	cf 91       	pop	r28
    22ee:	1f 91       	pop	r17
    22f0:	0f 91       	pop	r16
    22f2:	ff 90       	pop	r15
    22f4:	ef 90       	pop	r14
    22f6:	df 90       	pop	r13
    22f8:	cf 90       	pop	r12
    22fa:	bf 90       	pop	r11
    22fc:	af 90       	pop	r10
    22fe:	9f 90       	pop	r9
    2300:	8f 90       	pop	r8
    2302:	7f 90       	pop	r7
    2304:	6f 90       	pop	r6
    2306:	5f 90       	pop	r5
    2308:	4f 90       	pop	r4
    230a:	3f 90       	pop	r3
    230c:	2f 90       	pop	r2
    230e:	08 95       	ret

00002310 <__divmodhi4>:
    2310:	97 fb       	bst	r25, 7
    2312:	07 2e       	mov	r0, r23
    2314:	16 f4       	brtc	.+4      	; 0x231a <__divmodhi4+0xa>
    2316:	00 94       	com	r0
    2318:	06 d0       	rcall	.+12     	; 0x2326 <__divmodhi4_neg1>
    231a:	77 fd       	sbrc	r23, 7
    231c:	08 d0       	rcall	.+16     	; 0x232e <__divmodhi4_neg2>
    231e:	0b d0       	rcall	.+22     	; 0x2336 <__udivmodhi4>
    2320:	07 fc       	sbrc	r0, 7
    2322:	05 d0       	rcall	.+10     	; 0x232e <__divmodhi4_neg2>
    2324:	3e f4       	brtc	.+14     	; 0x2334 <__divmodhi4_exit>

00002326 <__divmodhi4_neg1>:
    2326:	90 95       	com	r25
    2328:	81 95       	neg	r24
    232a:	9f 4f       	sbci	r25, 0xFF	; 255
    232c:	08 95       	ret

0000232e <__divmodhi4_neg2>:
    232e:	70 95       	com	r23
    2330:	61 95       	neg	r22
    2332:	7f 4f       	sbci	r23, 0xFF	; 255

00002334 <__divmodhi4_exit>:
    2334:	08 95       	ret

00002336 <__udivmodhi4>:
    2336:	aa 1b       	sub	r26, r26
    2338:	bb 1b       	sub	r27, r27
    233a:	51 e1       	ldi	r21, 0x11	; 17
    233c:	07 c0       	rjmp	.+14     	; 0x234c <__udivmodhi4_ep>

0000233e <__udivmodhi4_loop>:
    233e:	aa 1f       	adc	r26, r26
    2340:	bb 1f       	adc	r27, r27
    2342:	a6 17       	cp	r26, r22
    2344:	b7 07       	cpc	r27, r23
    2346:	10 f0       	brcs	.+4      	; 0x234c <__udivmodhi4_ep>
    2348:	a6 1b       	sub	r26, r22
    234a:	b7 0b       	sbc	r27, r23

0000234c <__udivmodhi4_ep>:
    234c:	88 1f       	adc	r24, r24
    234e:	99 1f       	adc	r25, r25
    2350:	5a 95       	dec	r21
    2352:	a9 f7       	brne	.-22     	; 0x233e <__udivmodhi4_loop>
    2354:	80 95       	com	r24
    2356:	90 95       	com	r25
    2358:	bc 01       	movw	r22, r24
    235a:	cd 01       	movw	r24, r26
    235c:	08 95       	ret

0000235e <__ftoa_engine>:
    235e:	28 30       	cpi	r18, 0x08	; 8
    2360:	08 f0       	brcs	.+2      	; 0x2364 <__ftoa_engine+0x6>
    2362:	27 e0       	ldi	r18, 0x07	; 7
    2364:	33 27       	eor	r19, r19
    2366:	da 01       	movw	r26, r20
    2368:	99 0f       	add	r25, r25
    236a:	31 1d       	adc	r19, r1
    236c:	87 fd       	sbrc	r24, 7
    236e:	91 60       	ori	r25, 0x01	; 1
    2370:	00 96       	adiw	r24, 0x00	; 0
    2372:	61 05       	cpc	r22, r1
    2374:	71 05       	cpc	r23, r1
    2376:	39 f4       	brne	.+14     	; 0x2386 <__ftoa_engine+0x28>
    2378:	32 60       	ori	r19, 0x02	; 2
    237a:	2e 5f       	subi	r18, 0xFE	; 254
    237c:	3d 93       	st	X+, r19
    237e:	30 e3       	ldi	r19, 0x30	; 48
    2380:	2a 95       	dec	r18
    2382:	e1 f7       	brne	.-8      	; 0x237c <__ftoa_engine+0x1e>
    2384:	08 95       	ret
    2386:	9f 3f       	cpi	r25, 0xFF	; 255
    2388:	30 f0       	brcs	.+12     	; 0x2396 <__ftoa_engine+0x38>
    238a:	80 38       	cpi	r24, 0x80	; 128
    238c:	71 05       	cpc	r23, r1
    238e:	61 05       	cpc	r22, r1
    2390:	09 f0       	breq	.+2      	; 0x2394 <__ftoa_engine+0x36>
    2392:	3c 5f       	subi	r19, 0xFC	; 252
    2394:	3c 5f       	subi	r19, 0xFC	; 252
    2396:	3d 93       	st	X+, r19
    2398:	91 30       	cpi	r25, 0x01	; 1
    239a:	08 f0       	brcs	.+2      	; 0x239e <__ftoa_engine+0x40>
    239c:	80 68       	ori	r24, 0x80	; 128
    239e:	91 1d       	adc	r25, r1
    23a0:	df 93       	push	r29
    23a2:	cf 93       	push	r28
    23a4:	1f 93       	push	r17
    23a6:	0f 93       	push	r16
    23a8:	ff 92       	push	r15
    23aa:	ef 92       	push	r14
    23ac:	19 2f       	mov	r17, r25
    23ae:	98 7f       	andi	r25, 0xF8	; 248
    23b0:	96 95       	lsr	r25
    23b2:	e9 2f       	mov	r30, r25
    23b4:	96 95       	lsr	r25
    23b6:	96 95       	lsr	r25
    23b8:	e9 0f       	add	r30, r25
    23ba:	ff 27       	eor	r31, r31
    23bc:	ec 58       	subi	r30, 0x8C	; 140
    23be:	fe 4f       	sbci	r31, 0xFE	; 254
    23c0:	99 27       	eor	r25, r25
    23c2:	33 27       	eor	r19, r19
    23c4:	ee 24       	eor	r14, r14
    23c6:	ff 24       	eor	r15, r15
    23c8:	a7 01       	movw	r20, r14
    23ca:	e7 01       	movw	r28, r14
    23cc:	05 90       	lpm	r0, Z+
    23ce:	08 94       	sec
    23d0:	07 94       	ror	r0
    23d2:	28 f4       	brcc	.+10     	; 0x23de <__ftoa_engine+0x80>
    23d4:	36 0f       	add	r19, r22
    23d6:	e7 1e       	adc	r14, r23
    23d8:	f8 1e       	adc	r15, r24
    23da:	49 1f       	adc	r20, r25
    23dc:	51 1d       	adc	r21, r1
    23de:	66 0f       	add	r22, r22
    23e0:	77 1f       	adc	r23, r23
    23e2:	88 1f       	adc	r24, r24
    23e4:	99 1f       	adc	r25, r25
    23e6:	06 94       	lsr	r0
    23e8:	a1 f7       	brne	.-24     	; 0x23d2 <__ftoa_engine+0x74>
    23ea:	05 90       	lpm	r0, Z+
    23ec:	07 94       	ror	r0
    23ee:	28 f4       	brcc	.+10     	; 0x23fa <__ftoa_engine+0x9c>
    23f0:	e7 0e       	add	r14, r23
    23f2:	f8 1e       	adc	r15, r24
    23f4:	49 1f       	adc	r20, r25
    23f6:	56 1f       	adc	r21, r22
    23f8:	c1 1d       	adc	r28, r1
    23fa:	77 0f       	add	r23, r23
    23fc:	88 1f       	adc	r24, r24
    23fe:	99 1f       	adc	r25, r25
    2400:	66 1f       	adc	r22, r22
    2402:	06 94       	lsr	r0
    2404:	a1 f7       	brne	.-24     	; 0x23ee <__ftoa_engine+0x90>
    2406:	05 90       	lpm	r0, Z+
    2408:	07 94       	ror	r0
    240a:	28 f4       	brcc	.+10     	; 0x2416 <__ftoa_engine+0xb8>
    240c:	f8 0e       	add	r15, r24
    240e:	49 1f       	adc	r20, r25
    2410:	56 1f       	adc	r21, r22
    2412:	c7 1f       	adc	r28, r23
    2414:	d1 1d       	adc	r29, r1
    2416:	88 0f       	add	r24, r24
    2418:	99 1f       	adc	r25, r25
    241a:	66 1f       	adc	r22, r22
    241c:	77 1f       	adc	r23, r23
    241e:	06 94       	lsr	r0
    2420:	a1 f7       	brne	.-24     	; 0x240a <__ftoa_engine+0xac>
    2422:	05 90       	lpm	r0, Z+
    2424:	07 94       	ror	r0
    2426:	20 f4       	brcc	.+8      	; 0x2430 <__ftoa_engine+0xd2>
    2428:	49 0f       	add	r20, r25
    242a:	56 1f       	adc	r21, r22
    242c:	c7 1f       	adc	r28, r23
    242e:	d8 1f       	adc	r29, r24
    2430:	99 0f       	add	r25, r25
    2432:	66 1f       	adc	r22, r22
    2434:	77 1f       	adc	r23, r23
    2436:	88 1f       	adc	r24, r24
    2438:	06 94       	lsr	r0
    243a:	a9 f7       	brne	.-22     	; 0x2426 <__ftoa_engine+0xc8>
    243c:	84 91       	lpm	r24, Z
    243e:	10 95       	com	r17
    2440:	17 70       	andi	r17, 0x07	; 7
    2442:	41 f0       	breq	.+16     	; 0x2454 <__ftoa_engine+0xf6>
    2444:	d6 95       	lsr	r29
    2446:	c7 95       	ror	r28
    2448:	57 95       	ror	r21
    244a:	47 95       	ror	r20
    244c:	f7 94       	ror	r15
    244e:	e7 94       	ror	r14
    2450:	1a 95       	dec	r17
    2452:	c1 f7       	brne	.-16     	; 0x2444 <__ftoa_engine+0xe6>
    2454:	ea e1       	ldi	r30, 0x1A	; 26
    2456:	f1 e0       	ldi	r31, 0x01	; 1
    2458:	68 94       	set
    245a:	15 90       	lpm	r1, Z+
    245c:	15 91       	lpm	r17, Z+
    245e:	35 91       	lpm	r19, Z+
    2460:	65 91       	lpm	r22, Z+
    2462:	95 91       	lpm	r25, Z+
    2464:	05 90       	lpm	r0, Z+
    2466:	7f e2       	ldi	r23, 0x2F	; 47
    2468:	73 95       	inc	r23
    246a:	e1 18       	sub	r14, r1
    246c:	f1 0a       	sbc	r15, r17
    246e:	43 0b       	sbc	r20, r19
    2470:	56 0b       	sbc	r21, r22
    2472:	c9 0b       	sbc	r28, r25
    2474:	d0 09       	sbc	r29, r0
    2476:	c0 f7       	brcc	.-16     	; 0x2468 <__ftoa_engine+0x10a>
    2478:	e1 0c       	add	r14, r1
    247a:	f1 1e       	adc	r15, r17
    247c:	43 1f       	adc	r20, r19
    247e:	56 1f       	adc	r21, r22
    2480:	c9 1f       	adc	r28, r25
    2482:	d0 1d       	adc	r29, r0
    2484:	7e f4       	brtc	.+30     	; 0x24a4 <__ftoa_engine+0x146>
    2486:	70 33       	cpi	r23, 0x30	; 48
    2488:	11 f4       	brne	.+4      	; 0x248e <__ftoa_engine+0x130>
    248a:	8a 95       	dec	r24
    248c:	e6 cf       	rjmp	.-52     	; 0x245a <__ftoa_engine+0xfc>
    248e:	e8 94       	clt
    2490:	01 50       	subi	r16, 0x01	; 1
    2492:	30 f0       	brcs	.+12     	; 0x24a0 <__ftoa_engine+0x142>
    2494:	08 0f       	add	r16, r24
    2496:	0a f4       	brpl	.+2      	; 0x249a <__ftoa_engine+0x13c>
    2498:	00 27       	eor	r16, r16
    249a:	02 17       	cp	r16, r18
    249c:	08 f4       	brcc	.+2      	; 0x24a0 <__ftoa_engine+0x142>
    249e:	20 2f       	mov	r18, r16
    24a0:	23 95       	inc	r18
    24a2:	02 2f       	mov	r16, r18
    24a4:	7a 33       	cpi	r23, 0x3A	; 58
    24a6:	28 f0       	brcs	.+10     	; 0x24b2 <__ftoa_engine+0x154>
    24a8:	79 e3       	ldi	r23, 0x39	; 57
    24aa:	7d 93       	st	X+, r23
    24ac:	2a 95       	dec	r18
    24ae:	e9 f7       	brne	.-6      	; 0x24aa <__ftoa_engine+0x14c>
    24b0:	10 c0       	rjmp	.+32     	; 0x24d2 <__ftoa_engine+0x174>
    24b2:	7d 93       	st	X+, r23
    24b4:	2a 95       	dec	r18
    24b6:	89 f6       	brne	.-94     	; 0x245a <__ftoa_engine+0xfc>
    24b8:	06 94       	lsr	r0
    24ba:	97 95       	ror	r25
    24bc:	67 95       	ror	r22
    24be:	37 95       	ror	r19
    24c0:	17 95       	ror	r17
    24c2:	17 94       	ror	r1
    24c4:	e1 18       	sub	r14, r1
    24c6:	f1 0a       	sbc	r15, r17
    24c8:	43 0b       	sbc	r20, r19
    24ca:	56 0b       	sbc	r21, r22
    24cc:	c9 0b       	sbc	r28, r25
    24ce:	d0 09       	sbc	r29, r0
    24d0:	98 f0       	brcs	.+38     	; 0x24f8 <__ftoa_engine+0x19a>
    24d2:	23 95       	inc	r18
    24d4:	7e 91       	ld	r23, -X
    24d6:	73 95       	inc	r23
    24d8:	7a 33       	cpi	r23, 0x3A	; 58
    24da:	08 f0       	brcs	.+2      	; 0x24de <__ftoa_engine+0x180>
    24dc:	70 e3       	ldi	r23, 0x30	; 48
    24de:	7c 93       	st	X, r23
    24e0:	20 13       	cpse	r18, r16
    24e2:	b8 f7       	brcc	.-18     	; 0x24d2 <__ftoa_engine+0x174>
    24e4:	7e 91       	ld	r23, -X
    24e6:	70 61       	ori	r23, 0x10	; 16
    24e8:	7d 93       	st	X+, r23
    24ea:	30 f0       	brcs	.+12     	; 0x24f8 <__ftoa_engine+0x19a>
    24ec:	83 95       	inc	r24
    24ee:	71 e3       	ldi	r23, 0x31	; 49
    24f0:	7d 93       	st	X+, r23
    24f2:	70 e3       	ldi	r23, 0x30	; 48
    24f4:	2a 95       	dec	r18
    24f6:	e1 f7       	brne	.-8      	; 0x24f0 <__ftoa_engine+0x192>
    24f8:	11 24       	eor	r1, r1
    24fa:	ef 90       	pop	r14
    24fc:	ff 90       	pop	r15
    24fe:	0f 91       	pop	r16
    2500:	1f 91       	pop	r17
    2502:	cf 91       	pop	r28
    2504:	df 91       	pop	r29
    2506:	99 27       	eor	r25, r25
    2508:	87 fd       	sbrc	r24, 7
    250a:	90 95       	com	r25
    250c:	08 95       	ret

0000250e <strnlen_P>:
    250e:	fc 01       	movw	r30, r24
    2510:	05 90       	lpm	r0, Z+
    2512:	61 50       	subi	r22, 0x01	; 1
    2514:	70 40       	sbci	r23, 0x00	; 0
    2516:	01 10       	cpse	r0, r1
    2518:	d8 f7       	brcc	.-10     	; 0x2510 <strnlen_P+0x2>
    251a:	80 95       	com	r24
    251c:	90 95       	com	r25
    251e:	8e 0f       	add	r24, r30
    2520:	9f 1f       	adc	r25, r31
    2522:	08 95       	ret

00002524 <strnlen>:
    2524:	fc 01       	movw	r30, r24
    2526:	61 50       	subi	r22, 0x01	; 1
    2528:	70 40       	sbci	r23, 0x00	; 0
    252a:	01 90       	ld	r0, Z+
    252c:	01 10       	cpse	r0, r1
    252e:	d8 f7       	brcc	.-10     	; 0x2526 <strnlen+0x2>
    2530:	80 95       	com	r24
    2532:	90 95       	com	r25
    2534:	8e 0f       	add	r24, r30
    2536:	9f 1f       	adc	r25, r31
    2538:	08 95       	ret

0000253a <fdevopen>:
    253a:	0f 93       	push	r16
    253c:	1f 93       	push	r17
    253e:	cf 93       	push	r28
    2540:	df 93       	push	r29
    2542:	00 97       	sbiw	r24, 0x00	; 0
    2544:	31 f4       	brne	.+12     	; 0x2552 <fdevopen+0x18>
    2546:	61 15       	cp	r22, r1
    2548:	71 05       	cpc	r23, r1
    254a:	19 f4       	brne	.+6      	; 0x2552 <fdevopen+0x18>
    254c:	80 e0       	ldi	r24, 0x00	; 0
    254e:	90 e0       	ldi	r25, 0x00	; 0
    2550:	39 c0       	rjmp	.+114    	; 0x25c4 <fdevopen+0x8a>
    2552:	8b 01       	movw	r16, r22
    2554:	ec 01       	movw	r28, r24
    2556:	6e e0       	ldi	r22, 0x0E	; 14
    2558:	70 e0       	ldi	r23, 0x00	; 0
    255a:	81 e0       	ldi	r24, 0x01	; 1
    255c:	90 e0       	ldi	r25, 0x00	; 0
    255e:	14 d1       	rcall	.+552    	; 0x2788 <calloc>
    2560:	fc 01       	movw	r30, r24
    2562:	89 2b       	or	r24, r25
    2564:	99 f3       	breq	.-26     	; 0x254c <fdevopen+0x12>
    2566:	80 e8       	ldi	r24, 0x80	; 128
    2568:	83 83       	std	Z+3, r24	; 0x03
    256a:	01 15       	cp	r16, r1
    256c:	11 05       	cpc	r17, r1
    256e:	71 f0       	breq	.+28     	; 0x258c <fdevopen+0x52>
    2570:	13 87       	std	Z+11, r17	; 0x0b
    2572:	02 87       	std	Z+10, r16	; 0x0a
    2574:	81 e8       	ldi	r24, 0x81	; 129
    2576:	83 83       	std	Z+3, r24	; 0x03
    2578:	80 91 0b 04 	lds	r24, 0x040B	; 0x80040b <__iob>
    257c:	90 91 0c 04 	lds	r25, 0x040C	; 0x80040c <__iob+0x1>
    2580:	89 2b       	or	r24, r25
    2582:	21 f4       	brne	.+8      	; 0x258c <fdevopen+0x52>
    2584:	f0 93 0c 04 	sts	0x040C, r31	; 0x80040c <__iob+0x1>
    2588:	e0 93 0b 04 	sts	0x040B, r30	; 0x80040b <__iob>
    258c:	20 97       	sbiw	r28, 0x00	; 0
    258e:	c9 f0       	breq	.+50     	; 0x25c2 <fdevopen+0x88>
    2590:	d1 87       	std	Z+9, r29	; 0x09
    2592:	c0 87       	std	Z+8, r28	; 0x08
    2594:	83 81       	ldd	r24, Z+3	; 0x03
    2596:	82 60       	ori	r24, 0x02	; 2
    2598:	83 83       	std	Z+3, r24	; 0x03
    259a:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <__iob+0x2>
    259e:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <__iob+0x3>
    25a2:	89 2b       	or	r24, r25
    25a4:	71 f4       	brne	.+28     	; 0x25c2 <fdevopen+0x88>
    25a6:	f0 93 0e 04 	sts	0x040E, r31	; 0x80040e <__iob+0x3>
    25aa:	e0 93 0d 04 	sts	0x040D, r30	; 0x80040d <__iob+0x2>
    25ae:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <__iob+0x4>
    25b2:	90 91 10 04 	lds	r25, 0x0410	; 0x800410 <__iob+0x5>
    25b6:	89 2b       	or	r24, r25
    25b8:	21 f4       	brne	.+8      	; 0x25c2 <fdevopen+0x88>
    25ba:	f0 93 10 04 	sts	0x0410, r31	; 0x800410 <__iob+0x5>
    25be:	e0 93 0f 04 	sts	0x040F, r30	; 0x80040f <__iob+0x4>
    25c2:	cf 01       	movw	r24, r30
    25c4:	df 91       	pop	r29
    25c6:	cf 91       	pop	r28
    25c8:	1f 91       	pop	r17
    25ca:	0f 91       	pop	r16
    25cc:	08 95       	ret

000025ce <fputc>:
    25ce:	0f 93       	push	r16
    25d0:	1f 93       	push	r17
    25d2:	cf 93       	push	r28
    25d4:	df 93       	push	r29
    25d6:	fb 01       	movw	r30, r22
    25d8:	23 81       	ldd	r18, Z+3	; 0x03
    25da:	21 fd       	sbrc	r18, 1
    25dc:	03 c0       	rjmp	.+6      	; 0x25e4 <fputc+0x16>
    25de:	8f ef       	ldi	r24, 0xFF	; 255
    25e0:	9f ef       	ldi	r25, 0xFF	; 255
    25e2:	28 c0       	rjmp	.+80     	; 0x2634 <fputc+0x66>
    25e4:	22 ff       	sbrs	r18, 2
    25e6:	16 c0       	rjmp	.+44     	; 0x2614 <fputc+0x46>
    25e8:	46 81       	ldd	r20, Z+6	; 0x06
    25ea:	57 81       	ldd	r21, Z+7	; 0x07
    25ec:	24 81       	ldd	r18, Z+4	; 0x04
    25ee:	35 81       	ldd	r19, Z+5	; 0x05
    25f0:	42 17       	cp	r20, r18
    25f2:	53 07       	cpc	r21, r19
    25f4:	44 f4       	brge	.+16     	; 0x2606 <fputc+0x38>
    25f6:	a0 81       	ld	r26, Z
    25f8:	b1 81       	ldd	r27, Z+1	; 0x01
    25fa:	9d 01       	movw	r18, r26
    25fc:	2f 5f       	subi	r18, 0xFF	; 255
    25fe:	3f 4f       	sbci	r19, 0xFF	; 255
    2600:	31 83       	std	Z+1, r19	; 0x01
    2602:	20 83       	st	Z, r18
    2604:	8c 93       	st	X, r24
    2606:	26 81       	ldd	r18, Z+6	; 0x06
    2608:	37 81       	ldd	r19, Z+7	; 0x07
    260a:	2f 5f       	subi	r18, 0xFF	; 255
    260c:	3f 4f       	sbci	r19, 0xFF	; 255
    260e:	37 83       	std	Z+7, r19	; 0x07
    2610:	26 83       	std	Z+6, r18	; 0x06
    2612:	10 c0       	rjmp	.+32     	; 0x2634 <fputc+0x66>
    2614:	eb 01       	movw	r28, r22
    2616:	09 2f       	mov	r16, r25
    2618:	18 2f       	mov	r17, r24
    261a:	00 84       	ldd	r0, Z+8	; 0x08
    261c:	f1 85       	ldd	r31, Z+9	; 0x09
    261e:	e0 2d       	mov	r30, r0
    2620:	19 95       	eicall
    2622:	89 2b       	or	r24, r25
    2624:	e1 f6       	brne	.-72     	; 0x25de <fputc+0x10>
    2626:	8e 81       	ldd	r24, Y+6	; 0x06
    2628:	9f 81       	ldd	r25, Y+7	; 0x07
    262a:	01 96       	adiw	r24, 0x01	; 1
    262c:	9f 83       	std	Y+7, r25	; 0x07
    262e:	8e 83       	std	Y+6, r24	; 0x06
    2630:	81 2f       	mov	r24, r17
    2632:	90 2f       	mov	r25, r16
    2634:	df 91       	pop	r29
    2636:	cf 91       	pop	r28
    2638:	1f 91       	pop	r17
    263a:	0f 91       	pop	r16
    263c:	08 95       	ret

0000263e <printf>:
    263e:	cf 93       	push	r28
    2640:	df 93       	push	r29
    2642:	cd b7       	in	r28, 0x3d	; 61
    2644:	de b7       	in	r29, 0x3e	; 62
    2646:	ae 01       	movw	r20, r28
    2648:	4a 5f       	subi	r20, 0xFA	; 250
    264a:	5f 4f       	sbci	r21, 0xFF	; 255
    264c:	fa 01       	movw	r30, r20
    264e:	61 91       	ld	r22, Z+
    2650:	71 91       	ld	r23, Z+
    2652:	af 01       	movw	r20, r30
    2654:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <__iob+0x2>
    2658:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <__iob+0x3>
    265c:	d1 da       	rcall	.-2654   	; 0x1c00 <vfprintf>
    265e:	df 91       	pop	r29
    2660:	cf 91       	pop	r28
    2662:	08 95       	ret

00002664 <putchar>:
    2664:	60 91 0d 04 	lds	r22, 0x040D	; 0x80040d <__iob+0x2>
    2668:	70 91 0e 04 	lds	r23, 0x040E	; 0x80040e <__iob+0x3>
    266c:	b0 cf       	rjmp	.-160    	; 0x25ce <fputc>

0000266e <sprintf>:
    266e:	0f 93       	push	r16
    2670:	1f 93       	push	r17
    2672:	cf 93       	push	r28
    2674:	df 93       	push	r29
    2676:	cd b7       	in	r28, 0x3d	; 61
    2678:	de b7       	in	r29, 0x3e	; 62
    267a:	2e 97       	sbiw	r28, 0x0e	; 14
    267c:	0f b6       	in	r0, 0x3f	; 63
    267e:	f8 94       	cli
    2680:	de bf       	out	0x3e, r29	; 62
    2682:	0f be       	out	0x3f, r0	; 63
    2684:	cd bf       	out	0x3d, r28	; 61
    2686:	0e 89       	ldd	r16, Y+22	; 0x16
    2688:	1f 89       	ldd	r17, Y+23	; 0x17
    268a:	86 e0       	ldi	r24, 0x06	; 6
    268c:	8c 83       	std	Y+4, r24	; 0x04
    268e:	1a 83       	std	Y+2, r17	; 0x02
    2690:	09 83       	std	Y+1, r16	; 0x01
    2692:	8f ef       	ldi	r24, 0xFF	; 255
    2694:	9f e7       	ldi	r25, 0x7F	; 127
    2696:	9e 83       	std	Y+6, r25	; 0x06
    2698:	8d 83       	std	Y+5, r24	; 0x05
    269a:	ae 01       	movw	r20, r28
    269c:	46 5e       	subi	r20, 0xE6	; 230
    269e:	5f 4f       	sbci	r21, 0xFF	; 255
    26a0:	68 8d       	ldd	r22, Y+24	; 0x18
    26a2:	79 8d       	ldd	r23, Y+25	; 0x19
    26a4:	ce 01       	movw	r24, r28
    26a6:	01 96       	adiw	r24, 0x01	; 1
    26a8:	ab da       	rcall	.-2730   	; 0x1c00 <vfprintf>
    26aa:	2f 81       	ldd	r18, Y+7	; 0x07
    26ac:	38 85       	ldd	r19, Y+8	; 0x08
    26ae:	f8 01       	movw	r30, r16
    26b0:	e2 0f       	add	r30, r18
    26b2:	f3 1f       	adc	r31, r19
    26b4:	10 82       	st	Z, r1
    26b6:	2e 96       	adiw	r28, 0x0e	; 14
    26b8:	0f b6       	in	r0, 0x3f	; 63
    26ba:	f8 94       	cli
    26bc:	de bf       	out	0x3e, r29	; 62
    26be:	0f be       	out	0x3f, r0	; 63
    26c0:	cd bf       	out	0x3d, r28	; 61
    26c2:	df 91       	pop	r29
    26c4:	cf 91       	pop	r28
    26c6:	1f 91       	pop	r17
    26c8:	0f 91       	pop	r16
    26ca:	08 95       	ret

000026cc <__ultoa_invert>:
    26cc:	fa 01       	movw	r30, r20
    26ce:	aa 27       	eor	r26, r26
    26d0:	28 30       	cpi	r18, 0x08	; 8
    26d2:	51 f1       	breq	.+84     	; 0x2728 <__ultoa_invert+0x5c>
    26d4:	20 31       	cpi	r18, 0x10	; 16
    26d6:	81 f1       	breq	.+96     	; 0x2738 <__ultoa_invert+0x6c>
    26d8:	e8 94       	clt
    26da:	6f 93       	push	r22
    26dc:	6e 7f       	andi	r22, 0xFE	; 254
    26de:	6e 5f       	subi	r22, 0xFE	; 254
    26e0:	7f 4f       	sbci	r23, 0xFF	; 255
    26e2:	8f 4f       	sbci	r24, 0xFF	; 255
    26e4:	9f 4f       	sbci	r25, 0xFF	; 255
    26e6:	af 4f       	sbci	r26, 0xFF	; 255
    26e8:	b1 e0       	ldi	r27, 0x01	; 1
    26ea:	3e d0       	rcall	.+124    	; 0x2768 <__ultoa_invert+0x9c>
    26ec:	b4 e0       	ldi	r27, 0x04	; 4
    26ee:	3c d0       	rcall	.+120    	; 0x2768 <__ultoa_invert+0x9c>
    26f0:	67 0f       	add	r22, r23
    26f2:	78 1f       	adc	r23, r24
    26f4:	89 1f       	adc	r24, r25
    26f6:	9a 1f       	adc	r25, r26
    26f8:	a1 1d       	adc	r26, r1
    26fa:	68 0f       	add	r22, r24
    26fc:	79 1f       	adc	r23, r25
    26fe:	8a 1f       	adc	r24, r26
    2700:	91 1d       	adc	r25, r1
    2702:	a1 1d       	adc	r26, r1
    2704:	6a 0f       	add	r22, r26
    2706:	71 1d       	adc	r23, r1
    2708:	81 1d       	adc	r24, r1
    270a:	91 1d       	adc	r25, r1
    270c:	a1 1d       	adc	r26, r1
    270e:	20 d0       	rcall	.+64     	; 0x2750 <__ultoa_invert+0x84>
    2710:	09 f4       	brne	.+2      	; 0x2714 <__ultoa_invert+0x48>
    2712:	68 94       	set
    2714:	3f 91       	pop	r19
    2716:	2a e0       	ldi	r18, 0x0A	; 10
    2718:	26 9f       	mul	r18, r22
    271a:	11 24       	eor	r1, r1
    271c:	30 19       	sub	r19, r0
    271e:	30 5d       	subi	r19, 0xD0	; 208
    2720:	31 93       	st	Z+, r19
    2722:	de f6       	brtc	.-74     	; 0x26da <__ultoa_invert+0xe>
    2724:	cf 01       	movw	r24, r30
    2726:	08 95       	ret
    2728:	46 2f       	mov	r20, r22
    272a:	47 70       	andi	r20, 0x07	; 7
    272c:	40 5d       	subi	r20, 0xD0	; 208
    272e:	41 93       	st	Z+, r20
    2730:	b3 e0       	ldi	r27, 0x03	; 3
    2732:	0f d0       	rcall	.+30     	; 0x2752 <__ultoa_invert+0x86>
    2734:	c9 f7       	brne	.-14     	; 0x2728 <__ultoa_invert+0x5c>
    2736:	f6 cf       	rjmp	.-20     	; 0x2724 <__ultoa_invert+0x58>
    2738:	46 2f       	mov	r20, r22
    273a:	4f 70       	andi	r20, 0x0F	; 15
    273c:	40 5d       	subi	r20, 0xD0	; 208
    273e:	4a 33       	cpi	r20, 0x3A	; 58
    2740:	18 f0       	brcs	.+6      	; 0x2748 <__ultoa_invert+0x7c>
    2742:	49 5d       	subi	r20, 0xD9	; 217
    2744:	31 fd       	sbrc	r19, 1
    2746:	40 52       	subi	r20, 0x20	; 32
    2748:	41 93       	st	Z+, r20
    274a:	02 d0       	rcall	.+4      	; 0x2750 <__ultoa_invert+0x84>
    274c:	a9 f7       	brne	.-22     	; 0x2738 <__ultoa_invert+0x6c>
    274e:	ea cf       	rjmp	.-44     	; 0x2724 <__ultoa_invert+0x58>
    2750:	b4 e0       	ldi	r27, 0x04	; 4
    2752:	a6 95       	lsr	r26
    2754:	97 95       	ror	r25
    2756:	87 95       	ror	r24
    2758:	77 95       	ror	r23
    275a:	67 95       	ror	r22
    275c:	ba 95       	dec	r27
    275e:	c9 f7       	brne	.-14     	; 0x2752 <__ultoa_invert+0x86>
    2760:	00 97       	sbiw	r24, 0x00	; 0
    2762:	61 05       	cpc	r22, r1
    2764:	71 05       	cpc	r23, r1
    2766:	08 95       	ret
    2768:	9b 01       	movw	r18, r22
    276a:	ac 01       	movw	r20, r24
    276c:	0a 2e       	mov	r0, r26
    276e:	06 94       	lsr	r0
    2770:	57 95       	ror	r21
    2772:	47 95       	ror	r20
    2774:	37 95       	ror	r19
    2776:	27 95       	ror	r18
    2778:	ba 95       	dec	r27
    277a:	c9 f7       	brne	.-14     	; 0x276e <__ultoa_invert+0xa2>
    277c:	62 0f       	add	r22, r18
    277e:	73 1f       	adc	r23, r19
    2780:	84 1f       	adc	r24, r20
    2782:	95 1f       	adc	r25, r21
    2784:	a0 1d       	adc	r26, r0
    2786:	08 95       	ret

00002788 <calloc>:
    2788:	0f 93       	push	r16
    278a:	1f 93       	push	r17
    278c:	cf 93       	push	r28
    278e:	df 93       	push	r29
    2790:	86 9f       	mul	r24, r22
    2792:	80 01       	movw	r16, r0
    2794:	87 9f       	mul	r24, r23
    2796:	10 0d       	add	r17, r0
    2798:	96 9f       	mul	r25, r22
    279a:	10 0d       	add	r17, r0
    279c:	11 24       	eor	r1, r1
    279e:	c8 01       	movw	r24, r16
    27a0:	0d d0       	rcall	.+26     	; 0x27bc <malloc>
    27a2:	ec 01       	movw	r28, r24
    27a4:	00 97       	sbiw	r24, 0x00	; 0
    27a6:	21 f0       	breq	.+8      	; 0x27b0 <calloc+0x28>
    27a8:	a8 01       	movw	r20, r16
    27aa:	60 e0       	ldi	r22, 0x00	; 0
    27ac:	70 e0       	ldi	r23, 0x00	; 0
    27ae:	33 d1       	rcall	.+614    	; 0x2a16 <memset>
    27b0:	ce 01       	movw	r24, r28
    27b2:	df 91       	pop	r29
    27b4:	cf 91       	pop	r28
    27b6:	1f 91       	pop	r17
    27b8:	0f 91       	pop	r16
    27ba:	08 95       	ret

000027bc <malloc>:
    27bc:	cf 93       	push	r28
    27be:	df 93       	push	r29
    27c0:	82 30       	cpi	r24, 0x02	; 2
    27c2:	91 05       	cpc	r25, r1
    27c4:	10 f4       	brcc	.+4      	; 0x27ca <malloc+0xe>
    27c6:	82 e0       	ldi	r24, 0x02	; 2
    27c8:	90 e0       	ldi	r25, 0x00	; 0
    27ca:	e0 91 13 04 	lds	r30, 0x0413	; 0x800413 <__flp>
    27ce:	f0 91 14 04 	lds	r31, 0x0414	; 0x800414 <__flp+0x1>
    27d2:	20 e0       	ldi	r18, 0x00	; 0
    27d4:	30 e0       	ldi	r19, 0x00	; 0
    27d6:	c0 e0       	ldi	r28, 0x00	; 0
    27d8:	d0 e0       	ldi	r29, 0x00	; 0
    27da:	30 97       	sbiw	r30, 0x00	; 0
    27dc:	11 f1       	breq	.+68     	; 0x2822 <malloc+0x66>
    27de:	40 81       	ld	r20, Z
    27e0:	51 81       	ldd	r21, Z+1	; 0x01
    27e2:	48 17       	cp	r20, r24
    27e4:	59 07       	cpc	r21, r25
    27e6:	c0 f0       	brcs	.+48     	; 0x2818 <malloc+0x5c>
    27e8:	48 17       	cp	r20, r24
    27ea:	59 07       	cpc	r21, r25
    27ec:	61 f4       	brne	.+24     	; 0x2806 <malloc+0x4a>
    27ee:	82 81       	ldd	r24, Z+2	; 0x02
    27f0:	93 81       	ldd	r25, Z+3	; 0x03
    27f2:	20 97       	sbiw	r28, 0x00	; 0
    27f4:	19 f0       	breq	.+6      	; 0x27fc <malloc+0x40>
    27f6:	9b 83       	std	Y+3, r25	; 0x03
    27f8:	8a 83       	std	Y+2, r24	; 0x02
    27fa:	2b c0       	rjmp	.+86     	; 0x2852 <malloc+0x96>
    27fc:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <__flp+0x1>
    2800:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <__flp>
    2804:	26 c0       	rjmp	.+76     	; 0x2852 <malloc+0x96>
    2806:	21 15       	cp	r18, r1
    2808:	31 05       	cpc	r19, r1
    280a:	19 f0       	breq	.+6      	; 0x2812 <malloc+0x56>
    280c:	42 17       	cp	r20, r18
    280e:	53 07       	cpc	r21, r19
    2810:	18 f4       	brcc	.+6      	; 0x2818 <malloc+0x5c>
    2812:	9a 01       	movw	r18, r20
    2814:	be 01       	movw	r22, r28
    2816:	df 01       	movw	r26, r30
    2818:	ef 01       	movw	r28, r30
    281a:	02 80       	ldd	r0, Z+2	; 0x02
    281c:	f3 81       	ldd	r31, Z+3	; 0x03
    281e:	e0 2d       	mov	r30, r0
    2820:	dc cf       	rjmp	.-72     	; 0x27da <malloc+0x1e>
    2822:	21 15       	cp	r18, r1
    2824:	31 05       	cpc	r19, r1
    2826:	09 f1       	breq	.+66     	; 0x286a <malloc+0xae>
    2828:	28 1b       	sub	r18, r24
    282a:	39 0b       	sbc	r19, r25
    282c:	24 30       	cpi	r18, 0x04	; 4
    282e:	31 05       	cpc	r19, r1
    2830:	90 f4       	brcc	.+36     	; 0x2856 <malloc+0x9a>
    2832:	12 96       	adiw	r26, 0x02	; 2
    2834:	8d 91       	ld	r24, X+
    2836:	9c 91       	ld	r25, X
    2838:	13 97       	sbiw	r26, 0x03	; 3
    283a:	61 15       	cp	r22, r1
    283c:	71 05       	cpc	r23, r1
    283e:	21 f0       	breq	.+8      	; 0x2848 <malloc+0x8c>
    2840:	fb 01       	movw	r30, r22
    2842:	93 83       	std	Z+3, r25	; 0x03
    2844:	82 83       	std	Z+2, r24	; 0x02
    2846:	04 c0       	rjmp	.+8      	; 0x2850 <malloc+0x94>
    2848:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <__flp+0x1>
    284c:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <__flp>
    2850:	fd 01       	movw	r30, r26
    2852:	32 96       	adiw	r30, 0x02	; 2
    2854:	44 c0       	rjmp	.+136    	; 0x28de <malloc+0x122>
    2856:	fd 01       	movw	r30, r26
    2858:	e2 0f       	add	r30, r18
    285a:	f3 1f       	adc	r31, r19
    285c:	81 93       	st	Z+, r24
    285e:	91 93       	st	Z+, r25
    2860:	22 50       	subi	r18, 0x02	; 2
    2862:	31 09       	sbc	r19, r1
    2864:	2d 93       	st	X+, r18
    2866:	3c 93       	st	X, r19
    2868:	3a c0       	rjmp	.+116    	; 0x28de <malloc+0x122>
    286a:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <__brkval>
    286e:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <__brkval+0x1>
    2872:	23 2b       	or	r18, r19
    2874:	41 f4       	brne	.+16     	; 0x2886 <malloc+0xca>
    2876:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    287a:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    287e:	30 93 12 04 	sts	0x0412, r19	; 0x800412 <__brkval+0x1>
    2882:	20 93 11 04 	sts	0x0411, r18	; 0x800411 <__brkval>
    2886:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    288a:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    288e:	21 15       	cp	r18, r1
    2890:	31 05       	cpc	r19, r1
    2892:	41 f4       	brne	.+16     	; 0x28a4 <malloc+0xe8>
    2894:	2d b7       	in	r18, 0x3d	; 61
    2896:	3e b7       	in	r19, 0x3e	; 62
    2898:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    289c:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    28a0:	24 1b       	sub	r18, r20
    28a2:	35 0b       	sbc	r19, r21
    28a4:	e0 91 11 04 	lds	r30, 0x0411	; 0x800411 <__brkval>
    28a8:	f0 91 12 04 	lds	r31, 0x0412	; 0x800412 <__brkval+0x1>
    28ac:	e2 17       	cp	r30, r18
    28ae:	f3 07       	cpc	r31, r19
    28b0:	a0 f4       	brcc	.+40     	; 0x28da <malloc+0x11e>
    28b2:	2e 1b       	sub	r18, r30
    28b4:	3f 0b       	sbc	r19, r31
    28b6:	28 17       	cp	r18, r24
    28b8:	39 07       	cpc	r19, r25
    28ba:	78 f0       	brcs	.+30     	; 0x28da <malloc+0x11e>
    28bc:	ac 01       	movw	r20, r24
    28be:	4e 5f       	subi	r20, 0xFE	; 254
    28c0:	5f 4f       	sbci	r21, 0xFF	; 255
    28c2:	24 17       	cp	r18, r20
    28c4:	35 07       	cpc	r19, r21
    28c6:	48 f0       	brcs	.+18     	; 0x28da <malloc+0x11e>
    28c8:	4e 0f       	add	r20, r30
    28ca:	5f 1f       	adc	r21, r31
    28cc:	50 93 12 04 	sts	0x0412, r21	; 0x800412 <__brkval+0x1>
    28d0:	40 93 11 04 	sts	0x0411, r20	; 0x800411 <__brkval>
    28d4:	81 93       	st	Z+, r24
    28d6:	91 93       	st	Z+, r25
    28d8:	02 c0       	rjmp	.+4      	; 0x28de <malloc+0x122>
    28da:	e0 e0       	ldi	r30, 0x00	; 0
    28dc:	f0 e0       	ldi	r31, 0x00	; 0
    28de:	cf 01       	movw	r24, r30
    28e0:	df 91       	pop	r29
    28e2:	cf 91       	pop	r28
    28e4:	08 95       	ret

000028e6 <free>:
    28e6:	0f 93       	push	r16
    28e8:	1f 93       	push	r17
    28ea:	cf 93       	push	r28
    28ec:	df 93       	push	r29
    28ee:	00 97       	sbiw	r24, 0x00	; 0
    28f0:	09 f4       	brne	.+2      	; 0x28f4 <free+0xe>
    28f2:	8c c0       	rjmp	.+280    	; 0x2a0c <free+0x126>
    28f4:	fc 01       	movw	r30, r24
    28f6:	32 97       	sbiw	r30, 0x02	; 2
    28f8:	13 82       	std	Z+3, r1	; 0x03
    28fa:	12 82       	std	Z+2, r1	; 0x02
    28fc:	00 91 13 04 	lds	r16, 0x0413	; 0x800413 <__flp>
    2900:	10 91 14 04 	lds	r17, 0x0414	; 0x800414 <__flp+0x1>
    2904:	01 15       	cp	r16, r1
    2906:	11 05       	cpc	r17, r1
    2908:	81 f4       	brne	.+32     	; 0x292a <free+0x44>
    290a:	20 81       	ld	r18, Z
    290c:	31 81       	ldd	r19, Z+1	; 0x01
    290e:	82 0f       	add	r24, r18
    2910:	93 1f       	adc	r25, r19
    2912:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <__brkval>
    2916:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <__brkval+0x1>
    291a:	28 17       	cp	r18, r24
    291c:	39 07       	cpc	r19, r25
    291e:	79 f5       	brne	.+94     	; 0x297e <free+0x98>
    2920:	f0 93 12 04 	sts	0x0412, r31	; 0x800412 <__brkval+0x1>
    2924:	e0 93 11 04 	sts	0x0411, r30	; 0x800411 <__brkval>
    2928:	71 c0       	rjmp	.+226    	; 0x2a0c <free+0x126>
    292a:	d8 01       	movw	r26, r16
    292c:	40 e0       	ldi	r20, 0x00	; 0
    292e:	50 e0       	ldi	r21, 0x00	; 0
    2930:	ae 17       	cp	r26, r30
    2932:	bf 07       	cpc	r27, r31
    2934:	50 f4       	brcc	.+20     	; 0x294a <free+0x64>
    2936:	12 96       	adiw	r26, 0x02	; 2
    2938:	2d 91       	ld	r18, X+
    293a:	3c 91       	ld	r19, X
    293c:	13 97       	sbiw	r26, 0x03	; 3
    293e:	ad 01       	movw	r20, r26
    2940:	21 15       	cp	r18, r1
    2942:	31 05       	cpc	r19, r1
    2944:	09 f1       	breq	.+66     	; 0x2988 <free+0xa2>
    2946:	d9 01       	movw	r26, r18
    2948:	f3 cf       	rjmp	.-26     	; 0x2930 <free+0x4a>
    294a:	9d 01       	movw	r18, r26
    294c:	da 01       	movw	r26, r20
    294e:	33 83       	std	Z+3, r19	; 0x03
    2950:	22 83       	std	Z+2, r18	; 0x02
    2952:	60 81       	ld	r22, Z
    2954:	71 81       	ldd	r23, Z+1	; 0x01
    2956:	86 0f       	add	r24, r22
    2958:	97 1f       	adc	r25, r23
    295a:	82 17       	cp	r24, r18
    295c:	93 07       	cpc	r25, r19
    295e:	69 f4       	brne	.+26     	; 0x297a <free+0x94>
    2960:	ec 01       	movw	r28, r24
    2962:	28 81       	ld	r18, Y
    2964:	39 81       	ldd	r19, Y+1	; 0x01
    2966:	26 0f       	add	r18, r22
    2968:	37 1f       	adc	r19, r23
    296a:	2e 5f       	subi	r18, 0xFE	; 254
    296c:	3f 4f       	sbci	r19, 0xFF	; 255
    296e:	31 83       	std	Z+1, r19	; 0x01
    2970:	20 83       	st	Z, r18
    2972:	8a 81       	ldd	r24, Y+2	; 0x02
    2974:	9b 81       	ldd	r25, Y+3	; 0x03
    2976:	93 83       	std	Z+3, r25	; 0x03
    2978:	82 83       	std	Z+2, r24	; 0x02
    297a:	45 2b       	or	r20, r21
    297c:	29 f4       	brne	.+10     	; 0x2988 <free+0xa2>
    297e:	f0 93 14 04 	sts	0x0414, r31	; 0x800414 <__flp+0x1>
    2982:	e0 93 13 04 	sts	0x0413, r30	; 0x800413 <__flp>
    2986:	42 c0       	rjmp	.+132    	; 0x2a0c <free+0x126>
    2988:	13 96       	adiw	r26, 0x03	; 3
    298a:	fc 93       	st	X, r31
    298c:	ee 93       	st	-X, r30
    298e:	12 97       	sbiw	r26, 0x02	; 2
    2990:	ed 01       	movw	r28, r26
    2992:	49 91       	ld	r20, Y+
    2994:	59 91       	ld	r21, Y+
    2996:	9e 01       	movw	r18, r28
    2998:	24 0f       	add	r18, r20
    299a:	35 1f       	adc	r19, r21
    299c:	e2 17       	cp	r30, r18
    299e:	f3 07       	cpc	r31, r19
    29a0:	71 f4       	brne	.+28     	; 0x29be <free+0xd8>
    29a2:	80 81       	ld	r24, Z
    29a4:	91 81       	ldd	r25, Z+1	; 0x01
    29a6:	84 0f       	add	r24, r20
    29a8:	95 1f       	adc	r25, r21
    29aa:	02 96       	adiw	r24, 0x02	; 2
    29ac:	11 96       	adiw	r26, 0x01	; 1
    29ae:	9c 93       	st	X, r25
    29b0:	8e 93       	st	-X, r24
    29b2:	82 81       	ldd	r24, Z+2	; 0x02
    29b4:	93 81       	ldd	r25, Z+3	; 0x03
    29b6:	13 96       	adiw	r26, 0x03	; 3
    29b8:	9c 93       	st	X, r25
    29ba:	8e 93       	st	-X, r24
    29bc:	12 97       	sbiw	r26, 0x02	; 2
    29be:	e0 e0       	ldi	r30, 0x00	; 0
    29c0:	f0 e0       	ldi	r31, 0x00	; 0
    29c2:	d8 01       	movw	r26, r16
    29c4:	12 96       	adiw	r26, 0x02	; 2
    29c6:	8d 91       	ld	r24, X+
    29c8:	9c 91       	ld	r25, X
    29ca:	13 97       	sbiw	r26, 0x03	; 3
    29cc:	00 97       	sbiw	r24, 0x00	; 0
    29ce:	19 f0       	breq	.+6      	; 0x29d6 <free+0xf0>
    29d0:	f8 01       	movw	r30, r16
    29d2:	8c 01       	movw	r16, r24
    29d4:	f6 cf       	rjmp	.-20     	; 0x29c2 <free+0xdc>
    29d6:	8d 91       	ld	r24, X+
    29d8:	9c 91       	ld	r25, X
    29da:	98 01       	movw	r18, r16
    29dc:	2e 5f       	subi	r18, 0xFE	; 254
    29de:	3f 4f       	sbci	r19, 0xFF	; 255
    29e0:	82 0f       	add	r24, r18
    29e2:	93 1f       	adc	r25, r19
    29e4:	20 91 11 04 	lds	r18, 0x0411	; 0x800411 <__brkval>
    29e8:	30 91 12 04 	lds	r19, 0x0412	; 0x800412 <__brkval+0x1>
    29ec:	28 17       	cp	r18, r24
    29ee:	39 07       	cpc	r19, r25
    29f0:	69 f4       	brne	.+26     	; 0x2a0c <free+0x126>
    29f2:	30 97       	sbiw	r30, 0x00	; 0
    29f4:	29 f4       	brne	.+10     	; 0x2a00 <free+0x11a>
    29f6:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <__flp+0x1>
    29fa:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <__flp>
    29fe:	02 c0       	rjmp	.+4      	; 0x2a04 <free+0x11e>
    2a00:	13 82       	std	Z+3, r1	; 0x03
    2a02:	12 82       	std	Z+2, r1	; 0x02
    2a04:	10 93 12 04 	sts	0x0412, r17	; 0x800412 <__brkval+0x1>
    2a08:	00 93 11 04 	sts	0x0411, r16	; 0x800411 <__brkval>
    2a0c:	df 91       	pop	r29
    2a0e:	cf 91       	pop	r28
    2a10:	1f 91       	pop	r17
    2a12:	0f 91       	pop	r16
    2a14:	08 95       	ret

00002a16 <memset>:
    2a16:	dc 01       	movw	r26, r24
    2a18:	01 c0       	rjmp	.+2      	; 0x2a1c <memset+0x6>
    2a1a:	6d 93       	st	X+, r22
    2a1c:	41 50       	subi	r20, 0x01	; 1
    2a1e:	50 40       	sbci	r21, 0x00	; 0
    2a20:	e0 f7       	brcc	.-8      	; 0x2a1a <memset+0x4>
    2a22:	08 95       	ret

00002a24 <_exit>:
    2a24:	f8 94       	cli

00002a26 <__stop_program>:
    2a26:	ff cf       	rjmp	.-2      	; 0x2a26 <__stop_program>
