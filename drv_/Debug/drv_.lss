
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001ee  00800200  0000070c  000007a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000070c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  008003ee  008003ee  0000098e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000098e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001588  00000000  00000000  00000af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f2f  00000000  00000000  00002078  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007b6  00000000  00000000  00002fa7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000218  00000000  00000000  00003760  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b6  00000000  00000000  00003978  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003ac  00000000  00000000  0000412e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000044da  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	a9 c0       	rjmp	.+338    	; 0x1d4 <__vector_32>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2d c1       	rjmp	.+602    	; 0x318 <__vector_47>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e0       	ldi	r30, 0x0C	; 12
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 3e       	cpi	r26, 0xEE	; 238
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	24 e0       	ldi	r18, 0x04	; 4
 110:	ae ee       	ldi	r26, 0xEE	; 238
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 31       	cpi	r26, 0x12	; 18
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	1f d0       	rcall	.+62     	; 0x15e <main>
 120:	f3 c2       	rjmp	.+1510   	; 0x708 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <init_gpio>:
	*/
	//DDRB|=(1<<PB5);//LED13
	//sbi(DDRB,4);//digital 10
	//sbi(DDRB,5);//digital 11
	//sbi(DDRB,6);//digital 12
	sbi(DDRH,3);//digital 6 OC4A
 124:	e1 e0       	ldi	r30, 0x01	; 1
 126:	f1 e0       	ldi	r31, 0x01	; 1
 128:	80 81       	ld	r24, Z
 12a:	88 60       	ori	r24, 0x08	; 8
 12c:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
 12e:	80 81       	ld	r24, Z
 130:	80 61       	ori	r24, 0x10	; 16
 132:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
 134:	80 81       	ld	r24, Z
 136:	80 62       	ori	r24, 0x20	; 32
 138:	80 83       	st	Z, r24
 13a:	08 95       	ret

0000013c <uart_putchar>:
	printf(c);
	printf("\n");
}

static int uart_putchar(char c, FILE *stream)
{
 13c:	cf 93       	push	r28
 13e:	c8 2f       	mov	r28, r24

	if (c == '\n')
 140:	8a 30       	cpi	r24, 0x0A	; 10
 142:	11 f4       	brne	.+4      	; 0x148 <uart_putchar+0xc>
	uart_putchar('\r', stream);
 144:	8d e0       	ldi	r24, 0x0D	; 13
 146:	fa df       	rcall	.-12     	; 0x13c <uart_putchar>
	while ( !( UCSR0A & (1<<UDRE0)) )
 148:	e0 ec       	ldi	r30, 0xC0	; 192
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	85 ff       	sbrs	r24, 5
 150:	fd cf       	rjmp	.-6      	; 0x14c <uart_putchar+0x10>
	;
	/* Put data into buffer, sends the data */
	UDR0 = c;
 152:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	return 0;
}
 156:	80 e0       	ldi	r24, 0x00	; 0
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	cf 91       	pop	r28
 15c:	08 95       	ret

0000015e <main>:
uint8_t phase = 60;//sinTableSize / 3;         // Find phase shift and initial A, B C phase values

uint16_t pwm_delay=0;
int main(void)

{	
 15e:	e2 df       	rcall	.-60     	; 0x124 <init_gpio>
 160:	80 e1       	ldi	r24, 0x10	; 16
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	32 d1       	rcall	.+612    	; 0x3ca <USART_Init>
 166:	60 e0       	ldi	r22, 0x00	; 0
 168:	70 e0       	ldi	r23, 0x00	; 0
 16a:	8e e9       	ldi	r24, 0x9E	; 158
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	40 d1       	rcall	.+640    	; 0x3f0 <fdevopen>
 170:	90 93 f7 03 	sts	0x03F7, r25	; 0x8003f7 <uart_str+0x1>
 174:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <uart_str>
 178:	19 d1       	rcall	.+562    	; 0x3ac <setup_timer5>
 17a:	09 d1       	rcall	.+530    	; 0x38e <setup_timer3>
 17c:	f4 d0       	rcall	.+488    	; 0x366 <setup_timer4>
 17e:	10 d1       	rcall	.+544    	; 0x3a0 <Enable_timer3_compare_interrupt>
 180:	1e d1       	rcall	.+572    	; 0x3be <Enable_timer5_compare_interrupt>
 182:	8f e3       	ldi	r24, 0x3F	; 63
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 18a:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 18e:	80 ea       	ldi	r24, 0xA0	; 160
 190:	9f e0       	ldi	r25, 0x0F	; 15
 192:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 196:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
 19a:	78 94       	sei
 19c:	c0 90 f0 03 	lds	r12, 0x03F0	; 0x8003f0 <_10micros>
 1a0:	d0 90 f1 03 	lds	r13, 0x03F1	; 0x8003f1 <_10micros+0x1>
 1a4:	e0 90 f2 03 	lds	r14, 0x03F2	; 0x8003f2 <_10micros+0x2>
 1a8:	f0 90 f3 03 	lds	r15, 0x03F3	; 0x8003f3 <_10micros+0x3>
 1ac:	83 ea       	ldi	r24, 0xA3	; 163
 1ae:	18 d1       	rcall	.+560    	; 0x3e0 <USART_Transmit>
 1b0:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <_10micros>
 1b4:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <_10micros+0x1>
 1b8:	a0 91 f2 03 	lds	r26, 0x03F2	; 0x8003f2 <_10micros+0x2>
 1bc:	b0 91 f3 03 	lds	r27, 0x03F3	; 0x8003f3 <_10micros+0x3>
 1c0:	8c 19       	sub	r24, r12
 1c2:	9d 09       	sbc	r25, r13
 1c4:	ae 09       	sbc	r26, r14
 1c6:	bf 09       	sbc	r27, r15
 1c8:	80 39       	cpi	r24, 0x90	; 144
 1ca:	90 4d       	sbci	r25, 0xD0	; 208
 1cc:	a3 40       	sbci	r26, 0x03	; 3
 1ce:	b1 05       	cpc	r27, r1
 1d0:	78 f3       	brcs	.-34     	; 0x1b0 <main+0x52>
 1d2:	e4 cf       	rjmp	.-56     	; 0x19c <main+0x3e>

000001d4 <__vector_32>:
 1d4:	1f 92       	push	r1
 1d6:	0f 92       	push	r0
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	0f 92       	push	r0
 1dc:	11 24       	eor	r1, r1
 1de:	8f 93       	push	r24
 1e0:	9f 93       	push	r25
 1e2:	af 93       	push	r26
 1e4:	bf 93       	push	r27
 1e6:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <_10micros>
 1ea:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <_10micros+0x1>
 1ee:	a0 91 f2 03 	lds	r26, 0x03F2	; 0x8003f2 <_10micros+0x2>
 1f2:	b0 91 f3 03 	lds	r27, 0x03F3	; 0x8003f3 <_10micros+0x3>
 1f6:	01 96       	adiw	r24, 0x01	; 1
 1f8:	a1 1d       	adc	r26, r1
 1fa:	b1 1d       	adc	r27, r1
 1fc:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <_10micros>
 200:	90 93 f1 03 	sts	0x03F1, r25	; 0x8003f1 <_10micros+0x1>
 204:	a0 93 f2 03 	sts	0x03F2, r26	; 0x8003f2 <_10micros+0x2>
 208:	b0 93 f3 03 	sts	0x03F3, r27	; 0x8003f3 <_10micros+0x3>
 20c:	bf 91       	pop	r27
 20e:	af 91       	pop	r26
 210:	9f 91       	pop	r25
 212:	8f 91       	pop	r24
 214:	0f 90       	pop	r0
 216:	0f be       	out	0x3f, r0	; 63
 218:	0f 90       	pop	r0
 21a:	1f 90       	pop	r1
 21c:	18 95       	reti

0000021e <PWM_update>:
 21e:	e0 91 f4 03 	lds	r30, 0x03F4	; 0x8003f4 <U_step>
 222:	f0 91 f5 03 	lds	r31, 0x03F5	; 0x8003f5 <U_step+0x1>
 226:	e2 5f       	subi	r30, 0xF2	; 242
 228:	fd 4f       	sbci	r31, 0xFD	; 253
 22a:	80 81       	ld	r24, Z
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 232:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 236:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <V_step>
 23a:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <V_step+0x1>
 23e:	e2 5f       	subi	r30, 0xF2	; 242
 240:	fd 4f       	sbci	r31, 0xFD	; 253
 242:	80 81       	ld	r24, Z
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 24a:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 24e:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <W_step>
 252:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <W_step+0x1>
 256:	e2 5f       	subi	r30, 0xF2	; 242
 258:	fd 4f       	sbci	r31, 0xFD	; 253
 25a:	80 81       	ld	r24, Z
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
 262:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
 266:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <incr>
 26a:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <incr+0x1>
 26e:	40 91 f4 03 	lds	r20, 0x03F4	; 0x8003f4 <U_step>
 272:	50 91 f5 03 	lds	r21, 0x03F5	; 0x8003f5 <U_step+0x1>
 276:	46 0f       	add	r20, r22
 278:	57 1f       	adc	r21, r23
 27a:	50 93 f5 03 	sts	0x03F5, r21	; 0x8003f5 <U_step+0x1>
 27e:	40 93 f4 03 	sts	0x03F4, r20	; 0x8003f4 <U_step>
 282:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <V_step>
 286:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <V_step+0x1>
 28a:	26 0f       	add	r18, r22
 28c:	37 1f       	adc	r19, r23
 28e:	30 93 0b 02 	sts	0x020B, r19	; 0x80020b <V_step+0x1>
 292:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <V_step>
 296:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <W_step>
 29a:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <W_step+0x1>
 29e:	86 0f       	add	r24, r22
 2a0:	97 1f       	adc	r25, r23
 2a2:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <W_step+0x1>
 2a6:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <W_step>
 2aa:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <sinTableSize>
 2ae:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <sinTableSize+0x1>
 2b2:	64 17       	cp	r22, r20
 2b4:	75 07       	cpc	r23, r21
 2b6:	2c f4       	brge	.+10     	; 0x2c2 <PWM_update+0xa4>
 2b8:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <U_step+0x1>
 2bc:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <U_step>
 2c0:	06 c0       	rjmp	.+12     	; 0x2ce <PWM_update+0xb0>
 2c2:	55 23       	and	r21, r21
 2c4:	24 f4       	brge	.+8      	; 0x2ce <PWM_update+0xb0>
 2c6:	70 93 f5 03 	sts	0x03F5, r23	; 0x8003f5 <U_step+0x1>
 2ca:	60 93 f4 03 	sts	0x03F4, r22	; 0x8003f4 <U_step>
 2ce:	62 17       	cp	r22, r18
 2d0:	73 07       	cpc	r23, r19
 2d2:	2c f4       	brge	.+10     	; 0x2de <PWM_update+0xc0>
 2d4:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <V_step+0x1>
 2d8:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <V_step>
 2dc:	06 c0       	rjmp	.+12     	; 0x2ea <PWM_update+0xcc>
 2de:	33 23       	and	r19, r19
 2e0:	24 f4       	brge	.+8      	; 0x2ea <PWM_update+0xcc>
 2e2:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <V_step+0x1>
 2e6:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <V_step>
 2ea:	68 17       	cp	r22, r24
 2ec:	79 07       	cpc	r23, r25
 2ee:	2c f4       	brge	.+10     	; 0x2fa <PWM_update+0xdc>
 2f0:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <W_step+0x1>
 2f4:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <W_step>
 2f8:	06 c0       	rjmp	.+12     	; 0x306 <PWM_update+0xe8>
 2fa:	99 23       	and	r25, r25
 2fc:	24 f4       	brge	.+8      	; 0x306 <PWM_update+0xe8>
 2fe:	70 93 09 02 	sts	0x0209, r23	; 0x800209 <W_step+0x1>
 302:	60 93 08 02 	sts	0x0208, r22	; 0x800208 <W_step>
 306:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <__data_end>
 30a:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <__data_end+0x1>
 30e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 312:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
 316:	08 95       	ret

00000318 <__vector_47>:
 318:	1f 92       	push	r1
 31a:	0f 92       	push	r0
 31c:	0f b6       	in	r0, 0x3f	; 63
 31e:	0f 92       	push	r0
 320:	11 24       	eor	r1, r1
 322:	0b b6       	in	r0, 0x3b	; 59
 324:	0f 92       	push	r0
 326:	2f 93       	push	r18
 328:	3f 93       	push	r19
 32a:	4f 93       	push	r20
 32c:	5f 93       	push	r21
 32e:	6f 93       	push	r22
 330:	7f 93       	push	r23
 332:	8f 93       	push	r24
 334:	9f 93       	push	r25
 336:	af 93       	push	r26
 338:	bf 93       	push	r27
 33a:	ef 93       	push	r30
 33c:	ff 93       	push	r31
 33e:	6f df       	rcall	.-290    	; 0x21e <PWM_update>
 340:	ff 91       	pop	r31
 342:	ef 91       	pop	r30
 344:	bf 91       	pop	r27
 346:	af 91       	pop	r26
 348:	9f 91       	pop	r25
 34a:	8f 91       	pop	r24
 34c:	7f 91       	pop	r23
 34e:	6f 91       	pop	r22
 350:	5f 91       	pop	r21
 352:	4f 91       	pop	r20
 354:	3f 91       	pop	r19
 356:	2f 91       	pop	r18
 358:	0f 90       	pop	r0
 35a:	0b be       	out	0x3b, r0	; 59
 35c:	0f 90       	pop	r0
 35e:	0f be       	out	0x3f, r0	; 63
 360:	0f 90       	pop	r0
 362:	1f 90       	pop	r1
 364:	18 95       	reti

00000366 <setup_timer4>:

#define clockCyclesPerMicrosecond () ( F_CPU / 1000000L )

/*-----------Timter 1-----------*/
void setup_timer4(void){
    sbi (TCCR4B, CS40);//prescakaer 256
 366:	e1 ea       	ldi	r30, 0xA1	; 161
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	80 81       	ld	r24, Z
 36c:	81 60       	ori	r24, 0x01	; 1
 36e:	80 83       	st	Z, r24
    sbi (TCCR4A, WGM40);//8 bit phase correct PWM
 370:	e0 ea       	ldi	r30, 0xA0	; 160
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	80 81       	ld	r24, Z
 376:	81 60       	ori	r24, 0x01	; 1
 378:	80 83       	st	Z, r24
	
	//sbi (TCCR4A,COM4A0);
	sbi (TCCR4A,COM4A1);
 37a:	80 81       	ld	r24, Z
 37c:	80 68       	ori	r24, 0x80	; 128
 37e:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4B0);
	sbi (TCCR4A,COM4B1);
 380:	80 81       	ld	r24, Z
 382:	80 62       	ori	r24, 0x20	; 32
 384:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4C0);
	sbi (TCCR4A,COM4C1);
 386:	80 81       	ld	r24, Z
 388:	88 60       	ori	r24, 0x08	; 8
 38a:	80 83       	st	Z, r24
 38c:	08 95       	ret

0000038e <setup_timer3>:
/*-----------Timter 3-----------*/
void setup_timer3(void){
	//64 pres, 250.000 hz 0.000004s
	//sbi (TCCR5B, CS50);//only this no prescaling
	
	sbi (TCCR3B, CS30);//only this 8
 38e:	e1 e9       	ldi	r30, 0x91	; 145
 390:	f0 e0       	ldi	r31, 0x00	; 0
 392:	80 81       	ld	r24, Z
 394:	81 60       	ori	r24, 0x01	; 1
 396:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR3B, WGM32);//OCR3A compare interrupt
 398:	80 81       	ld	r24, Z
 39a:	88 60       	ori	r24, 0x08	; 8
 39c:	80 83       	st	Z, r24
 39e:	08 95       	ret

000003a0 <Enable_timer3_compare_interrupt>:
}
void Enable_timer3_compare_interrupt(){
	sbi (TIMSK3, OCIE3A);
 3a0:	e1 e7       	ldi	r30, 0x71	; 113
 3a2:	f0 e0       	ldi	r31, 0x00	; 0
 3a4:	80 81       	ld	r24, Z
 3a6:	82 60       	ori	r24, 0x02	; 2
 3a8:	80 83       	st	Z, r24
 3aa:	08 95       	ret

000003ac <setup_timer5>:
}
/*-----------Timter 5-----------*/
void setup_timer5(void){
	sbi (TCCR5B, CS50);//only this 8
 3ac:	e1 e2       	ldi	r30, 0x21	; 33
 3ae:	f1 e0       	ldi	r31, 0x01	; 1
 3b0:	80 81       	ld	r24, Z
 3b2:	81 60       	ori	r24, 0x01	; 1
 3b4:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR5B, WGM52);//OCR4A compare interrupt
 3b6:	80 81       	ld	r24, Z
 3b8:	88 60       	ori	r24, 0x08	; 8
 3ba:	80 83       	st	Z, r24
 3bc:	08 95       	ret

000003be <Enable_timer5_compare_interrupt>:
	
}
void Enable_timer5_compare_interrupt(){
	sbi (TIMSK5, OCIE5A);
 3be:	e3 e7       	ldi	r30, 0x73	; 115
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
 3c2:	80 81       	ld	r24, Z
 3c4:	82 60       	ori	r24, 0x02	; 2
 3c6:	80 83       	st	Z, r24
 3c8:	08 95       	ret

000003ca <USART_Init>:
#include <avr/io.h>
#include <stdio.h>
void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
 3ca:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)ubrr;
 3ce:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	UCSR0B = (1<<TXEN0);// | (1<<TXCIE0);
 3d2:	88 e0       	ldi	r24, 0x08	; 8
 3d4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);//2 stop bit 8 bit
 3d8:	8e e0       	ldi	r24, 0x0E	; 14
 3da:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 3de:	08 95       	ret

000003e0 <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 3e0:	e0 ec       	ldi	r30, 0xC0	; 192
 3e2:	f0 e0       	ldi	r31, 0x00	; 0
 3e4:	90 81       	ld	r25, Z
 3e6:	95 ff       	sbrs	r25, 5
 3e8:	fd cf       	rjmp	.-6      	; 0x3e4 <USART_Transmit+0x4>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 3ea:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 3ee:	08 95       	ret

000003f0 <fdevopen>:
 3f0:	0f 93       	push	r16
 3f2:	1f 93       	push	r17
 3f4:	cf 93       	push	r28
 3f6:	df 93       	push	r29
 3f8:	00 97       	sbiw	r24, 0x00	; 0
 3fa:	31 f4       	brne	.+12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fc:	61 15       	cp	r22, r1
 3fe:	71 05       	cpc	r23, r1
 400:	19 f4       	brne	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	39 c0       	rjmp	.+114    	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 408:	8b 01       	movw	r16, r22
 40a:	ec 01       	movw	r28, r24
 40c:	6e e0       	ldi	r22, 0x0E	; 14
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	37 d0       	rcall	.+110    	; 0x484 <calloc>
 416:	fc 01       	movw	r30, r24
 418:	89 2b       	or	r24, r25
 41a:	99 f3       	breq	.-26     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 41c:	80 e8       	ldi	r24, 0x80	; 128
 41e:	83 83       	std	Z+3, r24	; 0x03
 420:	01 15       	cp	r16, r1
 422:	11 05       	cpc	r17, r1
 424:	71 f0       	breq	.+28     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 426:	13 87       	std	Z+11, r17	; 0x0b
 428:	02 87       	std	Z+10, r16	; 0x0a
 42a:	81 e8       	ldi	r24, 0x81	; 129
 42c:	83 83       	std	Z+3, r24	; 0x03
 42e:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__iob>
 432:	90 91 09 04 	lds	r25, 0x0409	; 0x800409 <__iob+0x1>
 436:	89 2b       	or	r24, r25
 438:	21 f4       	brne	.+8      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 43a:	f0 93 09 04 	sts	0x0409, r31	; 0x800409 <__iob+0x1>
 43e:	e0 93 08 04 	sts	0x0408, r30	; 0x800408 <__iob>
 442:	20 97       	sbiw	r28, 0x00	; 0
 444:	c9 f0       	breq	.+50     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 446:	d1 87       	std	Z+9, r29	; 0x09
 448:	c0 87       	std	Z+8, r28	; 0x08
 44a:	83 81       	ldd	r24, Z+3	; 0x03
 44c:	82 60       	ori	r24, 0x02	; 2
 44e:	83 83       	std	Z+3, r24	; 0x03
 450:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <__iob+0x2>
 454:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <__iob+0x3>
 458:	89 2b       	or	r24, r25
 45a:	71 f4       	brne	.+28     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 45c:	f0 93 0b 04 	sts	0x040B, r31	; 0x80040b <__iob+0x3>
 460:	e0 93 0a 04 	sts	0x040A, r30	; 0x80040a <__iob+0x2>
 464:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <__iob+0x4>
 468:	90 91 0d 04 	lds	r25, 0x040D	; 0x80040d <__iob+0x5>
 46c:	89 2b       	or	r24, r25
 46e:	21 f4       	brne	.+8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 470:	f0 93 0d 04 	sts	0x040D, r31	; 0x80040d <__iob+0x5>
 474:	e0 93 0c 04 	sts	0x040C, r30	; 0x80040c <__iob+0x4>
 478:	cf 01       	movw	r24, r30
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	1f 91       	pop	r17
 480:	0f 91       	pop	r16
 482:	08 95       	ret

00000484 <calloc>:
 484:	0f 93       	push	r16
 486:	1f 93       	push	r17
 488:	cf 93       	push	r28
 48a:	df 93       	push	r29
 48c:	86 9f       	mul	r24, r22
 48e:	80 01       	movw	r16, r0
 490:	87 9f       	mul	r24, r23
 492:	10 0d       	add	r17, r0
 494:	96 9f       	mul	r25, r22
 496:	10 0d       	add	r17, r0
 498:	11 24       	eor	r1, r1
 49a:	c8 01       	movw	r24, r16
 49c:	0d d0       	rcall	.+26     	; 0x4b8 <malloc>
 49e:	ec 01       	movw	r28, r24
 4a0:	00 97       	sbiw	r24, 0x00	; 0
 4a2:	21 f0       	breq	.+8      	; 0x4ac <calloc+0x28>
 4a4:	a8 01       	movw	r20, r16
 4a6:	60 e0       	ldi	r22, 0x00	; 0
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	27 d1       	rcall	.+590    	; 0x6fa <memset>
 4ac:	ce 01       	movw	r24, r28
 4ae:	df 91       	pop	r29
 4b0:	cf 91       	pop	r28
 4b2:	1f 91       	pop	r17
 4b4:	0f 91       	pop	r16
 4b6:	08 95       	ret

000004b8 <malloc>:
 4b8:	0f 93       	push	r16
 4ba:	1f 93       	push	r17
 4bc:	cf 93       	push	r28
 4be:	df 93       	push	r29
 4c0:	82 30       	cpi	r24, 0x02	; 2
 4c2:	91 05       	cpc	r25, r1
 4c4:	10 f4       	brcc	.+4      	; 0x4ca <malloc+0x12>
 4c6:	82 e0       	ldi	r24, 0x02	; 2
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	e0 91 10 04 	lds	r30, 0x0410	; 0x800410 <__flp>
 4ce:	f0 91 11 04 	lds	r31, 0x0411	; 0x800411 <__flp+0x1>
 4d2:	20 e0       	ldi	r18, 0x00	; 0
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	a0 e0       	ldi	r26, 0x00	; 0
 4d8:	b0 e0       	ldi	r27, 0x00	; 0
 4da:	30 97       	sbiw	r30, 0x00	; 0
 4dc:	19 f1       	breq	.+70     	; 0x524 <malloc+0x6c>
 4de:	40 81       	ld	r20, Z
 4e0:	51 81       	ldd	r21, Z+1	; 0x01
 4e2:	02 81       	ldd	r16, Z+2	; 0x02
 4e4:	13 81       	ldd	r17, Z+3	; 0x03
 4e6:	48 17       	cp	r20, r24
 4e8:	59 07       	cpc	r21, r25
 4ea:	c8 f0       	brcs	.+50     	; 0x51e <malloc+0x66>
 4ec:	84 17       	cp	r24, r20
 4ee:	95 07       	cpc	r25, r21
 4f0:	69 f4       	brne	.+26     	; 0x50c <malloc+0x54>
 4f2:	10 97       	sbiw	r26, 0x00	; 0
 4f4:	31 f0       	breq	.+12     	; 0x502 <malloc+0x4a>
 4f6:	12 96       	adiw	r26, 0x02	; 2
 4f8:	0c 93       	st	X, r16
 4fa:	12 97       	sbiw	r26, 0x02	; 2
 4fc:	13 96       	adiw	r26, 0x03	; 3
 4fe:	1c 93       	st	X, r17
 500:	27 c0       	rjmp	.+78     	; 0x550 <malloc+0x98>
 502:	00 93 10 04 	sts	0x0410, r16	; 0x800410 <__flp>
 506:	10 93 11 04 	sts	0x0411, r17	; 0x800411 <__flp+0x1>
 50a:	22 c0       	rjmp	.+68     	; 0x550 <malloc+0x98>
 50c:	21 15       	cp	r18, r1
 50e:	31 05       	cpc	r19, r1
 510:	19 f0       	breq	.+6      	; 0x518 <malloc+0x60>
 512:	42 17       	cp	r20, r18
 514:	53 07       	cpc	r21, r19
 516:	18 f4       	brcc	.+6      	; 0x51e <malloc+0x66>
 518:	9a 01       	movw	r18, r20
 51a:	bd 01       	movw	r22, r26
 51c:	ef 01       	movw	r28, r30
 51e:	df 01       	movw	r26, r30
 520:	f8 01       	movw	r30, r16
 522:	db cf       	rjmp	.-74     	; 0x4da <malloc+0x22>
 524:	21 15       	cp	r18, r1
 526:	31 05       	cpc	r19, r1
 528:	f9 f0       	breq	.+62     	; 0x568 <malloc+0xb0>
 52a:	28 1b       	sub	r18, r24
 52c:	39 0b       	sbc	r19, r25
 52e:	24 30       	cpi	r18, 0x04	; 4
 530:	31 05       	cpc	r19, r1
 532:	80 f4       	brcc	.+32     	; 0x554 <malloc+0x9c>
 534:	8a 81       	ldd	r24, Y+2	; 0x02
 536:	9b 81       	ldd	r25, Y+3	; 0x03
 538:	61 15       	cp	r22, r1
 53a:	71 05       	cpc	r23, r1
 53c:	21 f0       	breq	.+8      	; 0x546 <malloc+0x8e>
 53e:	fb 01       	movw	r30, r22
 540:	93 83       	std	Z+3, r25	; 0x03
 542:	82 83       	std	Z+2, r24	; 0x02
 544:	04 c0       	rjmp	.+8      	; 0x54e <malloc+0x96>
 546:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <__flp+0x1>
 54a:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <__flp>
 54e:	fe 01       	movw	r30, r28
 550:	32 96       	adiw	r30, 0x02	; 2
 552:	44 c0       	rjmp	.+136    	; 0x5dc <malloc+0x124>
 554:	fe 01       	movw	r30, r28
 556:	e2 0f       	add	r30, r18
 558:	f3 1f       	adc	r31, r19
 55a:	81 93       	st	Z+, r24
 55c:	91 93       	st	Z+, r25
 55e:	22 50       	subi	r18, 0x02	; 2
 560:	31 09       	sbc	r19, r1
 562:	39 83       	std	Y+1, r19	; 0x01
 564:	28 83       	st	Y, r18
 566:	3a c0       	rjmp	.+116    	; 0x5dc <malloc+0x124>
 568:	20 91 0e 04 	lds	r18, 0x040E	; 0x80040e <__brkval>
 56c:	30 91 0f 04 	lds	r19, 0x040F	; 0x80040f <__brkval+0x1>
 570:	23 2b       	or	r18, r19
 572:	41 f4       	brne	.+16     	; 0x584 <malloc+0xcc>
 574:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 578:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 57c:	30 93 0f 04 	sts	0x040F, r19	; 0x80040f <__brkval+0x1>
 580:	20 93 0e 04 	sts	0x040E, r18	; 0x80040e <__brkval>
 584:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
 588:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
 58c:	21 15       	cp	r18, r1
 58e:	31 05       	cpc	r19, r1
 590:	41 f4       	brne	.+16     	; 0x5a2 <malloc+0xea>
 592:	2d b7       	in	r18, 0x3d	; 61
 594:	3e b7       	in	r19, 0x3e	; 62
 596:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 59a:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 59e:	24 1b       	sub	r18, r20
 5a0:	35 0b       	sbc	r19, r21
 5a2:	e0 91 0e 04 	lds	r30, 0x040E	; 0x80040e <__brkval>
 5a6:	f0 91 0f 04 	lds	r31, 0x040F	; 0x80040f <__brkval+0x1>
 5aa:	e2 17       	cp	r30, r18
 5ac:	f3 07       	cpc	r31, r19
 5ae:	a0 f4       	brcc	.+40     	; 0x5d8 <malloc+0x120>
 5b0:	2e 1b       	sub	r18, r30
 5b2:	3f 0b       	sbc	r19, r31
 5b4:	28 17       	cp	r18, r24
 5b6:	39 07       	cpc	r19, r25
 5b8:	78 f0       	brcs	.+30     	; 0x5d8 <malloc+0x120>
 5ba:	ac 01       	movw	r20, r24
 5bc:	4e 5f       	subi	r20, 0xFE	; 254
 5be:	5f 4f       	sbci	r21, 0xFF	; 255
 5c0:	24 17       	cp	r18, r20
 5c2:	35 07       	cpc	r19, r21
 5c4:	48 f0       	brcs	.+18     	; 0x5d8 <malloc+0x120>
 5c6:	4e 0f       	add	r20, r30
 5c8:	5f 1f       	adc	r21, r31
 5ca:	50 93 0f 04 	sts	0x040F, r21	; 0x80040f <__brkval+0x1>
 5ce:	40 93 0e 04 	sts	0x040E, r20	; 0x80040e <__brkval>
 5d2:	81 93       	st	Z+, r24
 5d4:	91 93       	st	Z+, r25
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <malloc+0x124>
 5d8:	e0 e0       	ldi	r30, 0x00	; 0
 5da:	f0 e0       	ldi	r31, 0x00	; 0
 5dc:	cf 01       	movw	r24, r30
 5de:	df 91       	pop	r29
 5e0:	cf 91       	pop	r28
 5e2:	1f 91       	pop	r17
 5e4:	0f 91       	pop	r16
 5e6:	08 95       	ret

000005e8 <free>:
 5e8:	cf 93       	push	r28
 5ea:	df 93       	push	r29
 5ec:	00 97       	sbiw	r24, 0x00	; 0
 5ee:	09 f4       	brne	.+2      	; 0x5f2 <free+0xa>
 5f0:	81 c0       	rjmp	.+258    	; 0x6f4 <free+0x10c>
 5f2:	fc 01       	movw	r30, r24
 5f4:	32 97       	sbiw	r30, 0x02	; 2
 5f6:	13 82       	std	Z+3, r1	; 0x03
 5f8:	12 82       	std	Z+2, r1	; 0x02
 5fa:	a0 91 10 04 	lds	r26, 0x0410	; 0x800410 <__flp>
 5fe:	b0 91 11 04 	lds	r27, 0x0411	; 0x800411 <__flp+0x1>
 602:	10 97       	sbiw	r26, 0x00	; 0
 604:	81 f4       	brne	.+32     	; 0x626 <free+0x3e>
 606:	20 81       	ld	r18, Z
 608:	31 81       	ldd	r19, Z+1	; 0x01
 60a:	82 0f       	add	r24, r18
 60c:	93 1f       	adc	r25, r19
 60e:	20 91 0e 04 	lds	r18, 0x040E	; 0x80040e <__brkval>
 612:	30 91 0f 04 	lds	r19, 0x040F	; 0x80040f <__brkval+0x1>
 616:	28 17       	cp	r18, r24
 618:	39 07       	cpc	r19, r25
 61a:	51 f5       	brne	.+84     	; 0x670 <free+0x88>
 61c:	f0 93 0f 04 	sts	0x040F, r31	; 0x80040f <__brkval+0x1>
 620:	e0 93 0e 04 	sts	0x040E, r30	; 0x80040e <__brkval>
 624:	67 c0       	rjmp	.+206    	; 0x6f4 <free+0x10c>
 626:	ed 01       	movw	r28, r26
 628:	20 e0       	ldi	r18, 0x00	; 0
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	ce 17       	cp	r28, r30
 62e:	df 07       	cpc	r29, r31
 630:	40 f4       	brcc	.+16     	; 0x642 <free+0x5a>
 632:	4a 81       	ldd	r20, Y+2	; 0x02
 634:	5b 81       	ldd	r21, Y+3	; 0x03
 636:	9e 01       	movw	r18, r28
 638:	41 15       	cp	r20, r1
 63a:	51 05       	cpc	r21, r1
 63c:	f1 f0       	breq	.+60     	; 0x67a <free+0x92>
 63e:	ea 01       	movw	r28, r20
 640:	f5 cf       	rjmp	.-22     	; 0x62c <free+0x44>
 642:	d3 83       	std	Z+3, r29	; 0x03
 644:	c2 83       	std	Z+2, r28	; 0x02
 646:	40 81       	ld	r20, Z
 648:	51 81       	ldd	r21, Z+1	; 0x01
 64a:	84 0f       	add	r24, r20
 64c:	95 1f       	adc	r25, r21
 64e:	c8 17       	cp	r28, r24
 650:	d9 07       	cpc	r29, r25
 652:	59 f4       	brne	.+22     	; 0x66a <free+0x82>
 654:	88 81       	ld	r24, Y
 656:	99 81       	ldd	r25, Y+1	; 0x01
 658:	84 0f       	add	r24, r20
 65a:	95 1f       	adc	r25, r21
 65c:	02 96       	adiw	r24, 0x02	; 2
 65e:	91 83       	std	Z+1, r25	; 0x01
 660:	80 83       	st	Z, r24
 662:	8a 81       	ldd	r24, Y+2	; 0x02
 664:	9b 81       	ldd	r25, Y+3	; 0x03
 666:	93 83       	std	Z+3, r25	; 0x03
 668:	82 83       	std	Z+2, r24	; 0x02
 66a:	21 15       	cp	r18, r1
 66c:	31 05       	cpc	r19, r1
 66e:	29 f4       	brne	.+10     	; 0x67a <free+0x92>
 670:	f0 93 11 04 	sts	0x0411, r31	; 0x800411 <__flp+0x1>
 674:	e0 93 10 04 	sts	0x0410, r30	; 0x800410 <__flp>
 678:	3d c0       	rjmp	.+122    	; 0x6f4 <free+0x10c>
 67a:	e9 01       	movw	r28, r18
 67c:	fb 83       	std	Y+3, r31	; 0x03
 67e:	ea 83       	std	Y+2, r30	; 0x02
 680:	49 91       	ld	r20, Y+
 682:	59 91       	ld	r21, Y+
 684:	c4 0f       	add	r28, r20
 686:	d5 1f       	adc	r29, r21
 688:	ec 17       	cp	r30, r28
 68a:	fd 07       	cpc	r31, r29
 68c:	61 f4       	brne	.+24     	; 0x6a6 <free+0xbe>
 68e:	80 81       	ld	r24, Z
 690:	91 81       	ldd	r25, Z+1	; 0x01
 692:	84 0f       	add	r24, r20
 694:	95 1f       	adc	r25, r21
 696:	02 96       	adiw	r24, 0x02	; 2
 698:	e9 01       	movw	r28, r18
 69a:	99 83       	std	Y+1, r25	; 0x01
 69c:	88 83       	st	Y, r24
 69e:	82 81       	ldd	r24, Z+2	; 0x02
 6a0:	93 81       	ldd	r25, Z+3	; 0x03
 6a2:	9b 83       	std	Y+3, r25	; 0x03
 6a4:	8a 83       	std	Y+2, r24	; 0x02
 6a6:	e0 e0       	ldi	r30, 0x00	; 0
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	12 96       	adiw	r26, 0x02	; 2
 6ac:	8d 91       	ld	r24, X+
 6ae:	9c 91       	ld	r25, X
 6b0:	13 97       	sbiw	r26, 0x03	; 3
 6b2:	00 97       	sbiw	r24, 0x00	; 0
 6b4:	19 f0       	breq	.+6      	; 0x6bc <free+0xd4>
 6b6:	fd 01       	movw	r30, r26
 6b8:	dc 01       	movw	r26, r24
 6ba:	f7 cf       	rjmp	.-18     	; 0x6aa <free+0xc2>
 6bc:	8d 91       	ld	r24, X+
 6be:	9c 91       	ld	r25, X
 6c0:	11 97       	sbiw	r26, 0x01	; 1
 6c2:	9d 01       	movw	r18, r26
 6c4:	2e 5f       	subi	r18, 0xFE	; 254
 6c6:	3f 4f       	sbci	r19, 0xFF	; 255
 6c8:	82 0f       	add	r24, r18
 6ca:	93 1f       	adc	r25, r19
 6cc:	20 91 0e 04 	lds	r18, 0x040E	; 0x80040e <__brkval>
 6d0:	30 91 0f 04 	lds	r19, 0x040F	; 0x80040f <__brkval+0x1>
 6d4:	28 17       	cp	r18, r24
 6d6:	39 07       	cpc	r19, r25
 6d8:	69 f4       	brne	.+26     	; 0x6f4 <free+0x10c>
 6da:	30 97       	sbiw	r30, 0x00	; 0
 6dc:	29 f4       	brne	.+10     	; 0x6e8 <free+0x100>
 6de:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <__flp+0x1>
 6e2:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <__flp>
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <free+0x104>
 6e8:	13 82       	std	Z+3, r1	; 0x03
 6ea:	12 82       	std	Z+2, r1	; 0x02
 6ec:	b0 93 0f 04 	sts	0x040F, r27	; 0x80040f <__brkval+0x1>
 6f0:	a0 93 0e 04 	sts	0x040E, r26	; 0x80040e <__brkval>
 6f4:	df 91       	pop	r29
 6f6:	cf 91       	pop	r28
 6f8:	08 95       	ret

000006fa <memset>:
 6fa:	dc 01       	movw	r26, r24
 6fc:	01 c0       	rjmp	.+2      	; 0x700 <memset+0x6>
 6fe:	6d 93       	st	X+, r22
 700:	41 50       	subi	r20, 0x01	; 1
 702:	50 40       	sbci	r21, 0x00	; 0
 704:	e0 f7       	brcc	.-8      	; 0x6fe <memset+0x4>
 706:	08 95       	ret

00000708 <_exit>:
 708:	f8 94       	cli

0000070a <__stop_program>:
 70a:	ff cf       	rjmp	.-2      	; 0x70a <__stop_program>
