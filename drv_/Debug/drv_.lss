
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800200  00001274  00001308  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001274  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  00800258  00800258  00001360  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  000013fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a59  00000000  00000000  000014fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fef  00000000  00000000  00002f55  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b92  00000000  00000000  00003f44  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a8  00000000  00000000  00004ad8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000843  00000000  00000000  00004d80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b24  00000000  00000000  000055c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000060e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e4 e7       	ldi	r30, 0x74	; 116
      fc:	f2 e1       	ldi	r31, 0x12	; 18
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 35       	cpi	r26, 0x58	; 88
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a8 e5       	ldi	r26, 0x58	; 88
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 37       	cpi	r26, 0x72	; 114
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	19 d2       	rcall	.+1074   	; 0x552 <main>
     120:	0c 94 38 09 	jmp	0x1270	; 0x1270 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <uart_putchar>:
#define caliberation_wait_delay 0//in ms

FILE * uart_str;
static int uart_putchar(char c, FILE *stream);
static int uart_putchar(char c, FILE *stream)
{
     126:	cf 93       	push	r28
     128:	c8 2f       	mov	r28, r24

	if (c == '\n')
     12a:	8a 30       	cpi	r24, 0x0A	; 10
     12c:	11 f4       	brne	.+4      	; 0x132 <uart_putchar+0xc>
	uart_putchar('\r', stream);
     12e:	8d e0       	ldi	r24, 0x0D	; 13
     130:	fa df       	rcall	.-12     	; 0x126 <uart_putchar>
	while ( !( UCSR0A & (1<<UDRE0)) )
     132:	e0 ec       	ldi	r30, 0xC0	; 192
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	85 ff       	sbrs	r24, 5
     13a:	fd cf       	rjmp	.-6      	; 0x136 <uart_putchar+0x10>
	;
	/* Put data into buffer, sends the data */
	UDR0 = c;
     13c:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	return 0;
}
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	cf 91       	pop	r28
     146:	08 95       	ret

00000148 <mpu6050_rb>:
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_H);
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_L);
	return axis_value;
}
uint8_t mpu6050_rb(uint8_t byteToRead)
{
     148:	cf 93       	push	r28
     14a:	c8 2f       	mov	r28, r24
	i2c_start(MPU6050_WRITE);
     14c:	80 ed       	ldi	r24, 0xD0	; 208
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	da d2       	rcall	.+1460   	; 0x706 <i2c_start>
	i2c_write(byteToRead);
     152:	8c 2f       	mov	r24, r28
     154:	90 e0       	ldi	r25, 0x00	; 0
	i2c_stop();
	
	i2c_start(MPU6050_READ);
     156:	2d d3       	rcall	.+1626   	; 0x7b2 <i2c_write>
     158:	1c d3       	rcall	.+1592   	; 0x792 <i2c_stop>
	uint8_t byteToReturn=i2c_readNak();
     15a:	81 ed       	ldi	r24, 0xD1	; 209
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	d3 d2       	rcall	.+1446   	; 0x706 <i2c_start>
	i2c_stop();
     160:	49 d3       	rcall	.+1682   	; 0x7f4 <i2c_readNak>
     162:	c8 2f       	mov	r28, r24
	return byteToReturn;
}
     164:	16 d3       	rcall	.+1580   	; 0x792 <i2c_stop>
     166:	8c 2f       	mov	r24, r28
     168:	cf 91       	pop	r28
     16a:	08 95       	ret

0000016c <mpu6050_read_gyroX>:
	_delay_ms(1000);
	//-----------------------------------
	*/
}
uint16_t mpu6050_read_gyroX()//axis x=0,y=1,z=2
{
     16c:	cf 93       	push	r28
     16e:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_XOUT_H);
     170:	83 e4       	ldi	r24, 0x43	; 67
     172:	ea df       	rcall	.-44     	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_XOUT_L);
     174:	c8 2f       	mov	r28, r24
     176:	d0 e0       	ldi	r29, 0x00	; 0
     178:	dc 2f       	mov	r29, r28
     17a:	cc 27       	eor	r28, r28
     17c:	84 e4       	ldi	r24, 0x44	; 68
     17e:	e4 df       	rcall	.-56     	; 0x148 <mpu6050_rb>
	return axis_value;
}
     180:	9e 01       	movw	r18, r28
     182:	28 2b       	or	r18, r24
     184:	c9 01       	movw	r24, r18
     186:	df 91       	pop	r29
     188:	cf 91       	pop	r28
     18a:	08 95       	ret

0000018c <mpu6050_read_gyroY>:
uint16_t mpu6050_read_gyroY()//axis x=0,y=1,z=2
{
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_YOUT_H);
     190:	85 e4       	ldi	r24, 0x45	; 69
     192:	da df       	rcall	.-76     	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_YOUT_L);
     194:	c8 2f       	mov	r28, r24
     196:	d0 e0       	ldi	r29, 0x00	; 0
     198:	dc 2f       	mov	r29, r28
     19a:	cc 27       	eor	r28, r28
     19c:	86 e4       	ldi	r24, 0x46	; 70
     19e:	d4 df       	rcall	.-88     	; 0x148 <mpu6050_rb>
	return axis_value;
}
     1a0:	9e 01       	movw	r18, r28
     1a2:	28 2b       	or	r18, r24
     1a4:	c9 01       	movw	r24, r18
     1a6:	df 91       	pop	r29
     1a8:	cf 91       	pop	r28
     1aa:	08 95       	ret

000001ac <mpu6050_read_gyroZ>:
uint16_t mpu6050_read_gyroZ()//axis x=0,y=1,z=2
{
     1ac:	cf 93       	push	r28
     1ae:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_ZOUT_H);
     1b0:	87 e4       	ldi	r24, 0x47	; 71
     1b2:	ca df       	rcall	.-108    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_ZOUT_L);
     1b4:	c8 2f       	mov	r28, r24
     1b6:	d0 e0       	ldi	r29, 0x00	; 0
     1b8:	dc 2f       	mov	r29, r28
     1ba:	cc 27       	eor	r28, r28
     1bc:	88 e4       	ldi	r24, 0x48	; 72
     1be:	c4 df       	rcall	.-120    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     1c0:	9e 01       	movw	r18, r28
     1c2:	28 2b       	or	r18, r24
     1c4:	c9 01       	movw	r24, r18
     1c6:	df 91       	pop	r29
     1c8:	cf 91       	pop	r28
     1ca:	08 95       	ret

000001cc <mpu6050_calibrate_gyro>:
	}
	return 0;
}

void mpu6050_calibrate_gyro(int32_t *x,int32_t *y, int32_t *z)
{
     1cc:	cf 92       	push	r12
     1ce:	df 92       	push	r13
     1d0:	ef 92       	push	r14
     1d2:	ff 92       	push	r15
     1d4:	0f 93       	push	r16
     1d6:	1f 93       	push	r17
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	6c 01       	movw	r12, r24
     1de:	7b 01       	movw	r14, r22
     1e0:	8a 01       	movw	r16, r20
	printf("Calibrating Gyro...\n");
     1e2:	86 e0       	ldi	r24, 0x06	; 6
     1e4:	92 e0       	ldi	r25, 0x02	; 2
     1e6:	15 d4       	rcall	.+2090   	; 0xa12 <puts>
     1e8:	c0 ed       	ldi	r28, 0xD0	; 208
	for (int i=0;i<calibration_counter;i++)
	{
		(*x)+=mpu6050_read_gyroX();
     1ea:	d7 e0       	ldi	r29, 0x07	; 7
     1ec:	bf df       	rcall	.-130    	; 0x16c <mpu6050_read_gyroX>
     1ee:	f6 01       	movw	r30, r12
     1f0:	40 81       	ld	r20, Z
     1f2:	51 81       	ldd	r21, Z+1	; 0x01
     1f4:	62 81       	ldd	r22, Z+2	; 0x02
     1f6:	73 81       	ldd	r23, Z+3	; 0x03
     1f8:	48 0f       	add	r20, r24
     1fa:	59 1f       	adc	r21, r25
     1fc:	61 1d       	adc	r22, r1
     1fe:	71 1d       	adc	r23, r1
     200:	40 83       	st	Z, r20
     202:	51 83       	std	Z+1, r21	; 0x01
     204:	62 83       	std	Z+2, r22	; 0x02
		(*y)+=mpu6050_read_gyroY();
     206:	73 83       	std	Z+3, r23	; 0x03
     208:	c1 df       	rcall	.-126    	; 0x18c <mpu6050_read_gyroY>
     20a:	f7 01       	movw	r30, r14
     20c:	40 81       	ld	r20, Z
     20e:	51 81       	ldd	r21, Z+1	; 0x01
     210:	62 81       	ldd	r22, Z+2	; 0x02
     212:	73 81       	ldd	r23, Z+3	; 0x03
     214:	48 0f       	add	r20, r24
     216:	59 1f       	adc	r21, r25
     218:	61 1d       	adc	r22, r1
     21a:	71 1d       	adc	r23, r1
     21c:	40 83       	st	Z, r20
     21e:	51 83       	std	Z+1, r21	; 0x01
     220:	62 83       	std	Z+2, r22	; 0x02
		(*z)+=mpu6050_read_gyroZ();
     222:	73 83       	std	Z+3, r23	; 0x03
     224:	c3 df       	rcall	.-122    	; 0x1ac <mpu6050_read_gyroZ>
     226:	f8 01       	movw	r30, r16
     228:	40 81       	ld	r20, Z
     22a:	51 81       	ldd	r21, Z+1	; 0x01
     22c:	62 81       	ldd	r22, Z+2	; 0x02
     22e:	73 81       	ldd	r23, Z+3	; 0x03
     230:	48 0f       	add	r20, r24
     232:	59 1f       	adc	r21, r25
     234:	61 1d       	adc	r22, r1
     236:	71 1d       	adc	r23, r1
     238:	40 83       	st	Z, r20
     23a:	51 83       	std	Z+1, r21	; 0x01
     23c:	62 83       	std	Z+2, r22	; 0x02
     23e:	73 83       	std	Z+3, r23	; 0x03
     240:	21 97       	sbiw	r28, 0x01	; 1
}

void mpu6050_calibrate_gyro(int32_t *x,int32_t *y, int32_t *z)
{
	printf("Calibrating Gyro...\n");
	for (int i=0;i<calibration_counter;i++)
     242:	a1 f6       	brne	.-88     	; 0x1ec <mpu6050_calibrate_gyro+0x20>
		(*x)+=mpu6050_read_gyroX();
		(*y)+=mpu6050_read_gyroY();
		(*z)+=mpu6050_read_gyroZ();
		_delay_ms(caliberation_wait_delay);
	}
		if(*x<0)
     244:	f6 01       	movw	r30, r12
     246:	60 81       	ld	r22, Z
     248:	71 81       	ldd	r23, Z+1	; 0x01
     24a:	82 81       	ldd	r24, Z+2	; 0x02
     24c:	93 81       	ldd	r25, Z+3	; 0x03
     24e:	99 23       	and	r25, r25
     250:	ac f4       	brge	.+42     	; 0x27c <mpu6050_calibrate_gyro+0xb0>
		(*x)=abs(*x)/calibration_counter;
     252:	9b 01       	movw	r18, r22
     254:	77 23       	and	r23, r23
     256:	24 f4       	brge	.+8      	; 0x260 <mpu6050_calibrate_gyro+0x94>
     258:	22 27       	eor	r18, r18
     25a:	33 27       	eor	r19, r19
     25c:	26 1b       	sub	r18, r22
     25e:	37 0b       	sbc	r19, r23
     260:	c9 01       	movw	r24, r18
     262:	60 ed       	ldi	r22, 0xD0	; 208
     264:	77 e0       	ldi	r23, 0x07	; 7
     266:	eb d2       	rcall	.+1494   	; 0x83e <__divmodhi4>
     268:	cb 01       	movw	r24, r22
     26a:	77 0f       	add	r23, r23
     26c:	aa 0b       	sbc	r26, r26
     26e:	bb 0b       	sbc	r27, r27
     270:	f6 01       	movw	r30, r12
     272:	80 83       	st	Z, r24
     274:	91 83       	std	Z+1, r25	; 0x01
     276:	a2 83       	std	Z+2, r26	; 0x02
     278:	b3 83       	std	Z+3, r27	; 0x03
		else
		(*x)=(*x)/calibration_counter;
     27a:	0a c0       	rjmp	.+20     	; 0x290 <mpu6050_calibrate_gyro+0xc4>
     27c:	20 ed       	ldi	r18, 0xD0	; 208
     27e:	37 e0       	ldi	r19, 0x07	; 7
     280:	40 e0       	ldi	r20, 0x00	; 0
     282:	50 e0       	ldi	r21, 0x00	; 0
     284:	ef d2       	rcall	.+1502   	; 0x864 <__divmodsi4>
     286:	f6 01       	movw	r30, r12
     288:	20 83       	st	Z, r18
     28a:	31 83       	std	Z+1, r19	; 0x01
     28c:	42 83       	std	Z+2, r20	; 0x02
     28e:	53 83       	std	Z+3, r21	; 0x03
		
		if(*y<0)
     290:	f7 01       	movw	r30, r14
     292:	60 81       	ld	r22, Z
     294:	71 81       	ldd	r23, Z+1	; 0x01
     296:	82 81       	ldd	r24, Z+2	; 0x02
     298:	93 81       	ldd	r25, Z+3	; 0x03
     29a:	99 23       	and	r25, r25
     29c:	ac f4       	brge	.+42     	; 0x2c8 <mpu6050_calibrate_gyro+0xfc>
		(*y)=abs(*y)/calibration_counter;
     29e:	9b 01       	movw	r18, r22
     2a0:	77 23       	and	r23, r23
     2a2:	24 f4       	brge	.+8      	; 0x2ac <mpu6050_calibrate_gyro+0xe0>
     2a4:	22 27       	eor	r18, r18
     2a6:	33 27       	eor	r19, r19
     2a8:	26 1b       	sub	r18, r22
     2aa:	37 0b       	sbc	r19, r23
     2ac:	c9 01       	movw	r24, r18
     2ae:	60 ed       	ldi	r22, 0xD0	; 208
     2b0:	77 e0       	ldi	r23, 0x07	; 7
     2b2:	c5 d2       	rcall	.+1418   	; 0x83e <__divmodhi4>
     2b4:	cb 01       	movw	r24, r22
     2b6:	77 0f       	add	r23, r23
     2b8:	aa 0b       	sbc	r26, r26
     2ba:	bb 0b       	sbc	r27, r27
     2bc:	f7 01       	movw	r30, r14
     2be:	80 83       	st	Z, r24
     2c0:	91 83       	std	Z+1, r25	; 0x01
     2c2:	a2 83       	std	Z+2, r26	; 0x02
     2c4:	b3 83       	std	Z+3, r27	; 0x03
		else
		(*y)=(*y)/calibration_counter;
     2c6:	0a c0       	rjmp	.+20     	; 0x2dc <mpu6050_calibrate_gyro+0x110>
     2c8:	20 ed       	ldi	r18, 0xD0	; 208
     2ca:	37 e0       	ldi	r19, 0x07	; 7
     2cc:	40 e0       	ldi	r20, 0x00	; 0
     2ce:	50 e0       	ldi	r21, 0x00	; 0
     2d0:	c9 d2       	rcall	.+1426   	; 0x864 <__divmodsi4>
     2d2:	f7 01       	movw	r30, r14
     2d4:	20 83       	st	Z, r18
     2d6:	31 83       	std	Z+1, r19	; 0x01
     2d8:	42 83       	std	Z+2, r20	; 0x02
     2da:	53 83       	std	Z+3, r21	; 0x03
		
		if(*z<0)
     2dc:	f8 01       	movw	r30, r16
     2de:	60 81       	ld	r22, Z
     2e0:	71 81       	ldd	r23, Z+1	; 0x01
     2e2:	82 81       	ldd	r24, Z+2	; 0x02
     2e4:	93 81       	ldd	r25, Z+3	; 0x03
     2e6:	99 23       	and	r25, r25
     2e8:	ac f4       	brge	.+42     	; 0x314 <mpu6050_calibrate_gyro+0x148>
		(*z)=abs(*z)/calibration_counter;
     2ea:	9b 01       	movw	r18, r22
     2ec:	77 23       	and	r23, r23
     2ee:	24 f4       	brge	.+8      	; 0x2f8 <mpu6050_calibrate_gyro+0x12c>
     2f0:	22 27       	eor	r18, r18
     2f2:	33 27       	eor	r19, r19
     2f4:	26 1b       	sub	r18, r22
     2f6:	37 0b       	sbc	r19, r23
     2f8:	c9 01       	movw	r24, r18
     2fa:	60 ed       	ldi	r22, 0xD0	; 208
     2fc:	77 e0       	ldi	r23, 0x07	; 7
     2fe:	9f d2       	rcall	.+1342   	; 0x83e <__divmodhi4>
     300:	cb 01       	movw	r24, r22
     302:	77 0f       	add	r23, r23
     304:	aa 0b       	sbc	r26, r26
     306:	bb 0b       	sbc	r27, r27
     308:	f8 01       	movw	r30, r16
     30a:	80 83       	st	Z, r24
     30c:	91 83       	std	Z+1, r25	; 0x01
     30e:	a2 83       	std	Z+2, r26	; 0x02
     310:	b3 83       	std	Z+3, r27	; 0x03
		else
		(*z)=(*z)/calibration_counter;
     312:	0a c0       	rjmp	.+20     	; 0x328 <mpu6050_calibrate_gyro+0x15c>
     314:	20 ed       	ldi	r18, 0xD0	; 208
     316:	37 e0       	ldi	r19, 0x07	; 7
     318:	40 e0       	ldi	r20, 0x00	; 0
     31a:	50 e0       	ldi	r21, 0x00	; 0
     31c:	a3 d2       	rcall	.+1350   	; 0x864 <__divmodsi4>
     31e:	f8 01       	movw	r30, r16
     320:	20 83       	st	Z, r18
     322:	31 83       	std	Z+1, r19	; 0x01
     324:	42 83       	std	Z+2, r20	; 0x02
     326:	53 83       	std	Z+3, r21	; 0x03
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/			
}
     328:	df 91       	pop	r29
     32a:	cf 91       	pop	r28
     32c:	1f 91       	pop	r17
     32e:	0f 91       	pop	r16
     330:	ff 90       	pop	r15
     332:	ef 90       	pop	r14
     334:	df 90       	pop	r13
     336:	cf 90       	pop	r12
     338:	08 95       	ret

0000033a <mpu6050_read_accelX>:
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_ZOUT_H);
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_ZOUT_L);
	return axis_value;
}
uint16_t mpu6050_read_accelX()
{
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_XOUT_H);
     33e:	8b e3       	ldi	r24, 0x3B	; 59
     340:	03 df       	rcall	.-506    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_XOUT_L);
     342:	c8 2f       	mov	r28, r24
     344:	d0 e0       	ldi	r29, 0x00	; 0
     346:	dc 2f       	mov	r29, r28
     348:	cc 27       	eor	r28, r28
     34a:	8c e3       	ldi	r24, 0x3C	; 60
     34c:	fd de       	rcall	.-518    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     34e:	9e 01       	movw	r18, r28
     350:	28 2b       	or	r18, r24
     352:	c9 01       	movw	r24, r18
     354:	df 91       	pop	r29
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <mpu6050_read_accelY>:
uint16_t mpu6050_read_accelY()
{
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_YOUT_H);
     35e:	8d e3       	ldi	r24, 0x3D	; 61
     360:	f3 de       	rcall	.-538    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_YOUT_L);
     362:	c8 2f       	mov	r28, r24
     364:	d0 e0       	ldi	r29, 0x00	; 0
     366:	dc 2f       	mov	r29, r28
     368:	cc 27       	eor	r28, r28
     36a:	8e e3       	ldi	r24, 0x3E	; 62
     36c:	ed de       	rcall	.-550    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     36e:	9e 01       	movw	r18, r28
     370:	28 2b       	or	r18, r24
     372:	c9 01       	movw	r24, r18
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	08 95       	ret

0000037a <mpu6050_read_accelZ>:
uint16_t mpu6050_read_accelZ()
{
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_H);
     37e:	8f e3       	ldi	r24, 0x3F	; 63
     380:	e3 de       	rcall	.-570    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_L);
     382:	c8 2f       	mov	r28, r24
     384:	d0 e0       	ldi	r29, 0x00	; 0
     386:	dc 2f       	mov	r29, r28
     388:	cc 27       	eor	r28, r28
     38a:	80 e4       	ldi	r24, 0x40	; 64
     38c:	dd de       	rcall	.-582    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     38e:	9e 01       	movw	r18, r28
     390:	28 2b       	or	r18, r24
     392:	c9 01       	movw	r24, r18
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	08 95       	ret

0000039a <mpu6050_calibrate_accel>:
	_delay_ms(1000);
	//-----------------------------------
	*/			
}
void mpu6050_calibrate_accel(int32_t *x,int32_t *y, int32_t *z)
{
     39a:	cf 92       	push	r12
     39c:	df 92       	push	r13
     39e:	ef 92       	push	r14
     3a0:	ff 92       	push	r15
     3a2:	0f 93       	push	r16
     3a4:	1f 93       	push	r17
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	6c 01       	movw	r12, r24
     3ac:	7b 01       	movw	r14, r22
     3ae:	8a 01       	movw	r16, r20
	
	printf("Calibrating Accelerometer...\n");
     3b0:	8a e1       	ldi	r24, 0x1A	; 26
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	2e d3       	rcall	.+1628   	; 0xa12 <puts>
     3b6:	c0 ed       	ldi	r28, 0xD0	; 208
	for(int i=0;i<calibration_counter;i++){
		(*x)+=mpu6050_read_accelX();
     3b8:	d7 e0       	ldi	r29, 0x07	; 7
     3ba:	bf df       	rcall	.-130    	; 0x33a <mpu6050_read_accelX>
     3bc:	f6 01       	movw	r30, r12
     3be:	40 81       	ld	r20, Z
     3c0:	51 81       	ldd	r21, Z+1	; 0x01
     3c2:	62 81       	ldd	r22, Z+2	; 0x02
     3c4:	73 81       	ldd	r23, Z+3	; 0x03
     3c6:	48 0f       	add	r20, r24
     3c8:	59 1f       	adc	r21, r25
     3ca:	61 1d       	adc	r22, r1
     3cc:	71 1d       	adc	r23, r1
     3ce:	40 83       	st	Z, r20
     3d0:	51 83       	std	Z+1, r21	; 0x01
     3d2:	62 83       	std	Z+2, r22	; 0x02
		(*y)+=mpu6050_read_accelY();
     3d4:	73 83       	std	Z+3, r23	; 0x03
     3d6:	c1 df       	rcall	.-126    	; 0x35a <mpu6050_read_accelY>
     3d8:	f7 01       	movw	r30, r14
     3da:	40 81       	ld	r20, Z
     3dc:	51 81       	ldd	r21, Z+1	; 0x01
     3de:	62 81       	ldd	r22, Z+2	; 0x02
     3e0:	73 81       	ldd	r23, Z+3	; 0x03
     3e2:	48 0f       	add	r20, r24
     3e4:	59 1f       	adc	r21, r25
     3e6:	61 1d       	adc	r22, r1
     3e8:	71 1d       	adc	r23, r1
     3ea:	40 83       	st	Z, r20
     3ec:	51 83       	std	Z+1, r21	; 0x01
     3ee:	62 83       	std	Z+2, r22	; 0x02
		(*z)+=mpu6050_read_accelZ();
     3f0:	73 83       	std	Z+3, r23	; 0x03
     3f2:	c3 df       	rcall	.-122    	; 0x37a <mpu6050_read_accelZ>
     3f4:	f8 01       	movw	r30, r16
     3f6:	40 81       	ld	r20, Z
     3f8:	51 81       	ldd	r21, Z+1	; 0x01
     3fa:	62 81       	ldd	r22, Z+2	; 0x02
     3fc:	73 81       	ldd	r23, Z+3	; 0x03
     3fe:	48 0f       	add	r20, r24
     400:	59 1f       	adc	r21, r25
     402:	61 1d       	adc	r22, r1
     404:	71 1d       	adc	r23, r1
     406:	40 83       	st	Z, r20
     408:	51 83       	std	Z+1, r21	; 0x01
     40a:	62 83       	std	Z+2, r22	; 0x02
     40c:	73 83       	std	Z+3, r23	; 0x03
     40e:	21 97       	sbiw	r28, 0x01	; 1
}
void mpu6050_calibrate_accel(int32_t *x,int32_t *y, int32_t *z)
{
	
	printf("Calibrating Accelerometer...\n");
	for(int i=0;i<calibration_counter;i++){
     410:	a1 f6       	brne	.-88     	; 0x3ba <mpu6050_calibrate_accel+0x20>
		(*x)+=mpu6050_read_accelX();
		(*y)+=mpu6050_read_accelY();
		(*z)+=mpu6050_read_accelZ();
		_delay_ms(caliberation_wait_delay);
	}
	if(*x<0)
     412:	f6 01       	movw	r30, r12
     414:	60 81       	ld	r22, Z
     416:	71 81       	ldd	r23, Z+1	; 0x01
     418:	82 81       	ldd	r24, Z+2	; 0x02
     41a:	93 81       	ldd	r25, Z+3	; 0x03
     41c:	99 23       	and	r25, r25
     41e:	ac f4       	brge	.+42     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
	(*x)=abs(*x)/calibration_counter;
     420:	9b 01       	movw	r18, r22
     422:	77 23       	and	r23, r23
     424:	24 f4       	brge	.+8      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     426:	22 27       	eor	r18, r18
     428:	33 27       	eor	r19, r19
     42a:	26 1b       	sub	r18, r22
     42c:	37 0b       	sbc	r19, r23
     42e:	c9 01       	movw	r24, r18
     430:	60 ed       	ldi	r22, 0xD0	; 208
     432:	77 e0       	ldi	r23, 0x07	; 7
     434:	04 d2       	rcall	.+1032   	; 0x83e <__divmodhi4>
     436:	cb 01       	movw	r24, r22
     438:	77 0f       	add	r23, r23
     43a:	aa 0b       	sbc	r26, r26
     43c:	bb 0b       	sbc	r27, r27
     43e:	f6 01       	movw	r30, r12
     440:	80 83       	st	Z, r24
     442:	91 83       	std	Z+1, r25	; 0x01
     444:	a2 83       	std	Z+2, r26	; 0x02
     446:	b3 83       	std	Z+3, r27	; 0x03
	else
	(*x)=(*x)/calibration_counter;
     448:	0a c0       	rjmp	.+20     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     44a:	20 ed       	ldi	r18, 0xD0	; 208
     44c:	37 e0       	ldi	r19, 0x07	; 7
     44e:	40 e0       	ldi	r20, 0x00	; 0
     450:	50 e0       	ldi	r21, 0x00	; 0
     452:	08 d2       	rcall	.+1040   	; 0x864 <__divmodsi4>
     454:	f6 01       	movw	r30, r12
     456:	20 83       	st	Z, r18
     458:	31 83       	std	Z+1, r19	; 0x01
     45a:	42 83       	std	Z+2, r20	; 0x02
     45c:	53 83       	std	Z+3, r21	; 0x03
	
	if(*y<0)
     45e:	f7 01       	movw	r30, r14
     460:	60 81       	ld	r22, Z
     462:	71 81       	ldd	r23, Z+1	; 0x01
     464:	82 81       	ldd	r24, Z+2	; 0x02
     466:	93 81       	ldd	r25, Z+3	; 0x03
     468:	99 23       	and	r25, r25
     46a:	ac f4       	brge	.+42     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
	(*y)=abs(*y)/calibration_counter;
     46c:	9b 01       	movw	r18, r22
     46e:	77 23       	and	r23, r23
     470:	24 f4       	brge	.+8      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     472:	22 27       	eor	r18, r18
     474:	33 27       	eor	r19, r19
     476:	26 1b       	sub	r18, r22
     478:	37 0b       	sbc	r19, r23
     47a:	c9 01       	movw	r24, r18
     47c:	60 ed       	ldi	r22, 0xD0	; 208
     47e:	77 e0       	ldi	r23, 0x07	; 7
     480:	de d1       	rcall	.+956    	; 0x83e <__divmodhi4>
     482:	cb 01       	movw	r24, r22
     484:	77 0f       	add	r23, r23
     486:	aa 0b       	sbc	r26, r26
     488:	bb 0b       	sbc	r27, r27
     48a:	f7 01       	movw	r30, r14
     48c:	80 83       	st	Z, r24
     48e:	91 83       	std	Z+1, r25	; 0x01
     490:	a2 83       	std	Z+2, r26	; 0x02
     492:	b3 83       	std	Z+3, r27	; 0x03
	else
	(*y)=(*y)/calibration_counter;
     494:	0a c0       	rjmp	.+20     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     496:	20 ed       	ldi	r18, 0xD0	; 208
     498:	37 e0       	ldi	r19, 0x07	; 7
     49a:	40 e0       	ldi	r20, 0x00	; 0
     49c:	50 e0       	ldi	r21, 0x00	; 0
     49e:	e2 d1       	rcall	.+964    	; 0x864 <__divmodsi4>
     4a0:	f7 01       	movw	r30, r14
     4a2:	20 83       	st	Z, r18
     4a4:	31 83       	std	Z+1, r19	; 0x01
     4a6:	42 83       	std	Z+2, r20	; 0x02
     4a8:	53 83       	std	Z+3, r21	; 0x03
	
	if(*z<0)
     4aa:	f8 01       	movw	r30, r16
     4ac:	60 81       	ld	r22, Z
     4ae:	71 81       	ldd	r23, Z+1	; 0x01
     4b0:	82 81       	ldd	r24, Z+2	; 0x02
     4b2:	93 81       	ldd	r25, Z+3	; 0x03
     4b4:	99 23       	and	r25, r25
     4b6:	ac f4       	brge	.+42     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
	(*z)=abs(*z)/calibration_counter;
     4b8:	9b 01       	movw	r18, r22
     4ba:	77 23       	and	r23, r23
     4bc:	24 f4       	brge	.+8      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
     4be:	22 27       	eor	r18, r18
     4c0:	33 27       	eor	r19, r19
     4c2:	26 1b       	sub	r18, r22
     4c4:	37 0b       	sbc	r19, r23
     4c6:	c9 01       	movw	r24, r18
     4c8:	60 ed       	ldi	r22, 0xD0	; 208
     4ca:	77 e0       	ldi	r23, 0x07	; 7
     4cc:	b8 d1       	rcall	.+880    	; 0x83e <__divmodhi4>
     4ce:	cb 01       	movw	r24, r22
     4d0:	77 0f       	add	r23, r23
     4d2:	aa 0b       	sbc	r26, r26
     4d4:	bb 0b       	sbc	r27, r27
     4d6:	f8 01       	movw	r30, r16
     4d8:	80 83       	st	Z, r24
     4da:	91 83       	std	Z+1, r25	; 0x01
     4dc:	a2 83       	std	Z+2, r26	; 0x02
     4de:	b3 83       	std	Z+3, r27	; 0x03
	else
	(*z)=(*z)/calibration_counter;
     4e0:	0a c0       	rjmp	.+20     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
     4e2:	20 ed       	ldi	r18, 0xD0	; 208
     4e4:	37 e0       	ldi	r19, 0x07	; 7
     4e6:	40 e0       	ldi	r20, 0x00	; 0
     4e8:	50 e0       	ldi	r21, 0x00	; 0
     4ea:	bc d1       	rcall	.+888    	; 0x864 <__divmodsi4>
     4ec:	f8 01       	movw	r30, r16
     4ee:	20 83       	st	Z, r18
     4f0:	31 83       	std	Z+1, r19	; 0x01
     4f2:	42 83       	std	Z+2, r20	; 0x02
     4f4:	53 83       	std	Z+3, r21	; 0x03
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     4f6:	df 91       	pop	r29
     4f8:	cf 91       	pop	r28
     4fa:	1f 91       	pop	r17
     4fc:	0f 91       	pop	r16
     4fe:	ff 90       	pop	r15
     500:	ef 90       	pop	r14
     502:	df 90       	pop	r13
     504:	cf 90       	pop	r12
     506:	08 95       	ret

00000508 <print16>:
//}

void print16(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     508:	0f 93       	push	r16
     50a:	1f 93       	push	r17
     50c:	cf 93       	push	r28
     50e:	df 93       	push	r29
     510:	cd b7       	in	r28, 0x3d	; 61
     512:	de b7       	in	r29, 0x3e	; 62
     514:	2a 97       	sbiw	r28, 0x0a	; 10
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	f8 94       	cli
     51a:	de bf       	out	0x3e, r29	; 62
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     520:	4a e0       	ldi	r20, 0x0A	; 10
     522:	8e 01       	movw	r16, r28
     524:	0f 5f       	subi	r16, 0xFF	; 255
     526:	1f 4f       	sbci	r17, 0xFF	; 255
     528:	b8 01       	movw	r22, r16
     52a:	fc 01       	movw	r30, r24
     52c:	80 81       	ld	r24, Z
     52e:	91 81       	ldd	r25, Z+1	; 0x01
     530:	eb d1       	rcall	.+982    	; 0x908 <__itoa_ncheck>
	//uint8_t seccond_=(uint8_t)((*value-first_*1000)/100);
	//uint8_t third_=(uint8_t)((*value-first_*1000-seccond_*100)/10);
	//uint8_t fourth_=*value-first_*1000-seccond_*100-third_*10;
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     532:	1f 93       	push	r17
     534:	0f 93       	push	r16
     536:	55 d2       	rcall	.+1194   	; 0x9e2 <printf>
	//printf("\n");
}
     538:	0f 90       	pop	r0
     53a:	0f 90       	pop	r0
     53c:	2a 96       	adiw	r28, 0x0a	; 10
     53e:	0f b6       	in	r0, 0x3f	; 63
     540:	f8 94       	cli
     542:	de bf       	out	0x3e, r29	; 62
     544:	0f be       	out	0x3f, r0	; 63
     546:	cd bf       	out	0x3d, r28	; 61
     548:	df 91       	pop	r29
     54a:	cf 91       	pop	r28
     54c:	1f 91       	pop	r17
     54e:	0f 91       	pop	r16
     550:	08 95       	ret

00000552 <main>:



int main(void)

{	
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	cd b7       	in	r28, 0x3d	; 61
     558:	de b7       	in	r29, 0x3e	; 62
     55a:	6a 97       	sbiw	r28, 0x1a	; 26
     55c:	0f b6       	in	r0, 0x3f	; 63
     55e:	f8 94       	cli
     560:	de bf       	out	0x3e, r29	; 62
     562:	0f be       	out	0x3f, r0	; 63
     564:	cd bf       	out	0x3d, r28	; 61

	USART_Init(MY_UBRR);
     566:	80 e1       	ldi	r24, 0x10	; 16
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	5e d1       	rcall	.+700    	; 0x828 <USART_Init>
	//uart_init(UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU));
	uart_str = fdevopen(uart_putchar, NULL);
     56c:	60 e0       	ldi	r22, 0x00	; 0
     56e:	70 e0       	ldi	r23, 0x00	; 0
     570:	83 e9       	ldi	r24, 0x93	; 147
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	ec d1       	rcall	.+984    	; 0x94e <fdevopen>
     576:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <__data_end+0x1>
     57a:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <__data_end>
	//Enable_timer0_compare_interrupt();
	//init_gpio();
	sei();
	//sbi(ADCSRA,ADSC);

	i2c_init();
     57e:	78 94       	sei
     580:	bc d0       	rcall	.+376    	; 0x6fa <i2c_init>
	int32_t gyroX_calib=0;
     582:	19 82       	std	Y+1, r1	; 0x01
     584:	1a 82       	std	Y+2, r1	; 0x02
     586:	1b 82       	std	Y+3, r1	; 0x03
     588:	1c 82       	std	Y+4, r1	; 0x04
	int32_t gyroY_calib=0;
     58a:	1d 82       	std	Y+5, r1	; 0x05
     58c:	1e 82       	std	Y+6, r1	; 0x06
     58e:	1f 82       	std	Y+7, r1	; 0x07
     590:	18 86       	std	Y+8, r1	; 0x08
	int32_t gyroZ_calib=0;
     592:	19 86       	std	Y+9, r1	; 0x09
     594:	1a 86       	std	Y+10, r1	; 0x0a
     596:	1b 86       	std	Y+11, r1	; 0x0b
     598:	1c 86       	std	Y+12, r1	; 0x0c
	int32_t accelX_calib=0;
     59a:	1d 86       	std	Y+13, r1	; 0x0d
     59c:	1e 86       	std	Y+14, r1	; 0x0e
     59e:	1f 86       	std	Y+15, r1	; 0x0f
     5a0:	18 8a       	std	Y+16, r1	; 0x10
	int32_t accelY_calib=0;
     5a2:	19 8a       	std	Y+17, r1	; 0x11
     5a4:	1a 8a       	std	Y+18, r1	; 0x12
     5a6:	1b 8a       	std	Y+19, r1	; 0x13
     5a8:	1c 8a       	std	Y+20, r1	; 0x14
	int32_t accelZ_calib=0;
     5aa:	1d 8a       	std	Y+21, r1	; 0x15
     5ac:	1e 8a       	std	Y+22, r1	; 0x16
     5ae:	1f 8a       	std	Y+23, r1	; 0x17
	printf("\n");
     5b0:	18 8e       	std	Y+24, r1	; 0x18
     5b2:	8a e0       	ldi	r24, 0x0A	; 10
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	28 d2       	rcall	.+1104   	; 0xa08 <putchar>
	mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
     5b8:	ae 01       	movw	r20, r28
     5ba:	47 5f       	subi	r20, 0xF7	; 247
     5bc:	5f 4f       	sbci	r21, 0xFF	; 255
     5be:	be 01       	movw	r22, r28
     5c0:	6b 5f       	subi	r22, 0xFB	; 251
     5c2:	7f 4f       	sbci	r23, 0xFF	; 255
     5c4:	ce 01       	movw	r24, r28
     5c6:	01 96       	adiw	r24, 0x01	; 1
     5c8:	01 de       	rcall	.-1022   	; 0x1cc <mpu6050_calibrate_gyro>
	mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
     5ca:	ae 01       	movw	r20, r28
     5cc:	4b 5e       	subi	r20, 0xEB	; 235
     5ce:	5f 4f       	sbci	r21, 0xFF	; 255
     5d0:	be 01       	movw	r22, r28
     5d2:	6f 5e       	subi	r22, 0xEF	; 239
     5d4:	7f 4f       	sbci	r23, 0xFF	; 255
     5d6:	ce 01       	movw	r24, r28
     5d8:	0d 96       	adiw	r24, 0x0d	; 13
     5da:	df de       	rcall	.-578    	; 0x39a <mpu6050_calibrate_accel>
    while (1) //hesa kgam
    {
		uint16_t var=grX;
		printf("x= ");
     5dc:	0f 2e       	mov	r0, r31
     5de:	f7 e3       	ldi	r31, 0x37	; 55
     5e0:	8f 2e       	mov	r8, r31
     5e2:	f2 e0       	ldi	r31, 0x02	; 2
     5e4:	9f 2e       	mov	r9, r31
     5e6:	f0 2d       	mov	r31, r0
		print16(&var);
		printf("  ");
     5e8:	0b e3       	ldi	r16, 0x3B	; 59
     5ea:	12 e0       	ldi	r17, 0x02	; 2
		var=grY;
		printf("y= ");
     5ec:	0f 2e       	mov	r0, r31
     5ee:	fe e3       	ldi	r31, 0x3E	; 62
     5f0:	af 2e       	mov	r10, r31
     5f2:	f2 e0       	ldi	r31, 0x02	; 2
     5f4:	bf 2e       	mov	r11, r31
     5f6:	f0 2d       	mov	r31, r0
		print16(&var);
		printf("  ");
		var=grZ;
		printf("Z= ");
     5f8:	0f 2e       	mov	r0, r31
     5fa:	f3 e5       	ldi	r31, 0x53	; 83
     5fc:	cf 2e       	mov	r12, r31
     5fe:	f2 e0       	ldi	r31, 0x02	; 2
     600:	df 2e       	mov	r13, r31
     602:	f0 2d       	mov	r31, r0
		print16(&var);
		printf("  ");
				
		var=accX;
		printf("accX= ");
     604:	0f 2e       	mov	r0, r31
     606:	f2 e4       	ldi	r31, 0x42	; 66
     608:	ef 2e       	mov	r14, r31
     60a:	f2 e0       	ldi	r31, 0x02	; 2
     60c:	ff 2e       	mov	r15, r31
     60e:	f0 2d       	mov	r31, r0
		print16(&var);
		printf("  ");
		var=accY;
		printf("accY= ");
     610:	0f 2e       	mov	r0, r31
     612:	f9 e4       	ldi	r31, 0x49	; 73
     614:	6f 2e       	mov	r6, r31
     616:	f2 e0       	ldi	r31, 0x02	; 2
     618:	7f 2e       	mov	r7, r31
		print16(&var);
		printf("  ");
		var=accZ;
		printf("accZ= ");
     61a:	f0 2d       	mov	r31, r0
     61c:	0f 2e       	mov	r0, r31
     61e:	f0 e5       	ldi	r31, 0x50	; 80
     620:	4f 2e       	mov	r4, r31
     622:	f2 e0       	ldi	r31, 0x02	; 2
	printf("\n");
	mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
	mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
    while (1) //hesa kgam
    {
		uint16_t var=grX;
     624:	5f 2e       	mov	r5, r31
     626:	f0 2d       	mov	r31, r0
     628:	a1 dd       	rcall	.-1214   	; 0x16c <mpu6050_read_gyroX>
     62a:	29 81       	ldd	r18, Y+1	; 0x01
     62c:	3a 81       	ldd	r19, Y+2	; 0x02
     62e:	82 1b       	sub	r24, r18
		printf("x= ");
     630:	93 0b       	sbc	r25, r19
     632:	9a 8f       	std	Y+26, r25	; 0x1a
		print16(&var);
     634:	89 8f       	std	Y+25, r24	; 0x19
     636:	9f 92       	push	r9
     638:	8f 92       	push	r8
     63a:	d3 d1       	rcall	.+934    	; 0x9e2 <printf>
		printf("  ");
     63c:	ce 01       	movw	r24, r28
     63e:	49 96       	adiw	r24, 0x19	; 25
     640:	63 df       	rcall	.-314    	; 0x508 <print16>
		var=grY;
     642:	1f 93       	push	r17
     644:	0f 93       	push	r16
     646:	cd d1       	rcall	.+922    	; 0x9e2 <printf>
     648:	a1 dd       	rcall	.-1214   	; 0x18c <mpu6050_read_gyroY>
     64a:	2d 81       	ldd	r18, Y+5	; 0x05
		printf("y= ");
     64c:	3e 81       	ldd	r19, Y+6	; 0x06
     64e:	82 1b       	sub	r24, r18
     650:	93 0b       	sbc	r25, r19
     652:	9a 8f       	std	Y+26, r25	; 0x1a
		print16(&var);
     654:	89 8f       	std	Y+25, r24	; 0x19
     656:	bf 92       	push	r11
     658:	af 92       	push	r10
		printf("  ");
     65a:	c3 d1       	rcall	.+902    	; 0x9e2 <printf>
     65c:	ce 01       	movw	r24, r28
     65e:	49 96       	adiw	r24, 0x19	; 25
		var=grZ;
     660:	53 df       	rcall	.-346    	; 0x508 <print16>
     662:	1f 93       	push	r17
     664:	0f 93       	push	r16
     666:	bd d1       	rcall	.+890    	; 0x9e2 <printf>
     668:	a1 dd       	rcall	.-1214   	; 0x1ac <mpu6050_read_gyroZ>
     66a:	29 85       	ldd	r18, Y+9	; 0x09
		printf("Z= ");
     66c:	3a 85       	ldd	r19, Y+10	; 0x0a
     66e:	82 1b       	sub	r24, r18
     670:	93 0b       	sbc	r25, r19
		print16(&var);
     672:	9a 8f       	std	Y+26, r25	; 0x1a
     674:	89 8f       	std	Y+25, r24	; 0x19
     676:	df 92       	push	r13
		printf("  ");
     678:	cf 92       	push	r12
     67a:	b3 d1       	rcall	.+870    	; 0x9e2 <printf>
				
		var=accX;
     67c:	ce 01       	movw	r24, r28
     67e:	49 96       	adiw	r24, 0x19	; 25
     680:	43 df       	rcall	.-378    	; 0x508 <print16>
     682:	1f 93       	push	r17
     684:	0f 93       	push	r16
     686:	ad d1       	rcall	.+858    	; 0x9e2 <printf>
     688:	58 de       	rcall	.-848    	; 0x33a <mpu6050_read_accelX>
		printf("accX= ");
     68a:	2d 85       	ldd	r18, Y+13	; 0x0d
     68c:	3e 85       	ldd	r19, Y+14	; 0x0e
     68e:	82 1b       	sub	r24, r18
		print16(&var);
     690:	93 0b       	sbc	r25, r19
     692:	9a 8f       	std	Y+26, r25	; 0x1a
		printf("  ");
     694:	89 8f       	std	Y+25, r24	; 0x19
     696:	ff 92       	push	r15
     698:	ef 92       	push	r14
     69a:	a3 d1       	rcall	.+838    	; 0x9e2 <printf>
		var=accY;
     69c:	ce 01       	movw	r24, r28
     69e:	49 96       	adiw	r24, 0x19	; 25
     6a0:	33 df       	rcall	.-410    	; 0x508 <print16>
     6a2:	1f 93       	push	r17
     6a4:	0f 93       	push	r16
     6a6:	9d d1       	rcall	.+826    	; 0x9e2 <printf>
		printf("accY= ");
     6a8:	58 de       	rcall	.-848    	; 0x35a <mpu6050_read_accelY>
     6aa:	29 89       	ldd	r18, Y+17	; 0x11
		print16(&var);
     6ac:	3a 89       	ldd	r19, Y+18	; 0x12
     6ae:	82 1b       	sub	r24, r18
     6b0:	93 0b       	sbc	r25, r19
		printf("  ");
     6b2:	9a 8f       	std	Y+26, r25	; 0x1a
     6b4:	89 8f       	std	Y+25, r24	; 0x19
     6b6:	7f 92       	push	r7
     6b8:	6f 92       	push	r6
		var=accZ;
     6ba:	93 d1       	rcall	.+806    	; 0x9e2 <printf>
     6bc:	ce 01       	movw	r24, r28
     6be:	49 96       	adiw	r24, 0x19	; 25
     6c0:	23 df       	rcall	.-442    	; 0x508 <print16>
     6c2:	1f 93       	push	r17
     6c4:	0f 93       	push	r16
     6c6:	8d d1       	rcall	.+794    	; 0x9e2 <printf>
     6c8:	58 de       	rcall	.-848    	; 0x37a <mpu6050_read_accelZ>
		printf("accZ= ");
     6ca:	2d 89       	ldd	r18, Y+21	; 0x15
     6cc:	3e 89       	ldd	r19, Y+22	; 0x16
     6ce:	82 1b       	sub	r24, r18
     6d0:	93 0b       	sbc	r25, r19
		print16(&var);
     6d2:	9a 8f       	std	Y+26, r25	; 0x1a
     6d4:	89 8f       	std	Y+25, r24	; 0x19
     6d6:	5f 92       	push	r5
     6d8:	4f 92       	push	r4
		printf("  ");
     6da:	83 d1       	rcall	.+774    	; 0x9e2 <printf>
     6dc:	ce 01       	movw	r24, r28
     6de:	49 96       	adiw	r24, 0x19	; 25
     6e0:	13 df       	rcall	.-474    	; 0x508 <print16>
				
		printf("\n");
     6e2:	1f 93       	push	r17
     6e4:	0f 93       	push	r16
     6e6:	7d d1       	rcall	.+762    	; 0x9e2 <printf>
     6e8:	8a e0       	ldi	r24, 0x0A	; 10
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	8d d1       	rcall	.+794    	; 0xa08 <putchar>
     6ee:	0f b6       	in	r0, 0x3f	; 63
     6f0:	f8 94       	cli
     6f2:	de bf       	out	0x3e, r29	; 62
     6f4:	0f be       	out	0x3f, r0	; 63
     6f6:	cd bf       	out	0x3d, r28	; 61
     6f8:	97 cf       	rjmp	.-210    	; 0x628 <main+0xd6>

000006fa <i2c_init>:
     6fa:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     6fe:	8c e0       	ldi	r24, 0x0C	; 12
     700:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     704:	08 95       	ret

00000706 <i2c_start>:
     706:	94 ea       	ldi	r25, 0xA4	; 164
     708:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     70c:	4f ef       	ldi	r20, 0xFF	; 255
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	ec eb       	ldi	r30, 0xBC	; 188
     716:	f0 e0       	ldi	r31, 0x00	; 0
     718:	90 81       	ld	r25, Z
     71a:	99 23       	and	r25, r25
     71c:	34 f0       	brlt	.+12     	; 0x72a <i2c_start+0x24>
     71e:	41 50       	subi	r20, 0x01	; 1
     720:	51 09       	sbc	r21, r1
     722:	61 09       	sbc	r22, r1
     724:	71 09       	sbc	r23, r1
     726:	c0 f7       	brcc	.-16     	; 0x718 <i2c_start+0x12>
     728:	04 c0       	rjmp	.+8      	; 0x732 <i2c_start+0x2c>
     72a:	45 2b       	or	r20, r21
     72c:	46 2b       	or	r20, r22
     72e:	47 2b       	or	r20, r23
     730:	41 f1       	breq	.+80     	; 0x782 <i2c_start+0x7c>
     732:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     736:	98 7f       	andi	r25, 0xF8	; 248
     738:	98 30       	cpi	r25, 0x08	; 8
     73a:	11 f0       	breq	.+4      	; 0x740 <i2c_start+0x3a>
     73c:	90 31       	cpi	r25, 0x10	; 16
     73e:	19 f5       	brne	.+70     	; 0x786 <i2c_start+0x80>
     740:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     744:	84 e8       	ldi	r24, 0x84	; 132
     746:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     74a:	8f ef       	ldi	r24, 0xFF	; 255
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	a0 e0       	ldi	r26, 0x00	; 0
     750:	b0 e0       	ldi	r27, 0x00	; 0
     752:	ec eb       	ldi	r30, 0xBC	; 188
     754:	f0 e0       	ldi	r31, 0x00	; 0
     756:	20 81       	ld	r18, Z
     758:	22 23       	and	r18, r18
     75a:	2c f0       	brlt	.+10     	; 0x766 <i2c_start+0x60>
     75c:	01 97       	sbiw	r24, 0x01	; 1
     75e:	a1 09       	sbc	r26, r1
     760:	b1 09       	sbc	r27, r1
     762:	c8 f7       	brcc	.-14     	; 0x756 <i2c_start+0x50>
     764:	04 c0       	rjmp	.+8      	; 0x76e <i2c_start+0x68>
     766:	89 2b       	or	r24, r25
     768:	8a 2b       	or	r24, r26
     76a:	8b 2b       	or	r24, r27
     76c:	71 f0       	breq	.+28     	; 0x78a <i2c_start+0x84>
     76e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     772:	98 7f       	andi	r25, 0xF8	; 248
     774:	98 31       	cpi	r25, 0x18	; 24
     776:	59 f0       	breq	.+22     	; 0x78e <i2c_start+0x88>
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	90 34       	cpi	r25, 0x40	; 64
     77c:	49 f4       	brne	.+18     	; 0x790 <i2c_start+0x8a>
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	08 95       	ret
     782:	81 e0       	ldi	r24, 0x01	; 1
     784:	08 95       	ret
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	08 95       	ret
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	08 95       	ret
     78e:	80 e0       	ldi	r24, 0x00	; 0
     790:	08 95       	ret

00000792 <i2c_stop>:
     792:	84 e9       	ldi	r24, 0x94	; 148
     794:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     798:	80 e0       	ldi	r24, 0x00	; 0
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	ec eb       	ldi	r30, 0xBC	; 188
     79e:	f0 e0       	ldi	r31, 0x00	; 0
     7a0:	20 81       	ld	r18, Z
     7a2:	24 ff       	sbrs	r18, 4
     7a4:	05 c0       	rjmp	.+10     	; 0x7b0 <i2c_stop+0x1e>
     7a6:	01 96       	adiw	r24, 0x01	; 1
     7a8:	81 15       	cp	r24, r1
     7aa:	21 e0       	ldi	r18, 0x01	; 1
     7ac:	92 07       	cpc	r25, r18
     7ae:	c1 f7       	brne	.-16     	; 0x7a0 <i2c_stop+0xe>
     7b0:	08 95       	ret

000007b2 <i2c_write>:
     7b2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     7b6:	84 e8       	ldi	r24, 0x84	; 132
     7b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     7bc:	8f ef       	ldi	r24, 0xFF	; 255
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	a0 e0       	ldi	r26, 0x00	; 0
     7c2:	b0 e0       	ldi	r27, 0x00	; 0
     7c4:	ec eb       	ldi	r30, 0xBC	; 188
     7c6:	f0 e0       	ldi	r31, 0x00	; 0
     7c8:	20 81       	ld	r18, Z
     7ca:	22 23       	and	r18, r18
     7cc:	2c f0       	brlt	.+10     	; 0x7d8 <i2c_write+0x26>
     7ce:	01 97       	sbiw	r24, 0x01	; 1
     7d0:	a1 09       	sbc	r26, r1
     7d2:	b1 09       	sbc	r27, r1
     7d4:	c8 f7       	brcc	.-14     	; 0x7c8 <i2c_write+0x16>
     7d6:	04 c0       	rjmp	.+8      	; 0x7e0 <i2c_write+0x2e>
     7d8:	89 2b       	or	r24, r25
     7da:	8a 2b       	or	r24, r26
     7dc:	8b 2b       	or	r24, r27
     7de:	41 f0       	breq	.+16     	; 0x7f0 <i2c_write+0x3e>
     7e0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     7e4:	98 7f       	andi	r25, 0xF8	; 248
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	98 32       	cpi	r25, 0x28	; 40
     7ea:	19 f4       	brne	.+6      	; 0x7f2 <i2c_write+0x40>
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	08 95       	ret
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	08 95       	ret

000007f4 <i2c_readNak>:
     7f4:	84 e8       	ldi	r24, 0x84	; 132
     7f6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     7fa:	8f ef       	ldi	r24, 0xFF	; 255
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	a0 e0       	ldi	r26, 0x00	; 0
     800:	b0 e0       	ldi	r27, 0x00	; 0
     802:	ec eb       	ldi	r30, 0xBC	; 188
     804:	f0 e0       	ldi	r31, 0x00	; 0
     806:	20 81       	ld	r18, Z
     808:	22 23       	and	r18, r18
     80a:	2c f0       	brlt	.+10     	; 0x816 <i2c_readNak+0x22>
     80c:	01 97       	sbiw	r24, 0x01	; 1
     80e:	a1 09       	sbc	r26, r1
     810:	b1 09       	sbc	r27, r1
     812:	c8 f7       	brcc	.-14     	; 0x806 <i2c_readNak+0x12>
     814:	04 c0       	rjmp	.+8      	; 0x81e <i2c_readNak+0x2a>
     816:	89 2b       	or	r24, r25
     818:	8a 2b       	or	r24, r26
     81a:	8b 2b       	or	r24, r27
     81c:	19 f0       	breq	.+6      	; 0x824 <i2c_readNak+0x30>
     81e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     822:	08 95       	ret
     824:	80 e0       	ldi	r24, 0x00	; 0
     826:	08 95       	ret

00000828 <USART_Init>:
     828:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     82c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     830:	88 e0       	ldi	r24, 0x08	; 8
     832:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     836:	8e e0       	ldi	r24, 0x0E	; 14
     838:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     83c:	08 95       	ret

0000083e <__divmodhi4>:
     83e:	97 fb       	bst	r25, 7
     840:	07 2e       	mov	r0, r23
     842:	16 f4       	brtc	.+4      	; 0x848 <__divmodhi4+0xa>
     844:	00 94       	com	r0
     846:	06 d0       	rcall	.+12     	; 0x854 <__divmodhi4_neg1>
     848:	77 fd       	sbrc	r23, 7
     84a:	08 d0       	rcall	.+16     	; 0x85c <__divmodhi4_neg2>
     84c:	27 d0       	rcall	.+78     	; 0x89c <__udivmodhi4>
     84e:	07 fc       	sbrc	r0, 7
     850:	05 d0       	rcall	.+10     	; 0x85c <__divmodhi4_neg2>
     852:	3e f4       	brtc	.+14     	; 0x862 <__divmodhi4_exit>

00000854 <__divmodhi4_neg1>:
     854:	90 95       	com	r25
     856:	81 95       	neg	r24
     858:	9f 4f       	sbci	r25, 0xFF	; 255
     85a:	08 95       	ret

0000085c <__divmodhi4_neg2>:
     85c:	70 95       	com	r23
     85e:	61 95       	neg	r22
     860:	7f 4f       	sbci	r23, 0xFF	; 255

00000862 <__divmodhi4_exit>:
     862:	08 95       	ret

00000864 <__divmodsi4>:
     864:	05 2e       	mov	r0, r21
     866:	97 fb       	bst	r25, 7
     868:	16 f4       	brtc	.+4      	; 0x86e <__divmodsi4+0xa>
     86a:	00 94       	com	r0
     86c:	0f d0       	rcall	.+30     	; 0x88c <__negsi2>
     86e:	57 fd       	sbrc	r21, 7
     870:	05 d0       	rcall	.+10     	; 0x87c <__divmodsi4_neg2>
     872:	28 d0       	rcall	.+80     	; 0x8c4 <__udivmodsi4>
     874:	07 fc       	sbrc	r0, 7
     876:	02 d0       	rcall	.+4      	; 0x87c <__divmodsi4_neg2>
     878:	46 f4       	brtc	.+16     	; 0x88a <__divmodsi4_exit>
     87a:	08 c0       	rjmp	.+16     	; 0x88c <__negsi2>

0000087c <__divmodsi4_neg2>:
     87c:	50 95       	com	r21
     87e:	40 95       	com	r20
     880:	30 95       	com	r19
     882:	21 95       	neg	r18
     884:	3f 4f       	sbci	r19, 0xFF	; 255
     886:	4f 4f       	sbci	r20, 0xFF	; 255
     888:	5f 4f       	sbci	r21, 0xFF	; 255

0000088a <__divmodsi4_exit>:
     88a:	08 95       	ret

0000088c <__negsi2>:
     88c:	90 95       	com	r25
     88e:	80 95       	com	r24
     890:	70 95       	com	r23
     892:	61 95       	neg	r22
     894:	7f 4f       	sbci	r23, 0xFF	; 255
     896:	8f 4f       	sbci	r24, 0xFF	; 255
     898:	9f 4f       	sbci	r25, 0xFF	; 255
     89a:	08 95       	ret

0000089c <__udivmodhi4>:
     89c:	aa 1b       	sub	r26, r26
     89e:	bb 1b       	sub	r27, r27
     8a0:	51 e1       	ldi	r21, 0x11	; 17
     8a2:	07 c0       	rjmp	.+14     	; 0x8b2 <__udivmodhi4_ep>

000008a4 <__udivmodhi4_loop>:
     8a4:	aa 1f       	adc	r26, r26
     8a6:	bb 1f       	adc	r27, r27
     8a8:	a6 17       	cp	r26, r22
     8aa:	b7 07       	cpc	r27, r23
     8ac:	10 f0       	brcs	.+4      	; 0x8b2 <__udivmodhi4_ep>
     8ae:	a6 1b       	sub	r26, r22
     8b0:	b7 0b       	sbc	r27, r23

000008b2 <__udivmodhi4_ep>:
     8b2:	88 1f       	adc	r24, r24
     8b4:	99 1f       	adc	r25, r25
     8b6:	5a 95       	dec	r21
     8b8:	a9 f7       	brne	.-22     	; 0x8a4 <__udivmodhi4_loop>
     8ba:	80 95       	com	r24
     8bc:	90 95       	com	r25
     8be:	bc 01       	movw	r22, r24
     8c0:	cd 01       	movw	r24, r26
     8c2:	08 95       	ret

000008c4 <__udivmodsi4>:
     8c4:	a1 e2       	ldi	r26, 0x21	; 33
     8c6:	1a 2e       	mov	r1, r26
     8c8:	aa 1b       	sub	r26, r26
     8ca:	bb 1b       	sub	r27, r27
     8cc:	fd 01       	movw	r30, r26
     8ce:	0d c0       	rjmp	.+26     	; 0x8ea <__udivmodsi4_ep>

000008d0 <__udivmodsi4_loop>:
     8d0:	aa 1f       	adc	r26, r26
     8d2:	bb 1f       	adc	r27, r27
     8d4:	ee 1f       	adc	r30, r30
     8d6:	ff 1f       	adc	r31, r31
     8d8:	a2 17       	cp	r26, r18
     8da:	b3 07       	cpc	r27, r19
     8dc:	e4 07       	cpc	r30, r20
     8de:	f5 07       	cpc	r31, r21
     8e0:	20 f0       	brcs	.+8      	; 0x8ea <__udivmodsi4_ep>
     8e2:	a2 1b       	sub	r26, r18
     8e4:	b3 0b       	sbc	r27, r19
     8e6:	e4 0b       	sbc	r30, r20
     8e8:	f5 0b       	sbc	r31, r21

000008ea <__udivmodsi4_ep>:
     8ea:	66 1f       	adc	r22, r22
     8ec:	77 1f       	adc	r23, r23
     8ee:	88 1f       	adc	r24, r24
     8f0:	99 1f       	adc	r25, r25
     8f2:	1a 94       	dec	r1
     8f4:	69 f7       	brne	.-38     	; 0x8d0 <__udivmodsi4_loop>
     8f6:	60 95       	com	r22
     8f8:	70 95       	com	r23
     8fa:	80 95       	com	r24
     8fc:	90 95       	com	r25
     8fe:	9b 01       	movw	r18, r22
     900:	ac 01       	movw	r20, r24
     902:	bd 01       	movw	r22, r26
     904:	cf 01       	movw	r24, r30
     906:	08 95       	ret

00000908 <__itoa_ncheck>:
     908:	bb 27       	eor	r27, r27
     90a:	4a 30       	cpi	r20, 0x0A	; 10
     90c:	31 f4       	brne	.+12     	; 0x91a <__itoa_ncheck+0x12>
     90e:	99 23       	and	r25, r25
     910:	22 f4       	brpl	.+8      	; 0x91a <__itoa_ncheck+0x12>
     912:	bd e2       	ldi	r27, 0x2D	; 45
     914:	90 95       	com	r25
     916:	81 95       	neg	r24
     918:	9f 4f       	sbci	r25, 0xFF	; 255
     91a:	01 c0       	rjmp	.+2      	; 0x91e <__utoa_common>

0000091c <__utoa_ncheck>:
     91c:	bb 27       	eor	r27, r27

0000091e <__utoa_common>:
     91e:	fb 01       	movw	r30, r22
     920:	55 27       	eor	r21, r21
     922:	aa 27       	eor	r26, r26
     924:	88 0f       	add	r24, r24
     926:	99 1f       	adc	r25, r25
     928:	aa 1f       	adc	r26, r26
     92a:	a4 17       	cp	r26, r20
     92c:	10 f0       	brcs	.+4      	; 0x932 <__utoa_common+0x14>
     92e:	a4 1b       	sub	r26, r20
     930:	83 95       	inc	r24
     932:	50 51       	subi	r21, 0x10	; 16
     934:	b9 f7       	brne	.-18     	; 0x924 <__utoa_common+0x6>
     936:	a0 5d       	subi	r26, 0xD0	; 208
     938:	aa 33       	cpi	r26, 0x3A	; 58
     93a:	08 f0       	brcs	.+2      	; 0x93e <__utoa_common+0x20>
     93c:	a9 5d       	subi	r26, 0xD9	; 217
     93e:	a1 93       	st	Z+, r26
     940:	00 97       	sbiw	r24, 0x00	; 0
     942:	79 f7       	brne	.-34     	; 0x922 <__utoa_common+0x4>
     944:	b1 11       	cpse	r27, r1
     946:	b1 93       	st	Z+, r27
     948:	11 92       	st	Z+, r1
     94a:	cb 01       	movw	r24, r22
     94c:	e7 c3       	rjmp	.+1998   	; 0x111c <strrev>

0000094e <fdevopen>:
     94e:	0f 93       	push	r16
     950:	1f 93       	push	r17
     952:	cf 93       	push	r28
     954:	df 93       	push	r29
     956:	00 97       	sbiw	r24, 0x00	; 0
     958:	31 f4       	brne	.+12     	; 0x966 <fdevopen+0x18>
     95a:	61 15       	cp	r22, r1
     95c:	71 05       	cpc	r23, r1
     95e:	19 f4       	brne	.+6      	; 0x966 <fdevopen+0x18>
     960:	80 e0       	ldi	r24, 0x00	; 0
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	39 c0       	rjmp	.+114    	; 0x9d8 <fdevopen+0x8a>
     966:	8b 01       	movw	r16, r22
     968:	ec 01       	movw	r28, r24
     96a:	6e e0       	ldi	r22, 0x0E	; 14
     96c:	70 e0       	ldi	r23, 0x00	; 0
     96e:	81 e0       	ldi	r24, 0x01	; 1
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	7c d2       	rcall	.+1272   	; 0xe6c <calloc>
     974:	fc 01       	movw	r30, r24
     976:	89 2b       	or	r24, r25
     978:	99 f3       	breq	.-26     	; 0x960 <fdevopen+0x12>
     97a:	80 e8       	ldi	r24, 0x80	; 128
     97c:	83 83       	std	Z+3, r24	; 0x03
     97e:	01 15       	cp	r16, r1
     980:	11 05       	cpc	r17, r1
     982:	71 f0       	breq	.+28     	; 0x9a0 <fdevopen+0x52>
     984:	13 87       	std	Z+11, r17	; 0x0b
     986:	02 87       	std	Z+10, r16	; 0x0a
     988:	81 e8       	ldi	r24, 0x81	; 129
     98a:	83 83       	std	Z+3, r24	; 0x03
     98c:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <__iob>
     990:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <__iob+0x1>
     994:	89 2b       	or	r24, r25
     996:	21 f4       	brne	.+8      	; 0x9a0 <fdevopen+0x52>
     998:	f0 93 69 02 	sts	0x0269, r31	; 0x800269 <__iob+0x1>
     99c:	e0 93 68 02 	sts	0x0268, r30	; 0x800268 <__iob>
     9a0:	20 97       	sbiw	r28, 0x00	; 0
     9a2:	c9 f0       	breq	.+50     	; 0x9d6 <fdevopen+0x88>
     9a4:	d1 87       	std	Z+9, r29	; 0x09
     9a6:	c0 87       	std	Z+8, r28	; 0x08
     9a8:	83 81       	ldd	r24, Z+3	; 0x03
     9aa:	82 60       	ori	r24, 0x02	; 2
     9ac:	83 83       	std	Z+3, r24	; 0x03
     9ae:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <__iob+0x2>
     9b2:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <__iob+0x3>
     9b6:	89 2b       	or	r24, r25
     9b8:	71 f4       	brne	.+28     	; 0x9d6 <fdevopen+0x88>
     9ba:	f0 93 6b 02 	sts	0x026B, r31	; 0x80026b <__iob+0x3>
     9be:	e0 93 6a 02 	sts	0x026A, r30	; 0x80026a <__iob+0x2>
     9c2:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <__iob+0x4>
     9c6:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <__iob+0x5>
     9ca:	89 2b       	or	r24, r25
     9cc:	21 f4       	brne	.+8      	; 0x9d6 <fdevopen+0x88>
     9ce:	f0 93 6d 02 	sts	0x026D, r31	; 0x80026d <__iob+0x5>
     9d2:	e0 93 6c 02 	sts	0x026C, r30	; 0x80026c <__iob+0x4>
     9d6:	cf 01       	movw	r24, r30
     9d8:	df 91       	pop	r29
     9da:	cf 91       	pop	r28
     9dc:	1f 91       	pop	r17
     9de:	0f 91       	pop	r16
     9e0:	08 95       	ret

000009e2 <printf>:
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
     9e6:	cd b7       	in	r28, 0x3d	; 61
     9e8:	de b7       	in	r29, 0x3e	; 62
     9ea:	ae 01       	movw	r20, r28
     9ec:	4a 5f       	subi	r20, 0xFA	; 250
     9ee:	5f 4f       	sbci	r21, 0xFF	; 255
     9f0:	fa 01       	movw	r30, r20
     9f2:	61 91       	ld	r22, Z+
     9f4:	71 91       	ld	r23, Z+
     9f6:	af 01       	movw	r20, r30
     9f8:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <__iob+0x2>
     9fc:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <__iob+0x3>
     a00:	38 d0       	rcall	.+112    	; 0xa72 <vfprintf>
     a02:	df 91       	pop	r29
     a04:	cf 91       	pop	r28
     a06:	08 95       	ret

00000a08 <putchar>:
     a08:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <__iob+0x2>
     a0c:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <__iob+0x3>
     a10:	95 c3       	rjmp	.+1834   	; 0x113c <fputc>

00000a12 <puts>:
     a12:	0f 93       	push	r16
     a14:	1f 93       	push	r17
     a16:	cf 93       	push	r28
     a18:	df 93       	push	r29
     a1a:	e0 91 6a 02 	lds	r30, 0x026A	; 0x80026a <__iob+0x2>
     a1e:	f0 91 6b 02 	lds	r31, 0x026B	; 0x80026b <__iob+0x3>
     a22:	23 81       	ldd	r18, Z+3	; 0x03
     a24:	21 ff       	sbrs	r18, 1
     a26:	1b c0       	rjmp	.+54     	; 0xa5e <puts+0x4c>
     a28:	8c 01       	movw	r16, r24
     a2a:	d0 e0       	ldi	r29, 0x00	; 0
     a2c:	c0 e0       	ldi	r28, 0x00	; 0
     a2e:	f8 01       	movw	r30, r16
     a30:	81 91       	ld	r24, Z+
     a32:	8f 01       	movw	r16, r30
     a34:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <__iob+0x2>
     a38:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <__iob+0x3>
     a3c:	db 01       	movw	r26, r22
     a3e:	18 96       	adiw	r26, 0x08	; 8
     a40:	ed 91       	ld	r30, X+
     a42:	fc 91       	ld	r31, X
     a44:	19 97       	sbiw	r26, 0x09	; 9
     a46:	88 23       	and	r24, r24
     a48:	31 f0       	breq	.+12     	; 0xa56 <puts+0x44>
     a4a:	19 95       	eicall
     a4c:	89 2b       	or	r24, r25
     a4e:	79 f3       	breq	.-34     	; 0xa2e <puts+0x1c>
     a50:	df ef       	ldi	r29, 0xFF	; 255
     a52:	cf ef       	ldi	r28, 0xFF	; 255
     a54:	ec cf       	rjmp	.-40     	; 0xa2e <puts+0x1c>
     a56:	8a e0       	ldi	r24, 0x0A	; 10
     a58:	19 95       	eicall
     a5a:	89 2b       	or	r24, r25
     a5c:	19 f0       	breq	.+6      	; 0xa64 <puts+0x52>
     a5e:	8f ef       	ldi	r24, 0xFF	; 255
     a60:	9f ef       	ldi	r25, 0xFF	; 255
     a62:	02 c0       	rjmp	.+4      	; 0xa68 <puts+0x56>
     a64:	8d 2f       	mov	r24, r29
     a66:	9c 2f       	mov	r25, r28
     a68:	df 91       	pop	r29
     a6a:	cf 91       	pop	r28
     a6c:	1f 91       	pop	r17
     a6e:	0f 91       	pop	r16
     a70:	08 95       	ret

00000a72 <vfprintf>:
     a72:	2f 92       	push	r2
     a74:	3f 92       	push	r3
     a76:	4f 92       	push	r4
     a78:	5f 92       	push	r5
     a7a:	6f 92       	push	r6
     a7c:	7f 92       	push	r7
     a7e:	8f 92       	push	r8
     a80:	9f 92       	push	r9
     a82:	af 92       	push	r10
     a84:	bf 92       	push	r11
     a86:	cf 92       	push	r12
     a88:	df 92       	push	r13
     a8a:	ef 92       	push	r14
     a8c:	ff 92       	push	r15
     a8e:	0f 93       	push	r16
     a90:	1f 93       	push	r17
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	cd b7       	in	r28, 0x3d	; 61
     a98:	de b7       	in	r29, 0x3e	; 62
     a9a:	2b 97       	sbiw	r28, 0x0b	; 11
     a9c:	0f b6       	in	r0, 0x3f	; 63
     a9e:	f8 94       	cli
     aa0:	de bf       	out	0x3e, r29	; 62
     aa2:	0f be       	out	0x3f, r0	; 63
     aa4:	cd bf       	out	0x3d, r28	; 61
     aa6:	6c 01       	movw	r12, r24
     aa8:	7b 01       	movw	r14, r22
     aaa:	8a 01       	movw	r16, r20
     aac:	fc 01       	movw	r30, r24
     aae:	17 82       	std	Z+7, r1	; 0x07
     ab0:	16 82       	std	Z+6, r1	; 0x06
     ab2:	83 81       	ldd	r24, Z+3	; 0x03
     ab4:	81 ff       	sbrs	r24, 1
     ab6:	bf c1       	rjmp	.+894    	; 0xe36 <vfprintf+0x3c4>
     ab8:	ce 01       	movw	r24, r28
     aba:	01 96       	adiw	r24, 0x01	; 1
     abc:	3c 01       	movw	r6, r24
     abe:	f6 01       	movw	r30, r12
     ac0:	93 81       	ldd	r25, Z+3	; 0x03
     ac2:	f7 01       	movw	r30, r14
     ac4:	93 fd       	sbrc	r25, 3
     ac6:	85 91       	lpm	r24, Z+
     ac8:	93 ff       	sbrs	r25, 3
     aca:	81 91       	ld	r24, Z+
     acc:	7f 01       	movw	r14, r30
     ace:	88 23       	and	r24, r24
     ad0:	09 f4       	brne	.+2      	; 0xad4 <vfprintf+0x62>
     ad2:	ad c1       	rjmp	.+858    	; 0xe2e <vfprintf+0x3bc>
     ad4:	85 32       	cpi	r24, 0x25	; 37
     ad6:	39 f4       	brne	.+14     	; 0xae6 <vfprintf+0x74>
     ad8:	93 fd       	sbrc	r25, 3
     ada:	85 91       	lpm	r24, Z+
     adc:	93 ff       	sbrs	r25, 3
     ade:	81 91       	ld	r24, Z+
     ae0:	7f 01       	movw	r14, r30
     ae2:	85 32       	cpi	r24, 0x25	; 37
     ae4:	21 f4       	brne	.+8      	; 0xaee <vfprintf+0x7c>
     ae6:	b6 01       	movw	r22, r12
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	28 d3       	rcall	.+1616   	; 0x113c <fputc>
     aec:	e8 cf       	rjmp	.-48     	; 0xabe <vfprintf+0x4c>
     aee:	91 2c       	mov	r9, r1
     af0:	21 2c       	mov	r2, r1
     af2:	31 2c       	mov	r3, r1
     af4:	ff e1       	ldi	r31, 0x1F	; 31
     af6:	f3 15       	cp	r31, r3
     af8:	d8 f0       	brcs	.+54     	; 0xb30 <vfprintf+0xbe>
     afa:	8b 32       	cpi	r24, 0x2B	; 43
     afc:	79 f0       	breq	.+30     	; 0xb1c <vfprintf+0xaa>
     afe:	38 f4       	brcc	.+14     	; 0xb0e <vfprintf+0x9c>
     b00:	80 32       	cpi	r24, 0x20	; 32
     b02:	79 f0       	breq	.+30     	; 0xb22 <vfprintf+0xb0>
     b04:	83 32       	cpi	r24, 0x23	; 35
     b06:	a1 f4       	brne	.+40     	; 0xb30 <vfprintf+0xbe>
     b08:	23 2d       	mov	r18, r3
     b0a:	20 61       	ori	r18, 0x10	; 16
     b0c:	1d c0       	rjmp	.+58     	; 0xb48 <vfprintf+0xd6>
     b0e:	8d 32       	cpi	r24, 0x2D	; 45
     b10:	61 f0       	breq	.+24     	; 0xb2a <vfprintf+0xb8>
     b12:	80 33       	cpi	r24, 0x30	; 48
     b14:	69 f4       	brne	.+26     	; 0xb30 <vfprintf+0xbe>
     b16:	23 2d       	mov	r18, r3
     b18:	21 60       	ori	r18, 0x01	; 1
     b1a:	16 c0       	rjmp	.+44     	; 0xb48 <vfprintf+0xd6>
     b1c:	83 2d       	mov	r24, r3
     b1e:	82 60       	ori	r24, 0x02	; 2
     b20:	38 2e       	mov	r3, r24
     b22:	e3 2d       	mov	r30, r3
     b24:	e4 60       	ori	r30, 0x04	; 4
     b26:	3e 2e       	mov	r3, r30
     b28:	2a c0       	rjmp	.+84     	; 0xb7e <vfprintf+0x10c>
     b2a:	f3 2d       	mov	r31, r3
     b2c:	f8 60       	ori	r31, 0x08	; 8
     b2e:	1d c0       	rjmp	.+58     	; 0xb6a <vfprintf+0xf8>
     b30:	37 fc       	sbrc	r3, 7
     b32:	2d c0       	rjmp	.+90     	; 0xb8e <vfprintf+0x11c>
     b34:	20 ed       	ldi	r18, 0xD0	; 208
     b36:	28 0f       	add	r18, r24
     b38:	2a 30       	cpi	r18, 0x0A	; 10
     b3a:	40 f0       	brcs	.+16     	; 0xb4c <vfprintf+0xda>
     b3c:	8e 32       	cpi	r24, 0x2E	; 46
     b3e:	b9 f4       	brne	.+46     	; 0xb6e <vfprintf+0xfc>
     b40:	36 fc       	sbrc	r3, 6
     b42:	75 c1       	rjmp	.+746    	; 0xe2e <vfprintf+0x3bc>
     b44:	23 2d       	mov	r18, r3
     b46:	20 64       	ori	r18, 0x40	; 64
     b48:	32 2e       	mov	r3, r18
     b4a:	19 c0       	rjmp	.+50     	; 0xb7e <vfprintf+0x10c>
     b4c:	36 fe       	sbrs	r3, 6
     b4e:	06 c0       	rjmp	.+12     	; 0xb5c <vfprintf+0xea>
     b50:	8a e0       	ldi	r24, 0x0A	; 10
     b52:	98 9e       	mul	r9, r24
     b54:	20 0d       	add	r18, r0
     b56:	11 24       	eor	r1, r1
     b58:	92 2e       	mov	r9, r18
     b5a:	11 c0       	rjmp	.+34     	; 0xb7e <vfprintf+0x10c>
     b5c:	ea e0       	ldi	r30, 0x0A	; 10
     b5e:	2e 9e       	mul	r2, r30
     b60:	20 0d       	add	r18, r0
     b62:	11 24       	eor	r1, r1
     b64:	22 2e       	mov	r2, r18
     b66:	f3 2d       	mov	r31, r3
     b68:	f0 62       	ori	r31, 0x20	; 32
     b6a:	3f 2e       	mov	r3, r31
     b6c:	08 c0       	rjmp	.+16     	; 0xb7e <vfprintf+0x10c>
     b6e:	8c 36       	cpi	r24, 0x6C	; 108
     b70:	21 f4       	brne	.+8      	; 0xb7a <vfprintf+0x108>
     b72:	83 2d       	mov	r24, r3
     b74:	80 68       	ori	r24, 0x80	; 128
     b76:	38 2e       	mov	r3, r24
     b78:	02 c0       	rjmp	.+4      	; 0xb7e <vfprintf+0x10c>
     b7a:	88 36       	cpi	r24, 0x68	; 104
     b7c:	41 f4       	brne	.+16     	; 0xb8e <vfprintf+0x11c>
     b7e:	f7 01       	movw	r30, r14
     b80:	93 fd       	sbrc	r25, 3
     b82:	85 91       	lpm	r24, Z+
     b84:	93 ff       	sbrs	r25, 3
     b86:	81 91       	ld	r24, Z+
     b88:	7f 01       	movw	r14, r30
     b8a:	81 11       	cpse	r24, r1
     b8c:	b3 cf       	rjmp	.-154    	; 0xaf4 <vfprintf+0x82>
     b8e:	98 2f       	mov	r25, r24
     b90:	9f 7d       	andi	r25, 0xDF	; 223
     b92:	95 54       	subi	r25, 0x45	; 69
     b94:	93 30       	cpi	r25, 0x03	; 3
     b96:	28 f4       	brcc	.+10     	; 0xba2 <vfprintf+0x130>
     b98:	0c 5f       	subi	r16, 0xFC	; 252
     b9a:	1f 4f       	sbci	r17, 0xFF	; 255
     b9c:	9f e3       	ldi	r25, 0x3F	; 63
     b9e:	99 83       	std	Y+1, r25	; 0x01
     ba0:	0d c0       	rjmp	.+26     	; 0xbbc <vfprintf+0x14a>
     ba2:	83 36       	cpi	r24, 0x63	; 99
     ba4:	31 f0       	breq	.+12     	; 0xbb2 <vfprintf+0x140>
     ba6:	83 37       	cpi	r24, 0x73	; 115
     ba8:	71 f0       	breq	.+28     	; 0xbc6 <vfprintf+0x154>
     baa:	83 35       	cpi	r24, 0x53	; 83
     bac:	09 f0       	breq	.+2      	; 0xbb0 <vfprintf+0x13e>
     bae:	55 c0       	rjmp	.+170    	; 0xc5a <vfprintf+0x1e8>
     bb0:	20 c0       	rjmp	.+64     	; 0xbf2 <vfprintf+0x180>
     bb2:	f8 01       	movw	r30, r16
     bb4:	80 81       	ld	r24, Z
     bb6:	89 83       	std	Y+1, r24	; 0x01
     bb8:	0e 5f       	subi	r16, 0xFE	; 254
     bba:	1f 4f       	sbci	r17, 0xFF	; 255
     bbc:	88 24       	eor	r8, r8
     bbe:	83 94       	inc	r8
     bc0:	91 2c       	mov	r9, r1
     bc2:	53 01       	movw	r10, r6
     bc4:	12 c0       	rjmp	.+36     	; 0xbea <vfprintf+0x178>
     bc6:	28 01       	movw	r4, r16
     bc8:	f2 e0       	ldi	r31, 0x02	; 2
     bca:	4f 0e       	add	r4, r31
     bcc:	51 1c       	adc	r5, r1
     bce:	f8 01       	movw	r30, r16
     bd0:	a0 80       	ld	r10, Z
     bd2:	b1 80       	ldd	r11, Z+1	; 0x01
     bd4:	36 fe       	sbrs	r3, 6
     bd6:	03 c0       	rjmp	.+6      	; 0xbde <vfprintf+0x16c>
     bd8:	69 2d       	mov	r22, r9
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <vfprintf+0x170>
     bde:	6f ef       	ldi	r22, 0xFF	; 255
     be0:	7f ef       	ldi	r23, 0xFF	; 255
     be2:	c5 01       	movw	r24, r10
     be4:	90 d2       	rcall	.+1312   	; 0x1106 <strnlen>
     be6:	4c 01       	movw	r8, r24
     be8:	82 01       	movw	r16, r4
     bea:	f3 2d       	mov	r31, r3
     bec:	ff 77       	andi	r31, 0x7F	; 127
     bee:	3f 2e       	mov	r3, r31
     bf0:	15 c0       	rjmp	.+42     	; 0xc1c <vfprintf+0x1aa>
     bf2:	28 01       	movw	r4, r16
     bf4:	22 e0       	ldi	r18, 0x02	; 2
     bf6:	42 0e       	add	r4, r18
     bf8:	51 1c       	adc	r5, r1
     bfa:	f8 01       	movw	r30, r16
     bfc:	a0 80       	ld	r10, Z
     bfe:	b1 80       	ldd	r11, Z+1	; 0x01
     c00:	36 fe       	sbrs	r3, 6
     c02:	03 c0       	rjmp	.+6      	; 0xc0a <vfprintf+0x198>
     c04:	69 2d       	mov	r22, r9
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <vfprintf+0x19c>
     c0a:	6f ef       	ldi	r22, 0xFF	; 255
     c0c:	7f ef       	ldi	r23, 0xFF	; 255
     c0e:	c5 01       	movw	r24, r10
     c10:	68 d2       	rcall	.+1232   	; 0x10e2 <strnlen_P>
     c12:	4c 01       	movw	r8, r24
     c14:	f3 2d       	mov	r31, r3
     c16:	f0 68       	ori	r31, 0x80	; 128
     c18:	3f 2e       	mov	r3, r31
     c1a:	82 01       	movw	r16, r4
     c1c:	33 fc       	sbrc	r3, 3
     c1e:	19 c0       	rjmp	.+50     	; 0xc52 <vfprintf+0x1e0>
     c20:	82 2d       	mov	r24, r2
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	88 16       	cp	r8, r24
     c26:	99 06       	cpc	r9, r25
     c28:	a0 f4       	brcc	.+40     	; 0xc52 <vfprintf+0x1e0>
     c2a:	b6 01       	movw	r22, r12
     c2c:	80 e2       	ldi	r24, 0x20	; 32
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	85 d2       	rcall	.+1290   	; 0x113c <fputc>
     c32:	2a 94       	dec	r2
     c34:	f5 cf       	rjmp	.-22     	; 0xc20 <vfprintf+0x1ae>
     c36:	f5 01       	movw	r30, r10
     c38:	37 fc       	sbrc	r3, 7
     c3a:	85 91       	lpm	r24, Z+
     c3c:	37 fe       	sbrs	r3, 7
     c3e:	81 91       	ld	r24, Z+
     c40:	5f 01       	movw	r10, r30
     c42:	b6 01       	movw	r22, r12
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	7a d2       	rcall	.+1268   	; 0x113c <fputc>
     c48:	21 10       	cpse	r2, r1
     c4a:	2a 94       	dec	r2
     c4c:	21 e0       	ldi	r18, 0x01	; 1
     c4e:	82 1a       	sub	r8, r18
     c50:	91 08       	sbc	r9, r1
     c52:	81 14       	cp	r8, r1
     c54:	91 04       	cpc	r9, r1
     c56:	79 f7       	brne	.-34     	; 0xc36 <vfprintf+0x1c4>
     c58:	e1 c0       	rjmp	.+450    	; 0xe1c <vfprintf+0x3aa>
     c5a:	84 36       	cpi	r24, 0x64	; 100
     c5c:	11 f0       	breq	.+4      	; 0xc62 <vfprintf+0x1f0>
     c5e:	89 36       	cpi	r24, 0x69	; 105
     c60:	39 f5       	brne	.+78     	; 0xcb0 <vfprintf+0x23e>
     c62:	f8 01       	movw	r30, r16
     c64:	37 fe       	sbrs	r3, 7
     c66:	07 c0       	rjmp	.+14     	; 0xc76 <vfprintf+0x204>
     c68:	60 81       	ld	r22, Z
     c6a:	71 81       	ldd	r23, Z+1	; 0x01
     c6c:	82 81       	ldd	r24, Z+2	; 0x02
     c6e:	93 81       	ldd	r25, Z+3	; 0x03
     c70:	0c 5f       	subi	r16, 0xFC	; 252
     c72:	1f 4f       	sbci	r17, 0xFF	; 255
     c74:	08 c0       	rjmp	.+16     	; 0xc86 <vfprintf+0x214>
     c76:	60 81       	ld	r22, Z
     c78:	71 81       	ldd	r23, Z+1	; 0x01
     c7a:	07 2e       	mov	r0, r23
     c7c:	00 0c       	add	r0, r0
     c7e:	88 0b       	sbc	r24, r24
     c80:	99 0b       	sbc	r25, r25
     c82:	0e 5f       	subi	r16, 0xFE	; 254
     c84:	1f 4f       	sbci	r17, 0xFF	; 255
     c86:	f3 2d       	mov	r31, r3
     c88:	ff 76       	andi	r31, 0x6F	; 111
     c8a:	3f 2e       	mov	r3, r31
     c8c:	97 ff       	sbrs	r25, 7
     c8e:	09 c0       	rjmp	.+18     	; 0xca2 <vfprintf+0x230>
     c90:	90 95       	com	r25
     c92:	80 95       	com	r24
     c94:	70 95       	com	r23
     c96:	61 95       	neg	r22
     c98:	7f 4f       	sbci	r23, 0xFF	; 255
     c9a:	8f 4f       	sbci	r24, 0xFF	; 255
     c9c:	9f 4f       	sbci	r25, 0xFF	; 255
     c9e:	f0 68       	ori	r31, 0x80	; 128
     ca0:	3f 2e       	mov	r3, r31
     ca2:	2a e0       	ldi	r18, 0x0A	; 10
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	a3 01       	movw	r20, r6
     ca8:	85 d2       	rcall	.+1290   	; 0x11b4 <__ultoa_invert>
     caa:	88 2e       	mov	r8, r24
     cac:	86 18       	sub	r8, r6
     cae:	44 c0       	rjmp	.+136    	; 0xd38 <vfprintf+0x2c6>
     cb0:	85 37       	cpi	r24, 0x75	; 117
     cb2:	31 f4       	brne	.+12     	; 0xcc0 <vfprintf+0x24e>
     cb4:	23 2d       	mov	r18, r3
     cb6:	2f 7e       	andi	r18, 0xEF	; 239
     cb8:	b2 2e       	mov	r11, r18
     cba:	2a e0       	ldi	r18, 0x0A	; 10
     cbc:	30 e0       	ldi	r19, 0x00	; 0
     cbe:	25 c0       	rjmp	.+74     	; 0xd0a <vfprintf+0x298>
     cc0:	93 2d       	mov	r25, r3
     cc2:	99 7f       	andi	r25, 0xF9	; 249
     cc4:	b9 2e       	mov	r11, r25
     cc6:	8f 36       	cpi	r24, 0x6F	; 111
     cc8:	c1 f0       	breq	.+48     	; 0xcfa <vfprintf+0x288>
     cca:	18 f4       	brcc	.+6      	; 0xcd2 <vfprintf+0x260>
     ccc:	88 35       	cpi	r24, 0x58	; 88
     cce:	79 f0       	breq	.+30     	; 0xcee <vfprintf+0x27c>
     cd0:	ae c0       	rjmp	.+348    	; 0xe2e <vfprintf+0x3bc>
     cd2:	80 37       	cpi	r24, 0x70	; 112
     cd4:	19 f0       	breq	.+6      	; 0xcdc <vfprintf+0x26a>
     cd6:	88 37       	cpi	r24, 0x78	; 120
     cd8:	21 f0       	breq	.+8      	; 0xce2 <vfprintf+0x270>
     cda:	a9 c0       	rjmp	.+338    	; 0xe2e <vfprintf+0x3bc>
     cdc:	e9 2f       	mov	r30, r25
     cde:	e0 61       	ori	r30, 0x10	; 16
     ce0:	be 2e       	mov	r11, r30
     ce2:	b4 fe       	sbrs	r11, 4
     ce4:	0d c0       	rjmp	.+26     	; 0xd00 <vfprintf+0x28e>
     ce6:	fb 2d       	mov	r31, r11
     ce8:	f4 60       	ori	r31, 0x04	; 4
     cea:	bf 2e       	mov	r11, r31
     cec:	09 c0       	rjmp	.+18     	; 0xd00 <vfprintf+0x28e>
     cee:	34 fe       	sbrs	r3, 4
     cf0:	0a c0       	rjmp	.+20     	; 0xd06 <vfprintf+0x294>
     cf2:	29 2f       	mov	r18, r25
     cf4:	26 60       	ori	r18, 0x06	; 6
     cf6:	b2 2e       	mov	r11, r18
     cf8:	06 c0       	rjmp	.+12     	; 0xd06 <vfprintf+0x294>
     cfa:	28 e0       	ldi	r18, 0x08	; 8
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	05 c0       	rjmp	.+10     	; 0xd0a <vfprintf+0x298>
     d00:	20 e1       	ldi	r18, 0x10	; 16
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	02 c0       	rjmp	.+4      	; 0xd0a <vfprintf+0x298>
     d06:	20 e1       	ldi	r18, 0x10	; 16
     d08:	32 e0       	ldi	r19, 0x02	; 2
     d0a:	f8 01       	movw	r30, r16
     d0c:	b7 fe       	sbrs	r11, 7
     d0e:	07 c0       	rjmp	.+14     	; 0xd1e <vfprintf+0x2ac>
     d10:	60 81       	ld	r22, Z
     d12:	71 81       	ldd	r23, Z+1	; 0x01
     d14:	82 81       	ldd	r24, Z+2	; 0x02
     d16:	93 81       	ldd	r25, Z+3	; 0x03
     d18:	0c 5f       	subi	r16, 0xFC	; 252
     d1a:	1f 4f       	sbci	r17, 0xFF	; 255
     d1c:	06 c0       	rjmp	.+12     	; 0xd2a <vfprintf+0x2b8>
     d1e:	60 81       	ld	r22, Z
     d20:	71 81       	ldd	r23, Z+1	; 0x01
     d22:	80 e0       	ldi	r24, 0x00	; 0
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	0e 5f       	subi	r16, 0xFE	; 254
     d28:	1f 4f       	sbci	r17, 0xFF	; 255
     d2a:	a3 01       	movw	r20, r6
     d2c:	43 d2       	rcall	.+1158   	; 0x11b4 <__ultoa_invert>
     d2e:	88 2e       	mov	r8, r24
     d30:	86 18       	sub	r8, r6
     d32:	fb 2d       	mov	r31, r11
     d34:	ff 77       	andi	r31, 0x7F	; 127
     d36:	3f 2e       	mov	r3, r31
     d38:	36 fe       	sbrs	r3, 6
     d3a:	0d c0       	rjmp	.+26     	; 0xd56 <vfprintf+0x2e4>
     d3c:	23 2d       	mov	r18, r3
     d3e:	2e 7f       	andi	r18, 0xFE	; 254
     d40:	a2 2e       	mov	r10, r18
     d42:	89 14       	cp	r8, r9
     d44:	58 f4       	brcc	.+22     	; 0xd5c <vfprintf+0x2ea>
     d46:	34 fe       	sbrs	r3, 4
     d48:	0b c0       	rjmp	.+22     	; 0xd60 <vfprintf+0x2ee>
     d4a:	32 fc       	sbrc	r3, 2
     d4c:	09 c0       	rjmp	.+18     	; 0xd60 <vfprintf+0x2ee>
     d4e:	83 2d       	mov	r24, r3
     d50:	8e 7e       	andi	r24, 0xEE	; 238
     d52:	a8 2e       	mov	r10, r24
     d54:	05 c0       	rjmp	.+10     	; 0xd60 <vfprintf+0x2ee>
     d56:	b8 2c       	mov	r11, r8
     d58:	a3 2c       	mov	r10, r3
     d5a:	03 c0       	rjmp	.+6      	; 0xd62 <vfprintf+0x2f0>
     d5c:	b8 2c       	mov	r11, r8
     d5e:	01 c0       	rjmp	.+2      	; 0xd62 <vfprintf+0x2f0>
     d60:	b9 2c       	mov	r11, r9
     d62:	a4 fe       	sbrs	r10, 4
     d64:	0f c0       	rjmp	.+30     	; 0xd84 <vfprintf+0x312>
     d66:	fe 01       	movw	r30, r28
     d68:	e8 0d       	add	r30, r8
     d6a:	f1 1d       	adc	r31, r1
     d6c:	80 81       	ld	r24, Z
     d6e:	80 33       	cpi	r24, 0x30	; 48
     d70:	21 f4       	brne	.+8      	; 0xd7a <vfprintf+0x308>
     d72:	9a 2d       	mov	r25, r10
     d74:	99 7e       	andi	r25, 0xE9	; 233
     d76:	a9 2e       	mov	r10, r25
     d78:	09 c0       	rjmp	.+18     	; 0xd8c <vfprintf+0x31a>
     d7a:	a2 fe       	sbrs	r10, 2
     d7c:	06 c0       	rjmp	.+12     	; 0xd8a <vfprintf+0x318>
     d7e:	b3 94       	inc	r11
     d80:	b3 94       	inc	r11
     d82:	04 c0       	rjmp	.+8      	; 0xd8c <vfprintf+0x31a>
     d84:	8a 2d       	mov	r24, r10
     d86:	86 78       	andi	r24, 0x86	; 134
     d88:	09 f0       	breq	.+2      	; 0xd8c <vfprintf+0x31a>
     d8a:	b3 94       	inc	r11
     d8c:	a3 fc       	sbrc	r10, 3
     d8e:	10 c0       	rjmp	.+32     	; 0xdb0 <vfprintf+0x33e>
     d90:	a0 fe       	sbrs	r10, 0
     d92:	06 c0       	rjmp	.+12     	; 0xda0 <vfprintf+0x32e>
     d94:	b2 14       	cp	r11, r2
     d96:	80 f4       	brcc	.+32     	; 0xdb8 <vfprintf+0x346>
     d98:	28 0c       	add	r2, r8
     d9a:	92 2c       	mov	r9, r2
     d9c:	9b 18       	sub	r9, r11
     d9e:	0d c0       	rjmp	.+26     	; 0xdba <vfprintf+0x348>
     da0:	b2 14       	cp	r11, r2
     da2:	58 f4       	brcc	.+22     	; 0xdba <vfprintf+0x348>
     da4:	b6 01       	movw	r22, r12
     da6:	80 e2       	ldi	r24, 0x20	; 32
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	c8 d1       	rcall	.+912    	; 0x113c <fputc>
     dac:	b3 94       	inc	r11
     dae:	f8 cf       	rjmp	.-16     	; 0xda0 <vfprintf+0x32e>
     db0:	b2 14       	cp	r11, r2
     db2:	18 f4       	brcc	.+6      	; 0xdba <vfprintf+0x348>
     db4:	2b 18       	sub	r2, r11
     db6:	02 c0       	rjmp	.+4      	; 0xdbc <vfprintf+0x34a>
     db8:	98 2c       	mov	r9, r8
     dba:	21 2c       	mov	r2, r1
     dbc:	a4 fe       	sbrs	r10, 4
     dbe:	0f c0       	rjmp	.+30     	; 0xdde <vfprintf+0x36c>
     dc0:	b6 01       	movw	r22, r12
     dc2:	80 e3       	ldi	r24, 0x30	; 48
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	ba d1       	rcall	.+884    	; 0x113c <fputc>
     dc8:	a2 fe       	sbrs	r10, 2
     dca:	16 c0       	rjmp	.+44     	; 0xdf8 <vfprintf+0x386>
     dcc:	a1 fc       	sbrc	r10, 1
     dce:	03 c0       	rjmp	.+6      	; 0xdd6 <vfprintf+0x364>
     dd0:	88 e7       	ldi	r24, 0x78	; 120
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	02 c0       	rjmp	.+4      	; 0xdda <vfprintf+0x368>
     dd6:	88 e5       	ldi	r24, 0x58	; 88
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	b6 01       	movw	r22, r12
     ddc:	0c c0       	rjmp	.+24     	; 0xdf6 <vfprintf+0x384>
     dde:	8a 2d       	mov	r24, r10
     de0:	86 78       	andi	r24, 0x86	; 134
     de2:	51 f0       	breq	.+20     	; 0xdf8 <vfprintf+0x386>
     de4:	a1 fe       	sbrs	r10, 1
     de6:	02 c0       	rjmp	.+4      	; 0xdec <vfprintf+0x37a>
     de8:	8b e2       	ldi	r24, 0x2B	; 43
     dea:	01 c0       	rjmp	.+2      	; 0xdee <vfprintf+0x37c>
     dec:	80 e2       	ldi	r24, 0x20	; 32
     dee:	a7 fc       	sbrc	r10, 7
     df0:	8d e2       	ldi	r24, 0x2D	; 45
     df2:	b6 01       	movw	r22, r12
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	a2 d1       	rcall	.+836    	; 0x113c <fputc>
     df8:	89 14       	cp	r8, r9
     dfa:	30 f4       	brcc	.+12     	; 0xe08 <vfprintf+0x396>
     dfc:	b6 01       	movw	r22, r12
     dfe:	80 e3       	ldi	r24, 0x30	; 48
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	9c d1       	rcall	.+824    	; 0x113c <fputc>
     e04:	9a 94       	dec	r9
     e06:	f8 cf       	rjmp	.-16     	; 0xdf8 <vfprintf+0x386>
     e08:	8a 94       	dec	r8
     e0a:	f3 01       	movw	r30, r6
     e0c:	e8 0d       	add	r30, r8
     e0e:	f1 1d       	adc	r31, r1
     e10:	80 81       	ld	r24, Z
     e12:	b6 01       	movw	r22, r12
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	92 d1       	rcall	.+804    	; 0x113c <fputc>
     e18:	81 10       	cpse	r8, r1
     e1a:	f6 cf       	rjmp	.-20     	; 0xe08 <vfprintf+0x396>
     e1c:	22 20       	and	r2, r2
     e1e:	09 f4       	brne	.+2      	; 0xe22 <vfprintf+0x3b0>
     e20:	4e ce       	rjmp	.-868    	; 0xabe <vfprintf+0x4c>
     e22:	b6 01       	movw	r22, r12
     e24:	80 e2       	ldi	r24, 0x20	; 32
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	89 d1       	rcall	.+786    	; 0x113c <fputc>
     e2a:	2a 94       	dec	r2
     e2c:	f7 cf       	rjmp	.-18     	; 0xe1c <vfprintf+0x3aa>
     e2e:	f6 01       	movw	r30, r12
     e30:	86 81       	ldd	r24, Z+6	; 0x06
     e32:	97 81       	ldd	r25, Z+7	; 0x07
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <vfprintf+0x3c8>
     e36:	8f ef       	ldi	r24, 0xFF	; 255
     e38:	9f ef       	ldi	r25, 0xFF	; 255
     e3a:	2b 96       	adiw	r28, 0x0b	; 11
     e3c:	0f b6       	in	r0, 0x3f	; 63
     e3e:	f8 94       	cli
     e40:	de bf       	out	0x3e, r29	; 62
     e42:	0f be       	out	0x3f, r0	; 63
     e44:	cd bf       	out	0x3d, r28	; 61
     e46:	df 91       	pop	r29
     e48:	cf 91       	pop	r28
     e4a:	1f 91       	pop	r17
     e4c:	0f 91       	pop	r16
     e4e:	ff 90       	pop	r15
     e50:	ef 90       	pop	r14
     e52:	df 90       	pop	r13
     e54:	cf 90       	pop	r12
     e56:	bf 90       	pop	r11
     e58:	af 90       	pop	r10
     e5a:	9f 90       	pop	r9
     e5c:	8f 90       	pop	r8
     e5e:	7f 90       	pop	r7
     e60:	6f 90       	pop	r6
     e62:	5f 90       	pop	r5
     e64:	4f 90       	pop	r4
     e66:	3f 90       	pop	r3
     e68:	2f 90       	pop	r2
     e6a:	08 95       	ret

00000e6c <calloc>:
     e6c:	0f 93       	push	r16
     e6e:	1f 93       	push	r17
     e70:	cf 93       	push	r28
     e72:	df 93       	push	r29
     e74:	86 9f       	mul	r24, r22
     e76:	80 01       	movw	r16, r0
     e78:	87 9f       	mul	r24, r23
     e7a:	10 0d       	add	r17, r0
     e7c:	96 9f       	mul	r25, r22
     e7e:	10 0d       	add	r17, r0
     e80:	11 24       	eor	r1, r1
     e82:	c8 01       	movw	r24, r16
     e84:	0d d0       	rcall	.+26     	; 0xea0 <malloc>
     e86:	ec 01       	movw	r28, r24
     e88:	00 97       	sbiw	r24, 0x00	; 0
     e8a:	21 f0       	breq	.+8      	; 0xe94 <calloc+0x28>
     e8c:	a8 01       	movw	r20, r16
     e8e:	60 e0       	ldi	r22, 0x00	; 0
     e90:	70 e0       	ldi	r23, 0x00	; 0
     e92:	32 d1       	rcall	.+612    	; 0x10f8 <memset>
     e94:	ce 01       	movw	r24, r28
     e96:	df 91       	pop	r29
     e98:	cf 91       	pop	r28
     e9a:	1f 91       	pop	r17
     e9c:	0f 91       	pop	r16
     e9e:	08 95       	ret

00000ea0 <malloc>:
     ea0:	0f 93       	push	r16
     ea2:	1f 93       	push	r17
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
     ea8:	82 30       	cpi	r24, 0x02	; 2
     eaa:	91 05       	cpc	r25, r1
     eac:	10 f4       	brcc	.+4      	; 0xeb2 <malloc+0x12>
     eae:	82 e0       	ldi	r24, 0x02	; 2
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	e0 91 70 02 	lds	r30, 0x0270	; 0x800270 <__flp>
     eb6:	f0 91 71 02 	lds	r31, 0x0271	; 0x800271 <__flp+0x1>
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	a0 e0       	ldi	r26, 0x00	; 0
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
     ec2:	30 97       	sbiw	r30, 0x00	; 0
     ec4:	19 f1       	breq	.+70     	; 0xf0c <malloc+0x6c>
     ec6:	40 81       	ld	r20, Z
     ec8:	51 81       	ldd	r21, Z+1	; 0x01
     eca:	02 81       	ldd	r16, Z+2	; 0x02
     ecc:	13 81       	ldd	r17, Z+3	; 0x03
     ece:	48 17       	cp	r20, r24
     ed0:	59 07       	cpc	r21, r25
     ed2:	c8 f0       	brcs	.+50     	; 0xf06 <malloc+0x66>
     ed4:	84 17       	cp	r24, r20
     ed6:	95 07       	cpc	r25, r21
     ed8:	69 f4       	brne	.+26     	; 0xef4 <malloc+0x54>
     eda:	10 97       	sbiw	r26, 0x00	; 0
     edc:	31 f0       	breq	.+12     	; 0xeea <malloc+0x4a>
     ede:	12 96       	adiw	r26, 0x02	; 2
     ee0:	0c 93       	st	X, r16
     ee2:	12 97       	sbiw	r26, 0x02	; 2
     ee4:	13 96       	adiw	r26, 0x03	; 3
     ee6:	1c 93       	st	X, r17
     ee8:	27 c0       	rjmp	.+78     	; 0xf38 <malloc+0x98>
     eea:	00 93 70 02 	sts	0x0270, r16	; 0x800270 <__flp>
     eee:	10 93 71 02 	sts	0x0271, r17	; 0x800271 <__flp+0x1>
     ef2:	22 c0       	rjmp	.+68     	; 0xf38 <malloc+0x98>
     ef4:	21 15       	cp	r18, r1
     ef6:	31 05       	cpc	r19, r1
     ef8:	19 f0       	breq	.+6      	; 0xf00 <malloc+0x60>
     efa:	42 17       	cp	r20, r18
     efc:	53 07       	cpc	r21, r19
     efe:	18 f4       	brcc	.+6      	; 0xf06 <malloc+0x66>
     f00:	9a 01       	movw	r18, r20
     f02:	bd 01       	movw	r22, r26
     f04:	ef 01       	movw	r28, r30
     f06:	df 01       	movw	r26, r30
     f08:	f8 01       	movw	r30, r16
     f0a:	db cf       	rjmp	.-74     	; 0xec2 <malloc+0x22>
     f0c:	21 15       	cp	r18, r1
     f0e:	31 05       	cpc	r19, r1
     f10:	f9 f0       	breq	.+62     	; 0xf50 <malloc+0xb0>
     f12:	28 1b       	sub	r18, r24
     f14:	39 0b       	sbc	r19, r25
     f16:	24 30       	cpi	r18, 0x04	; 4
     f18:	31 05       	cpc	r19, r1
     f1a:	80 f4       	brcc	.+32     	; 0xf3c <malloc+0x9c>
     f1c:	8a 81       	ldd	r24, Y+2	; 0x02
     f1e:	9b 81       	ldd	r25, Y+3	; 0x03
     f20:	61 15       	cp	r22, r1
     f22:	71 05       	cpc	r23, r1
     f24:	21 f0       	breq	.+8      	; 0xf2e <malloc+0x8e>
     f26:	fb 01       	movw	r30, r22
     f28:	93 83       	std	Z+3, r25	; 0x03
     f2a:	82 83       	std	Z+2, r24	; 0x02
     f2c:	04 c0       	rjmp	.+8      	; 0xf36 <malloc+0x96>
     f2e:	90 93 71 02 	sts	0x0271, r25	; 0x800271 <__flp+0x1>
     f32:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <__flp>
     f36:	fe 01       	movw	r30, r28
     f38:	32 96       	adiw	r30, 0x02	; 2
     f3a:	44 c0       	rjmp	.+136    	; 0xfc4 <malloc+0x124>
     f3c:	fe 01       	movw	r30, r28
     f3e:	e2 0f       	add	r30, r18
     f40:	f3 1f       	adc	r31, r19
     f42:	81 93       	st	Z+, r24
     f44:	91 93       	st	Z+, r25
     f46:	22 50       	subi	r18, 0x02	; 2
     f48:	31 09       	sbc	r19, r1
     f4a:	39 83       	std	Y+1, r19	; 0x01
     f4c:	28 83       	st	Y, r18
     f4e:	3a c0       	rjmp	.+116    	; 0xfc4 <malloc+0x124>
     f50:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <__brkval>
     f54:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <__brkval+0x1>
     f58:	23 2b       	or	r18, r19
     f5a:	41 f4       	brne	.+16     	; 0xf6c <malloc+0xcc>
     f5c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     f60:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     f64:	30 93 6f 02 	sts	0x026F, r19	; 0x80026f <__brkval+0x1>
     f68:	20 93 6e 02 	sts	0x026E, r18	; 0x80026e <__brkval>
     f6c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     f70:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     f74:	21 15       	cp	r18, r1
     f76:	31 05       	cpc	r19, r1
     f78:	41 f4       	brne	.+16     	; 0xf8a <malloc+0xea>
     f7a:	2d b7       	in	r18, 0x3d	; 61
     f7c:	3e b7       	in	r19, 0x3e	; 62
     f7e:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     f82:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     f86:	24 1b       	sub	r18, r20
     f88:	35 0b       	sbc	r19, r21
     f8a:	e0 91 6e 02 	lds	r30, 0x026E	; 0x80026e <__brkval>
     f8e:	f0 91 6f 02 	lds	r31, 0x026F	; 0x80026f <__brkval+0x1>
     f92:	e2 17       	cp	r30, r18
     f94:	f3 07       	cpc	r31, r19
     f96:	a0 f4       	brcc	.+40     	; 0xfc0 <malloc+0x120>
     f98:	2e 1b       	sub	r18, r30
     f9a:	3f 0b       	sbc	r19, r31
     f9c:	28 17       	cp	r18, r24
     f9e:	39 07       	cpc	r19, r25
     fa0:	78 f0       	brcs	.+30     	; 0xfc0 <malloc+0x120>
     fa2:	ac 01       	movw	r20, r24
     fa4:	4e 5f       	subi	r20, 0xFE	; 254
     fa6:	5f 4f       	sbci	r21, 0xFF	; 255
     fa8:	24 17       	cp	r18, r20
     faa:	35 07       	cpc	r19, r21
     fac:	48 f0       	brcs	.+18     	; 0xfc0 <malloc+0x120>
     fae:	4e 0f       	add	r20, r30
     fb0:	5f 1f       	adc	r21, r31
     fb2:	50 93 6f 02 	sts	0x026F, r21	; 0x80026f <__brkval+0x1>
     fb6:	40 93 6e 02 	sts	0x026E, r20	; 0x80026e <__brkval>
     fba:	81 93       	st	Z+, r24
     fbc:	91 93       	st	Z+, r25
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <malloc+0x124>
     fc0:	e0 e0       	ldi	r30, 0x00	; 0
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	cf 01       	movw	r24, r30
     fc6:	df 91       	pop	r29
     fc8:	cf 91       	pop	r28
     fca:	1f 91       	pop	r17
     fcc:	0f 91       	pop	r16
     fce:	08 95       	ret

00000fd0 <free>:
     fd0:	cf 93       	push	r28
     fd2:	df 93       	push	r29
     fd4:	00 97       	sbiw	r24, 0x00	; 0
     fd6:	09 f4       	brne	.+2      	; 0xfda <free+0xa>
     fd8:	81 c0       	rjmp	.+258    	; 0x10dc <free+0x10c>
     fda:	fc 01       	movw	r30, r24
     fdc:	32 97       	sbiw	r30, 0x02	; 2
     fde:	13 82       	std	Z+3, r1	; 0x03
     fe0:	12 82       	std	Z+2, r1	; 0x02
     fe2:	a0 91 70 02 	lds	r26, 0x0270	; 0x800270 <__flp>
     fe6:	b0 91 71 02 	lds	r27, 0x0271	; 0x800271 <__flp+0x1>
     fea:	10 97       	sbiw	r26, 0x00	; 0
     fec:	81 f4       	brne	.+32     	; 0x100e <free+0x3e>
     fee:	20 81       	ld	r18, Z
     ff0:	31 81       	ldd	r19, Z+1	; 0x01
     ff2:	82 0f       	add	r24, r18
     ff4:	93 1f       	adc	r25, r19
     ff6:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <__brkval>
     ffa:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <__brkval+0x1>
     ffe:	28 17       	cp	r18, r24
    1000:	39 07       	cpc	r19, r25
    1002:	51 f5       	brne	.+84     	; 0x1058 <free+0x88>
    1004:	f0 93 6f 02 	sts	0x026F, r31	; 0x80026f <__brkval+0x1>
    1008:	e0 93 6e 02 	sts	0x026E, r30	; 0x80026e <__brkval>
    100c:	67 c0       	rjmp	.+206    	; 0x10dc <free+0x10c>
    100e:	ed 01       	movw	r28, r26
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	ce 17       	cp	r28, r30
    1016:	df 07       	cpc	r29, r31
    1018:	40 f4       	brcc	.+16     	; 0x102a <free+0x5a>
    101a:	4a 81       	ldd	r20, Y+2	; 0x02
    101c:	5b 81       	ldd	r21, Y+3	; 0x03
    101e:	9e 01       	movw	r18, r28
    1020:	41 15       	cp	r20, r1
    1022:	51 05       	cpc	r21, r1
    1024:	f1 f0       	breq	.+60     	; 0x1062 <free+0x92>
    1026:	ea 01       	movw	r28, r20
    1028:	f5 cf       	rjmp	.-22     	; 0x1014 <free+0x44>
    102a:	d3 83       	std	Z+3, r29	; 0x03
    102c:	c2 83       	std	Z+2, r28	; 0x02
    102e:	40 81       	ld	r20, Z
    1030:	51 81       	ldd	r21, Z+1	; 0x01
    1032:	84 0f       	add	r24, r20
    1034:	95 1f       	adc	r25, r21
    1036:	c8 17       	cp	r28, r24
    1038:	d9 07       	cpc	r29, r25
    103a:	59 f4       	brne	.+22     	; 0x1052 <free+0x82>
    103c:	88 81       	ld	r24, Y
    103e:	99 81       	ldd	r25, Y+1	; 0x01
    1040:	84 0f       	add	r24, r20
    1042:	95 1f       	adc	r25, r21
    1044:	02 96       	adiw	r24, 0x02	; 2
    1046:	91 83       	std	Z+1, r25	; 0x01
    1048:	80 83       	st	Z, r24
    104a:	8a 81       	ldd	r24, Y+2	; 0x02
    104c:	9b 81       	ldd	r25, Y+3	; 0x03
    104e:	93 83       	std	Z+3, r25	; 0x03
    1050:	82 83       	std	Z+2, r24	; 0x02
    1052:	21 15       	cp	r18, r1
    1054:	31 05       	cpc	r19, r1
    1056:	29 f4       	brne	.+10     	; 0x1062 <free+0x92>
    1058:	f0 93 71 02 	sts	0x0271, r31	; 0x800271 <__flp+0x1>
    105c:	e0 93 70 02 	sts	0x0270, r30	; 0x800270 <__flp>
    1060:	3d c0       	rjmp	.+122    	; 0x10dc <free+0x10c>
    1062:	e9 01       	movw	r28, r18
    1064:	fb 83       	std	Y+3, r31	; 0x03
    1066:	ea 83       	std	Y+2, r30	; 0x02
    1068:	49 91       	ld	r20, Y+
    106a:	59 91       	ld	r21, Y+
    106c:	c4 0f       	add	r28, r20
    106e:	d5 1f       	adc	r29, r21
    1070:	ec 17       	cp	r30, r28
    1072:	fd 07       	cpc	r31, r29
    1074:	61 f4       	brne	.+24     	; 0x108e <free+0xbe>
    1076:	80 81       	ld	r24, Z
    1078:	91 81       	ldd	r25, Z+1	; 0x01
    107a:	84 0f       	add	r24, r20
    107c:	95 1f       	adc	r25, r21
    107e:	02 96       	adiw	r24, 0x02	; 2
    1080:	e9 01       	movw	r28, r18
    1082:	99 83       	std	Y+1, r25	; 0x01
    1084:	88 83       	st	Y, r24
    1086:	82 81       	ldd	r24, Z+2	; 0x02
    1088:	93 81       	ldd	r25, Z+3	; 0x03
    108a:	9b 83       	std	Y+3, r25	; 0x03
    108c:	8a 83       	std	Y+2, r24	; 0x02
    108e:	e0 e0       	ldi	r30, 0x00	; 0
    1090:	f0 e0       	ldi	r31, 0x00	; 0
    1092:	12 96       	adiw	r26, 0x02	; 2
    1094:	8d 91       	ld	r24, X+
    1096:	9c 91       	ld	r25, X
    1098:	13 97       	sbiw	r26, 0x03	; 3
    109a:	00 97       	sbiw	r24, 0x00	; 0
    109c:	19 f0       	breq	.+6      	; 0x10a4 <free+0xd4>
    109e:	fd 01       	movw	r30, r26
    10a0:	dc 01       	movw	r26, r24
    10a2:	f7 cf       	rjmp	.-18     	; 0x1092 <free+0xc2>
    10a4:	8d 91       	ld	r24, X+
    10a6:	9c 91       	ld	r25, X
    10a8:	11 97       	sbiw	r26, 0x01	; 1
    10aa:	9d 01       	movw	r18, r26
    10ac:	2e 5f       	subi	r18, 0xFE	; 254
    10ae:	3f 4f       	sbci	r19, 0xFF	; 255
    10b0:	82 0f       	add	r24, r18
    10b2:	93 1f       	adc	r25, r19
    10b4:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <__brkval>
    10b8:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <__brkval+0x1>
    10bc:	28 17       	cp	r18, r24
    10be:	39 07       	cpc	r19, r25
    10c0:	69 f4       	brne	.+26     	; 0x10dc <free+0x10c>
    10c2:	30 97       	sbiw	r30, 0x00	; 0
    10c4:	29 f4       	brne	.+10     	; 0x10d0 <free+0x100>
    10c6:	10 92 71 02 	sts	0x0271, r1	; 0x800271 <__flp+0x1>
    10ca:	10 92 70 02 	sts	0x0270, r1	; 0x800270 <__flp>
    10ce:	02 c0       	rjmp	.+4      	; 0x10d4 <free+0x104>
    10d0:	13 82       	std	Z+3, r1	; 0x03
    10d2:	12 82       	std	Z+2, r1	; 0x02
    10d4:	b0 93 6f 02 	sts	0x026F, r27	; 0x80026f <__brkval+0x1>
    10d8:	a0 93 6e 02 	sts	0x026E, r26	; 0x80026e <__brkval>
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	08 95       	ret

000010e2 <strnlen_P>:
    10e2:	fc 01       	movw	r30, r24
    10e4:	05 90       	lpm	r0, Z+
    10e6:	61 50       	subi	r22, 0x01	; 1
    10e8:	70 40       	sbci	r23, 0x00	; 0
    10ea:	01 10       	cpse	r0, r1
    10ec:	d8 f7       	brcc	.-10     	; 0x10e4 <strnlen_P+0x2>
    10ee:	80 95       	com	r24
    10f0:	90 95       	com	r25
    10f2:	8e 0f       	add	r24, r30
    10f4:	9f 1f       	adc	r25, r31
    10f6:	08 95       	ret

000010f8 <memset>:
    10f8:	dc 01       	movw	r26, r24
    10fa:	01 c0       	rjmp	.+2      	; 0x10fe <memset+0x6>
    10fc:	6d 93       	st	X+, r22
    10fe:	41 50       	subi	r20, 0x01	; 1
    1100:	50 40       	sbci	r21, 0x00	; 0
    1102:	e0 f7       	brcc	.-8      	; 0x10fc <memset+0x4>
    1104:	08 95       	ret

00001106 <strnlen>:
    1106:	fc 01       	movw	r30, r24
    1108:	61 50       	subi	r22, 0x01	; 1
    110a:	70 40       	sbci	r23, 0x00	; 0
    110c:	01 90       	ld	r0, Z+
    110e:	01 10       	cpse	r0, r1
    1110:	d8 f7       	brcc	.-10     	; 0x1108 <strnlen+0x2>
    1112:	80 95       	com	r24
    1114:	90 95       	com	r25
    1116:	8e 0f       	add	r24, r30
    1118:	9f 1f       	adc	r25, r31
    111a:	08 95       	ret

0000111c <strrev>:
    111c:	dc 01       	movw	r26, r24
    111e:	fc 01       	movw	r30, r24
    1120:	67 2f       	mov	r22, r23
    1122:	71 91       	ld	r23, Z+
    1124:	77 23       	and	r23, r23
    1126:	e1 f7       	brne	.-8      	; 0x1120 <strrev+0x4>
    1128:	32 97       	sbiw	r30, 0x02	; 2
    112a:	04 c0       	rjmp	.+8      	; 0x1134 <strrev+0x18>
    112c:	7c 91       	ld	r23, X
    112e:	6d 93       	st	X+, r22
    1130:	70 83       	st	Z, r23
    1132:	62 91       	ld	r22, -Z
    1134:	ae 17       	cp	r26, r30
    1136:	bf 07       	cpc	r27, r31
    1138:	c8 f3       	brcs	.-14     	; 0x112c <strrev+0x10>
    113a:	08 95       	ret

0000113c <fputc>:
    113c:	0f 93       	push	r16
    113e:	1f 93       	push	r17
    1140:	cf 93       	push	r28
    1142:	df 93       	push	r29
    1144:	fb 01       	movw	r30, r22
    1146:	23 81       	ldd	r18, Z+3	; 0x03
    1148:	21 fd       	sbrc	r18, 1
    114a:	03 c0       	rjmp	.+6      	; 0x1152 <fputc+0x16>
    114c:	8f ef       	ldi	r24, 0xFF	; 255
    114e:	9f ef       	ldi	r25, 0xFF	; 255
    1150:	2c c0       	rjmp	.+88     	; 0x11aa <fputc+0x6e>
    1152:	22 ff       	sbrs	r18, 2
    1154:	16 c0       	rjmp	.+44     	; 0x1182 <fputc+0x46>
    1156:	46 81       	ldd	r20, Z+6	; 0x06
    1158:	57 81       	ldd	r21, Z+7	; 0x07
    115a:	24 81       	ldd	r18, Z+4	; 0x04
    115c:	35 81       	ldd	r19, Z+5	; 0x05
    115e:	42 17       	cp	r20, r18
    1160:	53 07       	cpc	r21, r19
    1162:	44 f4       	brge	.+16     	; 0x1174 <fputc+0x38>
    1164:	a0 81       	ld	r26, Z
    1166:	b1 81       	ldd	r27, Z+1	; 0x01
    1168:	9d 01       	movw	r18, r26
    116a:	2f 5f       	subi	r18, 0xFF	; 255
    116c:	3f 4f       	sbci	r19, 0xFF	; 255
    116e:	31 83       	std	Z+1, r19	; 0x01
    1170:	20 83       	st	Z, r18
    1172:	8c 93       	st	X, r24
    1174:	26 81       	ldd	r18, Z+6	; 0x06
    1176:	37 81       	ldd	r19, Z+7	; 0x07
    1178:	2f 5f       	subi	r18, 0xFF	; 255
    117a:	3f 4f       	sbci	r19, 0xFF	; 255
    117c:	37 83       	std	Z+7, r19	; 0x07
    117e:	26 83       	std	Z+6, r18	; 0x06
    1180:	14 c0       	rjmp	.+40     	; 0x11aa <fputc+0x6e>
    1182:	8b 01       	movw	r16, r22
    1184:	ec 01       	movw	r28, r24
    1186:	fb 01       	movw	r30, r22
    1188:	00 84       	ldd	r0, Z+8	; 0x08
    118a:	f1 85       	ldd	r31, Z+9	; 0x09
    118c:	e0 2d       	mov	r30, r0
    118e:	19 95       	eicall
    1190:	89 2b       	or	r24, r25
    1192:	e1 f6       	brne	.-72     	; 0x114c <fputc+0x10>
    1194:	d8 01       	movw	r26, r16
    1196:	16 96       	adiw	r26, 0x06	; 6
    1198:	8d 91       	ld	r24, X+
    119a:	9c 91       	ld	r25, X
    119c:	17 97       	sbiw	r26, 0x07	; 7
    119e:	01 96       	adiw	r24, 0x01	; 1
    11a0:	17 96       	adiw	r26, 0x07	; 7
    11a2:	9c 93       	st	X, r25
    11a4:	8e 93       	st	-X, r24
    11a6:	16 97       	sbiw	r26, 0x06	; 6
    11a8:	ce 01       	movw	r24, r28
    11aa:	df 91       	pop	r29
    11ac:	cf 91       	pop	r28
    11ae:	1f 91       	pop	r17
    11b0:	0f 91       	pop	r16
    11b2:	08 95       	ret

000011b4 <__ultoa_invert>:
    11b4:	fa 01       	movw	r30, r20
    11b6:	aa 27       	eor	r26, r26
    11b8:	28 30       	cpi	r18, 0x08	; 8
    11ba:	51 f1       	breq	.+84     	; 0x1210 <__ultoa_invert+0x5c>
    11bc:	20 31       	cpi	r18, 0x10	; 16
    11be:	81 f1       	breq	.+96     	; 0x1220 <__ultoa_invert+0x6c>
    11c0:	e8 94       	clt
    11c2:	6f 93       	push	r22
    11c4:	6e 7f       	andi	r22, 0xFE	; 254
    11c6:	6e 5f       	subi	r22, 0xFE	; 254
    11c8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ca:	8f 4f       	sbci	r24, 0xFF	; 255
    11cc:	9f 4f       	sbci	r25, 0xFF	; 255
    11ce:	af 4f       	sbci	r26, 0xFF	; 255
    11d0:	b1 e0       	ldi	r27, 0x01	; 1
    11d2:	3e d0       	rcall	.+124    	; 0x1250 <__ultoa_invert+0x9c>
    11d4:	b4 e0       	ldi	r27, 0x04	; 4
    11d6:	3c d0       	rcall	.+120    	; 0x1250 <__ultoa_invert+0x9c>
    11d8:	67 0f       	add	r22, r23
    11da:	78 1f       	adc	r23, r24
    11dc:	89 1f       	adc	r24, r25
    11de:	9a 1f       	adc	r25, r26
    11e0:	a1 1d       	adc	r26, r1
    11e2:	68 0f       	add	r22, r24
    11e4:	79 1f       	adc	r23, r25
    11e6:	8a 1f       	adc	r24, r26
    11e8:	91 1d       	adc	r25, r1
    11ea:	a1 1d       	adc	r26, r1
    11ec:	6a 0f       	add	r22, r26
    11ee:	71 1d       	adc	r23, r1
    11f0:	81 1d       	adc	r24, r1
    11f2:	91 1d       	adc	r25, r1
    11f4:	a1 1d       	adc	r26, r1
    11f6:	20 d0       	rcall	.+64     	; 0x1238 <__ultoa_invert+0x84>
    11f8:	09 f4       	brne	.+2      	; 0x11fc <__ultoa_invert+0x48>
    11fa:	68 94       	set
    11fc:	3f 91       	pop	r19
    11fe:	2a e0       	ldi	r18, 0x0A	; 10
    1200:	26 9f       	mul	r18, r22
    1202:	11 24       	eor	r1, r1
    1204:	30 19       	sub	r19, r0
    1206:	30 5d       	subi	r19, 0xD0	; 208
    1208:	31 93       	st	Z+, r19
    120a:	de f6       	brtc	.-74     	; 0x11c2 <__ultoa_invert+0xe>
    120c:	cf 01       	movw	r24, r30
    120e:	08 95       	ret
    1210:	46 2f       	mov	r20, r22
    1212:	47 70       	andi	r20, 0x07	; 7
    1214:	40 5d       	subi	r20, 0xD0	; 208
    1216:	41 93       	st	Z+, r20
    1218:	b3 e0       	ldi	r27, 0x03	; 3
    121a:	0f d0       	rcall	.+30     	; 0x123a <__ultoa_invert+0x86>
    121c:	c9 f7       	brne	.-14     	; 0x1210 <__ultoa_invert+0x5c>
    121e:	f6 cf       	rjmp	.-20     	; 0x120c <__ultoa_invert+0x58>
    1220:	46 2f       	mov	r20, r22
    1222:	4f 70       	andi	r20, 0x0F	; 15
    1224:	40 5d       	subi	r20, 0xD0	; 208
    1226:	4a 33       	cpi	r20, 0x3A	; 58
    1228:	18 f0       	brcs	.+6      	; 0x1230 <__ultoa_invert+0x7c>
    122a:	49 5d       	subi	r20, 0xD9	; 217
    122c:	31 fd       	sbrc	r19, 1
    122e:	40 52       	subi	r20, 0x20	; 32
    1230:	41 93       	st	Z+, r20
    1232:	02 d0       	rcall	.+4      	; 0x1238 <__ultoa_invert+0x84>
    1234:	a9 f7       	brne	.-22     	; 0x1220 <__ultoa_invert+0x6c>
    1236:	ea cf       	rjmp	.-44     	; 0x120c <__ultoa_invert+0x58>
    1238:	b4 e0       	ldi	r27, 0x04	; 4
    123a:	a6 95       	lsr	r26
    123c:	97 95       	ror	r25
    123e:	87 95       	ror	r24
    1240:	77 95       	ror	r23
    1242:	67 95       	ror	r22
    1244:	ba 95       	dec	r27
    1246:	c9 f7       	brne	.-14     	; 0x123a <__ultoa_invert+0x86>
    1248:	00 97       	sbiw	r24, 0x00	; 0
    124a:	61 05       	cpc	r22, r1
    124c:	71 05       	cpc	r23, r1
    124e:	08 95       	ret
    1250:	9b 01       	movw	r18, r22
    1252:	ac 01       	movw	r20, r24
    1254:	0a 2e       	mov	r0, r26
    1256:	06 94       	lsr	r0
    1258:	57 95       	ror	r21
    125a:	47 95       	ror	r20
    125c:	37 95       	ror	r19
    125e:	27 95       	ror	r18
    1260:	ba 95       	dec	r27
    1262:	c9 f7       	brne	.-14     	; 0x1256 <__ultoa_invert+0xa2>
    1264:	62 0f       	add	r22, r18
    1266:	73 1f       	adc	r23, r19
    1268:	84 1f       	adc	r24, r20
    126a:	95 1f       	adc	r25, r21
    126c:	a0 1d       	adc	r26, r0
    126e:	08 95       	ret

00001270 <_exit>:
    1270:	f8 94       	cli

00001272 <__stop_program>:
    1272:	ff cf       	rjmp	.-2      	; 0x1272 <__stop_program>
