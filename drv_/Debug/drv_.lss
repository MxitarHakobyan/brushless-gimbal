
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005e  00800200  000011be  00001252  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  0080025e  0080025e  000012b0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000130c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  0000134c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ae7  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001009  00000000  00000000  00002f33  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b20  00000000  00000000  00003f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e8  00000000  00000000  00004a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000084c  00000000  00000000  00004d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cb7  00000000  00000000  00005590  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00006247  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee eb       	ldi	r30, 0xBE	; 190
      fc:	f1 e1       	ldi	r31, 0x11	; 17
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 35       	cpi	r26, 0x5E	; 94
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	ae e5       	ldi	r26, 0x5E	; 94
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a8 37       	cpi	r26, 0x78	; 120
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	30 d2       	rcall	.+1120   	; 0x580 <main>
     120:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <uart_putchar>:
#define accZ (mpu6050_read_accelZ()-accelZ_calib) 

FILE * uart_str;
static int uart_putchar(char c, FILE *stream);
static int uart_putchar(char c, FILE *stream)
{
     126:	cf 93       	push	r28
     128:	c8 2f       	mov	r28, r24

	if (c == '\n')
     12a:	8a 30       	cpi	r24, 0x0A	; 10
     12c:	11 f4       	brne	.+4      	; 0x132 <uart_putchar+0xc>
	uart_putchar('\r', stream);
     12e:	8d e0       	ldi	r24, 0x0D	; 13
     130:	fa df       	rcall	.-12     	; 0x126 <uart_putchar>
	while ( !( UCSR0A & (1<<UDRE0)) )
     132:	e0 ec       	ldi	r30, 0xC0	; 192
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	85 ff       	sbrs	r24, 5
     13a:	fd cf       	rjmp	.-6      	; 0x136 <uart_putchar+0x10>
	;
	/* Put data into buffer, sends the data */
	UDR0 = c;
     13c:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	return 0;
}
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	cf 91       	pop	r28
     146:	08 95       	ret

00000148 <mpu6050_rb>:
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_H);
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_L);
	return axis_value;
}
uint8_t mpu6050_rb(uint8_t byteToRead)
{
     148:	cf 93       	push	r28
     14a:	c8 2f       	mov	r28, r24
	i2c_start(MPU6050_WRITE);
     14c:	80 ed       	ldi	r24, 0xD0	; 208
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	b4 d2       	rcall	.+1384   	; 0x6ba <i2c_start>
	i2c_write(byteToRead);
     152:	8c 2f       	mov	r24, r28
     154:	90 e0       	ldi	r25, 0x00	; 0
	i2c_stop();
	
	i2c_start(MPU6050_READ);
     156:	07 d3       	rcall	.+1550   	; 0x766 <i2c_write>
     158:	f6 d2       	rcall	.+1516   	; 0x746 <i2c_stop>
	uint8_t byteToReturn=i2c_readNak();
     15a:	81 ed       	ldi	r24, 0xD1	; 209
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	ad d2       	rcall	.+1370   	; 0x6ba <i2c_start>
	i2c_stop();
     160:	23 d3       	rcall	.+1606   	; 0x7a8 <i2c_readNak>
     162:	c8 2f       	mov	r28, r24
	return byteToReturn;
}
     164:	f0 d2       	rcall	.+1504   	; 0x746 <i2c_stop>
     166:	8c 2f       	mov	r24, r28
     168:	cf 91       	pop	r28
     16a:	08 95       	ret

0000016c <mpu6050_read_gyroX>:
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
}
uint16_t mpu6050_read_gyroX()//axis x=0,y=1,z=2
{
     16c:	cf 93       	push	r28
     16e:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_XOUT_H);
     170:	83 e4       	ldi	r24, 0x43	; 67
     172:	ea df       	rcall	.-44     	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_XOUT_L);
     174:	c8 2f       	mov	r28, r24
     176:	d0 e0       	ldi	r29, 0x00	; 0
     178:	dc 2f       	mov	r29, r28
     17a:	cc 27       	eor	r28, r28
     17c:	84 e4       	ldi	r24, 0x44	; 68
     17e:	e4 df       	rcall	.-56     	; 0x148 <mpu6050_rb>
	return axis_value;
}
     180:	9e 01       	movw	r18, r28
     182:	28 2b       	or	r18, r24
     184:	c9 01       	movw	r24, r18
     186:	df 91       	pop	r29
     188:	cf 91       	pop	r28
     18a:	08 95       	ret

0000018c <mpu6050_read_gyroY>:
uint16_t mpu6050_read_gyroY()//axis x=0,y=1,z=2
{
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_YOUT_H);
     190:	85 e4       	ldi	r24, 0x45	; 69
     192:	da df       	rcall	.-76     	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_YOUT_L);
     194:	c8 2f       	mov	r28, r24
     196:	d0 e0       	ldi	r29, 0x00	; 0
     198:	dc 2f       	mov	r29, r28
     19a:	cc 27       	eor	r28, r28
     19c:	86 e4       	ldi	r24, 0x46	; 70
     19e:	d4 df       	rcall	.-88     	; 0x148 <mpu6050_rb>
	return axis_value;
}
     1a0:	9e 01       	movw	r18, r28
     1a2:	28 2b       	or	r18, r24
     1a4:	c9 01       	movw	r24, r18
     1a6:	df 91       	pop	r29
     1a8:	cf 91       	pop	r28
     1aa:	08 95       	ret

000001ac <mpu6050_read_gyroZ>:
uint16_t mpu6050_read_gyroZ()//axis x=0,y=1,z=2
{
     1ac:	cf 93       	push	r28
     1ae:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_ZOUT_H);
     1b0:	87 e4       	ldi	r24, 0x47	; 71
     1b2:	ca df       	rcall	.-108    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_ZOUT_L);
     1b4:	c8 2f       	mov	r28, r24
     1b6:	d0 e0       	ldi	r29, 0x00	; 0
     1b8:	dc 2f       	mov	r29, r28
     1ba:	cc 27       	eor	r28, r28
     1bc:	88 e4       	ldi	r24, 0x48	; 72
     1be:	c4 df       	rcall	.-120    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     1c0:	9e 01       	movw	r18, r28
     1c2:	28 2b       	or	r18, r24
     1c4:	c9 01       	movw	r24, r18
     1c6:	df 91       	pop	r29
     1c8:	cf 91       	pop	r28
     1ca:	08 95       	ret

000001cc <mpu6050_calibrate_gyro>:
					  
	}
	return 0;
}
void mpu6050_calibrate_gyro(int16_t *x,int16_t *y, int16_t *z)
{
     1cc:	cf 92       	push	r12
     1ce:	df 92       	push	r13
     1d0:	ef 92       	push	r14
     1d2:	ff 92       	push	r15
     1d4:	0f 93       	push	r16
     1d6:	1f 93       	push	r17
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	7c 01       	movw	r14, r24
     1de:	8b 01       	movw	r16, r22
     1e0:	ea 01       	movw	r28, r20
	printf("Calibrating Gyro...\n");
     1e2:	86 e0       	ldi	r24, 0x06	; 6
     1e4:	92 e0       	ldi	r25, 0x02	; 2
     1e6:	ba d3       	rcall	.+1908   	; 0x95c <puts>
     1e8:	0f 2e       	mov	r0, r31
     1ea:	f4 e6       	ldi	r31, 0x64	; 100
     1ec:	cf 2e       	mov	r12, r31
     1ee:	d1 2c       	mov	r13, r1
	for (int i=0;i<100;i++)
	{
		(*x)+=mpu6050_read_gyroX();
     1f0:	f0 2d       	mov	r31, r0
     1f2:	bc df       	rcall	.-136    	; 0x16c <mpu6050_read_gyroX>
     1f4:	f7 01       	movw	r30, r14
     1f6:	20 81       	ld	r18, Z
     1f8:	31 81       	ldd	r19, Z+1	; 0x01
     1fa:	82 0f       	add	r24, r18
     1fc:	93 1f       	adc	r25, r19
     1fe:	91 83       	std	Z+1, r25	; 0x01
		(*y)+=mpu6050_read_gyroY();
     200:	80 83       	st	Z, r24
     202:	c4 df       	rcall	.-120    	; 0x18c <mpu6050_read_gyroY>
     204:	f8 01       	movw	r30, r16
     206:	20 81       	ld	r18, Z
     208:	31 81       	ldd	r19, Z+1	; 0x01
     20a:	82 0f       	add	r24, r18
     20c:	93 1f       	adc	r25, r19
     20e:	91 83       	std	Z+1, r25	; 0x01
		(*z)+=mpu6050_read_gyroZ();
     210:	80 83       	st	Z, r24
     212:	cc df       	rcall	.-104    	; 0x1ac <mpu6050_read_gyroZ>
     214:	28 81       	ld	r18, Y
     216:	39 81       	ldd	r19, Y+1	; 0x01
     218:	82 0f       	add	r24, r18
     21a:	93 1f       	adc	r25, r19
     21c:	99 83       	std	Y+1, r25	; 0x01
     21e:	88 83       	st	Y, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     220:	8f e1       	ldi	r24, 0x1F	; 31
     222:	9e e4       	ldi	r25, 0x4E	; 78
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	f1 f7       	brne	.-4      	; 0x224 <mpu6050_calibrate_gyro+0x58>
     228:	00 c0       	rjmp	.+0      	; 0x22a <mpu6050_calibrate_gyro+0x5e>
     22a:	00 00       	nop
     22c:	91 e0       	ldi	r25, 0x01	; 1
     22e:	c9 1a       	sub	r12, r25
     230:	d1 08       	sbc	r13, r1
	return 0;
}
void mpu6050_calibrate_gyro(int16_t *x,int16_t *y, int16_t *z)
{
	printf("Calibrating Gyro...\n");
	for (int i=0;i<100;i++)
     232:	f9 f6       	brne	.-66     	; 0x1f2 <mpu6050_calibrate_gyro+0x26>
		(*x)+=mpu6050_read_gyroX();
		(*y)+=mpu6050_read_gyroY();
		(*z)+=mpu6050_read_gyroZ();
		_delay_ms(5);
	}
		if(*x<0)
     234:	f7 01       	movw	r30, r14
     236:	20 81       	ld	r18, Z
     238:	31 81       	ldd	r19, Z+1	; 0x01
     23a:	33 23       	and	r19, r19
     23c:	6c f4       	brge	.+26     	; 0x258 <mpu6050_calibrate_gyro+0x8c>
		(*x)=abs(*x)/100;
     23e:	c9 01       	movw	r24, r18
     240:	99 23       	and	r25, r25
     242:	24 f4       	brge	.+8      	; 0x24c <mpu6050_calibrate_gyro+0x80>
     244:	88 27       	eor	r24, r24
     246:	99 27       	eor	r25, r25
     248:	82 1b       	sub	r24, r18
     24a:	93 0b       	sbc	r25, r19
     24c:	64 e6       	ldi	r22, 0x64	; 100
     24e:	70 e0       	ldi	r23, 0x00	; 0
     250:	d0 d2       	rcall	.+1440   	; 0x7f2 <__divmodhi4>
     252:	f7 01       	movw	r30, r14
     254:	71 83       	std	Z+1, r23	; 0x01
     256:	60 83       	st	Z, r22
		if(*y<0)
     258:	f8 01       	movw	r30, r16
     25a:	20 81       	ld	r18, Z
     25c:	31 81       	ldd	r19, Z+1	; 0x01
     25e:	33 23       	and	r19, r19
     260:	6c f4       	brge	.+26     	; 0x27c <mpu6050_calibrate_gyro+0xb0>
		(*y)=abs(*y)/100;
     262:	c9 01       	movw	r24, r18
     264:	99 23       	and	r25, r25
     266:	24 f4       	brge	.+8      	; 0x270 <mpu6050_calibrate_gyro+0xa4>
     268:	88 27       	eor	r24, r24
     26a:	99 27       	eor	r25, r25
     26c:	82 1b       	sub	r24, r18
     26e:	93 0b       	sbc	r25, r19
     270:	64 e6       	ldi	r22, 0x64	; 100
     272:	70 e0       	ldi	r23, 0x00	; 0
     274:	be d2       	rcall	.+1404   	; 0x7f2 <__divmodhi4>
     276:	f8 01       	movw	r30, r16
     278:	71 83       	std	Z+1, r23	; 0x01
     27a:	60 83       	st	Z, r22
		if(*z<0)
     27c:	28 81       	ld	r18, Y
     27e:	39 81       	ldd	r19, Y+1	; 0x01
     280:	33 23       	and	r19, r19
     282:	64 f4       	brge	.+24     	; 0x29c <mpu6050_calibrate_gyro+0xd0>
		(*z)=abs(*z)/100;	
     284:	c9 01       	movw	r24, r18
     286:	99 23       	and	r25, r25
     288:	24 f4       	brge	.+8      	; 0x292 <mpu6050_calibrate_gyro+0xc6>
     28a:	88 27       	eor	r24, r24
     28c:	99 27       	eor	r25, r25
     28e:	82 1b       	sub	r24, r18
     290:	93 0b       	sbc	r25, r19
     292:	64 e6       	ldi	r22, 0x64	; 100
     294:	70 e0       	ldi	r23, 0x00	; 0
     296:	ad d2       	rcall	.+1370   	; 0x7f2 <__divmodhi4>
     298:	79 83       	std	Y+1, r23	; 0x01
     29a:	68 83       	st	Y, r22
}
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	1f 91       	pop	r17
     2a2:	0f 91       	pop	r16
     2a4:	ff 90       	pop	r15
     2a6:	ef 90       	pop	r14
     2a8:	df 90       	pop	r13
     2aa:	cf 90       	pop	r12
     2ac:	08 95       	ret

000002ae <mpu6050_read_accelX>:
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_GYRO_ZOUT_H);
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_GYRO_ZOUT_L);
	return axis_value;
}
uint16_t mpu6050_read_accelX()
{
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_XOUT_H);
     2b2:	8b e3       	ldi	r24, 0x3B	; 59
     2b4:	49 df       	rcall	.-366    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_XOUT_L);
     2b6:	c8 2f       	mov	r28, r24
     2b8:	d0 e0       	ldi	r29, 0x00	; 0
     2ba:	dc 2f       	mov	r29, r28
     2bc:	cc 27       	eor	r28, r28
     2be:	8c e3       	ldi	r24, 0x3C	; 60
     2c0:	43 df       	rcall	.-378    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     2c2:	9e 01       	movw	r18, r28
     2c4:	28 2b       	or	r18, r24
     2c6:	c9 01       	movw	r24, r18
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	08 95       	ret

000002ce <mpu6050_read_accelY>:
uint16_t mpu6050_read_accelY()
{
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_YOUT_H);
     2d2:	8d e3       	ldi	r24, 0x3D	; 61
     2d4:	39 df       	rcall	.-398    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_YOUT_L);
     2d6:	c8 2f       	mov	r28, r24
     2d8:	d0 e0       	ldi	r29, 0x00	; 0
     2da:	dc 2f       	mov	r29, r28
     2dc:	cc 27       	eor	r28, r28
     2de:	8e e3       	ldi	r24, 0x3E	; 62
     2e0:	33 df       	rcall	.-410    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     2e2:	9e 01       	movw	r18, r28
     2e4:	28 2b       	or	r18, r24
     2e6:	c9 01       	movw	r24, r18
     2e8:	df 91       	pop	r29
     2ea:	cf 91       	pop	r28
     2ec:	08 95       	ret

000002ee <mpu6050_read_accelZ>:
uint16_t mpu6050_read_accelZ()
{
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
	uint16_t axis_value=mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_H);
     2f2:	8f e3       	ldi	r24, 0x3F	; 63
     2f4:	29 df       	rcall	.-430    	; 0x148 <mpu6050_rb>
	axis_value=(axis_value<<8) | mpu6050_rb(MPU6050_RA_ACCEL_ZOUT_L);
     2f6:	c8 2f       	mov	r28, r24
     2f8:	d0 e0       	ldi	r29, 0x00	; 0
     2fa:	dc 2f       	mov	r29, r28
     2fc:	cc 27       	eor	r28, r28
     2fe:	80 e4       	ldi	r24, 0x40	; 64
     300:	23 df       	rcall	.-442    	; 0x148 <mpu6050_rb>
	return axis_value;
}
     302:	9e 01       	movw	r18, r28
     304:	28 2b       	or	r18, r24
     306:	c9 01       	movw	r24, r18
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <print16>:
//}

void print16(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     30e:	0f 93       	push	r16
     310:	1f 93       	push	r17
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	cd b7       	in	r28, 0x3d	; 61
     318:	de b7       	in	r29, 0x3e	; 62
     31a:	2a 97       	sbiw	r28, 0x0a	; 10
     31c:	0f b6       	in	r0, 0x3f	; 63
     31e:	f8 94       	cli
     320:	de bf       	out	0x3e, r29	; 62
     322:	0f be       	out	0x3f, r0	; 63
     324:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     326:	4a e0       	ldi	r20, 0x0A	; 10
     328:	8e 01       	movw	r16, r28
     32a:	0f 5f       	subi	r16, 0xFF	; 255
     32c:	1f 4f       	sbci	r17, 0xFF	; 255
     32e:	b8 01       	movw	r22, r16
     330:	fc 01       	movw	r30, r24
     332:	80 81       	ld	r24, Z
     334:	91 81       	ldd	r25, Z+1	; 0x01
     336:	8d d2       	rcall	.+1306   	; 0x852 <__itoa_ncheck>
	//uint8_t seccond_=(uint8_t)((*value-first_*1000)/100);
	//uint8_t third_=(uint8_t)((*value-first_*1000-seccond_*100)/10);
	//uint8_t fourth_=*value-first_*1000-seccond_*100-third_*10;
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     338:	1f 93       	push	r17
     33a:	0f 93       	push	r16
     33c:	f7 d2       	rcall	.+1518   	; 0x92c <printf>
	//printf("\n");
}
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	2a 96       	adiw	r28, 0x0a	; 10
     344:	0f b6       	in	r0, 0x3f	; 63
     346:	f8 94       	cli
     348:	de bf       	out	0x3e, r29	; 62
     34a:	0f be       	out	0x3f, r0	; 63
     34c:	cd bf       	out	0x3d, r28	; 61
     34e:	df 91       	pop	r29
     350:	cf 91       	pop	r28
     352:	1f 91       	pop	r17
     354:	0f 91       	pop	r16
     356:	08 95       	ret

00000358 <print16ln>:

void print16ln(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     358:	0f 93       	push	r16
     35a:	1f 93       	push	r17
     35c:	cf 93       	push	r28
     35e:	df 93       	push	r29
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
     364:	2a 97       	sbiw	r28, 0x0a	; 10
     366:	0f b6       	in	r0, 0x3f	; 63
     368:	f8 94       	cli
     36a:	de bf       	out	0x3e, r29	; 62
     36c:	0f be       	out	0x3f, r0	; 63
     36e:	cd bf       	out	0x3d, r28	; 61
     370:	4a e0       	ldi	r20, 0x0A	; 10
     372:	8e 01       	movw	r16, r28
     374:	0f 5f       	subi	r16, 0xFF	; 255
     376:	1f 4f       	sbci	r17, 0xFF	; 255
     378:	b8 01       	movw	r22, r16
     37a:	fc 01       	movw	r30, r24
     37c:	80 81       	ld	r24, Z
     37e:	91 81       	ldd	r25, Z+1	; 0x01
     380:	68 d2       	rcall	.+1232   	; 0x852 <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     382:	1f 93       	push	r17
     384:	0f 93       	push	r16
	printf("\n");
     386:	d2 d2       	rcall	.+1444   	; 0x92c <printf>
     388:	8a e0       	ldi	r24, 0x0A	; 10
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	e2 d2       	rcall	.+1476   	; 0x952 <putchar>
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	2a 96       	adiw	r28, 0x0a	; 10
     394:	0f b6       	in	r0, 0x3f	; 63
     396:	f8 94       	cli
     398:	de bf       	out	0x3e, r29	; 62
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	cd bf       	out	0x3d, r28	; 61
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	1f 91       	pop	r17
     3a4:	0f 91       	pop	r16
     3a6:	08 95       	ret

000003a8 <mpu6050_calibrate_accel>:
		(*y)=abs(*y)/100;
		if(*z<0)
		(*z)=abs(*z)/100;	
}
void mpu6050_calibrate_accel(int64_t *x,int64_t *y, int64_t *z)
{
     3a8:	4f 92       	push	r4
     3aa:	5f 92       	push	r5
     3ac:	6f 92       	push	r6
     3ae:	7f 92       	push	r7
     3b0:	8f 92       	push	r8
     3b2:	9f 92       	push	r9
     3b4:	af 92       	push	r10
     3b6:	bf 92       	push	r11
     3b8:	cf 92       	push	r12
     3ba:	df 92       	push	r13
     3bc:	ef 92       	push	r14
     3be:	ff 92       	push	r15
     3c0:	0f 93       	push	r16
     3c2:	1f 93       	push	r17
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	3c 01       	movw	r6, r24
     3ca:	4b 01       	movw	r8, r22
     3cc:	ea 01       	movw	r28, r20
	
	printf("Calibrating Accelerometer...\n");
     3ce:	8a e1       	ldi	r24, 0x1A	; 26
     3d0:	92 e0       	ldi	r25, 0x02	; 2
     3d2:	c4 d2       	rcall	.+1416   	; 0x95c <puts>
     3d4:	0f 2e       	mov	r0, r31
     3d6:	f4 e6       	ldi	r31, 0x64	; 100
     3d8:	4f 2e       	mov	r4, r31
     3da:	51 2c       	mov	r5, r1
	for(int i=0;i<100;i++){
		(*x)+=mpu6050_read_accelX();
     3dc:	f0 2d       	mov	r31, r0
     3de:	67 df       	rcall	.-306    	; 0x2ae <mpu6050_read_accelX>
     3e0:	ac 01       	movw	r20, r24
     3e2:	24 2f       	mov	r18, r20
     3e4:	35 2f       	mov	r19, r21
     3e6:	40 e0       	ldi	r20, 0x00	; 0
     3e8:	50 e0       	ldi	r21, 0x00	; 0
     3ea:	60 e0       	ldi	r22, 0x00	; 0
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	f3 01       	movw	r30, r6
     3f4:	a0 80       	ld	r10, Z
     3f6:	b1 80       	ldd	r11, Z+1	; 0x01
     3f8:	c2 80       	ldd	r12, Z+2	; 0x02
     3fa:	d3 80       	ldd	r13, Z+3	; 0x03
     3fc:	e4 80       	ldd	r14, Z+4	; 0x04
     3fe:	f5 80       	ldd	r15, Z+5	; 0x05
     400:	06 81       	ldd	r16, Z+6	; 0x06
     402:	17 81       	ldd	r17, Z+7	; 0x07
     404:	09 d2       	rcall	.+1042   	; 0x818 <__adddi3>
     406:	20 83       	st	Z, r18
     408:	31 83       	std	Z+1, r19	; 0x01
     40a:	42 83       	std	Z+2, r20	; 0x02
     40c:	53 83       	std	Z+3, r21	; 0x03
     40e:	64 83       	std	Z+4, r22	; 0x04
     410:	75 83       	std	Z+5, r23	; 0x05
     412:	86 83       	std	Z+6, r24	; 0x06
		(*y)+=mpu6050_read_accelY();
     414:	97 83       	std	Z+7, r25	; 0x07
     416:	5b df       	rcall	.-330    	; 0x2ce <mpu6050_read_accelY>
     418:	ac 01       	movw	r20, r24
     41a:	24 2f       	mov	r18, r20
     41c:	35 2f       	mov	r19, r21
     41e:	40 e0       	ldi	r20, 0x00	; 0
     420:	50 e0       	ldi	r21, 0x00	; 0
     422:	60 e0       	ldi	r22, 0x00	; 0
     424:	70 e0       	ldi	r23, 0x00	; 0
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	f4 01       	movw	r30, r8
     42c:	a0 80       	ld	r10, Z
     42e:	b1 80       	ldd	r11, Z+1	; 0x01
     430:	c2 80       	ldd	r12, Z+2	; 0x02
     432:	d3 80       	ldd	r13, Z+3	; 0x03
     434:	e4 80       	ldd	r14, Z+4	; 0x04
     436:	f5 80       	ldd	r15, Z+5	; 0x05
     438:	06 81       	ldd	r16, Z+6	; 0x06
     43a:	17 81       	ldd	r17, Z+7	; 0x07
     43c:	ed d1       	rcall	.+986    	; 0x818 <__adddi3>
     43e:	20 83       	st	Z, r18
     440:	31 83       	std	Z+1, r19	; 0x01
     442:	42 83       	std	Z+2, r20	; 0x02
     444:	53 83       	std	Z+3, r21	; 0x03
     446:	64 83       	std	Z+4, r22	; 0x04
     448:	75 83       	std	Z+5, r23	; 0x05
     44a:	86 83       	std	Z+6, r24	; 0x06
		(*z)+=mpu6050_read_accelZ();
     44c:	97 83       	std	Z+7, r25	; 0x07
     44e:	4f df       	rcall	.-354    	; 0x2ee <mpu6050_read_accelZ>
     450:	ac 01       	movw	r20, r24
     452:	24 2f       	mov	r18, r20
     454:	35 2f       	mov	r19, r21
     456:	40 e0       	ldi	r20, 0x00	; 0
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	60 e0       	ldi	r22, 0x00	; 0
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	80 e0       	ldi	r24, 0x00	; 0
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	a8 80       	ld	r10, Y
     464:	b9 80       	ldd	r11, Y+1	; 0x01
     466:	ca 80       	ldd	r12, Y+2	; 0x02
     468:	db 80       	ldd	r13, Y+3	; 0x03
     46a:	ec 80       	ldd	r14, Y+4	; 0x04
     46c:	fd 80       	ldd	r15, Y+5	; 0x05
     46e:	0e 81       	ldd	r16, Y+6	; 0x06
     470:	1f 81       	ldd	r17, Y+7	; 0x07
     472:	d2 d1       	rcall	.+932    	; 0x818 <__adddi3>
     474:	28 83       	st	Y, r18
     476:	39 83       	std	Y+1, r19	; 0x01
     478:	4a 83       	std	Y+2, r20	; 0x02
     47a:	5b 83       	std	Y+3, r21	; 0x03
     47c:	6c 83       	std	Y+4, r22	; 0x04
     47e:	7d 83       	std	Y+5, r23	; 0x05
     480:	8e 83       	std	Y+6, r24	; 0x06
     482:	9f 83       	std	Y+7, r25	; 0x07
     484:	8f e1       	ldi	r24, 0x1F	; 31
     486:	9e e4       	ldi	r25, 0x4E	; 78
     488:	01 97       	sbiw	r24, 0x01	; 1
     48a:	f1 f7       	brne	.-4      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     48c:	00 c0       	rjmp	.+0      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     48e:	00 00       	nop
     490:	91 e0       	ldi	r25, 0x01	; 1
     492:	49 1a       	sub	r4, r25
     494:	51 08       	sbc	r5, r1
}
void mpu6050_calibrate_accel(int64_t *x,int64_t *y, int64_t *z)
{
	
	printf("Calibrating Accelerometer...\n");
	for(int i=0;i<100;i++){
     496:	09 f0       	breq	.+2      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     498:	a2 cf       	rjmp	.-188    	; 0x3de <mpu6050_calibrate_accel+0x36>
		(*y)+=mpu6050_read_accelY();
		(*z)+=mpu6050_read_accelZ();
		_delay_ms(5);
	}
	//if(*x<0)
	(*x)=abs(*x)/100;
     49a:	f3 01       	movw	r30, r6
     49c:	80 81       	ld	r24, Z
     49e:	91 81       	ldd	r25, Z+1	; 0x01
     4a0:	99 23       	and	r25, r25
     4a2:	1c f4       	brge	.+6      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     4a4:	91 95       	neg	r25
     4a6:	81 95       	neg	r24
     4a8:	91 09       	sbc	r25, r1
     4aa:	64 e6       	ldi	r22, 0x64	; 100
     4ac:	70 e0       	ldi	r23, 0x00	; 0
     4ae:	a1 d1       	rcall	.+834    	; 0x7f2 <__divmodhi4>
     4b0:	f3 01       	movw	r30, r6
     4b2:	60 83       	st	Z, r22
     4b4:	71 83       	std	Z+1, r23	; 0x01
     4b6:	77 0f       	add	r23, r23
     4b8:	77 0b       	sbc	r23, r23
     4ba:	72 83       	std	Z+2, r23	; 0x02
     4bc:	73 83       	std	Z+3, r23	; 0x03
     4be:	74 83       	std	Z+4, r23	; 0x04
     4c0:	75 83       	std	Z+5, r23	; 0x05
     4c2:	76 83       	std	Z+6, r23	; 0x06
     4c4:	77 83       	std	Z+7, r23	; 0x07
	//if(*y<0)
	(*y)=abs(*y)/100;
     4c6:	f4 01       	movw	r30, r8
     4c8:	80 81       	ld	r24, Z
     4ca:	91 81       	ldd	r25, Z+1	; 0x01
     4cc:	99 23       	and	r25, r25
     4ce:	1c f4       	brge	.+6      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4d0:	91 95       	neg	r25
     4d2:	81 95       	neg	r24
     4d4:	91 09       	sbc	r25, r1
     4d6:	64 e6       	ldi	r22, 0x64	; 100
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	8b d1       	rcall	.+790    	; 0x7f2 <__divmodhi4>
     4dc:	f4 01       	movw	r30, r8
     4de:	60 83       	st	Z, r22
     4e0:	71 83       	std	Z+1, r23	; 0x01
     4e2:	77 0f       	add	r23, r23
     4e4:	77 0b       	sbc	r23, r23
     4e6:	72 83       	std	Z+2, r23	; 0x02
     4e8:	73 83       	std	Z+3, r23	; 0x03
     4ea:	74 83       	std	Z+4, r23	; 0x04
     4ec:	75 83       	std	Z+5, r23	; 0x05
     4ee:	76 83       	std	Z+6, r23	; 0x06
	//if(*z<0)
	(*z)=abs(*z)/100;
     4f0:	77 83       	std	Z+7, r23	; 0x07
     4f2:	88 81       	ld	r24, Y
     4f4:	99 81       	ldd	r25, Y+1	; 0x01
     4f6:	99 23       	and	r25, r25
     4f8:	1c f4       	brge	.+6      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
     4fa:	91 95       	neg	r25
     4fc:	81 95       	neg	r24
     4fe:	91 09       	sbc	r25, r1
     500:	64 e6       	ldi	r22, 0x64	; 100
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	76 d1       	rcall	.+748    	; 0x7f2 <__divmodhi4>
     506:	68 83       	st	Y, r22
     508:	79 83       	std	Y+1, r23	; 0x01
     50a:	77 0f       	add	r23, r23
     50c:	77 0b       	sbc	r23, r23
     50e:	7a 83       	std	Y+2, r23	; 0x02
     510:	7b 83       	std	Y+3, r23	; 0x03
     512:	7c 83       	std	Y+4, r23	; 0x04
	printf("offsets are");
     514:	7d 83       	std	Y+5, r23	; 0x05
     516:	7e 83       	std	Y+6, r23	; 0x06
     518:	7f 83       	std	Y+7, r23	; 0x07
	print16(x);
     51a:	87 e3       	ldi	r24, 0x37	; 55
	printf("  ");
     51c:	92 e0       	ldi	r25, 0x02	; 2
     51e:	9f 93       	push	r25
     520:	8f 93       	push	r24
     522:	04 d2       	rcall	.+1032   	; 0x92c <printf>
     524:	c3 01       	movw	r24, r6
     526:	f3 de       	rcall	.-538    	; 0x30e <print16>
	print16(y);
     528:	0c e4       	ldi	r16, 0x4C	; 76
     52a:	12 e0       	ldi	r17, 0x02	; 2
     52c:	1f 93       	push	r17
	printf("  ");
     52e:	0f 93       	push	r16
     530:	fd d1       	rcall	.+1018   	; 0x92c <printf>
     532:	c4 01       	movw	r24, r8
     534:	ec de       	rcall	.-552    	; 0x30e <print16>
	print16ln(z);
     536:	1f 93       	push	r17
     538:	0f 93       	push	r16
     53a:	f8 d1       	rcall	.+1008   	; 0x92c <printf>
     53c:	ce 01       	movw	r24, r28
     53e:	0c df       	rcall	.-488    	; 0x358 <print16ln>
     540:	ff ef       	ldi	r31, 0xFF	; 255
     542:	23 ed       	ldi	r18, 0xD3	; 211
     544:	80 e3       	ldi	r24, 0x30	; 48
     546:	f1 50       	subi	r31, 0x01	; 1
     548:	20 40       	sbci	r18, 0x00	; 0
     54a:	80 40       	sbci	r24, 0x00	; 0
     54c:	e1 f7       	brne	.-8      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
	_delay_ms(1000);
}
     54e:	00 c0       	rjmp	.+0      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
     550:	00 00       	nop
     552:	0f 90       	pop	r0
     554:	0f 90       	pop	r0
     556:	0f 90       	pop	r0
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	df 91       	pop	r29
     560:	cf 91       	pop	r28
     562:	1f 91       	pop	r17
     564:	0f 91       	pop	r16
     566:	ff 90       	pop	r15
     568:	ef 90       	pop	r14
     56a:	df 90       	pop	r13
     56c:	cf 90       	pop	r12
     56e:	bf 90       	pop	r11
     570:	af 90       	pop	r10
     572:	9f 90       	pop	r9
     574:	8f 90       	pop	r8
     576:	7f 90       	pop	r7
     578:	6f 90       	pop	r6
     57a:	5f 90       	pop	r5
     57c:	4f 90       	pop	r4
     57e:	08 95       	ret

00000580 <main>:



int main(void)

{	
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	cd b7       	in	r28, 0x3d	; 61
     586:	de b7       	in	r29, 0x3e	; 62
     588:	a0 97       	sbiw	r28, 0x20	; 32
     58a:	0f b6       	in	r0, 0x3f	; 63
     58c:	f8 94       	cli
     58e:	de bf       	out	0x3e, r29	; 62
     590:	0f be       	out	0x3f, r0	; 63
     592:	cd bf       	out	0x3d, r28	; 61

	USART_Init(MY_UBRR);
     594:	80 e1       	ldi	r24, 0x10	; 16
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	21 d1       	rcall	.+578    	; 0x7dc <USART_Init>
	//uart_init(UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU));
	uart_str = fdevopen(uart_putchar, NULL);
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	83 e9       	ldi	r24, 0x93	; 147
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	7a d1       	rcall	.+756    	; 0x898 <fdevopen>
     5a4:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <__data_end+0x1>
     5a8:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <__data_end>
	//Enable_timer0_compare_interrupt();
	//init_gpio();
	sei();
	//sbi(ADCSRA,ADSC);

	i2c_init();
     5ac:	78 94       	sei
     5ae:	7f d0       	rcall	.+254    	; 0x6ae <i2c_init>
	int16_t gyroX_calib=0;
     5b0:	1a 82       	std	Y+2, r1	; 0x02
     5b2:	19 82       	std	Y+1, r1	; 0x01
	int16_t gyroY_calib=0;
     5b4:	1c 82       	std	Y+4, r1	; 0x04
     5b6:	1b 82       	std	Y+3, r1	; 0x03
	int16_t gyroZ_calib=0;
     5b8:	1e 82       	std	Y+6, r1	; 0x06
     5ba:	1d 82       	std	Y+5, r1	; 0x05
	int64_t accelX_calib=0;
     5bc:	1f 82       	std	Y+7, r1	; 0x07
     5be:	18 86       	std	Y+8, r1	; 0x08
     5c0:	19 86       	std	Y+9, r1	; 0x09
     5c2:	1a 86       	std	Y+10, r1	; 0x0a
     5c4:	1b 86       	std	Y+11, r1	; 0x0b
     5c6:	1c 86       	std	Y+12, r1	; 0x0c
     5c8:	1d 86       	std	Y+13, r1	; 0x0d
     5ca:	1e 86       	std	Y+14, r1	; 0x0e
	int64_t accelY_calib=0;
     5cc:	1f 86       	std	Y+15, r1	; 0x0f
     5ce:	18 8a       	std	Y+16, r1	; 0x10
     5d0:	19 8a       	std	Y+17, r1	; 0x11
     5d2:	1a 8a       	std	Y+18, r1	; 0x12
     5d4:	1b 8a       	std	Y+19, r1	; 0x13
     5d6:	1c 8a       	std	Y+20, r1	; 0x14
     5d8:	1d 8a       	std	Y+21, r1	; 0x15
     5da:	1e 8a       	std	Y+22, r1	; 0x16
	int64_t accelZ_calib=0;
     5dc:	1f 8a       	std	Y+23, r1	; 0x17
     5de:	18 8e       	std	Y+24, r1	; 0x18
     5e0:	19 8e       	std	Y+25, r1	; 0x19
     5e2:	1a 8e       	std	Y+26, r1	; 0x1a
     5e4:	1b 8e       	std	Y+27, r1	; 0x1b
     5e6:	1c 8e       	std	Y+28, r1	; 0x1c
     5e8:	1d 8e       	std	Y+29, r1	; 0x1d
     5ea:	1e 8e       	std	Y+30, r1	; 0x1e
	mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
     5ec:	ae 01       	movw	r20, r28
     5ee:	4b 5f       	subi	r20, 0xFB	; 251
     5f0:	5f 4f       	sbci	r21, 0xFF	; 255
     5f2:	be 01       	movw	r22, r28
     5f4:	6d 5f       	subi	r22, 0xFD	; 253
     5f6:	7f 4f       	sbci	r23, 0xFF	; 255
     5f8:	ce 01       	movw	r24, r28
     5fa:	01 96       	adiw	r24, 0x01	; 1
     5fc:	e7 dd       	rcall	.-1074   	; 0x1cc <mpu6050_calibrate_gyro>
	mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
     5fe:	ae 01       	movw	r20, r28
     600:	49 5e       	subi	r20, 0xE9	; 233
     602:	5f 4f       	sbci	r21, 0xFF	; 255
     604:	be 01       	movw	r22, r28
     606:	61 5f       	subi	r22, 0xF1	; 241
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	ce 01       	movw	r24, r28
     60c:	07 96       	adiw	r24, 0x07	; 7
     60e:	cc de       	rcall	.-616    	; 0x3a8 <mpu6050_calibrate_accel>
		//var=mpu6050_read_gyroZ()+gyroZ_calib;
		//printf("Z= ");
		//print16(&var);
		//printf("    ");
		var=accX;
		printf("accX= ");
     610:	0f 2e       	mov	r0, r31
     612:	f3 e4       	ldi	r31, 0x43	; 67
     614:	af 2e       	mov	r10, r31
     616:	f2 e0       	ldi	r31, 0x02	; 2
     618:	bf 2e       	mov	r11, r31
     61a:	f0 2d       	mov	r31, r0
		print16(&var);
		printf("    ");
     61c:	0a e4       	ldi	r16, 0x4A	; 74
     61e:	12 e0       	ldi	r17, 0x02	; 2
		var=accY;
		printf("accY= ");
     620:	0f 2e       	mov	r0, r31
     622:	ff e4       	ldi	r31, 0x4F	; 79
     624:	cf 2e       	mov	r12, r31
     626:	f2 e0       	ldi	r31, 0x02	; 2
     628:	df 2e       	mov	r13, r31
     62a:	f0 2d       	mov	r31, r0
		print16(&var);
		printf("    ");
		var=accZ;
		printf("accZ= ");
     62c:	0f 2e       	mov	r0, r31
     62e:	f6 e5       	ldi	r31, 0x56	; 86
     630:	ef 2e       	mov	r14, r31
     632:	f2 e0       	ldi	r31, 0x02	; 2
     634:	ff 2e       	mov	r15, r31
	int64_t accelZ_calib=0;
	mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
	mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
    while (1) //hesa kgam
    {
		uint16_t var=0;	
     636:	f0 2d       	mov	r31, r0
     638:	18 a2       	std	Y+32, r1	; 0x20
		//printf("  ");
		//var=mpu6050_read_gyroZ()+gyroZ_calib;
		//printf("Z= ");
		//print16(&var);
		//printf("    ");
		var=accX;
     63a:	1f 8e       	std	Y+31, r1	; 0x1f
     63c:	38 de       	rcall	.-912    	; 0x2ae <mpu6050_read_accelX>
     63e:	2f 81       	ldd	r18, Y+7	; 0x07
     640:	38 85       	ldd	r19, Y+8	; 0x08
     642:	82 1b       	sub	r24, r18
     644:	93 0b       	sbc	r25, r19
		printf("accX= ");
     646:	98 a3       	std	Y+32, r25	; 0x20
     648:	8f 8f       	std	Y+31, r24	; 0x1f
		print16(&var);
     64a:	bf 92       	push	r11
     64c:	af 92       	push	r10
     64e:	6e d1       	rcall	.+732    	; 0x92c <printf>
     650:	ce 01       	movw	r24, r28
		printf("    ");
     652:	4f 96       	adiw	r24, 0x1f	; 31
     654:	5c de       	rcall	.-840    	; 0x30e <print16>
     656:	1f 93       	push	r17
		var=accY;
     658:	0f 93       	push	r16
     65a:	68 d1       	rcall	.+720    	; 0x92c <printf>
     65c:	38 de       	rcall	.-912    	; 0x2ce <mpu6050_read_accelY>
     65e:	2f 85       	ldd	r18, Y+15	; 0x0f
		printf("accY= ");
     660:	38 89       	ldd	r19, Y+16	; 0x10
     662:	82 1b       	sub	r24, r18
     664:	93 0b       	sbc	r25, r19
     666:	98 a3       	std	Y+32, r25	; 0x20
		print16(&var);
     668:	8f 8f       	std	Y+31, r24	; 0x1f
     66a:	df 92       	push	r13
     66c:	cf 92       	push	r12
		printf("    ");
     66e:	5e d1       	rcall	.+700    	; 0x92c <printf>
     670:	ce 01       	movw	r24, r28
		var=accZ;
     672:	4f 96       	adiw	r24, 0x1f	; 31
     674:	4c de       	rcall	.-872    	; 0x30e <print16>
     676:	1f 93       	push	r17
     678:	0f 93       	push	r16
     67a:	58 d1       	rcall	.+688    	; 0x92c <printf>
     67c:	38 de       	rcall	.-912    	; 0x2ee <mpu6050_read_accelZ>
		printf("accZ= ");
     67e:	2f 89       	ldd	r18, Y+23	; 0x17
     680:	38 8d       	ldd	r19, Y+24	; 0x18
     682:	82 1b       	sub	r24, r18
     684:	93 0b       	sbc	r25, r19
		print16(&var);
     686:	98 a3       	std	Y+32, r25	; 0x20
     688:	8f 8f       	std	Y+31, r24	; 0x1f
     68a:	ff 92       	push	r15
     68c:	ef 92       	push	r14
		printf("    ");
     68e:	4e d1       	rcall	.+668    	; 0x92c <printf>
     690:	ce 01       	movw	r24, r28
     692:	4f 96       	adiw	r24, 0x1f	; 31
     694:	3c de       	rcall	.-904    	; 0x30e <print16>
		
		
		
		printf("\n");
     696:	1f 93       	push	r17
     698:	0f 93       	push	r16
     69a:	48 d1       	rcall	.+656    	; 0x92c <printf>
     69c:	8a e0       	ldi	r24, 0x0A	; 10
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	58 d1       	rcall	.+688    	; 0x952 <putchar>
     6a2:	0f b6       	in	r0, 0x3f	; 63
     6a4:	f8 94       	cli
     6a6:	de bf       	out	0x3e, r29	; 62
     6a8:	0f be       	out	0x3f, r0	; 63
     6aa:	cd bf       	out	0x3d, r28	; 61
     6ac:	c5 cf       	rjmp	.-118    	; 0x638 <main+0xb8>

000006ae <i2c_init>:
     6ae:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     6b2:	8c e0       	ldi	r24, 0x0C	; 12
     6b4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     6b8:	08 95       	ret

000006ba <i2c_start>:
     6ba:	94 ea       	ldi	r25, 0xA4	; 164
     6bc:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     6c0:	4f ef       	ldi	r20, 0xFF	; 255
     6c2:	50 e0       	ldi	r21, 0x00	; 0
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	ec eb       	ldi	r30, 0xBC	; 188
     6ca:	f0 e0       	ldi	r31, 0x00	; 0
     6cc:	90 81       	ld	r25, Z
     6ce:	99 23       	and	r25, r25
     6d0:	34 f0       	brlt	.+12     	; 0x6de <i2c_start+0x24>
     6d2:	41 50       	subi	r20, 0x01	; 1
     6d4:	51 09       	sbc	r21, r1
     6d6:	61 09       	sbc	r22, r1
     6d8:	71 09       	sbc	r23, r1
     6da:	c0 f7       	brcc	.-16     	; 0x6cc <i2c_start+0x12>
     6dc:	04 c0       	rjmp	.+8      	; 0x6e6 <i2c_start+0x2c>
     6de:	45 2b       	or	r20, r21
     6e0:	46 2b       	or	r20, r22
     6e2:	47 2b       	or	r20, r23
     6e4:	41 f1       	breq	.+80     	; 0x736 <i2c_start+0x7c>
     6e6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     6ea:	98 7f       	andi	r25, 0xF8	; 248
     6ec:	98 30       	cpi	r25, 0x08	; 8
     6ee:	11 f0       	breq	.+4      	; 0x6f4 <i2c_start+0x3a>
     6f0:	90 31       	cpi	r25, 0x10	; 16
     6f2:	19 f5       	brne	.+70     	; 0x73a <i2c_start+0x80>
     6f4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     6f8:	84 e8       	ldi	r24, 0x84	; 132
     6fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     6fe:	8f ef       	ldi	r24, 0xFF	; 255
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	a0 e0       	ldi	r26, 0x00	; 0
     704:	b0 e0       	ldi	r27, 0x00	; 0
     706:	ec eb       	ldi	r30, 0xBC	; 188
     708:	f0 e0       	ldi	r31, 0x00	; 0
     70a:	20 81       	ld	r18, Z
     70c:	22 23       	and	r18, r18
     70e:	2c f0       	brlt	.+10     	; 0x71a <i2c_start+0x60>
     710:	01 97       	sbiw	r24, 0x01	; 1
     712:	a1 09       	sbc	r26, r1
     714:	b1 09       	sbc	r27, r1
     716:	c8 f7       	brcc	.-14     	; 0x70a <i2c_start+0x50>
     718:	04 c0       	rjmp	.+8      	; 0x722 <i2c_start+0x68>
     71a:	89 2b       	or	r24, r25
     71c:	8a 2b       	or	r24, r26
     71e:	8b 2b       	or	r24, r27
     720:	71 f0       	breq	.+28     	; 0x73e <i2c_start+0x84>
     722:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     726:	98 7f       	andi	r25, 0xF8	; 248
     728:	98 31       	cpi	r25, 0x18	; 24
     72a:	59 f0       	breq	.+22     	; 0x742 <i2c_start+0x88>
     72c:	81 e0       	ldi	r24, 0x01	; 1
     72e:	90 34       	cpi	r25, 0x40	; 64
     730:	49 f4       	brne	.+18     	; 0x744 <i2c_start+0x8a>
     732:	80 e0       	ldi	r24, 0x00	; 0
     734:	08 95       	ret
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	08 95       	ret
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	08 95       	ret
     73e:	81 e0       	ldi	r24, 0x01	; 1
     740:	08 95       	ret
     742:	80 e0       	ldi	r24, 0x00	; 0
     744:	08 95       	ret

00000746 <i2c_stop>:
     746:	84 e9       	ldi	r24, 0x94	; 148
     748:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	ec eb       	ldi	r30, 0xBC	; 188
     752:	f0 e0       	ldi	r31, 0x00	; 0
     754:	20 81       	ld	r18, Z
     756:	24 ff       	sbrs	r18, 4
     758:	05 c0       	rjmp	.+10     	; 0x764 <i2c_stop+0x1e>
     75a:	01 96       	adiw	r24, 0x01	; 1
     75c:	81 15       	cp	r24, r1
     75e:	21 e0       	ldi	r18, 0x01	; 1
     760:	92 07       	cpc	r25, r18
     762:	c1 f7       	brne	.-16     	; 0x754 <i2c_stop+0xe>
     764:	08 95       	ret

00000766 <i2c_write>:
     766:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     76a:	84 e8       	ldi	r24, 0x84	; 132
     76c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     770:	8f ef       	ldi	r24, 0xFF	; 255
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	a0 e0       	ldi	r26, 0x00	; 0
     776:	b0 e0       	ldi	r27, 0x00	; 0
     778:	ec eb       	ldi	r30, 0xBC	; 188
     77a:	f0 e0       	ldi	r31, 0x00	; 0
     77c:	20 81       	ld	r18, Z
     77e:	22 23       	and	r18, r18
     780:	2c f0       	brlt	.+10     	; 0x78c <i2c_write+0x26>
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	a1 09       	sbc	r26, r1
     786:	b1 09       	sbc	r27, r1
     788:	c8 f7       	brcc	.-14     	; 0x77c <i2c_write+0x16>
     78a:	04 c0       	rjmp	.+8      	; 0x794 <i2c_write+0x2e>
     78c:	89 2b       	or	r24, r25
     78e:	8a 2b       	or	r24, r26
     790:	8b 2b       	or	r24, r27
     792:	41 f0       	breq	.+16     	; 0x7a4 <i2c_write+0x3e>
     794:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     798:	98 7f       	andi	r25, 0xF8	; 248
     79a:	81 e0       	ldi	r24, 0x01	; 1
     79c:	98 32       	cpi	r25, 0x28	; 40
     79e:	19 f4       	brne	.+6      	; 0x7a6 <i2c_write+0x40>
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	08 95       	ret
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	08 95       	ret

000007a8 <i2c_readNak>:
     7a8:	84 e8       	ldi	r24, 0x84	; 132
     7aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     7ae:	8f ef       	ldi	r24, 0xFF	; 255
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	a0 e0       	ldi	r26, 0x00	; 0
     7b4:	b0 e0       	ldi	r27, 0x00	; 0
     7b6:	ec eb       	ldi	r30, 0xBC	; 188
     7b8:	f0 e0       	ldi	r31, 0x00	; 0
     7ba:	20 81       	ld	r18, Z
     7bc:	22 23       	and	r18, r18
     7be:	2c f0       	brlt	.+10     	; 0x7ca <i2c_readNak+0x22>
     7c0:	01 97       	sbiw	r24, 0x01	; 1
     7c2:	a1 09       	sbc	r26, r1
     7c4:	b1 09       	sbc	r27, r1
     7c6:	c8 f7       	brcc	.-14     	; 0x7ba <i2c_readNak+0x12>
     7c8:	04 c0       	rjmp	.+8      	; 0x7d2 <i2c_readNak+0x2a>
     7ca:	89 2b       	or	r24, r25
     7cc:	8a 2b       	or	r24, r26
     7ce:	8b 2b       	or	r24, r27
     7d0:	19 f0       	breq	.+6      	; 0x7d8 <i2c_readNak+0x30>
     7d2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     7d6:	08 95       	ret
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	08 95       	ret

000007dc <USART_Init>:
     7dc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     7e0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     7e4:	88 e0       	ldi	r24, 0x08	; 8
     7e6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     7ea:	8e e0       	ldi	r24, 0x0E	; 14
     7ec:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     7f0:	08 95       	ret

000007f2 <__divmodhi4>:
     7f2:	97 fb       	bst	r25, 7
     7f4:	07 2e       	mov	r0, r23
     7f6:	16 f4       	brtc	.+4      	; 0x7fc <__divmodhi4+0xa>
     7f8:	00 94       	com	r0
     7fa:	06 d0       	rcall	.+12     	; 0x808 <__divmodhi4_neg1>
     7fc:	77 fd       	sbrc	r23, 7
     7fe:	08 d0       	rcall	.+16     	; 0x810 <__divmodhi4_neg2>
     800:	14 d0       	rcall	.+40     	; 0x82a <__udivmodhi4>
     802:	07 fc       	sbrc	r0, 7
     804:	05 d0       	rcall	.+10     	; 0x810 <__divmodhi4_neg2>
     806:	3e f4       	brtc	.+14     	; 0x816 <__divmodhi4_exit>

00000808 <__divmodhi4_neg1>:
     808:	90 95       	com	r25
     80a:	81 95       	neg	r24
     80c:	9f 4f       	sbci	r25, 0xFF	; 255
     80e:	08 95       	ret

00000810 <__divmodhi4_neg2>:
     810:	70 95       	com	r23
     812:	61 95       	neg	r22
     814:	7f 4f       	sbci	r23, 0xFF	; 255

00000816 <__divmodhi4_exit>:
     816:	08 95       	ret

00000818 <__adddi3>:
     818:	2a 0d       	add	r18, r10
     81a:	3b 1d       	adc	r19, r11
     81c:	4c 1d       	adc	r20, r12
     81e:	5d 1d       	adc	r21, r13
     820:	6e 1d       	adc	r22, r14
     822:	7f 1d       	adc	r23, r15
     824:	80 1f       	adc	r24, r16
     826:	91 1f       	adc	r25, r17
     828:	08 95       	ret

0000082a <__udivmodhi4>:
     82a:	aa 1b       	sub	r26, r26
     82c:	bb 1b       	sub	r27, r27
     82e:	51 e1       	ldi	r21, 0x11	; 17
     830:	07 c0       	rjmp	.+14     	; 0x840 <__udivmodhi4_ep>

00000832 <__udivmodhi4_loop>:
     832:	aa 1f       	adc	r26, r26
     834:	bb 1f       	adc	r27, r27
     836:	a6 17       	cp	r26, r22
     838:	b7 07       	cpc	r27, r23
     83a:	10 f0       	brcs	.+4      	; 0x840 <__udivmodhi4_ep>
     83c:	a6 1b       	sub	r26, r22
     83e:	b7 0b       	sbc	r27, r23

00000840 <__udivmodhi4_ep>:
     840:	88 1f       	adc	r24, r24
     842:	99 1f       	adc	r25, r25
     844:	5a 95       	dec	r21
     846:	a9 f7       	brne	.-22     	; 0x832 <__udivmodhi4_loop>
     848:	80 95       	com	r24
     84a:	90 95       	com	r25
     84c:	bc 01       	movw	r22, r24
     84e:	cd 01       	movw	r24, r26
     850:	08 95       	ret

00000852 <__itoa_ncheck>:
     852:	bb 27       	eor	r27, r27
     854:	4a 30       	cpi	r20, 0x0A	; 10
     856:	31 f4       	brne	.+12     	; 0x864 <__itoa_ncheck+0x12>
     858:	99 23       	and	r25, r25
     85a:	22 f4       	brpl	.+8      	; 0x864 <__itoa_ncheck+0x12>
     85c:	bd e2       	ldi	r27, 0x2D	; 45
     85e:	90 95       	com	r25
     860:	81 95       	neg	r24
     862:	9f 4f       	sbci	r25, 0xFF	; 255
     864:	01 c0       	rjmp	.+2      	; 0x868 <__utoa_common>

00000866 <__utoa_ncheck>:
     866:	bb 27       	eor	r27, r27

00000868 <__utoa_common>:
     868:	fb 01       	movw	r30, r22
     86a:	55 27       	eor	r21, r21
     86c:	aa 27       	eor	r26, r26
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	aa 1f       	adc	r26, r26
     874:	a4 17       	cp	r26, r20
     876:	10 f0       	brcs	.+4      	; 0x87c <__utoa_common+0x14>
     878:	a4 1b       	sub	r26, r20
     87a:	83 95       	inc	r24
     87c:	50 51       	subi	r21, 0x10	; 16
     87e:	b9 f7       	brne	.-18     	; 0x86e <__utoa_common+0x6>
     880:	a0 5d       	subi	r26, 0xD0	; 208
     882:	aa 33       	cpi	r26, 0x3A	; 58
     884:	08 f0       	brcs	.+2      	; 0x888 <__utoa_common+0x20>
     886:	a9 5d       	subi	r26, 0xD9	; 217
     888:	a1 93       	st	Z+, r26
     88a:	00 97       	sbiw	r24, 0x00	; 0
     88c:	79 f7       	brne	.-34     	; 0x86c <__utoa_common+0x4>
     88e:	b1 11       	cpse	r27, r1
     890:	b1 93       	st	Z+, r27
     892:	11 92       	st	Z+, r1
     894:	cb 01       	movw	r24, r22
     896:	e7 c3       	rjmp	.+1998   	; 0x1066 <strrev>

00000898 <fdevopen>:
     898:	0f 93       	push	r16
     89a:	1f 93       	push	r17
     89c:	cf 93       	push	r28
     89e:	df 93       	push	r29
     8a0:	00 97       	sbiw	r24, 0x00	; 0
     8a2:	31 f4       	brne	.+12     	; 0x8b0 <fdevopen+0x18>
     8a4:	61 15       	cp	r22, r1
     8a6:	71 05       	cpc	r23, r1
     8a8:	19 f4       	brne	.+6      	; 0x8b0 <fdevopen+0x18>
     8aa:	80 e0       	ldi	r24, 0x00	; 0
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	39 c0       	rjmp	.+114    	; 0x922 <fdevopen+0x8a>
     8b0:	8b 01       	movw	r16, r22
     8b2:	ec 01       	movw	r28, r24
     8b4:	6e e0       	ldi	r22, 0x0E	; 14
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	7c d2       	rcall	.+1272   	; 0xdb6 <calloc>
     8be:	fc 01       	movw	r30, r24
     8c0:	89 2b       	or	r24, r25
     8c2:	99 f3       	breq	.-26     	; 0x8aa <fdevopen+0x12>
     8c4:	80 e8       	ldi	r24, 0x80	; 128
     8c6:	83 83       	std	Z+3, r24	; 0x03
     8c8:	01 15       	cp	r16, r1
     8ca:	11 05       	cpc	r17, r1
     8cc:	71 f0       	breq	.+28     	; 0x8ea <fdevopen+0x52>
     8ce:	13 87       	std	Z+11, r17	; 0x0b
     8d0:	02 87       	std	Z+10, r16	; 0x0a
     8d2:	81 e8       	ldi	r24, 0x81	; 129
     8d4:	83 83       	std	Z+3, r24	; 0x03
     8d6:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <__iob>
     8da:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <__iob+0x1>
     8de:	89 2b       	or	r24, r25
     8e0:	21 f4       	brne	.+8      	; 0x8ea <fdevopen+0x52>
     8e2:	f0 93 6f 02 	sts	0x026F, r31	; 0x80026f <__iob+0x1>
     8e6:	e0 93 6e 02 	sts	0x026E, r30	; 0x80026e <__iob>
     8ea:	20 97       	sbiw	r28, 0x00	; 0
     8ec:	c9 f0       	breq	.+50     	; 0x920 <fdevopen+0x88>
     8ee:	d1 87       	std	Z+9, r29	; 0x09
     8f0:	c0 87       	std	Z+8, r28	; 0x08
     8f2:	83 81       	ldd	r24, Z+3	; 0x03
     8f4:	82 60       	ori	r24, 0x02	; 2
     8f6:	83 83       	std	Z+3, r24	; 0x03
     8f8:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <__iob+0x2>
     8fc:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <__iob+0x3>
     900:	89 2b       	or	r24, r25
     902:	71 f4       	brne	.+28     	; 0x920 <fdevopen+0x88>
     904:	f0 93 71 02 	sts	0x0271, r31	; 0x800271 <__iob+0x3>
     908:	e0 93 70 02 	sts	0x0270, r30	; 0x800270 <__iob+0x2>
     90c:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <__iob+0x4>
     910:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <__iob+0x5>
     914:	89 2b       	or	r24, r25
     916:	21 f4       	brne	.+8      	; 0x920 <fdevopen+0x88>
     918:	f0 93 73 02 	sts	0x0273, r31	; 0x800273 <__iob+0x5>
     91c:	e0 93 72 02 	sts	0x0272, r30	; 0x800272 <__iob+0x4>
     920:	cf 01       	movw	r24, r30
     922:	df 91       	pop	r29
     924:	cf 91       	pop	r28
     926:	1f 91       	pop	r17
     928:	0f 91       	pop	r16
     92a:	08 95       	ret

0000092c <printf>:
     92c:	cf 93       	push	r28
     92e:	df 93       	push	r29
     930:	cd b7       	in	r28, 0x3d	; 61
     932:	de b7       	in	r29, 0x3e	; 62
     934:	ae 01       	movw	r20, r28
     936:	4a 5f       	subi	r20, 0xFA	; 250
     938:	5f 4f       	sbci	r21, 0xFF	; 255
     93a:	fa 01       	movw	r30, r20
     93c:	61 91       	ld	r22, Z+
     93e:	71 91       	ld	r23, Z+
     940:	af 01       	movw	r20, r30
     942:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <__iob+0x2>
     946:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <__iob+0x3>
     94a:	38 d0       	rcall	.+112    	; 0x9bc <vfprintf>
     94c:	df 91       	pop	r29
     94e:	cf 91       	pop	r28
     950:	08 95       	ret

00000952 <putchar>:
     952:	60 91 70 02 	lds	r22, 0x0270	; 0x800270 <__iob+0x2>
     956:	70 91 71 02 	lds	r23, 0x0271	; 0x800271 <__iob+0x3>
     95a:	95 c3       	rjmp	.+1834   	; 0x1086 <fputc>

0000095c <puts>:
     95c:	0f 93       	push	r16
     95e:	1f 93       	push	r17
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	e0 91 70 02 	lds	r30, 0x0270	; 0x800270 <__iob+0x2>
     968:	f0 91 71 02 	lds	r31, 0x0271	; 0x800271 <__iob+0x3>
     96c:	23 81       	ldd	r18, Z+3	; 0x03
     96e:	21 ff       	sbrs	r18, 1
     970:	1b c0       	rjmp	.+54     	; 0x9a8 <puts+0x4c>
     972:	8c 01       	movw	r16, r24
     974:	d0 e0       	ldi	r29, 0x00	; 0
     976:	c0 e0       	ldi	r28, 0x00	; 0
     978:	f8 01       	movw	r30, r16
     97a:	81 91       	ld	r24, Z+
     97c:	8f 01       	movw	r16, r30
     97e:	60 91 70 02 	lds	r22, 0x0270	; 0x800270 <__iob+0x2>
     982:	70 91 71 02 	lds	r23, 0x0271	; 0x800271 <__iob+0x3>
     986:	db 01       	movw	r26, r22
     988:	18 96       	adiw	r26, 0x08	; 8
     98a:	ed 91       	ld	r30, X+
     98c:	fc 91       	ld	r31, X
     98e:	19 97       	sbiw	r26, 0x09	; 9
     990:	88 23       	and	r24, r24
     992:	31 f0       	breq	.+12     	; 0x9a0 <puts+0x44>
     994:	19 95       	eicall
     996:	89 2b       	or	r24, r25
     998:	79 f3       	breq	.-34     	; 0x978 <puts+0x1c>
     99a:	df ef       	ldi	r29, 0xFF	; 255
     99c:	cf ef       	ldi	r28, 0xFF	; 255
     99e:	ec cf       	rjmp	.-40     	; 0x978 <puts+0x1c>
     9a0:	8a e0       	ldi	r24, 0x0A	; 10
     9a2:	19 95       	eicall
     9a4:	89 2b       	or	r24, r25
     9a6:	19 f0       	breq	.+6      	; 0x9ae <puts+0x52>
     9a8:	8f ef       	ldi	r24, 0xFF	; 255
     9aa:	9f ef       	ldi	r25, 0xFF	; 255
     9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <puts+0x56>
     9ae:	8d 2f       	mov	r24, r29
     9b0:	9c 2f       	mov	r25, r28
     9b2:	df 91       	pop	r29
     9b4:	cf 91       	pop	r28
     9b6:	1f 91       	pop	r17
     9b8:	0f 91       	pop	r16
     9ba:	08 95       	ret

000009bc <vfprintf>:
     9bc:	2f 92       	push	r2
     9be:	3f 92       	push	r3
     9c0:	4f 92       	push	r4
     9c2:	5f 92       	push	r5
     9c4:	6f 92       	push	r6
     9c6:	7f 92       	push	r7
     9c8:	8f 92       	push	r8
     9ca:	9f 92       	push	r9
     9cc:	af 92       	push	r10
     9ce:	bf 92       	push	r11
     9d0:	cf 92       	push	r12
     9d2:	df 92       	push	r13
     9d4:	ef 92       	push	r14
     9d6:	ff 92       	push	r15
     9d8:	0f 93       	push	r16
     9da:	1f 93       	push	r17
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	cd b7       	in	r28, 0x3d	; 61
     9e2:	de b7       	in	r29, 0x3e	; 62
     9e4:	2b 97       	sbiw	r28, 0x0b	; 11
     9e6:	0f b6       	in	r0, 0x3f	; 63
     9e8:	f8 94       	cli
     9ea:	de bf       	out	0x3e, r29	; 62
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	cd bf       	out	0x3d, r28	; 61
     9f0:	6c 01       	movw	r12, r24
     9f2:	7b 01       	movw	r14, r22
     9f4:	8a 01       	movw	r16, r20
     9f6:	fc 01       	movw	r30, r24
     9f8:	17 82       	std	Z+7, r1	; 0x07
     9fa:	16 82       	std	Z+6, r1	; 0x06
     9fc:	83 81       	ldd	r24, Z+3	; 0x03
     9fe:	81 ff       	sbrs	r24, 1
     a00:	bf c1       	rjmp	.+894    	; 0xd80 <vfprintf+0x3c4>
     a02:	ce 01       	movw	r24, r28
     a04:	01 96       	adiw	r24, 0x01	; 1
     a06:	3c 01       	movw	r6, r24
     a08:	f6 01       	movw	r30, r12
     a0a:	93 81       	ldd	r25, Z+3	; 0x03
     a0c:	f7 01       	movw	r30, r14
     a0e:	93 fd       	sbrc	r25, 3
     a10:	85 91       	lpm	r24, Z+
     a12:	93 ff       	sbrs	r25, 3
     a14:	81 91       	ld	r24, Z+
     a16:	7f 01       	movw	r14, r30
     a18:	88 23       	and	r24, r24
     a1a:	09 f4       	brne	.+2      	; 0xa1e <vfprintf+0x62>
     a1c:	ad c1       	rjmp	.+858    	; 0xd78 <vfprintf+0x3bc>
     a1e:	85 32       	cpi	r24, 0x25	; 37
     a20:	39 f4       	brne	.+14     	; 0xa30 <vfprintf+0x74>
     a22:	93 fd       	sbrc	r25, 3
     a24:	85 91       	lpm	r24, Z+
     a26:	93 ff       	sbrs	r25, 3
     a28:	81 91       	ld	r24, Z+
     a2a:	7f 01       	movw	r14, r30
     a2c:	85 32       	cpi	r24, 0x25	; 37
     a2e:	21 f4       	brne	.+8      	; 0xa38 <vfprintf+0x7c>
     a30:	b6 01       	movw	r22, r12
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	28 d3       	rcall	.+1616   	; 0x1086 <fputc>
     a36:	e8 cf       	rjmp	.-48     	; 0xa08 <vfprintf+0x4c>
     a38:	91 2c       	mov	r9, r1
     a3a:	21 2c       	mov	r2, r1
     a3c:	31 2c       	mov	r3, r1
     a3e:	ff e1       	ldi	r31, 0x1F	; 31
     a40:	f3 15       	cp	r31, r3
     a42:	d8 f0       	brcs	.+54     	; 0xa7a <vfprintf+0xbe>
     a44:	8b 32       	cpi	r24, 0x2B	; 43
     a46:	79 f0       	breq	.+30     	; 0xa66 <vfprintf+0xaa>
     a48:	38 f4       	brcc	.+14     	; 0xa58 <vfprintf+0x9c>
     a4a:	80 32       	cpi	r24, 0x20	; 32
     a4c:	79 f0       	breq	.+30     	; 0xa6c <vfprintf+0xb0>
     a4e:	83 32       	cpi	r24, 0x23	; 35
     a50:	a1 f4       	brne	.+40     	; 0xa7a <vfprintf+0xbe>
     a52:	23 2d       	mov	r18, r3
     a54:	20 61       	ori	r18, 0x10	; 16
     a56:	1d c0       	rjmp	.+58     	; 0xa92 <vfprintf+0xd6>
     a58:	8d 32       	cpi	r24, 0x2D	; 45
     a5a:	61 f0       	breq	.+24     	; 0xa74 <vfprintf+0xb8>
     a5c:	80 33       	cpi	r24, 0x30	; 48
     a5e:	69 f4       	brne	.+26     	; 0xa7a <vfprintf+0xbe>
     a60:	23 2d       	mov	r18, r3
     a62:	21 60       	ori	r18, 0x01	; 1
     a64:	16 c0       	rjmp	.+44     	; 0xa92 <vfprintf+0xd6>
     a66:	83 2d       	mov	r24, r3
     a68:	82 60       	ori	r24, 0x02	; 2
     a6a:	38 2e       	mov	r3, r24
     a6c:	e3 2d       	mov	r30, r3
     a6e:	e4 60       	ori	r30, 0x04	; 4
     a70:	3e 2e       	mov	r3, r30
     a72:	2a c0       	rjmp	.+84     	; 0xac8 <vfprintf+0x10c>
     a74:	f3 2d       	mov	r31, r3
     a76:	f8 60       	ori	r31, 0x08	; 8
     a78:	1d c0       	rjmp	.+58     	; 0xab4 <vfprintf+0xf8>
     a7a:	37 fc       	sbrc	r3, 7
     a7c:	2d c0       	rjmp	.+90     	; 0xad8 <vfprintf+0x11c>
     a7e:	20 ed       	ldi	r18, 0xD0	; 208
     a80:	28 0f       	add	r18, r24
     a82:	2a 30       	cpi	r18, 0x0A	; 10
     a84:	40 f0       	brcs	.+16     	; 0xa96 <vfprintf+0xda>
     a86:	8e 32       	cpi	r24, 0x2E	; 46
     a88:	b9 f4       	brne	.+46     	; 0xab8 <vfprintf+0xfc>
     a8a:	36 fc       	sbrc	r3, 6
     a8c:	75 c1       	rjmp	.+746    	; 0xd78 <vfprintf+0x3bc>
     a8e:	23 2d       	mov	r18, r3
     a90:	20 64       	ori	r18, 0x40	; 64
     a92:	32 2e       	mov	r3, r18
     a94:	19 c0       	rjmp	.+50     	; 0xac8 <vfprintf+0x10c>
     a96:	36 fe       	sbrs	r3, 6
     a98:	06 c0       	rjmp	.+12     	; 0xaa6 <vfprintf+0xea>
     a9a:	8a e0       	ldi	r24, 0x0A	; 10
     a9c:	98 9e       	mul	r9, r24
     a9e:	20 0d       	add	r18, r0
     aa0:	11 24       	eor	r1, r1
     aa2:	92 2e       	mov	r9, r18
     aa4:	11 c0       	rjmp	.+34     	; 0xac8 <vfprintf+0x10c>
     aa6:	ea e0       	ldi	r30, 0x0A	; 10
     aa8:	2e 9e       	mul	r2, r30
     aaa:	20 0d       	add	r18, r0
     aac:	11 24       	eor	r1, r1
     aae:	22 2e       	mov	r2, r18
     ab0:	f3 2d       	mov	r31, r3
     ab2:	f0 62       	ori	r31, 0x20	; 32
     ab4:	3f 2e       	mov	r3, r31
     ab6:	08 c0       	rjmp	.+16     	; 0xac8 <vfprintf+0x10c>
     ab8:	8c 36       	cpi	r24, 0x6C	; 108
     aba:	21 f4       	brne	.+8      	; 0xac4 <vfprintf+0x108>
     abc:	83 2d       	mov	r24, r3
     abe:	80 68       	ori	r24, 0x80	; 128
     ac0:	38 2e       	mov	r3, r24
     ac2:	02 c0       	rjmp	.+4      	; 0xac8 <vfprintf+0x10c>
     ac4:	88 36       	cpi	r24, 0x68	; 104
     ac6:	41 f4       	brne	.+16     	; 0xad8 <vfprintf+0x11c>
     ac8:	f7 01       	movw	r30, r14
     aca:	93 fd       	sbrc	r25, 3
     acc:	85 91       	lpm	r24, Z+
     ace:	93 ff       	sbrs	r25, 3
     ad0:	81 91       	ld	r24, Z+
     ad2:	7f 01       	movw	r14, r30
     ad4:	81 11       	cpse	r24, r1
     ad6:	b3 cf       	rjmp	.-154    	; 0xa3e <vfprintf+0x82>
     ad8:	98 2f       	mov	r25, r24
     ada:	9f 7d       	andi	r25, 0xDF	; 223
     adc:	95 54       	subi	r25, 0x45	; 69
     ade:	93 30       	cpi	r25, 0x03	; 3
     ae0:	28 f4       	brcc	.+10     	; 0xaec <vfprintf+0x130>
     ae2:	0c 5f       	subi	r16, 0xFC	; 252
     ae4:	1f 4f       	sbci	r17, 0xFF	; 255
     ae6:	9f e3       	ldi	r25, 0x3F	; 63
     ae8:	99 83       	std	Y+1, r25	; 0x01
     aea:	0d c0       	rjmp	.+26     	; 0xb06 <vfprintf+0x14a>
     aec:	83 36       	cpi	r24, 0x63	; 99
     aee:	31 f0       	breq	.+12     	; 0xafc <vfprintf+0x140>
     af0:	83 37       	cpi	r24, 0x73	; 115
     af2:	71 f0       	breq	.+28     	; 0xb10 <vfprintf+0x154>
     af4:	83 35       	cpi	r24, 0x53	; 83
     af6:	09 f0       	breq	.+2      	; 0xafa <vfprintf+0x13e>
     af8:	55 c0       	rjmp	.+170    	; 0xba4 <vfprintf+0x1e8>
     afa:	20 c0       	rjmp	.+64     	; 0xb3c <vfprintf+0x180>
     afc:	f8 01       	movw	r30, r16
     afe:	80 81       	ld	r24, Z
     b00:	89 83       	std	Y+1, r24	; 0x01
     b02:	0e 5f       	subi	r16, 0xFE	; 254
     b04:	1f 4f       	sbci	r17, 0xFF	; 255
     b06:	88 24       	eor	r8, r8
     b08:	83 94       	inc	r8
     b0a:	91 2c       	mov	r9, r1
     b0c:	53 01       	movw	r10, r6
     b0e:	12 c0       	rjmp	.+36     	; 0xb34 <vfprintf+0x178>
     b10:	28 01       	movw	r4, r16
     b12:	f2 e0       	ldi	r31, 0x02	; 2
     b14:	4f 0e       	add	r4, r31
     b16:	51 1c       	adc	r5, r1
     b18:	f8 01       	movw	r30, r16
     b1a:	a0 80       	ld	r10, Z
     b1c:	b1 80       	ldd	r11, Z+1	; 0x01
     b1e:	36 fe       	sbrs	r3, 6
     b20:	03 c0       	rjmp	.+6      	; 0xb28 <vfprintf+0x16c>
     b22:	69 2d       	mov	r22, r9
     b24:	70 e0       	ldi	r23, 0x00	; 0
     b26:	02 c0       	rjmp	.+4      	; 0xb2c <vfprintf+0x170>
     b28:	6f ef       	ldi	r22, 0xFF	; 255
     b2a:	7f ef       	ldi	r23, 0xFF	; 255
     b2c:	c5 01       	movw	r24, r10
     b2e:	90 d2       	rcall	.+1312   	; 0x1050 <strnlen>
     b30:	4c 01       	movw	r8, r24
     b32:	82 01       	movw	r16, r4
     b34:	f3 2d       	mov	r31, r3
     b36:	ff 77       	andi	r31, 0x7F	; 127
     b38:	3f 2e       	mov	r3, r31
     b3a:	15 c0       	rjmp	.+42     	; 0xb66 <vfprintf+0x1aa>
     b3c:	28 01       	movw	r4, r16
     b3e:	22 e0       	ldi	r18, 0x02	; 2
     b40:	42 0e       	add	r4, r18
     b42:	51 1c       	adc	r5, r1
     b44:	f8 01       	movw	r30, r16
     b46:	a0 80       	ld	r10, Z
     b48:	b1 80       	ldd	r11, Z+1	; 0x01
     b4a:	36 fe       	sbrs	r3, 6
     b4c:	03 c0       	rjmp	.+6      	; 0xb54 <vfprintf+0x198>
     b4e:	69 2d       	mov	r22, r9
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	02 c0       	rjmp	.+4      	; 0xb58 <vfprintf+0x19c>
     b54:	6f ef       	ldi	r22, 0xFF	; 255
     b56:	7f ef       	ldi	r23, 0xFF	; 255
     b58:	c5 01       	movw	r24, r10
     b5a:	68 d2       	rcall	.+1232   	; 0x102c <strnlen_P>
     b5c:	4c 01       	movw	r8, r24
     b5e:	f3 2d       	mov	r31, r3
     b60:	f0 68       	ori	r31, 0x80	; 128
     b62:	3f 2e       	mov	r3, r31
     b64:	82 01       	movw	r16, r4
     b66:	33 fc       	sbrc	r3, 3
     b68:	19 c0       	rjmp	.+50     	; 0xb9c <vfprintf+0x1e0>
     b6a:	82 2d       	mov	r24, r2
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	88 16       	cp	r8, r24
     b70:	99 06       	cpc	r9, r25
     b72:	a0 f4       	brcc	.+40     	; 0xb9c <vfprintf+0x1e0>
     b74:	b6 01       	movw	r22, r12
     b76:	80 e2       	ldi	r24, 0x20	; 32
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	85 d2       	rcall	.+1290   	; 0x1086 <fputc>
     b7c:	2a 94       	dec	r2
     b7e:	f5 cf       	rjmp	.-22     	; 0xb6a <vfprintf+0x1ae>
     b80:	f5 01       	movw	r30, r10
     b82:	37 fc       	sbrc	r3, 7
     b84:	85 91       	lpm	r24, Z+
     b86:	37 fe       	sbrs	r3, 7
     b88:	81 91       	ld	r24, Z+
     b8a:	5f 01       	movw	r10, r30
     b8c:	b6 01       	movw	r22, r12
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	7a d2       	rcall	.+1268   	; 0x1086 <fputc>
     b92:	21 10       	cpse	r2, r1
     b94:	2a 94       	dec	r2
     b96:	21 e0       	ldi	r18, 0x01	; 1
     b98:	82 1a       	sub	r8, r18
     b9a:	91 08       	sbc	r9, r1
     b9c:	81 14       	cp	r8, r1
     b9e:	91 04       	cpc	r9, r1
     ba0:	79 f7       	brne	.-34     	; 0xb80 <vfprintf+0x1c4>
     ba2:	e1 c0       	rjmp	.+450    	; 0xd66 <vfprintf+0x3aa>
     ba4:	84 36       	cpi	r24, 0x64	; 100
     ba6:	11 f0       	breq	.+4      	; 0xbac <vfprintf+0x1f0>
     ba8:	89 36       	cpi	r24, 0x69	; 105
     baa:	39 f5       	brne	.+78     	; 0xbfa <vfprintf+0x23e>
     bac:	f8 01       	movw	r30, r16
     bae:	37 fe       	sbrs	r3, 7
     bb0:	07 c0       	rjmp	.+14     	; 0xbc0 <vfprintf+0x204>
     bb2:	60 81       	ld	r22, Z
     bb4:	71 81       	ldd	r23, Z+1	; 0x01
     bb6:	82 81       	ldd	r24, Z+2	; 0x02
     bb8:	93 81       	ldd	r25, Z+3	; 0x03
     bba:	0c 5f       	subi	r16, 0xFC	; 252
     bbc:	1f 4f       	sbci	r17, 0xFF	; 255
     bbe:	08 c0       	rjmp	.+16     	; 0xbd0 <vfprintf+0x214>
     bc0:	60 81       	ld	r22, Z
     bc2:	71 81       	ldd	r23, Z+1	; 0x01
     bc4:	07 2e       	mov	r0, r23
     bc6:	00 0c       	add	r0, r0
     bc8:	88 0b       	sbc	r24, r24
     bca:	99 0b       	sbc	r25, r25
     bcc:	0e 5f       	subi	r16, 0xFE	; 254
     bce:	1f 4f       	sbci	r17, 0xFF	; 255
     bd0:	f3 2d       	mov	r31, r3
     bd2:	ff 76       	andi	r31, 0x6F	; 111
     bd4:	3f 2e       	mov	r3, r31
     bd6:	97 ff       	sbrs	r25, 7
     bd8:	09 c0       	rjmp	.+18     	; 0xbec <vfprintf+0x230>
     bda:	90 95       	com	r25
     bdc:	80 95       	com	r24
     bde:	70 95       	com	r23
     be0:	61 95       	neg	r22
     be2:	7f 4f       	sbci	r23, 0xFF	; 255
     be4:	8f 4f       	sbci	r24, 0xFF	; 255
     be6:	9f 4f       	sbci	r25, 0xFF	; 255
     be8:	f0 68       	ori	r31, 0x80	; 128
     bea:	3f 2e       	mov	r3, r31
     bec:	2a e0       	ldi	r18, 0x0A	; 10
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	a3 01       	movw	r20, r6
     bf2:	85 d2       	rcall	.+1290   	; 0x10fe <__ultoa_invert>
     bf4:	88 2e       	mov	r8, r24
     bf6:	86 18       	sub	r8, r6
     bf8:	44 c0       	rjmp	.+136    	; 0xc82 <vfprintf+0x2c6>
     bfa:	85 37       	cpi	r24, 0x75	; 117
     bfc:	31 f4       	brne	.+12     	; 0xc0a <vfprintf+0x24e>
     bfe:	23 2d       	mov	r18, r3
     c00:	2f 7e       	andi	r18, 0xEF	; 239
     c02:	b2 2e       	mov	r11, r18
     c04:	2a e0       	ldi	r18, 0x0A	; 10
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	25 c0       	rjmp	.+74     	; 0xc54 <vfprintf+0x298>
     c0a:	93 2d       	mov	r25, r3
     c0c:	99 7f       	andi	r25, 0xF9	; 249
     c0e:	b9 2e       	mov	r11, r25
     c10:	8f 36       	cpi	r24, 0x6F	; 111
     c12:	c1 f0       	breq	.+48     	; 0xc44 <vfprintf+0x288>
     c14:	18 f4       	brcc	.+6      	; 0xc1c <vfprintf+0x260>
     c16:	88 35       	cpi	r24, 0x58	; 88
     c18:	79 f0       	breq	.+30     	; 0xc38 <vfprintf+0x27c>
     c1a:	ae c0       	rjmp	.+348    	; 0xd78 <vfprintf+0x3bc>
     c1c:	80 37       	cpi	r24, 0x70	; 112
     c1e:	19 f0       	breq	.+6      	; 0xc26 <vfprintf+0x26a>
     c20:	88 37       	cpi	r24, 0x78	; 120
     c22:	21 f0       	breq	.+8      	; 0xc2c <vfprintf+0x270>
     c24:	a9 c0       	rjmp	.+338    	; 0xd78 <vfprintf+0x3bc>
     c26:	e9 2f       	mov	r30, r25
     c28:	e0 61       	ori	r30, 0x10	; 16
     c2a:	be 2e       	mov	r11, r30
     c2c:	b4 fe       	sbrs	r11, 4
     c2e:	0d c0       	rjmp	.+26     	; 0xc4a <vfprintf+0x28e>
     c30:	fb 2d       	mov	r31, r11
     c32:	f4 60       	ori	r31, 0x04	; 4
     c34:	bf 2e       	mov	r11, r31
     c36:	09 c0       	rjmp	.+18     	; 0xc4a <vfprintf+0x28e>
     c38:	34 fe       	sbrs	r3, 4
     c3a:	0a c0       	rjmp	.+20     	; 0xc50 <vfprintf+0x294>
     c3c:	29 2f       	mov	r18, r25
     c3e:	26 60       	ori	r18, 0x06	; 6
     c40:	b2 2e       	mov	r11, r18
     c42:	06 c0       	rjmp	.+12     	; 0xc50 <vfprintf+0x294>
     c44:	28 e0       	ldi	r18, 0x08	; 8
     c46:	30 e0       	ldi	r19, 0x00	; 0
     c48:	05 c0       	rjmp	.+10     	; 0xc54 <vfprintf+0x298>
     c4a:	20 e1       	ldi	r18, 0x10	; 16
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <vfprintf+0x298>
     c50:	20 e1       	ldi	r18, 0x10	; 16
     c52:	32 e0       	ldi	r19, 0x02	; 2
     c54:	f8 01       	movw	r30, r16
     c56:	b7 fe       	sbrs	r11, 7
     c58:	07 c0       	rjmp	.+14     	; 0xc68 <vfprintf+0x2ac>
     c5a:	60 81       	ld	r22, Z
     c5c:	71 81       	ldd	r23, Z+1	; 0x01
     c5e:	82 81       	ldd	r24, Z+2	; 0x02
     c60:	93 81       	ldd	r25, Z+3	; 0x03
     c62:	0c 5f       	subi	r16, 0xFC	; 252
     c64:	1f 4f       	sbci	r17, 0xFF	; 255
     c66:	06 c0       	rjmp	.+12     	; 0xc74 <vfprintf+0x2b8>
     c68:	60 81       	ld	r22, Z
     c6a:	71 81       	ldd	r23, Z+1	; 0x01
     c6c:	80 e0       	ldi	r24, 0x00	; 0
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	0e 5f       	subi	r16, 0xFE	; 254
     c72:	1f 4f       	sbci	r17, 0xFF	; 255
     c74:	a3 01       	movw	r20, r6
     c76:	43 d2       	rcall	.+1158   	; 0x10fe <__ultoa_invert>
     c78:	88 2e       	mov	r8, r24
     c7a:	86 18       	sub	r8, r6
     c7c:	fb 2d       	mov	r31, r11
     c7e:	ff 77       	andi	r31, 0x7F	; 127
     c80:	3f 2e       	mov	r3, r31
     c82:	36 fe       	sbrs	r3, 6
     c84:	0d c0       	rjmp	.+26     	; 0xca0 <vfprintf+0x2e4>
     c86:	23 2d       	mov	r18, r3
     c88:	2e 7f       	andi	r18, 0xFE	; 254
     c8a:	a2 2e       	mov	r10, r18
     c8c:	89 14       	cp	r8, r9
     c8e:	58 f4       	brcc	.+22     	; 0xca6 <vfprintf+0x2ea>
     c90:	34 fe       	sbrs	r3, 4
     c92:	0b c0       	rjmp	.+22     	; 0xcaa <vfprintf+0x2ee>
     c94:	32 fc       	sbrc	r3, 2
     c96:	09 c0       	rjmp	.+18     	; 0xcaa <vfprintf+0x2ee>
     c98:	83 2d       	mov	r24, r3
     c9a:	8e 7e       	andi	r24, 0xEE	; 238
     c9c:	a8 2e       	mov	r10, r24
     c9e:	05 c0       	rjmp	.+10     	; 0xcaa <vfprintf+0x2ee>
     ca0:	b8 2c       	mov	r11, r8
     ca2:	a3 2c       	mov	r10, r3
     ca4:	03 c0       	rjmp	.+6      	; 0xcac <vfprintf+0x2f0>
     ca6:	b8 2c       	mov	r11, r8
     ca8:	01 c0       	rjmp	.+2      	; 0xcac <vfprintf+0x2f0>
     caa:	b9 2c       	mov	r11, r9
     cac:	a4 fe       	sbrs	r10, 4
     cae:	0f c0       	rjmp	.+30     	; 0xcce <vfprintf+0x312>
     cb0:	fe 01       	movw	r30, r28
     cb2:	e8 0d       	add	r30, r8
     cb4:	f1 1d       	adc	r31, r1
     cb6:	80 81       	ld	r24, Z
     cb8:	80 33       	cpi	r24, 0x30	; 48
     cba:	21 f4       	brne	.+8      	; 0xcc4 <vfprintf+0x308>
     cbc:	9a 2d       	mov	r25, r10
     cbe:	99 7e       	andi	r25, 0xE9	; 233
     cc0:	a9 2e       	mov	r10, r25
     cc2:	09 c0       	rjmp	.+18     	; 0xcd6 <vfprintf+0x31a>
     cc4:	a2 fe       	sbrs	r10, 2
     cc6:	06 c0       	rjmp	.+12     	; 0xcd4 <vfprintf+0x318>
     cc8:	b3 94       	inc	r11
     cca:	b3 94       	inc	r11
     ccc:	04 c0       	rjmp	.+8      	; 0xcd6 <vfprintf+0x31a>
     cce:	8a 2d       	mov	r24, r10
     cd0:	86 78       	andi	r24, 0x86	; 134
     cd2:	09 f0       	breq	.+2      	; 0xcd6 <vfprintf+0x31a>
     cd4:	b3 94       	inc	r11
     cd6:	a3 fc       	sbrc	r10, 3
     cd8:	10 c0       	rjmp	.+32     	; 0xcfa <vfprintf+0x33e>
     cda:	a0 fe       	sbrs	r10, 0
     cdc:	06 c0       	rjmp	.+12     	; 0xcea <vfprintf+0x32e>
     cde:	b2 14       	cp	r11, r2
     ce0:	80 f4       	brcc	.+32     	; 0xd02 <vfprintf+0x346>
     ce2:	28 0c       	add	r2, r8
     ce4:	92 2c       	mov	r9, r2
     ce6:	9b 18       	sub	r9, r11
     ce8:	0d c0       	rjmp	.+26     	; 0xd04 <vfprintf+0x348>
     cea:	b2 14       	cp	r11, r2
     cec:	58 f4       	brcc	.+22     	; 0xd04 <vfprintf+0x348>
     cee:	b6 01       	movw	r22, r12
     cf0:	80 e2       	ldi	r24, 0x20	; 32
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	c8 d1       	rcall	.+912    	; 0x1086 <fputc>
     cf6:	b3 94       	inc	r11
     cf8:	f8 cf       	rjmp	.-16     	; 0xcea <vfprintf+0x32e>
     cfa:	b2 14       	cp	r11, r2
     cfc:	18 f4       	brcc	.+6      	; 0xd04 <vfprintf+0x348>
     cfe:	2b 18       	sub	r2, r11
     d00:	02 c0       	rjmp	.+4      	; 0xd06 <vfprintf+0x34a>
     d02:	98 2c       	mov	r9, r8
     d04:	21 2c       	mov	r2, r1
     d06:	a4 fe       	sbrs	r10, 4
     d08:	0f c0       	rjmp	.+30     	; 0xd28 <vfprintf+0x36c>
     d0a:	b6 01       	movw	r22, r12
     d0c:	80 e3       	ldi	r24, 0x30	; 48
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	ba d1       	rcall	.+884    	; 0x1086 <fputc>
     d12:	a2 fe       	sbrs	r10, 2
     d14:	16 c0       	rjmp	.+44     	; 0xd42 <vfprintf+0x386>
     d16:	a1 fc       	sbrc	r10, 1
     d18:	03 c0       	rjmp	.+6      	; 0xd20 <vfprintf+0x364>
     d1a:	88 e7       	ldi	r24, 0x78	; 120
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <vfprintf+0x368>
     d20:	88 e5       	ldi	r24, 0x58	; 88
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	b6 01       	movw	r22, r12
     d26:	0c c0       	rjmp	.+24     	; 0xd40 <vfprintf+0x384>
     d28:	8a 2d       	mov	r24, r10
     d2a:	86 78       	andi	r24, 0x86	; 134
     d2c:	51 f0       	breq	.+20     	; 0xd42 <vfprintf+0x386>
     d2e:	a1 fe       	sbrs	r10, 1
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <vfprintf+0x37a>
     d32:	8b e2       	ldi	r24, 0x2B	; 43
     d34:	01 c0       	rjmp	.+2      	; 0xd38 <vfprintf+0x37c>
     d36:	80 e2       	ldi	r24, 0x20	; 32
     d38:	a7 fc       	sbrc	r10, 7
     d3a:	8d e2       	ldi	r24, 0x2D	; 45
     d3c:	b6 01       	movw	r22, r12
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	a2 d1       	rcall	.+836    	; 0x1086 <fputc>
     d42:	89 14       	cp	r8, r9
     d44:	30 f4       	brcc	.+12     	; 0xd52 <vfprintf+0x396>
     d46:	b6 01       	movw	r22, r12
     d48:	80 e3       	ldi	r24, 0x30	; 48
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	9c d1       	rcall	.+824    	; 0x1086 <fputc>
     d4e:	9a 94       	dec	r9
     d50:	f8 cf       	rjmp	.-16     	; 0xd42 <vfprintf+0x386>
     d52:	8a 94       	dec	r8
     d54:	f3 01       	movw	r30, r6
     d56:	e8 0d       	add	r30, r8
     d58:	f1 1d       	adc	r31, r1
     d5a:	80 81       	ld	r24, Z
     d5c:	b6 01       	movw	r22, r12
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	92 d1       	rcall	.+804    	; 0x1086 <fputc>
     d62:	81 10       	cpse	r8, r1
     d64:	f6 cf       	rjmp	.-20     	; 0xd52 <vfprintf+0x396>
     d66:	22 20       	and	r2, r2
     d68:	09 f4       	brne	.+2      	; 0xd6c <vfprintf+0x3b0>
     d6a:	4e ce       	rjmp	.-868    	; 0xa08 <vfprintf+0x4c>
     d6c:	b6 01       	movw	r22, r12
     d6e:	80 e2       	ldi	r24, 0x20	; 32
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	89 d1       	rcall	.+786    	; 0x1086 <fputc>
     d74:	2a 94       	dec	r2
     d76:	f7 cf       	rjmp	.-18     	; 0xd66 <vfprintf+0x3aa>
     d78:	f6 01       	movw	r30, r12
     d7a:	86 81       	ldd	r24, Z+6	; 0x06
     d7c:	97 81       	ldd	r25, Z+7	; 0x07
     d7e:	02 c0       	rjmp	.+4      	; 0xd84 <vfprintf+0x3c8>
     d80:	8f ef       	ldi	r24, 0xFF	; 255
     d82:	9f ef       	ldi	r25, 0xFF	; 255
     d84:	2b 96       	adiw	r28, 0x0b	; 11
     d86:	0f b6       	in	r0, 0x3f	; 63
     d88:	f8 94       	cli
     d8a:	de bf       	out	0x3e, r29	; 62
     d8c:	0f be       	out	0x3f, r0	; 63
     d8e:	cd bf       	out	0x3d, r28	; 61
     d90:	df 91       	pop	r29
     d92:	cf 91       	pop	r28
     d94:	1f 91       	pop	r17
     d96:	0f 91       	pop	r16
     d98:	ff 90       	pop	r15
     d9a:	ef 90       	pop	r14
     d9c:	df 90       	pop	r13
     d9e:	cf 90       	pop	r12
     da0:	bf 90       	pop	r11
     da2:	af 90       	pop	r10
     da4:	9f 90       	pop	r9
     da6:	8f 90       	pop	r8
     da8:	7f 90       	pop	r7
     daa:	6f 90       	pop	r6
     dac:	5f 90       	pop	r5
     dae:	4f 90       	pop	r4
     db0:	3f 90       	pop	r3
     db2:	2f 90       	pop	r2
     db4:	08 95       	ret

00000db6 <calloc>:
     db6:	0f 93       	push	r16
     db8:	1f 93       	push	r17
     dba:	cf 93       	push	r28
     dbc:	df 93       	push	r29
     dbe:	86 9f       	mul	r24, r22
     dc0:	80 01       	movw	r16, r0
     dc2:	87 9f       	mul	r24, r23
     dc4:	10 0d       	add	r17, r0
     dc6:	96 9f       	mul	r25, r22
     dc8:	10 0d       	add	r17, r0
     dca:	11 24       	eor	r1, r1
     dcc:	c8 01       	movw	r24, r16
     dce:	0d d0       	rcall	.+26     	; 0xdea <malloc>
     dd0:	ec 01       	movw	r28, r24
     dd2:	00 97       	sbiw	r24, 0x00	; 0
     dd4:	21 f0       	breq	.+8      	; 0xdde <calloc+0x28>
     dd6:	a8 01       	movw	r20, r16
     dd8:	60 e0       	ldi	r22, 0x00	; 0
     dda:	70 e0       	ldi	r23, 0x00	; 0
     ddc:	32 d1       	rcall	.+612    	; 0x1042 <memset>
     dde:	ce 01       	movw	r24, r28
     de0:	df 91       	pop	r29
     de2:	cf 91       	pop	r28
     de4:	1f 91       	pop	r17
     de6:	0f 91       	pop	r16
     de8:	08 95       	ret

00000dea <malloc>:
     dea:	0f 93       	push	r16
     dec:	1f 93       	push	r17
     dee:	cf 93       	push	r28
     df0:	df 93       	push	r29
     df2:	82 30       	cpi	r24, 0x02	; 2
     df4:	91 05       	cpc	r25, r1
     df6:	10 f4       	brcc	.+4      	; 0xdfc <malloc+0x12>
     df8:	82 e0       	ldi	r24, 0x02	; 2
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <__flp>
     e00:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <__flp+0x1>
     e04:	20 e0       	ldi	r18, 0x00	; 0
     e06:	30 e0       	ldi	r19, 0x00	; 0
     e08:	a0 e0       	ldi	r26, 0x00	; 0
     e0a:	b0 e0       	ldi	r27, 0x00	; 0
     e0c:	30 97       	sbiw	r30, 0x00	; 0
     e0e:	19 f1       	breq	.+70     	; 0xe56 <malloc+0x6c>
     e10:	40 81       	ld	r20, Z
     e12:	51 81       	ldd	r21, Z+1	; 0x01
     e14:	02 81       	ldd	r16, Z+2	; 0x02
     e16:	13 81       	ldd	r17, Z+3	; 0x03
     e18:	48 17       	cp	r20, r24
     e1a:	59 07       	cpc	r21, r25
     e1c:	c8 f0       	brcs	.+50     	; 0xe50 <malloc+0x66>
     e1e:	84 17       	cp	r24, r20
     e20:	95 07       	cpc	r25, r21
     e22:	69 f4       	brne	.+26     	; 0xe3e <malloc+0x54>
     e24:	10 97       	sbiw	r26, 0x00	; 0
     e26:	31 f0       	breq	.+12     	; 0xe34 <malloc+0x4a>
     e28:	12 96       	adiw	r26, 0x02	; 2
     e2a:	0c 93       	st	X, r16
     e2c:	12 97       	sbiw	r26, 0x02	; 2
     e2e:	13 96       	adiw	r26, 0x03	; 3
     e30:	1c 93       	st	X, r17
     e32:	27 c0       	rjmp	.+78     	; 0xe82 <malloc+0x98>
     e34:	00 93 76 02 	sts	0x0276, r16	; 0x800276 <__flp>
     e38:	10 93 77 02 	sts	0x0277, r17	; 0x800277 <__flp+0x1>
     e3c:	22 c0       	rjmp	.+68     	; 0xe82 <malloc+0x98>
     e3e:	21 15       	cp	r18, r1
     e40:	31 05       	cpc	r19, r1
     e42:	19 f0       	breq	.+6      	; 0xe4a <malloc+0x60>
     e44:	42 17       	cp	r20, r18
     e46:	53 07       	cpc	r21, r19
     e48:	18 f4       	brcc	.+6      	; 0xe50 <malloc+0x66>
     e4a:	9a 01       	movw	r18, r20
     e4c:	bd 01       	movw	r22, r26
     e4e:	ef 01       	movw	r28, r30
     e50:	df 01       	movw	r26, r30
     e52:	f8 01       	movw	r30, r16
     e54:	db cf       	rjmp	.-74     	; 0xe0c <malloc+0x22>
     e56:	21 15       	cp	r18, r1
     e58:	31 05       	cpc	r19, r1
     e5a:	f9 f0       	breq	.+62     	; 0xe9a <malloc+0xb0>
     e5c:	28 1b       	sub	r18, r24
     e5e:	39 0b       	sbc	r19, r25
     e60:	24 30       	cpi	r18, 0x04	; 4
     e62:	31 05       	cpc	r19, r1
     e64:	80 f4       	brcc	.+32     	; 0xe86 <malloc+0x9c>
     e66:	8a 81       	ldd	r24, Y+2	; 0x02
     e68:	9b 81       	ldd	r25, Y+3	; 0x03
     e6a:	61 15       	cp	r22, r1
     e6c:	71 05       	cpc	r23, r1
     e6e:	21 f0       	breq	.+8      	; 0xe78 <malloc+0x8e>
     e70:	fb 01       	movw	r30, r22
     e72:	93 83       	std	Z+3, r25	; 0x03
     e74:	82 83       	std	Z+2, r24	; 0x02
     e76:	04 c0       	rjmp	.+8      	; 0xe80 <malloc+0x96>
     e78:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <__flp+0x1>
     e7c:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <__flp>
     e80:	fe 01       	movw	r30, r28
     e82:	32 96       	adiw	r30, 0x02	; 2
     e84:	44 c0       	rjmp	.+136    	; 0xf0e <malloc+0x124>
     e86:	fe 01       	movw	r30, r28
     e88:	e2 0f       	add	r30, r18
     e8a:	f3 1f       	adc	r31, r19
     e8c:	81 93       	st	Z+, r24
     e8e:	91 93       	st	Z+, r25
     e90:	22 50       	subi	r18, 0x02	; 2
     e92:	31 09       	sbc	r19, r1
     e94:	39 83       	std	Y+1, r19	; 0x01
     e96:	28 83       	st	Y, r18
     e98:	3a c0       	rjmp	.+116    	; 0xf0e <malloc+0x124>
     e9a:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__brkval>
     e9e:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__brkval+0x1>
     ea2:	23 2b       	or	r18, r19
     ea4:	41 f4       	brne	.+16     	; 0xeb6 <malloc+0xcc>
     ea6:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     eaa:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     eae:	30 93 75 02 	sts	0x0275, r19	; 0x800275 <__brkval+0x1>
     eb2:	20 93 74 02 	sts	0x0274, r18	; 0x800274 <__brkval>
     eb6:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     eba:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     ebe:	21 15       	cp	r18, r1
     ec0:	31 05       	cpc	r19, r1
     ec2:	41 f4       	brne	.+16     	; 0xed4 <malloc+0xea>
     ec4:	2d b7       	in	r18, 0x3d	; 61
     ec6:	3e b7       	in	r19, 0x3e	; 62
     ec8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     ecc:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     ed0:	24 1b       	sub	r18, r20
     ed2:	35 0b       	sbc	r19, r21
     ed4:	e0 91 74 02 	lds	r30, 0x0274	; 0x800274 <__brkval>
     ed8:	f0 91 75 02 	lds	r31, 0x0275	; 0x800275 <__brkval+0x1>
     edc:	e2 17       	cp	r30, r18
     ede:	f3 07       	cpc	r31, r19
     ee0:	a0 f4       	brcc	.+40     	; 0xf0a <malloc+0x120>
     ee2:	2e 1b       	sub	r18, r30
     ee4:	3f 0b       	sbc	r19, r31
     ee6:	28 17       	cp	r18, r24
     ee8:	39 07       	cpc	r19, r25
     eea:	78 f0       	brcs	.+30     	; 0xf0a <malloc+0x120>
     eec:	ac 01       	movw	r20, r24
     eee:	4e 5f       	subi	r20, 0xFE	; 254
     ef0:	5f 4f       	sbci	r21, 0xFF	; 255
     ef2:	24 17       	cp	r18, r20
     ef4:	35 07       	cpc	r19, r21
     ef6:	48 f0       	brcs	.+18     	; 0xf0a <malloc+0x120>
     ef8:	4e 0f       	add	r20, r30
     efa:	5f 1f       	adc	r21, r31
     efc:	50 93 75 02 	sts	0x0275, r21	; 0x800275 <__brkval+0x1>
     f00:	40 93 74 02 	sts	0x0274, r20	; 0x800274 <__brkval>
     f04:	81 93       	st	Z+, r24
     f06:	91 93       	st	Z+, r25
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <malloc+0x124>
     f0a:	e0 e0       	ldi	r30, 0x00	; 0
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	cf 01       	movw	r24, r30
     f10:	df 91       	pop	r29
     f12:	cf 91       	pop	r28
     f14:	1f 91       	pop	r17
     f16:	0f 91       	pop	r16
     f18:	08 95       	ret

00000f1a <free>:
     f1a:	cf 93       	push	r28
     f1c:	df 93       	push	r29
     f1e:	00 97       	sbiw	r24, 0x00	; 0
     f20:	09 f4       	brne	.+2      	; 0xf24 <free+0xa>
     f22:	81 c0       	rjmp	.+258    	; 0x1026 <free+0x10c>
     f24:	fc 01       	movw	r30, r24
     f26:	32 97       	sbiw	r30, 0x02	; 2
     f28:	13 82       	std	Z+3, r1	; 0x03
     f2a:	12 82       	std	Z+2, r1	; 0x02
     f2c:	a0 91 76 02 	lds	r26, 0x0276	; 0x800276 <__flp>
     f30:	b0 91 77 02 	lds	r27, 0x0277	; 0x800277 <__flp+0x1>
     f34:	10 97       	sbiw	r26, 0x00	; 0
     f36:	81 f4       	brne	.+32     	; 0xf58 <free+0x3e>
     f38:	20 81       	ld	r18, Z
     f3a:	31 81       	ldd	r19, Z+1	; 0x01
     f3c:	82 0f       	add	r24, r18
     f3e:	93 1f       	adc	r25, r19
     f40:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__brkval>
     f44:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__brkval+0x1>
     f48:	28 17       	cp	r18, r24
     f4a:	39 07       	cpc	r19, r25
     f4c:	51 f5       	brne	.+84     	; 0xfa2 <free+0x88>
     f4e:	f0 93 75 02 	sts	0x0275, r31	; 0x800275 <__brkval+0x1>
     f52:	e0 93 74 02 	sts	0x0274, r30	; 0x800274 <__brkval>
     f56:	67 c0       	rjmp	.+206    	; 0x1026 <free+0x10c>
     f58:	ed 01       	movw	r28, r26
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	ce 17       	cp	r28, r30
     f60:	df 07       	cpc	r29, r31
     f62:	40 f4       	brcc	.+16     	; 0xf74 <free+0x5a>
     f64:	4a 81       	ldd	r20, Y+2	; 0x02
     f66:	5b 81       	ldd	r21, Y+3	; 0x03
     f68:	9e 01       	movw	r18, r28
     f6a:	41 15       	cp	r20, r1
     f6c:	51 05       	cpc	r21, r1
     f6e:	f1 f0       	breq	.+60     	; 0xfac <free+0x92>
     f70:	ea 01       	movw	r28, r20
     f72:	f5 cf       	rjmp	.-22     	; 0xf5e <free+0x44>
     f74:	d3 83       	std	Z+3, r29	; 0x03
     f76:	c2 83       	std	Z+2, r28	; 0x02
     f78:	40 81       	ld	r20, Z
     f7a:	51 81       	ldd	r21, Z+1	; 0x01
     f7c:	84 0f       	add	r24, r20
     f7e:	95 1f       	adc	r25, r21
     f80:	c8 17       	cp	r28, r24
     f82:	d9 07       	cpc	r29, r25
     f84:	59 f4       	brne	.+22     	; 0xf9c <free+0x82>
     f86:	88 81       	ld	r24, Y
     f88:	99 81       	ldd	r25, Y+1	; 0x01
     f8a:	84 0f       	add	r24, r20
     f8c:	95 1f       	adc	r25, r21
     f8e:	02 96       	adiw	r24, 0x02	; 2
     f90:	91 83       	std	Z+1, r25	; 0x01
     f92:	80 83       	st	Z, r24
     f94:	8a 81       	ldd	r24, Y+2	; 0x02
     f96:	9b 81       	ldd	r25, Y+3	; 0x03
     f98:	93 83       	std	Z+3, r25	; 0x03
     f9a:	82 83       	std	Z+2, r24	; 0x02
     f9c:	21 15       	cp	r18, r1
     f9e:	31 05       	cpc	r19, r1
     fa0:	29 f4       	brne	.+10     	; 0xfac <free+0x92>
     fa2:	f0 93 77 02 	sts	0x0277, r31	; 0x800277 <__flp+0x1>
     fa6:	e0 93 76 02 	sts	0x0276, r30	; 0x800276 <__flp>
     faa:	3d c0       	rjmp	.+122    	; 0x1026 <free+0x10c>
     fac:	e9 01       	movw	r28, r18
     fae:	fb 83       	std	Y+3, r31	; 0x03
     fb0:	ea 83       	std	Y+2, r30	; 0x02
     fb2:	49 91       	ld	r20, Y+
     fb4:	59 91       	ld	r21, Y+
     fb6:	c4 0f       	add	r28, r20
     fb8:	d5 1f       	adc	r29, r21
     fba:	ec 17       	cp	r30, r28
     fbc:	fd 07       	cpc	r31, r29
     fbe:	61 f4       	brne	.+24     	; 0xfd8 <free+0xbe>
     fc0:	80 81       	ld	r24, Z
     fc2:	91 81       	ldd	r25, Z+1	; 0x01
     fc4:	84 0f       	add	r24, r20
     fc6:	95 1f       	adc	r25, r21
     fc8:	02 96       	adiw	r24, 0x02	; 2
     fca:	e9 01       	movw	r28, r18
     fcc:	99 83       	std	Y+1, r25	; 0x01
     fce:	88 83       	st	Y, r24
     fd0:	82 81       	ldd	r24, Z+2	; 0x02
     fd2:	93 81       	ldd	r25, Z+3	; 0x03
     fd4:	9b 83       	std	Y+3, r25	; 0x03
     fd6:	8a 83       	std	Y+2, r24	; 0x02
     fd8:	e0 e0       	ldi	r30, 0x00	; 0
     fda:	f0 e0       	ldi	r31, 0x00	; 0
     fdc:	12 96       	adiw	r26, 0x02	; 2
     fde:	8d 91       	ld	r24, X+
     fe0:	9c 91       	ld	r25, X
     fe2:	13 97       	sbiw	r26, 0x03	; 3
     fe4:	00 97       	sbiw	r24, 0x00	; 0
     fe6:	19 f0       	breq	.+6      	; 0xfee <free+0xd4>
     fe8:	fd 01       	movw	r30, r26
     fea:	dc 01       	movw	r26, r24
     fec:	f7 cf       	rjmp	.-18     	; 0xfdc <free+0xc2>
     fee:	8d 91       	ld	r24, X+
     ff0:	9c 91       	ld	r25, X
     ff2:	11 97       	sbiw	r26, 0x01	; 1
     ff4:	9d 01       	movw	r18, r26
     ff6:	2e 5f       	subi	r18, 0xFE	; 254
     ff8:	3f 4f       	sbci	r19, 0xFF	; 255
     ffa:	82 0f       	add	r24, r18
     ffc:	93 1f       	adc	r25, r19
     ffe:	20 91 74 02 	lds	r18, 0x0274	; 0x800274 <__brkval>
    1002:	30 91 75 02 	lds	r19, 0x0275	; 0x800275 <__brkval+0x1>
    1006:	28 17       	cp	r18, r24
    1008:	39 07       	cpc	r19, r25
    100a:	69 f4       	brne	.+26     	; 0x1026 <free+0x10c>
    100c:	30 97       	sbiw	r30, 0x00	; 0
    100e:	29 f4       	brne	.+10     	; 0x101a <free+0x100>
    1010:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <__flp+0x1>
    1014:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <__flp>
    1018:	02 c0       	rjmp	.+4      	; 0x101e <free+0x104>
    101a:	13 82       	std	Z+3, r1	; 0x03
    101c:	12 82       	std	Z+2, r1	; 0x02
    101e:	b0 93 75 02 	sts	0x0275, r27	; 0x800275 <__brkval+0x1>
    1022:	a0 93 74 02 	sts	0x0274, r26	; 0x800274 <__brkval>
    1026:	df 91       	pop	r29
    1028:	cf 91       	pop	r28
    102a:	08 95       	ret

0000102c <strnlen_P>:
    102c:	fc 01       	movw	r30, r24
    102e:	05 90       	lpm	r0, Z+
    1030:	61 50       	subi	r22, 0x01	; 1
    1032:	70 40       	sbci	r23, 0x00	; 0
    1034:	01 10       	cpse	r0, r1
    1036:	d8 f7       	brcc	.-10     	; 0x102e <strnlen_P+0x2>
    1038:	80 95       	com	r24
    103a:	90 95       	com	r25
    103c:	8e 0f       	add	r24, r30
    103e:	9f 1f       	adc	r25, r31
    1040:	08 95       	ret

00001042 <memset>:
    1042:	dc 01       	movw	r26, r24
    1044:	01 c0       	rjmp	.+2      	; 0x1048 <memset+0x6>
    1046:	6d 93       	st	X+, r22
    1048:	41 50       	subi	r20, 0x01	; 1
    104a:	50 40       	sbci	r21, 0x00	; 0
    104c:	e0 f7       	brcc	.-8      	; 0x1046 <memset+0x4>
    104e:	08 95       	ret

00001050 <strnlen>:
    1050:	fc 01       	movw	r30, r24
    1052:	61 50       	subi	r22, 0x01	; 1
    1054:	70 40       	sbci	r23, 0x00	; 0
    1056:	01 90       	ld	r0, Z+
    1058:	01 10       	cpse	r0, r1
    105a:	d8 f7       	brcc	.-10     	; 0x1052 <strnlen+0x2>
    105c:	80 95       	com	r24
    105e:	90 95       	com	r25
    1060:	8e 0f       	add	r24, r30
    1062:	9f 1f       	adc	r25, r31
    1064:	08 95       	ret

00001066 <strrev>:
    1066:	dc 01       	movw	r26, r24
    1068:	fc 01       	movw	r30, r24
    106a:	67 2f       	mov	r22, r23
    106c:	71 91       	ld	r23, Z+
    106e:	77 23       	and	r23, r23
    1070:	e1 f7       	brne	.-8      	; 0x106a <strrev+0x4>
    1072:	32 97       	sbiw	r30, 0x02	; 2
    1074:	04 c0       	rjmp	.+8      	; 0x107e <strrev+0x18>
    1076:	7c 91       	ld	r23, X
    1078:	6d 93       	st	X+, r22
    107a:	70 83       	st	Z, r23
    107c:	62 91       	ld	r22, -Z
    107e:	ae 17       	cp	r26, r30
    1080:	bf 07       	cpc	r27, r31
    1082:	c8 f3       	brcs	.-14     	; 0x1076 <strrev+0x10>
    1084:	08 95       	ret

00001086 <fputc>:
    1086:	0f 93       	push	r16
    1088:	1f 93       	push	r17
    108a:	cf 93       	push	r28
    108c:	df 93       	push	r29
    108e:	fb 01       	movw	r30, r22
    1090:	23 81       	ldd	r18, Z+3	; 0x03
    1092:	21 fd       	sbrc	r18, 1
    1094:	03 c0       	rjmp	.+6      	; 0x109c <fputc+0x16>
    1096:	8f ef       	ldi	r24, 0xFF	; 255
    1098:	9f ef       	ldi	r25, 0xFF	; 255
    109a:	2c c0       	rjmp	.+88     	; 0x10f4 <fputc+0x6e>
    109c:	22 ff       	sbrs	r18, 2
    109e:	16 c0       	rjmp	.+44     	; 0x10cc <fputc+0x46>
    10a0:	46 81       	ldd	r20, Z+6	; 0x06
    10a2:	57 81       	ldd	r21, Z+7	; 0x07
    10a4:	24 81       	ldd	r18, Z+4	; 0x04
    10a6:	35 81       	ldd	r19, Z+5	; 0x05
    10a8:	42 17       	cp	r20, r18
    10aa:	53 07       	cpc	r21, r19
    10ac:	44 f4       	brge	.+16     	; 0x10be <fputc+0x38>
    10ae:	a0 81       	ld	r26, Z
    10b0:	b1 81       	ldd	r27, Z+1	; 0x01
    10b2:	9d 01       	movw	r18, r26
    10b4:	2f 5f       	subi	r18, 0xFF	; 255
    10b6:	3f 4f       	sbci	r19, 0xFF	; 255
    10b8:	31 83       	std	Z+1, r19	; 0x01
    10ba:	20 83       	st	Z, r18
    10bc:	8c 93       	st	X, r24
    10be:	26 81       	ldd	r18, Z+6	; 0x06
    10c0:	37 81       	ldd	r19, Z+7	; 0x07
    10c2:	2f 5f       	subi	r18, 0xFF	; 255
    10c4:	3f 4f       	sbci	r19, 0xFF	; 255
    10c6:	37 83       	std	Z+7, r19	; 0x07
    10c8:	26 83       	std	Z+6, r18	; 0x06
    10ca:	14 c0       	rjmp	.+40     	; 0x10f4 <fputc+0x6e>
    10cc:	8b 01       	movw	r16, r22
    10ce:	ec 01       	movw	r28, r24
    10d0:	fb 01       	movw	r30, r22
    10d2:	00 84       	ldd	r0, Z+8	; 0x08
    10d4:	f1 85       	ldd	r31, Z+9	; 0x09
    10d6:	e0 2d       	mov	r30, r0
    10d8:	19 95       	eicall
    10da:	89 2b       	or	r24, r25
    10dc:	e1 f6       	brne	.-72     	; 0x1096 <fputc+0x10>
    10de:	d8 01       	movw	r26, r16
    10e0:	16 96       	adiw	r26, 0x06	; 6
    10e2:	8d 91       	ld	r24, X+
    10e4:	9c 91       	ld	r25, X
    10e6:	17 97       	sbiw	r26, 0x07	; 7
    10e8:	01 96       	adiw	r24, 0x01	; 1
    10ea:	17 96       	adiw	r26, 0x07	; 7
    10ec:	9c 93       	st	X, r25
    10ee:	8e 93       	st	-X, r24
    10f0:	16 97       	sbiw	r26, 0x06	; 6
    10f2:	ce 01       	movw	r24, r28
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	1f 91       	pop	r17
    10fa:	0f 91       	pop	r16
    10fc:	08 95       	ret

000010fe <__ultoa_invert>:
    10fe:	fa 01       	movw	r30, r20
    1100:	aa 27       	eor	r26, r26
    1102:	28 30       	cpi	r18, 0x08	; 8
    1104:	51 f1       	breq	.+84     	; 0x115a <__ultoa_invert+0x5c>
    1106:	20 31       	cpi	r18, 0x10	; 16
    1108:	81 f1       	breq	.+96     	; 0x116a <__ultoa_invert+0x6c>
    110a:	e8 94       	clt
    110c:	6f 93       	push	r22
    110e:	6e 7f       	andi	r22, 0xFE	; 254
    1110:	6e 5f       	subi	r22, 0xFE	; 254
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	8f 4f       	sbci	r24, 0xFF	; 255
    1116:	9f 4f       	sbci	r25, 0xFF	; 255
    1118:	af 4f       	sbci	r26, 0xFF	; 255
    111a:	b1 e0       	ldi	r27, 0x01	; 1
    111c:	3e d0       	rcall	.+124    	; 0x119a <__ultoa_invert+0x9c>
    111e:	b4 e0       	ldi	r27, 0x04	; 4
    1120:	3c d0       	rcall	.+120    	; 0x119a <__ultoa_invert+0x9c>
    1122:	67 0f       	add	r22, r23
    1124:	78 1f       	adc	r23, r24
    1126:	89 1f       	adc	r24, r25
    1128:	9a 1f       	adc	r25, r26
    112a:	a1 1d       	adc	r26, r1
    112c:	68 0f       	add	r22, r24
    112e:	79 1f       	adc	r23, r25
    1130:	8a 1f       	adc	r24, r26
    1132:	91 1d       	adc	r25, r1
    1134:	a1 1d       	adc	r26, r1
    1136:	6a 0f       	add	r22, r26
    1138:	71 1d       	adc	r23, r1
    113a:	81 1d       	adc	r24, r1
    113c:	91 1d       	adc	r25, r1
    113e:	a1 1d       	adc	r26, r1
    1140:	20 d0       	rcall	.+64     	; 0x1182 <__ultoa_invert+0x84>
    1142:	09 f4       	brne	.+2      	; 0x1146 <__ultoa_invert+0x48>
    1144:	68 94       	set
    1146:	3f 91       	pop	r19
    1148:	2a e0       	ldi	r18, 0x0A	; 10
    114a:	26 9f       	mul	r18, r22
    114c:	11 24       	eor	r1, r1
    114e:	30 19       	sub	r19, r0
    1150:	30 5d       	subi	r19, 0xD0	; 208
    1152:	31 93       	st	Z+, r19
    1154:	de f6       	brtc	.-74     	; 0x110c <__ultoa_invert+0xe>
    1156:	cf 01       	movw	r24, r30
    1158:	08 95       	ret
    115a:	46 2f       	mov	r20, r22
    115c:	47 70       	andi	r20, 0x07	; 7
    115e:	40 5d       	subi	r20, 0xD0	; 208
    1160:	41 93       	st	Z+, r20
    1162:	b3 e0       	ldi	r27, 0x03	; 3
    1164:	0f d0       	rcall	.+30     	; 0x1184 <__ultoa_invert+0x86>
    1166:	c9 f7       	brne	.-14     	; 0x115a <__ultoa_invert+0x5c>
    1168:	f6 cf       	rjmp	.-20     	; 0x1156 <__ultoa_invert+0x58>
    116a:	46 2f       	mov	r20, r22
    116c:	4f 70       	andi	r20, 0x0F	; 15
    116e:	40 5d       	subi	r20, 0xD0	; 208
    1170:	4a 33       	cpi	r20, 0x3A	; 58
    1172:	18 f0       	brcs	.+6      	; 0x117a <__ultoa_invert+0x7c>
    1174:	49 5d       	subi	r20, 0xD9	; 217
    1176:	31 fd       	sbrc	r19, 1
    1178:	40 52       	subi	r20, 0x20	; 32
    117a:	41 93       	st	Z+, r20
    117c:	02 d0       	rcall	.+4      	; 0x1182 <__ultoa_invert+0x84>
    117e:	a9 f7       	brne	.-22     	; 0x116a <__ultoa_invert+0x6c>
    1180:	ea cf       	rjmp	.-44     	; 0x1156 <__ultoa_invert+0x58>
    1182:	b4 e0       	ldi	r27, 0x04	; 4
    1184:	a6 95       	lsr	r26
    1186:	97 95       	ror	r25
    1188:	87 95       	ror	r24
    118a:	77 95       	ror	r23
    118c:	67 95       	ror	r22
    118e:	ba 95       	dec	r27
    1190:	c9 f7       	brne	.-14     	; 0x1184 <__ultoa_invert+0x86>
    1192:	00 97       	sbiw	r24, 0x00	; 0
    1194:	61 05       	cpc	r22, r1
    1196:	71 05       	cpc	r23, r1
    1198:	08 95       	ret
    119a:	9b 01       	movw	r18, r22
    119c:	ac 01       	movw	r20, r24
    119e:	0a 2e       	mov	r0, r26
    11a0:	06 94       	lsr	r0
    11a2:	57 95       	ror	r21
    11a4:	47 95       	ror	r20
    11a6:	37 95       	ror	r19
    11a8:	27 95       	ror	r18
    11aa:	ba 95       	dec	r27
    11ac:	c9 f7       	brne	.-14     	; 0x11a0 <__ultoa_invert+0xa2>
    11ae:	62 0f       	add	r22, r18
    11b0:	73 1f       	adc	r23, r19
    11b2:	84 1f       	adc	r24, r20
    11b4:	95 1f       	adc	r25, r21
    11b6:	a0 1d       	adc	r26, r0
    11b8:	08 95       	ret

000011ba <_exit>:
    11ba:	f8 94       	cli

000011bc <__stop_program>:
    11bc:	ff cf       	rjmp	.-2      	; 0x11bc <__stop_program>
