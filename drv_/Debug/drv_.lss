
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800200  00001878  0000190c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001878  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  00800240  00800240  0000194c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000194c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  000019e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022d2  00000000  00000000  00001ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012e8  00000000  00000000  00003e72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001083  00000000  00000000  0000515a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004e8  00000000  00000000  000061e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a8e  00000000  00000000  000066c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000015a7  00000000  00000000  00007156  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  000086fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8f c0       	rjmp	.+286    	; 0x120 <__ctors_end>
       2:	00 00       	nop
       4:	ad c0       	rjmp	.+346    	; 0x160 <__bad_interrupt>
       6:	00 00       	nop
       8:	ab c0       	rjmp	.+342    	; 0x160 <__bad_interrupt>
       a:	00 00       	nop
       c:	a9 c0       	rjmp	.+338    	; 0x160 <__bad_interrupt>
       e:	00 00       	nop
      10:	a7 c0       	rjmp	.+334    	; 0x160 <__bad_interrupt>
      12:	00 00       	nop
      14:	a5 c0       	rjmp	.+330    	; 0x160 <__bad_interrupt>
      16:	00 00       	nop
      18:	a3 c0       	rjmp	.+326    	; 0x160 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a1 c0       	rjmp	.+322    	; 0x160 <__bad_interrupt>
      1e:	00 00       	nop
      20:	9f c0       	rjmp	.+318    	; 0x160 <__bad_interrupt>
      22:	00 00       	nop
      24:	9d c0       	rjmp	.+314    	; 0x160 <__bad_interrupt>
      26:	00 00       	nop
      28:	9b c0       	rjmp	.+310    	; 0x160 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	99 c0       	rjmp	.+306    	; 0x160 <__bad_interrupt>
      2e:	00 00       	nop
      30:	97 c0       	rjmp	.+302    	; 0x160 <__bad_interrupt>
      32:	00 00       	nop
      34:	95 c0       	rjmp	.+298    	; 0x160 <__bad_interrupt>
      36:	00 00       	nop
      38:	93 c0       	rjmp	.+294    	; 0x160 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	91 c0       	rjmp	.+290    	; 0x160 <__bad_interrupt>
      3e:	00 00       	nop
      40:	8f c0       	rjmp	.+286    	; 0x160 <__bad_interrupt>
      42:	00 00       	nop
      44:	8d c0       	rjmp	.+282    	; 0x160 <__bad_interrupt>
      46:	00 00       	nop
      48:	8b c0       	rjmp	.+278    	; 0x160 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	89 c0       	rjmp	.+274    	; 0x160 <__bad_interrupt>
      4e:	00 00       	nop
      50:	87 c0       	rjmp	.+270    	; 0x160 <__bad_interrupt>
      52:	00 00       	nop
      54:	85 c0       	rjmp	.+266    	; 0x160 <__bad_interrupt>
      56:	00 00       	nop
      58:	83 c0       	rjmp	.+262    	; 0x160 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	81 c0       	rjmp	.+258    	; 0x160 <__bad_interrupt>
      5e:	00 00       	nop
      60:	7f c0       	rjmp	.+254    	; 0x160 <__bad_interrupt>
      62:	00 00       	nop
      64:	7d c0       	rjmp	.+250    	; 0x160 <__bad_interrupt>
      66:	00 00       	nop
      68:	7b c0       	rjmp	.+246    	; 0x160 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	79 c0       	rjmp	.+242    	; 0x160 <__bad_interrupt>
      6e:	00 00       	nop
      70:	77 c0       	rjmp	.+238    	; 0x160 <__bad_interrupt>
      72:	00 00       	nop
      74:	75 c0       	rjmp	.+234    	; 0x160 <__bad_interrupt>
      76:	00 00       	nop
      78:	73 c0       	rjmp	.+230    	; 0x160 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	71 c0       	rjmp	.+226    	; 0x160 <__bad_interrupt>
      7e:	00 00       	nop
      80:	90 c0       	rjmp	.+288    	; 0x1a2 <__vector_32>
      82:	00 00       	nop
      84:	6d c0       	rjmp	.+218    	; 0x160 <__bad_interrupt>
      86:	00 00       	nop
      88:	6b c0       	rjmp	.+214    	; 0x160 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	69 c0       	rjmp	.+210    	; 0x160 <__bad_interrupt>
      8e:	00 00       	nop
      90:	67 c0       	rjmp	.+206    	; 0x160 <__bad_interrupt>
      92:	00 00       	nop
      94:	65 c0       	rjmp	.+202    	; 0x160 <__bad_interrupt>
      96:	00 00       	nop
      98:	63 c0       	rjmp	.+198    	; 0x160 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	61 c0       	rjmp	.+194    	; 0x160 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	5f c0       	rjmp	.+190    	; 0x160 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	5d c0       	rjmp	.+186    	; 0x160 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	5b c0       	rjmp	.+182    	; 0x160 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	59 c0       	rjmp	.+178    	; 0x160 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	57 c0       	rjmp	.+174    	; 0x160 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	55 c0       	rjmp	.+170    	; 0x160 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	53 c0       	rjmp	.+166    	; 0x160 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	51 c0       	rjmp	.+162    	; 0x160 <__bad_interrupt>
      be:	00 00       	nop
      c0:	4f c0       	rjmp	.+158    	; 0x160 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	4d c0       	rjmp	.+154    	; 0x160 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	4b c0       	rjmp	.+150    	; 0x160 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	49 c0       	rjmp	.+146    	; 0x160 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	47 c0       	rjmp	.+142    	; 0x160 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	45 c0       	rjmp	.+138    	; 0x160 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	43 c0       	rjmp	.+134    	; 0x160 <__bad_interrupt>
      da:	00 00       	nop
      dc:	41 c0       	rjmp	.+130    	; 0x160 <__bad_interrupt>
      de:	00 00       	nop
      e0:	3f c0       	rjmp	.+126    	; 0x160 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	07 2c       	mov	r0, r7
      fa:	7a a5       	ldd	r23, Y+42	; 0x2a
      fc:	ba 6c       	ori	r27, 0xCA	; 202
      fe:	c5 90       	lpm	r12, Z+
     100:	da 3b       	cpi	r29, 0xBA	; 186
     102:	93 65       	ori	r25, 0x53	; 83
     104:	fc 8b       	std	Y+20, r31	; 0x14
     106:	bc 53       	subi	r27, 0x3C	; 60
     108:	f8 10       	cpse	r15, r8
     10a:	fd 3c       	cpi	r31, 0xCD	; 205
     10c:	56 92       	lac	Z, r5
     10e:	83 4d       	sbci	r24, 0xD3	; 211
     110:	bd 87       	std	Y+13, r27	; 0x0d
     112:	9d 3a       	cpi	r25, 0xAD	; 173
     114:	b6 3d       	cpi	r27, 0xD6	; 214
     116:	cb c9       	rjmp	.-3178   	; 0xfffff4ae <__eeprom_end+0xff7ef4ae>
     118:	bf 5b       	subi	r27, 0xBF	; 191
     11a:	be 73       	andi	r27, 0x3E	; 62
     11c:	da 0f       	add	r29, r26
     11e:	c9 3f       	cpi	r28, 0xF9	; 249

00000120 <__ctors_end>:
     120:	11 24       	eor	r1, r1
     122:	1f be       	out	0x3f, r1	; 63
     124:	cf ef       	ldi	r28, 0xFF	; 255
     126:	d1 e2       	ldi	r29, 0x21	; 33
     128:	de bf       	out	0x3e, r29	; 62
     12a:	cd bf       	out	0x3d, r28	; 61
     12c:	00 e0       	ldi	r16, 0x00	; 0
     12e:	0c bf       	out	0x3c, r16	; 60

00000130 <__do_copy_data>:
     130:	12 e0       	ldi	r17, 0x02	; 2
     132:	a0 e0       	ldi	r26, 0x00	; 0
     134:	b2 e0       	ldi	r27, 0x02	; 2
     136:	e8 e7       	ldi	r30, 0x78	; 120
     138:	f8 e1       	ldi	r31, 0x18	; 24
     13a:	00 e0       	ldi	r16, 0x00	; 0
     13c:	0b bf       	out	0x3b, r16	; 59
     13e:	02 c0       	rjmp	.+4      	; 0x144 <__do_copy_data+0x14>
     140:	07 90       	elpm	r0, Z+
     142:	0d 92       	st	X+, r0
     144:	a0 34       	cpi	r26, 0x40	; 64
     146:	b1 07       	cpc	r27, r17
     148:	d9 f7       	brne	.-10     	; 0x140 <__do_copy_data+0x10>

0000014a <__do_clear_bss>:
     14a:	22 e0       	ldi	r18, 0x02	; 2
     14c:	a0 e4       	ldi	r26, 0x40	; 64
     14e:	b2 e0       	ldi	r27, 0x02	; 2
     150:	01 c0       	rjmp	.+2      	; 0x154 <.do_clear_bss_start>

00000152 <.do_clear_bss_loop>:
     152:	1d 92       	st	X+, r1

00000154 <.do_clear_bss_start>:
     154:	ae 35       	cpi	r26, 0x5E	; 94
     156:	b2 07       	cpc	r27, r18
     158:	e1 f7       	brne	.-8      	; 0x152 <.do_clear_bss_loop>
     15a:	70 d0       	rcall	.+224    	; 0x23c <main>
     15c:	0c 94 3a 0c 	jmp	0x1874	; 0x1874 <_exit>

00000160 <__bad_interrupt>:
     160:	4f cf       	rjmp	.-354    	; 0x0 <__vectors>

00000162 <init_gpio>:
	DDRD|=(1<<PD7);//enable 1 DIGITAL 7
	DDRB|=(1<<PB0);//enable 2 DIGITAL 8
	DDRD|=(1<<PD2);//enable 3 DIGITAL 2
	*/
	//DDRB|=(1<<PB5);//LED13
	sbi(DDRB,4);//digital 10
     162:	24 9a       	sbi	0x04, 4	; 4
	sbi(DDRB,5);//digital 11
     164:	25 9a       	sbi	0x04, 5	; 4
	sbi(DDRB,6);//digital 12
     166:	26 9a       	sbi	0x04, 6	; 4
	sbi(DDRH,4);//digital 7
     168:	e1 e0       	ldi	r30, 0x01	; 1
     16a:	f1 e0       	ldi	r31, 0x01	; 1
     16c:	80 81       	ld	r24, Z
     16e:	80 61       	ori	r24, 0x10	; 16
     170:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8
     172:	80 81       	ld	r24, Z
     174:	80 62       	ori	r24, 0x20	; 32
     176:	80 83       	st	Z, r24
	sbi(DDRH,6);//digital 9
     178:	80 81       	ld	r24, Z
     17a:	80 64       	ori	r24, 0x40	; 64
     17c:	80 83       	st	Z, r24
     17e:	08 95       	ret

00000180 <uart_putchar>:
{
	char c[10];
	itoa(*value, c, 10);
	printf(c);
	//printf("\n");
}
     180:	cf 93       	push	r28
     182:	c8 2f       	mov	r28, r24
     184:	8a 30       	cpi	r24, 0x0A	; 10
     186:	11 f4       	brne	.+4      	; 0x18c <uart_putchar+0xc>
     188:	8d e0       	ldi	r24, 0x0D	; 13
     18a:	fa df       	rcall	.-12     	; 0x180 <uart_putchar>
     18c:	e0 ec       	ldi	r30, 0xC0	; 192
     18e:	f0 e0       	ldi	r31, 0x00	; 0
     190:	80 81       	ld	r24, Z
     192:	85 ff       	sbrs	r24, 5
     194:	fd cf       	rjmp	.-6      	; 0x190 <uart_putchar+0x10>
     196:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	cf 91       	pop	r28
     1a0:	08 95       	ret

000001a2 <__vector_32>:
     1a2:	1f 92       	push	r1
     1a4:	0f 92       	push	r0
     1a6:	0f b6       	in	r0, 0x3f	; 63
     1a8:	0f 92       	push	r0
     1aa:	11 24       	eor	r1, r1
     1ac:	8f 93       	push	r24
     1ae:	9f 93       	push	r25
     1b0:	af 93       	push	r26
     1b2:	bf 93       	push	r27
     1b4:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     1b8:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     1bc:	a0 91 42 02 	lds	r26, 0x0242	; 0x800242 <__data_end+0x2>
     1c0:	b0 91 43 02 	lds	r27, 0x0243	; 0x800243 <__data_end+0x3>
     1c4:	01 96       	adiw	r24, 0x01	; 1
     1c6:	a1 1d       	adc	r26, r1
     1c8:	b1 1d       	adc	r27, r1
     1ca:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <__data_end>
     1ce:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <__data_end+0x1>
     1d2:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <__data_end+0x2>
     1d6:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <__data_end+0x3>
     1da:	bf 91       	pop	r27
     1dc:	af 91       	pop	r26
     1de:	9f 91       	pop	r25
     1e0:	8f 91       	pop	r24
     1e2:	0f 90       	pop	r0
     1e4:	0f be       	out	0x3f, r0	; 63
     1e6:	0f 90       	pop	r0
     1e8:	1f 90       	pop	r1
     1ea:	18 95       	reti

000001ec <print16ln>:

void print16ln(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     1ec:	0f 93       	push	r16
     1ee:	1f 93       	push	r17
     1f0:	cf 93       	push	r28
     1f2:	df 93       	push	r29
     1f4:	cd b7       	in	r28, 0x3d	; 61
     1f6:	de b7       	in	r29, 0x3e	; 62
     1f8:	2a 97       	sbiw	r28, 0x0a	; 10
     1fa:	0f b6       	in	r0, 0x3f	; 63
     1fc:	f8 94       	cli
     1fe:	de bf       	out	0x3e, r29	; 62
     200:	0f be       	out	0x3f, r0	; 63
     202:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     204:	4a e0       	ldi	r20, 0x0A	; 10
     206:	8e 01       	movw	r16, r28
     208:	0f 5f       	subi	r16, 0xFF	; 255
     20a:	1f 4f       	sbci	r17, 0xFF	; 255
     20c:	b8 01       	movw	r22, r16
     20e:	fc 01       	movw	r30, r24
     210:	80 81       	ld	r24, Z
     212:	91 81       	ldd	r25, Z+1	; 0x01
     214:	7b d6       	rcall	.+3318   	; 0xf0c <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     216:	1f 93       	push	r17
     218:	0f 93       	push	r16
	printf("\n");
     21a:	e5 d6       	rcall	.+3530   	; 0xfe6 <printf>
     21c:	8a e0       	ldi	r24, 0x0A	; 10
     21e:	90 e0       	ldi	r25, 0x00	; 0
}
     220:	f5 d6       	rcall	.+3562   	; 0x100c <putchar>
     222:	0f 90       	pop	r0
     224:	0f 90       	pop	r0
     226:	2a 96       	adiw	r28, 0x0a	; 10
     228:	0f b6       	in	r0, 0x3f	; 63
     22a:	f8 94       	cli
     22c:	de bf       	out	0x3e, r29	; 62
     22e:	0f be       	out	0x3f, r0	; 63
     230:	cd bf       	out	0x3d, r28	; 61
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	1f 91       	pop	r17
     238:	0f 91       	pop	r16
     23a:	08 95       	ret

0000023c <main>:
uint16_t ADC_max=0;
uint8_t buffer[14];
uint8_t flag=0;
int main(void)

{	
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	cd b7       	in	r28, 0x3d	; 61
     242:	de b7       	in	r29, 0x3e	; 62
     244:	6a 97       	sbiw	r28, 0x1a	; 26
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	f8 94       	cli
     24a:	de bf       	out	0x3e, r29	; 62
     24c:	0f be       	out	0x3f, r0	; 63
	init_gpio();
	i2c_init();
     24e:	cd bf       	out	0x3d, r28	; 61
	USART_Init(MY_UBRR);
     250:	88 df       	rcall	.-240    	; 0x162 <init_gpio>
     252:	92 d2       	rcall	.+1316   	; 0x778 <i2c_init>
     254:	80 e1       	ldi	r24, 0x10	; 16
	uart_str = fdevopen(uart_putchar, NULL);
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	40 d3       	rcall	.+1664   	; 0x8da <USART_Init>
     25a:	60 e0       	ldi	r22, 0x00	; 0
     25c:	70 e0       	ldi	r23, 0x00	; 0
     25e:	80 ec       	ldi	r24, 0xC0	; 192
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	77 d6       	rcall	.+3310   	; 0xf52 <fdevopen>
	setup_timer3();
     264:	90 93 45 02 	sts	0x0245, r25	; 0x800245 <uart_str+0x1>
	Enable_timer3_compare_interrupt();
     268:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <uart_str>
	OCR3A=159;//interrupt every 10us
     26c:	76 d2       	rcall	.+1260   	; 0x75a <setup_timer3>
     26e:	7e d2       	rcall	.+1276   	; 0x76c <Enable_timer3_compare_interrupt>
     270:	8f e9       	ldi	r24, 0x9F	; 159
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
	float acc_total_vector=0;
	float angle_pitch_acc=0;
	float angle_roll_acc=0;
	bool set_gyro_angles;
	#ifdef CALIBERATED_DATA
		int32_t gyroX_calib=0;
     278:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     27c:	1d 86       	std	Y+13, r1	; 0x0d
     27e:	1e 86       	std	Y+14, r1	; 0x0e
		int32_t gyroY_calib=0;
     280:	1f 86       	std	Y+15, r1	; 0x0f
     282:	18 8a       	std	Y+16, r1	; 0x10
     284:	19 8a       	std	Y+17, r1	; 0x11
     286:	1a 8a       	std	Y+18, r1	; 0x12
		int32_t gyroZ_calib=0;
     288:	1b 8a       	std	Y+19, r1	; 0x13
     28a:	1c 8a       	std	Y+20, r1	; 0x14
     28c:	1d 8a       	std	Y+21, r1	; 0x15
     28e:	1e 8a       	std	Y+22, r1	; 0x16
		int32_t accelX_calib=0;
		int32_t accelY_calib=0;
		int32_t accelZ_calib=0;
		mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
     290:	1f 8a       	std	Y+23, r1	; 0x17
     292:	18 8e       	std	Y+24, r1	; 0x18
     294:	ae 01       	movw	r20, r28
     296:	4b 5e       	subi	r20, 0xEB	; 235
     298:	5f 4f       	sbci	r21, 0xFF	; 255
     29a:	be 01       	movw	r22, r28
     29c:	6f 5e       	subi	r22, 0xEF	; 239
		//mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
	#endif
	mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     29e:	7f 4f       	sbci	r23, 0xFF	; 255
     2a0:	ce 01       	movw	r24, r28
	mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     2a2:	0d 96       	adiw	r24, 0x0d	; 13
     2a4:	dc d0       	rcall	.+440    	; 0x45e <mpu6050_calibrate_gyro>
	mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     2a6:	67 e0       	ldi	r22, 0x07	; 7
     2a8:	89 e1       	ldi	r24, 0x19	; 25
     2aa:	90 d1       	rcall	.+800    	; 0x5cc <mpu6050_writeByte>
     2ac:	60 e0       	ldi	r22, 0x00	; 0
	mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     2ae:	8a e1       	ldi	r24, 0x1A	; 26
     2b0:	8d d1       	rcall	.+794    	; 0x5cc <mpu6050_writeByte>
     2b2:	68 e0       	ldi	r22, 0x08	; 8
     2b4:	8b e1       	ldi	r24, 0x1B	; 27
	mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     2b6:	8a d1       	rcall	.+788    	; 0x5cc <mpu6050_writeByte>
     2b8:	60 e1       	ldi	r22, 0x10	; 16
     2ba:	8c e1       	ldi	r24, 0x1C	; 28
     2bc:	87 d1       	rcall	.+782    	; 0x5cc <mpu6050_writeByte>
	
	/*-----------------end---------------*/
	sei();
     2be:	61 e0       	ldi	r22, 0x01	; 1
	uint32_t timer1=_10micros;
     2c0:	8b e6       	ldi	r24, 0x6B	; 107
     2c2:	84 d1       	rcall	.+776    	; 0x5cc <mpu6050_writeByte>
     2c4:	78 94       	sei
     2c6:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     2ca:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     2ce:	a0 91 42 02 	lds	r26, 0x0242	; 0x800242 <__data_end+0x2>
				//print16(&reg);
				
				////accel print
				uint16_t reg=angle_pitch_acc;
				printf(" ");
				printf("accel= ");
     2d2:	b0 91 43 02 	lds	r27, 0x0243	; 0x800243 <__data_end+0x3>
     2d6:	0f 2e       	mov	r0, r31
     2d8:	f6 e0       	ldi	r31, 0x06	; 6
     2da:	af 2e       	mov	r10, r31
	/*-----------------end---------------*/
	sei();
	uint32_t timer1=_10micros;
    while (1) 
    {
    	mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     2dc:	f2 e0       	ldi	r31, 0x02	; 2
     2de:	bf 2e       	mov	r11, r31
     2e0:	f0 2d       	mov	r31, r0
     2e2:	ce 01       	movw	r24, r28
     2e4:	05 96       	adiw	r24, 0x05	; 5
     2e6:	7c 01       	movw	r14, r24
     2e8:	8e 01       	movw	r16, r28
     2ea:	0d 5f       	subi	r16, 0xFD	; 253
     2ec:	1f 4f       	sbci	r17, 0xFF	; 255
     2ee:	9e 01       	movw	r18, r28
     2f0:	2f 5f       	subi	r18, 0xFF	; 255
     2f2:	3f 4f       	sbci	r19, 0xFF	; 255
     2f4:	ae 01       	movw	r20, r28
     2f6:	45 5f       	subi	r20, 0xF5	; 245
     2f8:	5f 4f       	sbci	r21, 0xFF	; 255
     2fa:	be 01       	movw	r22, r28
     2fc:	67 5f       	subi	r22, 0xF7	; 247
    	double dt = (double)((_10micros - timer1));
     2fe:	7f 4f       	sbci	r23, 0xFF	; 255
     300:	02 96       	adiw	r24, 0x02	; 2
     302:	c0 d1       	rcall	.+896    	; 0x684 <mpu6050_getRawData>
     304:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     308:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     30c:	a0 91 42 02 	lds	r26, 0x0242	; 0x800242 <__data_end+0x2>
    	timer1 = _10micros;
     310:	b0 91 43 02 	lds	r27, 0x0243	; 0x800243 <__data_end+0x3>
     314:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end>
     318:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x1>
     31c:	a0 91 42 02 	lds	r26, 0x0242	; 0x800242 <__data_end+0x2>
			#ifdef CALIBERATED_DATA
				accX;
     320:	b0 91 43 02 	lds	r27, 0x0243	; 0x800243 <__data_end+0x3>
				accY;
     324:	4f 81       	ldd	r20, Y+7	; 0x07
				accZ;
     326:	58 85       	ldd	r21, Y+8	; 0x08
     328:	09 85       	ldd	r16, Y+9	; 0x09
				grX;
     32a:	1a 85       	ldd	r17, Y+10	; 0x0a
     32c:	2b 85       	ldd	r18, Y+11	; 0x0b
     32e:	3c 85       	ldd	r19, Y+12	; 0x0c
     330:	89 81       	ldd	r24, Y+1	; 0x01
     332:	9a 81       	ldd	r25, Y+2	; 0x02
     334:	6d 85       	ldd	r22, Y+13	; 0x0d
     336:	7e 85       	ldd	r23, Y+14	; 0x0e
     338:	86 1b       	sub	r24, r22
				grY;
     33a:	97 0b       	sbc	r25, r23
     33c:	9a 83       	std	Y+2, r25	; 0x02
     33e:	89 83       	std	Y+1, r24	; 0x01
     340:	8b 81       	ldd	r24, Y+3	; 0x03
     342:	9c 81       	ldd	r25, Y+4	; 0x04
     344:	69 89       	ldd	r22, Y+17	; 0x11
     346:	7a 89       	ldd	r23, Y+18	; 0x12
     348:	86 1b       	sub	r24, r22
				grZ;
     34a:	97 0b       	sbc	r25, r23
     34c:	9c 83       	std	Y+4, r25	; 0x04
     34e:	8b 83       	std	Y+3, r24	; 0x03
     350:	8d 81       	ldd	r24, Y+5	; 0x05
     352:	9e 81       	ldd	r25, Y+6	; 0x06
     354:	6d 89       	ldd	r22, Y+21	; 0x15
     356:	7e 89       	ldd	r23, Y+22	; 0x16
     358:	86 1b       	sub	r24, r22
				
				//0.000001066 = 0.0000611 * (3.142(PI) / 180degr) The Arduino sin function is in radians
				angle_pitch += angle_roll * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the roll angle to the pitch angel
				angle_roll -= angle_pitch * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the pitch angle to the roll angel
				 
				acc_total_vector = sqrt((accel_x*accel_x)+(accel_y*accel_y)+(accel_z*accel_z));  //Calculate the total accelerometer vector
     35a:	97 0b       	sbc	r25, r23
     35c:	9e 83       	std	Y+6, r25	; 0x06
     35e:	8d 83       	std	Y+5, r24	; 0x05
     360:	44 9f       	mul	r20, r20
     362:	60 01       	movw	r12, r0
     364:	45 9f       	mul	r20, r21
     366:	d0 0c       	add	r13, r0
     368:	d0 0c       	add	r13, r0
     36a:	11 24       	eor	r1, r1
     36c:	00 9f       	mul	r16, r16
     36e:	c0 01       	movw	r24, r0
     370:	01 9f       	mul	r16, r17
     372:	90 0d       	add	r25, r0
     374:	90 0d       	add	r25, r0
     376:	11 24       	eor	r1, r1
     378:	c8 0e       	add	r12, r24
     37a:	d9 1e       	adc	r13, r25
     37c:	22 9f       	mul	r18, r18
     37e:	c0 01       	movw	r24, r0
     380:	23 9f       	mul	r18, r19
     382:	90 0d       	add	r25, r0
     384:	90 0d       	add	r25, r0
     386:	11 24       	eor	r1, r1
     388:	c8 0e       	add	r12, r24
     38a:	d9 1e       	adc	r13, r25
     38c:	0d 2c       	mov	r0, r13
     38e:	00 0c       	add	r0, r0
				//57.296 = 1 / (3.142 / 180) The Arduino asin function is in radians
				angle_pitch_acc = asin((float)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
     390:	ee 08       	sbc	r14, r14
     392:	ff 08       	sbc	r15, r15
     394:	c7 01       	movw	r24, r14
     396:	b6 01       	movw	r22, r12
     398:	58 d3       	rcall	.+1712   	; 0xa4a <__floatsisf>
     39a:	9b d4       	rcall	.+2358   	; 0xcd2 <sqrt>
     39c:	6b 01       	movw	r12, r22
     39e:	7c 01       	movw	r14, r24
     3a0:	b8 01       	movw	r22, r16
				//printf(" ");
				//printf("dt= ");
				//print16(&reg);
				
				////accel print
				uint16_t reg=angle_pitch_acc;
     3a2:	11 0f       	add	r17, r17
     3a4:	88 0b       	sbc	r24, r24
     3a6:	99 0b       	sbc	r25, r25
     3a8:	50 d3       	rcall	.+1696   	; 0xa4a <__floatsisf>
     3aa:	a7 01       	movw	r20, r14
     3ac:	96 01       	movw	r18, r12
     3ae:	b7 d2       	rcall	.+1390   	; 0x91e <__divsf3>
     3b0:	9f d2       	rcall	.+1342   	; 0x8f0 <asin>
     3b2:	2b e1       	ldi	r18, 0x1B	; 27
     3b4:	3f e2       	ldi	r19, 0x2F	; 47
				printf(" ");
     3b6:	45 e6       	ldi	r20, 0x65	; 101
     3b8:	52 e4       	ldi	r21, 0x42	; 66
     3ba:	24 d4       	rcall	.+2120   	; 0xc04 <__mulsf3>
     3bc:	18 d3       	rcall	.+1584   	; 0x9ee <__fixunssfsi>
				printf("accel= ");
     3be:	7a 8f       	std	Y+26, r23	; 0x1a
     3c0:	69 8f       	std	Y+25, r22	; 0x19
     3c2:	80 e2       	ldi	r24, 0x20	; 32
     3c4:	90 e0       	ldi	r25, 0x00	; 0
				print16ln(&reg);
     3c6:	22 d6       	rcall	.+3140   	; 0x100c <putchar>
     3c8:	bf 92       	push	r11
     3ca:	af 92       	push	r10
     3cc:	0c d6       	rcall	.+3096   	; 0xfe6 <printf>
     3ce:	ce 01       	movw	r24, r28
     3d0:	49 96       	adiw	r24, 0x19	; 25
     3d2:	0c df       	rcall	.-488    	; 0x1ec <print16ln>
     3d4:	0f 90       	pop	r0
     3d6:	0f 90       	pop	r0
     3d8:	84 cf       	rjmp	.-248    	; 0x2e2 <main+0xa6>

000003da <mpu6050_readByte>:
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     3da:	cf 93       	push	r28
     3dc:	c8 2f       	mov	r28, r24
     3de:	80 ed       	ldi	r24, 0xD0	; 208
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	d0 d1       	rcall	.+928    	; 0x784 <i2c_start>
     3e4:	8c 2f       	mov	r24, r28
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	23 d2       	rcall	.+1094   	; 0x830 <i2c_write>
     3ea:	12 d2       	rcall	.+1060   	; 0x810 <i2c_stop>
     3ec:	81 ed       	ldi	r24, 0xD1	; 209
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	c9 d1       	rcall	.+914    	; 0x784 <i2c_start>
     3f2:	59 d2       	rcall	.+1202   	; 0x8a6 <i2c_readNak>
     3f4:	c8 2f       	mov	r28, r24
     3f6:	0c d2       	rcall	.+1048   	; 0x810 <i2c_stop>
     3f8:	8c 2f       	mov	r24, r28
     3fa:	cf 91       	pop	r28
     3fc:	08 95       	ret

000003fe <mpu6050_read_gyroX>:
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	83 e4       	ldi	r24, 0x43	; 67
     404:	ea df       	rcall	.-44     	; 0x3da <mpu6050_readByte>
     406:	c8 2f       	mov	r28, r24
     408:	d0 e0       	ldi	r29, 0x00	; 0
     40a:	dc 2f       	mov	r29, r28
     40c:	cc 27       	eor	r28, r28
     40e:	84 e4       	ldi	r24, 0x44	; 68
     410:	e4 df       	rcall	.-56     	; 0x3da <mpu6050_readByte>
     412:	9e 01       	movw	r18, r28
     414:	28 2b       	or	r18, r24
     416:	c9 01       	movw	r24, r18
     418:	df 91       	pop	r29
     41a:	cf 91       	pop	r28
     41c:	08 95       	ret

0000041e <mpu6050_read_gyroY>:
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	85 e4       	ldi	r24, 0x45	; 69
     424:	da df       	rcall	.-76     	; 0x3da <mpu6050_readByte>
     426:	c8 2f       	mov	r28, r24
     428:	d0 e0       	ldi	r29, 0x00	; 0
     42a:	dc 2f       	mov	r29, r28
     42c:	cc 27       	eor	r28, r28
     42e:	86 e4       	ldi	r24, 0x46	; 70
     430:	d4 df       	rcall	.-88     	; 0x3da <mpu6050_readByte>
     432:	9e 01       	movw	r18, r28
     434:	28 2b       	or	r18, r24
     436:	c9 01       	movw	r24, r18
     438:	df 91       	pop	r29
     43a:	cf 91       	pop	r28
     43c:	08 95       	ret

0000043e <mpu6050_read_gyroZ>:
     43e:	cf 93       	push	r28
     440:	df 93       	push	r29
     442:	87 e4       	ldi	r24, 0x47	; 71
     444:	ca df       	rcall	.-108    	; 0x3da <mpu6050_readByte>
     446:	c8 2f       	mov	r28, r24
     448:	d0 e0       	ldi	r29, 0x00	; 0
     44a:	dc 2f       	mov	r29, r28
     44c:	cc 27       	eor	r28, r28
     44e:	88 e4       	ldi	r24, 0x48	; 72
     450:	c4 df       	rcall	.-120    	; 0x3da <mpu6050_readByte>
     452:	9e 01       	movw	r18, r28
     454:	28 2b       	or	r18, r24
     456:	c9 01       	movw	r24, r18
     458:	df 91       	pop	r29
     45a:	cf 91       	pop	r28
     45c:	08 95       	ret

0000045e <mpu6050_calibrate_gyro>:
     45e:	cf 92       	push	r12
     460:	df 92       	push	r13
     462:	ef 92       	push	r14
     464:	ff 92       	push	r15
     466:	0f 93       	push	r16
     468:	1f 93       	push	r17
     46a:	cf 93       	push	r28
     46c:	df 93       	push	r29
     46e:	6c 01       	movw	r12, r24
     470:	7b 01       	movw	r14, r22
     472:	8a 01       	movw	r16, r20
     474:	8e e0       	ldi	r24, 0x0E	; 14
     476:	92 e0       	ldi	r25, 0x02	; 2
     478:	ce d5       	rcall	.+2972   	; 0x1016 <puts>
     47a:	c4 e1       	ldi	r28, 0x14	; 20
     47c:	d0 e0       	ldi	r29, 0x00	; 0
     47e:	bf df       	rcall	.-130    	; 0x3fe <mpu6050_read_gyroX>
     480:	f6 01       	movw	r30, r12
     482:	40 81       	ld	r20, Z
     484:	51 81       	ldd	r21, Z+1	; 0x01
     486:	62 81       	ldd	r22, Z+2	; 0x02
     488:	73 81       	ldd	r23, Z+3	; 0x03
     48a:	48 0f       	add	r20, r24
     48c:	59 1f       	adc	r21, r25
     48e:	61 1d       	adc	r22, r1
     490:	71 1d       	adc	r23, r1
     492:	40 83       	st	Z, r20
     494:	51 83       	std	Z+1, r21	; 0x01
     496:	62 83       	std	Z+2, r22	; 0x02
     498:	73 83       	std	Z+3, r23	; 0x03
     49a:	c1 df       	rcall	.-126    	; 0x41e <mpu6050_read_gyroY>
     49c:	f7 01       	movw	r30, r14
     49e:	40 81       	ld	r20, Z
     4a0:	51 81       	ldd	r21, Z+1	; 0x01
     4a2:	62 81       	ldd	r22, Z+2	; 0x02
     4a4:	73 81       	ldd	r23, Z+3	; 0x03
     4a6:	48 0f       	add	r20, r24
     4a8:	59 1f       	adc	r21, r25
     4aa:	61 1d       	adc	r22, r1
     4ac:	71 1d       	adc	r23, r1
     4ae:	40 83       	st	Z, r20
     4b0:	51 83       	std	Z+1, r21	; 0x01
     4b2:	62 83       	std	Z+2, r22	; 0x02
     4b4:	73 83       	std	Z+3, r23	; 0x03
     4b6:	c3 df       	rcall	.-122    	; 0x43e <mpu6050_read_gyroZ>
     4b8:	f8 01       	movw	r30, r16
     4ba:	40 81       	ld	r20, Z
     4bc:	51 81       	ldd	r21, Z+1	; 0x01
     4be:	62 81       	ldd	r22, Z+2	; 0x02
     4c0:	73 81       	ldd	r23, Z+3	; 0x03
     4c2:	48 0f       	add	r20, r24
     4c4:	59 1f       	adc	r21, r25
     4c6:	61 1d       	adc	r22, r1
     4c8:	71 1d       	adc	r23, r1
     4ca:	40 83       	st	Z, r20
     4cc:	51 83       	std	Z+1, r21	; 0x01
     4ce:	62 83       	std	Z+2, r22	; 0x02
     4d0:	73 83       	std	Z+3, r23	; 0x03
     4d2:	21 97       	sbiw	r28, 0x01	; 1
     4d4:	a1 f6       	brne	.-88     	; 0x47e <mpu6050_calibrate_gyro+0x20>
     4d6:	f6 01       	movw	r30, r12
     4d8:	60 81       	ld	r22, Z
     4da:	71 81       	ldd	r23, Z+1	; 0x01
     4dc:	82 81       	ldd	r24, Z+2	; 0x02
     4de:	93 81       	ldd	r25, Z+3	; 0x03
     4e0:	99 23       	and	r25, r25
     4e2:	ac f4       	brge	.+42     	; 0x50e <mpu6050_calibrate_gyro+0xb0>
     4e4:	9b 01       	movw	r18, r22
     4e6:	77 23       	and	r23, r23
     4e8:	24 f4       	brge	.+8      	; 0x4f2 <mpu6050_calibrate_gyro+0x94>
     4ea:	22 27       	eor	r18, r18
     4ec:	33 27       	eor	r19, r19
     4ee:	26 1b       	sub	r18, r22
     4f0:	37 0b       	sbc	r19, r23
     4f2:	c9 01       	movw	r24, r18
     4f4:	64 e1       	ldi	r22, 0x14	; 20
     4f6:	70 e0       	ldi	r23, 0x00	; 0
     4f8:	a4 d4       	rcall	.+2376   	; 0xe42 <__divmodhi4>
     4fa:	cb 01       	movw	r24, r22
     4fc:	77 0f       	add	r23, r23
     4fe:	aa 0b       	sbc	r26, r26
     500:	bb 0b       	sbc	r27, r27
     502:	f6 01       	movw	r30, r12
     504:	80 83       	st	Z, r24
     506:	91 83       	std	Z+1, r25	; 0x01
     508:	a2 83       	std	Z+2, r26	; 0x02
     50a:	b3 83       	std	Z+3, r27	; 0x03
     50c:	0a c0       	rjmp	.+20     	; 0x522 <mpu6050_calibrate_gyro+0xc4>
     50e:	24 e1       	ldi	r18, 0x14	; 20
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	40 e0       	ldi	r20, 0x00	; 0
     514:	50 e0       	ldi	r21, 0x00	; 0
     516:	a8 d4       	rcall	.+2384   	; 0xe68 <__divmodsi4>
     518:	f6 01       	movw	r30, r12
     51a:	20 83       	st	Z, r18
     51c:	31 83       	std	Z+1, r19	; 0x01
     51e:	42 83       	std	Z+2, r20	; 0x02
     520:	53 83       	std	Z+3, r21	; 0x03
     522:	f7 01       	movw	r30, r14
     524:	60 81       	ld	r22, Z
     526:	71 81       	ldd	r23, Z+1	; 0x01
     528:	82 81       	ldd	r24, Z+2	; 0x02
     52a:	93 81       	ldd	r25, Z+3	; 0x03
     52c:	99 23       	and	r25, r25
     52e:	ac f4       	brge	.+42     	; 0x55a <mpu6050_calibrate_gyro+0xfc>
     530:	9b 01       	movw	r18, r22
     532:	77 23       	and	r23, r23
     534:	24 f4       	brge	.+8      	; 0x53e <mpu6050_calibrate_gyro+0xe0>
     536:	22 27       	eor	r18, r18
     538:	33 27       	eor	r19, r19
     53a:	26 1b       	sub	r18, r22
     53c:	37 0b       	sbc	r19, r23
     53e:	c9 01       	movw	r24, r18
     540:	64 e1       	ldi	r22, 0x14	; 20
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	7e d4       	rcall	.+2300   	; 0xe42 <__divmodhi4>
     546:	cb 01       	movw	r24, r22
     548:	77 0f       	add	r23, r23
     54a:	aa 0b       	sbc	r26, r26
     54c:	bb 0b       	sbc	r27, r27
     54e:	f7 01       	movw	r30, r14
     550:	80 83       	st	Z, r24
     552:	91 83       	std	Z+1, r25	; 0x01
     554:	a2 83       	std	Z+2, r26	; 0x02
     556:	b3 83       	std	Z+3, r27	; 0x03
     558:	0a c0       	rjmp	.+20     	; 0x56e <mpu6050_calibrate_gyro+0x110>
     55a:	24 e1       	ldi	r18, 0x14	; 20
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	40 e0       	ldi	r20, 0x00	; 0
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	82 d4       	rcall	.+2308   	; 0xe68 <__divmodsi4>
     564:	f7 01       	movw	r30, r14
     566:	20 83       	st	Z, r18
     568:	31 83       	std	Z+1, r19	; 0x01
     56a:	42 83       	std	Z+2, r20	; 0x02
     56c:	53 83       	std	Z+3, r21	; 0x03
     56e:	f8 01       	movw	r30, r16
     570:	60 81       	ld	r22, Z
     572:	71 81       	ldd	r23, Z+1	; 0x01
     574:	82 81       	ldd	r24, Z+2	; 0x02
     576:	93 81       	ldd	r25, Z+3	; 0x03
     578:	99 23       	and	r25, r25
     57a:	ac f4       	brge	.+42     	; 0x5a6 <mpu6050_calibrate_gyro+0x148>
     57c:	9b 01       	movw	r18, r22
     57e:	77 23       	and	r23, r23
     580:	24 f4       	brge	.+8      	; 0x58a <mpu6050_calibrate_gyro+0x12c>
     582:	22 27       	eor	r18, r18
     584:	33 27       	eor	r19, r19
     586:	26 1b       	sub	r18, r22
     588:	37 0b       	sbc	r19, r23
     58a:	c9 01       	movw	r24, r18
     58c:	64 e1       	ldi	r22, 0x14	; 20
     58e:	70 e0       	ldi	r23, 0x00	; 0
     590:	58 d4       	rcall	.+2224   	; 0xe42 <__divmodhi4>
     592:	cb 01       	movw	r24, r22
     594:	77 0f       	add	r23, r23
     596:	aa 0b       	sbc	r26, r26
     598:	bb 0b       	sbc	r27, r27
     59a:	f8 01       	movw	r30, r16
     59c:	80 83       	st	Z, r24
     59e:	91 83       	std	Z+1, r25	; 0x01
     5a0:	a2 83       	std	Z+2, r26	; 0x02
     5a2:	b3 83       	std	Z+3, r27	; 0x03
     5a4:	0a c0       	rjmp	.+20     	; 0x5ba <mpu6050_calibrate_gyro+0x15c>
     5a6:	24 e1       	ldi	r18, 0x14	; 20
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	40 e0       	ldi	r20, 0x00	; 0
     5ac:	50 e0       	ldi	r21, 0x00	; 0
     5ae:	5c d4       	rcall	.+2232   	; 0xe68 <__divmodsi4>
     5b0:	f8 01       	movw	r30, r16
     5b2:	20 83       	st	Z, r18
     5b4:	31 83       	std	Z+1, r19	; 0x01
     5b6:	42 83       	std	Z+2, r20	; 0x02
     5b8:	53 83       	std	Z+3, r21	; 0x03
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	1f 91       	pop	r17
     5c0:	0f 91       	pop	r16
     5c2:	ff 90       	pop	r15
     5c4:	ef 90       	pop	r14
     5c6:	df 90       	pop	r13
     5c8:	cf 90       	pop	r12
     5ca:	08 95       	ret

000005cc <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     5cc:	cf 93       	push	r28
     5ce:	df 93       	push	r29
     5d0:	d8 2f       	mov	r29, r24
     5d2:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     5d4:	80 ed       	ldi	r24, 0xD0	; 208
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	d5 d0       	rcall	.+426    	; 0x784 <i2c_start>
	i2c_write(wereToWrite);
     5da:	8d 2f       	mov	r24, r29
     5dc:	90 e0       	ldi	r25, 0x00	; 0
	i2c_write(byteToWrite);
     5de:	28 d1       	rcall	.+592    	; 0x830 <i2c_write>
     5e0:	8c 2f       	mov	r24, r28
	i2c_stop();
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	25 d1       	rcall	.+586    	; 0x830 <i2c_write>
}
     5e6:	14 d1       	rcall	.+552    	; 0x810 <i2c_stop>
     5e8:	df 91       	pop	r29
     5ea:	cf 91       	pop	r28
     5ec:	08 95       	ret

000005ee <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     5ee:	af 92       	push	r10
     5f0:	bf 92       	push	r11
     5f2:	cf 92       	push	r12
     5f4:	df 92       	push	r13
     5f6:	ff 92       	push	r15
     5f8:	0f 93       	push	r16
     5fa:	1f 93       	push	r17
     5fc:	cf 93       	push	r28
     5fe:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     600:	66 23       	and	r22, r22
     602:	a1 f1       	breq	.+104    	; 0x66c <mpu6050_readBytes+0x7e>
     604:	c5 2f       	mov	r28, r21
     606:	d4 2f       	mov	r29, r20
     608:	f6 2e       	mov	r15, r22
     60a:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     60c:	80 ed       	ldi	r24, 0xD0	; 208
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	b9 d0       	rcall	.+370    	; 0x784 <i2c_start>
		i2c_write(regAddr);
     612:	81 2f       	mov	r24, r17
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	0c d1       	rcall	.+536    	; 0x830 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     618:	85 e3       	ldi	r24, 0x35	; 53
     61a:	8a 95       	dec	r24
     61c:	f1 f7       	brne	.-4      	; 0x61a <mpu6050_readBytes+0x2c>
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     61e:	00 00       	nop
     620:	81 ed       	ldi	r24, 0xD1	; 209
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	af d0       	rcall	.+350    	; 0x784 <i2c_start>
     626:	0d 2f       	mov	r16, r29
     628:	1c 2f       	mov	r17, r28
     62a:	cc 24       	eor	r12, r12
     62c:	ca 94       	dec	r12
     62e:	cf 0c       	add	r12, r15
     630:	d1 2c       	mov	r13, r1
     632:	ef ef       	ldi	r30, 0xFF	; 255
     634:	ce 1a       	sub	r12, r30
     636:	de 0a       	sbc	r13, r30
     638:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     63a:	d0 e0       	ldi	r29, 0x00	; 0
     63c:	af 2c       	mov	r10, r15
     63e:	b1 2c       	mov	r11, r1
     640:	f1 e0       	ldi	r31, 0x01	; 1
     642:	af 1a       	sub	r10, r31
     644:	b1 08       	sbc	r11, r1
     646:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     648:	bd 06       	cpc	r11, r29
     64a:	21 f4       	brne	.+8      	; 0x654 <mpu6050_readBytes+0x66>
     64c:	2c d1       	rcall	.+600    	; 0x8a6 <i2c_readNak>
     64e:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     650:	80 83       	st	Z, r24
     652:	03 c0       	rjmp	.+6      	; 0x65a <mpu6050_readBytes+0x6c>
     654:	0e d1       	rcall	.+540    	; 0x872 <i2c_readAck>
     656:	f8 01       	movw	r30, r16
     658:	80 83       	st	Z, r24
     65a:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     65c:	0f 5f       	subi	r16, 0xFF	; 255
     65e:	1f 4f       	sbci	r17, 0xFF	; 255
     660:	cc 15       	cp	r28, r12
     662:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     664:	81 f7       	brne	.-32     	; 0x646 <mpu6050_readBytes+0x58>
     666:	cf 2d       	mov	r28, r15
     668:	d3 d0       	rcall	.+422    	; 0x810 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     66a:	01 c0       	rjmp	.+2      	; 0x66e <mpu6050_readBytes+0x80>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     66c:	c0 e0       	ldi	r28, 0x00	; 0
     66e:	8c 2f       	mov	r24, r28
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	1f 91       	pop	r17
     676:	0f 91       	pop	r16
     678:	ff 90       	pop	r15
     67a:	df 90       	pop	r13
     67c:	cf 90       	pop	r12
     67e:	bf 90       	pop	r11
     680:	af 90       	pop	r10
     682:	08 95       	ret

00000684 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     684:	6f 92       	push	r6
     686:	7f 92       	push	r7
     688:	8f 92       	push	r8
     68a:	9f 92       	push	r9
     68c:	af 92       	push	r10
     68e:	bf 92       	push	r11
     690:	cf 92       	push	r12
     692:	df 92       	push	r13
     694:	ef 92       	push	r14
     696:	ff 92       	push	r15
     698:	0f 93       	push	r16
     69a:	1f 93       	push	r17
     69c:	cf 93       	push	r28
     69e:	df 93       	push	r29
     6a0:	cd b7       	in	r28, 0x3d	; 61
     6a2:	de b7       	in	r29, 0x3e	; 62
     6a4:	2e 97       	sbiw	r28, 0x0e	; 14
     6a6:	0f b6       	in	r0, 0x3f	; 63
     6a8:	f8 94       	cli
     6aa:	de bf       	out	0x3e, r29	; 62
     6ac:	0f be       	out	0x3f, r0	; 63
     6ae:	cd bf       	out	0x3d, r28	; 61
     6b0:	4c 01       	movw	r8, r24
     6b2:	5b 01       	movw	r10, r22
     6b4:	6a 01       	movw	r12, r20
     6b6:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     6b8:	ae 01       	movw	r20, r28
     6ba:	4f 5f       	subi	r20, 0xFF	; 255
     6bc:	5f 4f       	sbci	r21, 0xFF	; 255
     6be:	6e e0       	ldi	r22, 0x0E	; 14
     6c0:	8b e3       	ldi	r24, 0x3B	; 59
     6c2:	95 df       	rcall	.-214    	; 0x5ee <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     6c4:	89 81       	ldd	r24, Y+1	; 0x01
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	98 2f       	mov	r25, r24
     6ca:	88 27       	eor	r24, r24
     6cc:	2a 81       	ldd	r18, Y+2	; 0x02
     6ce:	82 2b       	or	r24, r18
     6d0:	f4 01       	movw	r30, r8
     6d2:	91 83       	std	Z+1, r25	; 0x01
     6d4:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     6d6:	8b 81       	ldd	r24, Y+3	; 0x03
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	98 2f       	mov	r25, r24
     6dc:	88 27       	eor	r24, r24
     6de:	2c 81       	ldd	r18, Y+4	; 0x04
     6e0:	82 2b       	or	r24, r18
     6e2:	f5 01       	movw	r30, r10
     6e4:	91 83       	std	Z+1, r25	; 0x01
     6e6:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     6e8:	8d 81       	ldd	r24, Y+5	; 0x05
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	98 2f       	mov	r25, r24
     6ee:	88 27       	eor	r24, r24
     6f0:	2e 81       	ldd	r18, Y+6	; 0x06
     6f2:	82 2b       	or	r24, r18
     6f4:	f6 01       	movw	r30, r12
     6f6:	91 83       	std	Z+1, r25	; 0x01
     6f8:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     6fa:	89 85       	ldd	r24, Y+9	; 0x09
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	98 2f       	mov	r25, r24
     700:	88 27       	eor	r24, r24
     702:	2a 85       	ldd	r18, Y+10	; 0x0a
     704:	82 2b       	or	r24, r18
     706:	f3 01       	movw	r30, r6
     708:	91 83       	std	Z+1, r25	; 0x01
     70a:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     70c:	8b 85       	ldd	r24, Y+11	; 0x0b
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	98 2f       	mov	r25, r24
     712:	88 27       	eor	r24, r24
     714:	2c 85       	ldd	r18, Y+12	; 0x0c
     716:	82 2b       	or	r24, r18
     718:	f8 01       	movw	r30, r16
     71a:	91 83       	std	Z+1, r25	; 0x01
     71c:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     71e:	8d 85       	ldd	r24, Y+13	; 0x0d
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	98 2f       	mov	r25, r24
     724:	88 27       	eor	r24, r24
     726:	2e 85       	ldd	r18, Y+14	; 0x0e
     728:	82 2b       	or	r24, r18
     72a:	f7 01       	movw	r30, r14
     72c:	91 83       	std	Z+1, r25	; 0x01
     72e:	80 83       	st	Z, r24
     730:	2e 96       	adiw	r28, 0x0e	; 14
     732:	0f b6       	in	r0, 0x3f	; 63
     734:	f8 94       	cli
     736:	de bf       	out	0x3e, r29	; 62
     738:	0f be       	out	0x3f, r0	; 63
     73a:	cd bf       	out	0x3d, r28	; 61
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	1f 91       	pop	r17
     742:	0f 91       	pop	r16
     744:	ff 90       	pop	r15
     746:	ef 90       	pop	r14
     748:	df 90       	pop	r13
     74a:	cf 90       	pop	r12
     74c:	bf 90       	pop	r11
     74e:	af 90       	pop	r10
     750:	9f 90       	pop	r9
     752:	8f 90       	pop	r8
     754:	7f 90       	pop	r7
     756:	6f 90       	pop	r6
     758:	08 95       	ret

0000075a <setup_timer3>:
void setup_timer3(void)
{
	//64 pres, 250.000 hz 0.000004s
	//sbi (TCCR5B, CS50);//only this no prescaling
	
	sbi (TCCR3B, CS30);//only this 8
     75a:	e1 e9       	ldi	r30, 0x91	; 145
     75c:	f0 e0       	ldi	r31, 0x00	; 0
     75e:	80 81       	ld	r24, Z
     760:	81 60       	ori	r24, 0x01	; 1
     762:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR3B, WGM32);//OCR4A compare interrupt
     764:	80 81       	ld	r24, Z
     766:	88 60       	ori	r24, 0x08	; 8
     768:	80 83       	st	Z, r24
     76a:	08 95       	ret

0000076c <Enable_timer3_compare_interrupt>:
}
void Enable_timer3_compare_interrupt()
{
	sbi (TIMSK3, OCIE3A);
     76c:	e1 e7       	ldi	r30, 0x71	; 113
     76e:	f0 e0       	ldi	r31, 0x00	; 0
     770:	80 81       	ld	r24, Z
     772:	82 60       	ori	r24, 0x02	; 2
     774:	80 83       	st	Z, r24
     776:	08 95       	ret

00000778 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     778:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     77c:	8c e0       	ldi	r24, 0x0C	; 12
     77e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     782:	08 95       	ret

00000784 <i2c_start>:
     784:	94 ea       	ldi	r25, 0xA4	; 164
     786:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     78a:	4f ef       	ldi	r20, 0xFF	; 255
     78c:	50 e0       	ldi	r21, 0x00	; 0
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	70 e0       	ldi	r23, 0x00	; 0
     792:	ec eb       	ldi	r30, 0xBC	; 188
     794:	f0 e0       	ldi	r31, 0x00	; 0
     796:	90 81       	ld	r25, Z
     798:	99 23       	and	r25, r25
     79a:	34 f0       	brlt	.+12     	; 0x7a8 <i2c_start+0x24>
     79c:	41 50       	subi	r20, 0x01	; 1
     79e:	51 09       	sbc	r21, r1
     7a0:	61 09       	sbc	r22, r1
     7a2:	71 09       	sbc	r23, r1
     7a4:	c0 f7       	brcc	.-16     	; 0x796 <i2c_start+0x12>
     7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <i2c_start+0x2c>
     7a8:	45 2b       	or	r20, r21
     7aa:	46 2b       	or	r20, r22
     7ac:	47 2b       	or	r20, r23
     7ae:	41 f1       	breq	.+80     	; 0x800 <i2c_start+0x7c>
     7b0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     7b4:	98 7f       	andi	r25, 0xF8	; 248
     7b6:	98 30       	cpi	r25, 0x08	; 8
     7b8:	11 f0       	breq	.+4      	; 0x7be <i2c_start+0x3a>
     7ba:	90 31       	cpi	r25, 0x10	; 16
     7bc:	19 f5       	brne	.+70     	; 0x804 <i2c_start+0x80>
     7be:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     7c2:	84 e8       	ldi	r24, 0x84	; 132
     7c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     7c8:	8f ef       	ldi	r24, 0xFF	; 255
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	a0 e0       	ldi	r26, 0x00	; 0
     7ce:	b0 e0       	ldi	r27, 0x00	; 0
     7d0:	ec eb       	ldi	r30, 0xBC	; 188
     7d2:	f0 e0       	ldi	r31, 0x00	; 0
     7d4:	20 81       	ld	r18, Z
     7d6:	22 23       	and	r18, r18
     7d8:	2c f0       	brlt	.+10     	; 0x7e4 <i2c_start+0x60>
     7da:	01 97       	sbiw	r24, 0x01	; 1
     7dc:	a1 09       	sbc	r26, r1
     7de:	b1 09       	sbc	r27, r1
     7e0:	c8 f7       	brcc	.-14     	; 0x7d4 <i2c_start+0x50>
     7e2:	04 c0       	rjmp	.+8      	; 0x7ec <i2c_start+0x68>
     7e4:	89 2b       	or	r24, r25
     7e6:	8a 2b       	or	r24, r26
     7e8:	8b 2b       	or	r24, r27
     7ea:	71 f0       	breq	.+28     	; 0x808 <i2c_start+0x84>
     7ec:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     7f0:	98 7f       	andi	r25, 0xF8	; 248
     7f2:	98 31       	cpi	r25, 0x18	; 24
     7f4:	59 f0       	breq	.+22     	; 0x80c <i2c_start+0x88>
     7f6:	81 e0       	ldi	r24, 0x01	; 1
     7f8:	90 34       	cpi	r25, 0x40	; 64
     7fa:	49 f4       	brne	.+18     	; 0x80e <i2c_start+0x8a>
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	08 95       	ret
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	08 95       	ret
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	08 95       	ret
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	08 95       	ret
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	08 95       	ret

00000810 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     810:	84 e9       	ldi	r24, 0x94	; 148
     812:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	ec eb       	ldi	r30, 0xBC	; 188
     81c:	f0 e0       	ldi	r31, 0x00	; 0
     81e:	20 81       	ld	r18, Z
     820:	24 ff       	sbrs	r18, 4
     822:	05 c0       	rjmp	.+10     	; 0x82e <i2c_stop+0x1e>
     824:	01 96       	adiw	r24, 0x01	; 1
     826:	81 15       	cp	r24, r1
     828:	21 e0       	ldi	r18, 0x01	; 1
     82a:	92 07       	cpc	r25, r18
     82c:	c1 f7       	brne	.-16     	; 0x81e <i2c_stop+0xe>
     82e:	08 95       	ret

00000830 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     830:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     834:	84 e8       	ldi	r24, 0x84	; 132
     836:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     83a:	8f ef       	ldi	r24, 0xFF	; 255
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	a0 e0       	ldi	r26, 0x00	; 0
     840:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     842:	ec eb       	ldi	r30, 0xBC	; 188
     844:	f0 e0       	ldi	r31, 0x00	; 0
     846:	20 81       	ld	r18, Z
     848:	22 23       	and	r18, r18
     84a:	2c f0       	brlt	.+10     	; 0x856 <i2c_write+0x26>
     84c:	01 97       	sbiw	r24, 0x01	; 1
     84e:	a1 09       	sbc	r26, r1
     850:	b1 09       	sbc	r27, r1
     852:	c8 f7       	brcc	.-14     	; 0x846 <i2c_write+0x16>
     854:	04 c0       	rjmp	.+8      	; 0x85e <i2c_write+0x2e>
	if(i2c_timer == 0)
     856:	89 2b       	or	r24, r25
     858:	8a 2b       	or	r24, r26
     85a:	8b 2b       	or	r24, r27
     85c:	41 f0       	breq	.+16     	; 0x86e <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     85e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     862:	98 7f       	andi	r25, 0xF8	; 248
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	98 32       	cpi	r25, 0x28	; 40
     868:	19 f4       	brne	.+6      	; 0x870 <i2c_write+0x40>
     86a:	80 e0       	ldi	r24, 0x00	; 0
     86c:	08 95       	ret
     86e:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     870:	08 95       	ret

00000872 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     872:	84 ec       	ldi	r24, 0xC4	; 196
     874:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     878:	8f ef       	ldi	r24, 0xFF	; 255
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	a0 e0       	ldi	r26, 0x00	; 0
     87e:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     880:	ec eb       	ldi	r30, 0xBC	; 188
     882:	f0 e0       	ldi	r31, 0x00	; 0
     884:	20 81       	ld	r18, Z
     886:	22 23       	and	r18, r18
     888:	2c f0       	brlt	.+10     	; 0x894 <i2c_readAck+0x22>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	c8 f7       	brcc	.-14     	; 0x884 <i2c_readAck+0x12>
     892:	04 c0       	rjmp	.+8      	; 0x89c <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     894:	89 2b       	or	r24, r25
     896:	8a 2b       	or	r24, r26
     898:	8b 2b       	or	r24, r27
     89a:	19 f0       	breq	.+6      	; 0x8a2 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     89c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     8a0:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     8a2:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     8a4:	08 95       	ret

000008a6 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     8a6:	84 e8       	ldi	r24, 0x84	; 132
     8a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     8ac:	8f ef       	ldi	r24, 0xFF	; 255
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	a0 e0       	ldi	r26, 0x00	; 0
     8b2:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     8b4:	ec eb       	ldi	r30, 0xBC	; 188
     8b6:	f0 e0       	ldi	r31, 0x00	; 0
     8b8:	20 81       	ld	r18, Z
     8ba:	22 23       	and	r18, r18
     8bc:	2c f0       	brlt	.+10     	; 0x8c8 <i2c_readNak+0x22>
     8be:	01 97       	sbiw	r24, 0x01	; 1
     8c0:	a1 09       	sbc	r26, r1
     8c2:	b1 09       	sbc	r27, r1
     8c4:	c8 f7       	brcc	.-14     	; 0x8b8 <i2c_readNak+0x12>
     8c6:	04 c0       	rjmp	.+8      	; 0x8d0 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     8c8:	89 2b       	or	r24, r25
     8ca:	8a 2b       	or	r24, r26
     8cc:	8b 2b       	or	r24, r27
     8ce:	19 f0       	breq	.+6      	; 0x8d6 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     8d0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     8d4:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     8d6:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     8d8:	08 95       	ret

000008da <USART_Init>:
#include <avr/io.h>
#include <stdio.h>
void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     8da:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)ubrr;
     8de:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	UCSR0B = (1<<TXEN0);// | (1<<TXCIE0);
     8e2:	88 e0       	ldi	r24, 0x08	; 8
     8e4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);//2 stop bit 8 bit
     8e8:	8e e0       	ldi	r24, 0x0E	; 14
     8ea:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     8ee:	08 95       	ret

000008f0 <asin>:
     8f0:	9f 93       	push	r25
     8f2:	9f 77       	andi	r25, 0x7F	; 127
     8f4:	ee e3       	ldi	r30, 0x3E	; 62
     8f6:	89 37       	cpi	r24, 0x79	; 121
     8f8:	9e 07       	cpc	r25, r30
     8fa:	20 f4       	brcc	.+8      	; 0x904 <asin+0x14>
     8fc:	e4 ee       	ldi	r30, 0xE4	; 228
     8fe:	f0 e0       	ldi	r31, 0x00	; 0
     900:	28 d1       	rcall	.+592    	; 0xb52 <__fp_powsodd>
     902:	09 c0       	rjmp	.+18     	; 0x916 <asin+0x26>
     904:	dd d0       	rcall	.+442    	; 0xac0 <__fp_arccos>
     906:	90 58       	subi	r25, 0x80	; 128
     908:	a2 ea       	ldi	r26, 0xA2	; 162
     90a:	2a ed       	ldi	r18, 0xDA	; 218
     90c:	3f e0       	ldi	r19, 0x0F	; 15
     90e:	49 ec       	ldi	r20, 0xC9	; 201
     910:	5f e3       	ldi	r21, 0x3F	; 63
     912:	2f d2       	rcall	.+1118   	; 0xd72 <__addsf3x>
     914:	3d d1       	rcall	.+634    	; 0xb90 <__fp_round>
     916:	0f 90       	pop	r0
     918:	07 fc       	sbrc	r0, 7
     91a:	90 58       	subi	r25, 0x80	; 128
     91c:	08 95       	ret

0000091e <__divsf3>:
     91e:	0c d0       	rcall	.+24     	; 0x938 <__divsf3x>
     920:	37 c1       	rjmp	.+622    	; 0xb90 <__fp_round>
     922:	2f d1       	rcall	.+606    	; 0xb82 <__fp_pscB>
     924:	40 f0       	brcs	.+16     	; 0x936 <__divsf3+0x18>
     926:	26 d1       	rcall	.+588    	; 0xb74 <__fp_pscA>
     928:	30 f0       	brcs	.+12     	; 0x936 <__divsf3+0x18>
     92a:	21 f4       	brne	.+8      	; 0x934 <__divsf3+0x16>
     92c:	5f 3f       	cpi	r21, 0xFF	; 255
     92e:	19 f0       	breq	.+6      	; 0x936 <__divsf3+0x18>
     930:	e2 c0       	rjmp	.+452    	; 0xaf6 <__fp_inf>
     932:	51 11       	cpse	r21, r1
     934:	61 c1       	rjmp	.+706    	; 0xbf8 <__fp_szero>
     936:	e5 c0       	rjmp	.+458    	; 0xb02 <__fp_nan>

00000938 <__divsf3x>:
     938:	3c d1       	rcall	.+632    	; 0xbb2 <__fp_split3>
     93a:	98 f3       	brcs	.-26     	; 0x922 <__divsf3+0x4>

0000093c <__divsf3_pse>:
     93c:	99 23       	and	r25, r25
     93e:	c9 f3       	breq	.-14     	; 0x932 <__divsf3+0x14>
     940:	55 23       	and	r21, r21
     942:	b1 f3       	breq	.-20     	; 0x930 <__divsf3+0x12>
     944:	95 1b       	sub	r25, r21
     946:	55 0b       	sbc	r21, r21
     948:	bb 27       	eor	r27, r27
     94a:	aa 27       	eor	r26, r26
     94c:	62 17       	cp	r22, r18
     94e:	73 07       	cpc	r23, r19
     950:	84 07       	cpc	r24, r20
     952:	38 f0       	brcs	.+14     	; 0x962 <__divsf3_pse+0x26>
     954:	9f 5f       	subi	r25, 0xFF	; 255
     956:	5f 4f       	sbci	r21, 0xFF	; 255
     958:	22 0f       	add	r18, r18
     95a:	33 1f       	adc	r19, r19
     95c:	44 1f       	adc	r20, r20
     95e:	aa 1f       	adc	r26, r26
     960:	a9 f3       	breq	.-22     	; 0x94c <__divsf3_pse+0x10>
     962:	33 d0       	rcall	.+102    	; 0x9ca <__divsf3_pse+0x8e>
     964:	0e 2e       	mov	r0, r30
     966:	3a f0       	brmi	.+14     	; 0x976 <__divsf3_pse+0x3a>
     968:	e0 e8       	ldi	r30, 0x80	; 128
     96a:	30 d0       	rcall	.+96     	; 0x9cc <__divsf3_pse+0x90>
     96c:	91 50       	subi	r25, 0x01	; 1
     96e:	50 40       	sbci	r21, 0x00	; 0
     970:	e6 95       	lsr	r30
     972:	00 1c       	adc	r0, r0
     974:	ca f7       	brpl	.-14     	; 0x968 <__divsf3_pse+0x2c>
     976:	29 d0       	rcall	.+82     	; 0x9ca <__divsf3_pse+0x8e>
     978:	fe 2f       	mov	r31, r30
     97a:	27 d0       	rcall	.+78     	; 0x9ca <__divsf3_pse+0x8e>
     97c:	66 0f       	add	r22, r22
     97e:	77 1f       	adc	r23, r23
     980:	88 1f       	adc	r24, r24
     982:	bb 1f       	adc	r27, r27
     984:	26 17       	cp	r18, r22
     986:	37 07       	cpc	r19, r23
     988:	48 07       	cpc	r20, r24
     98a:	ab 07       	cpc	r26, r27
     98c:	b0 e8       	ldi	r27, 0x80	; 128
     98e:	09 f0       	breq	.+2      	; 0x992 <__divsf3_pse+0x56>
     990:	bb 0b       	sbc	r27, r27
     992:	80 2d       	mov	r24, r0
     994:	bf 01       	movw	r22, r30
     996:	ff 27       	eor	r31, r31
     998:	93 58       	subi	r25, 0x83	; 131
     99a:	5f 4f       	sbci	r21, 0xFF	; 255
     99c:	2a f0       	brmi	.+10     	; 0x9a8 <__divsf3_pse+0x6c>
     99e:	9e 3f       	cpi	r25, 0xFE	; 254
     9a0:	51 05       	cpc	r21, r1
     9a2:	68 f0       	brcs	.+26     	; 0x9be <__divsf3_pse+0x82>
     9a4:	a8 c0       	rjmp	.+336    	; 0xaf6 <__fp_inf>
     9a6:	28 c1       	rjmp	.+592    	; 0xbf8 <__fp_szero>
     9a8:	5f 3f       	cpi	r21, 0xFF	; 255
     9aa:	ec f3       	brlt	.-6      	; 0x9a6 <__divsf3_pse+0x6a>
     9ac:	98 3e       	cpi	r25, 0xE8	; 232
     9ae:	dc f3       	brlt	.-10     	; 0x9a6 <__divsf3_pse+0x6a>
     9b0:	86 95       	lsr	r24
     9b2:	77 95       	ror	r23
     9b4:	67 95       	ror	r22
     9b6:	b7 95       	ror	r27
     9b8:	f7 95       	ror	r31
     9ba:	9f 5f       	subi	r25, 0xFF	; 255
     9bc:	c9 f7       	brne	.-14     	; 0x9b0 <__divsf3_pse+0x74>
     9be:	88 0f       	add	r24, r24
     9c0:	91 1d       	adc	r25, r1
     9c2:	96 95       	lsr	r25
     9c4:	87 95       	ror	r24
     9c6:	97 f9       	bld	r25, 7
     9c8:	08 95       	ret
     9ca:	e1 e0       	ldi	r30, 0x01	; 1
     9cc:	66 0f       	add	r22, r22
     9ce:	77 1f       	adc	r23, r23
     9d0:	88 1f       	adc	r24, r24
     9d2:	bb 1f       	adc	r27, r27
     9d4:	62 17       	cp	r22, r18
     9d6:	73 07       	cpc	r23, r19
     9d8:	84 07       	cpc	r24, r20
     9da:	ba 07       	cpc	r27, r26
     9dc:	20 f0       	brcs	.+8      	; 0x9e6 <__divsf3_pse+0xaa>
     9de:	62 1b       	sub	r22, r18
     9e0:	73 0b       	sbc	r23, r19
     9e2:	84 0b       	sbc	r24, r20
     9e4:	ba 0b       	sbc	r27, r26
     9e6:	ee 1f       	adc	r30, r30
     9e8:	88 f7       	brcc	.-30     	; 0x9cc <__divsf3_pse+0x90>
     9ea:	e0 95       	com	r30
     9ec:	08 95       	ret

000009ee <__fixunssfsi>:
     9ee:	e9 d0       	rcall	.+466    	; 0xbc2 <__fp_splitA>
     9f0:	88 f0       	brcs	.+34     	; 0xa14 <__fixunssfsi+0x26>
     9f2:	9f 57       	subi	r25, 0x7F	; 127
     9f4:	90 f0       	brcs	.+36     	; 0xa1a <__fixunssfsi+0x2c>
     9f6:	b9 2f       	mov	r27, r25
     9f8:	99 27       	eor	r25, r25
     9fa:	b7 51       	subi	r27, 0x17	; 23
     9fc:	a0 f0       	brcs	.+40     	; 0xa26 <__fixunssfsi+0x38>
     9fe:	d1 f0       	breq	.+52     	; 0xa34 <__fixunssfsi+0x46>
     a00:	66 0f       	add	r22, r22
     a02:	77 1f       	adc	r23, r23
     a04:	88 1f       	adc	r24, r24
     a06:	99 1f       	adc	r25, r25
     a08:	1a f0       	brmi	.+6      	; 0xa10 <__fixunssfsi+0x22>
     a0a:	ba 95       	dec	r27
     a0c:	c9 f7       	brne	.-14     	; 0xa00 <__fixunssfsi+0x12>
     a0e:	12 c0       	rjmp	.+36     	; 0xa34 <__fixunssfsi+0x46>
     a10:	b1 30       	cpi	r27, 0x01	; 1
     a12:	81 f0       	breq	.+32     	; 0xa34 <__fixunssfsi+0x46>
     a14:	f0 d0       	rcall	.+480    	; 0xbf6 <__fp_zero>
     a16:	b1 e0       	ldi	r27, 0x01	; 1
     a18:	08 95       	ret
     a1a:	ed c0       	rjmp	.+474    	; 0xbf6 <__fp_zero>
     a1c:	67 2f       	mov	r22, r23
     a1e:	78 2f       	mov	r23, r24
     a20:	88 27       	eor	r24, r24
     a22:	b8 5f       	subi	r27, 0xF8	; 248
     a24:	39 f0       	breq	.+14     	; 0xa34 <__fixunssfsi+0x46>
     a26:	b9 3f       	cpi	r27, 0xF9	; 249
     a28:	cc f3       	brlt	.-14     	; 0xa1c <__fixunssfsi+0x2e>
     a2a:	86 95       	lsr	r24
     a2c:	77 95       	ror	r23
     a2e:	67 95       	ror	r22
     a30:	b3 95       	inc	r27
     a32:	d9 f7       	brne	.-10     	; 0xa2a <__fixunssfsi+0x3c>
     a34:	3e f4       	brtc	.+14     	; 0xa44 <__fixunssfsi+0x56>
     a36:	90 95       	com	r25
     a38:	80 95       	com	r24
     a3a:	70 95       	com	r23
     a3c:	61 95       	neg	r22
     a3e:	7f 4f       	sbci	r23, 0xFF	; 255
     a40:	8f 4f       	sbci	r24, 0xFF	; 255
     a42:	9f 4f       	sbci	r25, 0xFF	; 255
     a44:	08 95       	ret

00000a46 <__floatunsisf>:
     a46:	e8 94       	clt
     a48:	09 c0       	rjmp	.+18     	; 0xa5c <__floatsisf+0x12>

00000a4a <__floatsisf>:
     a4a:	97 fb       	bst	r25, 7
     a4c:	3e f4       	brtc	.+14     	; 0xa5c <__floatsisf+0x12>
     a4e:	90 95       	com	r25
     a50:	80 95       	com	r24
     a52:	70 95       	com	r23
     a54:	61 95       	neg	r22
     a56:	7f 4f       	sbci	r23, 0xFF	; 255
     a58:	8f 4f       	sbci	r24, 0xFF	; 255
     a5a:	9f 4f       	sbci	r25, 0xFF	; 255
     a5c:	99 23       	and	r25, r25
     a5e:	a9 f0       	breq	.+42     	; 0xa8a <__floatsisf+0x40>
     a60:	f9 2f       	mov	r31, r25
     a62:	96 e9       	ldi	r25, 0x96	; 150
     a64:	bb 27       	eor	r27, r27
     a66:	93 95       	inc	r25
     a68:	f6 95       	lsr	r31
     a6a:	87 95       	ror	r24
     a6c:	77 95       	ror	r23
     a6e:	67 95       	ror	r22
     a70:	b7 95       	ror	r27
     a72:	f1 11       	cpse	r31, r1
     a74:	f8 cf       	rjmp	.-16     	; 0xa66 <__floatsisf+0x1c>
     a76:	fa f4       	brpl	.+62     	; 0xab6 <__floatsisf+0x6c>
     a78:	bb 0f       	add	r27, r27
     a7a:	11 f4       	brne	.+4      	; 0xa80 <__floatsisf+0x36>
     a7c:	60 ff       	sbrs	r22, 0
     a7e:	1b c0       	rjmp	.+54     	; 0xab6 <__floatsisf+0x6c>
     a80:	6f 5f       	subi	r22, 0xFF	; 255
     a82:	7f 4f       	sbci	r23, 0xFF	; 255
     a84:	8f 4f       	sbci	r24, 0xFF	; 255
     a86:	9f 4f       	sbci	r25, 0xFF	; 255
     a88:	16 c0       	rjmp	.+44     	; 0xab6 <__floatsisf+0x6c>
     a8a:	88 23       	and	r24, r24
     a8c:	11 f0       	breq	.+4      	; 0xa92 <__floatsisf+0x48>
     a8e:	96 e9       	ldi	r25, 0x96	; 150
     a90:	11 c0       	rjmp	.+34     	; 0xab4 <__floatsisf+0x6a>
     a92:	77 23       	and	r23, r23
     a94:	21 f0       	breq	.+8      	; 0xa9e <__floatsisf+0x54>
     a96:	9e e8       	ldi	r25, 0x8E	; 142
     a98:	87 2f       	mov	r24, r23
     a9a:	76 2f       	mov	r23, r22
     a9c:	05 c0       	rjmp	.+10     	; 0xaa8 <__floatsisf+0x5e>
     a9e:	66 23       	and	r22, r22
     aa0:	71 f0       	breq	.+28     	; 0xabe <__floatsisf+0x74>
     aa2:	96 e8       	ldi	r25, 0x86	; 134
     aa4:	86 2f       	mov	r24, r22
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	2a f0       	brmi	.+10     	; 0xab6 <__floatsisf+0x6c>
     aac:	9a 95       	dec	r25
     aae:	66 0f       	add	r22, r22
     ab0:	77 1f       	adc	r23, r23
     ab2:	88 1f       	adc	r24, r24
     ab4:	da f7       	brpl	.-10     	; 0xaac <__floatsisf+0x62>
     ab6:	88 0f       	add	r24, r24
     ab8:	96 95       	lsr	r25
     aba:	87 95       	ror	r24
     abc:	97 f9       	bld	r25, 7
     abe:	08 95       	ret

00000ac0 <__fp_arccos>:
     ac0:	df 93       	push	r29
     ac2:	cf 93       	push	r28
     ac4:	1f 93       	push	r17
     ac6:	0f 93       	push	r16
     ac8:	8b 01       	movw	r16, r22
     aca:	ec 01       	movw	r28, r24
     acc:	e8 ef       	ldi	r30, 0xF8	; 248
     ace:	f0 e0       	ldi	r31, 0x00	; 0
     ad0:	1b d0       	rcall	.+54     	; 0xb08 <__fp_powser>
     ad2:	5e d0       	rcall	.+188    	; 0xb90 <__fp_round>
     ad4:	98 01       	movw	r18, r16
     ad6:	ae 01       	movw	r20, r28
     ad8:	8b 01       	movw	r16, r22
     ada:	ec 01       	movw	r28, r24
     adc:	60 e0       	ldi	r22, 0x00	; 0
     ade:	70 e0       	ldi	r23, 0x00	; 0
     ae0:	80 e8       	ldi	r24, 0x80	; 128
     ae2:	9f e3       	ldi	r25, 0x3F	; 63
     ae4:	34 d1       	rcall	.+616    	; 0xd4e <__subsf3>
     ae6:	f5 d0       	rcall	.+490    	; 0xcd2 <sqrt>
     ae8:	98 01       	movw	r18, r16
     aea:	ae 01       	movw	r20, r28
     aec:	0f 91       	pop	r16
     aee:	1f 91       	pop	r17
     af0:	cf 91       	pop	r28
     af2:	df 91       	pop	r29
     af4:	93 c0       	rjmp	.+294    	; 0xc1c <__mulsf3x>

00000af6 <__fp_inf>:
     af6:	97 f9       	bld	r25, 7
     af8:	9f 67       	ori	r25, 0x7F	; 127
     afa:	80 e8       	ldi	r24, 0x80	; 128
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	60 e0       	ldi	r22, 0x00	; 0
     b00:	08 95       	ret

00000b02 <__fp_nan>:
     b02:	9f ef       	ldi	r25, 0xFF	; 255
     b04:	80 ec       	ldi	r24, 0xC0	; 192
     b06:	08 95       	ret

00000b08 <__fp_powser>:
     b08:	df 93       	push	r29
     b0a:	cf 93       	push	r28
     b0c:	1f 93       	push	r17
     b0e:	0f 93       	push	r16
     b10:	ff 92       	push	r15
     b12:	ef 92       	push	r14
     b14:	df 92       	push	r13
     b16:	7b 01       	movw	r14, r22
     b18:	8c 01       	movw	r16, r24
     b1a:	68 94       	set
     b1c:	05 c0       	rjmp	.+10     	; 0xb28 <__fp_powser+0x20>
     b1e:	da 2e       	mov	r13, r26
     b20:	ef 01       	movw	r28, r30
     b22:	7c d0       	rcall	.+248    	; 0xc1c <__mulsf3x>
     b24:	fe 01       	movw	r30, r28
     b26:	e8 94       	clt
     b28:	a5 91       	lpm	r26, Z+
     b2a:	25 91       	lpm	r18, Z+
     b2c:	35 91       	lpm	r19, Z+
     b2e:	45 91       	lpm	r20, Z+
     b30:	55 91       	lpm	r21, Z+
     b32:	ae f3       	brts	.-22     	; 0xb1e <__fp_powser+0x16>
     b34:	ef 01       	movw	r28, r30
     b36:	1d d1       	rcall	.+570    	; 0xd72 <__addsf3x>
     b38:	fe 01       	movw	r30, r28
     b3a:	97 01       	movw	r18, r14
     b3c:	a8 01       	movw	r20, r16
     b3e:	da 94       	dec	r13
     b40:	79 f7       	brne	.-34     	; 0xb20 <__fp_powser+0x18>
     b42:	df 90       	pop	r13
     b44:	ef 90       	pop	r14
     b46:	ff 90       	pop	r15
     b48:	0f 91       	pop	r16
     b4a:	1f 91       	pop	r17
     b4c:	cf 91       	pop	r28
     b4e:	df 91       	pop	r29
     b50:	08 95       	ret

00000b52 <__fp_powsodd>:
     b52:	9f 93       	push	r25
     b54:	8f 93       	push	r24
     b56:	7f 93       	push	r23
     b58:	6f 93       	push	r22
     b5a:	ff 93       	push	r31
     b5c:	ef 93       	push	r30
     b5e:	9b 01       	movw	r18, r22
     b60:	ac 01       	movw	r20, r24
     b62:	50 d0       	rcall	.+160    	; 0xc04 <__mulsf3>
     b64:	ef 91       	pop	r30
     b66:	ff 91       	pop	r31
     b68:	cf df       	rcall	.-98     	; 0xb08 <__fp_powser>
     b6a:	2f 91       	pop	r18
     b6c:	3f 91       	pop	r19
     b6e:	4f 91       	pop	r20
     b70:	5f 91       	pop	r21
     b72:	48 c0       	rjmp	.+144    	; 0xc04 <__mulsf3>

00000b74 <__fp_pscA>:
     b74:	00 24       	eor	r0, r0
     b76:	0a 94       	dec	r0
     b78:	16 16       	cp	r1, r22
     b7a:	17 06       	cpc	r1, r23
     b7c:	18 06       	cpc	r1, r24
     b7e:	09 06       	cpc	r0, r25
     b80:	08 95       	ret

00000b82 <__fp_pscB>:
     b82:	00 24       	eor	r0, r0
     b84:	0a 94       	dec	r0
     b86:	12 16       	cp	r1, r18
     b88:	13 06       	cpc	r1, r19
     b8a:	14 06       	cpc	r1, r20
     b8c:	05 06       	cpc	r0, r21
     b8e:	08 95       	ret

00000b90 <__fp_round>:
     b90:	09 2e       	mov	r0, r25
     b92:	03 94       	inc	r0
     b94:	00 0c       	add	r0, r0
     b96:	11 f4       	brne	.+4      	; 0xb9c <__fp_round+0xc>
     b98:	88 23       	and	r24, r24
     b9a:	52 f0       	brmi	.+20     	; 0xbb0 <__fp_round+0x20>
     b9c:	bb 0f       	add	r27, r27
     b9e:	40 f4       	brcc	.+16     	; 0xbb0 <__fp_round+0x20>
     ba0:	bf 2b       	or	r27, r31
     ba2:	11 f4       	brne	.+4      	; 0xba8 <__fp_round+0x18>
     ba4:	60 ff       	sbrs	r22, 0
     ba6:	04 c0       	rjmp	.+8      	; 0xbb0 <__fp_round+0x20>
     ba8:	6f 5f       	subi	r22, 0xFF	; 255
     baa:	7f 4f       	sbci	r23, 0xFF	; 255
     bac:	8f 4f       	sbci	r24, 0xFF	; 255
     bae:	9f 4f       	sbci	r25, 0xFF	; 255
     bb0:	08 95       	ret

00000bb2 <__fp_split3>:
     bb2:	57 fd       	sbrc	r21, 7
     bb4:	90 58       	subi	r25, 0x80	; 128
     bb6:	44 0f       	add	r20, r20
     bb8:	55 1f       	adc	r21, r21
     bba:	59 f0       	breq	.+22     	; 0xbd2 <__fp_splitA+0x10>
     bbc:	5f 3f       	cpi	r21, 0xFF	; 255
     bbe:	71 f0       	breq	.+28     	; 0xbdc <__fp_splitA+0x1a>
     bc0:	47 95       	ror	r20

00000bc2 <__fp_splitA>:
     bc2:	88 0f       	add	r24, r24
     bc4:	97 fb       	bst	r25, 7
     bc6:	99 1f       	adc	r25, r25
     bc8:	61 f0       	breq	.+24     	; 0xbe2 <__fp_splitA+0x20>
     bca:	9f 3f       	cpi	r25, 0xFF	; 255
     bcc:	79 f0       	breq	.+30     	; 0xbec <__fp_splitA+0x2a>
     bce:	87 95       	ror	r24
     bd0:	08 95       	ret
     bd2:	12 16       	cp	r1, r18
     bd4:	13 06       	cpc	r1, r19
     bd6:	14 06       	cpc	r1, r20
     bd8:	55 1f       	adc	r21, r21
     bda:	f2 cf       	rjmp	.-28     	; 0xbc0 <__fp_split3+0xe>
     bdc:	46 95       	lsr	r20
     bde:	f1 df       	rcall	.-30     	; 0xbc2 <__fp_splitA>
     be0:	08 c0       	rjmp	.+16     	; 0xbf2 <__fp_splitA+0x30>
     be2:	16 16       	cp	r1, r22
     be4:	17 06       	cpc	r1, r23
     be6:	18 06       	cpc	r1, r24
     be8:	99 1f       	adc	r25, r25
     bea:	f1 cf       	rjmp	.-30     	; 0xbce <__fp_splitA+0xc>
     bec:	86 95       	lsr	r24
     bee:	71 05       	cpc	r23, r1
     bf0:	61 05       	cpc	r22, r1
     bf2:	08 94       	sec
     bf4:	08 95       	ret

00000bf6 <__fp_zero>:
     bf6:	e8 94       	clt

00000bf8 <__fp_szero>:
     bf8:	bb 27       	eor	r27, r27
     bfa:	66 27       	eor	r22, r22
     bfc:	77 27       	eor	r23, r23
     bfe:	cb 01       	movw	r24, r22
     c00:	97 f9       	bld	r25, 7
     c02:	08 95       	ret

00000c04 <__mulsf3>:
     c04:	0b d0       	rcall	.+22     	; 0xc1c <__mulsf3x>
     c06:	c4 cf       	rjmp	.-120    	; 0xb90 <__fp_round>
     c08:	b5 df       	rcall	.-150    	; 0xb74 <__fp_pscA>
     c0a:	28 f0       	brcs	.+10     	; 0xc16 <__mulsf3+0x12>
     c0c:	ba df       	rcall	.-140    	; 0xb82 <__fp_pscB>
     c0e:	18 f0       	brcs	.+6      	; 0xc16 <__mulsf3+0x12>
     c10:	95 23       	and	r25, r21
     c12:	09 f0       	breq	.+2      	; 0xc16 <__mulsf3+0x12>
     c14:	70 cf       	rjmp	.-288    	; 0xaf6 <__fp_inf>
     c16:	75 cf       	rjmp	.-278    	; 0xb02 <__fp_nan>
     c18:	11 24       	eor	r1, r1
     c1a:	ee cf       	rjmp	.-36     	; 0xbf8 <__fp_szero>

00000c1c <__mulsf3x>:
     c1c:	ca df       	rcall	.-108    	; 0xbb2 <__fp_split3>
     c1e:	a0 f3       	brcs	.-24     	; 0xc08 <__mulsf3+0x4>

00000c20 <__mulsf3_pse>:
     c20:	95 9f       	mul	r25, r21
     c22:	d1 f3       	breq	.-12     	; 0xc18 <__mulsf3+0x14>
     c24:	95 0f       	add	r25, r21
     c26:	50 e0       	ldi	r21, 0x00	; 0
     c28:	55 1f       	adc	r21, r21
     c2a:	62 9f       	mul	r22, r18
     c2c:	f0 01       	movw	r30, r0
     c2e:	72 9f       	mul	r23, r18
     c30:	bb 27       	eor	r27, r27
     c32:	f0 0d       	add	r31, r0
     c34:	b1 1d       	adc	r27, r1
     c36:	63 9f       	mul	r22, r19
     c38:	aa 27       	eor	r26, r26
     c3a:	f0 0d       	add	r31, r0
     c3c:	b1 1d       	adc	r27, r1
     c3e:	aa 1f       	adc	r26, r26
     c40:	64 9f       	mul	r22, r20
     c42:	66 27       	eor	r22, r22
     c44:	b0 0d       	add	r27, r0
     c46:	a1 1d       	adc	r26, r1
     c48:	66 1f       	adc	r22, r22
     c4a:	82 9f       	mul	r24, r18
     c4c:	22 27       	eor	r18, r18
     c4e:	b0 0d       	add	r27, r0
     c50:	a1 1d       	adc	r26, r1
     c52:	62 1f       	adc	r22, r18
     c54:	73 9f       	mul	r23, r19
     c56:	b0 0d       	add	r27, r0
     c58:	a1 1d       	adc	r26, r1
     c5a:	62 1f       	adc	r22, r18
     c5c:	83 9f       	mul	r24, r19
     c5e:	a0 0d       	add	r26, r0
     c60:	61 1d       	adc	r22, r1
     c62:	22 1f       	adc	r18, r18
     c64:	74 9f       	mul	r23, r20
     c66:	33 27       	eor	r19, r19
     c68:	a0 0d       	add	r26, r0
     c6a:	61 1d       	adc	r22, r1
     c6c:	23 1f       	adc	r18, r19
     c6e:	84 9f       	mul	r24, r20
     c70:	60 0d       	add	r22, r0
     c72:	21 1d       	adc	r18, r1
     c74:	82 2f       	mov	r24, r18
     c76:	76 2f       	mov	r23, r22
     c78:	6a 2f       	mov	r22, r26
     c7a:	11 24       	eor	r1, r1
     c7c:	9f 57       	subi	r25, 0x7F	; 127
     c7e:	50 40       	sbci	r21, 0x00	; 0
     c80:	8a f0       	brmi	.+34     	; 0xca4 <__mulsf3_pse+0x84>
     c82:	e1 f0       	breq	.+56     	; 0xcbc <__mulsf3_pse+0x9c>
     c84:	88 23       	and	r24, r24
     c86:	4a f0       	brmi	.+18     	; 0xc9a <__mulsf3_pse+0x7a>
     c88:	ee 0f       	add	r30, r30
     c8a:	ff 1f       	adc	r31, r31
     c8c:	bb 1f       	adc	r27, r27
     c8e:	66 1f       	adc	r22, r22
     c90:	77 1f       	adc	r23, r23
     c92:	88 1f       	adc	r24, r24
     c94:	91 50       	subi	r25, 0x01	; 1
     c96:	50 40       	sbci	r21, 0x00	; 0
     c98:	a9 f7       	brne	.-22     	; 0xc84 <__mulsf3_pse+0x64>
     c9a:	9e 3f       	cpi	r25, 0xFE	; 254
     c9c:	51 05       	cpc	r21, r1
     c9e:	70 f0       	brcs	.+28     	; 0xcbc <__mulsf3_pse+0x9c>
     ca0:	2a cf       	rjmp	.-428    	; 0xaf6 <__fp_inf>
     ca2:	aa cf       	rjmp	.-172    	; 0xbf8 <__fp_szero>
     ca4:	5f 3f       	cpi	r21, 0xFF	; 255
     ca6:	ec f3       	brlt	.-6      	; 0xca2 <__mulsf3_pse+0x82>
     ca8:	98 3e       	cpi	r25, 0xE8	; 232
     caa:	dc f3       	brlt	.-10     	; 0xca2 <__mulsf3_pse+0x82>
     cac:	86 95       	lsr	r24
     cae:	77 95       	ror	r23
     cb0:	67 95       	ror	r22
     cb2:	b7 95       	ror	r27
     cb4:	f7 95       	ror	r31
     cb6:	e7 95       	ror	r30
     cb8:	9f 5f       	subi	r25, 0xFF	; 255
     cba:	c1 f7       	brne	.-16     	; 0xcac <__mulsf3_pse+0x8c>
     cbc:	fe 2b       	or	r31, r30
     cbe:	88 0f       	add	r24, r24
     cc0:	91 1d       	adc	r25, r1
     cc2:	96 95       	lsr	r25
     cc4:	87 95       	ror	r24
     cc6:	97 f9       	bld	r25, 7
     cc8:	08 95       	ret
     cca:	11 f4       	brne	.+4      	; 0xcd0 <__mulsf3_pse+0xb0>
     ccc:	0e f4       	brtc	.+2      	; 0xcd0 <__mulsf3_pse+0xb0>
     cce:	19 cf       	rjmp	.-462    	; 0xb02 <__fp_nan>
     cd0:	a3 c0       	rjmp	.+326    	; 0xe18 <__fp_mpack>

00000cd2 <sqrt>:
     cd2:	77 df       	rcall	.-274    	; 0xbc2 <__fp_splitA>
     cd4:	d0 f3       	brcs	.-12     	; 0xcca <__mulsf3_pse+0xaa>
     cd6:	99 23       	and	r25, r25
     cd8:	d9 f3       	breq	.-10     	; 0xcd0 <__mulsf3_pse+0xb0>
     cda:	ce f3       	brts	.-14     	; 0xcce <__mulsf3_pse+0xae>
     cdc:	9f 57       	subi	r25, 0x7F	; 127
     cde:	55 0b       	sbc	r21, r21
     ce0:	87 ff       	sbrs	r24, 7
     ce2:	a8 d0       	rcall	.+336    	; 0xe34 <__fp_norm2>
     ce4:	00 24       	eor	r0, r0
     ce6:	a0 e6       	ldi	r26, 0x60	; 96
     ce8:	40 ea       	ldi	r20, 0xA0	; 160
     cea:	90 01       	movw	r18, r0
     cec:	80 58       	subi	r24, 0x80	; 128
     cee:	56 95       	lsr	r21
     cf0:	97 95       	ror	r25
     cf2:	28 f4       	brcc	.+10     	; 0xcfe <sqrt+0x2c>
     cf4:	80 5c       	subi	r24, 0xC0	; 192
     cf6:	66 0f       	add	r22, r22
     cf8:	77 1f       	adc	r23, r23
     cfa:	88 1f       	adc	r24, r24
     cfc:	20 f0       	brcs	.+8      	; 0xd06 <sqrt+0x34>
     cfe:	26 17       	cp	r18, r22
     d00:	37 07       	cpc	r19, r23
     d02:	48 07       	cpc	r20, r24
     d04:	30 f4       	brcc	.+12     	; 0xd12 <sqrt+0x40>
     d06:	62 1b       	sub	r22, r18
     d08:	73 0b       	sbc	r23, r19
     d0a:	84 0b       	sbc	r24, r20
     d0c:	20 29       	or	r18, r0
     d0e:	31 29       	or	r19, r1
     d10:	4a 2b       	or	r20, r26
     d12:	a6 95       	lsr	r26
     d14:	17 94       	ror	r1
     d16:	07 94       	ror	r0
     d18:	20 25       	eor	r18, r0
     d1a:	31 25       	eor	r19, r1
     d1c:	4a 27       	eor	r20, r26
     d1e:	58 f7       	brcc	.-42     	; 0xcf6 <sqrt+0x24>
     d20:	66 0f       	add	r22, r22
     d22:	77 1f       	adc	r23, r23
     d24:	88 1f       	adc	r24, r24
     d26:	20 f0       	brcs	.+8      	; 0xd30 <sqrt+0x5e>
     d28:	26 17       	cp	r18, r22
     d2a:	37 07       	cpc	r19, r23
     d2c:	48 07       	cpc	r20, r24
     d2e:	30 f4       	brcc	.+12     	; 0xd3c <sqrt+0x6a>
     d30:	62 0b       	sbc	r22, r18
     d32:	73 0b       	sbc	r23, r19
     d34:	84 0b       	sbc	r24, r20
     d36:	20 0d       	add	r18, r0
     d38:	31 1d       	adc	r19, r1
     d3a:	41 1d       	adc	r20, r1
     d3c:	a0 95       	com	r26
     d3e:	81 f7       	brne	.-32     	; 0xd20 <sqrt+0x4e>
     d40:	b9 01       	movw	r22, r18
     d42:	84 2f       	mov	r24, r20
     d44:	91 58       	subi	r25, 0x81	; 129
     d46:	88 0f       	add	r24, r24
     d48:	96 95       	lsr	r25
     d4a:	87 95       	ror	r24
     d4c:	08 95       	ret

00000d4e <__subsf3>:
     d4e:	50 58       	subi	r21, 0x80	; 128

00000d50 <__addsf3>:
     d50:	bb 27       	eor	r27, r27
     d52:	aa 27       	eor	r26, r26
     d54:	0e d0       	rcall	.+28     	; 0xd72 <__addsf3x>
     d56:	1c cf       	rjmp	.-456    	; 0xb90 <__fp_round>
     d58:	0d df       	rcall	.-486    	; 0xb74 <__fp_pscA>
     d5a:	30 f0       	brcs	.+12     	; 0xd68 <__addsf3+0x18>
     d5c:	12 df       	rcall	.-476    	; 0xb82 <__fp_pscB>
     d5e:	20 f0       	brcs	.+8      	; 0xd68 <__addsf3+0x18>
     d60:	31 f4       	brne	.+12     	; 0xd6e <__addsf3+0x1e>
     d62:	9f 3f       	cpi	r25, 0xFF	; 255
     d64:	11 f4       	brne	.+4      	; 0xd6a <__addsf3+0x1a>
     d66:	1e f4       	brtc	.+6      	; 0xd6e <__addsf3+0x1e>
     d68:	cc ce       	rjmp	.-616    	; 0xb02 <__fp_nan>
     d6a:	0e f4       	brtc	.+2      	; 0xd6e <__addsf3+0x1e>
     d6c:	e0 95       	com	r30
     d6e:	e7 fb       	bst	r30, 7
     d70:	c2 ce       	rjmp	.-636    	; 0xaf6 <__fp_inf>

00000d72 <__addsf3x>:
     d72:	e9 2f       	mov	r30, r25
     d74:	1e df       	rcall	.-452    	; 0xbb2 <__fp_split3>
     d76:	80 f3       	brcs	.-32     	; 0xd58 <__addsf3+0x8>
     d78:	ba 17       	cp	r27, r26
     d7a:	62 07       	cpc	r22, r18
     d7c:	73 07       	cpc	r23, r19
     d7e:	84 07       	cpc	r24, r20
     d80:	95 07       	cpc	r25, r21
     d82:	18 f0       	brcs	.+6      	; 0xd8a <__addsf3x+0x18>
     d84:	71 f4       	brne	.+28     	; 0xda2 <__addsf3x+0x30>
     d86:	9e f5       	brtc	.+102    	; 0xdee <__addsf3x+0x7c>
     d88:	36 cf       	rjmp	.-404    	; 0xbf6 <__fp_zero>
     d8a:	0e f4       	brtc	.+2      	; 0xd8e <__addsf3x+0x1c>
     d8c:	e0 95       	com	r30
     d8e:	0b 2e       	mov	r0, r27
     d90:	ba 2f       	mov	r27, r26
     d92:	a0 2d       	mov	r26, r0
     d94:	0b 01       	movw	r0, r22
     d96:	b9 01       	movw	r22, r18
     d98:	90 01       	movw	r18, r0
     d9a:	0c 01       	movw	r0, r24
     d9c:	ca 01       	movw	r24, r20
     d9e:	a0 01       	movw	r20, r0
     da0:	11 24       	eor	r1, r1
     da2:	ff 27       	eor	r31, r31
     da4:	59 1b       	sub	r21, r25
     da6:	99 f0       	breq	.+38     	; 0xdce <__addsf3x+0x5c>
     da8:	59 3f       	cpi	r21, 0xF9	; 249
     daa:	50 f4       	brcc	.+20     	; 0xdc0 <__addsf3x+0x4e>
     dac:	50 3e       	cpi	r21, 0xE0	; 224
     dae:	68 f1       	brcs	.+90     	; 0xe0a <__addsf3x+0x98>
     db0:	1a 16       	cp	r1, r26
     db2:	f0 40       	sbci	r31, 0x00	; 0
     db4:	a2 2f       	mov	r26, r18
     db6:	23 2f       	mov	r18, r19
     db8:	34 2f       	mov	r19, r20
     dba:	44 27       	eor	r20, r20
     dbc:	58 5f       	subi	r21, 0xF8	; 248
     dbe:	f3 cf       	rjmp	.-26     	; 0xda6 <__addsf3x+0x34>
     dc0:	46 95       	lsr	r20
     dc2:	37 95       	ror	r19
     dc4:	27 95       	ror	r18
     dc6:	a7 95       	ror	r26
     dc8:	f0 40       	sbci	r31, 0x00	; 0
     dca:	53 95       	inc	r21
     dcc:	c9 f7       	brne	.-14     	; 0xdc0 <__addsf3x+0x4e>
     dce:	7e f4       	brtc	.+30     	; 0xdee <__addsf3x+0x7c>
     dd0:	1f 16       	cp	r1, r31
     dd2:	ba 0b       	sbc	r27, r26
     dd4:	62 0b       	sbc	r22, r18
     dd6:	73 0b       	sbc	r23, r19
     dd8:	84 0b       	sbc	r24, r20
     dda:	ba f0       	brmi	.+46     	; 0xe0a <__addsf3x+0x98>
     ddc:	91 50       	subi	r25, 0x01	; 1
     dde:	a1 f0       	breq	.+40     	; 0xe08 <__addsf3x+0x96>
     de0:	ff 0f       	add	r31, r31
     de2:	bb 1f       	adc	r27, r27
     de4:	66 1f       	adc	r22, r22
     de6:	77 1f       	adc	r23, r23
     de8:	88 1f       	adc	r24, r24
     dea:	c2 f7       	brpl	.-16     	; 0xddc <__addsf3x+0x6a>
     dec:	0e c0       	rjmp	.+28     	; 0xe0a <__addsf3x+0x98>
     dee:	ba 0f       	add	r27, r26
     df0:	62 1f       	adc	r22, r18
     df2:	73 1f       	adc	r23, r19
     df4:	84 1f       	adc	r24, r20
     df6:	48 f4       	brcc	.+18     	; 0xe0a <__addsf3x+0x98>
     df8:	87 95       	ror	r24
     dfa:	77 95       	ror	r23
     dfc:	67 95       	ror	r22
     dfe:	b7 95       	ror	r27
     e00:	f7 95       	ror	r31
     e02:	9e 3f       	cpi	r25, 0xFE	; 254
     e04:	08 f0       	brcs	.+2      	; 0xe08 <__addsf3x+0x96>
     e06:	b3 cf       	rjmp	.-154    	; 0xd6e <__addsf3+0x1e>
     e08:	93 95       	inc	r25
     e0a:	88 0f       	add	r24, r24
     e0c:	08 f0       	brcs	.+2      	; 0xe10 <__addsf3x+0x9e>
     e0e:	99 27       	eor	r25, r25
     e10:	ee 0f       	add	r30, r30
     e12:	97 95       	ror	r25
     e14:	87 95       	ror	r24
     e16:	08 95       	ret

00000e18 <__fp_mpack>:
     e18:	9f 3f       	cpi	r25, 0xFF	; 255
     e1a:	31 f0       	breq	.+12     	; 0xe28 <__fp_mpack_finite+0xc>

00000e1c <__fp_mpack_finite>:
     e1c:	91 50       	subi	r25, 0x01	; 1
     e1e:	20 f4       	brcc	.+8      	; 0xe28 <__fp_mpack_finite+0xc>
     e20:	87 95       	ror	r24
     e22:	77 95       	ror	r23
     e24:	67 95       	ror	r22
     e26:	b7 95       	ror	r27
     e28:	88 0f       	add	r24, r24
     e2a:	91 1d       	adc	r25, r1
     e2c:	96 95       	lsr	r25
     e2e:	87 95       	ror	r24
     e30:	97 f9       	bld	r25, 7
     e32:	08 95       	ret

00000e34 <__fp_norm2>:
     e34:	91 50       	subi	r25, 0x01	; 1
     e36:	50 40       	sbci	r21, 0x00	; 0
     e38:	66 0f       	add	r22, r22
     e3a:	77 1f       	adc	r23, r23
     e3c:	88 1f       	adc	r24, r24
     e3e:	d2 f7       	brpl	.-12     	; 0xe34 <__fp_norm2>
     e40:	08 95       	ret

00000e42 <__divmodhi4>:
     e42:	97 fb       	bst	r25, 7
     e44:	07 2e       	mov	r0, r23
     e46:	16 f4       	brtc	.+4      	; 0xe4c <__divmodhi4+0xa>
     e48:	00 94       	com	r0
     e4a:	06 d0       	rcall	.+12     	; 0xe58 <__divmodhi4_neg1>
     e4c:	77 fd       	sbrc	r23, 7
     e4e:	08 d0       	rcall	.+16     	; 0xe60 <__divmodhi4_neg2>
     e50:	27 d0       	rcall	.+78     	; 0xea0 <__udivmodhi4>
     e52:	07 fc       	sbrc	r0, 7
     e54:	05 d0       	rcall	.+10     	; 0xe60 <__divmodhi4_neg2>
     e56:	3e f4       	brtc	.+14     	; 0xe66 <__divmodhi4_exit>

00000e58 <__divmodhi4_neg1>:
     e58:	90 95       	com	r25
     e5a:	81 95       	neg	r24
     e5c:	9f 4f       	sbci	r25, 0xFF	; 255
     e5e:	08 95       	ret

00000e60 <__divmodhi4_neg2>:
     e60:	70 95       	com	r23
     e62:	61 95       	neg	r22
     e64:	7f 4f       	sbci	r23, 0xFF	; 255

00000e66 <__divmodhi4_exit>:
     e66:	08 95       	ret

00000e68 <__divmodsi4>:
     e68:	05 2e       	mov	r0, r21
     e6a:	97 fb       	bst	r25, 7
     e6c:	16 f4       	brtc	.+4      	; 0xe72 <__divmodsi4+0xa>
     e6e:	00 94       	com	r0
     e70:	0f d0       	rcall	.+30     	; 0xe90 <__negsi2>
     e72:	57 fd       	sbrc	r21, 7
     e74:	05 d0       	rcall	.+10     	; 0xe80 <__divmodsi4_neg2>
     e76:	28 d0       	rcall	.+80     	; 0xec8 <__udivmodsi4>
     e78:	07 fc       	sbrc	r0, 7
     e7a:	02 d0       	rcall	.+4      	; 0xe80 <__divmodsi4_neg2>
     e7c:	46 f4       	brtc	.+16     	; 0xe8e <__divmodsi4_exit>
     e7e:	08 c0       	rjmp	.+16     	; 0xe90 <__negsi2>

00000e80 <__divmodsi4_neg2>:
     e80:	50 95       	com	r21
     e82:	40 95       	com	r20
     e84:	30 95       	com	r19
     e86:	21 95       	neg	r18
     e88:	3f 4f       	sbci	r19, 0xFF	; 255
     e8a:	4f 4f       	sbci	r20, 0xFF	; 255
     e8c:	5f 4f       	sbci	r21, 0xFF	; 255

00000e8e <__divmodsi4_exit>:
     e8e:	08 95       	ret

00000e90 <__negsi2>:
     e90:	90 95       	com	r25
     e92:	80 95       	com	r24
     e94:	70 95       	com	r23
     e96:	61 95       	neg	r22
     e98:	7f 4f       	sbci	r23, 0xFF	; 255
     e9a:	8f 4f       	sbci	r24, 0xFF	; 255
     e9c:	9f 4f       	sbci	r25, 0xFF	; 255
     e9e:	08 95       	ret

00000ea0 <__udivmodhi4>:
     ea0:	aa 1b       	sub	r26, r26
     ea2:	bb 1b       	sub	r27, r27
     ea4:	51 e1       	ldi	r21, 0x11	; 17
     ea6:	07 c0       	rjmp	.+14     	; 0xeb6 <__udivmodhi4_ep>

00000ea8 <__udivmodhi4_loop>:
     ea8:	aa 1f       	adc	r26, r26
     eaa:	bb 1f       	adc	r27, r27
     eac:	a6 17       	cp	r26, r22
     eae:	b7 07       	cpc	r27, r23
     eb0:	10 f0       	brcs	.+4      	; 0xeb6 <__udivmodhi4_ep>
     eb2:	a6 1b       	sub	r26, r22
     eb4:	b7 0b       	sbc	r27, r23

00000eb6 <__udivmodhi4_ep>:
     eb6:	88 1f       	adc	r24, r24
     eb8:	99 1f       	adc	r25, r25
     eba:	5a 95       	dec	r21
     ebc:	a9 f7       	brne	.-22     	; 0xea8 <__udivmodhi4_loop>
     ebe:	80 95       	com	r24
     ec0:	90 95       	com	r25
     ec2:	bc 01       	movw	r22, r24
     ec4:	cd 01       	movw	r24, r26
     ec6:	08 95       	ret

00000ec8 <__udivmodsi4>:
     ec8:	a1 e2       	ldi	r26, 0x21	; 33
     eca:	1a 2e       	mov	r1, r26
     ecc:	aa 1b       	sub	r26, r26
     ece:	bb 1b       	sub	r27, r27
     ed0:	fd 01       	movw	r30, r26
     ed2:	0d c0       	rjmp	.+26     	; 0xeee <__udivmodsi4_ep>

00000ed4 <__udivmodsi4_loop>:
     ed4:	aa 1f       	adc	r26, r26
     ed6:	bb 1f       	adc	r27, r27
     ed8:	ee 1f       	adc	r30, r30
     eda:	ff 1f       	adc	r31, r31
     edc:	a2 17       	cp	r26, r18
     ede:	b3 07       	cpc	r27, r19
     ee0:	e4 07       	cpc	r30, r20
     ee2:	f5 07       	cpc	r31, r21
     ee4:	20 f0       	brcs	.+8      	; 0xeee <__udivmodsi4_ep>
     ee6:	a2 1b       	sub	r26, r18
     ee8:	b3 0b       	sbc	r27, r19
     eea:	e4 0b       	sbc	r30, r20
     eec:	f5 0b       	sbc	r31, r21

00000eee <__udivmodsi4_ep>:
     eee:	66 1f       	adc	r22, r22
     ef0:	77 1f       	adc	r23, r23
     ef2:	88 1f       	adc	r24, r24
     ef4:	99 1f       	adc	r25, r25
     ef6:	1a 94       	dec	r1
     ef8:	69 f7       	brne	.-38     	; 0xed4 <__udivmodsi4_loop>
     efa:	60 95       	com	r22
     efc:	70 95       	com	r23
     efe:	80 95       	com	r24
     f00:	90 95       	com	r25
     f02:	9b 01       	movw	r18, r22
     f04:	ac 01       	movw	r20, r24
     f06:	bd 01       	movw	r22, r26
     f08:	cf 01       	movw	r24, r30
     f0a:	08 95       	ret

00000f0c <__itoa_ncheck>:
     f0c:	bb 27       	eor	r27, r27
     f0e:	4a 30       	cpi	r20, 0x0A	; 10
     f10:	31 f4       	brne	.+12     	; 0xf1e <__itoa_ncheck+0x12>
     f12:	99 23       	and	r25, r25
     f14:	22 f4       	brpl	.+8      	; 0xf1e <__itoa_ncheck+0x12>
     f16:	bd e2       	ldi	r27, 0x2D	; 45
     f18:	90 95       	com	r25
     f1a:	81 95       	neg	r24
     f1c:	9f 4f       	sbci	r25, 0xFF	; 255
     f1e:	01 c0       	rjmp	.+2      	; 0xf22 <__utoa_common>

00000f20 <__utoa_ncheck>:
     f20:	bb 27       	eor	r27, r27

00000f22 <__utoa_common>:
     f22:	fb 01       	movw	r30, r22
     f24:	55 27       	eor	r21, r21
     f26:	aa 27       	eor	r26, r26
     f28:	88 0f       	add	r24, r24
     f2a:	99 1f       	adc	r25, r25
     f2c:	aa 1f       	adc	r26, r26
     f2e:	a4 17       	cp	r26, r20
     f30:	10 f0       	brcs	.+4      	; 0xf36 <__utoa_common+0x14>
     f32:	a4 1b       	sub	r26, r20
     f34:	83 95       	inc	r24
     f36:	50 51       	subi	r21, 0x10	; 16
     f38:	b9 f7       	brne	.-18     	; 0xf28 <__utoa_common+0x6>
     f3a:	a0 5d       	subi	r26, 0xD0	; 208
     f3c:	aa 33       	cpi	r26, 0x3A	; 58
     f3e:	08 f0       	brcs	.+2      	; 0xf42 <__utoa_common+0x20>
     f40:	a9 5d       	subi	r26, 0xD9	; 217
     f42:	a1 93       	st	Z+, r26
     f44:	00 97       	sbiw	r24, 0x00	; 0
     f46:	79 f7       	brne	.-34     	; 0xf26 <__utoa_common+0x4>
     f48:	b1 11       	cpse	r27, r1
     f4a:	b1 93       	st	Z+, r27
     f4c:	11 92       	st	Z+, r1
     f4e:	cb 01       	movw	r24, r22
     f50:	e7 c3       	rjmp	.+1998   	; 0x1720 <strrev>

00000f52 <fdevopen>:
     f52:	0f 93       	push	r16
     f54:	1f 93       	push	r17
     f56:	cf 93       	push	r28
     f58:	df 93       	push	r29
     f5a:	00 97       	sbiw	r24, 0x00	; 0
     f5c:	31 f4       	brne	.+12     	; 0xf6a <fdevopen+0x18>
     f5e:	61 15       	cp	r22, r1
     f60:	71 05       	cpc	r23, r1
     f62:	19 f4       	brne	.+6      	; 0xf6a <fdevopen+0x18>
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	39 c0       	rjmp	.+114    	; 0xfdc <fdevopen+0x8a>
     f6a:	8b 01       	movw	r16, r22
     f6c:	ec 01       	movw	r28, r24
     f6e:	6e e0       	ldi	r22, 0x0E	; 14
     f70:	70 e0       	ldi	r23, 0x00	; 0
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	7c d2       	rcall	.+1272   	; 0x1470 <calloc>
     f78:	fc 01       	movw	r30, r24
     f7a:	89 2b       	or	r24, r25
     f7c:	99 f3       	breq	.-26     	; 0xf64 <fdevopen+0x12>
     f7e:	80 e8       	ldi	r24, 0x80	; 128
     f80:	83 83       	std	Z+3, r24	; 0x03
     f82:	01 15       	cp	r16, r1
     f84:	11 05       	cpc	r17, r1
     f86:	71 f0       	breq	.+28     	; 0xfa4 <fdevopen+0x52>
     f88:	13 87       	std	Z+11, r17	; 0x0b
     f8a:	02 87       	std	Z+10, r16	; 0x0a
     f8c:	81 e8       	ldi	r24, 0x81	; 129
     f8e:	83 83       	std	Z+3, r24	; 0x03
     f90:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <__iob>
     f94:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <__iob+0x1>
     f98:	89 2b       	or	r24, r25
     f9a:	21 f4       	brne	.+8      	; 0xfa4 <fdevopen+0x52>
     f9c:	f0 93 55 02 	sts	0x0255, r31	; 0x800255 <__iob+0x1>
     fa0:	e0 93 54 02 	sts	0x0254, r30	; 0x800254 <__iob>
     fa4:	20 97       	sbiw	r28, 0x00	; 0
     fa6:	c9 f0       	breq	.+50     	; 0xfda <fdevopen+0x88>
     fa8:	d1 87       	std	Z+9, r29	; 0x09
     faa:	c0 87       	std	Z+8, r28	; 0x08
     fac:	83 81       	ldd	r24, Z+3	; 0x03
     fae:	82 60       	ori	r24, 0x02	; 2
     fb0:	83 83       	std	Z+3, r24	; 0x03
     fb2:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <__iob+0x2>
     fb6:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <__iob+0x3>
     fba:	89 2b       	or	r24, r25
     fbc:	71 f4       	brne	.+28     	; 0xfda <fdevopen+0x88>
     fbe:	f0 93 57 02 	sts	0x0257, r31	; 0x800257 <__iob+0x3>
     fc2:	e0 93 56 02 	sts	0x0256, r30	; 0x800256 <__iob+0x2>
     fc6:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <__iob+0x4>
     fca:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <__iob+0x5>
     fce:	89 2b       	or	r24, r25
     fd0:	21 f4       	brne	.+8      	; 0xfda <fdevopen+0x88>
     fd2:	f0 93 59 02 	sts	0x0259, r31	; 0x800259 <__iob+0x5>
     fd6:	e0 93 58 02 	sts	0x0258, r30	; 0x800258 <__iob+0x4>
     fda:	cf 01       	movw	r24, r30
     fdc:	df 91       	pop	r29
     fde:	cf 91       	pop	r28
     fe0:	1f 91       	pop	r17
     fe2:	0f 91       	pop	r16
     fe4:	08 95       	ret

00000fe6 <printf>:
     fe6:	cf 93       	push	r28
     fe8:	df 93       	push	r29
     fea:	cd b7       	in	r28, 0x3d	; 61
     fec:	de b7       	in	r29, 0x3e	; 62
     fee:	ae 01       	movw	r20, r28
     ff0:	4a 5f       	subi	r20, 0xFA	; 250
     ff2:	5f 4f       	sbci	r21, 0xFF	; 255
     ff4:	fa 01       	movw	r30, r20
     ff6:	61 91       	ld	r22, Z+
     ff8:	71 91       	ld	r23, Z+
     ffa:	af 01       	movw	r20, r30
     ffc:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <__iob+0x2>
    1000:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <__iob+0x3>
    1004:	38 d0       	rcall	.+112    	; 0x1076 <vfprintf>
    1006:	df 91       	pop	r29
    1008:	cf 91       	pop	r28
    100a:	08 95       	ret

0000100c <putchar>:
    100c:	60 91 56 02 	lds	r22, 0x0256	; 0x800256 <__iob+0x2>
    1010:	70 91 57 02 	lds	r23, 0x0257	; 0x800257 <__iob+0x3>
    1014:	95 c3       	rjmp	.+1834   	; 0x1740 <fputc>

00001016 <puts>:
    1016:	0f 93       	push	r16
    1018:	1f 93       	push	r17
    101a:	cf 93       	push	r28
    101c:	df 93       	push	r29
    101e:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <__iob+0x2>
    1022:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <__iob+0x3>
    1026:	23 81       	ldd	r18, Z+3	; 0x03
    1028:	21 ff       	sbrs	r18, 1
    102a:	1b c0       	rjmp	.+54     	; 0x1062 <puts+0x4c>
    102c:	8c 01       	movw	r16, r24
    102e:	d0 e0       	ldi	r29, 0x00	; 0
    1030:	c0 e0       	ldi	r28, 0x00	; 0
    1032:	f8 01       	movw	r30, r16
    1034:	81 91       	ld	r24, Z+
    1036:	8f 01       	movw	r16, r30
    1038:	60 91 56 02 	lds	r22, 0x0256	; 0x800256 <__iob+0x2>
    103c:	70 91 57 02 	lds	r23, 0x0257	; 0x800257 <__iob+0x3>
    1040:	db 01       	movw	r26, r22
    1042:	18 96       	adiw	r26, 0x08	; 8
    1044:	ed 91       	ld	r30, X+
    1046:	fc 91       	ld	r31, X
    1048:	19 97       	sbiw	r26, 0x09	; 9
    104a:	88 23       	and	r24, r24
    104c:	31 f0       	breq	.+12     	; 0x105a <puts+0x44>
    104e:	19 95       	eicall
    1050:	89 2b       	or	r24, r25
    1052:	79 f3       	breq	.-34     	; 0x1032 <puts+0x1c>
    1054:	df ef       	ldi	r29, 0xFF	; 255
    1056:	cf ef       	ldi	r28, 0xFF	; 255
    1058:	ec cf       	rjmp	.-40     	; 0x1032 <puts+0x1c>
    105a:	8a e0       	ldi	r24, 0x0A	; 10
    105c:	19 95       	eicall
    105e:	89 2b       	or	r24, r25
    1060:	19 f0       	breq	.+6      	; 0x1068 <puts+0x52>
    1062:	8f ef       	ldi	r24, 0xFF	; 255
    1064:	9f ef       	ldi	r25, 0xFF	; 255
    1066:	02 c0       	rjmp	.+4      	; 0x106c <puts+0x56>
    1068:	8d 2f       	mov	r24, r29
    106a:	9c 2f       	mov	r25, r28
    106c:	df 91       	pop	r29
    106e:	cf 91       	pop	r28
    1070:	1f 91       	pop	r17
    1072:	0f 91       	pop	r16
    1074:	08 95       	ret

00001076 <vfprintf>:
    1076:	2f 92       	push	r2
    1078:	3f 92       	push	r3
    107a:	4f 92       	push	r4
    107c:	5f 92       	push	r5
    107e:	6f 92       	push	r6
    1080:	7f 92       	push	r7
    1082:	8f 92       	push	r8
    1084:	9f 92       	push	r9
    1086:	af 92       	push	r10
    1088:	bf 92       	push	r11
    108a:	cf 92       	push	r12
    108c:	df 92       	push	r13
    108e:	ef 92       	push	r14
    1090:	ff 92       	push	r15
    1092:	0f 93       	push	r16
    1094:	1f 93       	push	r17
    1096:	cf 93       	push	r28
    1098:	df 93       	push	r29
    109a:	cd b7       	in	r28, 0x3d	; 61
    109c:	de b7       	in	r29, 0x3e	; 62
    109e:	2b 97       	sbiw	r28, 0x0b	; 11
    10a0:	0f b6       	in	r0, 0x3f	; 63
    10a2:	f8 94       	cli
    10a4:	de bf       	out	0x3e, r29	; 62
    10a6:	0f be       	out	0x3f, r0	; 63
    10a8:	cd bf       	out	0x3d, r28	; 61
    10aa:	6c 01       	movw	r12, r24
    10ac:	7b 01       	movw	r14, r22
    10ae:	8a 01       	movw	r16, r20
    10b0:	fc 01       	movw	r30, r24
    10b2:	17 82       	std	Z+7, r1	; 0x07
    10b4:	16 82       	std	Z+6, r1	; 0x06
    10b6:	83 81       	ldd	r24, Z+3	; 0x03
    10b8:	81 ff       	sbrs	r24, 1
    10ba:	bf c1       	rjmp	.+894    	; 0x143a <vfprintf+0x3c4>
    10bc:	ce 01       	movw	r24, r28
    10be:	01 96       	adiw	r24, 0x01	; 1
    10c0:	3c 01       	movw	r6, r24
    10c2:	f6 01       	movw	r30, r12
    10c4:	93 81       	ldd	r25, Z+3	; 0x03
    10c6:	f7 01       	movw	r30, r14
    10c8:	93 fd       	sbrc	r25, 3
    10ca:	85 91       	lpm	r24, Z+
    10cc:	93 ff       	sbrs	r25, 3
    10ce:	81 91       	ld	r24, Z+
    10d0:	7f 01       	movw	r14, r30
    10d2:	88 23       	and	r24, r24
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <vfprintf+0x62>
    10d6:	ad c1       	rjmp	.+858    	; 0x1432 <vfprintf+0x3bc>
    10d8:	85 32       	cpi	r24, 0x25	; 37
    10da:	39 f4       	brne	.+14     	; 0x10ea <vfprintf+0x74>
    10dc:	93 fd       	sbrc	r25, 3
    10de:	85 91       	lpm	r24, Z+
    10e0:	93 ff       	sbrs	r25, 3
    10e2:	81 91       	ld	r24, Z+
    10e4:	7f 01       	movw	r14, r30
    10e6:	85 32       	cpi	r24, 0x25	; 37
    10e8:	21 f4       	brne	.+8      	; 0x10f2 <vfprintf+0x7c>
    10ea:	b6 01       	movw	r22, r12
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	28 d3       	rcall	.+1616   	; 0x1740 <fputc>
    10f0:	e8 cf       	rjmp	.-48     	; 0x10c2 <vfprintf+0x4c>
    10f2:	91 2c       	mov	r9, r1
    10f4:	21 2c       	mov	r2, r1
    10f6:	31 2c       	mov	r3, r1
    10f8:	ff e1       	ldi	r31, 0x1F	; 31
    10fa:	f3 15       	cp	r31, r3
    10fc:	d8 f0       	brcs	.+54     	; 0x1134 <vfprintf+0xbe>
    10fe:	8b 32       	cpi	r24, 0x2B	; 43
    1100:	79 f0       	breq	.+30     	; 0x1120 <vfprintf+0xaa>
    1102:	38 f4       	brcc	.+14     	; 0x1112 <vfprintf+0x9c>
    1104:	80 32       	cpi	r24, 0x20	; 32
    1106:	79 f0       	breq	.+30     	; 0x1126 <vfprintf+0xb0>
    1108:	83 32       	cpi	r24, 0x23	; 35
    110a:	a1 f4       	brne	.+40     	; 0x1134 <vfprintf+0xbe>
    110c:	23 2d       	mov	r18, r3
    110e:	20 61       	ori	r18, 0x10	; 16
    1110:	1d c0       	rjmp	.+58     	; 0x114c <vfprintf+0xd6>
    1112:	8d 32       	cpi	r24, 0x2D	; 45
    1114:	61 f0       	breq	.+24     	; 0x112e <vfprintf+0xb8>
    1116:	80 33       	cpi	r24, 0x30	; 48
    1118:	69 f4       	brne	.+26     	; 0x1134 <vfprintf+0xbe>
    111a:	23 2d       	mov	r18, r3
    111c:	21 60       	ori	r18, 0x01	; 1
    111e:	16 c0       	rjmp	.+44     	; 0x114c <vfprintf+0xd6>
    1120:	83 2d       	mov	r24, r3
    1122:	82 60       	ori	r24, 0x02	; 2
    1124:	38 2e       	mov	r3, r24
    1126:	e3 2d       	mov	r30, r3
    1128:	e4 60       	ori	r30, 0x04	; 4
    112a:	3e 2e       	mov	r3, r30
    112c:	2a c0       	rjmp	.+84     	; 0x1182 <vfprintf+0x10c>
    112e:	f3 2d       	mov	r31, r3
    1130:	f8 60       	ori	r31, 0x08	; 8
    1132:	1d c0       	rjmp	.+58     	; 0x116e <vfprintf+0xf8>
    1134:	37 fc       	sbrc	r3, 7
    1136:	2d c0       	rjmp	.+90     	; 0x1192 <vfprintf+0x11c>
    1138:	20 ed       	ldi	r18, 0xD0	; 208
    113a:	28 0f       	add	r18, r24
    113c:	2a 30       	cpi	r18, 0x0A	; 10
    113e:	40 f0       	brcs	.+16     	; 0x1150 <vfprintf+0xda>
    1140:	8e 32       	cpi	r24, 0x2E	; 46
    1142:	b9 f4       	brne	.+46     	; 0x1172 <vfprintf+0xfc>
    1144:	36 fc       	sbrc	r3, 6
    1146:	75 c1       	rjmp	.+746    	; 0x1432 <vfprintf+0x3bc>
    1148:	23 2d       	mov	r18, r3
    114a:	20 64       	ori	r18, 0x40	; 64
    114c:	32 2e       	mov	r3, r18
    114e:	19 c0       	rjmp	.+50     	; 0x1182 <vfprintf+0x10c>
    1150:	36 fe       	sbrs	r3, 6
    1152:	06 c0       	rjmp	.+12     	; 0x1160 <vfprintf+0xea>
    1154:	8a e0       	ldi	r24, 0x0A	; 10
    1156:	98 9e       	mul	r9, r24
    1158:	20 0d       	add	r18, r0
    115a:	11 24       	eor	r1, r1
    115c:	92 2e       	mov	r9, r18
    115e:	11 c0       	rjmp	.+34     	; 0x1182 <vfprintf+0x10c>
    1160:	ea e0       	ldi	r30, 0x0A	; 10
    1162:	2e 9e       	mul	r2, r30
    1164:	20 0d       	add	r18, r0
    1166:	11 24       	eor	r1, r1
    1168:	22 2e       	mov	r2, r18
    116a:	f3 2d       	mov	r31, r3
    116c:	f0 62       	ori	r31, 0x20	; 32
    116e:	3f 2e       	mov	r3, r31
    1170:	08 c0       	rjmp	.+16     	; 0x1182 <vfprintf+0x10c>
    1172:	8c 36       	cpi	r24, 0x6C	; 108
    1174:	21 f4       	brne	.+8      	; 0x117e <vfprintf+0x108>
    1176:	83 2d       	mov	r24, r3
    1178:	80 68       	ori	r24, 0x80	; 128
    117a:	38 2e       	mov	r3, r24
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <vfprintf+0x10c>
    117e:	88 36       	cpi	r24, 0x68	; 104
    1180:	41 f4       	brne	.+16     	; 0x1192 <vfprintf+0x11c>
    1182:	f7 01       	movw	r30, r14
    1184:	93 fd       	sbrc	r25, 3
    1186:	85 91       	lpm	r24, Z+
    1188:	93 ff       	sbrs	r25, 3
    118a:	81 91       	ld	r24, Z+
    118c:	7f 01       	movw	r14, r30
    118e:	81 11       	cpse	r24, r1
    1190:	b3 cf       	rjmp	.-154    	; 0x10f8 <vfprintf+0x82>
    1192:	98 2f       	mov	r25, r24
    1194:	9f 7d       	andi	r25, 0xDF	; 223
    1196:	95 54       	subi	r25, 0x45	; 69
    1198:	93 30       	cpi	r25, 0x03	; 3
    119a:	28 f4       	brcc	.+10     	; 0x11a6 <vfprintf+0x130>
    119c:	0c 5f       	subi	r16, 0xFC	; 252
    119e:	1f 4f       	sbci	r17, 0xFF	; 255
    11a0:	9f e3       	ldi	r25, 0x3F	; 63
    11a2:	99 83       	std	Y+1, r25	; 0x01
    11a4:	0d c0       	rjmp	.+26     	; 0x11c0 <vfprintf+0x14a>
    11a6:	83 36       	cpi	r24, 0x63	; 99
    11a8:	31 f0       	breq	.+12     	; 0x11b6 <vfprintf+0x140>
    11aa:	83 37       	cpi	r24, 0x73	; 115
    11ac:	71 f0       	breq	.+28     	; 0x11ca <vfprintf+0x154>
    11ae:	83 35       	cpi	r24, 0x53	; 83
    11b0:	09 f0       	breq	.+2      	; 0x11b4 <vfprintf+0x13e>
    11b2:	55 c0       	rjmp	.+170    	; 0x125e <vfprintf+0x1e8>
    11b4:	20 c0       	rjmp	.+64     	; 0x11f6 <vfprintf+0x180>
    11b6:	f8 01       	movw	r30, r16
    11b8:	80 81       	ld	r24, Z
    11ba:	89 83       	std	Y+1, r24	; 0x01
    11bc:	0e 5f       	subi	r16, 0xFE	; 254
    11be:	1f 4f       	sbci	r17, 0xFF	; 255
    11c0:	88 24       	eor	r8, r8
    11c2:	83 94       	inc	r8
    11c4:	91 2c       	mov	r9, r1
    11c6:	53 01       	movw	r10, r6
    11c8:	12 c0       	rjmp	.+36     	; 0x11ee <vfprintf+0x178>
    11ca:	28 01       	movw	r4, r16
    11cc:	f2 e0       	ldi	r31, 0x02	; 2
    11ce:	4f 0e       	add	r4, r31
    11d0:	51 1c       	adc	r5, r1
    11d2:	f8 01       	movw	r30, r16
    11d4:	a0 80       	ld	r10, Z
    11d6:	b1 80       	ldd	r11, Z+1	; 0x01
    11d8:	36 fe       	sbrs	r3, 6
    11da:	03 c0       	rjmp	.+6      	; 0x11e2 <vfprintf+0x16c>
    11dc:	69 2d       	mov	r22, r9
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	02 c0       	rjmp	.+4      	; 0x11e6 <vfprintf+0x170>
    11e2:	6f ef       	ldi	r22, 0xFF	; 255
    11e4:	7f ef       	ldi	r23, 0xFF	; 255
    11e6:	c5 01       	movw	r24, r10
    11e8:	90 d2       	rcall	.+1312   	; 0x170a <strnlen>
    11ea:	4c 01       	movw	r8, r24
    11ec:	82 01       	movw	r16, r4
    11ee:	f3 2d       	mov	r31, r3
    11f0:	ff 77       	andi	r31, 0x7F	; 127
    11f2:	3f 2e       	mov	r3, r31
    11f4:	15 c0       	rjmp	.+42     	; 0x1220 <vfprintf+0x1aa>
    11f6:	28 01       	movw	r4, r16
    11f8:	22 e0       	ldi	r18, 0x02	; 2
    11fa:	42 0e       	add	r4, r18
    11fc:	51 1c       	adc	r5, r1
    11fe:	f8 01       	movw	r30, r16
    1200:	a0 80       	ld	r10, Z
    1202:	b1 80       	ldd	r11, Z+1	; 0x01
    1204:	36 fe       	sbrs	r3, 6
    1206:	03 c0       	rjmp	.+6      	; 0x120e <vfprintf+0x198>
    1208:	69 2d       	mov	r22, r9
    120a:	70 e0       	ldi	r23, 0x00	; 0
    120c:	02 c0       	rjmp	.+4      	; 0x1212 <vfprintf+0x19c>
    120e:	6f ef       	ldi	r22, 0xFF	; 255
    1210:	7f ef       	ldi	r23, 0xFF	; 255
    1212:	c5 01       	movw	r24, r10
    1214:	68 d2       	rcall	.+1232   	; 0x16e6 <strnlen_P>
    1216:	4c 01       	movw	r8, r24
    1218:	f3 2d       	mov	r31, r3
    121a:	f0 68       	ori	r31, 0x80	; 128
    121c:	3f 2e       	mov	r3, r31
    121e:	82 01       	movw	r16, r4
    1220:	33 fc       	sbrc	r3, 3
    1222:	19 c0       	rjmp	.+50     	; 0x1256 <vfprintf+0x1e0>
    1224:	82 2d       	mov	r24, r2
    1226:	90 e0       	ldi	r25, 0x00	; 0
    1228:	88 16       	cp	r8, r24
    122a:	99 06       	cpc	r9, r25
    122c:	a0 f4       	brcc	.+40     	; 0x1256 <vfprintf+0x1e0>
    122e:	b6 01       	movw	r22, r12
    1230:	80 e2       	ldi	r24, 0x20	; 32
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	85 d2       	rcall	.+1290   	; 0x1740 <fputc>
    1236:	2a 94       	dec	r2
    1238:	f5 cf       	rjmp	.-22     	; 0x1224 <vfprintf+0x1ae>
    123a:	f5 01       	movw	r30, r10
    123c:	37 fc       	sbrc	r3, 7
    123e:	85 91       	lpm	r24, Z+
    1240:	37 fe       	sbrs	r3, 7
    1242:	81 91       	ld	r24, Z+
    1244:	5f 01       	movw	r10, r30
    1246:	b6 01       	movw	r22, r12
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	7a d2       	rcall	.+1268   	; 0x1740 <fputc>
    124c:	21 10       	cpse	r2, r1
    124e:	2a 94       	dec	r2
    1250:	21 e0       	ldi	r18, 0x01	; 1
    1252:	82 1a       	sub	r8, r18
    1254:	91 08       	sbc	r9, r1
    1256:	81 14       	cp	r8, r1
    1258:	91 04       	cpc	r9, r1
    125a:	79 f7       	brne	.-34     	; 0x123a <vfprintf+0x1c4>
    125c:	e1 c0       	rjmp	.+450    	; 0x1420 <vfprintf+0x3aa>
    125e:	84 36       	cpi	r24, 0x64	; 100
    1260:	11 f0       	breq	.+4      	; 0x1266 <vfprintf+0x1f0>
    1262:	89 36       	cpi	r24, 0x69	; 105
    1264:	39 f5       	brne	.+78     	; 0x12b4 <vfprintf+0x23e>
    1266:	f8 01       	movw	r30, r16
    1268:	37 fe       	sbrs	r3, 7
    126a:	07 c0       	rjmp	.+14     	; 0x127a <vfprintf+0x204>
    126c:	60 81       	ld	r22, Z
    126e:	71 81       	ldd	r23, Z+1	; 0x01
    1270:	82 81       	ldd	r24, Z+2	; 0x02
    1272:	93 81       	ldd	r25, Z+3	; 0x03
    1274:	0c 5f       	subi	r16, 0xFC	; 252
    1276:	1f 4f       	sbci	r17, 0xFF	; 255
    1278:	08 c0       	rjmp	.+16     	; 0x128a <vfprintf+0x214>
    127a:	60 81       	ld	r22, Z
    127c:	71 81       	ldd	r23, Z+1	; 0x01
    127e:	07 2e       	mov	r0, r23
    1280:	00 0c       	add	r0, r0
    1282:	88 0b       	sbc	r24, r24
    1284:	99 0b       	sbc	r25, r25
    1286:	0e 5f       	subi	r16, 0xFE	; 254
    1288:	1f 4f       	sbci	r17, 0xFF	; 255
    128a:	f3 2d       	mov	r31, r3
    128c:	ff 76       	andi	r31, 0x6F	; 111
    128e:	3f 2e       	mov	r3, r31
    1290:	97 ff       	sbrs	r25, 7
    1292:	09 c0       	rjmp	.+18     	; 0x12a6 <vfprintf+0x230>
    1294:	90 95       	com	r25
    1296:	80 95       	com	r24
    1298:	70 95       	com	r23
    129a:	61 95       	neg	r22
    129c:	7f 4f       	sbci	r23, 0xFF	; 255
    129e:	8f 4f       	sbci	r24, 0xFF	; 255
    12a0:	9f 4f       	sbci	r25, 0xFF	; 255
    12a2:	f0 68       	ori	r31, 0x80	; 128
    12a4:	3f 2e       	mov	r3, r31
    12a6:	2a e0       	ldi	r18, 0x0A	; 10
    12a8:	30 e0       	ldi	r19, 0x00	; 0
    12aa:	a3 01       	movw	r20, r6
    12ac:	85 d2       	rcall	.+1290   	; 0x17b8 <__ultoa_invert>
    12ae:	88 2e       	mov	r8, r24
    12b0:	86 18       	sub	r8, r6
    12b2:	44 c0       	rjmp	.+136    	; 0x133c <vfprintf+0x2c6>
    12b4:	85 37       	cpi	r24, 0x75	; 117
    12b6:	31 f4       	brne	.+12     	; 0x12c4 <vfprintf+0x24e>
    12b8:	23 2d       	mov	r18, r3
    12ba:	2f 7e       	andi	r18, 0xEF	; 239
    12bc:	b2 2e       	mov	r11, r18
    12be:	2a e0       	ldi	r18, 0x0A	; 10
    12c0:	30 e0       	ldi	r19, 0x00	; 0
    12c2:	25 c0       	rjmp	.+74     	; 0x130e <vfprintf+0x298>
    12c4:	93 2d       	mov	r25, r3
    12c6:	99 7f       	andi	r25, 0xF9	; 249
    12c8:	b9 2e       	mov	r11, r25
    12ca:	8f 36       	cpi	r24, 0x6F	; 111
    12cc:	c1 f0       	breq	.+48     	; 0x12fe <vfprintf+0x288>
    12ce:	18 f4       	brcc	.+6      	; 0x12d6 <vfprintf+0x260>
    12d0:	88 35       	cpi	r24, 0x58	; 88
    12d2:	79 f0       	breq	.+30     	; 0x12f2 <vfprintf+0x27c>
    12d4:	ae c0       	rjmp	.+348    	; 0x1432 <vfprintf+0x3bc>
    12d6:	80 37       	cpi	r24, 0x70	; 112
    12d8:	19 f0       	breq	.+6      	; 0x12e0 <vfprintf+0x26a>
    12da:	88 37       	cpi	r24, 0x78	; 120
    12dc:	21 f0       	breq	.+8      	; 0x12e6 <vfprintf+0x270>
    12de:	a9 c0       	rjmp	.+338    	; 0x1432 <vfprintf+0x3bc>
    12e0:	e9 2f       	mov	r30, r25
    12e2:	e0 61       	ori	r30, 0x10	; 16
    12e4:	be 2e       	mov	r11, r30
    12e6:	b4 fe       	sbrs	r11, 4
    12e8:	0d c0       	rjmp	.+26     	; 0x1304 <vfprintf+0x28e>
    12ea:	fb 2d       	mov	r31, r11
    12ec:	f4 60       	ori	r31, 0x04	; 4
    12ee:	bf 2e       	mov	r11, r31
    12f0:	09 c0       	rjmp	.+18     	; 0x1304 <vfprintf+0x28e>
    12f2:	34 fe       	sbrs	r3, 4
    12f4:	0a c0       	rjmp	.+20     	; 0x130a <vfprintf+0x294>
    12f6:	29 2f       	mov	r18, r25
    12f8:	26 60       	ori	r18, 0x06	; 6
    12fa:	b2 2e       	mov	r11, r18
    12fc:	06 c0       	rjmp	.+12     	; 0x130a <vfprintf+0x294>
    12fe:	28 e0       	ldi	r18, 0x08	; 8
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	05 c0       	rjmp	.+10     	; 0x130e <vfprintf+0x298>
    1304:	20 e1       	ldi	r18, 0x10	; 16
    1306:	30 e0       	ldi	r19, 0x00	; 0
    1308:	02 c0       	rjmp	.+4      	; 0x130e <vfprintf+0x298>
    130a:	20 e1       	ldi	r18, 0x10	; 16
    130c:	32 e0       	ldi	r19, 0x02	; 2
    130e:	f8 01       	movw	r30, r16
    1310:	b7 fe       	sbrs	r11, 7
    1312:	07 c0       	rjmp	.+14     	; 0x1322 <vfprintf+0x2ac>
    1314:	60 81       	ld	r22, Z
    1316:	71 81       	ldd	r23, Z+1	; 0x01
    1318:	82 81       	ldd	r24, Z+2	; 0x02
    131a:	93 81       	ldd	r25, Z+3	; 0x03
    131c:	0c 5f       	subi	r16, 0xFC	; 252
    131e:	1f 4f       	sbci	r17, 0xFF	; 255
    1320:	06 c0       	rjmp	.+12     	; 0x132e <vfprintf+0x2b8>
    1322:	60 81       	ld	r22, Z
    1324:	71 81       	ldd	r23, Z+1	; 0x01
    1326:	80 e0       	ldi	r24, 0x00	; 0
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	0e 5f       	subi	r16, 0xFE	; 254
    132c:	1f 4f       	sbci	r17, 0xFF	; 255
    132e:	a3 01       	movw	r20, r6
    1330:	43 d2       	rcall	.+1158   	; 0x17b8 <__ultoa_invert>
    1332:	88 2e       	mov	r8, r24
    1334:	86 18       	sub	r8, r6
    1336:	fb 2d       	mov	r31, r11
    1338:	ff 77       	andi	r31, 0x7F	; 127
    133a:	3f 2e       	mov	r3, r31
    133c:	36 fe       	sbrs	r3, 6
    133e:	0d c0       	rjmp	.+26     	; 0x135a <vfprintf+0x2e4>
    1340:	23 2d       	mov	r18, r3
    1342:	2e 7f       	andi	r18, 0xFE	; 254
    1344:	a2 2e       	mov	r10, r18
    1346:	89 14       	cp	r8, r9
    1348:	58 f4       	brcc	.+22     	; 0x1360 <vfprintf+0x2ea>
    134a:	34 fe       	sbrs	r3, 4
    134c:	0b c0       	rjmp	.+22     	; 0x1364 <vfprintf+0x2ee>
    134e:	32 fc       	sbrc	r3, 2
    1350:	09 c0       	rjmp	.+18     	; 0x1364 <vfprintf+0x2ee>
    1352:	83 2d       	mov	r24, r3
    1354:	8e 7e       	andi	r24, 0xEE	; 238
    1356:	a8 2e       	mov	r10, r24
    1358:	05 c0       	rjmp	.+10     	; 0x1364 <vfprintf+0x2ee>
    135a:	b8 2c       	mov	r11, r8
    135c:	a3 2c       	mov	r10, r3
    135e:	03 c0       	rjmp	.+6      	; 0x1366 <vfprintf+0x2f0>
    1360:	b8 2c       	mov	r11, r8
    1362:	01 c0       	rjmp	.+2      	; 0x1366 <vfprintf+0x2f0>
    1364:	b9 2c       	mov	r11, r9
    1366:	a4 fe       	sbrs	r10, 4
    1368:	0f c0       	rjmp	.+30     	; 0x1388 <vfprintf+0x312>
    136a:	fe 01       	movw	r30, r28
    136c:	e8 0d       	add	r30, r8
    136e:	f1 1d       	adc	r31, r1
    1370:	80 81       	ld	r24, Z
    1372:	80 33       	cpi	r24, 0x30	; 48
    1374:	21 f4       	brne	.+8      	; 0x137e <vfprintf+0x308>
    1376:	9a 2d       	mov	r25, r10
    1378:	99 7e       	andi	r25, 0xE9	; 233
    137a:	a9 2e       	mov	r10, r25
    137c:	09 c0       	rjmp	.+18     	; 0x1390 <vfprintf+0x31a>
    137e:	a2 fe       	sbrs	r10, 2
    1380:	06 c0       	rjmp	.+12     	; 0x138e <vfprintf+0x318>
    1382:	b3 94       	inc	r11
    1384:	b3 94       	inc	r11
    1386:	04 c0       	rjmp	.+8      	; 0x1390 <vfprintf+0x31a>
    1388:	8a 2d       	mov	r24, r10
    138a:	86 78       	andi	r24, 0x86	; 134
    138c:	09 f0       	breq	.+2      	; 0x1390 <vfprintf+0x31a>
    138e:	b3 94       	inc	r11
    1390:	a3 fc       	sbrc	r10, 3
    1392:	10 c0       	rjmp	.+32     	; 0x13b4 <vfprintf+0x33e>
    1394:	a0 fe       	sbrs	r10, 0
    1396:	06 c0       	rjmp	.+12     	; 0x13a4 <vfprintf+0x32e>
    1398:	b2 14       	cp	r11, r2
    139a:	80 f4       	brcc	.+32     	; 0x13bc <vfprintf+0x346>
    139c:	28 0c       	add	r2, r8
    139e:	92 2c       	mov	r9, r2
    13a0:	9b 18       	sub	r9, r11
    13a2:	0d c0       	rjmp	.+26     	; 0x13be <vfprintf+0x348>
    13a4:	b2 14       	cp	r11, r2
    13a6:	58 f4       	brcc	.+22     	; 0x13be <vfprintf+0x348>
    13a8:	b6 01       	movw	r22, r12
    13aa:	80 e2       	ldi	r24, 0x20	; 32
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	c8 d1       	rcall	.+912    	; 0x1740 <fputc>
    13b0:	b3 94       	inc	r11
    13b2:	f8 cf       	rjmp	.-16     	; 0x13a4 <vfprintf+0x32e>
    13b4:	b2 14       	cp	r11, r2
    13b6:	18 f4       	brcc	.+6      	; 0x13be <vfprintf+0x348>
    13b8:	2b 18       	sub	r2, r11
    13ba:	02 c0       	rjmp	.+4      	; 0x13c0 <vfprintf+0x34a>
    13bc:	98 2c       	mov	r9, r8
    13be:	21 2c       	mov	r2, r1
    13c0:	a4 fe       	sbrs	r10, 4
    13c2:	0f c0       	rjmp	.+30     	; 0x13e2 <vfprintf+0x36c>
    13c4:	b6 01       	movw	r22, r12
    13c6:	80 e3       	ldi	r24, 0x30	; 48
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	ba d1       	rcall	.+884    	; 0x1740 <fputc>
    13cc:	a2 fe       	sbrs	r10, 2
    13ce:	16 c0       	rjmp	.+44     	; 0x13fc <vfprintf+0x386>
    13d0:	a1 fc       	sbrc	r10, 1
    13d2:	03 c0       	rjmp	.+6      	; 0x13da <vfprintf+0x364>
    13d4:	88 e7       	ldi	r24, 0x78	; 120
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	02 c0       	rjmp	.+4      	; 0x13de <vfprintf+0x368>
    13da:	88 e5       	ldi	r24, 0x58	; 88
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	b6 01       	movw	r22, r12
    13e0:	0c c0       	rjmp	.+24     	; 0x13fa <vfprintf+0x384>
    13e2:	8a 2d       	mov	r24, r10
    13e4:	86 78       	andi	r24, 0x86	; 134
    13e6:	51 f0       	breq	.+20     	; 0x13fc <vfprintf+0x386>
    13e8:	a1 fe       	sbrs	r10, 1
    13ea:	02 c0       	rjmp	.+4      	; 0x13f0 <vfprintf+0x37a>
    13ec:	8b e2       	ldi	r24, 0x2B	; 43
    13ee:	01 c0       	rjmp	.+2      	; 0x13f2 <vfprintf+0x37c>
    13f0:	80 e2       	ldi	r24, 0x20	; 32
    13f2:	a7 fc       	sbrc	r10, 7
    13f4:	8d e2       	ldi	r24, 0x2D	; 45
    13f6:	b6 01       	movw	r22, r12
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	a2 d1       	rcall	.+836    	; 0x1740 <fputc>
    13fc:	89 14       	cp	r8, r9
    13fe:	30 f4       	brcc	.+12     	; 0x140c <vfprintf+0x396>
    1400:	b6 01       	movw	r22, r12
    1402:	80 e3       	ldi	r24, 0x30	; 48
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	9c d1       	rcall	.+824    	; 0x1740 <fputc>
    1408:	9a 94       	dec	r9
    140a:	f8 cf       	rjmp	.-16     	; 0x13fc <vfprintf+0x386>
    140c:	8a 94       	dec	r8
    140e:	f3 01       	movw	r30, r6
    1410:	e8 0d       	add	r30, r8
    1412:	f1 1d       	adc	r31, r1
    1414:	80 81       	ld	r24, Z
    1416:	b6 01       	movw	r22, r12
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	92 d1       	rcall	.+804    	; 0x1740 <fputc>
    141c:	81 10       	cpse	r8, r1
    141e:	f6 cf       	rjmp	.-20     	; 0x140c <vfprintf+0x396>
    1420:	22 20       	and	r2, r2
    1422:	09 f4       	brne	.+2      	; 0x1426 <vfprintf+0x3b0>
    1424:	4e ce       	rjmp	.-868    	; 0x10c2 <vfprintf+0x4c>
    1426:	b6 01       	movw	r22, r12
    1428:	80 e2       	ldi	r24, 0x20	; 32
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	89 d1       	rcall	.+786    	; 0x1740 <fputc>
    142e:	2a 94       	dec	r2
    1430:	f7 cf       	rjmp	.-18     	; 0x1420 <vfprintf+0x3aa>
    1432:	f6 01       	movw	r30, r12
    1434:	86 81       	ldd	r24, Z+6	; 0x06
    1436:	97 81       	ldd	r25, Z+7	; 0x07
    1438:	02 c0       	rjmp	.+4      	; 0x143e <vfprintf+0x3c8>
    143a:	8f ef       	ldi	r24, 0xFF	; 255
    143c:	9f ef       	ldi	r25, 0xFF	; 255
    143e:	2b 96       	adiw	r28, 0x0b	; 11
    1440:	0f b6       	in	r0, 0x3f	; 63
    1442:	f8 94       	cli
    1444:	de bf       	out	0x3e, r29	; 62
    1446:	0f be       	out	0x3f, r0	; 63
    1448:	cd bf       	out	0x3d, r28	; 61
    144a:	df 91       	pop	r29
    144c:	cf 91       	pop	r28
    144e:	1f 91       	pop	r17
    1450:	0f 91       	pop	r16
    1452:	ff 90       	pop	r15
    1454:	ef 90       	pop	r14
    1456:	df 90       	pop	r13
    1458:	cf 90       	pop	r12
    145a:	bf 90       	pop	r11
    145c:	af 90       	pop	r10
    145e:	9f 90       	pop	r9
    1460:	8f 90       	pop	r8
    1462:	7f 90       	pop	r7
    1464:	6f 90       	pop	r6
    1466:	5f 90       	pop	r5
    1468:	4f 90       	pop	r4
    146a:	3f 90       	pop	r3
    146c:	2f 90       	pop	r2
    146e:	08 95       	ret

00001470 <calloc>:
    1470:	0f 93       	push	r16
    1472:	1f 93       	push	r17
    1474:	cf 93       	push	r28
    1476:	df 93       	push	r29
    1478:	86 9f       	mul	r24, r22
    147a:	80 01       	movw	r16, r0
    147c:	87 9f       	mul	r24, r23
    147e:	10 0d       	add	r17, r0
    1480:	96 9f       	mul	r25, r22
    1482:	10 0d       	add	r17, r0
    1484:	11 24       	eor	r1, r1
    1486:	c8 01       	movw	r24, r16
    1488:	0d d0       	rcall	.+26     	; 0x14a4 <malloc>
    148a:	ec 01       	movw	r28, r24
    148c:	00 97       	sbiw	r24, 0x00	; 0
    148e:	21 f0       	breq	.+8      	; 0x1498 <calloc+0x28>
    1490:	a8 01       	movw	r20, r16
    1492:	60 e0       	ldi	r22, 0x00	; 0
    1494:	70 e0       	ldi	r23, 0x00	; 0
    1496:	32 d1       	rcall	.+612    	; 0x16fc <memset>
    1498:	ce 01       	movw	r24, r28
    149a:	df 91       	pop	r29
    149c:	cf 91       	pop	r28
    149e:	1f 91       	pop	r17
    14a0:	0f 91       	pop	r16
    14a2:	08 95       	ret

000014a4 <malloc>:
    14a4:	0f 93       	push	r16
    14a6:	1f 93       	push	r17
    14a8:	cf 93       	push	r28
    14aa:	df 93       	push	r29
    14ac:	82 30       	cpi	r24, 0x02	; 2
    14ae:	91 05       	cpc	r25, r1
    14b0:	10 f4       	brcc	.+4      	; 0x14b6 <malloc+0x12>
    14b2:	82 e0       	ldi	r24, 0x02	; 2
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <__flp>
    14ba:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <__flp+0x1>
    14be:	20 e0       	ldi	r18, 0x00	; 0
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	a0 e0       	ldi	r26, 0x00	; 0
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	30 97       	sbiw	r30, 0x00	; 0
    14c8:	19 f1       	breq	.+70     	; 0x1510 <malloc+0x6c>
    14ca:	40 81       	ld	r20, Z
    14cc:	51 81       	ldd	r21, Z+1	; 0x01
    14ce:	02 81       	ldd	r16, Z+2	; 0x02
    14d0:	13 81       	ldd	r17, Z+3	; 0x03
    14d2:	48 17       	cp	r20, r24
    14d4:	59 07       	cpc	r21, r25
    14d6:	c8 f0       	brcs	.+50     	; 0x150a <malloc+0x66>
    14d8:	84 17       	cp	r24, r20
    14da:	95 07       	cpc	r25, r21
    14dc:	69 f4       	brne	.+26     	; 0x14f8 <malloc+0x54>
    14de:	10 97       	sbiw	r26, 0x00	; 0
    14e0:	31 f0       	breq	.+12     	; 0x14ee <malloc+0x4a>
    14e2:	12 96       	adiw	r26, 0x02	; 2
    14e4:	0c 93       	st	X, r16
    14e6:	12 97       	sbiw	r26, 0x02	; 2
    14e8:	13 96       	adiw	r26, 0x03	; 3
    14ea:	1c 93       	st	X, r17
    14ec:	27 c0       	rjmp	.+78     	; 0x153c <malloc+0x98>
    14ee:	00 93 5c 02 	sts	0x025C, r16	; 0x80025c <__flp>
    14f2:	10 93 5d 02 	sts	0x025D, r17	; 0x80025d <__flp+0x1>
    14f6:	22 c0       	rjmp	.+68     	; 0x153c <malloc+0x98>
    14f8:	21 15       	cp	r18, r1
    14fa:	31 05       	cpc	r19, r1
    14fc:	19 f0       	breq	.+6      	; 0x1504 <malloc+0x60>
    14fe:	42 17       	cp	r20, r18
    1500:	53 07       	cpc	r21, r19
    1502:	18 f4       	brcc	.+6      	; 0x150a <malloc+0x66>
    1504:	9a 01       	movw	r18, r20
    1506:	bd 01       	movw	r22, r26
    1508:	ef 01       	movw	r28, r30
    150a:	df 01       	movw	r26, r30
    150c:	f8 01       	movw	r30, r16
    150e:	db cf       	rjmp	.-74     	; 0x14c6 <malloc+0x22>
    1510:	21 15       	cp	r18, r1
    1512:	31 05       	cpc	r19, r1
    1514:	f9 f0       	breq	.+62     	; 0x1554 <malloc+0xb0>
    1516:	28 1b       	sub	r18, r24
    1518:	39 0b       	sbc	r19, r25
    151a:	24 30       	cpi	r18, 0x04	; 4
    151c:	31 05       	cpc	r19, r1
    151e:	80 f4       	brcc	.+32     	; 0x1540 <malloc+0x9c>
    1520:	8a 81       	ldd	r24, Y+2	; 0x02
    1522:	9b 81       	ldd	r25, Y+3	; 0x03
    1524:	61 15       	cp	r22, r1
    1526:	71 05       	cpc	r23, r1
    1528:	21 f0       	breq	.+8      	; 0x1532 <malloc+0x8e>
    152a:	fb 01       	movw	r30, r22
    152c:	93 83       	std	Z+3, r25	; 0x03
    152e:	82 83       	std	Z+2, r24	; 0x02
    1530:	04 c0       	rjmp	.+8      	; 0x153a <malloc+0x96>
    1532:	90 93 5d 02 	sts	0x025D, r25	; 0x80025d <__flp+0x1>
    1536:	80 93 5c 02 	sts	0x025C, r24	; 0x80025c <__flp>
    153a:	fe 01       	movw	r30, r28
    153c:	32 96       	adiw	r30, 0x02	; 2
    153e:	44 c0       	rjmp	.+136    	; 0x15c8 <malloc+0x124>
    1540:	fe 01       	movw	r30, r28
    1542:	e2 0f       	add	r30, r18
    1544:	f3 1f       	adc	r31, r19
    1546:	81 93       	st	Z+, r24
    1548:	91 93       	st	Z+, r25
    154a:	22 50       	subi	r18, 0x02	; 2
    154c:	31 09       	sbc	r19, r1
    154e:	39 83       	std	Y+1, r19	; 0x01
    1550:	28 83       	st	Y, r18
    1552:	3a c0       	rjmp	.+116    	; 0x15c8 <malloc+0x124>
    1554:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <__brkval>
    1558:	30 91 5b 02 	lds	r19, 0x025B	; 0x80025b <__brkval+0x1>
    155c:	23 2b       	or	r18, r19
    155e:	41 f4       	brne	.+16     	; 0x1570 <malloc+0xcc>
    1560:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1564:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    1568:	30 93 5b 02 	sts	0x025B, r19	; 0x80025b <__brkval+0x1>
    156c:	20 93 5a 02 	sts	0x025A, r18	; 0x80025a <__brkval>
    1570:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1574:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    1578:	21 15       	cp	r18, r1
    157a:	31 05       	cpc	r19, r1
    157c:	41 f4       	brne	.+16     	; 0x158e <malloc+0xea>
    157e:	2d b7       	in	r18, 0x3d	; 61
    1580:	3e b7       	in	r19, 0x3e	; 62
    1582:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1586:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    158a:	24 1b       	sub	r18, r20
    158c:	35 0b       	sbc	r19, r21
    158e:	e0 91 5a 02 	lds	r30, 0x025A	; 0x80025a <__brkval>
    1592:	f0 91 5b 02 	lds	r31, 0x025B	; 0x80025b <__brkval+0x1>
    1596:	e2 17       	cp	r30, r18
    1598:	f3 07       	cpc	r31, r19
    159a:	a0 f4       	brcc	.+40     	; 0x15c4 <malloc+0x120>
    159c:	2e 1b       	sub	r18, r30
    159e:	3f 0b       	sbc	r19, r31
    15a0:	28 17       	cp	r18, r24
    15a2:	39 07       	cpc	r19, r25
    15a4:	78 f0       	brcs	.+30     	; 0x15c4 <malloc+0x120>
    15a6:	ac 01       	movw	r20, r24
    15a8:	4e 5f       	subi	r20, 0xFE	; 254
    15aa:	5f 4f       	sbci	r21, 0xFF	; 255
    15ac:	24 17       	cp	r18, r20
    15ae:	35 07       	cpc	r19, r21
    15b0:	48 f0       	brcs	.+18     	; 0x15c4 <malloc+0x120>
    15b2:	4e 0f       	add	r20, r30
    15b4:	5f 1f       	adc	r21, r31
    15b6:	50 93 5b 02 	sts	0x025B, r21	; 0x80025b <__brkval+0x1>
    15ba:	40 93 5a 02 	sts	0x025A, r20	; 0x80025a <__brkval>
    15be:	81 93       	st	Z+, r24
    15c0:	91 93       	st	Z+, r25
    15c2:	02 c0       	rjmp	.+4      	; 0x15c8 <malloc+0x124>
    15c4:	e0 e0       	ldi	r30, 0x00	; 0
    15c6:	f0 e0       	ldi	r31, 0x00	; 0
    15c8:	cf 01       	movw	r24, r30
    15ca:	df 91       	pop	r29
    15cc:	cf 91       	pop	r28
    15ce:	1f 91       	pop	r17
    15d0:	0f 91       	pop	r16
    15d2:	08 95       	ret

000015d4 <free>:
    15d4:	cf 93       	push	r28
    15d6:	df 93       	push	r29
    15d8:	00 97       	sbiw	r24, 0x00	; 0
    15da:	09 f4       	brne	.+2      	; 0x15de <free+0xa>
    15dc:	81 c0       	rjmp	.+258    	; 0x16e0 <free+0x10c>
    15de:	fc 01       	movw	r30, r24
    15e0:	32 97       	sbiw	r30, 0x02	; 2
    15e2:	13 82       	std	Z+3, r1	; 0x03
    15e4:	12 82       	std	Z+2, r1	; 0x02
    15e6:	a0 91 5c 02 	lds	r26, 0x025C	; 0x80025c <__flp>
    15ea:	b0 91 5d 02 	lds	r27, 0x025D	; 0x80025d <__flp+0x1>
    15ee:	10 97       	sbiw	r26, 0x00	; 0
    15f0:	81 f4       	brne	.+32     	; 0x1612 <free+0x3e>
    15f2:	20 81       	ld	r18, Z
    15f4:	31 81       	ldd	r19, Z+1	; 0x01
    15f6:	82 0f       	add	r24, r18
    15f8:	93 1f       	adc	r25, r19
    15fa:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <__brkval>
    15fe:	30 91 5b 02 	lds	r19, 0x025B	; 0x80025b <__brkval+0x1>
    1602:	28 17       	cp	r18, r24
    1604:	39 07       	cpc	r19, r25
    1606:	51 f5       	brne	.+84     	; 0x165c <free+0x88>
    1608:	f0 93 5b 02 	sts	0x025B, r31	; 0x80025b <__brkval+0x1>
    160c:	e0 93 5a 02 	sts	0x025A, r30	; 0x80025a <__brkval>
    1610:	67 c0       	rjmp	.+206    	; 0x16e0 <free+0x10c>
    1612:	ed 01       	movw	r28, r26
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	ce 17       	cp	r28, r30
    161a:	df 07       	cpc	r29, r31
    161c:	40 f4       	brcc	.+16     	; 0x162e <free+0x5a>
    161e:	4a 81       	ldd	r20, Y+2	; 0x02
    1620:	5b 81       	ldd	r21, Y+3	; 0x03
    1622:	9e 01       	movw	r18, r28
    1624:	41 15       	cp	r20, r1
    1626:	51 05       	cpc	r21, r1
    1628:	f1 f0       	breq	.+60     	; 0x1666 <free+0x92>
    162a:	ea 01       	movw	r28, r20
    162c:	f5 cf       	rjmp	.-22     	; 0x1618 <free+0x44>
    162e:	d3 83       	std	Z+3, r29	; 0x03
    1630:	c2 83       	std	Z+2, r28	; 0x02
    1632:	40 81       	ld	r20, Z
    1634:	51 81       	ldd	r21, Z+1	; 0x01
    1636:	84 0f       	add	r24, r20
    1638:	95 1f       	adc	r25, r21
    163a:	c8 17       	cp	r28, r24
    163c:	d9 07       	cpc	r29, r25
    163e:	59 f4       	brne	.+22     	; 0x1656 <free+0x82>
    1640:	88 81       	ld	r24, Y
    1642:	99 81       	ldd	r25, Y+1	; 0x01
    1644:	84 0f       	add	r24, r20
    1646:	95 1f       	adc	r25, r21
    1648:	02 96       	adiw	r24, 0x02	; 2
    164a:	91 83       	std	Z+1, r25	; 0x01
    164c:	80 83       	st	Z, r24
    164e:	8a 81       	ldd	r24, Y+2	; 0x02
    1650:	9b 81       	ldd	r25, Y+3	; 0x03
    1652:	93 83       	std	Z+3, r25	; 0x03
    1654:	82 83       	std	Z+2, r24	; 0x02
    1656:	21 15       	cp	r18, r1
    1658:	31 05       	cpc	r19, r1
    165a:	29 f4       	brne	.+10     	; 0x1666 <free+0x92>
    165c:	f0 93 5d 02 	sts	0x025D, r31	; 0x80025d <__flp+0x1>
    1660:	e0 93 5c 02 	sts	0x025C, r30	; 0x80025c <__flp>
    1664:	3d c0       	rjmp	.+122    	; 0x16e0 <free+0x10c>
    1666:	e9 01       	movw	r28, r18
    1668:	fb 83       	std	Y+3, r31	; 0x03
    166a:	ea 83       	std	Y+2, r30	; 0x02
    166c:	49 91       	ld	r20, Y+
    166e:	59 91       	ld	r21, Y+
    1670:	c4 0f       	add	r28, r20
    1672:	d5 1f       	adc	r29, r21
    1674:	ec 17       	cp	r30, r28
    1676:	fd 07       	cpc	r31, r29
    1678:	61 f4       	brne	.+24     	; 0x1692 <free+0xbe>
    167a:	80 81       	ld	r24, Z
    167c:	91 81       	ldd	r25, Z+1	; 0x01
    167e:	84 0f       	add	r24, r20
    1680:	95 1f       	adc	r25, r21
    1682:	02 96       	adiw	r24, 0x02	; 2
    1684:	e9 01       	movw	r28, r18
    1686:	99 83       	std	Y+1, r25	; 0x01
    1688:	88 83       	st	Y, r24
    168a:	82 81       	ldd	r24, Z+2	; 0x02
    168c:	93 81       	ldd	r25, Z+3	; 0x03
    168e:	9b 83       	std	Y+3, r25	; 0x03
    1690:	8a 83       	std	Y+2, r24	; 0x02
    1692:	e0 e0       	ldi	r30, 0x00	; 0
    1694:	f0 e0       	ldi	r31, 0x00	; 0
    1696:	12 96       	adiw	r26, 0x02	; 2
    1698:	8d 91       	ld	r24, X+
    169a:	9c 91       	ld	r25, X
    169c:	13 97       	sbiw	r26, 0x03	; 3
    169e:	00 97       	sbiw	r24, 0x00	; 0
    16a0:	19 f0       	breq	.+6      	; 0x16a8 <free+0xd4>
    16a2:	fd 01       	movw	r30, r26
    16a4:	dc 01       	movw	r26, r24
    16a6:	f7 cf       	rjmp	.-18     	; 0x1696 <free+0xc2>
    16a8:	8d 91       	ld	r24, X+
    16aa:	9c 91       	ld	r25, X
    16ac:	11 97       	sbiw	r26, 0x01	; 1
    16ae:	9d 01       	movw	r18, r26
    16b0:	2e 5f       	subi	r18, 0xFE	; 254
    16b2:	3f 4f       	sbci	r19, 0xFF	; 255
    16b4:	82 0f       	add	r24, r18
    16b6:	93 1f       	adc	r25, r19
    16b8:	20 91 5a 02 	lds	r18, 0x025A	; 0x80025a <__brkval>
    16bc:	30 91 5b 02 	lds	r19, 0x025B	; 0x80025b <__brkval+0x1>
    16c0:	28 17       	cp	r18, r24
    16c2:	39 07       	cpc	r19, r25
    16c4:	69 f4       	brne	.+26     	; 0x16e0 <free+0x10c>
    16c6:	30 97       	sbiw	r30, 0x00	; 0
    16c8:	29 f4       	brne	.+10     	; 0x16d4 <free+0x100>
    16ca:	10 92 5d 02 	sts	0x025D, r1	; 0x80025d <__flp+0x1>
    16ce:	10 92 5c 02 	sts	0x025C, r1	; 0x80025c <__flp>
    16d2:	02 c0       	rjmp	.+4      	; 0x16d8 <free+0x104>
    16d4:	13 82       	std	Z+3, r1	; 0x03
    16d6:	12 82       	std	Z+2, r1	; 0x02
    16d8:	b0 93 5b 02 	sts	0x025B, r27	; 0x80025b <__brkval+0x1>
    16dc:	a0 93 5a 02 	sts	0x025A, r26	; 0x80025a <__brkval>
    16e0:	df 91       	pop	r29
    16e2:	cf 91       	pop	r28
    16e4:	08 95       	ret

000016e6 <strnlen_P>:
    16e6:	fc 01       	movw	r30, r24
    16e8:	05 90       	lpm	r0, Z+
    16ea:	61 50       	subi	r22, 0x01	; 1
    16ec:	70 40       	sbci	r23, 0x00	; 0
    16ee:	01 10       	cpse	r0, r1
    16f0:	d8 f7       	brcc	.-10     	; 0x16e8 <strnlen_P+0x2>
    16f2:	80 95       	com	r24
    16f4:	90 95       	com	r25
    16f6:	8e 0f       	add	r24, r30
    16f8:	9f 1f       	adc	r25, r31
    16fa:	08 95       	ret

000016fc <memset>:
    16fc:	dc 01       	movw	r26, r24
    16fe:	01 c0       	rjmp	.+2      	; 0x1702 <memset+0x6>
    1700:	6d 93       	st	X+, r22
    1702:	41 50       	subi	r20, 0x01	; 1
    1704:	50 40       	sbci	r21, 0x00	; 0
    1706:	e0 f7       	brcc	.-8      	; 0x1700 <memset+0x4>
    1708:	08 95       	ret

0000170a <strnlen>:
    170a:	fc 01       	movw	r30, r24
    170c:	61 50       	subi	r22, 0x01	; 1
    170e:	70 40       	sbci	r23, 0x00	; 0
    1710:	01 90       	ld	r0, Z+
    1712:	01 10       	cpse	r0, r1
    1714:	d8 f7       	brcc	.-10     	; 0x170c <strnlen+0x2>
    1716:	80 95       	com	r24
    1718:	90 95       	com	r25
    171a:	8e 0f       	add	r24, r30
    171c:	9f 1f       	adc	r25, r31
    171e:	08 95       	ret

00001720 <strrev>:
    1720:	dc 01       	movw	r26, r24
    1722:	fc 01       	movw	r30, r24
    1724:	67 2f       	mov	r22, r23
    1726:	71 91       	ld	r23, Z+
    1728:	77 23       	and	r23, r23
    172a:	e1 f7       	brne	.-8      	; 0x1724 <strrev+0x4>
    172c:	32 97       	sbiw	r30, 0x02	; 2
    172e:	04 c0       	rjmp	.+8      	; 0x1738 <strrev+0x18>
    1730:	7c 91       	ld	r23, X
    1732:	6d 93       	st	X+, r22
    1734:	70 83       	st	Z, r23
    1736:	62 91       	ld	r22, -Z
    1738:	ae 17       	cp	r26, r30
    173a:	bf 07       	cpc	r27, r31
    173c:	c8 f3       	brcs	.-14     	; 0x1730 <strrev+0x10>
    173e:	08 95       	ret

00001740 <fputc>:
    1740:	0f 93       	push	r16
    1742:	1f 93       	push	r17
    1744:	cf 93       	push	r28
    1746:	df 93       	push	r29
    1748:	fb 01       	movw	r30, r22
    174a:	23 81       	ldd	r18, Z+3	; 0x03
    174c:	21 fd       	sbrc	r18, 1
    174e:	03 c0       	rjmp	.+6      	; 0x1756 <fputc+0x16>
    1750:	8f ef       	ldi	r24, 0xFF	; 255
    1752:	9f ef       	ldi	r25, 0xFF	; 255
    1754:	2c c0       	rjmp	.+88     	; 0x17ae <fputc+0x6e>
    1756:	22 ff       	sbrs	r18, 2
    1758:	16 c0       	rjmp	.+44     	; 0x1786 <fputc+0x46>
    175a:	46 81       	ldd	r20, Z+6	; 0x06
    175c:	57 81       	ldd	r21, Z+7	; 0x07
    175e:	24 81       	ldd	r18, Z+4	; 0x04
    1760:	35 81       	ldd	r19, Z+5	; 0x05
    1762:	42 17       	cp	r20, r18
    1764:	53 07       	cpc	r21, r19
    1766:	44 f4       	brge	.+16     	; 0x1778 <fputc+0x38>
    1768:	a0 81       	ld	r26, Z
    176a:	b1 81       	ldd	r27, Z+1	; 0x01
    176c:	9d 01       	movw	r18, r26
    176e:	2f 5f       	subi	r18, 0xFF	; 255
    1770:	3f 4f       	sbci	r19, 0xFF	; 255
    1772:	31 83       	std	Z+1, r19	; 0x01
    1774:	20 83       	st	Z, r18
    1776:	8c 93       	st	X, r24
    1778:	26 81       	ldd	r18, Z+6	; 0x06
    177a:	37 81       	ldd	r19, Z+7	; 0x07
    177c:	2f 5f       	subi	r18, 0xFF	; 255
    177e:	3f 4f       	sbci	r19, 0xFF	; 255
    1780:	37 83       	std	Z+7, r19	; 0x07
    1782:	26 83       	std	Z+6, r18	; 0x06
    1784:	14 c0       	rjmp	.+40     	; 0x17ae <fputc+0x6e>
    1786:	8b 01       	movw	r16, r22
    1788:	ec 01       	movw	r28, r24
    178a:	fb 01       	movw	r30, r22
    178c:	00 84       	ldd	r0, Z+8	; 0x08
    178e:	f1 85       	ldd	r31, Z+9	; 0x09
    1790:	e0 2d       	mov	r30, r0
    1792:	19 95       	eicall
    1794:	89 2b       	or	r24, r25
    1796:	e1 f6       	brne	.-72     	; 0x1750 <fputc+0x10>
    1798:	d8 01       	movw	r26, r16
    179a:	16 96       	adiw	r26, 0x06	; 6
    179c:	8d 91       	ld	r24, X+
    179e:	9c 91       	ld	r25, X
    17a0:	17 97       	sbiw	r26, 0x07	; 7
    17a2:	01 96       	adiw	r24, 0x01	; 1
    17a4:	17 96       	adiw	r26, 0x07	; 7
    17a6:	9c 93       	st	X, r25
    17a8:	8e 93       	st	-X, r24
    17aa:	16 97       	sbiw	r26, 0x06	; 6
    17ac:	ce 01       	movw	r24, r28
    17ae:	df 91       	pop	r29
    17b0:	cf 91       	pop	r28
    17b2:	1f 91       	pop	r17
    17b4:	0f 91       	pop	r16
    17b6:	08 95       	ret

000017b8 <__ultoa_invert>:
    17b8:	fa 01       	movw	r30, r20
    17ba:	aa 27       	eor	r26, r26
    17bc:	28 30       	cpi	r18, 0x08	; 8
    17be:	51 f1       	breq	.+84     	; 0x1814 <__ultoa_invert+0x5c>
    17c0:	20 31       	cpi	r18, 0x10	; 16
    17c2:	81 f1       	breq	.+96     	; 0x1824 <__ultoa_invert+0x6c>
    17c4:	e8 94       	clt
    17c6:	6f 93       	push	r22
    17c8:	6e 7f       	andi	r22, 0xFE	; 254
    17ca:	6e 5f       	subi	r22, 0xFE	; 254
    17cc:	7f 4f       	sbci	r23, 0xFF	; 255
    17ce:	8f 4f       	sbci	r24, 0xFF	; 255
    17d0:	9f 4f       	sbci	r25, 0xFF	; 255
    17d2:	af 4f       	sbci	r26, 0xFF	; 255
    17d4:	b1 e0       	ldi	r27, 0x01	; 1
    17d6:	3e d0       	rcall	.+124    	; 0x1854 <__ultoa_invert+0x9c>
    17d8:	b4 e0       	ldi	r27, 0x04	; 4
    17da:	3c d0       	rcall	.+120    	; 0x1854 <__ultoa_invert+0x9c>
    17dc:	67 0f       	add	r22, r23
    17de:	78 1f       	adc	r23, r24
    17e0:	89 1f       	adc	r24, r25
    17e2:	9a 1f       	adc	r25, r26
    17e4:	a1 1d       	adc	r26, r1
    17e6:	68 0f       	add	r22, r24
    17e8:	79 1f       	adc	r23, r25
    17ea:	8a 1f       	adc	r24, r26
    17ec:	91 1d       	adc	r25, r1
    17ee:	a1 1d       	adc	r26, r1
    17f0:	6a 0f       	add	r22, r26
    17f2:	71 1d       	adc	r23, r1
    17f4:	81 1d       	adc	r24, r1
    17f6:	91 1d       	adc	r25, r1
    17f8:	a1 1d       	adc	r26, r1
    17fa:	20 d0       	rcall	.+64     	; 0x183c <__ultoa_invert+0x84>
    17fc:	09 f4       	brne	.+2      	; 0x1800 <__ultoa_invert+0x48>
    17fe:	68 94       	set
    1800:	3f 91       	pop	r19
    1802:	2a e0       	ldi	r18, 0x0A	; 10
    1804:	26 9f       	mul	r18, r22
    1806:	11 24       	eor	r1, r1
    1808:	30 19       	sub	r19, r0
    180a:	30 5d       	subi	r19, 0xD0	; 208
    180c:	31 93       	st	Z+, r19
    180e:	de f6       	brtc	.-74     	; 0x17c6 <__ultoa_invert+0xe>
    1810:	cf 01       	movw	r24, r30
    1812:	08 95       	ret
    1814:	46 2f       	mov	r20, r22
    1816:	47 70       	andi	r20, 0x07	; 7
    1818:	40 5d       	subi	r20, 0xD0	; 208
    181a:	41 93       	st	Z+, r20
    181c:	b3 e0       	ldi	r27, 0x03	; 3
    181e:	0f d0       	rcall	.+30     	; 0x183e <__ultoa_invert+0x86>
    1820:	c9 f7       	brne	.-14     	; 0x1814 <__ultoa_invert+0x5c>
    1822:	f6 cf       	rjmp	.-20     	; 0x1810 <__ultoa_invert+0x58>
    1824:	46 2f       	mov	r20, r22
    1826:	4f 70       	andi	r20, 0x0F	; 15
    1828:	40 5d       	subi	r20, 0xD0	; 208
    182a:	4a 33       	cpi	r20, 0x3A	; 58
    182c:	18 f0       	brcs	.+6      	; 0x1834 <__ultoa_invert+0x7c>
    182e:	49 5d       	subi	r20, 0xD9	; 217
    1830:	31 fd       	sbrc	r19, 1
    1832:	40 52       	subi	r20, 0x20	; 32
    1834:	41 93       	st	Z+, r20
    1836:	02 d0       	rcall	.+4      	; 0x183c <__ultoa_invert+0x84>
    1838:	a9 f7       	brne	.-22     	; 0x1824 <__ultoa_invert+0x6c>
    183a:	ea cf       	rjmp	.-44     	; 0x1810 <__ultoa_invert+0x58>
    183c:	b4 e0       	ldi	r27, 0x04	; 4
    183e:	a6 95       	lsr	r26
    1840:	97 95       	ror	r25
    1842:	87 95       	ror	r24
    1844:	77 95       	ror	r23
    1846:	67 95       	ror	r22
    1848:	ba 95       	dec	r27
    184a:	c9 f7       	brne	.-14     	; 0x183e <__ultoa_invert+0x86>
    184c:	00 97       	sbiw	r24, 0x00	; 0
    184e:	61 05       	cpc	r22, r1
    1850:	71 05       	cpc	r23, r1
    1852:	08 95       	ret
    1854:	9b 01       	movw	r18, r22
    1856:	ac 01       	movw	r20, r24
    1858:	0a 2e       	mov	r0, r26
    185a:	06 94       	lsr	r0
    185c:	57 95       	ror	r21
    185e:	47 95       	ror	r20
    1860:	37 95       	ror	r19
    1862:	27 95       	ror	r18
    1864:	ba 95       	dec	r27
    1866:	c9 f7       	brne	.-14     	; 0x185a <__ultoa_invert+0xa2>
    1868:	62 0f       	add	r22, r18
    186a:	73 1f       	adc	r23, r19
    186c:	84 1f       	adc	r24, r20
    186e:	95 1f       	adc	r25, r21
    1870:	a0 1d       	adc	r26, r0
    1872:	08 95       	ret

00001874 <_exit>:
    1874:	f8 94       	cli

00001876 <__stop_program>:
    1876:	ff cf       	rjmp	.-2      	; 0x1876 <__stop_program>
