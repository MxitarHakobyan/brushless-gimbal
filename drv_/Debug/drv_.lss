
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017c  00800200  00002454  000024e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002454  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006b  0080037c  0080037c  00002664  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002664  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  00002700  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002de0  00000000  00000000  00002948  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001708  00000000  00000000  00005728  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001531  00000000  00000000  00006e30  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006f0  00000000  00000000  00008364  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bc7  00000000  00000000  00008a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001dcd  00000000  00000000  0000961b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  0000b3e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	10 c1       	rjmp	.+544    	; 0x222 <__ctors_end>
       2:	00 00       	nop
       4:	2e c1       	rjmp	.+604    	; 0x262 <__bad_interrupt>
       6:	00 00       	nop
       8:	2c c1       	rjmp	.+600    	; 0x262 <__bad_interrupt>
       a:	00 00       	nop
       c:	2a c1       	rjmp	.+596    	; 0x262 <__bad_interrupt>
       e:	00 00       	nop
      10:	28 c1       	rjmp	.+592    	; 0x262 <__bad_interrupt>
      12:	00 00       	nop
      14:	26 c1       	rjmp	.+588    	; 0x262 <__bad_interrupt>
      16:	00 00       	nop
      18:	24 c1       	rjmp	.+584    	; 0x262 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	22 c1       	rjmp	.+580    	; 0x262 <__bad_interrupt>
      1e:	00 00       	nop
      20:	20 c1       	rjmp	.+576    	; 0x262 <__bad_interrupt>
      22:	00 00       	nop
      24:	1e c1       	rjmp	.+572    	; 0x262 <__bad_interrupt>
      26:	00 00       	nop
      28:	1c c1       	rjmp	.+568    	; 0x262 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	1a c1       	rjmp	.+564    	; 0x262 <__bad_interrupt>
      2e:	00 00       	nop
      30:	18 c1       	rjmp	.+560    	; 0x262 <__bad_interrupt>
      32:	00 00       	nop
      34:	16 c1       	rjmp	.+556    	; 0x262 <__bad_interrupt>
      36:	00 00       	nop
      38:	14 c1       	rjmp	.+552    	; 0x262 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	12 c1       	rjmp	.+548    	; 0x262 <__bad_interrupt>
      3e:	00 00       	nop
      40:	10 c1       	rjmp	.+544    	; 0x262 <__bad_interrupt>
      42:	00 00       	nop
      44:	0e c1       	rjmp	.+540    	; 0x262 <__bad_interrupt>
      46:	00 00       	nop
      48:	0c c1       	rjmp	.+536    	; 0x262 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	0a c1       	rjmp	.+532    	; 0x262 <__bad_interrupt>
      4e:	00 00       	nop
      50:	08 c1       	rjmp	.+528    	; 0x262 <__bad_interrupt>
      52:	00 00       	nop
      54:	06 c1       	rjmp	.+524    	; 0x262 <__bad_interrupt>
      56:	00 00       	nop
      58:	04 c1       	rjmp	.+520    	; 0x262 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7c c6       	rjmp	.+3320   	; 0xd56 <__vector_23>
      5e:	00 00       	nop
      60:	00 c1       	rjmp	.+512    	; 0x262 <__bad_interrupt>
      62:	00 00       	nop
      64:	fe c0       	rjmp	.+508    	; 0x262 <__bad_interrupt>
      66:	00 00       	nop
      68:	fc c0       	rjmp	.+504    	; 0x262 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	fa c0       	rjmp	.+500    	; 0x262 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f8 c0       	rjmp	.+496    	; 0x262 <__bad_interrupt>
      72:	00 00       	nop
      74:	f6 c0       	rjmp	.+492    	; 0x262 <__bad_interrupt>
      76:	00 00       	nop
      78:	f4 c0       	rjmp	.+488    	; 0x262 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	f2 c0       	rjmp	.+484    	; 0x262 <__bad_interrupt>
      7e:	00 00       	nop
      80:	f0 c0       	rjmp	.+480    	; 0x262 <__bad_interrupt>
      82:	00 00       	nop
      84:	ee c0       	rjmp	.+476    	; 0x262 <__bad_interrupt>
      86:	00 00       	nop
      88:	ec c0       	rjmp	.+472    	; 0x262 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ea c0       	rjmp	.+468    	; 0x262 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e8 c0       	rjmp	.+464    	; 0x262 <__bad_interrupt>
      92:	00 00       	nop
      94:	e6 c0       	rjmp	.+460    	; 0x262 <__bad_interrupt>
      96:	00 00       	nop
      98:	e4 c0       	rjmp	.+456    	; 0x262 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	e2 c0       	rjmp	.+452    	; 0x262 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	e0 c0       	rjmp	.+448    	; 0x262 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	de c0       	rjmp	.+444    	; 0x262 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	dc c0       	rjmp	.+440    	; 0x262 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	da c0       	rjmp	.+436    	; 0x262 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d8 c0       	rjmp	.+432    	; 0x262 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	d6 c0       	rjmp	.+428    	; 0x262 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	d4 c0       	rjmp	.+424    	; 0x262 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	96 c6       	rjmp	.+3372   	; 0xdea <__vector_47>
      be:	00 00       	nop
      c0:	d0 c0       	rjmp	.+416    	; 0x262 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	ce c0       	rjmp	.+412    	; 0x262 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	cc c0       	rjmp	.+408    	; 0x262 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	ca c0       	rjmp	.+404    	; 0x262 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c8 c0       	rjmp	.+400    	; 0x262 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	c6 c0       	rjmp	.+396    	; 0x262 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	c4 c0       	rjmp	.+392    	; 0x262 <__bad_interrupt>
      da:	00 00       	nop
      dc:	c2 c0       	rjmp	.+388    	; 0x262 <__bad_interrupt>
      de:	00 00       	nop
      e0:	c0 c0       	rjmp	.+384    	; 0x262 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	07 2c       	mov	r0, r7
      fa:	7a a5       	ldd	r23, Y+42	; 0x2a
      fc:	ba 6c       	ori	r27, 0xCA	; 202
      fe:	c5 90       	lpm	r12, Z+
     100:	da 3b       	cpi	r29, 0xBA	; 186
     102:	93 65       	ori	r25, 0x53	; 83
     104:	fc 8b       	std	Y+20, r31	; 0x14
     106:	bc 53       	subi	r27, 0x3C	; 60
     108:	f8 10       	cpse	r15, r8
     10a:	fd 3c       	cpi	r31, 0xCD	; 205
     10c:	56 92       	lac	Z, r5
     10e:	83 4d       	sbci	r24, 0xD3	; 211
     110:	bd 87       	std	Y+13, r27	; 0x0d
     112:	9d 3a       	cpi	r25, 0xAD	; 173
     114:	b6 3d       	cpi	r27, 0xD6	; 214
     116:	cb c9       	rjmp	.-3178   	; 0xfffff4ae <__eeprom_end+0xff7ef4ae>
     118:	bf 5b       	subi	r27, 0xBF	; 191
     11a:	be 73       	andi	r27, 0x3E	; 62
     11c:	da 0f       	add	r29, r26
     11e:	c9 3f       	cpi	r28, 0xF9	; 249

00000120 <__trampolines_end>:
     120:	6e 61       	ori	r22, 0x1E	; 30
     122:	6e 00       	.word	0x006e	; ????

00000124 <__c.2332>:
     124:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     134:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     144:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     154:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     164:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     174:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     184:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     194:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     1a4:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1b4:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1c4:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1d4:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1e4:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1f4:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     204:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     214:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000222 <__ctors_end>:
     222:	11 24       	eor	r1, r1
     224:	1f be       	out	0x3f, r1	; 63
     226:	cf ef       	ldi	r28, 0xFF	; 255
     228:	d1 e2       	ldi	r29, 0x21	; 33
     22a:	de bf       	out	0x3e, r29	; 62
     22c:	cd bf       	out	0x3d, r28	; 61
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0c bf       	out	0x3c, r16	; 60

00000232 <__do_copy_data>:
     232:	13 e0       	ldi	r17, 0x03	; 3
     234:	a0 e0       	ldi	r26, 0x00	; 0
     236:	b2 e0       	ldi	r27, 0x02	; 2
     238:	e4 e5       	ldi	r30, 0x54	; 84
     23a:	f4 e2       	ldi	r31, 0x24	; 36
     23c:	00 e0       	ldi	r16, 0x00	; 0
     23e:	0b bf       	out	0x3b, r16	; 59
     240:	02 c0       	rjmp	.+4      	; 0x246 <__do_copy_data+0x14>
     242:	07 90       	elpm	r0, Z+
     244:	0d 92       	st	X+, r0
     246:	ac 37       	cpi	r26, 0x7C	; 124
     248:	b1 07       	cpc	r27, r17
     24a:	d9 f7       	brne	.-10     	; 0x242 <__do_copy_data+0x10>

0000024c <__do_clear_bss>:
     24c:	23 e0       	ldi	r18, 0x03	; 3
     24e:	ac e7       	ldi	r26, 0x7C	; 124
     250:	b3 e0       	ldi	r27, 0x03	; 3
     252:	01 c0       	rjmp	.+2      	; 0x256 <.do_clear_bss_start>

00000254 <.do_clear_bss_loop>:
     254:	1d 92       	st	X+, r1

00000256 <.do_clear_bss_start>:
     256:	a7 3e       	cpi	r26, 0xE7	; 231
     258:	b2 07       	cpc	r27, r18
     25a:	e1 f7       	brne	.-8      	; 0x254 <.do_clear_bss_loop>
     25c:	65 d2       	rcall	.+1226   	; 0x728 <main>
     25e:	0c 94 28 12 	jmp	0x2450	; 0x2450 <_exit>

00000262 <__bad_interrupt>:
     262:	ce ce       	rjmp	.-612    	; 0x0 <__vectors>

00000264 <init_gpio>:
{
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     264:	e1 e0       	ldi	r30, 0x01	; 1
     266:	f1 e0       	ldi	r31, 0x01	; 1
     268:	80 81       	ld	r24, Z
     26a:	88 60       	ori	r24, 0x08	; 8
     26c:	80 83       	st	Z, r24
     26e:	80 81       	ld	r24, Z
     270:	80 61       	ori	r24, 0x10	; 16
     272:	80 83       	st	Z, r24
     274:	80 81       	ld	r24, Z
     276:	80 62       	ori	r24, 0x20	; 32
     278:	80 83       	st	Z, r24
     27a:	08 95       	ret

0000027c <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     27c:	e0 91 7c 03 	lds	r30, 0x037C	; 0x80037c <__data_end>
     280:	f0 91 7d 03 	lds	r31, 0x037D	; 0x80037d <__data_end+0x1>
     284:	ea 5f       	subi	r30, 0xFA	; 250
     286:	fd 4f       	sbci	r31, 0xFD	; 253
     288:	80 81       	ld	r24, Z
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     290:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     294:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step>
     298:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step+0x1>
     29c:	ea 5f       	subi	r30, 0xFA	; 250
     29e:	fd 4f       	sbci	r31, 0xFD	; 253
     2a0:	80 81       	ld	r24, Z
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     2a8:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     2ac:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step>
     2b0:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step+0x1>
     2b4:	ea 5f       	subi	r30, 0xFA	; 250
     2b6:	fd 4f       	sbci	r31, 0xFD	; 253
     2b8:	80 81       	ld	r24, Z
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     2c0:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     2c4:	60 91 8b 03 	lds	r22, 0x038B	; 0x80038b <incr>
     2c8:	70 91 8c 03 	lds	r23, 0x038C	; 0x80038c <incr+0x1>
     2cc:	40 91 7c 03 	lds	r20, 0x037C	; 0x80037c <__data_end>
     2d0:	50 91 7d 03 	lds	r21, 0x037D	; 0x80037d <__data_end+0x1>
     2d4:	46 0f       	add	r20, r22
     2d6:	57 1f       	adc	r21, r23
     2d8:	50 93 7d 03 	sts	0x037D, r21	; 0x80037d <__data_end+0x1>
     2dc:	40 93 7c 03 	sts	0x037C, r20	; 0x80037c <__data_end>
	V_step=V_step+incr;
     2e0:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     2e4:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     2e8:	26 0f       	add	r18, r22
     2ea:	37 1f       	adc	r19, r23
     2ec:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     2f0:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	W_step=W_step+incr;
     2f4:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     2f8:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     2fc:	86 0f       	add	r24, r22
     2fe:	97 1f       	adc	r25, r23
     300:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     304:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	if(U_step > SINE_TABLE_SZ)
     308:	49 36       	cpi	r20, 0x69	; 105
     30a:	61 e0       	ldi	r22, 0x01	; 1
     30c:	56 07       	cpc	r21, r22
     30e:	2c f0       	brlt	.+10     	; 0x31a <PWM_update+0x9e>
	U_step = 0;
     310:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <__data_end+0x1>
     314:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <__data_end>
     318:	08 c0       	rjmp	.+16     	; 0x32a <PWM_update+0xae>
	if(U_step < 0)
     31a:	55 23       	and	r21, r21
     31c:	34 f4       	brge	.+12     	; 0x32a <PWM_update+0xae>
	U_step = SINE_TABLE_SZ;
     31e:	48 e6       	ldi	r20, 0x68	; 104
     320:	51 e0       	ldi	r21, 0x01	; 1
     322:	50 93 7d 03 	sts	0x037D, r21	; 0x80037d <__data_end+0x1>
     326:	40 93 7c 03 	sts	0x037C, r20	; 0x80037c <__data_end>
	
	if(V_step > SINE_TABLE_SZ)
     32a:	29 36       	cpi	r18, 0x69	; 105
     32c:	41 e0       	ldi	r20, 0x01	; 1
     32e:	34 07       	cpc	r19, r20
     330:	2c f0       	brlt	.+10     	; 0x33c <PWM_update+0xc0>
	V_step = 0;
     332:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step+0x1>
     336:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step>
     33a:	08 c0       	rjmp	.+16     	; 0x34c <PWM_update+0xd0>
	if(V_step < 0)
     33c:	33 23       	and	r19, r19
     33e:	34 f4       	brge	.+12     	; 0x34c <PWM_update+0xd0>
	V_step = SINE_TABLE_SZ;
     340:	28 e6       	ldi	r18, 0x68	; 104
     342:	31 e0       	ldi	r19, 0x01	; 1
     344:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     348:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     34c:	89 36       	cpi	r24, 0x69	; 105
     34e:	61 e0       	ldi	r22, 0x01	; 1
     350:	96 07       	cpc	r25, r22
     352:	2c f0       	brlt	.+10     	; 0x35e <PWM_update+0xe2>
	W_step = 0;
     354:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step+0x1>
     358:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step>
     35c:	08 c0       	rjmp	.+16     	; 0x36e <PWM_update+0xf2>
	if(W_step < 0)
     35e:	99 23       	and	r25, r25
     360:	34 f4       	brge	.+12     	; 0x36e <PWM_update+0xf2>
	W_step = SINE_TABLE_SZ;
     362:	88 e6       	ldi	r24, 0x68	; 104
     364:	91 e0       	ldi	r25, 0x01	; 1
     366:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     36a:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     36e:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <pwm_delay>
     372:	90 91 88 03 	lds	r25, 0x0388	; 0x800388 <pwm_delay+0x1>
     376:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     37a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     37e:	08 95       	ret

00000380 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     380:	4f 92       	push	r4
     382:	5f 92       	push	r5
     384:	6f 92       	push	r6
     386:	7f 92       	push	r7
     388:	8f 92       	push	r8
     38a:	9f 92       	push	r9
     38c:	af 92       	push	r10
     38e:	bf 92       	push	r11
     390:	cf 92       	push	r12
     392:	df 92       	push	r13
     394:	ef 92       	push	r14
     396:	ff 92       	push	r15
     398:	0f 93       	push	r16
     39a:	1f 93       	push	r17
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
     3a0:	cd b7       	in	r28, 0x3d	; 61
     3a2:	de b7       	in	r29, 0x3e	; 62
     3a4:	6c 97       	sbiw	r28, 0x1c	; 28
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	f8 94       	cli
     3aa:	de bf       	out	0x3e, r29	; 62
     3ac:	0f be       	out	0x3f, r0	; 63
     3ae:	cd bf       	out	0x3d, r28	; 61
     3b0:	69 8b       	std	Y+17, r22	; 0x11
     3b2:	7a 8b       	std	Y+18, r23	; 0x12
     3b4:	8b 8b       	std	Y+19, r24	; 0x13
     3b6:	9c 8b       	std	Y+20, r25	; 0x14
     3b8:	ca 01       	movw	r24, r20
     3ba:	b9 01       	movw	r22, r18
     3bc:	e9 82       	std	Y+1, r14	; 0x01
     3be:	fa 82       	std	Y+2, r15	; 0x02
     3c0:	0b 83       	std	Y+3, r16	; 0x03
     3c2:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     3c4:	c0 90 99 03 	lds	r12, 0x0399	; 0x800399 <bias>
     3c8:	d0 90 9a 03 	lds	r13, 0x039A	; 0x80039a <bias+0x1>
     3cc:	e0 90 9b 03 	lds	r14, 0x039B	; 0x80039b <bias+0x2>
     3d0:	f0 90 9c 03 	lds	r15, 0x039C	; 0x80039c <bias+0x3>
     3d4:	a7 01       	movw	r20, r14
     3d6:	96 01       	movw	r18, r12
     3d8:	57 d6       	rcall	.+3246   	; 0x1088 <__subsf3>
     3da:	60 93 91 03 	sts	0x0391, r22	; 0x800391 <rate>
     3de:	70 93 92 03 	sts	0x0392, r23	; 0x800392 <rate+0x1>
     3e2:	80 93 93 03 	sts	0x0393, r24	; 0x800393 <rate+0x2>
     3e6:	90 93 94 03 	sts	0x0394, r25	; 0x800394 <rate+0x3>
	angle += dt * rate;
     3ea:	29 81       	ldd	r18, Y+1	; 0x01
     3ec:	3a 81       	ldd	r19, Y+2	; 0x02
     3ee:	4b 81       	ldd	r20, Y+3	; 0x03
     3f0:	5c 81       	ldd	r21, Y+4	; 0x04
     3f2:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <__mulsf3>
     3f6:	20 91 a1 03 	lds	r18, 0x03A1	; 0x8003a1 <angle>
     3fa:	30 91 a2 03 	lds	r19, 0x03A2	; 0x8003a2 <angle+0x1>
     3fe:	40 91 a3 03 	lds	r20, 0x03A3	; 0x8003a3 <angle+0x2>
     402:	50 91 a4 03 	lds	r21, 0x03A4	; 0x8003a4 <angle+0x3>
     406:	41 d6       	rcall	.+3202   	; 0x108a <__addsf3>
     408:	6d 8b       	std	Y+21, r22	; 0x15
     40a:	7e 8b       	std	Y+22, r23	; 0x16
     40c:	8f 8b       	std	Y+23, r24	; 0x17
     40e:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     410:	80 90 b1 03 	lds	r8, 0x03B1	; 0x8003b1 <P+0xc>
     414:	90 90 b2 03 	lds	r9, 0x03B2	; 0x8003b2 <P+0xd>
     418:	a0 90 b3 03 	lds	r10, 0x03B3	; 0x8003b3 <P+0xe>
     41c:	b0 90 b4 03 	lds	r11, 0x03B4	; 0x8003b4 <P+0xf>
     420:	a5 01       	movw	r20, r10
     422:	94 01       	movw	r18, r8
     424:	69 81       	ldd	r22, Y+1	; 0x01
     426:	7a 81       	ldd	r23, Y+2	; 0x02
     428:	8b 81       	ldd	r24, Y+3	; 0x03
     42a:	9c 81       	ldd	r25, Y+4	; 0x04
     42c:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <__mulsf3>
     430:	6d 83       	std	Y+5, r22	; 0x05
     432:	7e 83       	std	Y+6, r23	; 0x06
     434:	8f 83       	std	Y+7, r24	; 0x07
     436:	98 87       	std	Y+8, r25	; 0x08
     438:	40 90 a9 03 	lds	r4, 0x03A9	; 0x8003a9 <P+0x4>
     43c:	50 90 aa 03 	lds	r5, 0x03AA	; 0x8003aa <P+0x5>
     440:	60 90 ab 03 	lds	r6, 0x03AB	; 0x8003ab <P+0x6>
     444:	70 90 ac 03 	lds	r7, 0x03AC	; 0x8003ac <P+0x7>
     448:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <P+0x8>
     44c:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <P+0x9>
     450:	a0 91 af 03 	lds	r26, 0x03AF	; 0x8003af <P+0xa>
     454:	b0 91 b0 03 	lds	r27, 0x03B0	; 0x8003b0 <P+0xb>
     458:	8d 87       	std	Y+13, r24	; 0x0d
     45a:	9e 87       	std	Y+14, r25	; 0x0e
     45c:	af 87       	std	Y+15, r26	; 0x0f
     45e:	b8 8b       	std	Y+16, r27	; 0x10
     460:	a3 01       	movw	r20, r6
     462:	92 01       	movw	r18, r4
     464:	6d 81       	ldd	r22, Y+5	; 0x05
     466:	7e 81       	ldd	r23, Y+6	; 0x06
     468:	8f 81       	ldd	r24, Y+7	; 0x07
     46a:	98 85       	ldd	r25, Y+8	; 0x08
     46c:	0d d6       	rcall	.+3098   	; 0x1088 <__subsf3>
     46e:	2d 85       	ldd	r18, Y+13	; 0x0d
     470:	3e 85       	ldd	r19, Y+14	; 0x0e
     472:	4f 85       	ldd	r20, Y+15	; 0x0f
     474:	58 89       	ldd	r21, Y+16	; 0x10
     476:	08 d6       	rcall	.+3088   	; 0x1088 <__subsf3>
     478:	20 91 95 03 	lds	r18, 0x0395	; 0x800395 <Q_angle>
     47c:	30 91 96 03 	lds	r19, 0x0396	; 0x800396 <Q_angle+0x1>
     480:	40 91 97 03 	lds	r20, 0x0397	; 0x800397 <Q_angle+0x2>
     484:	50 91 98 03 	lds	r21, 0x0398	; 0x800398 <Q_angle+0x3>
     488:	00 d6       	rcall	.+3072   	; 0x108a <__addsf3>
     48a:	29 81       	ldd	r18, Y+1	; 0x01
     48c:	3a 81       	ldd	r19, Y+2	; 0x02
     48e:	4b 81       	ldd	r20, Y+3	; 0x03
     490:	5c 81       	ldd	r21, Y+4	; 0x04
     492:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <__mulsf3>
     496:	a5 ea       	ldi	r26, 0xA5	; 165
     498:	b3 e0       	ldi	r27, 0x03	; 3
     49a:	2d 91       	ld	r18, X+
     49c:	3d 91       	ld	r19, X+
     49e:	4d 91       	ld	r20, X+
     4a0:	5c 91       	ld	r21, X
     4a2:	f3 d5       	rcall	.+3046   	; 0x108a <__addsf3>
     4a4:	69 87       	std	Y+9, r22	; 0x09
     4a6:	7a 87       	std	Y+10, r23	; 0x0a
     4a8:	8b 87       	std	Y+11, r24	; 0x0b
	P[0][1] -= dt * P[1][1];
     4aa:	9c 87       	std	Y+12, r25	; 0x0c
     4ac:	2d 81       	ldd	r18, Y+5	; 0x05
     4ae:	3e 81       	ldd	r19, Y+6	; 0x06
     4b0:	4f 81       	ldd	r20, Y+7	; 0x07
     4b2:	58 85       	ldd	r21, Y+8	; 0x08
     4b4:	c3 01       	movw	r24, r6
     4b6:	b2 01       	movw	r22, r4
     4b8:	e7 d5       	rcall	.+3022   	; 0x1088 <__subsf3>
     4ba:	2b 01       	movw	r4, r22
	P[1][0] -= dt * P[1][1];
     4bc:	3c 01       	movw	r6, r24
     4be:	2d 81       	ldd	r18, Y+5	; 0x05
     4c0:	3e 81       	ldd	r19, Y+6	; 0x06
     4c2:	4f 81       	ldd	r20, Y+7	; 0x07
     4c4:	58 85       	ldd	r21, Y+8	; 0x08
     4c6:	6d 85       	ldd	r22, Y+13	; 0x0d
     4c8:	7e 85       	ldd	r23, Y+14	; 0x0e
     4ca:	8f 85       	ldd	r24, Y+15	; 0x0f
     4cc:	98 89       	ldd	r25, Y+16	; 0x10
     4ce:	dc d5       	rcall	.+3000   	; 0x1088 <__subsf3>
     4d0:	6d 87       	std	Y+13, r22	; 0x0d
     4d2:	7e 87       	std	Y+14, r23	; 0x0e
     4d4:	8f 87       	std	Y+15, r24	; 0x0f
	P[1][1] += Q_bias * dt;
     4d6:	98 8b       	std	Y+16, r25	; 0x10
     4d8:	20 91 8d 03 	lds	r18, 0x038D	; 0x80038d <Q_bias>
     4dc:	30 91 8e 03 	lds	r19, 0x038E	; 0x80038e <Q_bias+0x1>
     4e0:	40 91 8f 03 	lds	r20, 0x038F	; 0x80038f <Q_bias+0x2>
     4e4:	50 91 90 03 	lds	r21, 0x0390	; 0x800390 <Q_bias+0x3>
     4e8:	69 81       	ldd	r22, Y+1	; 0x01
     4ea:	7a 81       	ldd	r23, Y+2	; 0x02
     4ec:	8b 81       	ldd	r24, Y+3	; 0x03
     4ee:	9c 81       	ldd	r25, Y+4	; 0x04
     4f0:	eb d7       	rcall	.+4054   	; 0x14c8 <__mulsf3>
     4f2:	a5 01       	movw	r20, r10
     4f4:	94 01       	movw	r18, r8
     4f6:	c9 d5       	rcall	.+2962   	; 0x108a <__addsf3>
     4f8:	69 8f       	std	Y+25, r22	; 0x19
     4fa:	7a 8f       	std	Y+26, r23	; 0x1a
     4fc:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     4fe:	9c 8f       	std	Y+28, r25	; 0x1c
     500:	20 91 9d 03 	lds	r18, 0x039D	; 0x80039d <R_measure>
     504:	30 91 9e 03 	lds	r19, 0x039E	; 0x80039e <R_measure+0x1>
     508:	40 91 9f 03 	lds	r20, 0x039F	; 0x80039f <R_measure+0x2>
     50c:	50 91 a0 03 	lds	r21, 0x03A0	; 0x8003a0 <R_measure+0x3>
     510:	69 85       	ldd	r22, Y+9	; 0x09
     512:	7a 85       	ldd	r23, Y+10	; 0x0a
     514:	8b 85       	ldd	r24, Y+11	; 0x0b
     516:	9c 85       	ldd	r25, Y+12	; 0x0c
     518:	b8 d5       	rcall	.+2928   	; 0x108a <__addsf3>
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     51a:	4b 01       	movw	r8, r22
     51c:	5c 01       	movw	r10, r24
     51e:	9b 01       	movw	r18, r22
     520:	ac 01       	movw	r20, r24
     522:	69 85       	ldd	r22, Y+9	; 0x09
     524:	7a 85       	ldd	r23, Y+10	; 0x0a
     526:	8b 85       	ldd	r24, Y+11	; 0x0b
     528:	9c 85       	ldd	r25, Y+12	; 0x0c
     52a:	2e d6       	rcall	.+3164   	; 0x1188 <__divsf3>
     52c:	69 83       	std	Y+1, r22	; 0x01
     52e:	7a 83       	std	Y+2, r23	; 0x02
	K[1] = P[1][0] / S;
     530:	8b 83       	std	Y+3, r24	; 0x03
     532:	9c 83       	std	Y+4, r25	; 0x04
     534:	a5 01       	movw	r20, r10
     536:	94 01       	movw	r18, r8
     538:	6d 85       	ldd	r22, Y+13	; 0x0d
     53a:	7e 85       	ldd	r23, Y+14	; 0x0e
     53c:	8f 85       	ldd	r24, Y+15	; 0x0f
     53e:	98 89       	ldd	r25, Y+16	; 0x10
     540:	23 d6       	rcall	.+3142   	; 0x1188 <__divsf3>
     542:	6d 83       	std	Y+5, r22	; 0x05
     544:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     546:	8f 83       	std	Y+7, r24	; 0x07
     548:	98 87       	std	Y+8, r25	; 0x08
     54a:	2d 89       	ldd	r18, Y+21	; 0x15
     54c:	3e 89       	ldd	r19, Y+22	; 0x16
     54e:	4f 89       	ldd	r20, Y+23	; 0x17
     550:	58 8d       	ldd	r21, Y+24	; 0x18
     552:	69 89       	ldd	r22, Y+17	; 0x11
     554:	7a 89       	ldd	r23, Y+18	; 0x12
     556:	8b 89       	ldd	r24, Y+19	; 0x13
     558:	9c 89       	ldd	r25, Y+20	; 0x14
     55a:	96 d5       	rcall	.+2860   	; 0x1088 <__subsf3>
     55c:	69 8b       	std	Y+17, r22	; 0x11
	/* Step 6 */
	angle += K[0] * y;
     55e:	7a 8b       	std	Y+18, r23	; 0x12
     560:	8b 8b       	std	Y+19, r24	; 0x13
     562:	9c 8b       	std	Y+20, r25	; 0x14
     564:	9b 01       	movw	r18, r22
     566:	ac 01       	movw	r20, r24
     568:	69 81       	ldd	r22, Y+1	; 0x01
     56a:	7a 81       	ldd	r23, Y+2	; 0x02
     56c:	8b 81       	ldd	r24, Y+3	; 0x03
     56e:	9c 81       	ldd	r25, Y+4	; 0x04
     570:	ab d7       	rcall	.+3926   	; 0x14c8 <__mulsf3>
     572:	2d 89       	ldd	r18, Y+21	; 0x15
     574:	3e 89       	ldd	r19, Y+22	; 0x16
     576:	4f 89       	ldd	r20, Y+23	; 0x17
     578:	58 8d       	ldd	r21, Y+24	; 0x18
     57a:	87 d5       	rcall	.+2830   	; 0x108a <__addsf3>
     57c:	4b 01       	movw	r8, r22
     57e:	5c 01       	movw	r10, r24
     580:	60 93 a1 03 	sts	0x03A1, r22	; 0x8003a1 <angle>
     584:	70 93 a2 03 	sts	0x03A2, r23	; 0x8003a2 <angle+0x1>
     588:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <angle+0x2>
	bias += K[1] * y;
     58c:	90 93 a4 03 	sts	0x03A4, r25	; 0x8003a4 <angle+0x3>
     590:	29 89       	ldd	r18, Y+17	; 0x11
     592:	3a 89       	ldd	r19, Y+18	; 0x12
     594:	4b 89       	ldd	r20, Y+19	; 0x13
     596:	5c 89       	ldd	r21, Y+20	; 0x14
     598:	6d 81       	ldd	r22, Y+5	; 0x05
     59a:	7e 81       	ldd	r23, Y+6	; 0x06
     59c:	8f 81       	ldd	r24, Y+7	; 0x07
     59e:	98 85       	ldd	r25, Y+8	; 0x08
     5a0:	93 d7       	rcall	.+3878   	; 0x14c8 <__mulsf3>
     5a2:	a7 01       	movw	r20, r14
     5a4:	96 01       	movw	r18, r12
     5a6:	71 d5       	rcall	.+2786   	; 0x108a <__addsf3>
     5a8:	60 93 99 03 	sts	0x0399, r22	; 0x800399 <bias>
     5ac:	70 93 9a 03 	sts	0x039A, r23	; 0x80039a <bias+0x1>
     5b0:	80 93 9b 03 	sts	0x039B, r24	; 0x80039b <bias+0x2>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     5b4:	90 93 9c 03 	sts	0x039C, r25	; 0x80039c <bias+0x3>
     5b8:	29 81       	ldd	r18, Y+1	; 0x01
     5ba:	3a 81       	ldd	r19, Y+2	; 0x02
     5bc:	4b 81       	ldd	r20, Y+3	; 0x03
     5be:	5c 81       	ldd	r21, Y+4	; 0x04
     5c0:	69 85       	ldd	r22, Y+9	; 0x09
     5c2:	7a 85       	ldd	r23, Y+10	; 0x0a
     5c4:	8b 85       	ldd	r24, Y+11	; 0x0b
     5c6:	9c 85       	ldd	r25, Y+12	; 0x0c
     5c8:	7f d7       	rcall	.+3838   	; 0x14c8 <__mulsf3>
     5ca:	9b 01       	movw	r18, r22
     5cc:	ac 01       	movw	r20, r24
     5ce:	69 85       	ldd	r22, Y+9	; 0x09
     5d0:	7a 85       	ldd	r23, Y+10	; 0x0a
     5d2:	8b 85       	ldd	r24, Y+11	; 0x0b
     5d4:	9c 85       	ldd	r25, Y+12	; 0x0c
     5d6:	58 d5       	rcall	.+2736   	; 0x1088 <__subsf3>
     5d8:	e5 ea       	ldi	r30, 0xA5	; 165
     5da:	f3 e0       	ldi	r31, 0x03	; 3
     5dc:	60 83       	st	Z, r22
	P[0][1] -= K[0] * P01_temp;
     5de:	71 83       	std	Z+1, r23	; 0x01
     5e0:	82 83       	std	Z+2, r24	; 0x02
     5e2:	93 83       	std	Z+3, r25	; 0x03
     5e4:	29 81       	ldd	r18, Y+1	; 0x01
     5e6:	3a 81       	ldd	r19, Y+2	; 0x02
     5e8:	4b 81       	ldd	r20, Y+3	; 0x03
     5ea:	5c 81       	ldd	r21, Y+4	; 0x04
     5ec:	c3 01       	movw	r24, r6
     5ee:	b2 01       	movw	r22, r4
     5f0:	6b d7       	rcall	.+3798   	; 0x14c8 <__mulsf3>
     5f2:	9b 01       	movw	r18, r22
     5f4:	ac 01       	movw	r20, r24
     5f6:	c3 01       	movw	r24, r6
     5f8:	b2 01       	movw	r22, r4
     5fa:	46 d5       	rcall	.+2700   	; 0x1088 <__subsf3>
     5fc:	60 93 a9 03 	sts	0x03A9, r22	; 0x8003a9 <P+0x4>
     600:	70 93 aa 03 	sts	0x03AA, r23	; 0x8003aa <P+0x5>
     604:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <P+0x6>
	P[1][0] -= K[1] * P00_temp;
     608:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <P+0x7>
     60c:	2d 81       	ldd	r18, Y+5	; 0x05
     60e:	3e 81       	ldd	r19, Y+6	; 0x06
     610:	4f 81       	ldd	r20, Y+7	; 0x07
     612:	58 85       	ldd	r21, Y+8	; 0x08
     614:	69 85       	ldd	r22, Y+9	; 0x09
     616:	7a 85       	ldd	r23, Y+10	; 0x0a
     618:	8b 85       	ldd	r24, Y+11	; 0x0b
     61a:	9c 85       	ldd	r25, Y+12	; 0x0c
     61c:	55 d7       	rcall	.+3754   	; 0x14c8 <__mulsf3>
     61e:	9b 01       	movw	r18, r22
     620:	ac 01       	movw	r20, r24
     622:	6d 85       	ldd	r22, Y+13	; 0x0d
     624:	7e 85       	ldd	r23, Y+14	; 0x0e
     626:	8f 85       	ldd	r24, Y+15	; 0x0f
     628:	98 89       	ldd	r25, Y+16	; 0x10
     62a:	2e d5       	rcall	.+2652   	; 0x1088 <__subsf3>
     62c:	60 93 ad 03 	sts	0x03AD, r22	; 0x8003ad <P+0x8>
     630:	70 93 ae 03 	sts	0x03AE, r23	; 0x8003ae <P+0x9>
     634:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <P+0xa>
	P[1][1] -= K[1] * P01_temp;
     638:	90 93 b0 03 	sts	0x03B0, r25	; 0x8003b0 <P+0xb>
     63c:	2d 81       	ldd	r18, Y+5	; 0x05
     63e:	3e 81       	ldd	r19, Y+6	; 0x06
     640:	4f 81       	ldd	r20, Y+7	; 0x07
     642:	58 85       	ldd	r21, Y+8	; 0x08
     644:	c3 01       	movw	r24, r6
     646:	b2 01       	movw	r22, r4
     648:	3f d7       	rcall	.+3710   	; 0x14c8 <__mulsf3>
     64a:	9b 01       	movw	r18, r22
     64c:	ac 01       	movw	r20, r24
     64e:	69 8d       	ldd	r22, Y+25	; 0x19
     650:	7a 8d       	ldd	r23, Y+26	; 0x1a
     652:	8b 8d       	ldd	r24, Y+27	; 0x1b
     654:	9c 8d       	ldd	r25, Y+28	; 0x1c
     656:	18 d5       	rcall	.+2608   	; 0x1088 <__subsf3>
     658:	60 93 b1 03 	sts	0x03B1, r22	; 0x8003b1 <P+0xc>
     65c:	70 93 b2 03 	sts	0x03B2, r23	; 0x8003b2 <P+0xd>
     660:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <P+0xe>
     664:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <P+0xf>

	return angle;
};
     668:	c5 01       	movw	r24, r10
     66a:	b4 01       	movw	r22, r8
     66c:	6c 96       	adiw	r28, 0x1c	; 28
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	f8 94       	cli
     672:	de bf       	out	0x3e, r29	; 62
     674:	0f be       	out	0x3f, r0	; 63
     676:	cd bf       	out	0x3d, r28	; 61
     678:	df 91       	pop	r29
     67a:	cf 91       	pop	r28
     67c:	1f 91       	pop	r17
     67e:	0f 91       	pop	r16
     680:	ff 90       	pop	r15
     682:	ef 90       	pop	r14
     684:	df 90       	pop	r13
     686:	cf 90       	pop	r12
     688:	bf 90       	pop	r11
     68a:	af 90       	pop	r10
     68c:	9f 90       	pop	r9
     68e:	8f 90       	pop	r8
     690:	7f 90       	pop	r7
     692:	6f 90       	pop	r6
     694:	5f 90       	pop	r5
     696:	4f 90       	pop	r4
     698:	08 95       	ret

0000069a <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle = 0.001f;
     69a:	8f e6       	ldi	r24, 0x6F	; 111
     69c:	92 e1       	ldi	r25, 0x12	; 18
     69e:	a3 e8       	ldi	r26, 0x83	; 131
     6a0:	ba e3       	ldi	r27, 0x3A	; 58
     6a2:	80 93 95 03 	sts	0x0395, r24	; 0x800395 <Q_angle>
     6a6:	90 93 96 03 	sts	0x0396, r25	; 0x800396 <Q_angle+0x1>
     6aa:	a0 93 97 03 	sts	0x0397, r26	; 0x800397 <Q_angle+0x2>
     6ae:	b0 93 98 03 	sts	0x0398, r27	; 0x800398 <Q_angle+0x3>
	Q_bias = 0.003f;
     6b2:	86 ea       	ldi	r24, 0xA6	; 166
     6b4:	9b e9       	ldi	r25, 0x9B	; 155
     6b6:	a4 e4       	ldi	r26, 0x44	; 68
     6b8:	bb e3       	ldi	r27, 0x3B	; 59
     6ba:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <Q_bias>
     6be:	90 93 8e 03 	sts	0x038E, r25	; 0x80038e <Q_bias+0x1>
     6c2:	a0 93 8f 03 	sts	0x038F, r26	; 0x80038f <Q_bias+0x2>
     6c6:	b0 93 90 03 	sts	0x0390, r27	; 0x800390 <Q_bias+0x3>
	R_measure = 0.03f;
     6ca:	8f e8       	ldi	r24, 0x8F	; 143
     6cc:	92 ec       	ldi	r25, 0xC2	; 194
     6ce:	a5 ef       	ldi	r26, 0xF5	; 245
     6d0:	bc e3       	ldi	r27, 0x3C	; 60
     6d2:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <R_measure>
     6d6:	90 93 9e 03 	sts	0x039E, r25	; 0x80039e <R_measure+0x1>
     6da:	a0 93 9f 03 	sts	0x039F, r26	; 0x80039f <R_measure+0x2>
     6de:	b0 93 a0 03 	sts	0x03A0, r27	; 0x8003a0 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     6e2:	10 92 a1 03 	sts	0x03A1, r1	; 0x8003a1 <angle>
     6e6:	10 92 a2 03 	sts	0x03A2, r1	; 0x8003a2 <angle+0x1>
     6ea:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <angle+0x2>
     6ee:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <angle+0x3>
	bias = 0.0f; // Reset bias
     6f2:	10 92 99 03 	sts	0x0399, r1	; 0x800399 <bias>
     6f6:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <bias+0x1>
     6fa:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <bias+0x2>
     6fe:	10 92 9c 03 	sts	0x039C, r1	; 0x80039c <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     702:	e5 ea       	ldi	r30, 0xA5	; 165
     704:	f3 e0       	ldi	r31, 0x03	; 3
     706:	10 82       	st	Z, r1
     708:	11 82       	std	Z+1, r1	; 0x01
     70a:	12 82       	std	Z+2, r1	; 0x02
     70c:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     70e:	14 82       	std	Z+4, r1	; 0x04
     710:	15 82       	std	Z+5, r1	; 0x05
     712:	16 82       	std	Z+6, r1	; 0x06
     714:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     716:	10 86       	std	Z+8, r1	; 0x08
     718:	11 86       	std	Z+9, r1	; 0x09
     71a:	12 86       	std	Z+10, r1	; 0x0a
     71c:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     71e:	14 86       	std	Z+12, r1	; 0x0c
     720:	15 86       	std	Z+13, r1	; 0x0d
     722:	16 86       	std	Z+14, r1	; 0x0e
     724:	17 86       	std	Z+15, r1	; 0x0f
     726:	08 95       	ret

00000728 <main>:
#include <time.h>
uint8_t buffer[14];
bool loop_bool=true;
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	cd b7       	in	r28, 0x3d	; 61
     72e:	de b7       	in	r29, 0x3e	; 62
     730:	a0 97       	sbiw	r28, 0x20	; 32
     732:	0f b6       	in	r0, 0x3f	; 63
     734:	f8 94       	cli
     736:	de bf       	out	0x3e, r29	; 62
     738:	0f be       	out	0x3f, r0	; 63
     73a:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     73c:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <__data_end+0x1>
     740:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <__data_end>
	V_step=V_step_predefine;
     744:	88 e7       	ldi	r24, 0x78	; 120
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	90 93 72 03 	sts	0x0372, r25	; 0x800372 <V_step+0x1>
     74c:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <V_step>
	W_step=W_step_predefine;
     750:	80 ef       	ldi	r24, 0xF0	; 240
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     758:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	incr=-1;
     75c:	8f ef       	ldi	r24, 0xFF	; 255
     75e:	9f ef       	ldi	r25, 0xFF	; 255
     760:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <incr+0x1>
     764:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <incr>
	pwm_delay=2000;
     768:	80 ed       	ldi	r24, 0xD0	; 208
     76a:	97 e0       	ldi	r25, 0x07	; 7
     76c:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <pwm_delay+0x1>
     770:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <pwm_delay>
	cli();
	init_gpio();
		#ifdef GYRO
			i2c_init();
     774:	f8 94       	cli
		#endif
	USART_Init(MY_UBRR);
     776:	76 dd       	rcall	.-1300   	; 0x264 <init_gpio>
     778:	5f d3       	rcall	.+1726   	; 0xe38 <i2c_init>
     77a:	8c e0       	ldi	r24, 0x0C	; 12
	uart_str = fdevopen(uart_putchar, NULL);
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	0d d4       	rcall	.+2074   	; 0xf9a <USART_Init>
     780:	60 e0       	ldi	r22, 0x00	; 0
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	88 ed       	ldi	r24, 0xD8	; 216
     786:	97 e0       	ldi	r25, 0x07	; 7
	setup_timer0();
	Enable_timer0_overflow_interrupt();//micros
     788:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <fdevopen>
	setup_timer4();//pwm
     78c:	90 93 b6 03 	sts	0x03B6, r25	; 0x8003b6 <uart_str+0x1>
	setup_timer5();
     790:	80 93 b5 03 	sts	0x03B5, r24	; 0x8003b5 <uart_str>
	Enable_timer5_compare_interrupt();//motor
	OCR5A=4000;
     794:	ad d2       	rcall	.+1370   	; 0xcf0 <setup_timer0>
     796:	b3 d2       	rcall	.+1382   	; 0xcfe <Enable_timer0_overflow_interrupt>
     798:	88 d2       	rcall	.+1296   	; 0xcaa <setup_timer4>
     79a:	9b d2       	rcall	.+1334   	; 0xcd2 <setup_timer5>
	unsigned long timer1=micros();
     79c:	a3 d2       	rcall	.+1350   	; 0xce4 <Enable_timer5_compare_interrupt>
     79e:	80 ea       	ldi	r24, 0xA0	; 160
				int16_t gyroZ_calib=gyro_offset_z;
				int16_t accelX_calib=accel_offset_x;
				int16_t accelY_calib=accel_offset_y;
				int16_t accelZ_calib=accel_offset_z;
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     7a0:	9f e0       	ldi	r25, 0x0F	; 15
     7a2:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     7a6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     7aa:	af d2       	rcall	.+1374   	; 0xd0a <micros>
     7ac:	2b 01       	movw	r4, r22
     7ae:	3c 01       	movw	r6, r24
     7b0:	67 e0       	ldi	r22, 0x07	; 7
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     7b2:	89 e1       	ldi	r24, 0x19	; 25
     7b4:	b9 d1       	rcall	.+882    	; 0xb28 <mpu6050_writeByte>
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	8a e1       	ldi	r24, 0x1A	; 26
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     7ba:	b6 d1       	rcall	.+876    	; 0xb28 <mpu6050_writeByte>
     7bc:	68 e0       	ldi	r22, 0x08	; 8
     7be:	8b e1       	ldi	r24, 0x1B	; 27
     7c0:	b3 d1       	rcall	.+870    	; 0xb28 <mpu6050_writeByte>
		double gyroXangle;
		double gyroYangle;
		double compAngleX;
		double compAngleY;
	#endif  
	Kalman_init();
     7c2:	60 e1       	ldi	r22, 0x10	; 16
     7c4:	8c e1       	ldi	r24, 0x1C	; 28
	double angle_roll_kalman=0;
	double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
	angle=0;//roll;//set starting angle
     7c6:	b0 d1       	rcall	.+864    	; 0xb28 <mpu6050_writeByte>
     7c8:	61 e0       	ldi	r22, 0x01	; 1
     7ca:	8b e6       	ldi	r24, 0x6B	; 107
     7cc:	ad d1       	rcall	.+858    	; 0xb28 <mpu6050_writeByte>
     7ce:	65 df       	rcall	.-310    	; 0x69a <Kalman_init>
     7d0:	10 92 a1 03 	sts	0x03A1, r1	; 0x8003a1 <angle>
     7d4:	10 92 a2 03 	sts	0x03A2, r1	; 0x8003a2 <angle+0x1>
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
		double angle_roll=0;
     7d8:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <angle+0x2>
     7dc:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <angle+0x3>
			printSD("",final_angleY);
			printf("\n");		
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     7e0:	78 94       	sei
     7e2:	19 8a       	std	Y+17, r1	; 0x11
     7e4:	1a 8a       	std	Y+18, r1	; 0x12
     7e6:	1b 8a       	std	Y+19, r1	; 0x13
     7e8:	1c 8a       	std	Y+20, r1	; 0x14
     7ea:	0f 2e       	mov	r0, r31
	angle=0;//roll;//set starting angle
	sei();
    while (1) /*---------------------------while(1)---------------------------------*/
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     7ec:	ff ed       	ldi	r31, 0xDF	; 223
     7ee:	2f 2e       	mov	r2, r31
     7f0:	ff e7       	ldi	r31, 0x7F	; 127
     7f2:	3f 2e       	mov	r3, r31
     7f4:	f0 2d       	mov	r31, r0
     7f6:	ce 01       	movw	r24, r28
     7f8:	05 96       	adiw	r24, 0x05	; 5
     7fa:	7c 01       	movw	r14, r24
     7fc:	8e 01       	movw	r16, r28
     7fe:	0d 5f       	subi	r16, 0xFD	; 253
     800:	1f 4f       	sbci	r17, 0xFF	; 255
     802:	9e 01       	movw	r18, r28
     804:	2f 5f       	subi	r18, 0xFF	; 255
     806:	3f 4f       	sbci	r19, 0xFF	; 255
     808:	ae 01       	movw	r20, r28
     80a:	45 5f       	subi	r20, 0xF5	; 245
     80c:	5f 4f       	sbci	r21, 0xFF	; 255
			accel_x-=accelX_calib;
     80e:	be 01       	movw	r22, r28
     810:	67 5f       	subi	r22, 0xF7	; 247
     812:	7f 4f       	sbci	r23, 0xFF	; 255
     814:	02 96       	adiw	r24, 0x02	; 2
     816:	de d1       	rcall	.+956    	; 0xbd4 <mpu6050_getRawData>
     818:	8f 81       	ldd	r24, Y+7	; 0x07
			accel_y-=accelY_calib;
     81a:	98 85       	ldd	r25, Y+8	; 0x08
     81c:	86 5d       	subi	r24, 0xD6	; 214
     81e:	9e 4f       	sbci	r25, 0xFE	; 254
     820:	98 87       	std	Y+8, r25	; 0x08
     822:	8f 83       	std	Y+7, r24	; 0x07
     824:	89 85       	ldd	r24, Y+9	; 0x09
			accel_z-=accelZ_calib;
     826:	9a 85       	ldd	r25, Y+10	; 0x0a
     828:	82 52       	subi	r24, 0x22	; 34
     82a:	95 4f       	sbci	r25, 0xF5	; 245
     82c:	9a 87       	std	Y+10, r25	; 0x0a
     82e:	89 87       	std	Y+9, r24	; 0x09
     830:	8b 85       	ldd	r24, Y+11	; 0x0b
			gyro_x-=gyroX_calib;
     832:	9c 85       	ldd	r25, Y+12	; 0x0c
     834:	86 55       	subi	r24, 0x56	; 86
     836:	98 40       	sbci	r25, 0x08	; 8
     838:	9c 87       	std	Y+12, r25	; 0x0c
     83a:	8b 87       	std	Y+11, r24	; 0x0b
			gyro_y-=gyroY_calib;
     83c:	89 81       	ldd	r24, Y+1	; 0x01
     83e:	9a 81       	ldd	r25, Y+2	; 0x02
     840:	84 59       	subi	r24, 0x94	; 148
     842:	9f 4f       	sbci	r25, 0xFF	; 255
			gyro_z-=gyroZ_calib;
     844:	9a 83       	std	Y+2, r25	; 0x02
     846:	89 83       	std	Y+1, r24	; 0x01
     848:	8b 81       	ldd	r24, Y+3	; 0x03
     84a:	9c 81       	ldd	r25, Y+4	; 0x04
			printSI("ay=",accel_y);
			printSI("az=",accel_z);
			printf("\n");
			/*--------end------*/			
		#else
			double dt = ((double)(micros() - timer1))/1000000;
     84c:	80 52       	subi	r24, 0x20	; 32
     84e:	9f 4f       	sbci	r25, 0xFF	; 255
     850:	9c 83       	std	Y+4, r25	; 0x04
     852:	8b 83       	std	Y+3, r24	; 0x03
     854:	8d 81       	ldd	r24, Y+5	; 0x05
     856:	9e 81       	ldd	r25, Y+6	; 0x06
     858:	8f 58       	subi	r24, 0x8F	; 143
     85a:	9d 4f       	sbci	r25, 0xFD	; 253
     85c:	9e 83       	std	Y+6, r25	; 0x06
     85e:	8d 83       	std	Y+5, r24	; 0x05
     860:	54 d2       	rcall	.+1192   	; 0xd0a <micros>
     862:	64 19       	sub	r22, r4
     864:	75 09       	sbc	r23, r5
     866:	86 09       	sbc	r24, r6
     868:	97 09       	sbc	r25, r7
     86a:	27 d5       	rcall	.+2638   	; 0x12ba <__floatunsisf>
			timer1=micros();
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	34 e2       	ldi	r19, 0x24	; 36
     870:	44 e7       	ldi	r20, 0x74	; 116
     872:	59 e4       	ldi	r21, 0x49	; 73
			double gyroXrate = gyro_x/65.5;// deg/s 
     874:	89 d4       	rcall	.+2322   	; 0x1188 <__divsf3>
     876:	69 8f       	std	Y+25, r22	; 0x19
     878:	7a 8f       	std	Y+26, r23	; 0x1a
     87a:	8b 8f       	std	Y+27, r24	; 0x1b
     87c:	9c 8f       	std	Y+28, r25	; 0x1c
     87e:	45 d2       	rcall	.+1162   	; 0xd0a <micros>
     880:	2b 01       	movw	r4, r22
     882:	3c 01       	movw	r6, r24
     884:	69 81       	ldd	r22, Y+1	; 0x01
     886:	7a 81       	ldd	r23, Y+2	; 0x02
     888:	07 2e       	mov	r0, r23
     88a:	00 0c       	add	r0, r0
     88c:	88 0b       	sbc	r24, r24
     88e:	99 0b       	sbc	r25, r25
     890:	16 d5       	rcall	.+2604   	; 0x12be <__floatsisf>
			double gyroYrate = gyro_y/65.5;// deg/s
			if (!loop_bool) {
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	43 e8       	ldi	r20, 0x83	; 131
     898:	52 e4       	ldi	r21, 0x42	; 66
     89a:	76 d4       	rcall	.+2284   	; 0x1188 <__divsf3>
				angle_pitch += gyroXrate*dt; //Calculate the traveled pitch angle and add this to the angle_pitch variable
				angle_roll += gyroYrate*dt;  //Calculate the traveled roll angle and add this to the angle_roll variable			
     89c:	6d 8f       	std	Y+29, r22	; 0x1d
     89e:	7e 8f       	std	Y+30, r23	; 0x1e
     8a0:	8f 8f       	std	Y+31, r24	; 0x1f
     8a2:	98 a3       	std	Y+32, r25	; 0x20
     8a4:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <loop_bool>
     8a8:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <loop_bool+0x1>
     8ac:	89 2b       	or	r24, r25
     8ae:	e9 f4       	brne	.+58     	; 0x8ea <main+0x1c2>
     8b0:	6b 81       	ldd	r22, Y+3	; 0x03
     8b2:	7c 81       	ldd	r23, Y+4	; 0x04
     8b4:	07 2e       	mov	r0, r23
     8b6:	00 0c       	add	r0, r0
     8b8:	88 0b       	sbc	r24, r24
     8ba:	99 0b       	sbc	r25, r25
     8bc:	00 d5       	rcall	.+2560   	; 0x12be <__floatsisf>
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	43 e8       	ldi	r20, 0x83	; 131
     8c4:	52 e4       	ldi	r21, 0x42	; 66
     8c6:	60 d4       	rcall	.+2240   	; 0x1188 <__divsf3>
     8c8:	29 8d       	ldd	r18, Y+25	; 0x19
     8ca:	3a 8d       	ldd	r19, Y+26	; 0x1a
     8cc:	4b 8d       	ldd	r20, Y+27	; 0x1b
     8ce:	5c 8d       	ldd	r21, Y+28	; 0x1c
     8d0:	fb d5       	rcall	.+3062   	; 0x14c8 <__mulsf3>
     8d2:	9b 01       	movw	r18, r22
     8d4:	ac 01       	movw	r20, r24
     8d6:	69 89       	ldd	r22, Y+17	; 0x11
     8d8:	7a 89       	ldd	r23, Y+18	; 0x12
			}
			else loop_bool=false;	
     8da:	8b 89       	ldd	r24, Y+19	; 0x13
     8dc:	9c 89       	ldd	r25, Y+20	; 0x14
     8de:	d5 d3       	rcall	.+1962   	; 0x108a <__addsf3>
			//angle_pitch += angle_roll * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the roll angle to the pitch angel
			//angle_roll -= angle_pitch * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the pitch angle to the roll angel
			
			double temporar_accel_x=accel_x/100;
     8e0:	69 8b       	std	Y+17, r22	; 0x11
     8e2:	7a 8b       	std	Y+18, r23	; 0x12
     8e4:	8b 8b       	std	Y+19, r24	; 0x13
     8e6:	9c 8b       	std	Y+20, r25	; 0x14
     8e8:	04 c0       	rjmp	.+8      	; 0x8f2 <main+0x1ca>
     8ea:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <loop_bool+0x1>
     8ee:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <loop_bool>
     8f2:	0f 81       	ldd	r16, Y+7	; 0x07
     8f4:	18 85       	ldd	r17, Y+8	; 0x08
     8f6:	c8 01       	movw	r24, r16
     8f8:	64 e6       	ldi	r22, 0x64	; 100
     8fa:	70 e0       	ldi	r23, 0x00	; 0
			double temporar_accel_y=accel_y/100;
     8fc:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <__divmodhi4>
     900:	07 2e       	mov	r0, r23
     902:	00 0c       	add	r0, r0
     904:	88 0b       	sbc	r24, r24
     906:	99 0b       	sbc	r25, r25
     908:	da d4       	rcall	.+2484   	; 0x12be <__floatsisf>
     90a:	4b 01       	movw	r8, r22
     90c:	5c 01       	movw	r10, r24
     90e:	89 85       	ldd	r24, Y+9	; 0x09
     910:	9a 85       	ldd	r25, Y+10	; 0x0a
     912:	64 e6       	ldi	r22, 0x64	; 100
     914:	70 e0       	ldi	r23, 0x00	; 0
     916:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <__divmodhi4>
			double temporar_accel_z=accel_z/100;	
     91a:	07 2e       	mov	r0, r23
     91c:	00 0c       	add	r0, r0
     91e:	88 0b       	sbc	r24, r24
     920:	99 0b       	sbc	r25, r25
     922:	cd d4       	rcall	.+2458   	; 0x12be <__floatsisf>
     924:	6d 87       	std	Y+13, r22	; 0x0d
     926:	7e 87       	std	Y+14, r23	; 0x0e
     928:	8f 87       	std	Y+15, r24	; 0x0f
     92a:	98 8b       	std	Y+16, r25	; 0x10
     92c:	8b 85       	ldd	r24, Y+11	; 0x0b
     92e:	9c 85       	ldd	r25, Y+12	; 0x0c
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
     930:	64 e6       	ldi	r22, 0x64	; 100
     932:	70 e0       	ldi	r23, 0x00	; 0
     934:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <__divmodhi4>
     938:	07 2e       	mov	r0, r23
     93a:	00 0c       	add	r0, r0
     93c:	88 0b       	sbc	r24, r24
     93e:	99 0b       	sbc	r25, r25
     940:	be d4       	rcall	.+2428   	; 0x12be <__floatsisf>
     942:	6b 01       	movw	r12, r22
     944:	7c 01       	movw	r14, r24
     946:	a5 01       	movw	r20, r10
     948:	94 01       	movw	r18, r8
     94a:	c5 01       	movw	r24, r10
     94c:	b4 01       	movw	r22, r8
     94e:	bc d5       	rcall	.+2936   	; 0x14c8 <__mulsf3>
     950:	6d 8b       	std	Y+21, r22	; 0x15
     952:	7e 8b       	std	Y+22, r23	; 0x16
     954:	8f 8b       	std	Y+23, r24	; 0x17
     956:	98 8f       	std	Y+24, r25	; 0x18
     958:	2d 85       	ldd	r18, Y+13	; 0x0d
     95a:	3e 85       	ldd	r19, Y+14	; 0x0e
     95c:	4f 85       	ldd	r20, Y+15	; 0x0f
     95e:	58 89       	ldd	r21, Y+16	; 0x10
     960:	ca 01       	movw	r24, r20
     962:	b9 01       	movw	r22, r18
     964:	b1 d5       	rcall	.+2914   	; 0x14c8 <__mulsf3>
     966:	9b 01       	movw	r18, r22
     968:	ac 01       	movw	r20, r24
     96a:	6d 89       	ldd	r22, Y+21	; 0x15
     96c:	7e 89       	ldd	r23, Y+22	; 0x16
     96e:	8f 89       	ldd	r24, Y+23	; 0x17
     970:	98 8d       	ldd	r25, Y+24	; 0x18
     972:	8b d3       	rcall	.+1814   	; 0x108a <__addsf3>
     974:	6d 8b       	std	Y+21, r22	; 0x15
     976:	7e 8b       	std	Y+22, r23	; 0x16
     978:	8f 8b       	std	Y+23, r24	; 0x17
     97a:	98 8f       	std	Y+24, r25	; 0x18
     97c:	a5 01       	movw	r20, r10
     97e:	94 01       	movw	r18, r8
     980:	c5 01       	movw	r24, r10
     982:	b4 01       	movw	r22, r8
     984:	a1 d5       	rcall	.+2882   	; 0x14c8 <__mulsf3>
     986:	4b 01       	movw	r8, r22
     988:	5c 01       	movw	r10, r24
     98a:	2d 85       	ldd	r18, Y+13	; 0x0d
     98c:	3e 85       	ldd	r19, Y+14	; 0x0e
     98e:	4f 85       	ldd	r20, Y+15	; 0x0f
     990:	58 89       	ldd	r21, Y+16	; 0x10
     992:	ca 01       	movw	r24, r20
     994:	b9 01       	movw	r22, r18
     996:	98 d5       	rcall	.+2864   	; 0x14c8 <__mulsf3>
     998:	9b 01       	movw	r18, r22
     99a:	ac 01       	movw	r20, r24
     99c:	c5 01       	movw	r24, r10
     99e:	b4 01       	movw	r22, r8
     9a0:	74 d3       	rcall	.+1768   	; 0x108a <__addsf3>
     9a2:	4b 01       	movw	r8, r22
     9a4:	5c 01       	movw	r10, r24
			acc_total_vector*=100;
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     9a6:	a7 01       	movw	r20, r14
     9a8:	96 01       	movw	r18, r12
     9aa:	c7 01       	movw	r24, r14
     9ac:	b6 01       	movw	r22, r12
     9ae:	8c d5       	rcall	.+2840   	; 0x14c8 <__mulsf3>
     9b0:	9b 01       	movw	r18, r22
     9b2:	ac 01       	movw	r20, r24
     9b4:	c5 01       	movw	r24, r10
     9b6:	b4 01       	movw	r22, r8
     9b8:	68 d3       	rcall	.+1744   	; 0x108a <__addsf3>
     9ba:	ed d5       	rcall	.+3034   	; 0x1596 <sqrt>
     9bc:	4b 01       	movw	r8, r22
     9be:	5c 01       	movw	r10, r24
     9c0:	b8 01       	movw	r22, r16
     9c2:	11 0f       	add	r17, r17
     9c4:	88 0b       	sbc	r24, r24
     9c6:	99 0b       	sbc	r25, r25
     9c8:	7a d4       	rcall	.+2292   	; 0x12be <__floatsisf>
     9ca:	6b 01       	movw	r12, r22
     9cc:	7c 01       	movw	r14, r24
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	30 e0       	ldi	r19, 0x00	; 0
				
			//kalman
			//double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
			//double pitch = atan(-accel_x / sqrt(accel_y * accel_y + accel_z * accel_z)) * RAD_TO_DEG;
			//angle=roll;
			float kalman_angle=getAngle(angle_roll,gyroXrate,dt);
     9d2:	48 ec       	ldi	r20, 0xC8	; 200
     9d4:	52 e4       	ldi	r21, 0x42	; 66
     9d6:	c5 01       	movw	r24, r10
     9d8:	b4 01       	movw	r22, r8
     9da:	76 d5       	rcall	.+2796   	; 0x14c8 <__mulsf3>
     9dc:	9b 01       	movw	r18, r22
     9de:	ac 01       	movw	r20, r24
     9e0:	c7 01       	movw	r24, r14
     9e2:	b6 01       	movw	r22, r12
     9e4:	d1 d3       	rcall	.+1954   	; 0x1188 <__divsf3>
     9e6:	b5 d3       	rcall	.+1898   	; 0x1152 <asin>
     9e8:	4b 01       	movw	r8, r22
     9ea:	5c 01       	movw	r10, r24
     9ec:	e9 8c       	ldd	r14, Y+25	; 0x19
			
			printSD("",kalman_angle);
     9ee:	fa 8c       	ldd	r15, Y+26	; 0x1a
     9f0:	0b 8d       	ldd	r16, Y+27	; 0x1b
     9f2:	1c 8d       	ldd	r17, Y+28	; 0x1c
     9f4:	2d 8d       	ldd	r18, Y+29	; 0x1d
     9f6:	3e 8d       	ldd	r19, Y+30	; 0x1e
			printSD("",angle_roll);
     9f8:	4f 8d       	ldd	r20, Y+31	; 0x1f
     9fa:	58 a1       	ldd	r21, Y+32	; 0x20
     9fc:	69 89       	ldd	r22, Y+17	; 0x11
     9fe:	7a 89       	ldd	r23, Y+18	; 0x12
     a00:	8b 89       	ldd	r24, Y+19	; 0x13
     a02:	9c 89       	ldd	r25, Y+20	; 0x14
     a04:	bd dc       	rcall	.-1670   	; 0x380 <getAngle>
				
			
			double final_angleY=(angle_roll*0.996)+(angle_roll_acc*0.004);
     a06:	6b 01       	movw	r12, r22
     a08:	7c 01       	movw	r14, r24
     a0a:	ab 01       	movw	r20, r22
     a0c:	bc 01       	movw	r22, r24
     a0e:	87 e7       	ldi	r24, 0x77	; 119
     a10:	93 e0       	ldi	r25, 0x03	; 3
     a12:	18 d3       	rcall	.+1584   	; 0x1044 <printSD>
     a14:	49 89       	ldd	r20, Y+17	; 0x11
     a16:	5a 89       	ldd	r21, Y+18	; 0x12
     a18:	6b 89       	ldd	r22, Y+19	; 0x13
     a1a:	7c 89       	ldd	r23, Y+20	; 0x14
     a1c:	87 e7       	ldi	r24, 0x77	; 119
     a1e:	93 e0       	ldi	r25, 0x03	; 3
     a20:	11 d3       	rcall	.+1570   	; 0x1044 <printSD>
     a22:	2b e1       	ldi	r18, 0x1B	; 27
     a24:	3f e2       	ldi	r19, 0x2F	; 47
     a26:	45 e6       	ldi	r20, 0x65	; 101
     a28:	52 ec       	ldi	r21, 0xC2	; 194
     a2a:	c5 01       	movw	r24, r10
     a2c:	b4 01       	movw	r22, r8
     a2e:	4c d5       	rcall	.+2712   	; 0x14c8 <__mulsf3>
     a30:	2f e6       	ldi	r18, 0x6F	; 111
     a32:	32 e1       	ldi	r19, 0x12	; 18
     a34:	43 e8       	ldi	r20, 0x83	; 131
     a36:	5b e3       	ldi	r21, 0x3B	; 59
     a38:	47 d5       	rcall	.+2702   	; 0x14c8 <__mulsf3>
     a3a:	4b 01       	movw	r8, r22
     a3c:	5c 01       	movw	r10, r24
     a3e:	2b ed       	ldi	r18, 0xDB	; 219
     a40:	39 ef       	ldi	r19, 0xF9	; 249
     a42:	4e e7       	ldi	r20, 0x7E	; 126
     a44:	5f e3       	ldi	r21, 0x3F	; 63
			printSD("",final_angleY);
     a46:	69 89       	ldd	r22, Y+17	; 0x11
     a48:	7a 89       	ldd	r23, Y+18	; 0x12
     a4a:	8b 89       	ldd	r24, Y+19	; 0x13
     a4c:	9c 89       	ldd	r25, Y+20	; 0x14
     a4e:	3c d5       	rcall	.+2680   	; 0x14c8 <__mulsf3>
			printf("\n");		
     a50:	9b 01       	movw	r18, r22
     a52:	ac 01       	movw	r20, r24
     a54:	c5 01       	movw	r24, r10
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
     a56:	b4 01       	movw	r22, r8
     a58:	18 d3       	rcall	.+1584   	; 0x108a <__addsf3>
     a5a:	4b 01       	movw	r8, r22
     a5c:	5c 01       	movw	r10, r24
     a5e:	ab 01       	movw	r20, r22
     a60:	bc 01       	movw	r22, r24
     a62:	87 e7       	ldi	r24, 0x77	; 119
     a64:	93 e0       	ldi	r25, 0x03	; 3
     a66:	ee d2       	rcall	.+1500   	; 0x1044 <printSD>
     a68:	8a e0       	ldi	r24, 0x0A	; 10
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	0e 94 55 10 	call	0x20aa	; 0x20aa <putchar>
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     a70:	c7 01       	movw	r24, r14
     a72:	b6 01       	movw	r22, r12
     a74:	f1 d3       	rcall	.+2018   	; 0x1258 <__fixsfsi>
     a76:	ab 01       	movw	r20, r22
     a78:	77 23       	and	r23, r23
     a7a:	24 f4       	brge	.+8      	; 0xa84 <main+0x35c>
     a7c:	44 27       	eor	r20, r20
     a7e:	55 27       	eor	r21, r21
     a80:	46 1b       	sub	r20, r22
     a82:	57 0b       	sbc	r21, r23
				if (local_motor_delay>2000)
     a84:	ba 01       	movw	r22, r20
     a86:	84 ef       	ldi	r24, 0xF4	; 244
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	48 9f       	mul	r20, r24
				{
					pwm_delay=local_motor_delay;
     a8c:	90 01       	movw	r18, r0
     a8e:	49 9f       	mul	r20, r25
     a90:	30 0d       	add	r19, r0
     a92:	58 9f       	mul	r21, r24
				}
				int16_t reg_ = local_motor_delay;
				//printSI("ocr=",reg_);
				if ((absoulute_y<=0.8) || (final_angleY >90))
     a94:	30 0d       	add	r19, r0
     a96:	11 24       	eor	r1, r1
     a98:	c1 01       	movw	r24, r2
     a9a:	82 1b       	sub	r24, r18
     a9c:	93 0b       	sbc	r25, r19
     a9e:	81 3d       	cpi	r24, 0xD1	; 209
     aa0:	27 e0       	ldi	r18, 0x07	; 7
     aa2:	92 07       	cpc	r25, r18
     aa4:	20 f0       	brcs	.+8      	; 0xaae <main+0x386>
     aa6:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <pwm_delay+0x1>
     aaa:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <pwm_delay>
     aae:	07 2e       	mov	r0, r23
     ab0:	00 0c       	add	r0, r0
     ab2:	88 0b       	sbc	r24, r24
     ab4:	99 0b       	sbc	r25, r25
     ab6:	03 d4       	rcall	.+2054   	; 0x12be <__floatsisf>
     ab8:	2d ec       	ldi	r18, 0xCD	; 205
     aba:	3c ec       	ldi	r19, 0xCC	; 204
     abc:	4c e4       	ldi	r20, 0x4C	; 76
     abe:	5f e3       	ldi	r21, 0x3F	; 63
     ac0:	5f d3       	rcall	.+1726   	; 0x1180 <__cmpsf2>
     ac2:	18 16       	cp	r1, r24
				{
					incr=0;
     ac4:	4c f4       	brge	.+18     	; 0xad8 <main+0x3b0>
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	44 eb       	ldi	r20, 0xB4	; 180
     acc:	52 e4       	ldi	r21, 0x42	; 66
					//printf("\n");	
				}
				else 
					if (final_angleY>0.8)
     ace:	c5 01       	movw	r24, r10
     ad0:	b4 01       	movw	r22, r8
     ad2:	f6 d4       	rcall	.+2540   	; 0x14c0 <__gesf2>
     ad4:	18 16       	cp	r1, r24
     ad6:	2c f4       	brge	.+10     	; 0xae2 <main+0x3ba>
     ad8:	10 92 8c 03 	sts	0x038C, r1	; 0x80038c <incr+0x1>
     adc:	10 92 8b 03 	sts	0x038B, r1	; 0x80038b <incr>
     ae0:	8a ce       	rjmp	.-748    	; 0x7f6 <main+0xce>
					{
						cli();
     ae2:	2d ec       	ldi	r18, 0xCD	; 205
						incr=1;
     ae4:	3c ec       	ldi	r19, 0xCC	; 204
     ae6:	4c e4       	ldi	r20, 0x4C	; 76
     ae8:	5f e3       	ldi	r21, 0x3F	; 63
     aea:	c5 01       	movw	r24, r10
     aec:	b4 01       	movw	r22, r8
     aee:	e8 d4       	rcall	.+2512   	; 0x14c0 <__gesf2>
						printf(" ");
     af0:	18 16       	cp	r1, r24
     af2:	6c f4       	brge	.+26     	; 0xb0e <main+0x3e6>
     af4:	f8 94       	cli
     af6:	81 e0       	ldi	r24, 0x01	; 1
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" yes\n");					
						sei();
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <incr+0x1>
					}
					else
					{	cli();
						incr=-1;
     afe:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <incr>
     b02:	80 e2       	ldi	r24, 0x20	; 32
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	0e 94 55 10 	call	0x20aa	; 0x20aa <putchar>
						printf(" ");
     b0a:	78 94       	sei
     b0c:	74 ce       	rjmp	.-792    	; 0x7f6 <main+0xce>
     b0e:	f8 94       	cli
     b10:	8f ef       	ldi	r24, 0xFF	; 255
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" no\n");
						sei();
     b12:	9f ef       	ldi	r25, 0xFF	; 255
     b14:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <incr+0x1>
     b18:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <incr>
     b1c:	80 e2       	ldi	r24, 0x20	; 32
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	0e 94 55 10 	call	0x20aa	; 0x20aa <putchar>
     b24:	78 94       	sei
     b26:	67 ce       	rjmp	.-818    	; 0x7f6 <main+0xce>

00000b28 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     b28:	cf 93       	push	r28
     b2a:	df 93       	push	r29
     b2c:	d8 2f       	mov	r29, r24
     b2e:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     b30:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
     b32:	88 d1       	rcall	.+784    	; 0xe44 <i2c_start>
     b34:	8d 2f       	mov	r24, r29
	i2c_stop();
     b36:	dc d1       	rcall	.+952    	; 0xef0 <i2c_write>
     b38:	8c 2f       	mov	r24, r28
}
     b3a:	da d1       	rcall	.+948    	; 0xef0 <i2c_write>
     b3c:	c9 d1       	rcall	.+914    	; 0xed0 <i2c_stop>
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	08 95       	ret

00000b44 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     b44:	af 92       	push	r10
     b46:	bf 92       	push	r11
     b48:	cf 92       	push	r12
     b4a:	df 92       	push	r13
     b4c:	ff 92       	push	r15
     b4e:	0f 93       	push	r16
     b50:	1f 93       	push	r17
     b52:	cf 93       	push	r28
     b54:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     b56:	66 23       	and	r22, r22
     b58:	89 f1       	breq	.+98     	; 0xbbc <mpu6050_readBytes+0x78>
     b5a:	c5 2f       	mov	r28, r21
     b5c:	d4 2f       	mov	r29, r20
     b5e:	f6 2e       	mov	r15, r22
     b60:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     b62:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
     b64:	6f d1       	rcall	.+734    	; 0xe44 <i2c_start>
     b66:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b68:	c3 d1       	rcall	.+902    	; 0xef0 <i2c_write>
     b6a:	85 e3       	ldi	r24, 0x35	; 53
     b6c:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     b6e:	f1 f7       	brne	.-4      	; 0xb6c <mpu6050_readBytes+0x28>
     b70:	00 00       	nop
     b72:	81 ed       	ldi	r24, 0xD1	; 209
     b74:	67 d1       	rcall	.+718    	; 0xe44 <i2c_start>
     b76:	0d 2f       	mov	r16, r29
     b78:	1c 2f       	mov	r17, r28
     b7a:	cc 24       	eor	r12, r12
     b7c:	ca 94       	dec	r12
     b7e:	cf 0c       	add	r12, r15
     b80:	d1 2c       	mov	r13, r1
     b82:	ef ef       	ldi	r30, 0xFF	; 255
     b84:	ce 1a       	sub	r12, r30
     b86:	de 0a       	sbc	r13, r30
     b88:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     b8a:	d0 e0       	ldi	r29, 0x00	; 0
     b8c:	af 2c       	mov	r10, r15
     b8e:	b1 2c       	mov	r11, r1
     b90:	f1 e0       	ldi	r31, 0x01	; 1
     b92:	af 1a       	sub	r10, r31
     b94:	b1 08       	sbc	r11, r1
     b96:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     b98:	bd 06       	cpc	r11, r29
     b9a:	21 f4       	brne	.+8      	; 0xba4 <mpu6050_readBytes+0x60>
     b9c:	e4 d1       	rcall	.+968    	; 0xf66 <i2c_readNak>
     b9e:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     ba0:	80 83       	st	Z, r24
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <mpu6050_readBytes+0x66>
     ba4:	c6 d1       	rcall	.+908    	; 0xf32 <i2c_readAck>
     ba6:	f8 01       	movw	r30, r16
     ba8:	80 83       	st	Z, r24
     baa:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     bac:	0f 5f       	subi	r16, 0xFF	; 255
     bae:	1f 4f       	sbci	r17, 0xFF	; 255
     bb0:	cc 15       	cp	r28, r12
     bb2:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     bb4:	81 f7       	brne	.-32     	; 0xb96 <mpu6050_readBytes+0x52>
     bb6:	cf 2d       	mov	r28, r15
     bb8:	8b d1       	rcall	.+790    	; 0xed0 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     bba:	01 c0       	rjmp	.+2      	; 0xbbe <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     bbc:	c0 e0       	ldi	r28, 0x00	; 0
     bbe:	8c 2f       	mov	r24, r28
     bc0:	df 91       	pop	r29
     bc2:	cf 91       	pop	r28
     bc4:	1f 91       	pop	r17
     bc6:	0f 91       	pop	r16
     bc8:	ff 90       	pop	r15
     bca:	df 90       	pop	r13
     bcc:	cf 90       	pop	r12
     bce:	bf 90       	pop	r11
     bd0:	af 90       	pop	r10
     bd2:	08 95       	ret

00000bd4 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     bd4:	6f 92       	push	r6
     bd6:	7f 92       	push	r7
     bd8:	8f 92       	push	r8
     bda:	9f 92       	push	r9
     bdc:	af 92       	push	r10
     bde:	bf 92       	push	r11
     be0:	cf 92       	push	r12
     be2:	df 92       	push	r13
     be4:	ef 92       	push	r14
     be6:	ff 92       	push	r15
     be8:	0f 93       	push	r16
     bea:	1f 93       	push	r17
     bec:	cf 93       	push	r28
     bee:	df 93       	push	r29
     bf0:	cd b7       	in	r28, 0x3d	; 61
     bf2:	de b7       	in	r29, 0x3e	; 62
     bf4:	2e 97       	sbiw	r28, 0x0e	; 14
     bf6:	0f b6       	in	r0, 0x3f	; 63
     bf8:	f8 94       	cli
     bfa:	de bf       	out	0x3e, r29	; 62
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	cd bf       	out	0x3d, r28	; 61
     c00:	4c 01       	movw	r8, r24
     c02:	5b 01       	movw	r10, r22
     c04:	6a 01       	movw	r12, r20
     c06:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     c08:	ae 01       	movw	r20, r28
     c0a:	4f 5f       	subi	r20, 0xFF	; 255
     c0c:	5f 4f       	sbci	r21, 0xFF	; 255
     c0e:	6e e0       	ldi	r22, 0x0E	; 14
     c10:	8b e3       	ldi	r24, 0x3B	; 59
     c12:	98 df       	rcall	.-208    	; 0xb44 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     c14:	89 81       	ldd	r24, Y+1	; 0x01
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	98 2f       	mov	r25, r24
     c1a:	88 27       	eor	r24, r24
     c1c:	2a 81       	ldd	r18, Y+2	; 0x02
     c1e:	82 2b       	or	r24, r18
     c20:	f4 01       	movw	r30, r8
     c22:	91 83       	std	Z+1, r25	; 0x01
     c24:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     c26:	8b 81       	ldd	r24, Y+3	; 0x03
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	98 2f       	mov	r25, r24
     c2c:	88 27       	eor	r24, r24
     c2e:	2c 81       	ldd	r18, Y+4	; 0x04
     c30:	82 2b       	or	r24, r18
     c32:	f5 01       	movw	r30, r10
     c34:	91 83       	std	Z+1, r25	; 0x01
     c36:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     c38:	8d 81       	ldd	r24, Y+5	; 0x05
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	98 2f       	mov	r25, r24
     c3e:	88 27       	eor	r24, r24
     c40:	2e 81       	ldd	r18, Y+6	; 0x06
     c42:	82 2b       	or	r24, r18
     c44:	f6 01       	movw	r30, r12
     c46:	91 83       	std	Z+1, r25	; 0x01
     c48:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     c4a:	89 85       	ldd	r24, Y+9	; 0x09
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	98 2f       	mov	r25, r24
     c50:	88 27       	eor	r24, r24
     c52:	2a 85       	ldd	r18, Y+10	; 0x0a
     c54:	82 2b       	or	r24, r18
     c56:	f3 01       	movw	r30, r6
     c58:	91 83       	std	Z+1, r25	; 0x01
     c5a:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     c5c:	8b 85       	ldd	r24, Y+11	; 0x0b
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	98 2f       	mov	r25, r24
     c62:	88 27       	eor	r24, r24
     c64:	2c 85       	ldd	r18, Y+12	; 0x0c
     c66:	82 2b       	or	r24, r18
     c68:	f8 01       	movw	r30, r16
     c6a:	91 83       	std	Z+1, r25	; 0x01
     c6c:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     c6e:	8d 85       	ldd	r24, Y+13	; 0x0d
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	98 2f       	mov	r25, r24
     c74:	88 27       	eor	r24, r24
     c76:	2e 85       	ldd	r18, Y+14	; 0x0e
     c78:	82 2b       	or	r24, r18
     c7a:	f7 01       	movw	r30, r14
     c7c:	91 83       	std	Z+1, r25	; 0x01
     c7e:	80 83       	st	Z, r24
     c80:	2e 96       	adiw	r28, 0x0e	; 14
     c82:	0f b6       	in	r0, 0x3f	; 63
     c84:	f8 94       	cli
     c86:	de bf       	out	0x3e, r29	; 62
     c88:	0f be       	out	0x3f, r0	; 63
     c8a:	cd bf       	out	0x3d, r28	; 61
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	1f 91       	pop	r17
     c92:	0f 91       	pop	r16
     c94:	ff 90       	pop	r15
     c96:	ef 90       	pop	r14
     c98:	df 90       	pop	r13
     c9a:	cf 90       	pop	r12
     c9c:	bf 90       	pop	r11
     c9e:	af 90       	pop	r10
     ca0:	9f 90       	pop	r9
     ca2:	8f 90       	pop	r8
     ca4:	7f 90       	pop	r7
     ca6:	6f 90       	pop	r6
     ca8:	08 95       	ret

00000caa <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
     caa:	e1 ea       	ldi	r30, 0xA1	; 161
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	80 81       	ld	r24, Z
     cb0:	81 60       	ori	r24, 0x01	; 1
     cb2:	80 83       	st	Z, r24
     cb4:	e0 ea       	ldi	r30, 0xA0	; 160
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	80 81       	ld	r24, Z
     cba:	81 60       	ori	r24, 0x01	; 1
     cbc:	80 83       	st	Z, r24
     cbe:	80 81       	ld	r24, Z
     cc0:	80 68       	ori	r24, 0x80	; 128
     cc2:	80 83       	st	Z, r24
     cc4:	80 81       	ld	r24, Z
     cc6:	80 62       	ori	r24, 0x20	; 32
     cc8:	80 83       	st	Z, r24
     cca:	80 81       	ld	r24, Z
     ccc:	88 60       	ori	r24, 0x08	; 8
     cce:	80 83       	st	Z, r24
     cd0:	08 95       	ret

00000cd2 <setup_timer5>:
     cd2:	e1 e2       	ldi	r30, 0x21	; 33
     cd4:	f1 e0       	ldi	r31, 0x01	; 1
     cd6:	80 81       	ld	r24, Z
     cd8:	81 60       	ori	r24, 0x01	; 1
     cda:	80 83       	st	Z, r24
     cdc:	80 81       	ld	r24, Z
     cde:	88 60       	ori	r24, 0x08	; 8
     ce0:	80 83       	st	Z, r24
     ce2:	08 95       	ret

00000ce4 <Enable_timer5_compare_interrupt>:
     ce4:	e3 e7       	ldi	r30, 0x73	; 115
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	80 81       	ld	r24, Z
     cea:	82 60       	ori	r24, 0x02	; 2
     cec:	80 83       	st	Z, r24
     cee:	08 95       	ret

00000cf0 <setup_timer0>:
     cf0:	85 b5       	in	r24, 0x25	; 37
     cf2:	81 60       	ori	r24, 0x01	; 1
     cf4:	85 bd       	out	0x25, r24	; 37
     cf6:	85 b5       	in	r24, 0x25	; 37
     cf8:	82 60       	ori	r24, 0x02	; 2
     cfa:	85 bd       	out	0x25, r24	; 37
     cfc:	08 95       	ret

00000cfe <Enable_timer0_overflow_interrupt>:
     cfe:	ee e6       	ldi	r30, 0x6E	; 110
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	80 81       	ld	r24, Z
     d04:	81 60       	ori	r24, 0x01	; 1
     d06:	80 83       	st	Z, r24
     d08:	08 95       	ret

00000d0a <micros>:
     d0a:	3f b7       	in	r19, 0x3f	; 63
     d0c:	f8 94       	cli
     d0e:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <timer0_overflow_count>
     d12:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <timer0_overflow_count+0x1>
     d16:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <timer0_overflow_count+0x2>
     d1a:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <timer0_overflow_count+0x3>
     d1e:	26 b5       	in	r18, 0x26	; 38
     d20:	a8 9b       	sbis	0x15, 0	; 21
     d22:	05 c0       	rjmp	.+10     	; 0xd2e <micros+0x24>
     d24:	2f 3f       	cpi	r18, 0xFF	; 255
     d26:	19 f0       	breq	.+6      	; 0xd2e <micros+0x24>
     d28:	01 96       	adiw	r24, 0x01	; 1
     d2a:	a1 1d       	adc	r26, r1
     d2c:	b1 1d       	adc	r27, r1
     d2e:	3f bf       	out	0x3f, r19	; 63
     d30:	ba 2f       	mov	r27, r26
     d32:	a9 2f       	mov	r26, r25
     d34:	98 2f       	mov	r25, r24
     d36:	88 27       	eor	r24, r24
     d38:	82 0f       	add	r24, r18
     d3a:	91 1d       	adc	r25, r1
     d3c:	a1 1d       	adc	r26, r1
     d3e:	b1 1d       	adc	r27, r1
     d40:	bc 01       	movw	r22, r24
     d42:	cd 01       	movw	r24, r26
     d44:	66 0f       	add	r22, r22
     d46:	77 1f       	adc	r23, r23
     d48:	88 1f       	adc	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	66 0f       	add	r22, r22
     d4e:	77 1f       	adc	r23, r23
     d50:	88 1f       	adc	r24, r24
     d52:	99 1f       	adc	r25, r25
     d54:	08 95       	ret

00000d56 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
     d56:	1f 92       	push	r1
     d58:	0f 92       	push	r0
     d5a:	0f b6       	in	r0, 0x3f	; 63
     d5c:	0f 92       	push	r0
     d5e:	11 24       	eor	r1, r1
     d60:	2f 93       	push	r18
     d62:	3f 93       	push	r19
     d64:	8f 93       	push	r24
     d66:	9f 93       	push	r25
     d68:	af 93       	push	r26
     d6a:	bf 93       	push	r27
	unsigned long m = timer0_millis;
     d6c:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <timer0_millis>
     d70:	90 91 80 03 	lds	r25, 0x0380	; 0x800380 <timer0_millis+0x1>
     d74:	a0 91 81 03 	lds	r26, 0x0381	; 0x800381 <timer0_millis+0x2>
     d78:	b0 91 82 03 	lds	r27, 0x0382	; 0x800382 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
     d7c:	30 91 7e 03 	lds	r19, 0x037E	; 0x80037e <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
     d80:	23 e0       	ldi	r18, 0x03	; 3
     d82:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
     d84:	2d 37       	cpi	r18, 0x7D	; 125
     d86:	20 f4       	brcc	.+8      	; 0xd90 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
     d88:	01 96       	adiw	r24, 0x01	; 1
     d8a:	a1 1d       	adc	r26, r1
     d8c:	b1 1d       	adc	r27, r1
     d8e:	05 c0       	rjmp	.+10     	; 0xd9a <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
     d90:	26 e8       	ldi	r18, 0x86	; 134
     d92:	23 0f       	add	r18, r19
		m += 1;
     d94:	02 96       	adiw	r24, 0x02	; 2
     d96:	a1 1d       	adc	r26, r1
     d98:	b1 1d       	adc	r27, r1
	}


	timer0_fract = f;
     d9a:	20 93 7e 03 	sts	0x037E, r18	; 0x80037e <timer0_fract>
	timer0_millis = m;
     d9e:	80 93 7f 03 	sts	0x037F, r24	; 0x80037f <timer0_millis>
     da2:	90 93 80 03 	sts	0x0380, r25	; 0x800380 <timer0_millis+0x1>
     da6:	a0 93 81 03 	sts	0x0381, r26	; 0x800381 <timer0_millis+0x2>
     daa:	b0 93 82 03 	sts	0x0382, r27	; 0x800382 <timer0_millis+0x3>
	timer0_overflow_count++;
     dae:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <timer0_overflow_count>
     db2:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <timer0_overflow_count+0x1>
     db6:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <timer0_overflow_count+0x2>
     dba:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <timer0_overflow_count+0x3>
     dbe:	01 96       	adiw	r24, 0x01	; 1
     dc0:	a1 1d       	adc	r26, r1
     dc2:	b1 1d       	adc	r27, r1
     dc4:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <timer0_overflow_count>
     dc8:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <timer0_overflow_count+0x1>
     dcc:	a0 93 85 03 	sts	0x0385, r26	; 0x800385 <timer0_overflow_count+0x2>
     dd0:	b0 93 86 03 	sts	0x0386, r27	; 0x800386 <timer0_overflow_count+0x3>
}
     dd4:	bf 91       	pop	r27
     dd6:	af 91       	pop	r26
     dd8:	9f 91       	pop	r25
     dda:	8f 91       	pop	r24
     ddc:	3f 91       	pop	r19
     dde:	2f 91       	pop	r18
     de0:	0f 90       	pop	r0
     de2:	0f be       	out	0x3f, r0	; 63
     de4:	0f 90       	pop	r0
     de6:	1f 90       	pop	r1
     de8:	18 95       	reti

00000dea <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
     dea:	1f 92       	push	r1
     dec:	0f 92       	push	r0
     dee:	0f b6       	in	r0, 0x3f	; 63
     df0:	0f 92       	push	r0
     df2:	11 24       	eor	r1, r1
     df4:	0b b6       	in	r0, 0x3b	; 59
     df6:	0f 92       	push	r0
     df8:	2f 93       	push	r18
     dfa:	3f 93       	push	r19
     dfc:	4f 93       	push	r20
     dfe:	5f 93       	push	r21
     e00:	6f 93       	push	r22
     e02:	7f 93       	push	r23
     e04:	8f 93       	push	r24
     e06:	9f 93       	push	r25
     e08:	af 93       	push	r26
     e0a:	bf 93       	push	r27
     e0c:	ef 93       	push	r30
	PWM_update();
     e0e:	ff 93       	push	r31
     e10:	35 da       	rcall	.-2966   	; 0x27c <PWM_update>
     e12:	ff 91       	pop	r31
     e14:	ef 91       	pop	r30
     e16:	bf 91       	pop	r27
     e18:	af 91       	pop	r26
     e1a:	9f 91       	pop	r25
     e1c:	8f 91       	pop	r24
     e1e:	7f 91       	pop	r23
     e20:	6f 91       	pop	r22
     e22:	5f 91       	pop	r21
     e24:	4f 91       	pop	r20
     e26:	3f 91       	pop	r19
     e28:	2f 91       	pop	r18
     e2a:	0f 90       	pop	r0
     e2c:	0b be       	out	0x3b, r0	; 59
     e2e:	0f 90       	pop	r0
     e30:	0f be       	out	0x3f, r0	; 63
     e32:	0f 90       	pop	r0
     e34:	1f 90       	pop	r1
     e36:	18 95       	reti

00000e38 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     e38:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     e3c:	8c e0       	ldi	r24, 0x0C	; 12
     e3e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     e42:	08 95       	ret

00000e44 <i2c_start>:
     e44:	94 ea       	ldi	r25, 0xA4	; 164
     e46:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     e4a:	4f ef       	ldi	r20, 0xFF	; 255
     e4c:	50 e0       	ldi	r21, 0x00	; 0
     e4e:	60 e0       	ldi	r22, 0x00	; 0
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	ec eb       	ldi	r30, 0xBC	; 188
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	90 81       	ld	r25, Z
     e58:	99 23       	and	r25, r25
     e5a:	34 f0       	brlt	.+12     	; 0xe68 <i2c_start+0x24>
     e5c:	41 50       	subi	r20, 0x01	; 1
     e5e:	51 09       	sbc	r21, r1
     e60:	61 09       	sbc	r22, r1
     e62:	71 09       	sbc	r23, r1
     e64:	c0 f7       	brcc	.-16     	; 0xe56 <i2c_start+0x12>
     e66:	04 c0       	rjmp	.+8      	; 0xe70 <i2c_start+0x2c>
     e68:	45 2b       	or	r20, r21
     e6a:	46 2b       	or	r20, r22
     e6c:	47 2b       	or	r20, r23
     e6e:	41 f1       	breq	.+80     	; 0xec0 <i2c_start+0x7c>
     e70:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     e74:	98 7f       	andi	r25, 0xF8	; 248
     e76:	98 30       	cpi	r25, 0x08	; 8
     e78:	11 f0       	breq	.+4      	; 0xe7e <i2c_start+0x3a>
     e7a:	90 31       	cpi	r25, 0x10	; 16
     e7c:	19 f5       	brne	.+70     	; 0xec4 <i2c_start+0x80>
     e7e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     e82:	84 e8       	ldi	r24, 0x84	; 132
     e84:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     e88:	8f ef       	ldi	r24, 0xFF	; 255
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	a0 e0       	ldi	r26, 0x00	; 0
     e8e:	b0 e0       	ldi	r27, 0x00	; 0
     e90:	ec eb       	ldi	r30, 0xBC	; 188
     e92:	f0 e0       	ldi	r31, 0x00	; 0
     e94:	20 81       	ld	r18, Z
     e96:	22 23       	and	r18, r18
     e98:	2c f0       	brlt	.+10     	; 0xea4 <i2c_start+0x60>
     e9a:	01 97       	sbiw	r24, 0x01	; 1
     e9c:	a1 09       	sbc	r26, r1
     e9e:	b1 09       	sbc	r27, r1
     ea0:	c8 f7       	brcc	.-14     	; 0xe94 <i2c_start+0x50>
     ea2:	04 c0       	rjmp	.+8      	; 0xeac <i2c_start+0x68>
     ea4:	89 2b       	or	r24, r25
     ea6:	8a 2b       	or	r24, r26
     ea8:	8b 2b       	or	r24, r27
     eaa:	71 f0       	breq	.+28     	; 0xec8 <i2c_start+0x84>
     eac:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     eb0:	98 7f       	andi	r25, 0xF8	; 248
     eb2:	98 31       	cpi	r25, 0x18	; 24
     eb4:	59 f0       	breq	.+22     	; 0xecc <i2c_start+0x88>
     eb6:	81 e0       	ldi	r24, 0x01	; 1
     eb8:	90 34       	cpi	r25, 0x40	; 64
     eba:	49 f4       	brne	.+18     	; 0xece <i2c_start+0x8a>
     ebc:	80 e0       	ldi	r24, 0x00	; 0
     ebe:	08 95       	ret
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	08 95       	ret
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	08 95       	ret
     ec8:	81 e0       	ldi	r24, 0x01	; 1
     eca:	08 95       	ret
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	08 95       	ret

00000ed0 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     ed0:	84 e9       	ldi	r24, 0x94	; 148
     ed2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     ed6:	80 e0       	ldi	r24, 0x00	; 0
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	ec eb       	ldi	r30, 0xBC	; 188
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	20 81       	ld	r18, Z
     ee0:	24 ff       	sbrs	r18, 4
     ee2:	05 c0       	rjmp	.+10     	; 0xeee <i2c_stop+0x1e>
     ee4:	01 96       	adiw	r24, 0x01	; 1
     ee6:	81 15       	cp	r24, r1
     ee8:	21 e0       	ldi	r18, 0x01	; 1
     eea:	92 07       	cpc	r25, r18
     eec:	c1 f7       	brne	.-16     	; 0xede <i2c_stop+0xe>
     eee:	08 95       	ret

00000ef0 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     ef0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     ef4:	84 e8       	ldi	r24, 0x84	; 132
     ef6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     efa:	8f ef       	ldi	r24, 0xFF	; 255
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	a0 e0       	ldi	r26, 0x00	; 0
     f00:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     f02:	ec eb       	ldi	r30, 0xBC	; 188
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	20 81       	ld	r18, Z
     f08:	22 23       	and	r18, r18
     f0a:	2c f0       	brlt	.+10     	; 0xf16 <i2c_write+0x26>
     f0c:	01 97       	sbiw	r24, 0x01	; 1
     f0e:	a1 09       	sbc	r26, r1
     f10:	b1 09       	sbc	r27, r1
     f12:	c8 f7       	brcc	.-14     	; 0xf06 <i2c_write+0x16>
     f14:	04 c0       	rjmp	.+8      	; 0xf1e <i2c_write+0x2e>
	if(i2c_timer == 0)
     f16:	89 2b       	or	r24, r25
     f18:	8a 2b       	or	r24, r26
     f1a:	8b 2b       	or	r24, r27
     f1c:	41 f0       	breq	.+16     	; 0xf2e <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     f1e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     f22:	98 7f       	andi	r25, 0xF8	; 248
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	98 32       	cpi	r25, 0x28	; 40
     f28:	19 f4       	brne	.+6      	; 0xf30 <i2c_write+0x40>
     f2a:	80 e0       	ldi	r24, 0x00	; 0
     f2c:	08 95       	ret
     f2e:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     f30:	08 95       	ret

00000f32 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     f32:	84 ec       	ldi	r24, 0xC4	; 196
     f34:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     f38:	8f ef       	ldi	r24, 0xFF	; 255
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	a0 e0       	ldi	r26, 0x00	; 0
     f3e:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     f40:	ec eb       	ldi	r30, 0xBC	; 188
     f42:	f0 e0       	ldi	r31, 0x00	; 0
     f44:	20 81       	ld	r18, Z
     f46:	22 23       	and	r18, r18
     f48:	2c f0       	brlt	.+10     	; 0xf54 <i2c_readAck+0x22>
     f4a:	01 97       	sbiw	r24, 0x01	; 1
     f4c:	a1 09       	sbc	r26, r1
     f4e:	b1 09       	sbc	r27, r1
     f50:	c8 f7       	brcc	.-14     	; 0xf44 <i2c_readAck+0x12>
     f52:	04 c0       	rjmp	.+8      	; 0xf5c <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     f54:	89 2b       	or	r24, r25
     f56:	8a 2b       	or	r24, r26
     f58:	8b 2b       	or	r24, r27
     f5a:	19 f0       	breq	.+6      	; 0xf62 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     f5c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     f60:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     f62:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     f64:	08 95       	ret

00000f66 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     f66:	84 e8       	ldi	r24, 0x84	; 132
     f68:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     f6c:	8f ef       	ldi	r24, 0xFF	; 255
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	a0 e0       	ldi	r26, 0x00	; 0
     f72:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     f74:	ec eb       	ldi	r30, 0xBC	; 188
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	20 81       	ld	r18, Z
     f7a:	22 23       	and	r18, r18
     f7c:	2c f0       	brlt	.+10     	; 0xf88 <i2c_readNak+0x22>
     f7e:	01 97       	sbiw	r24, 0x01	; 1
     f80:	a1 09       	sbc	r26, r1
     f82:	b1 09       	sbc	r27, r1
     f84:	c8 f7       	brcc	.-14     	; 0xf78 <i2c_readNak+0x12>
     f86:	04 c0       	rjmp	.+8      	; 0xf90 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     f88:	89 2b       	or	r24, r25
     f8a:	8a 2b       	or	r24, r26
     f8c:	8b 2b       	or	r24, r27
     f8e:	19 f0       	breq	.+6      	; 0xf96 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     f90:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     f94:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     f96:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     f98:	08 95       	ret

00000f9a <USART_Init>:
{
	printf(c);
	//printf(" ");
	print16(&intToPrint);
	printf("  ");
}
     f9a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     f9e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     fa2:	88 e0       	ldi	r24, 0x08	; 8
     fa4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     fa8:	8e e0       	ldi	r24, 0x0E	; 14
     faa:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     fae:	08 95       	ret

00000fb0 <uart_putchar>:
     fb0:	cf 93       	push	r28
     fb2:	c8 2f       	mov	r28, r24
     fb4:	8a 30       	cpi	r24, 0x0A	; 10
     fb6:	11 f4       	brne	.+4      	; 0xfbc <uart_putchar+0xc>
     fb8:	8d e0       	ldi	r24, 0x0D	; 13
     fba:	fa df       	rcall	.-12     	; 0xfb0 <uart_putchar>
     fbc:	e0 ec       	ldi	r30, 0xC0	; 192
     fbe:	f0 e0       	ldi	r31, 0x00	; 0
     fc0:	80 81       	ld	r24, Z
     fc2:	85 ff       	sbrs	r24, 5
     fc4:	fd cf       	rjmp	.-6      	; 0xfc0 <uart_putchar+0x10>
     fc6:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     fca:	80 e0       	ldi	r24, 0x00	; 0
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	cf 91       	pop	r28
     fd0:	08 95       	ret

00000fd2 <printDouble>:
void printDouble(double *value)
{
     fd2:	0f 93       	push	r16
     fd4:	1f 93       	push	r17
     fd6:	cf 93       	push	r28
     fd8:	df 93       	push	r29
     fda:	cd b7       	in	r28, 0x3d	; 61
     fdc:	de b7       	in	r29, 0x3e	; 62
     fde:	64 97       	sbiw	r28, 0x14	; 20
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	de bf       	out	0x3e, r29	; 62
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	cd bf       	out	0x3d, r28	; 61
     fea:	fc 01       	movw	r30, r24
	char c[20]={0};
     fec:	8e 01       	movw	r16, r28
     fee:	0f 5f       	subi	r16, 0xFF	; 255
     ff0:	1f 4f       	sbci	r17, 0xFF	; 255
     ff2:	84 e1       	ldi	r24, 0x14	; 20
     ff4:	d8 01       	movw	r26, r16
     ff6:	1d 92       	st	X+, r1
     ff8:	8a 95       	dec	r24
     ffa:	e9 f7       	brne	.-6      	; 0xff6 <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
     ffc:	83 81       	ldd	r24, Z+3	; 0x03
     ffe:	8f 93       	push	r24
    1000:	82 81       	ldd	r24, Z+2	; 0x02
    1002:	8f 93       	push	r24
    1004:	81 81       	ldd	r24, Z+1	; 0x01
    1006:	8f 93       	push	r24
    1008:	80 81       	ld	r24, Z
    100a:	8f 93       	push	r24
    100c:	88 e7       	ldi	r24, 0x78	; 120
    100e:	93 e0       	ldi	r25, 0x03	; 3
    1010:	9f 93       	push	r25
    1012:	8f 93       	push	r24
    1014:	1f 93       	push	r17
    1016:	0f 93       	push	r16
    1018:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <sprintf>
	printf(c);
    101c:	1f 93       	push	r17
    101e:	0f 93       	push	r16
    1020:	0e 94 42 10 	call	0x2084	; 0x2084 <printf>
}
    1024:	0f b6       	in	r0, 0x3f	; 63
    1026:	f8 94       	cli
    1028:	de bf       	out	0x3e, r29	; 62
    102a:	0f be       	out	0x3f, r0	; 63
    102c:	cd bf       	out	0x3d, r28	; 61
    102e:	64 96       	adiw	r28, 0x14	; 20
    1030:	0f b6       	in	r0, 0x3f	; 63
    1032:	f8 94       	cli
    1034:	de bf       	out	0x3e, r29	; 62
    1036:	0f be       	out	0x3f, r0	; 63
    1038:	cd bf       	out	0x3d, r28	; 61
    103a:	df 91       	pop	r29
    103c:	cf 91       	pop	r28
    103e:	1f 91       	pop	r17
    1040:	0f 91       	pop	r16
    1042:	08 95       	ret

00001044 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    1044:	cf 93       	push	r28
    1046:	df 93       	push	r29
    1048:	00 d0       	rcall	.+0      	; 0x104a <printSD+0x6>
    104a:	1f 92       	push	r1
    104c:	cd b7       	in	r28, 0x3d	; 61
    104e:	de b7       	in	r29, 0x3e	; 62
    1050:	49 83       	std	Y+1, r20	; 0x01
    1052:	5a 83       	std	Y+2, r21	; 0x02
    1054:	6b 83       	std	Y+3, r22	; 0x03
    1056:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    1058:	9f 93       	push	r25
    105a:	8f 93       	push	r24
    105c:	0e 94 42 10 	call	0x2084	; 0x2084 <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    1060:	ce 01       	movw	r24, r28
    1062:	01 96       	adiw	r24, 0x01	; 1
    1064:	b6 df       	rcall	.-148    	; 0xfd2 <printDouble>
	printf("  ");
    1066:	85 e7       	ldi	r24, 0x75	; 117
    1068:	93 e0       	ldi	r25, 0x03	; 3
    106a:	9f 93       	push	r25
    106c:	8f 93       	push	r24
    106e:	0e 94 42 10 	call	0x2084	; 0x2084 <printf>
    1072:	0f 90       	pop	r0
    1074:	0f 90       	pop	r0
    1076:	0f 90       	pop	r0
    1078:	0f 90       	pop	r0
    107a:	0f 90       	pop	r0
    107c:	0f 90       	pop	r0
    107e:	0f 90       	pop	r0
    1080:	0f 90       	pop	r0
    1082:	df 91       	pop	r29
    1084:	cf 91       	pop	r28
    1086:	08 95       	ret

00001088 <__subsf3>:
    1088:	50 58       	subi	r21, 0x80	; 128

0000108a <__addsf3>:
    108a:	bb 27       	eor	r27, r27
    108c:	aa 27       	eor	r26, r26
    108e:	0e d0       	rcall	.+28     	; 0x10ac <__addsf3x>
    1090:	dd c1       	rjmp	.+954    	; 0x144c <__fp_round>
    1092:	ce d1       	rcall	.+924    	; 0x1430 <__fp_pscA>
    1094:	30 f0       	brcs	.+12     	; 0x10a2 <__addsf3+0x18>
    1096:	d3 d1       	rcall	.+934    	; 0x143e <__fp_pscB>
    1098:	20 f0       	brcs	.+8      	; 0x10a2 <__addsf3+0x18>
    109a:	31 f4       	brne	.+12     	; 0x10a8 <__addsf3+0x1e>
    109c:	9f 3f       	cpi	r25, 0xFF	; 255
    109e:	11 f4       	brne	.+4      	; 0x10a4 <__addsf3+0x1a>
    10a0:	1e f4       	brtc	.+6      	; 0x10a8 <__addsf3+0x1e>
    10a2:	8d c1       	rjmp	.+794    	; 0x13be <__fp_nan>
    10a4:	0e f4       	brtc	.+2      	; 0x10a8 <__addsf3+0x1e>
    10a6:	e0 95       	com	r30
    10a8:	e7 fb       	bst	r30, 7
    10aa:	83 c1       	rjmp	.+774    	; 0x13b2 <__fp_inf>

000010ac <__addsf3x>:
    10ac:	e9 2f       	mov	r30, r25
    10ae:	df d1       	rcall	.+958    	; 0x146e <__fp_split3>
    10b0:	80 f3       	brcs	.-32     	; 0x1092 <__addsf3+0x8>
    10b2:	ba 17       	cp	r27, r26
    10b4:	62 07       	cpc	r22, r18
    10b6:	73 07       	cpc	r23, r19
    10b8:	84 07       	cpc	r24, r20
    10ba:	95 07       	cpc	r25, r21
    10bc:	18 f0       	brcs	.+6      	; 0x10c4 <__addsf3x+0x18>
    10be:	71 f4       	brne	.+28     	; 0x10dc <__addsf3x+0x30>
    10c0:	9e f5       	brtc	.+102    	; 0x1128 <__addsf3x+0x7c>
    10c2:	f7 c1       	rjmp	.+1006   	; 0x14b2 <__fp_zero>
    10c4:	0e f4       	brtc	.+2      	; 0x10c8 <__addsf3x+0x1c>
    10c6:	e0 95       	com	r30
    10c8:	0b 2e       	mov	r0, r27
    10ca:	ba 2f       	mov	r27, r26
    10cc:	a0 2d       	mov	r26, r0
    10ce:	0b 01       	movw	r0, r22
    10d0:	b9 01       	movw	r22, r18
    10d2:	90 01       	movw	r18, r0
    10d4:	0c 01       	movw	r0, r24
    10d6:	ca 01       	movw	r24, r20
    10d8:	a0 01       	movw	r20, r0
    10da:	11 24       	eor	r1, r1
    10dc:	ff 27       	eor	r31, r31
    10de:	59 1b       	sub	r21, r25
    10e0:	99 f0       	breq	.+38     	; 0x1108 <__addsf3x+0x5c>
    10e2:	59 3f       	cpi	r21, 0xF9	; 249
    10e4:	50 f4       	brcc	.+20     	; 0x10fa <__addsf3x+0x4e>
    10e6:	50 3e       	cpi	r21, 0xE0	; 224
    10e8:	68 f1       	brcs	.+90     	; 0x1144 <__addsf3x+0x98>
    10ea:	1a 16       	cp	r1, r26
    10ec:	f0 40       	sbci	r31, 0x00	; 0
    10ee:	a2 2f       	mov	r26, r18
    10f0:	23 2f       	mov	r18, r19
    10f2:	34 2f       	mov	r19, r20
    10f4:	44 27       	eor	r20, r20
    10f6:	58 5f       	subi	r21, 0xF8	; 248
    10f8:	f3 cf       	rjmp	.-26     	; 0x10e0 <__addsf3x+0x34>
    10fa:	46 95       	lsr	r20
    10fc:	37 95       	ror	r19
    10fe:	27 95       	ror	r18
    1100:	a7 95       	ror	r26
    1102:	f0 40       	sbci	r31, 0x00	; 0
    1104:	53 95       	inc	r21
    1106:	c9 f7       	brne	.-14     	; 0x10fa <__addsf3x+0x4e>
    1108:	7e f4       	brtc	.+30     	; 0x1128 <__addsf3x+0x7c>
    110a:	1f 16       	cp	r1, r31
    110c:	ba 0b       	sbc	r27, r26
    110e:	62 0b       	sbc	r22, r18
    1110:	73 0b       	sbc	r23, r19
    1112:	84 0b       	sbc	r24, r20
    1114:	ba f0       	brmi	.+46     	; 0x1144 <__addsf3x+0x98>
    1116:	91 50       	subi	r25, 0x01	; 1
    1118:	a1 f0       	breq	.+40     	; 0x1142 <__addsf3x+0x96>
    111a:	ff 0f       	add	r31, r31
    111c:	bb 1f       	adc	r27, r27
    111e:	66 1f       	adc	r22, r22
    1120:	77 1f       	adc	r23, r23
    1122:	88 1f       	adc	r24, r24
    1124:	c2 f7       	brpl	.-16     	; 0x1116 <__addsf3x+0x6a>
    1126:	0e c0       	rjmp	.+28     	; 0x1144 <__addsf3x+0x98>
    1128:	ba 0f       	add	r27, r26
    112a:	62 1f       	adc	r22, r18
    112c:	73 1f       	adc	r23, r19
    112e:	84 1f       	adc	r24, r20
    1130:	48 f4       	brcc	.+18     	; 0x1144 <__addsf3x+0x98>
    1132:	87 95       	ror	r24
    1134:	77 95       	ror	r23
    1136:	67 95       	ror	r22
    1138:	b7 95       	ror	r27
    113a:	f7 95       	ror	r31
    113c:	9e 3f       	cpi	r25, 0xFE	; 254
    113e:	08 f0       	brcs	.+2      	; 0x1142 <__addsf3x+0x96>
    1140:	b3 cf       	rjmp	.-154    	; 0x10a8 <__addsf3+0x1e>
    1142:	93 95       	inc	r25
    1144:	88 0f       	add	r24, r24
    1146:	08 f0       	brcs	.+2      	; 0x114a <__addsf3x+0x9e>
    1148:	99 27       	eor	r25, r25
    114a:	ee 0f       	add	r30, r30
    114c:	97 95       	ror	r25
    114e:	87 95       	ror	r24
    1150:	08 95       	ret

00001152 <asin>:
    1152:	9f 93       	push	r25
    1154:	9f 77       	andi	r25, 0x7F	; 127
    1156:	ee e3       	ldi	r30, 0x3E	; 62
    1158:	89 37       	cpi	r24, 0x79	; 121
    115a:	9e 07       	cpc	r25, r30
    115c:	20 f4       	brcc	.+8      	; 0x1166 <asin+0x14>
    115e:	e4 ee       	ldi	r30, 0xE4	; 228
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	55 d1       	rcall	.+682    	; 0x140e <__fp_powsodd>
    1164:	09 c0       	rjmp	.+18     	; 0x1178 <asin+0x26>
    1166:	e6 d0       	rcall	.+460    	; 0x1334 <__fp_arccos>
    1168:	90 58       	subi	r25, 0x80	; 128
    116a:	a2 ea       	ldi	r26, 0xA2	; 162
    116c:	2a ed       	ldi	r18, 0xDA	; 218
    116e:	3f e0       	ldi	r19, 0x0F	; 15
    1170:	49 ec       	ldi	r20, 0xC9	; 201
    1172:	5f e3       	ldi	r21, 0x3F	; 63
    1174:	9b df       	rcall	.-202    	; 0x10ac <__addsf3x>
    1176:	6a d1       	rcall	.+724    	; 0x144c <__fp_round>
    1178:	0f 90       	pop	r0
    117a:	07 fc       	sbrc	r0, 7
    117c:	90 58       	subi	r25, 0x80	; 128
    117e:	08 95       	ret

00001180 <__cmpsf2>:
    1180:	f4 d0       	rcall	.+488    	; 0x136a <__fp_cmp>
    1182:	08 f4       	brcc	.+2      	; 0x1186 <__cmpsf2+0x6>
    1184:	81 e0       	ldi	r24, 0x01	; 1
    1186:	08 95       	ret

00001188 <__divsf3>:
    1188:	0c d0       	rcall	.+24     	; 0x11a2 <__divsf3x>
    118a:	60 c1       	rjmp	.+704    	; 0x144c <__fp_round>
    118c:	58 d1       	rcall	.+688    	; 0x143e <__fp_pscB>
    118e:	40 f0       	brcs	.+16     	; 0x11a0 <__divsf3+0x18>
    1190:	4f d1       	rcall	.+670    	; 0x1430 <__fp_pscA>
    1192:	30 f0       	brcs	.+12     	; 0x11a0 <__divsf3+0x18>
    1194:	21 f4       	brne	.+8      	; 0x119e <__divsf3+0x16>
    1196:	5f 3f       	cpi	r21, 0xFF	; 255
    1198:	19 f0       	breq	.+6      	; 0x11a0 <__divsf3+0x18>
    119a:	0b c1       	rjmp	.+534    	; 0x13b2 <__fp_inf>
    119c:	51 11       	cpse	r21, r1
    119e:	8a c1       	rjmp	.+788    	; 0x14b4 <__fp_szero>
    11a0:	0e c1       	rjmp	.+540    	; 0x13be <__fp_nan>

000011a2 <__divsf3x>:
    11a2:	65 d1       	rcall	.+714    	; 0x146e <__fp_split3>
    11a4:	98 f3       	brcs	.-26     	; 0x118c <__divsf3+0x4>

000011a6 <__divsf3_pse>:
    11a6:	99 23       	and	r25, r25
    11a8:	c9 f3       	breq	.-14     	; 0x119c <__divsf3+0x14>
    11aa:	55 23       	and	r21, r21
    11ac:	b1 f3       	breq	.-20     	; 0x119a <__divsf3+0x12>
    11ae:	95 1b       	sub	r25, r21
    11b0:	55 0b       	sbc	r21, r21
    11b2:	bb 27       	eor	r27, r27
    11b4:	aa 27       	eor	r26, r26
    11b6:	62 17       	cp	r22, r18
    11b8:	73 07       	cpc	r23, r19
    11ba:	84 07       	cpc	r24, r20
    11bc:	38 f0       	brcs	.+14     	; 0x11cc <__divsf3_pse+0x26>
    11be:	9f 5f       	subi	r25, 0xFF	; 255
    11c0:	5f 4f       	sbci	r21, 0xFF	; 255
    11c2:	22 0f       	add	r18, r18
    11c4:	33 1f       	adc	r19, r19
    11c6:	44 1f       	adc	r20, r20
    11c8:	aa 1f       	adc	r26, r26
    11ca:	a9 f3       	breq	.-22     	; 0x11b6 <__divsf3_pse+0x10>
    11cc:	33 d0       	rcall	.+102    	; 0x1234 <__divsf3_pse+0x8e>
    11ce:	0e 2e       	mov	r0, r30
    11d0:	3a f0       	brmi	.+14     	; 0x11e0 <__divsf3_pse+0x3a>
    11d2:	e0 e8       	ldi	r30, 0x80	; 128
    11d4:	30 d0       	rcall	.+96     	; 0x1236 <__divsf3_pse+0x90>
    11d6:	91 50       	subi	r25, 0x01	; 1
    11d8:	50 40       	sbci	r21, 0x00	; 0
    11da:	e6 95       	lsr	r30
    11dc:	00 1c       	adc	r0, r0
    11de:	ca f7       	brpl	.-14     	; 0x11d2 <__divsf3_pse+0x2c>
    11e0:	29 d0       	rcall	.+82     	; 0x1234 <__divsf3_pse+0x8e>
    11e2:	fe 2f       	mov	r31, r30
    11e4:	27 d0       	rcall	.+78     	; 0x1234 <__divsf3_pse+0x8e>
    11e6:	66 0f       	add	r22, r22
    11e8:	77 1f       	adc	r23, r23
    11ea:	88 1f       	adc	r24, r24
    11ec:	bb 1f       	adc	r27, r27
    11ee:	26 17       	cp	r18, r22
    11f0:	37 07       	cpc	r19, r23
    11f2:	48 07       	cpc	r20, r24
    11f4:	ab 07       	cpc	r26, r27
    11f6:	b0 e8       	ldi	r27, 0x80	; 128
    11f8:	09 f0       	breq	.+2      	; 0x11fc <__divsf3_pse+0x56>
    11fa:	bb 0b       	sbc	r27, r27
    11fc:	80 2d       	mov	r24, r0
    11fe:	bf 01       	movw	r22, r30
    1200:	ff 27       	eor	r31, r31
    1202:	93 58       	subi	r25, 0x83	; 131
    1204:	5f 4f       	sbci	r21, 0xFF	; 255
    1206:	2a f0       	brmi	.+10     	; 0x1212 <__divsf3_pse+0x6c>
    1208:	9e 3f       	cpi	r25, 0xFE	; 254
    120a:	51 05       	cpc	r21, r1
    120c:	68 f0       	brcs	.+26     	; 0x1228 <__divsf3_pse+0x82>
    120e:	d1 c0       	rjmp	.+418    	; 0x13b2 <__fp_inf>
    1210:	51 c1       	rjmp	.+674    	; 0x14b4 <__fp_szero>
    1212:	5f 3f       	cpi	r21, 0xFF	; 255
    1214:	ec f3       	brlt	.-6      	; 0x1210 <__divsf3_pse+0x6a>
    1216:	98 3e       	cpi	r25, 0xE8	; 232
    1218:	dc f3       	brlt	.-10     	; 0x1210 <__divsf3_pse+0x6a>
    121a:	86 95       	lsr	r24
    121c:	77 95       	ror	r23
    121e:	67 95       	ror	r22
    1220:	b7 95       	ror	r27
    1222:	f7 95       	ror	r31
    1224:	9f 5f       	subi	r25, 0xFF	; 255
    1226:	c9 f7       	brne	.-14     	; 0x121a <__divsf3_pse+0x74>
    1228:	88 0f       	add	r24, r24
    122a:	91 1d       	adc	r25, r1
    122c:	96 95       	lsr	r25
    122e:	87 95       	ror	r24
    1230:	97 f9       	bld	r25, 7
    1232:	08 95       	ret
    1234:	e1 e0       	ldi	r30, 0x01	; 1
    1236:	66 0f       	add	r22, r22
    1238:	77 1f       	adc	r23, r23
    123a:	88 1f       	adc	r24, r24
    123c:	bb 1f       	adc	r27, r27
    123e:	62 17       	cp	r22, r18
    1240:	73 07       	cpc	r23, r19
    1242:	84 07       	cpc	r24, r20
    1244:	ba 07       	cpc	r27, r26
    1246:	20 f0       	brcs	.+8      	; 0x1250 <__divsf3_pse+0xaa>
    1248:	62 1b       	sub	r22, r18
    124a:	73 0b       	sbc	r23, r19
    124c:	84 0b       	sbc	r24, r20
    124e:	ba 0b       	sbc	r27, r26
    1250:	ee 1f       	adc	r30, r30
    1252:	88 f7       	brcc	.-30     	; 0x1236 <__divsf3_pse+0x90>
    1254:	e0 95       	com	r30
    1256:	08 95       	ret

00001258 <__fixsfsi>:
    1258:	04 d0       	rcall	.+8      	; 0x1262 <__fixunssfsi>
    125a:	68 94       	set
    125c:	b1 11       	cpse	r27, r1
    125e:	2a c1       	rjmp	.+596    	; 0x14b4 <__fp_szero>
    1260:	08 95       	ret

00001262 <__fixunssfsi>:
    1262:	0d d1       	rcall	.+538    	; 0x147e <__fp_splitA>
    1264:	88 f0       	brcs	.+34     	; 0x1288 <__fixunssfsi+0x26>
    1266:	9f 57       	subi	r25, 0x7F	; 127
    1268:	90 f0       	brcs	.+36     	; 0x128e <__fixunssfsi+0x2c>
    126a:	b9 2f       	mov	r27, r25
    126c:	99 27       	eor	r25, r25
    126e:	b7 51       	subi	r27, 0x17	; 23
    1270:	a0 f0       	brcs	.+40     	; 0x129a <__fixunssfsi+0x38>
    1272:	d1 f0       	breq	.+52     	; 0x12a8 <__fixunssfsi+0x46>
    1274:	66 0f       	add	r22, r22
    1276:	77 1f       	adc	r23, r23
    1278:	88 1f       	adc	r24, r24
    127a:	99 1f       	adc	r25, r25
    127c:	1a f0       	brmi	.+6      	; 0x1284 <__fixunssfsi+0x22>
    127e:	ba 95       	dec	r27
    1280:	c9 f7       	brne	.-14     	; 0x1274 <__fixunssfsi+0x12>
    1282:	12 c0       	rjmp	.+36     	; 0x12a8 <__fixunssfsi+0x46>
    1284:	b1 30       	cpi	r27, 0x01	; 1
    1286:	81 f0       	breq	.+32     	; 0x12a8 <__fixunssfsi+0x46>
    1288:	14 d1       	rcall	.+552    	; 0x14b2 <__fp_zero>
    128a:	b1 e0       	ldi	r27, 0x01	; 1
    128c:	08 95       	ret
    128e:	11 c1       	rjmp	.+546    	; 0x14b2 <__fp_zero>
    1290:	67 2f       	mov	r22, r23
    1292:	78 2f       	mov	r23, r24
    1294:	88 27       	eor	r24, r24
    1296:	b8 5f       	subi	r27, 0xF8	; 248
    1298:	39 f0       	breq	.+14     	; 0x12a8 <__fixunssfsi+0x46>
    129a:	b9 3f       	cpi	r27, 0xF9	; 249
    129c:	cc f3       	brlt	.-14     	; 0x1290 <__fixunssfsi+0x2e>
    129e:	86 95       	lsr	r24
    12a0:	77 95       	ror	r23
    12a2:	67 95       	ror	r22
    12a4:	b3 95       	inc	r27
    12a6:	d9 f7       	brne	.-10     	; 0x129e <__fixunssfsi+0x3c>
    12a8:	3e f4       	brtc	.+14     	; 0x12b8 <__fixunssfsi+0x56>
    12aa:	90 95       	com	r25
    12ac:	80 95       	com	r24
    12ae:	70 95       	com	r23
    12b0:	61 95       	neg	r22
    12b2:	7f 4f       	sbci	r23, 0xFF	; 255
    12b4:	8f 4f       	sbci	r24, 0xFF	; 255
    12b6:	9f 4f       	sbci	r25, 0xFF	; 255
    12b8:	08 95       	ret

000012ba <__floatunsisf>:
    12ba:	e8 94       	clt
    12bc:	09 c0       	rjmp	.+18     	; 0x12d0 <__floatsisf+0x12>

000012be <__floatsisf>:
    12be:	97 fb       	bst	r25, 7
    12c0:	3e f4       	brtc	.+14     	; 0x12d0 <__floatsisf+0x12>
    12c2:	90 95       	com	r25
    12c4:	80 95       	com	r24
    12c6:	70 95       	com	r23
    12c8:	61 95       	neg	r22
    12ca:	7f 4f       	sbci	r23, 0xFF	; 255
    12cc:	8f 4f       	sbci	r24, 0xFF	; 255
    12ce:	9f 4f       	sbci	r25, 0xFF	; 255
    12d0:	99 23       	and	r25, r25
    12d2:	a9 f0       	breq	.+42     	; 0x12fe <__floatsisf+0x40>
    12d4:	f9 2f       	mov	r31, r25
    12d6:	96 e9       	ldi	r25, 0x96	; 150
    12d8:	bb 27       	eor	r27, r27
    12da:	93 95       	inc	r25
    12dc:	f6 95       	lsr	r31
    12de:	87 95       	ror	r24
    12e0:	77 95       	ror	r23
    12e2:	67 95       	ror	r22
    12e4:	b7 95       	ror	r27
    12e6:	f1 11       	cpse	r31, r1
    12e8:	f8 cf       	rjmp	.-16     	; 0x12da <__floatsisf+0x1c>
    12ea:	fa f4       	brpl	.+62     	; 0x132a <__floatsisf+0x6c>
    12ec:	bb 0f       	add	r27, r27
    12ee:	11 f4       	brne	.+4      	; 0x12f4 <__floatsisf+0x36>
    12f0:	60 ff       	sbrs	r22, 0
    12f2:	1b c0       	rjmp	.+54     	; 0x132a <__floatsisf+0x6c>
    12f4:	6f 5f       	subi	r22, 0xFF	; 255
    12f6:	7f 4f       	sbci	r23, 0xFF	; 255
    12f8:	8f 4f       	sbci	r24, 0xFF	; 255
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	16 c0       	rjmp	.+44     	; 0x132a <__floatsisf+0x6c>
    12fe:	88 23       	and	r24, r24
    1300:	11 f0       	breq	.+4      	; 0x1306 <__floatsisf+0x48>
    1302:	96 e9       	ldi	r25, 0x96	; 150
    1304:	11 c0       	rjmp	.+34     	; 0x1328 <__floatsisf+0x6a>
    1306:	77 23       	and	r23, r23
    1308:	21 f0       	breq	.+8      	; 0x1312 <__floatsisf+0x54>
    130a:	9e e8       	ldi	r25, 0x8E	; 142
    130c:	87 2f       	mov	r24, r23
    130e:	76 2f       	mov	r23, r22
    1310:	05 c0       	rjmp	.+10     	; 0x131c <__floatsisf+0x5e>
    1312:	66 23       	and	r22, r22
    1314:	71 f0       	breq	.+28     	; 0x1332 <__floatsisf+0x74>
    1316:	96 e8       	ldi	r25, 0x86	; 134
    1318:	86 2f       	mov	r24, r22
    131a:	70 e0       	ldi	r23, 0x00	; 0
    131c:	60 e0       	ldi	r22, 0x00	; 0
    131e:	2a f0       	brmi	.+10     	; 0x132a <__floatsisf+0x6c>
    1320:	9a 95       	dec	r25
    1322:	66 0f       	add	r22, r22
    1324:	77 1f       	adc	r23, r23
    1326:	88 1f       	adc	r24, r24
    1328:	da f7       	brpl	.-10     	; 0x1320 <__floatsisf+0x62>
    132a:	88 0f       	add	r24, r24
    132c:	96 95       	lsr	r25
    132e:	87 95       	ror	r24
    1330:	97 f9       	bld	r25, 7
    1332:	08 95       	ret

00001334 <__fp_arccos>:
    1334:	df 93       	push	r29
    1336:	cf 93       	push	r28
    1338:	1f 93       	push	r17
    133a:	0f 93       	push	r16
    133c:	8b 01       	movw	r16, r22
    133e:	ec 01       	movw	r28, r24
    1340:	e8 ef       	ldi	r30, 0xF8	; 248
    1342:	f0 e0       	ldi	r31, 0x00	; 0
    1344:	3f d0       	rcall	.+126    	; 0x13c4 <__fp_powser>
    1346:	82 d0       	rcall	.+260    	; 0x144c <__fp_round>
    1348:	98 01       	movw	r18, r16
    134a:	ae 01       	movw	r20, r28
    134c:	8b 01       	movw	r16, r22
    134e:	ec 01       	movw	r28, r24
    1350:	60 e0       	ldi	r22, 0x00	; 0
    1352:	70 e0       	ldi	r23, 0x00	; 0
    1354:	80 e8       	ldi	r24, 0x80	; 128
    1356:	9f e3       	ldi	r25, 0x3F	; 63
    1358:	97 de       	rcall	.-722    	; 0x1088 <__subsf3>
    135a:	1d d1       	rcall	.+570    	; 0x1596 <sqrt>
    135c:	98 01       	movw	r18, r16
    135e:	ae 01       	movw	r20, r28
    1360:	0f 91       	pop	r16
    1362:	1f 91       	pop	r17
    1364:	cf 91       	pop	r28
    1366:	df 91       	pop	r29
    1368:	bb c0       	rjmp	.+374    	; 0x14e0 <__mulsf3x>

0000136a <__fp_cmp>:
    136a:	99 0f       	add	r25, r25
    136c:	00 08       	sbc	r0, r0
    136e:	55 0f       	add	r21, r21
    1370:	aa 0b       	sbc	r26, r26
    1372:	e0 e8       	ldi	r30, 0x80	; 128
    1374:	fe ef       	ldi	r31, 0xFE	; 254
    1376:	16 16       	cp	r1, r22
    1378:	17 06       	cpc	r1, r23
    137a:	e8 07       	cpc	r30, r24
    137c:	f9 07       	cpc	r31, r25
    137e:	c0 f0       	brcs	.+48     	; 0x13b0 <__fp_cmp+0x46>
    1380:	12 16       	cp	r1, r18
    1382:	13 06       	cpc	r1, r19
    1384:	e4 07       	cpc	r30, r20
    1386:	f5 07       	cpc	r31, r21
    1388:	98 f0       	brcs	.+38     	; 0x13b0 <__fp_cmp+0x46>
    138a:	62 1b       	sub	r22, r18
    138c:	73 0b       	sbc	r23, r19
    138e:	84 0b       	sbc	r24, r20
    1390:	95 0b       	sbc	r25, r21
    1392:	39 f4       	brne	.+14     	; 0x13a2 <__fp_cmp+0x38>
    1394:	0a 26       	eor	r0, r26
    1396:	61 f0       	breq	.+24     	; 0x13b0 <__fp_cmp+0x46>
    1398:	23 2b       	or	r18, r19
    139a:	24 2b       	or	r18, r20
    139c:	25 2b       	or	r18, r21
    139e:	21 f4       	brne	.+8      	; 0x13a8 <__fp_cmp+0x3e>
    13a0:	08 95       	ret
    13a2:	0a 26       	eor	r0, r26
    13a4:	09 f4       	brne	.+2      	; 0x13a8 <__fp_cmp+0x3e>
    13a6:	a1 40       	sbci	r26, 0x01	; 1
    13a8:	a6 95       	lsr	r26
    13aa:	8f ef       	ldi	r24, 0xFF	; 255
    13ac:	81 1d       	adc	r24, r1
    13ae:	81 1d       	adc	r24, r1
    13b0:	08 95       	ret

000013b2 <__fp_inf>:
    13b2:	97 f9       	bld	r25, 7
    13b4:	9f 67       	ori	r25, 0x7F	; 127
    13b6:	80 e8       	ldi	r24, 0x80	; 128
    13b8:	70 e0       	ldi	r23, 0x00	; 0
    13ba:	60 e0       	ldi	r22, 0x00	; 0
    13bc:	08 95       	ret

000013be <__fp_nan>:
    13be:	9f ef       	ldi	r25, 0xFF	; 255
    13c0:	80 ec       	ldi	r24, 0xC0	; 192
    13c2:	08 95       	ret

000013c4 <__fp_powser>:
    13c4:	df 93       	push	r29
    13c6:	cf 93       	push	r28
    13c8:	1f 93       	push	r17
    13ca:	0f 93       	push	r16
    13cc:	ff 92       	push	r15
    13ce:	ef 92       	push	r14
    13d0:	df 92       	push	r13
    13d2:	7b 01       	movw	r14, r22
    13d4:	8c 01       	movw	r16, r24
    13d6:	68 94       	set
    13d8:	05 c0       	rjmp	.+10     	; 0x13e4 <__fp_powser+0x20>
    13da:	da 2e       	mov	r13, r26
    13dc:	ef 01       	movw	r28, r30
    13de:	80 d0       	rcall	.+256    	; 0x14e0 <__mulsf3x>
    13e0:	fe 01       	movw	r30, r28
    13e2:	e8 94       	clt
    13e4:	a5 91       	lpm	r26, Z+
    13e6:	25 91       	lpm	r18, Z+
    13e8:	35 91       	lpm	r19, Z+
    13ea:	45 91       	lpm	r20, Z+
    13ec:	55 91       	lpm	r21, Z+
    13ee:	ae f3       	brts	.-22     	; 0x13da <__fp_powser+0x16>
    13f0:	ef 01       	movw	r28, r30
    13f2:	5c de       	rcall	.-840    	; 0x10ac <__addsf3x>
    13f4:	fe 01       	movw	r30, r28
    13f6:	97 01       	movw	r18, r14
    13f8:	a8 01       	movw	r20, r16
    13fa:	da 94       	dec	r13
    13fc:	79 f7       	brne	.-34     	; 0x13dc <__fp_powser+0x18>
    13fe:	df 90       	pop	r13
    1400:	ef 90       	pop	r14
    1402:	ff 90       	pop	r15
    1404:	0f 91       	pop	r16
    1406:	1f 91       	pop	r17
    1408:	cf 91       	pop	r28
    140a:	df 91       	pop	r29
    140c:	08 95       	ret

0000140e <__fp_powsodd>:
    140e:	9f 93       	push	r25
    1410:	8f 93       	push	r24
    1412:	7f 93       	push	r23
    1414:	6f 93       	push	r22
    1416:	ff 93       	push	r31
    1418:	ef 93       	push	r30
    141a:	9b 01       	movw	r18, r22
    141c:	ac 01       	movw	r20, r24
    141e:	54 d0       	rcall	.+168    	; 0x14c8 <__mulsf3>
    1420:	ef 91       	pop	r30
    1422:	ff 91       	pop	r31
    1424:	cf df       	rcall	.-98     	; 0x13c4 <__fp_powser>
    1426:	2f 91       	pop	r18
    1428:	3f 91       	pop	r19
    142a:	4f 91       	pop	r20
    142c:	5f 91       	pop	r21
    142e:	4c c0       	rjmp	.+152    	; 0x14c8 <__mulsf3>

00001430 <__fp_pscA>:
    1430:	00 24       	eor	r0, r0
    1432:	0a 94       	dec	r0
    1434:	16 16       	cp	r1, r22
    1436:	17 06       	cpc	r1, r23
    1438:	18 06       	cpc	r1, r24
    143a:	09 06       	cpc	r0, r25
    143c:	08 95       	ret

0000143e <__fp_pscB>:
    143e:	00 24       	eor	r0, r0
    1440:	0a 94       	dec	r0
    1442:	12 16       	cp	r1, r18
    1444:	13 06       	cpc	r1, r19
    1446:	14 06       	cpc	r1, r20
    1448:	05 06       	cpc	r0, r21
    144a:	08 95       	ret

0000144c <__fp_round>:
    144c:	09 2e       	mov	r0, r25
    144e:	03 94       	inc	r0
    1450:	00 0c       	add	r0, r0
    1452:	11 f4       	brne	.+4      	; 0x1458 <__fp_round+0xc>
    1454:	88 23       	and	r24, r24
    1456:	52 f0       	brmi	.+20     	; 0x146c <__fp_round+0x20>
    1458:	bb 0f       	add	r27, r27
    145a:	40 f4       	brcc	.+16     	; 0x146c <__fp_round+0x20>
    145c:	bf 2b       	or	r27, r31
    145e:	11 f4       	brne	.+4      	; 0x1464 <__fp_round+0x18>
    1460:	60 ff       	sbrs	r22, 0
    1462:	04 c0       	rjmp	.+8      	; 0x146c <__fp_round+0x20>
    1464:	6f 5f       	subi	r22, 0xFF	; 255
    1466:	7f 4f       	sbci	r23, 0xFF	; 255
    1468:	8f 4f       	sbci	r24, 0xFF	; 255
    146a:	9f 4f       	sbci	r25, 0xFF	; 255
    146c:	08 95       	ret

0000146e <__fp_split3>:
    146e:	57 fd       	sbrc	r21, 7
    1470:	90 58       	subi	r25, 0x80	; 128
    1472:	44 0f       	add	r20, r20
    1474:	55 1f       	adc	r21, r21
    1476:	59 f0       	breq	.+22     	; 0x148e <__fp_splitA+0x10>
    1478:	5f 3f       	cpi	r21, 0xFF	; 255
    147a:	71 f0       	breq	.+28     	; 0x1498 <__fp_splitA+0x1a>
    147c:	47 95       	ror	r20

0000147e <__fp_splitA>:
    147e:	88 0f       	add	r24, r24
    1480:	97 fb       	bst	r25, 7
    1482:	99 1f       	adc	r25, r25
    1484:	61 f0       	breq	.+24     	; 0x149e <__fp_splitA+0x20>
    1486:	9f 3f       	cpi	r25, 0xFF	; 255
    1488:	79 f0       	breq	.+30     	; 0x14a8 <__fp_splitA+0x2a>
    148a:	87 95       	ror	r24
    148c:	08 95       	ret
    148e:	12 16       	cp	r1, r18
    1490:	13 06       	cpc	r1, r19
    1492:	14 06       	cpc	r1, r20
    1494:	55 1f       	adc	r21, r21
    1496:	f2 cf       	rjmp	.-28     	; 0x147c <__fp_split3+0xe>
    1498:	46 95       	lsr	r20
    149a:	f1 df       	rcall	.-30     	; 0x147e <__fp_splitA>
    149c:	08 c0       	rjmp	.+16     	; 0x14ae <__fp_splitA+0x30>
    149e:	16 16       	cp	r1, r22
    14a0:	17 06       	cpc	r1, r23
    14a2:	18 06       	cpc	r1, r24
    14a4:	99 1f       	adc	r25, r25
    14a6:	f1 cf       	rjmp	.-30     	; 0x148a <__fp_splitA+0xc>
    14a8:	86 95       	lsr	r24
    14aa:	71 05       	cpc	r23, r1
    14ac:	61 05       	cpc	r22, r1
    14ae:	08 94       	sec
    14b0:	08 95       	ret

000014b2 <__fp_zero>:
    14b2:	e8 94       	clt

000014b4 <__fp_szero>:
    14b4:	bb 27       	eor	r27, r27
    14b6:	66 27       	eor	r22, r22
    14b8:	77 27       	eor	r23, r23
    14ba:	cb 01       	movw	r24, r22
    14bc:	97 f9       	bld	r25, 7
    14be:	08 95       	ret

000014c0 <__gesf2>:
    14c0:	54 df       	rcall	.-344    	; 0x136a <__fp_cmp>
    14c2:	08 f4       	brcc	.+2      	; 0x14c6 <__gesf2+0x6>
    14c4:	8f ef       	ldi	r24, 0xFF	; 255
    14c6:	08 95       	ret

000014c8 <__mulsf3>:
    14c8:	0b d0       	rcall	.+22     	; 0x14e0 <__mulsf3x>
    14ca:	c0 cf       	rjmp	.-128    	; 0x144c <__fp_round>
    14cc:	b1 df       	rcall	.-158    	; 0x1430 <__fp_pscA>
    14ce:	28 f0       	brcs	.+10     	; 0x14da <__mulsf3+0x12>
    14d0:	b6 df       	rcall	.-148    	; 0x143e <__fp_pscB>
    14d2:	18 f0       	brcs	.+6      	; 0x14da <__mulsf3+0x12>
    14d4:	95 23       	and	r25, r21
    14d6:	09 f0       	breq	.+2      	; 0x14da <__mulsf3+0x12>
    14d8:	6c cf       	rjmp	.-296    	; 0x13b2 <__fp_inf>
    14da:	71 cf       	rjmp	.-286    	; 0x13be <__fp_nan>
    14dc:	11 24       	eor	r1, r1
    14de:	ea cf       	rjmp	.-44     	; 0x14b4 <__fp_szero>

000014e0 <__mulsf3x>:
    14e0:	c6 df       	rcall	.-116    	; 0x146e <__fp_split3>
    14e2:	a0 f3       	brcs	.-24     	; 0x14cc <__mulsf3+0x4>

000014e4 <__mulsf3_pse>:
    14e4:	95 9f       	mul	r25, r21
    14e6:	d1 f3       	breq	.-12     	; 0x14dc <__mulsf3+0x14>
    14e8:	95 0f       	add	r25, r21
    14ea:	50 e0       	ldi	r21, 0x00	; 0
    14ec:	55 1f       	adc	r21, r21
    14ee:	62 9f       	mul	r22, r18
    14f0:	f0 01       	movw	r30, r0
    14f2:	72 9f       	mul	r23, r18
    14f4:	bb 27       	eor	r27, r27
    14f6:	f0 0d       	add	r31, r0
    14f8:	b1 1d       	adc	r27, r1
    14fa:	63 9f       	mul	r22, r19
    14fc:	aa 27       	eor	r26, r26
    14fe:	f0 0d       	add	r31, r0
    1500:	b1 1d       	adc	r27, r1
    1502:	aa 1f       	adc	r26, r26
    1504:	64 9f       	mul	r22, r20
    1506:	66 27       	eor	r22, r22
    1508:	b0 0d       	add	r27, r0
    150a:	a1 1d       	adc	r26, r1
    150c:	66 1f       	adc	r22, r22
    150e:	82 9f       	mul	r24, r18
    1510:	22 27       	eor	r18, r18
    1512:	b0 0d       	add	r27, r0
    1514:	a1 1d       	adc	r26, r1
    1516:	62 1f       	adc	r22, r18
    1518:	73 9f       	mul	r23, r19
    151a:	b0 0d       	add	r27, r0
    151c:	a1 1d       	adc	r26, r1
    151e:	62 1f       	adc	r22, r18
    1520:	83 9f       	mul	r24, r19
    1522:	a0 0d       	add	r26, r0
    1524:	61 1d       	adc	r22, r1
    1526:	22 1f       	adc	r18, r18
    1528:	74 9f       	mul	r23, r20
    152a:	33 27       	eor	r19, r19
    152c:	a0 0d       	add	r26, r0
    152e:	61 1d       	adc	r22, r1
    1530:	23 1f       	adc	r18, r19
    1532:	84 9f       	mul	r24, r20
    1534:	60 0d       	add	r22, r0
    1536:	21 1d       	adc	r18, r1
    1538:	82 2f       	mov	r24, r18
    153a:	76 2f       	mov	r23, r22
    153c:	6a 2f       	mov	r22, r26
    153e:	11 24       	eor	r1, r1
    1540:	9f 57       	subi	r25, 0x7F	; 127
    1542:	50 40       	sbci	r21, 0x00	; 0
    1544:	8a f0       	brmi	.+34     	; 0x1568 <__mulsf3_pse+0x84>
    1546:	e1 f0       	breq	.+56     	; 0x1580 <__mulsf3_pse+0x9c>
    1548:	88 23       	and	r24, r24
    154a:	4a f0       	brmi	.+18     	; 0x155e <__mulsf3_pse+0x7a>
    154c:	ee 0f       	add	r30, r30
    154e:	ff 1f       	adc	r31, r31
    1550:	bb 1f       	adc	r27, r27
    1552:	66 1f       	adc	r22, r22
    1554:	77 1f       	adc	r23, r23
    1556:	88 1f       	adc	r24, r24
    1558:	91 50       	subi	r25, 0x01	; 1
    155a:	50 40       	sbci	r21, 0x00	; 0
    155c:	a9 f7       	brne	.-22     	; 0x1548 <__mulsf3_pse+0x64>
    155e:	9e 3f       	cpi	r25, 0xFE	; 254
    1560:	51 05       	cpc	r21, r1
    1562:	70 f0       	brcs	.+28     	; 0x1580 <__mulsf3_pse+0x9c>
    1564:	26 cf       	rjmp	.-436    	; 0x13b2 <__fp_inf>
    1566:	a6 cf       	rjmp	.-180    	; 0x14b4 <__fp_szero>
    1568:	5f 3f       	cpi	r21, 0xFF	; 255
    156a:	ec f3       	brlt	.-6      	; 0x1566 <__mulsf3_pse+0x82>
    156c:	98 3e       	cpi	r25, 0xE8	; 232
    156e:	dc f3       	brlt	.-10     	; 0x1566 <__mulsf3_pse+0x82>
    1570:	86 95       	lsr	r24
    1572:	77 95       	ror	r23
    1574:	67 95       	ror	r22
    1576:	b7 95       	ror	r27
    1578:	f7 95       	ror	r31
    157a:	e7 95       	ror	r30
    157c:	9f 5f       	subi	r25, 0xFF	; 255
    157e:	c1 f7       	brne	.-16     	; 0x1570 <__mulsf3_pse+0x8c>
    1580:	fe 2b       	or	r31, r30
    1582:	88 0f       	add	r24, r24
    1584:	91 1d       	adc	r25, r1
    1586:	96 95       	lsr	r25
    1588:	87 95       	ror	r24
    158a:	97 f9       	bld	r25, 7
    158c:	08 95       	ret
    158e:	11 f4       	brne	.+4      	; 0x1594 <__mulsf3_pse+0xb0>
    1590:	0e f4       	brtc	.+2      	; 0x1594 <__mulsf3_pse+0xb0>
    1592:	15 cf       	rjmp	.-470    	; 0x13be <__fp_nan>
    1594:	3e c0       	rjmp	.+124    	; 0x1612 <__fp_mpack>

00001596 <sqrt>:
    1596:	73 df       	rcall	.-282    	; 0x147e <__fp_splitA>
    1598:	d0 f3       	brcs	.-12     	; 0x158e <__mulsf3_pse+0xaa>
    159a:	99 23       	and	r25, r25
    159c:	d9 f3       	breq	.-10     	; 0x1594 <__mulsf3_pse+0xb0>
    159e:	ce f3       	brts	.-14     	; 0x1592 <__mulsf3_pse+0xae>
    15a0:	9f 57       	subi	r25, 0x7F	; 127
    15a2:	55 0b       	sbc	r21, r21
    15a4:	87 ff       	sbrs	r24, 7
    15a6:	43 d0       	rcall	.+134    	; 0x162e <__fp_norm2>
    15a8:	00 24       	eor	r0, r0
    15aa:	a0 e6       	ldi	r26, 0x60	; 96
    15ac:	40 ea       	ldi	r20, 0xA0	; 160
    15ae:	90 01       	movw	r18, r0
    15b0:	80 58       	subi	r24, 0x80	; 128
    15b2:	56 95       	lsr	r21
    15b4:	97 95       	ror	r25
    15b6:	28 f4       	brcc	.+10     	; 0x15c2 <sqrt+0x2c>
    15b8:	80 5c       	subi	r24, 0xC0	; 192
    15ba:	66 0f       	add	r22, r22
    15bc:	77 1f       	adc	r23, r23
    15be:	88 1f       	adc	r24, r24
    15c0:	20 f0       	brcs	.+8      	; 0x15ca <sqrt+0x34>
    15c2:	26 17       	cp	r18, r22
    15c4:	37 07       	cpc	r19, r23
    15c6:	48 07       	cpc	r20, r24
    15c8:	30 f4       	brcc	.+12     	; 0x15d6 <sqrt+0x40>
    15ca:	62 1b       	sub	r22, r18
    15cc:	73 0b       	sbc	r23, r19
    15ce:	84 0b       	sbc	r24, r20
    15d0:	20 29       	or	r18, r0
    15d2:	31 29       	or	r19, r1
    15d4:	4a 2b       	or	r20, r26
    15d6:	a6 95       	lsr	r26
    15d8:	17 94       	ror	r1
    15da:	07 94       	ror	r0
    15dc:	20 25       	eor	r18, r0
    15de:	31 25       	eor	r19, r1
    15e0:	4a 27       	eor	r20, r26
    15e2:	58 f7       	brcc	.-42     	; 0x15ba <sqrt+0x24>
    15e4:	66 0f       	add	r22, r22
    15e6:	77 1f       	adc	r23, r23
    15e8:	88 1f       	adc	r24, r24
    15ea:	20 f0       	brcs	.+8      	; 0x15f4 <sqrt+0x5e>
    15ec:	26 17       	cp	r18, r22
    15ee:	37 07       	cpc	r19, r23
    15f0:	48 07       	cpc	r20, r24
    15f2:	30 f4       	brcc	.+12     	; 0x1600 <sqrt+0x6a>
    15f4:	62 0b       	sbc	r22, r18
    15f6:	73 0b       	sbc	r23, r19
    15f8:	84 0b       	sbc	r24, r20
    15fa:	20 0d       	add	r18, r0
    15fc:	31 1d       	adc	r19, r1
    15fe:	41 1d       	adc	r20, r1
    1600:	a0 95       	com	r26
    1602:	81 f7       	brne	.-32     	; 0x15e4 <sqrt+0x4e>
    1604:	b9 01       	movw	r22, r18
    1606:	84 2f       	mov	r24, r20
    1608:	91 58       	subi	r25, 0x81	; 129
    160a:	88 0f       	add	r24, r24
    160c:	96 95       	lsr	r25
    160e:	87 95       	ror	r24
    1610:	08 95       	ret

00001612 <__fp_mpack>:
    1612:	9f 3f       	cpi	r25, 0xFF	; 255
    1614:	31 f0       	breq	.+12     	; 0x1622 <__fp_mpack_finite+0xc>

00001616 <__fp_mpack_finite>:
    1616:	91 50       	subi	r25, 0x01	; 1
    1618:	20 f4       	brcc	.+8      	; 0x1622 <__fp_mpack_finite+0xc>
    161a:	87 95       	ror	r24
    161c:	77 95       	ror	r23
    161e:	67 95       	ror	r22
    1620:	b7 95       	ror	r27
    1622:	88 0f       	add	r24, r24
    1624:	91 1d       	adc	r25, r1
    1626:	96 95       	lsr	r25
    1628:	87 95       	ror	r24
    162a:	97 f9       	bld	r25, 7
    162c:	08 95       	ret

0000162e <__fp_norm2>:
    162e:	91 50       	subi	r25, 0x01	; 1
    1630:	50 40       	sbci	r21, 0x00	; 0
    1632:	66 0f       	add	r22, r22
    1634:	77 1f       	adc	r23, r23
    1636:	88 1f       	adc	r24, r24
    1638:	d2 f7       	brpl	.-12     	; 0x162e <__fp_norm2>
    163a:	08 95       	ret

0000163c <vfprintf>:
    163c:	2f 92       	push	r2
    163e:	3f 92       	push	r3
    1640:	4f 92       	push	r4
    1642:	5f 92       	push	r5
    1644:	6f 92       	push	r6
    1646:	7f 92       	push	r7
    1648:	8f 92       	push	r8
    164a:	9f 92       	push	r9
    164c:	af 92       	push	r10
    164e:	bf 92       	push	r11
    1650:	cf 92       	push	r12
    1652:	df 92       	push	r13
    1654:	ef 92       	push	r14
    1656:	ff 92       	push	r15
    1658:	0f 93       	push	r16
    165a:	1f 93       	push	r17
    165c:	cf 93       	push	r28
    165e:	df 93       	push	r29
    1660:	cd b7       	in	r28, 0x3d	; 61
    1662:	de b7       	in	r29, 0x3e	; 62
    1664:	60 97       	sbiw	r28, 0x10	; 16
    1666:	0f b6       	in	r0, 0x3f	; 63
    1668:	f8 94       	cli
    166a:	de bf       	out	0x3e, r29	; 62
    166c:	0f be       	out	0x3f, r0	; 63
    166e:	cd bf       	out	0x3d, r28	; 61
    1670:	7c 01       	movw	r14, r24
    1672:	1b 01       	movw	r2, r22
    1674:	6a 01       	movw	r12, r20
    1676:	fc 01       	movw	r30, r24
    1678:	17 82       	std	Z+7, r1	; 0x07
    167a:	16 82       	std	Z+6, r1	; 0x06
    167c:	83 81       	ldd	r24, Z+3	; 0x03
    167e:	81 ff       	sbrs	r24, 1
    1680:	2a c3       	rjmp	.+1620   	; 0x1cd6 <vfprintf+0x69a>
    1682:	9e 01       	movw	r18, r28
    1684:	2f 5f       	subi	r18, 0xFF	; 255
    1686:	3f 4f       	sbci	r19, 0xFF	; 255
    1688:	39 01       	movw	r6, r18
    168a:	f7 01       	movw	r30, r14
    168c:	93 81       	ldd	r25, Z+3	; 0x03
    168e:	f1 01       	movw	r30, r2
    1690:	93 fd       	sbrc	r25, 3
    1692:	85 91       	lpm	r24, Z+
    1694:	93 ff       	sbrs	r25, 3
    1696:	81 91       	ld	r24, Z+
    1698:	1f 01       	movw	r2, r30
    169a:	88 23       	and	r24, r24
    169c:	09 f4       	brne	.+2      	; 0x16a0 <vfprintf+0x64>
    169e:	17 c3       	rjmp	.+1582   	; 0x1cce <vfprintf+0x692>
    16a0:	85 32       	cpi	r24, 0x25	; 37
    16a2:	39 f4       	brne	.+14     	; 0x16b2 <vfprintf+0x76>
    16a4:	93 fd       	sbrc	r25, 3
    16a6:	85 91       	lpm	r24, Z+
    16a8:	93 ff       	sbrs	r25, 3
    16aa:	81 91       	ld	r24, Z+
    16ac:	1f 01       	movw	r2, r30
    16ae:	85 32       	cpi	r24, 0x25	; 37
    16b0:	31 f4       	brne	.+12     	; 0x16be <vfprintf+0x82>
    16b2:	b7 01       	movw	r22, r14
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	aa d4       	rcall	.+2388   	; 0x200c <fputc>
    16b8:	56 01       	movw	r10, r12
    16ba:	65 01       	movw	r12, r10
    16bc:	e6 cf       	rjmp	.-52     	; 0x168a <vfprintf+0x4e>
    16be:	10 e0       	ldi	r17, 0x00	; 0
    16c0:	51 2c       	mov	r5, r1
    16c2:	91 2c       	mov	r9, r1
    16c4:	ff e1       	ldi	r31, 0x1F	; 31
    16c6:	f9 15       	cp	r31, r9
    16c8:	d8 f0       	brcs	.+54     	; 0x1700 <vfprintf+0xc4>
    16ca:	8b 32       	cpi	r24, 0x2B	; 43
    16cc:	79 f0       	breq	.+30     	; 0x16ec <vfprintf+0xb0>
    16ce:	38 f4       	brcc	.+14     	; 0x16de <vfprintf+0xa2>
    16d0:	80 32       	cpi	r24, 0x20	; 32
    16d2:	79 f0       	breq	.+30     	; 0x16f2 <vfprintf+0xb6>
    16d4:	83 32       	cpi	r24, 0x23	; 35
    16d6:	a1 f4       	brne	.+40     	; 0x1700 <vfprintf+0xc4>
    16d8:	f9 2d       	mov	r31, r9
    16da:	f0 61       	ori	r31, 0x10	; 16
    16dc:	2e c0       	rjmp	.+92     	; 0x173a <vfprintf+0xfe>
    16de:	8d 32       	cpi	r24, 0x2D	; 45
    16e0:	61 f0       	breq	.+24     	; 0x16fa <vfprintf+0xbe>
    16e2:	80 33       	cpi	r24, 0x30	; 48
    16e4:	69 f4       	brne	.+26     	; 0x1700 <vfprintf+0xc4>
    16e6:	29 2d       	mov	r18, r9
    16e8:	21 60       	ori	r18, 0x01	; 1
    16ea:	2d c0       	rjmp	.+90     	; 0x1746 <vfprintf+0x10a>
    16ec:	39 2d       	mov	r19, r9
    16ee:	32 60       	ori	r19, 0x02	; 2
    16f0:	93 2e       	mov	r9, r19
    16f2:	89 2d       	mov	r24, r9
    16f4:	84 60       	ori	r24, 0x04	; 4
    16f6:	98 2e       	mov	r9, r24
    16f8:	2a c0       	rjmp	.+84     	; 0x174e <vfprintf+0x112>
    16fa:	e9 2d       	mov	r30, r9
    16fc:	e8 60       	ori	r30, 0x08	; 8
    16fe:	15 c0       	rjmp	.+42     	; 0x172a <vfprintf+0xee>
    1700:	97 fc       	sbrc	r9, 7
    1702:	2d c0       	rjmp	.+90     	; 0x175e <vfprintf+0x122>
    1704:	20 ed       	ldi	r18, 0xD0	; 208
    1706:	28 0f       	add	r18, r24
    1708:	2a 30       	cpi	r18, 0x0A	; 10
    170a:	88 f4       	brcc	.+34     	; 0x172e <vfprintf+0xf2>
    170c:	96 fe       	sbrs	r9, 6
    170e:	06 c0       	rjmp	.+12     	; 0x171c <vfprintf+0xe0>
    1710:	3a e0       	ldi	r19, 0x0A	; 10
    1712:	13 9f       	mul	r17, r19
    1714:	20 0d       	add	r18, r0
    1716:	11 24       	eor	r1, r1
    1718:	12 2f       	mov	r17, r18
    171a:	19 c0       	rjmp	.+50     	; 0x174e <vfprintf+0x112>
    171c:	8a e0       	ldi	r24, 0x0A	; 10
    171e:	58 9e       	mul	r5, r24
    1720:	20 0d       	add	r18, r0
    1722:	11 24       	eor	r1, r1
    1724:	52 2e       	mov	r5, r18
    1726:	e9 2d       	mov	r30, r9
    1728:	e0 62       	ori	r30, 0x20	; 32
    172a:	9e 2e       	mov	r9, r30
    172c:	10 c0       	rjmp	.+32     	; 0x174e <vfprintf+0x112>
    172e:	8e 32       	cpi	r24, 0x2E	; 46
    1730:	31 f4       	brne	.+12     	; 0x173e <vfprintf+0x102>
    1732:	96 fc       	sbrc	r9, 6
    1734:	cc c2       	rjmp	.+1432   	; 0x1cce <vfprintf+0x692>
    1736:	f9 2d       	mov	r31, r9
    1738:	f0 64       	ori	r31, 0x40	; 64
    173a:	9f 2e       	mov	r9, r31
    173c:	08 c0       	rjmp	.+16     	; 0x174e <vfprintf+0x112>
    173e:	8c 36       	cpi	r24, 0x6C	; 108
    1740:	21 f4       	brne	.+8      	; 0x174a <vfprintf+0x10e>
    1742:	29 2d       	mov	r18, r9
    1744:	20 68       	ori	r18, 0x80	; 128
    1746:	92 2e       	mov	r9, r18
    1748:	02 c0       	rjmp	.+4      	; 0x174e <vfprintf+0x112>
    174a:	88 36       	cpi	r24, 0x68	; 104
    174c:	41 f4       	brne	.+16     	; 0x175e <vfprintf+0x122>
    174e:	f1 01       	movw	r30, r2
    1750:	93 fd       	sbrc	r25, 3
    1752:	85 91       	lpm	r24, Z+
    1754:	93 ff       	sbrs	r25, 3
    1756:	81 91       	ld	r24, Z+
    1758:	1f 01       	movw	r2, r30
    175a:	81 11       	cpse	r24, r1
    175c:	b3 cf       	rjmp	.-154    	; 0x16c4 <vfprintf+0x88>
    175e:	9b eb       	ldi	r25, 0xBB	; 187
    1760:	98 0f       	add	r25, r24
    1762:	93 30       	cpi	r25, 0x03	; 3
    1764:	20 f4       	brcc	.+8      	; 0x176e <vfprintf+0x132>
    1766:	99 2d       	mov	r25, r9
    1768:	90 61       	ori	r25, 0x10	; 16
    176a:	80 5e       	subi	r24, 0xE0	; 224
    176c:	07 c0       	rjmp	.+14     	; 0x177c <vfprintf+0x140>
    176e:	9b e9       	ldi	r25, 0x9B	; 155
    1770:	98 0f       	add	r25, r24
    1772:	93 30       	cpi	r25, 0x03	; 3
    1774:	08 f0       	brcs	.+2      	; 0x1778 <vfprintf+0x13c>
    1776:	59 c1       	rjmp	.+690    	; 0x1a2a <vfprintf+0x3ee>
    1778:	99 2d       	mov	r25, r9
    177a:	9f 7e       	andi	r25, 0xEF	; 239
    177c:	96 ff       	sbrs	r25, 6
    177e:	16 e0       	ldi	r17, 0x06	; 6
    1780:	9f 73       	andi	r25, 0x3F	; 63
    1782:	99 2e       	mov	r9, r25
    1784:	85 36       	cpi	r24, 0x65	; 101
    1786:	19 f4       	brne	.+6      	; 0x178e <vfprintf+0x152>
    1788:	90 64       	ori	r25, 0x40	; 64
    178a:	99 2e       	mov	r9, r25
    178c:	08 c0       	rjmp	.+16     	; 0x179e <vfprintf+0x162>
    178e:	86 36       	cpi	r24, 0x66	; 102
    1790:	21 f4       	brne	.+8      	; 0x179a <vfprintf+0x15e>
    1792:	39 2f       	mov	r19, r25
    1794:	30 68       	ori	r19, 0x80	; 128
    1796:	93 2e       	mov	r9, r19
    1798:	02 c0       	rjmp	.+4      	; 0x179e <vfprintf+0x162>
    179a:	11 11       	cpse	r17, r1
    179c:	11 50       	subi	r17, 0x01	; 1
    179e:	97 fe       	sbrs	r9, 7
    17a0:	07 c0       	rjmp	.+14     	; 0x17b0 <vfprintf+0x174>
    17a2:	1c 33       	cpi	r17, 0x3C	; 60
    17a4:	50 f4       	brcc	.+20     	; 0x17ba <vfprintf+0x17e>
    17a6:	44 24       	eor	r4, r4
    17a8:	43 94       	inc	r4
    17aa:	41 0e       	add	r4, r17
    17ac:	27 e0       	ldi	r18, 0x07	; 7
    17ae:	0b c0       	rjmp	.+22     	; 0x17c6 <vfprintf+0x18a>
    17b0:	18 30       	cpi	r17, 0x08	; 8
    17b2:	38 f0       	brcs	.+14     	; 0x17c2 <vfprintf+0x186>
    17b4:	27 e0       	ldi	r18, 0x07	; 7
    17b6:	17 e0       	ldi	r17, 0x07	; 7
    17b8:	05 c0       	rjmp	.+10     	; 0x17c4 <vfprintf+0x188>
    17ba:	27 e0       	ldi	r18, 0x07	; 7
    17bc:	9c e3       	ldi	r25, 0x3C	; 60
    17be:	49 2e       	mov	r4, r25
    17c0:	02 c0       	rjmp	.+4      	; 0x17c6 <vfprintf+0x18a>
    17c2:	21 2f       	mov	r18, r17
    17c4:	41 2c       	mov	r4, r1
    17c6:	56 01       	movw	r10, r12
    17c8:	84 e0       	ldi	r24, 0x04	; 4
    17ca:	a8 0e       	add	r10, r24
    17cc:	b1 1c       	adc	r11, r1
    17ce:	f6 01       	movw	r30, r12
    17d0:	60 81       	ld	r22, Z
    17d2:	71 81       	ldd	r23, Z+1	; 0x01
    17d4:	82 81       	ldd	r24, Z+2	; 0x02
    17d6:	93 81       	ldd	r25, Z+3	; 0x03
    17d8:	04 2d       	mov	r16, r4
    17da:	a3 01       	movw	r20, r6
    17dc:	df d2       	rcall	.+1470   	; 0x1d9c <__ftoa_engine>
    17de:	6c 01       	movw	r12, r24
    17e0:	f9 81       	ldd	r31, Y+1	; 0x01
    17e2:	fc 87       	std	Y+12, r31	; 0x0c
    17e4:	f0 ff       	sbrs	r31, 0
    17e6:	02 c0       	rjmp	.+4      	; 0x17ec <vfprintf+0x1b0>
    17e8:	f3 ff       	sbrs	r31, 3
    17ea:	06 c0       	rjmp	.+12     	; 0x17f8 <vfprintf+0x1bc>
    17ec:	91 fc       	sbrc	r9, 1
    17ee:	06 c0       	rjmp	.+12     	; 0x17fc <vfprintf+0x1c0>
    17f0:	92 fe       	sbrs	r9, 2
    17f2:	06 c0       	rjmp	.+12     	; 0x1800 <vfprintf+0x1c4>
    17f4:	00 e2       	ldi	r16, 0x20	; 32
    17f6:	05 c0       	rjmp	.+10     	; 0x1802 <vfprintf+0x1c6>
    17f8:	0d e2       	ldi	r16, 0x2D	; 45
    17fa:	03 c0       	rjmp	.+6      	; 0x1802 <vfprintf+0x1c6>
    17fc:	0b e2       	ldi	r16, 0x2B	; 43
    17fe:	01 c0       	rjmp	.+2      	; 0x1802 <vfprintf+0x1c6>
    1800:	00 e0       	ldi	r16, 0x00	; 0
    1802:	8c 85       	ldd	r24, Y+12	; 0x0c
    1804:	8c 70       	andi	r24, 0x0C	; 12
    1806:	19 f0       	breq	.+6      	; 0x180e <vfprintf+0x1d2>
    1808:	01 11       	cpse	r16, r1
    180a:	43 c2       	rjmp	.+1158   	; 0x1c92 <vfprintf+0x656>
    180c:	80 c2       	rjmp	.+1280   	; 0x1d0e <vfprintf+0x6d2>
    180e:	97 fe       	sbrs	r9, 7
    1810:	10 c0       	rjmp	.+32     	; 0x1832 <vfprintf+0x1f6>
    1812:	4c 0c       	add	r4, r12
    1814:	fc 85       	ldd	r31, Y+12	; 0x0c
    1816:	f4 ff       	sbrs	r31, 4
    1818:	04 c0       	rjmp	.+8      	; 0x1822 <vfprintf+0x1e6>
    181a:	8a 81       	ldd	r24, Y+2	; 0x02
    181c:	81 33       	cpi	r24, 0x31	; 49
    181e:	09 f4       	brne	.+2      	; 0x1822 <vfprintf+0x1e6>
    1820:	4a 94       	dec	r4
    1822:	14 14       	cp	r1, r4
    1824:	74 f5       	brge	.+92     	; 0x1882 <vfprintf+0x246>
    1826:	28 e0       	ldi	r18, 0x08	; 8
    1828:	24 15       	cp	r18, r4
    182a:	78 f5       	brcc	.+94     	; 0x188a <vfprintf+0x24e>
    182c:	88 e0       	ldi	r24, 0x08	; 8
    182e:	48 2e       	mov	r4, r24
    1830:	2c c0       	rjmp	.+88     	; 0x188a <vfprintf+0x24e>
    1832:	96 fc       	sbrc	r9, 6
    1834:	2a c0       	rjmp	.+84     	; 0x188a <vfprintf+0x24e>
    1836:	81 2f       	mov	r24, r17
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	8c 15       	cp	r24, r12
    183c:	9d 05       	cpc	r25, r13
    183e:	9c f0       	brlt	.+38     	; 0x1866 <vfprintf+0x22a>
    1840:	3c ef       	ldi	r19, 0xFC	; 252
    1842:	c3 16       	cp	r12, r19
    1844:	3f ef       	ldi	r19, 0xFF	; 255
    1846:	d3 06       	cpc	r13, r19
    1848:	74 f0       	brlt	.+28     	; 0x1866 <vfprintf+0x22a>
    184a:	89 2d       	mov	r24, r9
    184c:	80 68       	ori	r24, 0x80	; 128
    184e:	98 2e       	mov	r9, r24
    1850:	0a c0       	rjmp	.+20     	; 0x1866 <vfprintf+0x22a>
    1852:	e2 e0       	ldi	r30, 0x02	; 2
    1854:	f0 e0       	ldi	r31, 0x00	; 0
    1856:	ec 0f       	add	r30, r28
    1858:	fd 1f       	adc	r31, r29
    185a:	e1 0f       	add	r30, r17
    185c:	f1 1d       	adc	r31, r1
    185e:	80 81       	ld	r24, Z
    1860:	80 33       	cpi	r24, 0x30	; 48
    1862:	19 f4       	brne	.+6      	; 0x186a <vfprintf+0x22e>
    1864:	11 50       	subi	r17, 0x01	; 1
    1866:	11 11       	cpse	r17, r1
    1868:	f4 cf       	rjmp	.-24     	; 0x1852 <vfprintf+0x216>
    186a:	97 fe       	sbrs	r9, 7
    186c:	0e c0       	rjmp	.+28     	; 0x188a <vfprintf+0x24e>
    186e:	44 24       	eor	r4, r4
    1870:	43 94       	inc	r4
    1872:	41 0e       	add	r4, r17
    1874:	81 2f       	mov	r24, r17
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	c8 16       	cp	r12, r24
    187a:	d9 06       	cpc	r13, r25
    187c:	2c f4       	brge	.+10     	; 0x1888 <vfprintf+0x24c>
    187e:	1c 19       	sub	r17, r12
    1880:	04 c0       	rjmp	.+8      	; 0x188a <vfprintf+0x24e>
    1882:	44 24       	eor	r4, r4
    1884:	43 94       	inc	r4
    1886:	01 c0       	rjmp	.+2      	; 0x188a <vfprintf+0x24e>
    1888:	10 e0       	ldi	r17, 0x00	; 0
    188a:	97 fe       	sbrs	r9, 7
    188c:	06 c0       	rjmp	.+12     	; 0x189a <vfprintf+0x25e>
    188e:	1c 14       	cp	r1, r12
    1890:	1d 04       	cpc	r1, r13
    1892:	34 f4       	brge	.+12     	; 0x18a0 <vfprintf+0x264>
    1894:	c6 01       	movw	r24, r12
    1896:	01 96       	adiw	r24, 0x01	; 1
    1898:	05 c0       	rjmp	.+10     	; 0x18a4 <vfprintf+0x268>
    189a:	85 e0       	ldi	r24, 0x05	; 5
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	02 c0       	rjmp	.+4      	; 0x18a4 <vfprintf+0x268>
    18a0:	81 e0       	ldi	r24, 0x01	; 1
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	01 11       	cpse	r16, r1
    18a6:	01 96       	adiw	r24, 0x01	; 1
    18a8:	11 23       	and	r17, r17
    18aa:	31 f0       	breq	.+12     	; 0x18b8 <vfprintf+0x27c>
    18ac:	21 2f       	mov	r18, r17
    18ae:	30 e0       	ldi	r19, 0x00	; 0
    18b0:	2f 5f       	subi	r18, 0xFF	; 255
    18b2:	3f 4f       	sbci	r19, 0xFF	; 255
    18b4:	82 0f       	add	r24, r18
    18b6:	93 1f       	adc	r25, r19
    18b8:	25 2d       	mov	r18, r5
    18ba:	30 e0       	ldi	r19, 0x00	; 0
    18bc:	82 17       	cp	r24, r18
    18be:	93 07       	cpc	r25, r19
    18c0:	14 f4       	brge	.+4      	; 0x18c6 <vfprintf+0x28a>
    18c2:	58 1a       	sub	r5, r24
    18c4:	01 c0       	rjmp	.+2      	; 0x18c8 <vfprintf+0x28c>
    18c6:	51 2c       	mov	r5, r1
    18c8:	89 2d       	mov	r24, r9
    18ca:	89 70       	andi	r24, 0x09	; 9
    18cc:	41 f4       	brne	.+16     	; 0x18de <vfprintf+0x2a2>
    18ce:	55 20       	and	r5, r5
    18d0:	31 f0       	breq	.+12     	; 0x18de <vfprintf+0x2a2>
    18d2:	b7 01       	movw	r22, r14
    18d4:	80 e2       	ldi	r24, 0x20	; 32
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	99 d3       	rcall	.+1842   	; 0x200c <fputc>
    18da:	5a 94       	dec	r5
    18dc:	f8 cf       	rjmp	.-16     	; 0x18ce <vfprintf+0x292>
    18de:	00 23       	and	r16, r16
    18e0:	21 f0       	breq	.+8      	; 0x18ea <vfprintf+0x2ae>
    18e2:	b7 01       	movw	r22, r14
    18e4:	80 2f       	mov	r24, r16
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	91 d3       	rcall	.+1826   	; 0x200c <fputc>
    18ea:	93 fc       	sbrc	r9, 3
    18ec:	08 c0       	rjmp	.+16     	; 0x18fe <vfprintf+0x2c2>
    18ee:	55 20       	and	r5, r5
    18f0:	31 f0       	breq	.+12     	; 0x18fe <vfprintf+0x2c2>
    18f2:	b7 01       	movw	r22, r14
    18f4:	80 e3       	ldi	r24, 0x30	; 48
    18f6:	90 e0       	ldi	r25, 0x00	; 0
    18f8:	89 d3       	rcall	.+1810   	; 0x200c <fputc>
    18fa:	5a 94       	dec	r5
    18fc:	f8 cf       	rjmp	.-16     	; 0x18ee <vfprintf+0x2b2>
    18fe:	97 fe       	sbrs	r9, 7
    1900:	4a c0       	rjmp	.+148    	; 0x1996 <vfprintf+0x35a>
    1902:	46 01       	movw	r8, r12
    1904:	d7 fe       	sbrs	r13, 7
    1906:	02 c0       	rjmp	.+4      	; 0x190c <vfprintf+0x2d0>
    1908:	81 2c       	mov	r8, r1
    190a:	91 2c       	mov	r9, r1
    190c:	c6 01       	movw	r24, r12
    190e:	88 19       	sub	r24, r8
    1910:	99 09       	sbc	r25, r9
    1912:	f3 01       	movw	r30, r6
    1914:	e8 0f       	add	r30, r24
    1916:	f9 1f       	adc	r31, r25
    1918:	fe 87       	std	Y+14, r31	; 0x0e
    191a:	ed 87       	std	Y+13, r30	; 0x0d
    191c:	96 01       	movw	r18, r12
    191e:	24 19       	sub	r18, r4
    1920:	31 09       	sbc	r19, r1
    1922:	38 8b       	std	Y+16, r19	; 0x10
    1924:	2f 87       	std	Y+15, r18	; 0x0f
    1926:	01 2f       	mov	r16, r17
    1928:	10 e0       	ldi	r17, 0x00	; 0
    192a:	11 95       	neg	r17
    192c:	01 95       	neg	r16
    192e:	11 09       	sbc	r17, r1
    1930:	3f ef       	ldi	r19, 0xFF	; 255
    1932:	83 16       	cp	r8, r19
    1934:	93 06       	cpc	r9, r19
    1936:	21 f4       	brne	.+8      	; 0x1940 <vfprintf+0x304>
    1938:	b7 01       	movw	r22, r14
    193a:	8e e2       	ldi	r24, 0x2E	; 46
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	66 d3       	rcall	.+1740   	; 0x200c <fputc>
    1940:	c8 14       	cp	r12, r8
    1942:	d9 04       	cpc	r13, r9
    1944:	4c f0       	brlt	.+18     	; 0x1958 <vfprintf+0x31c>
    1946:	8f 85       	ldd	r24, Y+15	; 0x0f
    1948:	98 89       	ldd	r25, Y+16	; 0x10
    194a:	88 15       	cp	r24, r8
    194c:	99 05       	cpc	r25, r9
    194e:	24 f4       	brge	.+8      	; 0x1958 <vfprintf+0x31c>
    1950:	ed 85       	ldd	r30, Y+13	; 0x0d
    1952:	fe 85       	ldd	r31, Y+14	; 0x0e
    1954:	81 81       	ldd	r24, Z+1	; 0x01
    1956:	01 c0       	rjmp	.+2      	; 0x195a <vfprintf+0x31e>
    1958:	80 e3       	ldi	r24, 0x30	; 48
    195a:	f1 e0       	ldi	r31, 0x01	; 1
    195c:	8f 1a       	sub	r8, r31
    195e:	91 08       	sbc	r9, r1
    1960:	2d 85       	ldd	r18, Y+13	; 0x0d
    1962:	3e 85       	ldd	r19, Y+14	; 0x0e
    1964:	2f 5f       	subi	r18, 0xFF	; 255
    1966:	3f 4f       	sbci	r19, 0xFF	; 255
    1968:	3e 87       	std	Y+14, r19	; 0x0e
    196a:	2d 87       	std	Y+13, r18	; 0x0d
    196c:	80 16       	cp	r8, r16
    196e:	91 06       	cpc	r9, r17
    1970:	24 f0       	brlt	.+8      	; 0x197a <vfprintf+0x33e>
    1972:	b7 01       	movw	r22, r14
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	4a d3       	rcall	.+1684   	; 0x200c <fputc>
    1978:	db cf       	rjmp	.-74     	; 0x1930 <vfprintf+0x2f4>
    197a:	c8 14       	cp	r12, r8
    197c:	d9 04       	cpc	r13, r9
    197e:	41 f4       	brne	.+16     	; 0x1990 <vfprintf+0x354>
    1980:	9a 81       	ldd	r25, Y+2	; 0x02
    1982:	96 33       	cpi	r25, 0x36	; 54
    1984:	20 f4       	brcc	.+8      	; 0x198e <vfprintf+0x352>
    1986:	95 33       	cpi	r25, 0x35	; 53
    1988:	19 f4       	brne	.+6      	; 0x1990 <vfprintf+0x354>
    198a:	3c 85       	ldd	r19, Y+12	; 0x0c
    198c:	34 ff       	sbrs	r19, 4
    198e:	81 e3       	ldi	r24, 0x31	; 49
    1990:	b7 01       	movw	r22, r14
    1992:	90 e0       	ldi	r25, 0x00	; 0
    1994:	48 c0       	rjmp	.+144    	; 0x1a26 <vfprintf+0x3ea>
    1996:	8a 81       	ldd	r24, Y+2	; 0x02
    1998:	81 33       	cpi	r24, 0x31	; 49
    199a:	19 f0       	breq	.+6      	; 0x19a2 <vfprintf+0x366>
    199c:	9c 85       	ldd	r25, Y+12	; 0x0c
    199e:	9f 7e       	andi	r25, 0xEF	; 239
    19a0:	9c 87       	std	Y+12, r25	; 0x0c
    19a2:	b7 01       	movw	r22, r14
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	32 d3       	rcall	.+1636   	; 0x200c <fputc>
    19a8:	11 11       	cpse	r17, r1
    19aa:	05 c0       	rjmp	.+10     	; 0x19b6 <vfprintf+0x37a>
    19ac:	94 fc       	sbrc	r9, 4
    19ae:	16 c0       	rjmp	.+44     	; 0x19dc <vfprintf+0x3a0>
    19b0:	85 e6       	ldi	r24, 0x65	; 101
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	15 c0       	rjmp	.+42     	; 0x19e0 <vfprintf+0x3a4>
    19b6:	b7 01       	movw	r22, r14
    19b8:	8e e2       	ldi	r24, 0x2E	; 46
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	27 d3       	rcall	.+1614   	; 0x200c <fputc>
    19be:	1e 5f       	subi	r17, 0xFE	; 254
    19c0:	82 e0       	ldi	r24, 0x02	; 2
    19c2:	01 e0       	ldi	r16, 0x01	; 1
    19c4:	08 0f       	add	r16, r24
    19c6:	f3 01       	movw	r30, r6
    19c8:	e8 0f       	add	r30, r24
    19ca:	f1 1d       	adc	r31, r1
    19cc:	80 81       	ld	r24, Z
    19ce:	b7 01       	movw	r22, r14
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	1c d3       	rcall	.+1592   	; 0x200c <fputc>
    19d4:	80 2f       	mov	r24, r16
    19d6:	01 13       	cpse	r16, r17
    19d8:	f4 cf       	rjmp	.-24     	; 0x19c2 <vfprintf+0x386>
    19da:	e8 cf       	rjmp	.-48     	; 0x19ac <vfprintf+0x370>
    19dc:	85 e4       	ldi	r24, 0x45	; 69
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	b7 01       	movw	r22, r14
    19e2:	14 d3       	rcall	.+1576   	; 0x200c <fputc>
    19e4:	d7 fc       	sbrc	r13, 7
    19e6:	06 c0       	rjmp	.+12     	; 0x19f4 <vfprintf+0x3b8>
    19e8:	c1 14       	cp	r12, r1
    19ea:	d1 04       	cpc	r13, r1
    19ec:	41 f4       	brne	.+16     	; 0x19fe <vfprintf+0x3c2>
    19ee:	ec 85       	ldd	r30, Y+12	; 0x0c
    19f0:	e4 ff       	sbrs	r30, 4
    19f2:	05 c0       	rjmp	.+10     	; 0x19fe <vfprintf+0x3c2>
    19f4:	d1 94       	neg	r13
    19f6:	c1 94       	neg	r12
    19f8:	d1 08       	sbc	r13, r1
    19fa:	8d e2       	ldi	r24, 0x2D	; 45
    19fc:	01 c0       	rjmp	.+2      	; 0x1a00 <vfprintf+0x3c4>
    19fe:	8b e2       	ldi	r24, 0x2B	; 43
    1a00:	b7 01       	movw	r22, r14
    1a02:	90 e0       	ldi	r25, 0x00	; 0
    1a04:	03 d3       	rcall	.+1542   	; 0x200c <fputc>
    1a06:	80 e3       	ldi	r24, 0x30	; 48
    1a08:	2a e0       	ldi	r18, 0x0A	; 10
    1a0a:	c2 16       	cp	r12, r18
    1a0c:	d1 04       	cpc	r13, r1
    1a0e:	2c f0       	brlt	.+10     	; 0x1a1a <vfprintf+0x3de>
    1a10:	8f 5f       	subi	r24, 0xFF	; 255
    1a12:	fa e0       	ldi	r31, 0x0A	; 10
    1a14:	cf 1a       	sub	r12, r31
    1a16:	d1 08       	sbc	r13, r1
    1a18:	f7 cf       	rjmp	.-18     	; 0x1a08 <vfprintf+0x3cc>
    1a1a:	b7 01       	movw	r22, r14
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	f6 d2       	rcall	.+1516   	; 0x200c <fputc>
    1a20:	b7 01       	movw	r22, r14
    1a22:	c6 01       	movw	r24, r12
    1a24:	c0 96       	adiw	r24, 0x30	; 48
    1a26:	f2 d2       	rcall	.+1508   	; 0x200c <fputc>
    1a28:	49 c1       	rjmp	.+658    	; 0x1cbc <vfprintf+0x680>
    1a2a:	83 36       	cpi	r24, 0x63	; 99
    1a2c:	31 f0       	breq	.+12     	; 0x1a3a <vfprintf+0x3fe>
    1a2e:	83 37       	cpi	r24, 0x73	; 115
    1a30:	79 f0       	breq	.+30     	; 0x1a50 <vfprintf+0x414>
    1a32:	83 35       	cpi	r24, 0x53	; 83
    1a34:	09 f0       	breq	.+2      	; 0x1a38 <vfprintf+0x3fc>
    1a36:	52 c0       	rjmp	.+164    	; 0x1adc <vfprintf+0x4a0>
    1a38:	1f c0       	rjmp	.+62     	; 0x1a78 <vfprintf+0x43c>
    1a3a:	56 01       	movw	r10, r12
    1a3c:	32 e0       	ldi	r19, 0x02	; 2
    1a3e:	a3 0e       	add	r10, r19
    1a40:	b1 1c       	adc	r11, r1
    1a42:	f6 01       	movw	r30, r12
    1a44:	80 81       	ld	r24, Z
    1a46:	89 83       	std	Y+1, r24	; 0x01
    1a48:	01 e0       	ldi	r16, 0x01	; 1
    1a4a:	10 e0       	ldi	r17, 0x00	; 0
    1a4c:	63 01       	movw	r12, r6
    1a4e:	11 c0       	rjmp	.+34     	; 0x1a72 <vfprintf+0x436>
    1a50:	56 01       	movw	r10, r12
    1a52:	f2 e0       	ldi	r31, 0x02	; 2
    1a54:	af 0e       	add	r10, r31
    1a56:	b1 1c       	adc	r11, r1
    1a58:	f6 01       	movw	r30, r12
    1a5a:	c0 80       	ld	r12, Z
    1a5c:	d1 80       	ldd	r13, Z+1	; 0x01
    1a5e:	96 fe       	sbrs	r9, 6
    1a60:	03 c0       	rjmp	.+6      	; 0x1a68 <vfprintf+0x42c>
    1a62:	61 2f       	mov	r22, r17
    1a64:	70 e0       	ldi	r23, 0x00	; 0
    1a66:	02 c0       	rjmp	.+4      	; 0x1a6c <vfprintf+0x430>
    1a68:	6f ef       	ldi	r22, 0xFF	; 255
    1a6a:	7f ef       	ldi	r23, 0xFF	; 255
    1a6c:	c6 01       	movw	r24, r12
    1a6e:	79 d2       	rcall	.+1266   	; 0x1f62 <strnlen>
    1a70:	8c 01       	movw	r16, r24
    1a72:	f9 2d       	mov	r31, r9
    1a74:	ff 77       	andi	r31, 0x7F	; 127
    1a76:	13 c0       	rjmp	.+38     	; 0x1a9e <vfprintf+0x462>
    1a78:	56 01       	movw	r10, r12
    1a7a:	22 e0       	ldi	r18, 0x02	; 2
    1a7c:	a2 0e       	add	r10, r18
    1a7e:	b1 1c       	adc	r11, r1
    1a80:	f6 01       	movw	r30, r12
    1a82:	c0 80       	ld	r12, Z
    1a84:	d1 80       	ldd	r13, Z+1	; 0x01
    1a86:	96 fe       	sbrs	r9, 6
    1a88:	03 c0       	rjmp	.+6      	; 0x1a90 <vfprintf+0x454>
    1a8a:	61 2f       	mov	r22, r17
    1a8c:	70 e0       	ldi	r23, 0x00	; 0
    1a8e:	02 c0       	rjmp	.+4      	; 0x1a94 <vfprintf+0x458>
    1a90:	6f ef       	ldi	r22, 0xFF	; 255
    1a92:	7f ef       	ldi	r23, 0xFF	; 255
    1a94:	c6 01       	movw	r24, r12
    1a96:	5a d2       	rcall	.+1204   	; 0x1f4c <strnlen_P>
    1a98:	8c 01       	movw	r16, r24
    1a9a:	f9 2d       	mov	r31, r9
    1a9c:	f0 68       	ori	r31, 0x80	; 128
    1a9e:	9f 2e       	mov	r9, r31
    1aa0:	f3 fd       	sbrc	r31, 3
    1aa2:	18 c0       	rjmp	.+48     	; 0x1ad4 <vfprintf+0x498>
    1aa4:	85 2d       	mov	r24, r5
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	08 17       	cp	r16, r24
    1aaa:	19 07       	cpc	r17, r25
    1aac:	98 f4       	brcc	.+38     	; 0x1ad4 <vfprintf+0x498>
    1aae:	b7 01       	movw	r22, r14
    1ab0:	80 e2       	ldi	r24, 0x20	; 32
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	ab d2       	rcall	.+1366   	; 0x200c <fputc>
    1ab6:	5a 94       	dec	r5
    1ab8:	f5 cf       	rjmp	.-22     	; 0x1aa4 <vfprintf+0x468>
    1aba:	f6 01       	movw	r30, r12
    1abc:	97 fc       	sbrc	r9, 7
    1abe:	85 91       	lpm	r24, Z+
    1ac0:	97 fe       	sbrs	r9, 7
    1ac2:	81 91       	ld	r24, Z+
    1ac4:	6f 01       	movw	r12, r30
    1ac6:	b7 01       	movw	r22, r14
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	a0 d2       	rcall	.+1344   	; 0x200c <fputc>
    1acc:	51 10       	cpse	r5, r1
    1ace:	5a 94       	dec	r5
    1ad0:	01 50       	subi	r16, 0x01	; 1
    1ad2:	11 09       	sbc	r17, r1
    1ad4:	01 15       	cp	r16, r1
    1ad6:	11 05       	cpc	r17, r1
    1ad8:	81 f7       	brne	.-32     	; 0x1aba <vfprintf+0x47e>
    1ada:	f0 c0       	rjmp	.+480    	; 0x1cbc <vfprintf+0x680>
    1adc:	84 36       	cpi	r24, 0x64	; 100
    1ade:	11 f0       	breq	.+4      	; 0x1ae4 <vfprintf+0x4a8>
    1ae0:	89 36       	cpi	r24, 0x69	; 105
    1ae2:	59 f5       	brne	.+86     	; 0x1b3a <vfprintf+0x4fe>
    1ae4:	56 01       	movw	r10, r12
    1ae6:	97 fe       	sbrs	r9, 7
    1ae8:	09 c0       	rjmp	.+18     	; 0x1afc <vfprintf+0x4c0>
    1aea:	24 e0       	ldi	r18, 0x04	; 4
    1aec:	a2 0e       	add	r10, r18
    1aee:	b1 1c       	adc	r11, r1
    1af0:	f6 01       	movw	r30, r12
    1af2:	60 81       	ld	r22, Z
    1af4:	71 81       	ldd	r23, Z+1	; 0x01
    1af6:	82 81       	ldd	r24, Z+2	; 0x02
    1af8:	93 81       	ldd	r25, Z+3	; 0x03
    1afa:	0a c0       	rjmp	.+20     	; 0x1b10 <vfprintf+0x4d4>
    1afc:	f2 e0       	ldi	r31, 0x02	; 2
    1afe:	af 0e       	add	r10, r31
    1b00:	b1 1c       	adc	r11, r1
    1b02:	f6 01       	movw	r30, r12
    1b04:	60 81       	ld	r22, Z
    1b06:	71 81       	ldd	r23, Z+1	; 0x01
    1b08:	07 2e       	mov	r0, r23
    1b0a:	00 0c       	add	r0, r0
    1b0c:	88 0b       	sbc	r24, r24
    1b0e:	99 0b       	sbc	r25, r25
    1b10:	f9 2d       	mov	r31, r9
    1b12:	ff 76       	andi	r31, 0x6F	; 111
    1b14:	9f 2e       	mov	r9, r31
    1b16:	97 ff       	sbrs	r25, 7
    1b18:	09 c0       	rjmp	.+18     	; 0x1b2c <vfprintf+0x4f0>
    1b1a:	90 95       	com	r25
    1b1c:	80 95       	com	r24
    1b1e:	70 95       	com	r23
    1b20:	61 95       	neg	r22
    1b22:	7f 4f       	sbci	r23, 0xFF	; 255
    1b24:	8f 4f       	sbci	r24, 0xFF	; 255
    1b26:	9f 4f       	sbci	r25, 0xFF	; 255
    1b28:	f0 68       	ori	r31, 0x80	; 128
    1b2a:	9f 2e       	mov	r9, r31
    1b2c:	2a e0       	ldi	r18, 0x0A	; 10
    1b2e:	30 e0       	ldi	r19, 0x00	; 0
    1b30:	a3 01       	movw	r20, r6
    1b32:	ee d2       	rcall	.+1500   	; 0x2110 <__ultoa_invert>
    1b34:	c8 2e       	mov	r12, r24
    1b36:	c6 18       	sub	r12, r6
    1b38:	3e c0       	rjmp	.+124    	; 0x1bb6 <vfprintf+0x57a>
    1b3a:	09 2d       	mov	r16, r9
    1b3c:	85 37       	cpi	r24, 0x75	; 117
    1b3e:	21 f4       	brne	.+8      	; 0x1b48 <vfprintf+0x50c>
    1b40:	0f 7e       	andi	r16, 0xEF	; 239
    1b42:	2a e0       	ldi	r18, 0x0A	; 10
    1b44:	30 e0       	ldi	r19, 0x00	; 0
    1b46:	1d c0       	rjmp	.+58     	; 0x1b82 <vfprintf+0x546>
    1b48:	09 7f       	andi	r16, 0xF9	; 249
    1b4a:	8f 36       	cpi	r24, 0x6F	; 111
    1b4c:	91 f0       	breq	.+36     	; 0x1b72 <vfprintf+0x536>
    1b4e:	18 f4       	brcc	.+6      	; 0x1b56 <vfprintf+0x51a>
    1b50:	88 35       	cpi	r24, 0x58	; 88
    1b52:	59 f0       	breq	.+22     	; 0x1b6a <vfprintf+0x52e>
    1b54:	bc c0       	rjmp	.+376    	; 0x1cce <vfprintf+0x692>
    1b56:	80 37       	cpi	r24, 0x70	; 112
    1b58:	19 f0       	breq	.+6      	; 0x1b60 <vfprintf+0x524>
    1b5a:	88 37       	cpi	r24, 0x78	; 120
    1b5c:	11 f0       	breq	.+4      	; 0x1b62 <vfprintf+0x526>
    1b5e:	b7 c0       	rjmp	.+366    	; 0x1cce <vfprintf+0x692>
    1b60:	00 61       	ori	r16, 0x10	; 16
    1b62:	04 ff       	sbrs	r16, 4
    1b64:	09 c0       	rjmp	.+18     	; 0x1b78 <vfprintf+0x53c>
    1b66:	04 60       	ori	r16, 0x04	; 4
    1b68:	07 c0       	rjmp	.+14     	; 0x1b78 <vfprintf+0x53c>
    1b6a:	94 fe       	sbrs	r9, 4
    1b6c:	08 c0       	rjmp	.+16     	; 0x1b7e <vfprintf+0x542>
    1b6e:	06 60       	ori	r16, 0x06	; 6
    1b70:	06 c0       	rjmp	.+12     	; 0x1b7e <vfprintf+0x542>
    1b72:	28 e0       	ldi	r18, 0x08	; 8
    1b74:	30 e0       	ldi	r19, 0x00	; 0
    1b76:	05 c0       	rjmp	.+10     	; 0x1b82 <vfprintf+0x546>
    1b78:	20 e1       	ldi	r18, 0x10	; 16
    1b7a:	30 e0       	ldi	r19, 0x00	; 0
    1b7c:	02 c0       	rjmp	.+4      	; 0x1b82 <vfprintf+0x546>
    1b7e:	20 e1       	ldi	r18, 0x10	; 16
    1b80:	32 e0       	ldi	r19, 0x02	; 2
    1b82:	56 01       	movw	r10, r12
    1b84:	07 ff       	sbrs	r16, 7
    1b86:	09 c0       	rjmp	.+18     	; 0x1b9a <vfprintf+0x55e>
    1b88:	84 e0       	ldi	r24, 0x04	; 4
    1b8a:	a8 0e       	add	r10, r24
    1b8c:	b1 1c       	adc	r11, r1
    1b8e:	f6 01       	movw	r30, r12
    1b90:	60 81       	ld	r22, Z
    1b92:	71 81       	ldd	r23, Z+1	; 0x01
    1b94:	82 81       	ldd	r24, Z+2	; 0x02
    1b96:	93 81       	ldd	r25, Z+3	; 0x03
    1b98:	08 c0       	rjmp	.+16     	; 0x1baa <vfprintf+0x56e>
    1b9a:	f2 e0       	ldi	r31, 0x02	; 2
    1b9c:	af 0e       	add	r10, r31
    1b9e:	b1 1c       	adc	r11, r1
    1ba0:	f6 01       	movw	r30, r12
    1ba2:	60 81       	ld	r22, Z
    1ba4:	71 81       	ldd	r23, Z+1	; 0x01
    1ba6:	80 e0       	ldi	r24, 0x00	; 0
    1ba8:	90 e0       	ldi	r25, 0x00	; 0
    1baa:	a3 01       	movw	r20, r6
    1bac:	b1 d2       	rcall	.+1378   	; 0x2110 <__ultoa_invert>
    1bae:	c8 2e       	mov	r12, r24
    1bb0:	c6 18       	sub	r12, r6
    1bb2:	0f 77       	andi	r16, 0x7F	; 127
    1bb4:	90 2e       	mov	r9, r16
    1bb6:	96 fe       	sbrs	r9, 6
    1bb8:	0b c0       	rjmp	.+22     	; 0x1bd0 <vfprintf+0x594>
    1bba:	09 2d       	mov	r16, r9
    1bbc:	0e 7f       	andi	r16, 0xFE	; 254
    1bbe:	c1 16       	cp	r12, r17
    1bc0:	50 f4       	brcc	.+20     	; 0x1bd6 <vfprintf+0x59a>
    1bc2:	94 fe       	sbrs	r9, 4
    1bc4:	0a c0       	rjmp	.+20     	; 0x1bda <vfprintf+0x59e>
    1bc6:	92 fc       	sbrc	r9, 2
    1bc8:	08 c0       	rjmp	.+16     	; 0x1bda <vfprintf+0x59e>
    1bca:	09 2d       	mov	r16, r9
    1bcc:	0e 7e       	andi	r16, 0xEE	; 238
    1bce:	05 c0       	rjmp	.+10     	; 0x1bda <vfprintf+0x59e>
    1bd0:	dc 2c       	mov	r13, r12
    1bd2:	09 2d       	mov	r16, r9
    1bd4:	03 c0       	rjmp	.+6      	; 0x1bdc <vfprintf+0x5a0>
    1bd6:	dc 2c       	mov	r13, r12
    1bd8:	01 c0       	rjmp	.+2      	; 0x1bdc <vfprintf+0x5a0>
    1bda:	d1 2e       	mov	r13, r17
    1bdc:	04 ff       	sbrs	r16, 4
    1bde:	0d c0       	rjmp	.+26     	; 0x1bfa <vfprintf+0x5be>
    1be0:	fe 01       	movw	r30, r28
    1be2:	ec 0d       	add	r30, r12
    1be4:	f1 1d       	adc	r31, r1
    1be6:	80 81       	ld	r24, Z
    1be8:	80 33       	cpi	r24, 0x30	; 48
    1bea:	11 f4       	brne	.+4      	; 0x1bf0 <vfprintf+0x5b4>
    1bec:	09 7e       	andi	r16, 0xE9	; 233
    1bee:	09 c0       	rjmp	.+18     	; 0x1c02 <vfprintf+0x5c6>
    1bf0:	02 ff       	sbrs	r16, 2
    1bf2:	06 c0       	rjmp	.+12     	; 0x1c00 <vfprintf+0x5c4>
    1bf4:	d3 94       	inc	r13
    1bf6:	d3 94       	inc	r13
    1bf8:	04 c0       	rjmp	.+8      	; 0x1c02 <vfprintf+0x5c6>
    1bfa:	80 2f       	mov	r24, r16
    1bfc:	86 78       	andi	r24, 0x86	; 134
    1bfe:	09 f0       	breq	.+2      	; 0x1c02 <vfprintf+0x5c6>
    1c00:	d3 94       	inc	r13
    1c02:	03 fd       	sbrc	r16, 3
    1c04:	10 c0       	rjmp	.+32     	; 0x1c26 <vfprintf+0x5ea>
    1c06:	00 ff       	sbrs	r16, 0
    1c08:	06 c0       	rjmp	.+12     	; 0x1c16 <vfprintf+0x5da>
    1c0a:	1c 2d       	mov	r17, r12
    1c0c:	d5 14       	cp	r13, r5
    1c0e:	78 f4       	brcc	.+30     	; 0x1c2e <vfprintf+0x5f2>
    1c10:	15 0d       	add	r17, r5
    1c12:	1d 19       	sub	r17, r13
    1c14:	0c c0       	rjmp	.+24     	; 0x1c2e <vfprintf+0x5f2>
    1c16:	d5 14       	cp	r13, r5
    1c18:	50 f4       	brcc	.+20     	; 0x1c2e <vfprintf+0x5f2>
    1c1a:	b7 01       	movw	r22, r14
    1c1c:	80 e2       	ldi	r24, 0x20	; 32
    1c1e:	90 e0       	ldi	r25, 0x00	; 0
    1c20:	f5 d1       	rcall	.+1002   	; 0x200c <fputc>
    1c22:	d3 94       	inc	r13
    1c24:	f8 cf       	rjmp	.-16     	; 0x1c16 <vfprintf+0x5da>
    1c26:	d5 14       	cp	r13, r5
    1c28:	10 f4       	brcc	.+4      	; 0x1c2e <vfprintf+0x5f2>
    1c2a:	5d 18       	sub	r5, r13
    1c2c:	01 c0       	rjmp	.+2      	; 0x1c30 <vfprintf+0x5f4>
    1c2e:	51 2c       	mov	r5, r1
    1c30:	04 ff       	sbrs	r16, 4
    1c32:	0f c0       	rjmp	.+30     	; 0x1c52 <vfprintf+0x616>
    1c34:	b7 01       	movw	r22, r14
    1c36:	80 e3       	ldi	r24, 0x30	; 48
    1c38:	90 e0       	ldi	r25, 0x00	; 0
    1c3a:	e8 d1       	rcall	.+976    	; 0x200c <fputc>
    1c3c:	02 ff       	sbrs	r16, 2
    1c3e:	16 c0       	rjmp	.+44     	; 0x1c6c <vfprintf+0x630>
    1c40:	01 fd       	sbrc	r16, 1
    1c42:	03 c0       	rjmp	.+6      	; 0x1c4a <vfprintf+0x60e>
    1c44:	88 e7       	ldi	r24, 0x78	; 120
    1c46:	90 e0       	ldi	r25, 0x00	; 0
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <vfprintf+0x612>
    1c4a:	88 e5       	ldi	r24, 0x58	; 88
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	b7 01       	movw	r22, r14
    1c50:	0c c0       	rjmp	.+24     	; 0x1c6a <vfprintf+0x62e>
    1c52:	80 2f       	mov	r24, r16
    1c54:	86 78       	andi	r24, 0x86	; 134
    1c56:	51 f0       	breq	.+20     	; 0x1c6c <vfprintf+0x630>
    1c58:	01 ff       	sbrs	r16, 1
    1c5a:	02 c0       	rjmp	.+4      	; 0x1c60 <vfprintf+0x624>
    1c5c:	8b e2       	ldi	r24, 0x2B	; 43
    1c5e:	01 c0       	rjmp	.+2      	; 0x1c62 <vfprintf+0x626>
    1c60:	80 e2       	ldi	r24, 0x20	; 32
    1c62:	07 fd       	sbrc	r16, 7
    1c64:	8d e2       	ldi	r24, 0x2D	; 45
    1c66:	b7 01       	movw	r22, r14
    1c68:	90 e0       	ldi	r25, 0x00	; 0
    1c6a:	d0 d1       	rcall	.+928    	; 0x200c <fputc>
    1c6c:	c1 16       	cp	r12, r17
    1c6e:	30 f4       	brcc	.+12     	; 0x1c7c <vfprintf+0x640>
    1c70:	b7 01       	movw	r22, r14
    1c72:	80 e3       	ldi	r24, 0x30	; 48
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	ca d1       	rcall	.+916    	; 0x200c <fputc>
    1c78:	11 50       	subi	r17, 0x01	; 1
    1c7a:	f8 cf       	rjmp	.-16     	; 0x1c6c <vfprintf+0x630>
    1c7c:	ca 94       	dec	r12
    1c7e:	f3 01       	movw	r30, r6
    1c80:	ec 0d       	add	r30, r12
    1c82:	f1 1d       	adc	r31, r1
    1c84:	80 81       	ld	r24, Z
    1c86:	b7 01       	movw	r22, r14
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	c0 d1       	rcall	.+896    	; 0x200c <fputc>
    1c8c:	c1 10       	cpse	r12, r1
    1c8e:	f6 cf       	rjmp	.-20     	; 0x1c7c <vfprintf+0x640>
    1c90:	15 c0       	rjmp	.+42     	; 0x1cbc <vfprintf+0x680>
    1c92:	f4 e0       	ldi	r31, 0x04	; 4
    1c94:	f5 15       	cp	r31, r5
    1c96:	50 f5       	brcc	.+84     	; 0x1cec <vfprintf+0x6b0>
    1c98:	84 e0       	ldi	r24, 0x04	; 4
    1c9a:	58 1a       	sub	r5, r24
    1c9c:	93 fe       	sbrs	r9, 3
    1c9e:	1e c0       	rjmp	.+60     	; 0x1cdc <vfprintf+0x6a0>
    1ca0:	01 11       	cpse	r16, r1
    1ca2:	25 c0       	rjmp	.+74     	; 0x1cee <vfprintf+0x6b2>
    1ca4:	2c 85       	ldd	r18, Y+12	; 0x0c
    1ca6:	23 ff       	sbrs	r18, 3
    1ca8:	27 c0       	rjmp	.+78     	; 0x1cf8 <vfprintf+0x6bc>
    1caa:	00 e2       	ldi	r16, 0x20	; 32
    1cac:	11 e0       	ldi	r17, 0x01	; 1
    1cae:	39 2d       	mov	r19, r9
    1cb0:	30 71       	andi	r19, 0x10	; 16
    1cb2:	93 2e       	mov	r9, r19
    1cb4:	f8 01       	movw	r30, r16
    1cb6:	84 91       	lpm	r24, Z
    1cb8:	81 11       	cpse	r24, r1
    1cba:	21 c0       	rjmp	.+66     	; 0x1cfe <vfprintf+0x6c2>
    1cbc:	55 20       	and	r5, r5
    1cbe:	09 f4       	brne	.+2      	; 0x1cc2 <vfprintf+0x686>
    1cc0:	fc cc       	rjmp	.-1544   	; 0x16ba <vfprintf+0x7e>
    1cc2:	b7 01       	movw	r22, r14
    1cc4:	80 e2       	ldi	r24, 0x20	; 32
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	a1 d1       	rcall	.+834    	; 0x200c <fputc>
    1cca:	5a 94       	dec	r5
    1ccc:	f7 cf       	rjmp	.-18     	; 0x1cbc <vfprintf+0x680>
    1cce:	f7 01       	movw	r30, r14
    1cd0:	86 81       	ldd	r24, Z+6	; 0x06
    1cd2:	97 81       	ldd	r25, Z+7	; 0x07
    1cd4:	23 c0       	rjmp	.+70     	; 0x1d1c <vfprintf+0x6e0>
    1cd6:	8f ef       	ldi	r24, 0xFF	; 255
    1cd8:	9f ef       	ldi	r25, 0xFF	; 255
    1cda:	20 c0       	rjmp	.+64     	; 0x1d1c <vfprintf+0x6e0>
    1cdc:	b7 01       	movw	r22, r14
    1cde:	80 e2       	ldi	r24, 0x20	; 32
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	94 d1       	rcall	.+808    	; 0x200c <fputc>
    1ce4:	5a 94       	dec	r5
    1ce6:	51 10       	cpse	r5, r1
    1ce8:	f9 cf       	rjmp	.-14     	; 0x1cdc <vfprintf+0x6a0>
    1cea:	da cf       	rjmp	.-76     	; 0x1ca0 <vfprintf+0x664>
    1cec:	51 2c       	mov	r5, r1
    1cee:	b7 01       	movw	r22, r14
    1cf0:	80 2f       	mov	r24, r16
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	8b d1       	rcall	.+790    	; 0x200c <fputc>
    1cf6:	d6 cf       	rjmp	.-84     	; 0x1ca4 <vfprintf+0x668>
    1cf8:	04 e2       	ldi	r16, 0x24	; 36
    1cfa:	11 e0       	ldi	r17, 0x01	; 1
    1cfc:	d8 cf       	rjmp	.-80     	; 0x1cae <vfprintf+0x672>
    1cfe:	91 10       	cpse	r9, r1
    1d00:	80 52       	subi	r24, 0x20	; 32
    1d02:	b7 01       	movw	r22, r14
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	82 d1       	rcall	.+772    	; 0x200c <fputc>
    1d08:	0f 5f       	subi	r16, 0xFF	; 255
    1d0a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d0c:	d3 cf       	rjmp	.-90     	; 0x1cb4 <vfprintf+0x678>
    1d0e:	23 e0       	ldi	r18, 0x03	; 3
    1d10:	25 15       	cp	r18, r5
    1d12:	10 f4       	brcc	.+4      	; 0x1d18 <vfprintf+0x6dc>
    1d14:	83 e0       	ldi	r24, 0x03	; 3
    1d16:	c1 cf       	rjmp	.-126    	; 0x1c9a <vfprintf+0x65e>
    1d18:	51 2c       	mov	r5, r1
    1d1a:	c4 cf       	rjmp	.-120    	; 0x1ca4 <vfprintf+0x668>
    1d1c:	60 96       	adiw	r28, 0x10	; 16
    1d1e:	0f b6       	in	r0, 0x3f	; 63
    1d20:	f8 94       	cli
    1d22:	de bf       	out	0x3e, r29	; 62
    1d24:	0f be       	out	0x3f, r0	; 63
    1d26:	cd bf       	out	0x3d, r28	; 61
    1d28:	df 91       	pop	r29
    1d2a:	cf 91       	pop	r28
    1d2c:	1f 91       	pop	r17
    1d2e:	0f 91       	pop	r16
    1d30:	ff 90       	pop	r15
    1d32:	ef 90       	pop	r14
    1d34:	df 90       	pop	r13
    1d36:	cf 90       	pop	r12
    1d38:	bf 90       	pop	r11
    1d3a:	af 90       	pop	r10
    1d3c:	9f 90       	pop	r9
    1d3e:	8f 90       	pop	r8
    1d40:	7f 90       	pop	r7
    1d42:	6f 90       	pop	r6
    1d44:	5f 90       	pop	r5
    1d46:	4f 90       	pop	r4
    1d48:	3f 90       	pop	r3
    1d4a:	2f 90       	pop	r2
    1d4c:	08 95       	ret

00001d4e <__divmodhi4>:
    1d4e:	97 fb       	bst	r25, 7
    1d50:	07 2e       	mov	r0, r23
    1d52:	16 f4       	brtc	.+4      	; 0x1d58 <__divmodhi4+0xa>
    1d54:	00 94       	com	r0
    1d56:	06 d0       	rcall	.+12     	; 0x1d64 <__divmodhi4_neg1>
    1d58:	77 fd       	sbrc	r23, 7
    1d5a:	08 d0       	rcall	.+16     	; 0x1d6c <__divmodhi4_neg2>
    1d5c:	0b d0       	rcall	.+22     	; 0x1d74 <__udivmodhi4>
    1d5e:	07 fc       	sbrc	r0, 7
    1d60:	05 d0       	rcall	.+10     	; 0x1d6c <__divmodhi4_neg2>
    1d62:	3e f4       	brtc	.+14     	; 0x1d72 <__divmodhi4_exit>

00001d64 <__divmodhi4_neg1>:
    1d64:	90 95       	com	r25
    1d66:	81 95       	neg	r24
    1d68:	9f 4f       	sbci	r25, 0xFF	; 255
    1d6a:	08 95       	ret

00001d6c <__divmodhi4_neg2>:
    1d6c:	70 95       	com	r23
    1d6e:	61 95       	neg	r22
    1d70:	7f 4f       	sbci	r23, 0xFF	; 255

00001d72 <__divmodhi4_exit>:
    1d72:	08 95       	ret

00001d74 <__udivmodhi4>:
    1d74:	aa 1b       	sub	r26, r26
    1d76:	bb 1b       	sub	r27, r27
    1d78:	51 e1       	ldi	r21, 0x11	; 17
    1d7a:	07 c0       	rjmp	.+14     	; 0x1d8a <__udivmodhi4_ep>

00001d7c <__udivmodhi4_loop>:
    1d7c:	aa 1f       	adc	r26, r26
    1d7e:	bb 1f       	adc	r27, r27
    1d80:	a6 17       	cp	r26, r22
    1d82:	b7 07       	cpc	r27, r23
    1d84:	10 f0       	brcs	.+4      	; 0x1d8a <__udivmodhi4_ep>
    1d86:	a6 1b       	sub	r26, r22
    1d88:	b7 0b       	sbc	r27, r23

00001d8a <__udivmodhi4_ep>:
    1d8a:	88 1f       	adc	r24, r24
    1d8c:	99 1f       	adc	r25, r25
    1d8e:	5a 95       	dec	r21
    1d90:	a9 f7       	brne	.-22     	; 0x1d7c <__udivmodhi4_loop>
    1d92:	80 95       	com	r24
    1d94:	90 95       	com	r25
    1d96:	bc 01       	movw	r22, r24
    1d98:	cd 01       	movw	r24, r26
    1d9a:	08 95       	ret

00001d9c <__ftoa_engine>:
    1d9c:	28 30       	cpi	r18, 0x08	; 8
    1d9e:	08 f0       	brcs	.+2      	; 0x1da2 <__ftoa_engine+0x6>
    1da0:	27 e0       	ldi	r18, 0x07	; 7
    1da2:	33 27       	eor	r19, r19
    1da4:	da 01       	movw	r26, r20
    1da6:	99 0f       	add	r25, r25
    1da8:	31 1d       	adc	r19, r1
    1daa:	87 fd       	sbrc	r24, 7
    1dac:	91 60       	ori	r25, 0x01	; 1
    1dae:	00 96       	adiw	r24, 0x00	; 0
    1db0:	61 05       	cpc	r22, r1
    1db2:	71 05       	cpc	r23, r1
    1db4:	39 f4       	brne	.+14     	; 0x1dc4 <__ftoa_engine+0x28>
    1db6:	32 60       	ori	r19, 0x02	; 2
    1db8:	2e 5f       	subi	r18, 0xFE	; 254
    1dba:	3d 93       	st	X+, r19
    1dbc:	30 e3       	ldi	r19, 0x30	; 48
    1dbe:	2a 95       	dec	r18
    1dc0:	e1 f7       	brne	.-8      	; 0x1dba <__ftoa_engine+0x1e>
    1dc2:	08 95       	ret
    1dc4:	9f 3f       	cpi	r25, 0xFF	; 255
    1dc6:	30 f0       	brcs	.+12     	; 0x1dd4 <__ftoa_engine+0x38>
    1dc8:	80 38       	cpi	r24, 0x80	; 128
    1dca:	71 05       	cpc	r23, r1
    1dcc:	61 05       	cpc	r22, r1
    1dce:	09 f0       	breq	.+2      	; 0x1dd2 <__ftoa_engine+0x36>
    1dd0:	3c 5f       	subi	r19, 0xFC	; 252
    1dd2:	3c 5f       	subi	r19, 0xFC	; 252
    1dd4:	3d 93       	st	X+, r19
    1dd6:	91 30       	cpi	r25, 0x01	; 1
    1dd8:	08 f0       	brcs	.+2      	; 0x1ddc <__ftoa_engine+0x40>
    1dda:	80 68       	ori	r24, 0x80	; 128
    1ddc:	91 1d       	adc	r25, r1
    1dde:	df 93       	push	r29
    1de0:	cf 93       	push	r28
    1de2:	1f 93       	push	r17
    1de4:	0f 93       	push	r16
    1de6:	ff 92       	push	r15
    1de8:	ef 92       	push	r14
    1dea:	19 2f       	mov	r17, r25
    1dec:	98 7f       	andi	r25, 0xF8	; 248
    1dee:	96 95       	lsr	r25
    1df0:	e9 2f       	mov	r30, r25
    1df2:	96 95       	lsr	r25
    1df4:	96 95       	lsr	r25
    1df6:	e9 0f       	add	r30, r25
    1df8:	ff 27       	eor	r31, r31
    1dfa:	ee 57       	subi	r30, 0x7E	; 126
    1dfc:	fe 4f       	sbci	r31, 0xFE	; 254
    1dfe:	99 27       	eor	r25, r25
    1e00:	33 27       	eor	r19, r19
    1e02:	ee 24       	eor	r14, r14
    1e04:	ff 24       	eor	r15, r15
    1e06:	a7 01       	movw	r20, r14
    1e08:	e7 01       	movw	r28, r14
    1e0a:	05 90       	lpm	r0, Z+
    1e0c:	08 94       	sec
    1e0e:	07 94       	ror	r0
    1e10:	28 f4       	brcc	.+10     	; 0x1e1c <__ftoa_engine+0x80>
    1e12:	36 0f       	add	r19, r22
    1e14:	e7 1e       	adc	r14, r23
    1e16:	f8 1e       	adc	r15, r24
    1e18:	49 1f       	adc	r20, r25
    1e1a:	51 1d       	adc	r21, r1
    1e1c:	66 0f       	add	r22, r22
    1e1e:	77 1f       	adc	r23, r23
    1e20:	88 1f       	adc	r24, r24
    1e22:	99 1f       	adc	r25, r25
    1e24:	06 94       	lsr	r0
    1e26:	a1 f7       	brne	.-24     	; 0x1e10 <__ftoa_engine+0x74>
    1e28:	05 90       	lpm	r0, Z+
    1e2a:	07 94       	ror	r0
    1e2c:	28 f4       	brcc	.+10     	; 0x1e38 <__ftoa_engine+0x9c>
    1e2e:	e7 0e       	add	r14, r23
    1e30:	f8 1e       	adc	r15, r24
    1e32:	49 1f       	adc	r20, r25
    1e34:	56 1f       	adc	r21, r22
    1e36:	c1 1d       	adc	r28, r1
    1e38:	77 0f       	add	r23, r23
    1e3a:	88 1f       	adc	r24, r24
    1e3c:	99 1f       	adc	r25, r25
    1e3e:	66 1f       	adc	r22, r22
    1e40:	06 94       	lsr	r0
    1e42:	a1 f7       	brne	.-24     	; 0x1e2c <__ftoa_engine+0x90>
    1e44:	05 90       	lpm	r0, Z+
    1e46:	07 94       	ror	r0
    1e48:	28 f4       	brcc	.+10     	; 0x1e54 <__ftoa_engine+0xb8>
    1e4a:	f8 0e       	add	r15, r24
    1e4c:	49 1f       	adc	r20, r25
    1e4e:	56 1f       	adc	r21, r22
    1e50:	c7 1f       	adc	r28, r23
    1e52:	d1 1d       	adc	r29, r1
    1e54:	88 0f       	add	r24, r24
    1e56:	99 1f       	adc	r25, r25
    1e58:	66 1f       	adc	r22, r22
    1e5a:	77 1f       	adc	r23, r23
    1e5c:	06 94       	lsr	r0
    1e5e:	a1 f7       	brne	.-24     	; 0x1e48 <__ftoa_engine+0xac>
    1e60:	05 90       	lpm	r0, Z+
    1e62:	07 94       	ror	r0
    1e64:	20 f4       	brcc	.+8      	; 0x1e6e <__ftoa_engine+0xd2>
    1e66:	49 0f       	add	r20, r25
    1e68:	56 1f       	adc	r21, r22
    1e6a:	c7 1f       	adc	r28, r23
    1e6c:	d8 1f       	adc	r29, r24
    1e6e:	99 0f       	add	r25, r25
    1e70:	66 1f       	adc	r22, r22
    1e72:	77 1f       	adc	r23, r23
    1e74:	88 1f       	adc	r24, r24
    1e76:	06 94       	lsr	r0
    1e78:	a9 f7       	brne	.-22     	; 0x1e64 <__ftoa_engine+0xc8>
    1e7a:	84 91       	lpm	r24, Z
    1e7c:	10 95       	com	r17
    1e7e:	17 70       	andi	r17, 0x07	; 7
    1e80:	41 f0       	breq	.+16     	; 0x1e92 <__ftoa_engine+0xf6>
    1e82:	d6 95       	lsr	r29
    1e84:	c7 95       	ror	r28
    1e86:	57 95       	ror	r21
    1e88:	47 95       	ror	r20
    1e8a:	f7 94       	ror	r15
    1e8c:	e7 94       	ror	r14
    1e8e:	1a 95       	dec	r17
    1e90:	c1 f7       	brne	.-16     	; 0x1e82 <__ftoa_engine+0xe6>
    1e92:	e8 e2       	ldi	r30, 0x28	; 40
    1e94:	f1 e0       	ldi	r31, 0x01	; 1
    1e96:	68 94       	set
    1e98:	15 90       	lpm	r1, Z+
    1e9a:	15 91       	lpm	r17, Z+
    1e9c:	35 91       	lpm	r19, Z+
    1e9e:	65 91       	lpm	r22, Z+
    1ea0:	95 91       	lpm	r25, Z+
    1ea2:	05 90       	lpm	r0, Z+
    1ea4:	7f e2       	ldi	r23, 0x2F	; 47
    1ea6:	73 95       	inc	r23
    1ea8:	e1 18       	sub	r14, r1
    1eaa:	f1 0a       	sbc	r15, r17
    1eac:	43 0b       	sbc	r20, r19
    1eae:	56 0b       	sbc	r21, r22
    1eb0:	c9 0b       	sbc	r28, r25
    1eb2:	d0 09       	sbc	r29, r0
    1eb4:	c0 f7       	brcc	.-16     	; 0x1ea6 <__ftoa_engine+0x10a>
    1eb6:	e1 0c       	add	r14, r1
    1eb8:	f1 1e       	adc	r15, r17
    1eba:	43 1f       	adc	r20, r19
    1ebc:	56 1f       	adc	r21, r22
    1ebe:	c9 1f       	adc	r28, r25
    1ec0:	d0 1d       	adc	r29, r0
    1ec2:	7e f4       	brtc	.+30     	; 0x1ee2 <__ftoa_engine+0x146>
    1ec4:	70 33       	cpi	r23, 0x30	; 48
    1ec6:	11 f4       	brne	.+4      	; 0x1ecc <__ftoa_engine+0x130>
    1ec8:	8a 95       	dec	r24
    1eca:	e6 cf       	rjmp	.-52     	; 0x1e98 <__ftoa_engine+0xfc>
    1ecc:	e8 94       	clt
    1ece:	01 50       	subi	r16, 0x01	; 1
    1ed0:	30 f0       	brcs	.+12     	; 0x1ede <__ftoa_engine+0x142>
    1ed2:	08 0f       	add	r16, r24
    1ed4:	0a f4       	brpl	.+2      	; 0x1ed8 <__ftoa_engine+0x13c>
    1ed6:	00 27       	eor	r16, r16
    1ed8:	02 17       	cp	r16, r18
    1eda:	08 f4       	brcc	.+2      	; 0x1ede <__ftoa_engine+0x142>
    1edc:	20 2f       	mov	r18, r16
    1ede:	23 95       	inc	r18
    1ee0:	02 2f       	mov	r16, r18
    1ee2:	7a 33       	cpi	r23, 0x3A	; 58
    1ee4:	28 f0       	brcs	.+10     	; 0x1ef0 <__ftoa_engine+0x154>
    1ee6:	79 e3       	ldi	r23, 0x39	; 57
    1ee8:	7d 93       	st	X+, r23
    1eea:	2a 95       	dec	r18
    1eec:	e9 f7       	brne	.-6      	; 0x1ee8 <__ftoa_engine+0x14c>
    1eee:	10 c0       	rjmp	.+32     	; 0x1f10 <__ftoa_engine+0x174>
    1ef0:	7d 93       	st	X+, r23
    1ef2:	2a 95       	dec	r18
    1ef4:	89 f6       	brne	.-94     	; 0x1e98 <__ftoa_engine+0xfc>
    1ef6:	06 94       	lsr	r0
    1ef8:	97 95       	ror	r25
    1efa:	67 95       	ror	r22
    1efc:	37 95       	ror	r19
    1efe:	17 95       	ror	r17
    1f00:	17 94       	ror	r1
    1f02:	e1 18       	sub	r14, r1
    1f04:	f1 0a       	sbc	r15, r17
    1f06:	43 0b       	sbc	r20, r19
    1f08:	56 0b       	sbc	r21, r22
    1f0a:	c9 0b       	sbc	r28, r25
    1f0c:	d0 09       	sbc	r29, r0
    1f0e:	98 f0       	brcs	.+38     	; 0x1f36 <__ftoa_engine+0x19a>
    1f10:	23 95       	inc	r18
    1f12:	7e 91       	ld	r23, -X
    1f14:	73 95       	inc	r23
    1f16:	7a 33       	cpi	r23, 0x3A	; 58
    1f18:	08 f0       	brcs	.+2      	; 0x1f1c <__ftoa_engine+0x180>
    1f1a:	70 e3       	ldi	r23, 0x30	; 48
    1f1c:	7c 93       	st	X, r23
    1f1e:	20 13       	cpse	r18, r16
    1f20:	b8 f7       	brcc	.-18     	; 0x1f10 <__ftoa_engine+0x174>
    1f22:	7e 91       	ld	r23, -X
    1f24:	70 61       	ori	r23, 0x10	; 16
    1f26:	7d 93       	st	X+, r23
    1f28:	30 f0       	brcs	.+12     	; 0x1f36 <__ftoa_engine+0x19a>
    1f2a:	83 95       	inc	r24
    1f2c:	71 e3       	ldi	r23, 0x31	; 49
    1f2e:	7d 93       	st	X+, r23
    1f30:	70 e3       	ldi	r23, 0x30	; 48
    1f32:	2a 95       	dec	r18
    1f34:	e1 f7       	brne	.-8      	; 0x1f2e <__ftoa_engine+0x192>
    1f36:	11 24       	eor	r1, r1
    1f38:	ef 90       	pop	r14
    1f3a:	ff 90       	pop	r15
    1f3c:	0f 91       	pop	r16
    1f3e:	1f 91       	pop	r17
    1f40:	cf 91       	pop	r28
    1f42:	df 91       	pop	r29
    1f44:	99 27       	eor	r25, r25
    1f46:	87 fd       	sbrc	r24, 7
    1f48:	90 95       	com	r25
    1f4a:	08 95       	ret

00001f4c <strnlen_P>:
    1f4c:	fc 01       	movw	r30, r24
    1f4e:	05 90       	lpm	r0, Z+
    1f50:	61 50       	subi	r22, 0x01	; 1
    1f52:	70 40       	sbci	r23, 0x00	; 0
    1f54:	01 10       	cpse	r0, r1
    1f56:	d8 f7       	brcc	.-10     	; 0x1f4e <strnlen_P+0x2>
    1f58:	80 95       	com	r24
    1f5a:	90 95       	com	r25
    1f5c:	8e 0f       	add	r24, r30
    1f5e:	9f 1f       	adc	r25, r31
    1f60:	08 95       	ret

00001f62 <strnlen>:
    1f62:	fc 01       	movw	r30, r24
    1f64:	61 50       	subi	r22, 0x01	; 1
    1f66:	70 40       	sbci	r23, 0x00	; 0
    1f68:	01 90       	ld	r0, Z+
    1f6a:	01 10       	cpse	r0, r1
    1f6c:	d8 f7       	brcc	.-10     	; 0x1f64 <strnlen+0x2>
    1f6e:	80 95       	com	r24
    1f70:	90 95       	com	r25
    1f72:	8e 0f       	add	r24, r30
    1f74:	9f 1f       	adc	r25, r31
    1f76:	08 95       	ret

00001f78 <fdevopen>:
    1f78:	0f 93       	push	r16
    1f7a:	1f 93       	push	r17
    1f7c:	cf 93       	push	r28
    1f7e:	df 93       	push	r29
    1f80:	00 97       	sbiw	r24, 0x00	; 0
    1f82:	31 f4       	brne	.+12     	; 0x1f90 <fdevopen+0x18>
    1f84:	61 15       	cp	r22, r1
    1f86:	71 05       	cpc	r23, r1
    1f88:	19 f4       	brne	.+6      	; 0x1f90 <fdevopen+0x18>
    1f8a:	80 e0       	ldi	r24, 0x00	; 0
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	39 c0       	rjmp	.+114    	; 0x2002 <fdevopen+0x8a>
    1f90:	8b 01       	movw	r16, r22
    1f92:	ec 01       	movw	r28, r24
    1f94:	6e e0       	ldi	r22, 0x0E	; 14
    1f96:	70 e0       	ldi	r23, 0x00	; 0
    1f98:	81 e0       	ldi	r24, 0x01	; 1
    1f9a:	90 e0       	ldi	r25, 0x00	; 0
    1f9c:	17 d1       	rcall	.+558    	; 0x21cc <calloc>
    1f9e:	fc 01       	movw	r30, r24
    1fa0:	89 2b       	or	r24, r25
    1fa2:	99 f3       	breq	.-26     	; 0x1f8a <fdevopen+0x12>
    1fa4:	80 e8       	ldi	r24, 0x80	; 128
    1fa6:	83 83       	std	Z+3, r24	; 0x03
    1fa8:	01 15       	cp	r16, r1
    1faa:	11 05       	cpc	r17, r1
    1fac:	71 f0       	breq	.+28     	; 0x1fca <fdevopen+0x52>
    1fae:	13 87       	std	Z+11, r17	; 0x0b
    1fb0:	02 87       	std	Z+10, r16	; 0x0a
    1fb2:	81 e8       	ldi	r24, 0x81	; 129
    1fb4:	83 83       	std	Z+3, r24	; 0x03
    1fb6:	80 91 dd 03 	lds	r24, 0x03DD	; 0x8003dd <__iob>
    1fba:	90 91 de 03 	lds	r25, 0x03DE	; 0x8003de <__iob+0x1>
    1fbe:	89 2b       	or	r24, r25
    1fc0:	21 f4       	brne	.+8      	; 0x1fca <fdevopen+0x52>
    1fc2:	f0 93 de 03 	sts	0x03DE, r31	; 0x8003de <__iob+0x1>
    1fc6:	e0 93 dd 03 	sts	0x03DD, r30	; 0x8003dd <__iob>
    1fca:	20 97       	sbiw	r28, 0x00	; 0
    1fcc:	c9 f0       	breq	.+50     	; 0x2000 <fdevopen+0x88>
    1fce:	d1 87       	std	Z+9, r29	; 0x09
    1fd0:	c0 87       	std	Z+8, r28	; 0x08
    1fd2:	83 81       	ldd	r24, Z+3	; 0x03
    1fd4:	82 60       	ori	r24, 0x02	; 2
    1fd6:	83 83       	std	Z+3, r24	; 0x03
    1fd8:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    1fdc:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    1fe0:	89 2b       	or	r24, r25
    1fe2:	71 f4       	brne	.+28     	; 0x2000 <fdevopen+0x88>
    1fe4:	f0 93 e0 03 	sts	0x03E0, r31	; 0x8003e0 <__iob+0x3>
    1fe8:	e0 93 df 03 	sts	0x03DF, r30	; 0x8003df <__iob+0x2>
    1fec:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <__iob+0x4>
    1ff0:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <__iob+0x5>
    1ff4:	89 2b       	or	r24, r25
    1ff6:	21 f4       	brne	.+8      	; 0x2000 <fdevopen+0x88>
    1ff8:	f0 93 e2 03 	sts	0x03E2, r31	; 0x8003e2 <__iob+0x5>
    1ffc:	e0 93 e1 03 	sts	0x03E1, r30	; 0x8003e1 <__iob+0x4>
    2000:	cf 01       	movw	r24, r30
    2002:	df 91       	pop	r29
    2004:	cf 91       	pop	r28
    2006:	1f 91       	pop	r17
    2008:	0f 91       	pop	r16
    200a:	08 95       	ret

0000200c <fputc>:
    200c:	0f 93       	push	r16
    200e:	1f 93       	push	r17
    2010:	cf 93       	push	r28
    2012:	df 93       	push	r29
    2014:	fb 01       	movw	r30, r22
    2016:	23 81       	ldd	r18, Z+3	; 0x03
    2018:	21 fd       	sbrc	r18, 1
    201a:	03 c0       	rjmp	.+6      	; 0x2022 <fputc+0x16>
    201c:	8f ef       	ldi	r24, 0xFF	; 255
    201e:	9f ef       	ldi	r25, 0xFF	; 255
    2020:	2c c0       	rjmp	.+88     	; 0x207a <fputc+0x6e>
    2022:	22 ff       	sbrs	r18, 2
    2024:	16 c0       	rjmp	.+44     	; 0x2052 <fputc+0x46>
    2026:	46 81       	ldd	r20, Z+6	; 0x06
    2028:	57 81       	ldd	r21, Z+7	; 0x07
    202a:	24 81       	ldd	r18, Z+4	; 0x04
    202c:	35 81       	ldd	r19, Z+5	; 0x05
    202e:	42 17       	cp	r20, r18
    2030:	53 07       	cpc	r21, r19
    2032:	44 f4       	brge	.+16     	; 0x2044 <fputc+0x38>
    2034:	a0 81       	ld	r26, Z
    2036:	b1 81       	ldd	r27, Z+1	; 0x01
    2038:	9d 01       	movw	r18, r26
    203a:	2f 5f       	subi	r18, 0xFF	; 255
    203c:	3f 4f       	sbci	r19, 0xFF	; 255
    203e:	31 83       	std	Z+1, r19	; 0x01
    2040:	20 83       	st	Z, r18
    2042:	8c 93       	st	X, r24
    2044:	26 81       	ldd	r18, Z+6	; 0x06
    2046:	37 81       	ldd	r19, Z+7	; 0x07
    2048:	2f 5f       	subi	r18, 0xFF	; 255
    204a:	3f 4f       	sbci	r19, 0xFF	; 255
    204c:	37 83       	std	Z+7, r19	; 0x07
    204e:	26 83       	std	Z+6, r18	; 0x06
    2050:	14 c0       	rjmp	.+40     	; 0x207a <fputc+0x6e>
    2052:	8b 01       	movw	r16, r22
    2054:	ec 01       	movw	r28, r24
    2056:	fb 01       	movw	r30, r22
    2058:	00 84       	ldd	r0, Z+8	; 0x08
    205a:	f1 85       	ldd	r31, Z+9	; 0x09
    205c:	e0 2d       	mov	r30, r0
    205e:	19 95       	eicall
    2060:	89 2b       	or	r24, r25
    2062:	e1 f6       	brne	.-72     	; 0x201c <fputc+0x10>
    2064:	d8 01       	movw	r26, r16
    2066:	16 96       	adiw	r26, 0x06	; 6
    2068:	8d 91       	ld	r24, X+
    206a:	9c 91       	ld	r25, X
    206c:	17 97       	sbiw	r26, 0x07	; 7
    206e:	01 96       	adiw	r24, 0x01	; 1
    2070:	17 96       	adiw	r26, 0x07	; 7
    2072:	9c 93       	st	X, r25
    2074:	8e 93       	st	-X, r24
    2076:	16 97       	sbiw	r26, 0x06	; 6
    2078:	ce 01       	movw	r24, r28
    207a:	df 91       	pop	r29
    207c:	cf 91       	pop	r28
    207e:	1f 91       	pop	r17
    2080:	0f 91       	pop	r16
    2082:	08 95       	ret

00002084 <printf>:
    2084:	cf 93       	push	r28
    2086:	df 93       	push	r29
    2088:	cd b7       	in	r28, 0x3d	; 61
    208a:	de b7       	in	r29, 0x3e	; 62
    208c:	ae 01       	movw	r20, r28
    208e:	4a 5f       	subi	r20, 0xFA	; 250
    2090:	5f 4f       	sbci	r21, 0xFF	; 255
    2092:	fa 01       	movw	r30, r20
    2094:	61 91       	ld	r22, Z+
    2096:	71 91       	ld	r23, Z+
    2098:	af 01       	movw	r20, r30
    209a:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    209e:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    20a2:	cc da       	rcall	.-2664   	; 0x163c <vfprintf>
    20a4:	df 91       	pop	r29
    20a6:	cf 91       	pop	r28
    20a8:	08 95       	ret

000020aa <putchar>:
    20aa:	60 91 df 03 	lds	r22, 0x03DF	; 0x8003df <__iob+0x2>
    20ae:	70 91 e0 03 	lds	r23, 0x03E0	; 0x8003e0 <__iob+0x3>
    20b2:	ac cf       	rjmp	.-168    	; 0x200c <fputc>

000020b4 <sprintf>:
    20b4:	0f 93       	push	r16
    20b6:	1f 93       	push	r17
    20b8:	cf 93       	push	r28
    20ba:	df 93       	push	r29
    20bc:	cd b7       	in	r28, 0x3d	; 61
    20be:	de b7       	in	r29, 0x3e	; 62
    20c0:	2e 97       	sbiw	r28, 0x0e	; 14
    20c2:	0f b6       	in	r0, 0x3f	; 63
    20c4:	f8 94       	cli
    20c6:	de bf       	out	0x3e, r29	; 62
    20c8:	0f be       	out	0x3f, r0	; 63
    20ca:	cd bf       	out	0x3d, r28	; 61
    20cc:	0e 89       	ldd	r16, Y+22	; 0x16
    20ce:	1f 89       	ldd	r17, Y+23	; 0x17
    20d0:	86 e0       	ldi	r24, 0x06	; 6
    20d2:	8c 83       	std	Y+4, r24	; 0x04
    20d4:	1a 83       	std	Y+2, r17	; 0x02
    20d6:	09 83       	std	Y+1, r16	; 0x01
    20d8:	8f ef       	ldi	r24, 0xFF	; 255
    20da:	9f e7       	ldi	r25, 0x7F	; 127
    20dc:	9e 83       	std	Y+6, r25	; 0x06
    20de:	8d 83       	std	Y+5, r24	; 0x05
    20e0:	ae 01       	movw	r20, r28
    20e2:	46 5e       	subi	r20, 0xE6	; 230
    20e4:	5f 4f       	sbci	r21, 0xFF	; 255
    20e6:	68 8d       	ldd	r22, Y+24	; 0x18
    20e8:	79 8d       	ldd	r23, Y+25	; 0x19
    20ea:	ce 01       	movw	r24, r28
    20ec:	01 96       	adiw	r24, 0x01	; 1
    20ee:	a6 da       	rcall	.-2740   	; 0x163c <vfprintf>
    20f0:	ef 81       	ldd	r30, Y+7	; 0x07
    20f2:	f8 85       	ldd	r31, Y+8	; 0x08
    20f4:	e0 0f       	add	r30, r16
    20f6:	f1 1f       	adc	r31, r17
    20f8:	10 82       	st	Z, r1
    20fa:	2e 96       	adiw	r28, 0x0e	; 14
    20fc:	0f b6       	in	r0, 0x3f	; 63
    20fe:	f8 94       	cli
    2100:	de bf       	out	0x3e, r29	; 62
    2102:	0f be       	out	0x3f, r0	; 63
    2104:	cd bf       	out	0x3d, r28	; 61
    2106:	df 91       	pop	r29
    2108:	cf 91       	pop	r28
    210a:	1f 91       	pop	r17
    210c:	0f 91       	pop	r16
    210e:	08 95       	ret

00002110 <__ultoa_invert>:
    2110:	fa 01       	movw	r30, r20
    2112:	aa 27       	eor	r26, r26
    2114:	28 30       	cpi	r18, 0x08	; 8
    2116:	51 f1       	breq	.+84     	; 0x216c <__ultoa_invert+0x5c>
    2118:	20 31       	cpi	r18, 0x10	; 16
    211a:	81 f1       	breq	.+96     	; 0x217c <__ultoa_invert+0x6c>
    211c:	e8 94       	clt
    211e:	6f 93       	push	r22
    2120:	6e 7f       	andi	r22, 0xFE	; 254
    2122:	6e 5f       	subi	r22, 0xFE	; 254
    2124:	7f 4f       	sbci	r23, 0xFF	; 255
    2126:	8f 4f       	sbci	r24, 0xFF	; 255
    2128:	9f 4f       	sbci	r25, 0xFF	; 255
    212a:	af 4f       	sbci	r26, 0xFF	; 255
    212c:	b1 e0       	ldi	r27, 0x01	; 1
    212e:	3e d0       	rcall	.+124    	; 0x21ac <__ultoa_invert+0x9c>
    2130:	b4 e0       	ldi	r27, 0x04	; 4
    2132:	3c d0       	rcall	.+120    	; 0x21ac <__ultoa_invert+0x9c>
    2134:	67 0f       	add	r22, r23
    2136:	78 1f       	adc	r23, r24
    2138:	89 1f       	adc	r24, r25
    213a:	9a 1f       	adc	r25, r26
    213c:	a1 1d       	adc	r26, r1
    213e:	68 0f       	add	r22, r24
    2140:	79 1f       	adc	r23, r25
    2142:	8a 1f       	adc	r24, r26
    2144:	91 1d       	adc	r25, r1
    2146:	a1 1d       	adc	r26, r1
    2148:	6a 0f       	add	r22, r26
    214a:	71 1d       	adc	r23, r1
    214c:	81 1d       	adc	r24, r1
    214e:	91 1d       	adc	r25, r1
    2150:	a1 1d       	adc	r26, r1
    2152:	20 d0       	rcall	.+64     	; 0x2194 <__ultoa_invert+0x84>
    2154:	09 f4       	brne	.+2      	; 0x2158 <__ultoa_invert+0x48>
    2156:	68 94       	set
    2158:	3f 91       	pop	r19
    215a:	2a e0       	ldi	r18, 0x0A	; 10
    215c:	26 9f       	mul	r18, r22
    215e:	11 24       	eor	r1, r1
    2160:	30 19       	sub	r19, r0
    2162:	30 5d       	subi	r19, 0xD0	; 208
    2164:	31 93       	st	Z+, r19
    2166:	de f6       	brtc	.-74     	; 0x211e <__ultoa_invert+0xe>
    2168:	cf 01       	movw	r24, r30
    216a:	08 95       	ret
    216c:	46 2f       	mov	r20, r22
    216e:	47 70       	andi	r20, 0x07	; 7
    2170:	40 5d       	subi	r20, 0xD0	; 208
    2172:	41 93       	st	Z+, r20
    2174:	b3 e0       	ldi	r27, 0x03	; 3
    2176:	0f d0       	rcall	.+30     	; 0x2196 <__ultoa_invert+0x86>
    2178:	c9 f7       	brne	.-14     	; 0x216c <__ultoa_invert+0x5c>
    217a:	f6 cf       	rjmp	.-20     	; 0x2168 <__ultoa_invert+0x58>
    217c:	46 2f       	mov	r20, r22
    217e:	4f 70       	andi	r20, 0x0F	; 15
    2180:	40 5d       	subi	r20, 0xD0	; 208
    2182:	4a 33       	cpi	r20, 0x3A	; 58
    2184:	18 f0       	brcs	.+6      	; 0x218c <__ultoa_invert+0x7c>
    2186:	49 5d       	subi	r20, 0xD9	; 217
    2188:	31 fd       	sbrc	r19, 1
    218a:	40 52       	subi	r20, 0x20	; 32
    218c:	41 93       	st	Z+, r20
    218e:	02 d0       	rcall	.+4      	; 0x2194 <__ultoa_invert+0x84>
    2190:	a9 f7       	brne	.-22     	; 0x217c <__ultoa_invert+0x6c>
    2192:	ea cf       	rjmp	.-44     	; 0x2168 <__ultoa_invert+0x58>
    2194:	b4 e0       	ldi	r27, 0x04	; 4
    2196:	a6 95       	lsr	r26
    2198:	97 95       	ror	r25
    219a:	87 95       	ror	r24
    219c:	77 95       	ror	r23
    219e:	67 95       	ror	r22
    21a0:	ba 95       	dec	r27
    21a2:	c9 f7       	brne	.-14     	; 0x2196 <__ultoa_invert+0x86>
    21a4:	00 97       	sbiw	r24, 0x00	; 0
    21a6:	61 05       	cpc	r22, r1
    21a8:	71 05       	cpc	r23, r1
    21aa:	08 95       	ret
    21ac:	9b 01       	movw	r18, r22
    21ae:	ac 01       	movw	r20, r24
    21b0:	0a 2e       	mov	r0, r26
    21b2:	06 94       	lsr	r0
    21b4:	57 95       	ror	r21
    21b6:	47 95       	ror	r20
    21b8:	37 95       	ror	r19
    21ba:	27 95       	ror	r18
    21bc:	ba 95       	dec	r27
    21be:	c9 f7       	brne	.-14     	; 0x21b2 <__ultoa_invert+0xa2>
    21c0:	62 0f       	add	r22, r18
    21c2:	73 1f       	adc	r23, r19
    21c4:	84 1f       	adc	r24, r20
    21c6:	95 1f       	adc	r25, r21
    21c8:	a0 1d       	adc	r26, r0
    21ca:	08 95       	ret

000021cc <calloc>:
    21cc:	0f 93       	push	r16
    21ce:	1f 93       	push	r17
    21d0:	cf 93       	push	r28
    21d2:	df 93       	push	r29
    21d4:	86 9f       	mul	r24, r22
    21d6:	80 01       	movw	r16, r0
    21d8:	87 9f       	mul	r24, r23
    21da:	10 0d       	add	r17, r0
    21dc:	96 9f       	mul	r25, r22
    21de:	10 0d       	add	r17, r0
    21e0:	11 24       	eor	r1, r1
    21e2:	c8 01       	movw	r24, r16
    21e4:	0d d0       	rcall	.+26     	; 0x2200 <malloc>
    21e6:	ec 01       	movw	r28, r24
    21e8:	00 97       	sbiw	r24, 0x00	; 0
    21ea:	21 f0       	breq	.+8      	; 0x21f4 <calloc+0x28>
    21ec:	a8 01       	movw	r20, r16
    21ee:	60 e0       	ldi	r22, 0x00	; 0
    21f0:	70 e0       	ldi	r23, 0x00	; 0
    21f2:	27 d1       	rcall	.+590    	; 0x2442 <memset>
    21f4:	ce 01       	movw	r24, r28
    21f6:	df 91       	pop	r29
    21f8:	cf 91       	pop	r28
    21fa:	1f 91       	pop	r17
    21fc:	0f 91       	pop	r16
    21fe:	08 95       	ret

00002200 <malloc>:
    2200:	0f 93       	push	r16
    2202:	1f 93       	push	r17
    2204:	cf 93       	push	r28
    2206:	df 93       	push	r29
    2208:	82 30       	cpi	r24, 0x02	; 2
    220a:	91 05       	cpc	r25, r1
    220c:	10 f4       	brcc	.+4      	; 0x2212 <malloc+0x12>
    220e:	82 e0       	ldi	r24, 0x02	; 2
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	e0 91 e5 03 	lds	r30, 0x03E5	; 0x8003e5 <__flp>
    2216:	f0 91 e6 03 	lds	r31, 0x03E6	; 0x8003e6 <__flp+0x1>
    221a:	20 e0       	ldi	r18, 0x00	; 0
    221c:	30 e0       	ldi	r19, 0x00	; 0
    221e:	a0 e0       	ldi	r26, 0x00	; 0
    2220:	b0 e0       	ldi	r27, 0x00	; 0
    2222:	30 97       	sbiw	r30, 0x00	; 0
    2224:	19 f1       	breq	.+70     	; 0x226c <malloc+0x6c>
    2226:	40 81       	ld	r20, Z
    2228:	51 81       	ldd	r21, Z+1	; 0x01
    222a:	02 81       	ldd	r16, Z+2	; 0x02
    222c:	13 81       	ldd	r17, Z+3	; 0x03
    222e:	48 17       	cp	r20, r24
    2230:	59 07       	cpc	r21, r25
    2232:	c8 f0       	brcs	.+50     	; 0x2266 <malloc+0x66>
    2234:	84 17       	cp	r24, r20
    2236:	95 07       	cpc	r25, r21
    2238:	69 f4       	brne	.+26     	; 0x2254 <malloc+0x54>
    223a:	10 97       	sbiw	r26, 0x00	; 0
    223c:	31 f0       	breq	.+12     	; 0x224a <malloc+0x4a>
    223e:	12 96       	adiw	r26, 0x02	; 2
    2240:	0c 93       	st	X, r16
    2242:	12 97       	sbiw	r26, 0x02	; 2
    2244:	13 96       	adiw	r26, 0x03	; 3
    2246:	1c 93       	st	X, r17
    2248:	27 c0       	rjmp	.+78     	; 0x2298 <malloc+0x98>
    224a:	00 93 e5 03 	sts	0x03E5, r16	; 0x8003e5 <__flp>
    224e:	10 93 e6 03 	sts	0x03E6, r17	; 0x8003e6 <__flp+0x1>
    2252:	22 c0       	rjmp	.+68     	; 0x2298 <malloc+0x98>
    2254:	21 15       	cp	r18, r1
    2256:	31 05       	cpc	r19, r1
    2258:	19 f0       	breq	.+6      	; 0x2260 <malloc+0x60>
    225a:	42 17       	cp	r20, r18
    225c:	53 07       	cpc	r21, r19
    225e:	18 f4       	brcc	.+6      	; 0x2266 <malloc+0x66>
    2260:	9a 01       	movw	r18, r20
    2262:	bd 01       	movw	r22, r26
    2264:	ef 01       	movw	r28, r30
    2266:	df 01       	movw	r26, r30
    2268:	f8 01       	movw	r30, r16
    226a:	db cf       	rjmp	.-74     	; 0x2222 <malloc+0x22>
    226c:	21 15       	cp	r18, r1
    226e:	31 05       	cpc	r19, r1
    2270:	f9 f0       	breq	.+62     	; 0x22b0 <malloc+0xb0>
    2272:	28 1b       	sub	r18, r24
    2274:	39 0b       	sbc	r19, r25
    2276:	24 30       	cpi	r18, 0x04	; 4
    2278:	31 05       	cpc	r19, r1
    227a:	80 f4       	brcc	.+32     	; 0x229c <malloc+0x9c>
    227c:	8a 81       	ldd	r24, Y+2	; 0x02
    227e:	9b 81       	ldd	r25, Y+3	; 0x03
    2280:	61 15       	cp	r22, r1
    2282:	71 05       	cpc	r23, r1
    2284:	21 f0       	breq	.+8      	; 0x228e <malloc+0x8e>
    2286:	fb 01       	movw	r30, r22
    2288:	93 83       	std	Z+3, r25	; 0x03
    228a:	82 83       	std	Z+2, r24	; 0x02
    228c:	04 c0       	rjmp	.+8      	; 0x2296 <malloc+0x96>
    228e:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <__flp+0x1>
    2292:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <__flp>
    2296:	fe 01       	movw	r30, r28
    2298:	32 96       	adiw	r30, 0x02	; 2
    229a:	44 c0       	rjmp	.+136    	; 0x2324 <malloc+0x124>
    229c:	fe 01       	movw	r30, r28
    229e:	e2 0f       	add	r30, r18
    22a0:	f3 1f       	adc	r31, r19
    22a2:	81 93       	st	Z+, r24
    22a4:	91 93       	st	Z+, r25
    22a6:	22 50       	subi	r18, 0x02	; 2
    22a8:	31 09       	sbc	r19, r1
    22aa:	39 83       	std	Y+1, r19	; 0x01
    22ac:	28 83       	st	Y, r18
    22ae:	3a c0       	rjmp	.+116    	; 0x2324 <malloc+0x124>
    22b0:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    22b4:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    22b8:	23 2b       	or	r18, r19
    22ba:	41 f4       	brne	.+16     	; 0x22cc <malloc+0xcc>
    22bc:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    22c0:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    22c4:	30 93 e4 03 	sts	0x03E4, r19	; 0x8003e4 <__brkval+0x1>
    22c8:	20 93 e3 03 	sts	0x03E3, r18	; 0x8003e3 <__brkval>
    22cc:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    22d0:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    22d4:	21 15       	cp	r18, r1
    22d6:	31 05       	cpc	r19, r1
    22d8:	41 f4       	brne	.+16     	; 0x22ea <malloc+0xea>
    22da:	2d b7       	in	r18, 0x3d	; 61
    22dc:	3e b7       	in	r19, 0x3e	; 62
    22de:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    22e2:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    22e6:	24 1b       	sub	r18, r20
    22e8:	35 0b       	sbc	r19, r21
    22ea:	e0 91 e3 03 	lds	r30, 0x03E3	; 0x8003e3 <__brkval>
    22ee:	f0 91 e4 03 	lds	r31, 0x03E4	; 0x8003e4 <__brkval+0x1>
    22f2:	e2 17       	cp	r30, r18
    22f4:	f3 07       	cpc	r31, r19
    22f6:	a0 f4       	brcc	.+40     	; 0x2320 <malloc+0x120>
    22f8:	2e 1b       	sub	r18, r30
    22fa:	3f 0b       	sbc	r19, r31
    22fc:	28 17       	cp	r18, r24
    22fe:	39 07       	cpc	r19, r25
    2300:	78 f0       	brcs	.+30     	; 0x2320 <malloc+0x120>
    2302:	ac 01       	movw	r20, r24
    2304:	4e 5f       	subi	r20, 0xFE	; 254
    2306:	5f 4f       	sbci	r21, 0xFF	; 255
    2308:	24 17       	cp	r18, r20
    230a:	35 07       	cpc	r19, r21
    230c:	48 f0       	brcs	.+18     	; 0x2320 <malloc+0x120>
    230e:	4e 0f       	add	r20, r30
    2310:	5f 1f       	adc	r21, r31
    2312:	50 93 e4 03 	sts	0x03E4, r21	; 0x8003e4 <__brkval+0x1>
    2316:	40 93 e3 03 	sts	0x03E3, r20	; 0x8003e3 <__brkval>
    231a:	81 93       	st	Z+, r24
    231c:	91 93       	st	Z+, r25
    231e:	02 c0       	rjmp	.+4      	; 0x2324 <malloc+0x124>
    2320:	e0 e0       	ldi	r30, 0x00	; 0
    2322:	f0 e0       	ldi	r31, 0x00	; 0
    2324:	cf 01       	movw	r24, r30
    2326:	df 91       	pop	r29
    2328:	cf 91       	pop	r28
    232a:	1f 91       	pop	r17
    232c:	0f 91       	pop	r16
    232e:	08 95       	ret

00002330 <free>:
    2330:	cf 93       	push	r28
    2332:	df 93       	push	r29
    2334:	00 97       	sbiw	r24, 0x00	; 0
    2336:	09 f4       	brne	.+2      	; 0x233a <free+0xa>
    2338:	81 c0       	rjmp	.+258    	; 0x243c <free+0x10c>
    233a:	fc 01       	movw	r30, r24
    233c:	32 97       	sbiw	r30, 0x02	; 2
    233e:	13 82       	std	Z+3, r1	; 0x03
    2340:	12 82       	std	Z+2, r1	; 0x02
    2342:	a0 91 e5 03 	lds	r26, 0x03E5	; 0x8003e5 <__flp>
    2346:	b0 91 e6 03 	lds	r27, 0x03E6	; 0x8003e6 <__flp+0x1>
    234a:	10 97       	sbiw	r26, 0x00	; 0
    234c:	81 f4       	brne	.+32     	; 0x236e <free+0x3e>
    234e:	20 81       	ld	r18, Z
    2350:	31 81       	ldd	r19, Z+1	; 0x01
    2352:	82 0f       	add	r24, r18
    2354:	93 1f       	adc	r25, r19
    2356:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    235a:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    235e:	28 17       	cp	r18, r24
    2360:	39 07       	cpc	r19, r25
    2362:	51 f5       	brne	.+84     	; 0x23b8 <free+0x88>
    2364:	f0 93 e4 03 	sts	0x03E4, r31	; 0x8003e4 <__brkval+0x1>
    2368:	e0 93 e3 03 	sts	0x03E3, r30	; 0x8003e3 <__brkval>
    236c:	67 c0       	rjmp	.+206    	; 0x243c <free+0x10c>
    236e:	ed 01       	movw	r28, r26
    2370:	20 e0       	ldi	r18, 0x00	; 0
    2372:	30 e0       	ldi	r19, 0x00	; 0
    2374:	ce 17       	cp	r28, r30
    2376:	df 07       	cpc	r29, r31
    2378:	40 f4       	brcc	.+16     	; 0x238a <free+0x5a>
    237a:	4a 81       	ldd	r20, Y+2	; 0x02
    237c:	5b 81       	ldd	r21, Y+3	; 0x03
    237e:	9e 01       	movw	r18, r28
    2380:	41 15       	cp	r20, r1
    2382:	51 05       	cpc	r21, r1
    2384:	f1 f0       	breq	.+60     	; 0x23c2 <free+0x92>
    2386:	ea 01       	movw	r28, r20
    2388:	f5 cf       	rjmp	.-22     	; 0x2374 <free+0x44>
    238a:	d3 83       	std	Z+3, r29	; 0x03
    238c:	c2 83       	std	Z+2, r28	; 0x02
    238e:	40 81       	ld	r20, Z
    2390:	51 81       	ldd	r21, Z+1	; 0x01
    2392:	84 0f       	add	r24, r20
    2394:	95 1f       	adc	r25, r21
    2396:	c8 17       	cp	r28, r24
    2398:	d9 07       	cpc	r29, r25
    239a:	59 f4       	brne	.+22     	; 0x23b2 <free+0x82>
    239c:	88 81       	ld	r24, Y
    239e:	99 81       	ldd	r25, Y+1	; 0x01
    23a0:	84 0f       	add	r24, r20
    23a2:	95 1f       	adc	r25, r21
    23a4:	02 96       	adiw	r24, 0x02	; 2
    23a6:	91 83       	std	Z+1, r25	; 0x01
    23a8:	80 83       	st	Z, r24
    23aa:	8a 81       	ldd	r24, Y+2	; 0x02
    23ac:	9b 81       	ldd	r25, Y+3	; 0x03
    23ae:	93 83       	std	Z+3, r25	; 0x03
    23b0:	82 83       	std	Z+2, r24	; 0x02
    23b2:	21 15       	cp	r18, r1
    23b4:	31 05       	cpc	r19, r1
    23b6:	29 f4       	brne	.+10     	; 0x23c2 <free+0x92>
    23b8:	f0 93 e6 03 	sts	0x03E6, r31	; 0x8003e6 <__flp+0x1>
    23bc:	e0 93 e5 03 	sts	0x03E5, r30	; 0x8003e5 <__flp>
    23c0:	3d c0       	rjmp	.+122    	; 0x243c <free+0x10c>
    23c2:	e9 01       	movw	r28, r18
    23c4:	fb 83       	std	Y+3, r31	; 0x03
    23c6:	ea 83       	std	Y+2, r30	; 0x02
    23c8:	49 91       	ld	r20, Y+
    23ca:	59 91       	ld	r21, Y+
    23cc:	c4 0f       	add	r28, r20
    23ce:	d5 1f       	adc	r29, r21
    23d0:	ec 17       	cp	r30, r28
    23d2:	fd 07       	cpc	r31, r29
    23d4:	61 f4       	brne	.+24     	; 0x23ee <free+0xbe>
    23d6:	80 81       	ld	r24, Z
    23d8:	91 81       	ldd	r25, Z+1	; 0x01
    23da:	84 0f       	add	r24, r20
    23dc:	95 1f       	adc	r25, r21
    23de:	02 96       	adiw	r24, 0x02	; 2
    23e0:	e9 01       	movw	r28, r18
    23e2:	99 83       	std	Y+1, r25	; 0x01
    23e4:	88 83       	st	Y, r24
    23e6:	82 81       	ldd	r24, Z+2	; 0x02
    23e8:	93 81       	ldd	r25, Z+3	; 0x03
    23ea:	9b 83       	std	Y+3, r25	; 0x03
    23ec:	8a 83       	std	Y+2, r24	; 0x02
    23ee:	e0 e0       	ldi	r30, 0x00	; 0
    23f0:	f0 e0       	ldi	r31, 0x00	; 0
    23f2:	12 96       	adiw	r26, 0x02	; 2
    23f4:	8d 91       	ld	r24, X+
    23f6:	9c 91       	ld	r25, X
    23f8:	13 97       	sbiw	r26, 0x03	; 3
    23fa:	00 97       	sbiw	r24, 0x00	; 0
    23fc:	19 f0       	breq	.+6      	; 0x2404 <free+0xd4>
    23fe:	fd 01       	movw	r30, r26
    2400:	dc 01       	movw	r26, r24
    2402:	f7 cf       	rjmp	.-18     	; 0x23f2 <free+0xc2>
    2404:	8d 91       	ld	r24, X+
    2406:	9c 91       	ld	r25, X
    2408:	11 97       	sbiw	r26, 0x01	; 1
    240a:	9d 01       	movw	r18, r26
    240c:	2e 5f       	subi	r18, 0xFE	; 254
    240e:	3f 4f       	sbci	r19, 0xFF	; 255
    2410:	82 0f       	add	r24, r18
    2412:	93 1f       	adc	r25, r19
    2414:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    2418:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    241c:	28 17       	cp	r18, r24
    241e:	39 07       	cpc	r19, r25
    2420:	69 f4       	brne	.+26     	; 0x243c <free+0x10c>
    2422:	30 97       	sbiw	r30, 0x00	; 0
    2424:	29 f4       	brne	.+10     	; 0x2430 <free+0x100>
    2426:	10 92 e6 03 	sts	0x03E6, r1	; 0x8003e6 <__flp+0x1>
    242a:	10 92 e5 03 	sts	0x03E5, r1	; 0x8003e5 <__flp>
    242e:	02 c0       	rjmp	.+4      	; 0x2434 <free+0x104>
    2430:	13 82       	std	Z+3, r1	; 0x03
    2432:	12 82       	std	Z+2, r1	; 0x02
    2434:	b0 93 e4 03 	sts	0x03E4, r27	; 0x8003e4 <__brkval+0x1>
    2438:	a0 93 e3 03 	sts	0x03E3, r26	; 0x8003e3 <__brkval>
    243c:	df 91       	pop	r29
    243e:	cf 91       	pop	r28
    2440:	08 95       	ret

00002442 <memset>:
    2442:	dc 01       	movw	r26, r24
    2444:	01 c0       	rjmp	.+2      	; 0x2448 <memset+0x6>
    2446:	6d 93       	st	X+, r22
    2448:	41 50       	subi	r20, 0x01	; 1
    244a:	50 40       	sbci	r21, 0x00	; 0
    244c:	e0 f7       	brcc	.-8      	; 0x2446 <memset+0x4>
    244e:	08 95       	ret

00002450 <_exit>:
    2450:	f8 94       	cli

00002452 <__stop_program>:
    2452:	ff cf       	rjmp	.-2      	; 0x2452 <__stop_program>
