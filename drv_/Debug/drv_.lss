
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000024c  00800200  00001dee  00001e82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001dee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  0080044c  0080044c  000020ce  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000020ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000212c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  0000216c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002628  00000000  00000000  00002344  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000134b  00000000  00000000  0000496c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001221  00000000  00000000  00005cb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000590  00000000  00000000  00006ed8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b64  00000000  00000000  00007468  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001987  00000000  00000000  00007fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00009953  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a8 c0       	rjmp	.+336    	; 0x152 <__ctors_end>
       2:	00 00       	nop
       4:	c6 c0       	rjmp	.+396    	; 0x192 <__bad_interrupt>
       6:	00 00       	nop
       8:	c4 c0       	rjmp	.+392    	; 0x192 <__bad_interrupt>
       a:	00 00       	nop
       c:	c2 c0       	rjmp	.+388    	; 0x192 <__bad_interrupt>
       e:	00 00       	nop
      10:	c0 c0       	rjmp	.+384    	; 0x192 <__bad_interrupt>
      12:	00 00       	nop
      14:	be c0       	rjmp	.+380    	; 0x192 <__bad_interrupt>
      16:	00 00       	nop
      18:	bc c0       	rjmp	.+376    	; 0x192 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ba c0       	rjmp	.+372    	; 0x192 <__bad_interrupt>
      1e:	00 00       	nop
      20:	b8 c0       	rjmp	.+368    	; 0x192 <__bad_interrupt>
      22:	00 00       	nop
      24:	b6 c0       	rjmp	.+364    	; 0x192 <__bad_interrupt>
      26:	00 00       	nop
      28:	b4 c0       	rjmp	.+360    	; 0x192 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b2 c0       	rjmp	.+356    	; 0x192 <__bad_interrupt>
      2e:	00 00       	nop
      30:	b0 c0       	rjmp	.+352    	; 0x192 <__bad_interrupt>
      32:	00 00       	nop
      34:	ae c0       	rjmp	.+348    	; 0x192 <__bad_interrupt>
      36:	00 00       	nop
      38:	ac c0       	rjmp	.+344    	; 0x192 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	aa c0       	rjmp	.+340    	; 0x192 <__bad_interrupt>
      3e:	00 00       	nop
      40:	a8 c0       	rjmp	.+336    	; 0x192 <__bad_interrupt>
      42:	00 00       	nop
      44:	a6 c0       	rjmp	.+332    	; 0x192 <__bad_interrupt>
      46:	00 00       	nop
      48:	a4 c0       	rjmp	.+328    	; 0x192 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a2 c0       	rjmp	.+324    	; 0x192 <__bad_interrupt>
      4e:	00 00       	nop
      50:	a0 c0       	rjmp	.+320    	; 0x192 <__bad_interrupt>
      52:	00 00       	nop
      54:	9e c0       	rjmp	.+316    	; 0x192 <__bad_interrupt>
      56:	00 00       	nop
      58:	9c c0       	rjmp	.+312    	; 0x192 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	9a c0       	rjmp	.+308    	; 0x192 <__bad_interrupt>
      5e:	00 00       	nop
      60:	98 c0       	rjmp	.+304    	; 0x192 <__bad_interrupt>
      62:	00 00       	nop
      64:	96 c0       	rjmp	.+300    	; 0x192 <__bad_interrupt>
      66:	00 00       	nop
      68:	94 c0       	rjmp	.+296    	; 0x192 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	92 c0       	rjmp	.+292    	; 0x192 <__bad_interrupt>
      6e:	00 00       	nop
      70:	90 c0       	rjmp	.+288    	; 0x192 <__bad_interrupt>
      72:	00 00       	nop
      74:	8e c0       	rjmp	.+284    	; 0x192 <__bad_interrupt>
      76:	00 00       	nop
      78:	8c c0       	rjmp	.+280    	; 0x192 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	8a c0       	rjmp	.+276    	; 0x192 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a6 c0       	rjmp	.+332    	; 0x1ce <__vector_32>
      82:	00 00       	nop
      84:	86 c0       	rjmp	.+268    	; 0x192 <__bad_interrupt>
      86:	00 00       	nop
      88:	84 c0       	rjmp	.+264    	; 0x192 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	82 c0       	rjmp	.+260    	; 0x192 <__bad_interrupt>
      8e:	00 00       	nop
      90:	80 c0       	rjmp	.+256    	; 0x192 <__bad_interrupt>
      92:	00 00       	nop
      94:	7e c0       	rjmp	.+252    	; 0x192 <__bad_interrupt>
      96:	00 00       	nop
      98:	7c c0       	rjmp	.+248    	; 0x192 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	7a c0       	rjmp	.+244    	; 0x192 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	78 c0       	rjmp	.+240    	; 0x192 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	76 c0       	rjmp	.+236    	; 0x192 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	74 c0       	rjmp	.+232    	; 0x192 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	72 c0       	rjmp	.+228    	; 0x192 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	70 c0       	rjmp	.+224    	; 0x192 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	6e c0       	rjmp	.+220    	; 0x192 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	6c c0       	rjmp	.+216    	; 0x192 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	2a c1       	rjmp	.+596    	; 0x312 <__vector_47>
      be:	00 00       	nop
      c0:	68 c0       	rjmp	.+208    	; 0x192 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	66 c0       	rjmp	.+204    	; 0x192 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	64 c0       	rjmp	.+200    	; 0x192 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	62 c0       	rjmp	.+196    	; 0x192 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	60 c0       	rjmp	.+192    	; 0x192 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	5e c0       	rjmp	.+188    	; 0x192 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	5c c0       	rjmp	.+184    	; 0x192 <__bad_interrupt>
      da:	00 00       	nop
      dc:	5a c0       	rjmp	.+180    	; 0x192 <__bad_interrupt>
      de:	00 00       	nop
      e0:	58 c0       	rjmp	.+176    	; 0x192 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	b0 03       	fmuls	r19, r16
      e6:	b5 03       	fmuls	r19, r21
      e8:	ba 03       	fmulsu	r19, r18
      ea:	bf 03       	fmulsu	r19, r23
      ec:	c4 03       	fmuls	r20, r20
      ee:	c9 03       	fmulsu	r20, r17
      f0:	ce 03       	fmulsu	r20, r22
      f2:	d3 03       	fmuls	r21, r19
      f4:	d8 03       	fmulsu	r21, r16
      f6:	dd 03       	fmulsu	r21, r21
      f8:	03 6e       	ori	r16, 0xE3	; 227
      fa:	db 36       	cpi	r29, 0x6B	; 107
      fc:	3d 9a       	sbi	0x07, 5	; 7
      fe:	99 99       	sbic	0x13, 1	; 19
     100:	99 3d       	cpi	r25, 0xD9	; 217
     102:	ab aa       	std	Y+51, r10	; 0x33
     104:	aa 2a       	or	r10, r26
     106:	3e 00       	.word	0x003e	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	07 2c       	mov	r0, r7
     10e:	7a a5       	ldd	r23, Y+42	; 0x2a
     110:	ba 6c       	ori	r27, 0xCA	; 202
     112:	c5 90       	lpm	r12, Z+
     114:	da 3b       	cpi	r29, 0xBA	; 186
     116:	93 65       	ori	r25, 0x53	; 83
     118:	fc 8b       	std	Y+20, r31	; 0x14
     11a:	bc 53       	subi	r27, 0x3C	; 60
     11c:	f8 10       	cpse	r15, r8
     11e:	fd 3c       	cpi	r31, 0xCD	; 205
     120:	56 92       	lac	Z, r5
     122:	83 4d       	sbci	r24, 0xD3	; 211
     124:	bd 87       	std	Y+13, r27	; 0x0d
     126:	9d 3a       	cpi	r25, 0xAD	; 173
     128:	b6 3d       	cpi	r27, 0xD6	; 214
     12a:	cb c9       	rjmp	.-3178   	; 0xfffff4c2 <__eeprom_end+0xff7ef4c2>
     12c:	bf 5b       	subi	r27, 0xBF	; 191
     12e:	be 73       	andi	r27, 0x3E	; 62
     130:	da 0f       	add	r29, r26
     132:	c9 3f       	cpi	r28, 0xF9	; 249
     134:	05 a8       	ldd	r0, Z+53	; 0x35
     136:	4c cd       	rjmp	.-1384   	; 0xfffffbd0 <__eeprom_end+0xff7efbd0>
     138:	b2 d4       	rcall	.+2404   	; 0xa9e <mpu6050_readBytes+0x18>
     13a:	4e b9       	out	0x0e, r20	; 14
     13c:	38 36       	cpi	r19, 0x68	; 104
     13e:	a9 02       	muls	r26, r25
     140:	0c 50       	subi	r16, 0x0C	; 12
     142:	b9 91       	ld	r27, Y+
     144:	86 88       	ldd	r8, Z+22	; 0x16
     146:	08 3c       	cpi	r16, 0xC8	; 200
     148:	a6 aa       	std	Z+54, r10	; 0x36
     14a:	aa 2a       	or	r10, r26
     14c:	be 00       	.word	0x00be	; ????
     14e:	00 00       	nop
     150:	80 3f       	cpi	r24, 0xF0	; 240

00000152 <__ctors_end>:
     152:	11 24       	eor	r1, r1
     154:	1f be       	out	0x3f, r1	; 63
     156:	cf ef       	ldi	r28, 0xFF	; 255
     158:	d1 e2       	ldi	r29, 0x21	; 33
     15a:	de bf       	out	0x3e, r29	; 62
     15c:	cd bf       	out	0x3d, r28	; 61
     15e:	00 e0       	ldi	r16, 0x00	; 0
     160:	0c bf       	out	0x3c, r16	; 60

00000162 <__do_copy_data>:
     162:	14 e0       	ldi	r17, 0x04	; 4
     164:	a0 e0       	ldi	r26, 0x00	; 0
     166:	b2 e0       	ldi	r27, 0x02	; 2
     168:	ee ee       	ldi	r30, 0xEE	; 238
     16a:	fd e1       	ldi	r31, 0x1D	; 29
     16c:	00 e0       	ldi	r16, 0x00	; 0
     16e:	0b bf       	out	0x3b, r16	; 59
     170:	02 c0       	rjmp	.+4      	; 0x176 <__do_copy_data+0x14>
     172:	07 90       	elpm	r0, Z+
     174:	0d 92       	st	X+, r0
     176:	ac 34       	cpi	r26, 0x4C	; 76
     178:	b1 07       	cpc	r27, r17
     17a:	d9 f7       	brne	.-10     	; 0x172 <__do_copy_data+0x10>

0000017c <__do_clear_bss>:
     17c:	24 e0       	ldi	r18, 0x04	; 4
     17e:	ac e4       	ldi	r26, 0x4C	; 76
     180:	b4 e0       	ldi	r27, 0x04	; 4
     182:	01 c0       	rjmp	.+2      	; 0x186 <.do_clear_bss_start>

00000184 <.do_clear_bss_loop>:
     184:	1d 92       	st	X+, r1

00000186 <.do_clear_bss_start>:
     186:	a0 37       	cpi	r26, 0x70	; 112
     188:	b2 07       	cpc	r27, r18
     18a:	e1 f7       	brne	.-8      	; 0x184 <.do_clear_bss_loop>
     18c:	10 d1       	rcall	.+544    	; 0x3ae <main>
     18e:	0c 94 f5 0e 	jmp	0x1dea	; 0x1dea <_exit>

00000192 <__bad_interrupt>:
     192:	36 cf       	rjmp	.-404    	; 0x0 <__vectors>

00000194 <init_gpio>:
	*/
	//DDRB|=(1<<PB5);//LED13
	//sbi(DDRB,4);//digital 10
	//sbi(DDRB,5);//digital 11
	//sbi(DDRB,6);//digital 12
	sbi(DDRH,3);//digital 6 OC4A
     194:	e1 e0       	ldi	r30, 0x01	; 1
     196:	f1 e0       	ldi	r31, 0x01	; 1
     198:	80 81       	ld	r24, Z
     19a:	88 60       	ori	r24, 0x08	; 8
     19c:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     19e:	80 81       	ld	r24, Z
     1a0:	80 61       	ori	r24, 0x10	; 16
     1a2:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     1a4:	80 81       	ld	r24, Z
     1a6:	80 62       	ori	r24, 0x20	; 32
     1a8:	80 83       	st	Z, r24
     1aa:	08 95       	ret

000001ac <uart_putchar>:
}
void writeOcr(uint16_t bla)
{	
	cli();
	OCR1A=bla;
	sei();
     1ac:	cf 93       	push	r28
     1ae:	c8 2f       	mov	r28, r24
     1b0:	8a 30       	cpi	r24, 0x0A	; 10
     1b2:	11 f4       	brne	.+4      	; 0x1b8 <uart_putchar+0xc>
     1b4:	8d e0       	ldi	r24, 0x0D	; 13
     1b6:	fa df       	rcall	.-12     	; 0x1ac <uart_putchar>
     1b8:	e0 ec       	ldi	r30, 0xC0	; 192
     1ba:	f0 e0       	ldi	r31, 0x00	; 0
     1bc:	80 81       	ld	r24, Z
     1be:	85 ff       	sbrs	r24, 5
     1c0:	fd cf       	rjmp	.-6      	; 0x1bc <uart_putchar+0x10>
     1c2:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     1c6:	80 e0       	ldi	r24, 0x00	; 0
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	cf 91       	pop	r28
     1cc:	08 95       	ret

000001ce <__vector_32>:
     1ce:	1f 92       	push	r1
     1d0:	0f 92       	push	r0
     1d2:	0f b6       	in	r0, 0x3f	; 63
     1d4:	0f 92       	push	r0
     1d6:	11 24       	eor	r1, r1
     1d8:	8f 93       	push	r24
     1da:	9f 93       	push	r25
     1dc:	af 93       	push	r26
     1de:	bf 93       	push	r27
     1e0:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <_10micros>
     1e4:	90 91 4f 04 	lds	r25, 0x044F	; 0x80044f <_10micros+0x1>
     1e8:	a0 91 50 04 	lds	r26, 0x0450	; 0x800450 <_10micros+0x2>
     1ec:	b0 91 51 04 	lds	r27, 0x0451	; 0x800451 <_10micros+0x3>
     1f0:	01 96       	adiw	r24, 0x01	; 1
     1f2:	a1 1d       	adc	r26, r1
     1f4:	b1 1d       	adc	r27, r1
     1f6:	80 93 4e 04 	sts	0x044E, r24	; 0x80044e <_10micros>
     1fa:	90 93 4f 04 	sts	0x044F, r25	; 0x80044f <_10micros+0x1>
     1fe:	a0 93 50 04 	sts	0x0450, r26	; 0x800450 <_10micros+0x2>
     202:	b0 93 51 04 	sts	0x0451, r27	; 0x800451 <_10micros+0x3>
     206:	bf 91       	pop	r27
     208:	af 91       	pop	r26
     20a:	9f 91       	pop	r25
     20c:	8f 91       	pop	r24
     20e:	0f 90       	pop	r0
     210:	0f be       	out	0x3f, r0	; 63
     212:	0f 90       	pop	r0
     214:	1f 90       	pop	r1
     216:	18 95       	reti

00000218 <PWM_update>:
     218:	e0 91 52 04 	lds	r30, 0x0452	; 0x800452 <U_step>
     21c:	f0 91 53 04 	lds	r31, 0x0453	; 0x800453 <U_step+0x1>
     220:	e5 5c       	subi	r30, 0xC5	; 197
     222:	fd 4f       	sbci	r31, 0xFD	; 253
     224:	80 81       	ld	r24, Z
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     22c:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     230:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <V_step>
     234:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <V_step+0x1>
     238:	e5 5c       	subi	r30, 0xC5	; 197
     23a:	fd 4f       	sbci	r31, 0xFD	; 253
     23c:	80 81       	ld	r24, Z
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     244:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     248:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <W_step>
     24c:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <W_step+0x1>
     250:	e5 5c       	subi	r30, 0xC5	; 197
     252:	fd 4f       	sbci	r31, 0xFD	; 253
     254:	80 81       	ld	r24, Z
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     25c:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     260:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <incr>
     264:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <incr+0x1>
     268:	40 91 52 04 	lds	r20, 0x0452	; 0x800452 <U_step>
     26c:	50 91 53 04 	lds	r21, 0x0453	; 0x800453 <U_step+0x1>
     270:	46 0f       	add	r20, r22
     272:	57 1f       	adc	r21, r23
     274:	50 93 53 04 	sts	0x0453, r21	; 0x800453 <U_step+0x1>
     278:	40 93 52 04 	sts	0x0452, r20	; 0x800452 <U_step>
     27c:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <V_step>
     280:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <V_step+0x1>
     284:	26 0f       	add	r18, r22
     286:	37 1f       	adc	r19, r23
     288:	30 93 0b 02 	sts	0x020B, r19	; 0x80020b <V_step+0x1>
     28c:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <V_step>
     290:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <W_step>
     294:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <W_step+0x1>
     298:	86 0f       	add	r24, r22
     29a:	97 1f       	adc	r25, r23
     29c:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <W_step+0x1>
     2a0:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <W_step>
     2a4:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <sinTableSize>
     2a8:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <sinTableSize+0x1>
     2ac:	64 17       	cp	r22, r20
     2ae:	75 07       	cpc	r23, r21
     2b0:	2c f4       	brge	.+10     	; 0x2bc <PWM_update+0xa4>
     2b2:	10 92 53 04 	sts	0x0453, r1	; 0x800453 <U_step+0x1>
     2b6:	10 92 52 04 	sts	0x0452, r1	; 0x800452 <U_step>
     2ba:	06 c0       	rjmp	.+12     	; 0x2c8 <PWM_update+0xb0>
     2bc:	55 23       	and	r21, r21
     2be:	24 f4       	brge	.+8      	; 0x2c8 <PWM_update+0xb0>
     2c0:	70 93 53 04 	sts	0x0453, r23	; 0x800453 <U_step+0x1>
     2c4:	60 93 52 04 	sts	0x0452, r22	; 0x800452 <U_step>
     2c8:	62 17       	cp	r22, r18
     2ca:	73 07       	cpc	r23, r19
     2cc:	2c f4       	brge	.+10     	; 0x2d8 <PWM_update+0xc0>
     2ce:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <V_step+0x1>
     2d2:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <V_step>
     2d6:	06 c0       	rjmp	.+12     	; 0x2e4 <PWM_update+0xcc>
     2d8:	33 23       	and	r19, r19
     2da:	24 f4       	brge	.+8      	; 0x2e4 <PWM_update+0xcc>
     2dc:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <V_step+0x1>
     2e0:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <V_step>
     2e4:	68 17       	cp	r22, r24
     2e6:	79 07       	cpc	r23, r25
     2e8:	2c f4       	brge	.+10     	; 0x2f4 <PWM_update+0xdc>
     2ea:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <W_step+0x1>
     2ee:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <W_step>
     2f2:	06 c0       	rjmp	.+12     	; 0x300 <PWM_update+0xe8>
     2f4:	99 23       	and	r25, r25
     2f6:	24 f4       	brge	.+8      	; 0x300 <PWM_update+0xe8>
     2f8:	70 93 09 02 	sts	0x0209, r23	; 0x800209 <W_step+0x1>
     2fc:	60 93 08 02 	sts	0x0208, r22	; 0x800208 <W_step>
     300:	80 91 4c 04 	lds	r24, 0x044C	; 0x80044c <__data_end>
     304:	90 91 4d 04 	lds	r25, 0x044D	; 0x80044d <__data_end+0x1>
     308:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     30c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     310:	08 95       	ret

00000312 <__vector_47>:
     312:	1f 92       	push	r1
     314:	0f 92       	push	r0
     316:	0f b6       	in	r0, 0x3f	; 63
     318:	0f 92       	push	r0
     31a:	11 24       	eor	r1, r1
     31c:	0b b6       	in	r0, 0x3b	; 59
     31e:	0f 92       	push	r0
     320:	2f 93       	push	r18
     322:	3f 93       	push	r19
     324:	4f 93       	push	r20
     326:	5f 93       	push	r21
     328:	6f 93       	push	r22
     32a:	7f 93       	push	r23
     32c:	8f 93       	push	r24
     32e:	9f 93       	push	r25
     330:	af 93       	push	r26
     332:	bf 93       	push	r27
     334:	ef 93       	push	r30
     336:	ff 93       	push	r31
     338:	6f df       	rcall	.-290    	; 0x218 <PWM_update>
     33a:	ff 91       	pop	r31
     33c:	ef 91       	pop	r30
     33e:	bf 91       	pop	r27
     340:	af 91       	pop	r26
     342:	9f 91       	pop	r25
     344:	8f 91       	pop	r24
     346:	7f 91       	pop	r23
     348:	6f 91       	pop	r22
     34a:	5f 91       	pop	r21
     34c:	4f 91       	pop	r20
     34e:	3f 91       	pop	r19
     350:	2f 91       	pop	r18
     352:	0f 90       	pop	r0
     354:	0b be       	out	0x3b, r0	; 59
     356:	0f 90       	pop	r0
     358:	0f be       	out	0x3f, r0	; 63
     35a:	0f 90       	pop	r0
     35c:	1f 90       	pop	r1
     35e:	18 95       	reti

00000360 <print16>:
//}

void print16(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     360:	0f 93       	push	r16
     362:	1f 93       	push	r17
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	2a 97       	sbiw	r28, 0x0a	; 10
     36e:	0f b6       	in	r0, 0x3f	; 63
     370:	f8 94       	cli
     372:	de bf       	out	0x3e, r29	; 62
     374:	0f be       	out	0x3f, r0	; 63
     376:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     378:	4a e0       	ldi	r20, 0x0A	; 10
     37a:	8e 01       	movw	r16, r28
     37c:	0f 5f       	subi	r16, 0xFF	; 255
     37e:	1f 4f       	sbci	r17, 0xFF	; 255
     380:	b8 01       	movw	r22, r16
     382:	fc 01       	movw	r30, r24
     384:	80 81       	ld	r24, Z
     386:	91 81       	ldd	r25, Z+1	; 0x01
     388:	0e 94 41 0a 	call	0x1482	; 0x1482 <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     38c:	1f 93       	push	r17
     38e:	0f 93       	push	r16
     390:	0e 94 ae 0a 	call	0x155c	; 0x155c <printf>
	//printf("\n");
}
     394:	0f 90       	pop	r0
     396:	0f 90       	pop	r0
     398:	2a 96       	adiw	r28, 0x0a	; 10
     39a:	0f b6       	in	r0, 0x3f	; 63
     39c:	f8 94       	cli
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	0f be       	out	0x3f, r0	; 63
     3a2:	cd bf       	out	0x3d, r28	; 61
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	1f 91       	pop	r17
     3aa:	0f 91       	pop	r16
     3ac:	08 95       	ret

000003ae <main>:
uint8_t phase = 60;//sinTableSize / 3;         // Find phase shift and initial A, B C phase values

uint16_t pwm_delay=0;
int main(void)

{	
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
     3b2:	cd b7       	in	r28, 0x3d	; 61
     3b4:	de b7       	in	r29, 0x3e	; 62
     3b6:	e0 97       	sbiw	r28, 0x30	; 48
     3b8:	0f b6       	in	r0, 0x3f	; 63
     3ba:	f8 94       	cli
     3bc:	de bf       	out	0x3e, r29	; 62
     3be:	0f be       	out	0x3f, r0	; 63
	
	init_gpio();
	i2c_init();
     3c0:	cd bf       	out	0x3d, r28	; 61
	USART_Init(MY_UBRR);
     3c2:	e8 de       	rcall	.-560    	; 0x194 <init_gpio>
     3c4:	48 d4       	rcall	.+2192   	; 0xc56 <i2c_init>
     3c6:	80 e1       	ldi	r24, 0x10	; 16
	uart_str = fdevopen(uart_putchar, NULL);
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	f6 d4       	rcall	.+2540   	; 0xdb8 <USART_Init>
     3cc:	60 e0       	ldi	r22, 0x00	; 0
     3ce:	70 e0       	ldi	r23, 0x00	; 0
     3d0:	86 ed       	ldi	r24, 0xD6	; 214
     3d2:	90 e0       	ldi	r25, 0x00	; 0
	setup_timer1();
	setup_timer3();
     3d4:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <fdevopen>
	setup_timer4();//pwm
     3d8:	90 93 55 04 	sts	0x0455, r25	; 0x800455 <uart_str+0x1>
	Enable_timer3_compare_interrupt();
     3dc:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <uart_str>
	Enable_timer1_compare_interrupt();
     3e0:	2b d4       	rcall	.+2134   	; 0xc38 <setup_timer1>
     3e2:	1b d4       	rcall	.+2102   	; 0xc1a <setup_timer3>
	OCR3A=159;//interrupt every 10us
     3e4:	06 d4       	rcall	.+2060   	; 0xbf2 <setup_timer4>
     3e6:	22 d4       	rcall	.+2116   	; 0xc2c <Enable_timer3_compare_interrupt>
     3e8:	30 d4       	rcall	.+2144   	; 0xc4a <Enable_timer1_compare_interrupt>
     3ea:	8f e9       	ldi	r24, 0x9F	; 159
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
	OCR5A=4000;
     3f2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     3f6:	80 ea       	ldi	r24, 0xA0	; 160
     3f8:	9f e0       	ldi	r25, 0x0F	; 15
     3fa:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
	float acc_total_vector=0;
	float angle_pitch_acc=0;
	float angle_roll_acc=0;
	bool set_gyro_angles;
	#ifdef CALIBERATED_DATA
		int32_t gyroX_calib=0;
     3fe:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     402:	1d 86       	std	Y+13, r1	; 0x0d
		int32_t gyroY_calib=0;
     404:	1e 86       	std	Y+14, r1	; 0x0e
     406:	1f 86       	std	Y+15, r1	; 0x0f
     408:	18 8a       	std	Y+16, r1	; 0x10
     40a:	19 8a       	std	Y+17, r1	; 0x11
		int32_t gyroZ_calib=0;
     40c:	1a 8a       	std	Y+18, r1	; 0x12
     40e:	1b 8a       	std	Y+19, r1	; 0x13
     410:	1c 8a       	std	Y+20, r1	; 0x14
		int32_t accelX_calib=0;
		int32_t accelY_calib=0;
		int32_t accelZ_calib=0;
		mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
     412:	1d 8a       	std	Y+21, r1	; 0x15
     414:	1e 8a       	std	Y+22, r1	; 0x16
     416:	1f 8a       	std	Y+23, r1	; 0x17
     418:	18 8e       	std	Y+24, r1	; 0x18
     41a:	ae 01       	movw	r20, r28
     41c:	4b 5e       	subi	r20, 0xEB	; 235
		//mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
	#endif
	mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     41e:	5f 4f       	sbci	r21, 0xFF	; 255
     420:	be 01       	movw	r22, r28
     422:	6f 5e       	subi	r22, 0xEF	; 239
	mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     424:	7f 4f       	sbci	r23, 0xFF	; 255
     426:	ce 01       	movw	r24, r28
     428:	0d 96       	adiw	r24, 0x0d	; 13
	mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     42a:	65 d2       	rcall	.+1226   	; 0x8f6 <mpu6050_calibrate_gyro>
     42c:	67 e0       	ldi	r22, 0x07	; 7
     42e:	89 e1       	ldi	r24, 0x19	; 25
     430:	19 d3       	rcall	.+1586   	; 0xa64 <mpu6050_writeByte>
	mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     432:	60 e0       	ldi	r22, 0x00	; 0
     434:	8a e1       	ldi	r24, 0x1A	; 26
     436:	16 d3       	rcall	.+1580   	; 0xa64 <mpu6050_writeByte>
     438:	68 e0       	ldi	r22, 0x08	; 8
	mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     43a:	8b e1       	ldi	r24, 0x1B	; 27
     43c:	13 d3       	rcall	.+1574   	; 0xa64 <mpu6050_writeByte>
     43e:	60 e1       	ldi	r22, 0x10	; 16
     440:	8c e1       	ldi	r24, 0x1C	; 28
	
	/*-----------------end---------------*/
	sei();
     442:	10 d3       	rcall	.+1568   	; 0xa64 <mpu6050_writeByte>
	uint32_t timer1=_10micros;
     444:	61 e0       	ldi	r22, 0x01	; 1
     446:	8b e6       	ldi	r24, 0x6B	; 107
     448:	0d d3       	rcall	.+1562   	; 0xa64 <mpu6050_writeByte>
     44a:	78 94       	sei
     44c:	40 90 4e 04 	lds	r4, 0x044E	; 0x80044e <_10micros>
     450:	50 90 4f 04 	lds	r5, 0x044F	; 0x80044f <_10micros+0x1>
	int16_t gyro_z;
	int16_t accel_x;
	int16_t accel_y;
	int16_t accel_z;
	float angle_pitch=0;
	float angle_roll=0;
     454:	60 90 50 04 	lds	r6, 0x0450	; 0x800450 <_10micros+0x2>
     458:	70 90 51 04 	lds	r7, 0x0451	; 0x800451 <_10micros+0x3>
	int16_t gyro_y;
	int16_t gyro_z;
	int16_t accel_x;
	int16_t accel_y;
	int16_t accel_z;
	float angle_pitch=0;
     45c:	1b a6       	std	Y+43, r1	; 0x2b
     45e:	1c a6       	std	Y+44, r1	; 0x2c
     460:	1d a6       	std	Y+45, r1	; 0x2d
     462:	1e a6       	std	Y+46, r1	; 0x2e
	/*-----------------end---------------*/
	sei();
	uint32_t timer1=_10micros;
    while (1) 
    {
    	mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     464:	1f a2       	std	Y+39, r1	; 0x27
     466:	18 a6       	std	Y+40, r1	; 0x28
     468:	19 a6       	std	Y+41, r1	; 0x29
     46a:	1a a6       	std	Y+42, r1	; 0x2a
     46c:	ce 01       	movw	r24, r28
     46e:	05 96       	adiw	r24, 0x05	; 5
     470:	7c 01       	movw	r14, r24
     472:	8e 01       	movw	r16, r28
     474:	0d 5f       	subi	r16, 0xFD	; 253
     476:	1f 4f       	sbci	r17, 0xFF	; 255
     478:	9e 01       	movw	r18, r28
     47a:	2f 5f       	subi	r18, 0xFF	; 255
     47c:	3f 4f       	sbci	r19, 0xFF	; 255
     47e:	ae 01       	movw	r20, r28
     480:	45 5f       	subi	r20, 0xF5	; 245
     482:	5f 4f       	sbci	r21, 0xFF	; 255
    	double dt = (double)((_10micros - timer1));
     484:	be 01       	movw	r22, r28
     486:	67 5f       	subi	r22, 0xF7	; 247
     488:	7f 4f       	sbci	r23, 0xFF	; 255
     48a:	02 96       	adiw	r24, 0x02	; 2
     48c:	47 d3       	rcall	.+1678   	; 0xb1c <mpu6050_getRawData>
     48e:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <_10micros>
     492:	90 91 4f 04 	lds	r25, 0x044F	; 0x80044f <_10micros+0x1>
     496:	a0 91 50 04 	lds	r26, 0x0450	; 0x800450 <_10micros+0x2>
     49a:	b0 91 51 04 	lds	r27, 0x0451	; 0x800451 <_10micros+0x3>
     49e:	bc 01       	movw	r22, r24
     4a0:	cd 01       	movw	r24, r26
     4a2:	64 19       	sub	r22, r4
     4a4:	75 09       	sbc	r23, r5
     4a6:	86 09       	sbc	r24, r6
    	timer1 = _10micros;
     4a8:	97 09       	sbc	r25, r7
     4aa:	a6 d5       	rcall	.+2892   	; 0xff8 <__floatunsisf>
     4ac:	6b 01       	movw	r12, r22
     4ae:	7c 01       	movw	r14, r24
     4b0:	40 90 4e 04 	lds	r4, 0x044E	; 0x80044e <_10micros>
     4b4:	50 90 4f 04 	lds	r5, 0x044F	; 0x80044f <_10micros+0x1>
			#ifdef CALIBERATED_DATA
				accX;
     4b8:	60 90 50 04 	lds	r6, 0x0450	; 0x800450 <_10micros+0x2>
				accY;
     4bc:	70 90 51 04 	lds	r7, 0x0451	; 0x800451 <_10micros+0x3>
     4c0:	2f 80       	ldd	r2, Y+7	; 0x07
     4c2:	38 84       	ldd	r3, Y+8	; 0x08
				accZ;
     4c4:	89 85       	ldd	r24, Y+9	; 0x09
     4c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4c8:	98 a3       	std	Y+32, r25	; 0x20
     4ca:	8f 8f       	std	Y+31, r24	; 0x1f
				grX;
     4cc:	8b 85       	ldd	r24, Y+11	; 0x0b
     4ce:	9c 85       	ldd	r25, Y+12	; 0x0c
     4d0:	9c a3       	std	Y+36, r25	; 0x24
     4d2:	8b a3       	std	Y+35, r24	; 0x23
     4d4:	69 81       	ldd	r22, Y+1	; 0x01
     4d6:	7a 81       	ldd	r23, Y+2	; 0x02
     4d8:	8d 85       	ldd	r24, Y+13	; 0x0d
     4da:	9e 85       	ldd	r25, Y+14	; 0x0e
				grY;
     4dc:	68 1b       	sub	r22, r24
     4de:	79 0b       	sbc	r23, r25
     4e0:	7a 83       	std	Y+2, r23	; 0x02
     4e2:	69 83       	std	Y+1, r22	; 0x01
     4e4:	0b 81       	ldd	r16, Y+3	; 0x03
     4e6:	1c 81       	ldd	r17, Y+4	; 0x04
     4e8:	89 89       	ldd	r24, Y+17	; 0x11
				grZ;
     4ea:	9a 89       	ldd	r25, Y+18	; 0x12
     4ec:	08 1b       	sub	r16, r24
     4ee:	19 0b       	sbc	r17, r25
     4f0:	1c 83       	std	Y+4, r17	; 0x04
     4f2:	0b 83       	std	Y+3, r16	; 0x03
     4f4:	ad 80       	ldd	r10, Y+5	; 0x05
		#else
			#ifdef GYRO
				//Accelerometer angle calculations
				double gyroXrate = gyro_x / 65.5; // Convert to deg/s
				double gyroYrate = gyro_y / 65.5; // Convert to deg/s
				angle_pitch += gyroXrate*dt/100000; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     4f6:	be 80       	ldd	r11, Y+6	; 0x06
     4f8:	8d 89       	ldd	r24, Y+21	; 0x15
     4fa:	9e 89       	ldd	r25, Y+22	; 0x16
     4fc:	a8 1a       	sub	r10, r24
     4fe:	b9 0a       	sbc	r11, r25
     500:	be 82       	std	Y+6, r11	; 0x06
     502:	ad 82       	std	Y+5, r10	; 0x05
     504:	07 2e       	mov	r0, r23
     506:	00 0c       	add	r0, r0
     508:	88 0b       	sbc	r24, r24
     50a:	99 0b       	sbc	r25, r25
     50c:	77 d5       	rcall	.+2798   	; 0xffc <__floatsisf>
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	43 e8       	ldi	r20, 0x83	; 131
     514:	52 e4       	ldi	r21, 0x42	; 66
     516:	d7 d4       	rcall	.+2478   	; 0xec6 <__divsf3>
     518:	a7 01       	movw	r20, r14
     51a:	96 01       	movw	r18, r12
     51c:	4c d6       	rcall	.+3224   	; 0x11b6 <__mulsf3>
     51e:	20 e0       	ldi	r18, 0x00	; 0
     520:	30 e5       	ldi	r19, 0x50	; 80
     522:	43 ec       	ldi	r20, 0xC3	; 195
     524:	57 e4       	ldi	r21, 0x47	; 71
     526:	cf d4       	rcall	.+2462   	; 0xec6 <__divsf3>
     528:	2f a1       	ldd	r18, Y+39	; 0x27
				angle_roll += gyroYrate*dt/100000;  //Calculate the traveled roll angle and add this to the angle_roll variable
     52a:	38 a5       	ldd	r19, Y+40	; 0x28
     52c:	49 a5       	ldd	r20, Y+41	; 0x29
     52e:	5a a5       	ldd	r21, Y+42	; 0x2a
     530:	4f d4       	rcall	.+2206   	; 0xdd0 <__addsf3>
     532:	6f a3       	std	Y+39, r22	; 0x27
     534:	78 a7       	std	Y+40, r23	; 0x28
     536:	89 a7       	std	Y+41, r24	; 0x29
     538:	9a a7       	std	Y+42, r25	; 0x2a
     53a:	b8 01       	movw	r22, r16
     53c:	11 0f       	add	r17, r17
     53e:	88 0b       	sbc	r24, r24
     540:	99 0b       	sbc	r25, r25
     542:	5c d5       	rcall	.+2744   	; 0xffc <__floatsisf>
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	43 e8       	ldi	r20, 0x83	; 131
     54a:	52 e4       	ldi	r21, 0x42	; 66
     54c:	bc d4       	rcall	.+2424   	; 0xec6 <__divsf3>
     54e:	a7 01       	movw	r20, r14
     550:	96 01       	movw	r18, r12
     552:	31 d6       	rcall	.+3170   	; 0x11b6 <__mulsf3>
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	30 e5       	ldi	r19, 0x50	; 80
     558:	43 ec       	ldi	r20, 0xC3	; 195
				
				//0.000001066 = 0.0000611 * (3.142(PI) / 180degr) The Arduino sin function is in radians
				angle_pitch += angle_roll * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the roll angle to the pitch angel
     55a:	57 e4       	ldi	r21, 0x47	; 71
     55c:	b4 d4       	rcall	.+2408   	; 0xec6 <__divsf3>
     55e:	2b a5       	ldd	r18, Y+43	; 0x2b
     560:	3c a5       	ldd	r19, Y+44	; 0x2c
     562:	4d a5       	ldd	r20, Y+45	; 0x2d
     564:	5e a5       	ldd	r21, Y+46	; 0x2e
     566:	34 d4       	rcall	.+2152   	; 0xdd0 <__addsf3>
     568:	6b 01       	movw	r12, r22
     56a:	7c 01       	movw	r14, r24
     56c:	b5 01       	movw	r22, r10
     56e:	bb 0c       	add	r11, r11
     570:	88 0b       	sbc	r24, r24
     572:	99 0b       	sbc	r25, r25
     574:	43 d5       	rcall	.+2694   	; 0xffc <__floatsisf>
     576:	2b e7       	ldi	r18, 0x7B	; 123
     578:	33 e1       	ldi	r19, 0x13	; 19
     57a:	4f e8       	ldi	r20, 0x8F	; 143
     57c:	55 e3       	ldi	r21, 0x35	; 53
     57e:	1b d6       	rcall	.+3126   	; 0x11b6 <__mulsf3>
     580:	7d d6       	rcall	.+3322   	; 0x127c <sin>
     582:	4b 01       	movw	r8, r22
     584:	5c 01       	movw	r10, r24
     586:	9b 01       	movw	r18, r22
     588:	ac 01       	movw	r20, r24
     58a:	c7 01       	movw	r24, r14
     58c:	b6 01       	movw	r22, r12
     58e:	13 d6       	rcall	.+3110   	; 0x11b6 <__mulsf3>
				angle_roll -= angle_pitch * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the pitch angle to the roll angel
     590:	2f a1       	ldd	r18, Y+39	; 0x27
     592:	38 a5       	ldd	r19, Y+40	; 0x28
     594:	49 a5       	ldd	r20, Y+41	; 0x29
     596:	5a a5       	ldd	r21, Y+42	; 0x2a
     598:	1b d4       	rcall	.+2102   	; 0xdd0 <__addsf3>
     59a:	6f a3       	std	Y+39, r22	; 0x27
     59c:	78 a7       	std	Y+40, r23	; 0x28
     59e:	89 a7       	std	Y+41, r24	; 0x29
     5a0:	9a a7       	std	Y+42, r25	; 0x2a
     5a2:	9b 01       	movw	r18, r22
     5a4:	ac 01       	movw	r20, r24
     5a6:	c5 01       	movw	r24, r10
     5a8:	b4 01       	movw	r22, r8
				double temporar_accel_x=accel_x/100;
     5aa:	05 d6       	rcall	.+3082   	; 0x11b6 <__mulsf3>
     5ac:	9b 01       	movw	r18, r22
     5ae:	ac 01       	movw	r20, r24
     5b0:	c7 01       	movw	r24, r14
     5b2:	b6 01       	movw	r22, r12
     5b4:	0c d4       	rcall	.+2072   	; 0xdce <__subsf3>
     5b6:	6b a7       	std	Y+43, r22	; 0x2b
     5b8:	7c a7       	std	Y+44, r23	; 0x2c
     5ba:	8d a7       	std	Y+45, r24	; 0x2d
     5bc:	9e a7       	std	Y+46, r25	; 0x2e
     5be:	c1 01       	movw	r24, r2
     5c0:	64 e6       	ldi	r22, 0x64	; 100
				double temporar_accel_y=accel_y/100;
     5c2:	70 e0       	ldi	r23, 0x00	; 0
     5c4:	f1 d6       	rcall	.+3554   	; 0x13a8 <__divmodhi4>
     5c6:	07 2e       	mov	r0, r23
     5c8:	00 0c       	add	r0, r0
     5ca:	88 0b       	sbc	r24, r24
     5cc:	99 0b       	sbc	r25, r25
     5ce:	16 d5       	rcall	.+2604   	; 0xffc <__floatsisf>
     5d0:	4b 01       	movw	r8, r22
     5d2:	5c 01       	movw	r10, r24
     5d4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     5d6:	98 a1       	ldd	r25, Y+32	; 0x20
     5d8:	64 e6       	ldi	r22, 0x64	; 100
				double temporar_accel_z=accel_z/100;
     5da:	70 e0       	ldi	r23, 0x00	; 0
     5dc:	e5 d6       	rcall	.+3530   	; 0x13a8 <__divmodhi4>
     5de:	07 2e       	mov	r0, r23
     5e0:	00 0c       	add	r0, r0
     5e2:	88 0b       	sbc	r24, r24
     5e4:	99 0b       	sbc	r25, r25
     5e6:	0a d5       	rcall	.+2580   	; 0xffc <__floatsisf>
     5e8:	6b 01       	movw	r12, r22
     5ea:	7c 01       	movw	r14, r24
     5ec:	8b a1       	ldd	r24, Y+35	; 0x23
     5ee:	9c a1       	ldd	r25, Y+36	; 0x24
     5f0:	64 e6       	ldi	r22, 0x64	; 100
     5f2:	70 e0       	ldi	r23, 0x00	; 0
     5f4:	d9 d6       	rcall	.+3506   	; 0x13a8 <__divmodhi4>
				acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
     5f6:	07 2e       	mov	r0, r23
     5f8:	00 0c       	add	r0, r0
     5fa:	88 0b       	sbc	r24, r24
     5fc:	99 0b       	sbc	r25, r25
     5fe:	fe d4       	rcall	.+2556   	; 0xffc <__floatsisf>
     600:	6f 8f       	std	Y+31, r22	; 0x1f
     602:	78 a3       	std	Y+32, r23	; 0x20
     604:	89 a3       	std	Y+33, r24	; 0x21
     606:	9a a3       	std	Y+34, r25	; 0x22
     608:	a5 01       	movw	r20, r10
     60a:	94 01       	movw	r18, r8
     60c:	c5 01       	movw	r24, r10
     60e:	b4 01       	movw	r22, r8
     610:	d2 d5       	rcall	.+2980   	; 0x11b6 <__mulsf3>
     612:	6b a3       	std	Y+35, r22	; 0x23
     614:	7c a3       	std	Y+36, r23	; 0x24
     616:	8d a3       	std	Y+37, r24	; 0x25
     618:	9e a3       	std	Y+38, r25	; 0x26
     61a:	a7 01       	movw	r20, r14
     61c:	96 01       	movw	r18, r12
     61e:	c7 01       	movw	r24, r14
     620:	b6 01       	movw	r22, r12
     622:	c9 d5       	rcall	.+2962   	; 0x11b6 <__mulsf3>
     624:	9b 01       	movw	r18, r22
     626:	ac 01       	movw	r20, r24
     628:	6b a1       	ldd	r22, Y+35	; 0x23
     62a:	7c a1       	ldd	r23, Y+36	; 0x24
     62c:	8d a1       	ldd	r24, Y+37	; 0x25
     62e:	9e a1       	ldd	r25, Y+38	; 0x26
     630:	cf d3       	rcall	.+1950   	; 0xdd0 <__addsf3>
     632:	6b a3       	std	Y+35, r22	; 0x23
     634:	7c a3       	std	Y+36, r23	; 0x24
     636:	8d a3       	std	Y+37, r24	; 0x25
     638:	9e a3       	std	Y+38, r25	; 0x26
     63a:	a5 01       	movw	r20, r10
     63c:	94 01       	movw	r18, r8
     63e:	c5 01       	movw	r24, r10
     640:	b4 01       	movw	r22, r8
     642:	b9 d5       	rcall	.+2930   	; 0x11b6 <__mulsf3>
     644:	4b 01       	movw	r8, r22
     646:	5c 01       	movw	r10, r24
     648:	a7 01       	movw	r20, r14
     64a:	96 01       	movw	r18, r12
     64c:	c7 01       	movw	r24, r14
     64e:	b6 01       	movw	r22, r12
     650:	b2 d5       	rcall	.+2916   	; 0x11b6 <__mulsf3>
     652:	9b 01       	movw	r18, r22
     654:	ac 01       	movw	r20, r24
     656:	c5 01       	movw	r24, r10
     658:	b4 01       	movw	r22, r8
     65a:	ba d3       	rcall	.+1908   	; 0xdd0 <__addsf3>
     65c:	6b 01       	movw	r12, r22
     65e:	7c 01       	movw	r14, r24
     660:	2f 8d       	ldd	r18, Y+31	; 0x1f
     662:	38 a1       	ldd	r19, Y+32	; 0x20
				//57.296 = 1 / (3.142 / 180) The Arduino asin function is in radians
				acc_total_vector*=100;
				angle_pitch_acc = asin((float)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
				angle_roll_acc = asin((float)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     664:	49 a1       	ldd	r20, Y+33	; 0x21
     666:	5a a1       	ldd	r21, Y+34	; 0x22
     668:	ca 01       	movw	r24, r20
     66a:	b9 01       	movw	r22, r18
     66c:	a4 d5       	rcall	.+2888   	; 0x11b6 <__mulsf3>
     66e:	9b 01       	movw	r18, r22
     670:	ac 01       	movw	r20, r24
     672:	c7 01       	movw	r24, r14
     674:	b6 01       	movw	r22, r12
     676:	ac d3       	rcall	.+1880   	; 0xdd0 <__addsf3>
     678:	0b d6       	rcall	.+3094   	; 0x1290 <sqrt>
     67a:	6b 01       	movw	r12, r22
     67c:	7c 01       	movw	r14, r24
     67e:	b1 01       	movw	r22, r2
     680:	33 0c       	add	r3, r3
     682:	88 0b       	sbc	r24, r24
     684:	99 0b       	sbc	r25, r25
     686:	ba d4       	rcall	.+2420   	; 0xffc <__floatsisf>
     688:	4b 01       	movw	r8, r22
     68a:	5c 01       	movw	r10, r24
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	48 ec       	ldi	r20, 0xC8	; 200
     692:	52 e4       	ldi	r21, 0x42	; 66
     694:	c7 01       	movw	r24, r14
     696:	b6 01       	movw	r22, r12
     698:	8e d5       	rcall	.+2844   	; 0x11b6 <__mulsf3>
				//int reg_=angle_pitch_acc;
				//printf(" ");
				//printf("accelpitch= ");
				//print16(&reg_);
				
				uint16_t reg=angle_roll_acc;
     69a:	9b 01       	movw	r18, r22
     69c:	ac 01       	movw	r20, r24
				printf(" ");
     69e:	c5 01       	movw	r24, r10
     6a0:	b4 01       	movw	r22, r8
				printf("accelvector= ");
     6a2:	11 d4       	rcall	.+2082   	; 0xec6 <__divsf3>
     6a4:	f9 d3       	rcall	.+2034   	; 0xe98 <asin>
     6a6:	2b e1       	ldi	r18, 0x1B	; 27
     6a8:	3f e2       	ldi	r19, 0x2F	; 47
     6aa:	45 e6       	ldi	r20, 0x65	; 101
     6ac:	52 ec       	ldi	r21, 0xC2	; 194
				print16(&reg);
     6ae:	83 d5       	rcall	.+2822   	; 0x11b6 <__mulsf3>
     6b0:	6b 01       	movw	r12, r22
     6b2:	7c 01       	movw	r14, r24
     6b4:	75 d4       	rcall	.+2282   	; 0xfa0 <__fixunssfsi>
				
				
				#ifdef DRV8313
					double reg__=angle_roll*0.9+angle_roll_acc*0.1;
     6b6:	7e 8f       	std	Y+30, r23	; 0x1e
     6b8:	6d 8f       	std	Y+29, r22	; 0x1d
     6ba:	80 e2       	ldi	r24, 0x20	; 32
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	61 d7       	rcall	.+3778   	; 0x1582 <putchar>
     6c0:	8e e0       	ldi	r24, 0x0E	; 14
     6c2:	92 e0       	ldi	r25, 0x02	; 2
     6c4:	9f 93       	push	r25
     6c6:	8f 93       	push	r24
     6c8:	49 d7       	rcall	.+3730   	; 0x155c <printf>
     6ca:	ce 01       	movw	r24, r28
     6cc:	4d 96       	adiw	r24, 0x1d	; 29
     6ce:	48 de       	rcall	.-880    	; 0x360 <print16>
     6d0:	26 e6       	ldi	r18, 0x66	; 102
     6d2:	36 e6       	ldi	r19, 0x66	; 102
     6d4:	46 e6       	ldi	r20, 0x66	; 102
     6d6:	5f e3       	ldi	r21, 0x3F	; 63
     6d8:	6b a5       	ldd	r22, Y+43	; 0x2b
     6da:	7c a5       	ldd	r23, Y+44	; 0x2c
     6dc:	8d a5       	ldd	r24, Y+45	; 0x2d
     6de:	9e a5       	ldd	r25, Y+46	; 0x2e
     6e0:	6a d5       	rcall	.+2772   	; 0x11b6 <__mulsf3>
     6e2:	4b 01       	movw	r8, r22
     6e4:	5c 01       	movw	r10, r24
     6e6:	2d ec       	ldi	r18, 0xCD	; 205
     6e8:	3c ec       	ldi	r19, 0xCC	; 204
     6ea:	4c ec       	ldi	r20, 0xCC	; 204
					uint16_t reg___=reg;
     6ec:	5d e3       	ldi	r21, 0x3D	; 61
     6ee:	c7 01       	movw	r24, r14
     6f0:	b6 01       	movw	r22, r12
     6f2:	61 d5       	rcall	.+2754   	; 0x11b6 <__mulsf3>
					printf(" ");
     6f4:	9b 01       	movw	r18, r22
     6f6:	ac 01       	movw	r20, r24
     6f8:	c5 01       	movw	r24, r10
     6fa:	b4 01       	movw	r22, r8
					printf("angle_y= ");
     6fc:	69 d3       	rcall	.+1746   	; 0xdd0 <__addsf3>
     6fe:	6b 01       	movw	r12, r22
     700:	7c 01       	movw	r14, r24
     702:	8d 8d       	ldd	r24, Y+29	; 0x1d
     704:	9e 8d       	ldd	r25, Y+30	; 0x1e
     706:	9c 8f       	std	Y+28, r25	; 0x1c
					print16(&reg___);
     708:	8b 8f       	std	Y+27, r24	; 0x1b
     70a:	80 e2       	ldi	r24, 0x20	; 32
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	39 d7       	rcall	.+3698   	; 0x1582 <putchar>
					printf(" ");
     710:	8c e1       	ldi	r24, 0x1C	; 28
     712:	92 e0       	ldi	r25, 0x02	; 2
     714:	9f 93       	push	r25
     716:	8f 93       	push	r24
					uint16_t learing_rate;
					int absoulute_y=abs(reg__);
     718:	21 d7       	rcall	.+3650   	; 0x155c <printf>
     71a:	ce 01       	movw	r24, r28
     71c:	4b 96       	adiw	r24, 0x1b	; 27
     71e:	20 de       	rcall	.-960    	; 0x360 <print16>
     720:	80 e2       	ldi	r24, 0x20	; 32
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	2e d7       	rcall	.+3676   	; 0x1582 <putchar>
     726:	c7 01       	movw	r24, r14
     728:	b6 01       	movw	r22, r12
     72a:	35 d4       	rcall	.+2154   	; 0xf96 <__fixsfsi>
     72c:	fb 01       	movw	r30, r22
					if(absoulute_y>0 && absoulute_y<10)
     72e:	ff 23       	and	r31, r31
     730:	24 f4       	brge	.+8      	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
     732:	ee 27       	eor	r30, r30
     734:	ff 27       	eor	r31, r31
     736:	e6 1b       	sub	r30, r22
     738:	f7 0b       	sbc	r31, r23
     73a:	8f 01       	movw	r16, r30
     73c:	0f 90       	pop	r0
     73e:	0f 90       	pop	r0
     740:	0f 90       	pop	r0
					{
						switch (absoulute_y)
     742:	0f 90       	pop	r0
     744:	cf 01       	movw	r24, r30
     746:	01 97       	sbiw	r24, 0x01	; 1
     748:	89 30       	cpi	r24, 0x09	; 9
     74a:	91 05       	cpc	r25, r1
     74c:	08 f0       	brcs	.+2      	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
     74e:	40 c0       	rjmp	.+128    	; 0x7d0 <__LOCK_REGION_LENGTH__+0x3d0>
     750:	fc 01       	movw	r30, r24
     752:	0a 97       	sbiw	r24, 0x0a	; 10
						{
							case 1:
								learing_rate=6000;
     754:	b0 f5       	brcc	.+108    	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     756:	88 27       	eor	r24, r24
     758:	ee 58       	subi	r30, 0x8E	; 142
     75a:	ff 4f       	sbci	r31, 0xFF	; 255
     75c:	8f 4f       	sbci	r24, 0xFF	; 255
								break;
							case 2:
							learing_rate=3000;
     75e:	53 c6       	rjmp	.+3238   	; 0x1406 <__tablejump2__>
     760:	80 e7       	ldi	r24, 0x70	; 112
     762:	97 e1       	ldi	r25, 0x17	; 23
     764:	98 ab       	std	Y+48, r25	; 0x30
							break;
     766:	8f a7       	std	Y+47, r24	; 0x2f
							case 3:
							learing_rate=3000;
     768:	2c c0       	rjmp	.+88     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     76a:	88 eb       	ldi	r24, 0xB8	; 184
     76c:	9b e0       	ldi	r25, 0x0B	; 11
     76e:	98 ab       	std	Y+48, r25	; 0x30
							break;
     770:	8f a7       	std	Y+47, r24	; 0x2f
							case 4:
							learing_rate=4000;
     772:	27 c0       	rjmp	.+78     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     774:	88 eb       	ldi	r24, 0xB8	; 184
     776:	9b e0       	ldi	r25, 0x0B	; 11
     778:	98 ab       	std	Y+48, r25	; 0x30
							break;
     77a:	8f a7       	std	Y+47, r24	; 0x2f
							case 5:
							learing_rate=4000;
     77c:	22 c0       	rjmp	.+68     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     77e:	80 ea       	ldi	r24, 0xA0	; 160
     780:	9f e0       	ldi	r25, 0x0F	; 15
     782:	98 ab       	std	Y+48, r25	; 0x30
							break;
     784:	8f a7       	std	Y+47, r24	; 0x2f
							case 6:
							learing_rate=3000;
     786:	1d c0       	rjmp	.+58     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     788:	80 ea       	ldi	r24, 0xA0	; 160
     78a:	9f e0       	ldi	r25, 0x0F	; 15
     78c:	98 ab       	std	Y+48, r25	; 0x30
							break;
     78e:	8f a7       	std	Y+47, r24	; 0x2f
							case 7:
							learing_rate=3000;
     790:	18 c0       	rjmp	.+48     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     792:	88 eb       	ldi	r24, 0xB8	; 184
     794:	9b e0       	ldi	r25, 0x0B	; 11
     796:	98 ab       	std	Y+48, r25	; 0x30
							break;
     798:	8f a7       	std	Y+47, r24	; 0x2f
							case 8:
							learing_rate=3000;
     79a:	13 c0       	rjmp	.+38     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     79c:	88 eb       	ldi	r24, 0xB8	; 184
     79e:	9b e0       	ldi	r25, 0x0B	; 11
     7a0:	98 ab       	std	Y+48, r25	; 0x30
							break;
     7a2:	8f a7       	std	Y+47, r24	; 0x2f
							case 9:
							learing_rate=3000;
     7a4:	0e c0       	rjmp	.+28     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     7a6:	88 eb       	ldi	r24, 0xB8	; 184
     7a8:	9b e0       	ldi	r25, 0x0B	; 11
							break;
							case 10:
							learing_rate=3000;
     7aa:	98 ab       	std	Y+48, r25	; 0x30
     7ac:	8f a7       	std	Y+47, r24	; 0x2f
     7ae:	09 c0       	rjmp	.+18     	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
							break;
							
						}
						
						printf(" haleluya ");
     7b0:	88 eb       	ldi	r24, 0xB8	; 184
     7b2:	9b e0       	ldi	r25, 0x0B	; 11
     7b4:	98 ab       	std	Y+48, r25	; 0x30
     7b6:	8f a7       	std	Y+47, r24	; 0x2f
     7b8:	04 c0       	rjmp	.+8      	; 0x7c2 <__LOCK_REGION_LENGTH__+0x3c2>
     7ba:	88 eb       	ldi	r24, 0xB8	; 184
     7bc:	9b e0       	ldi	r25, 0x0B	; 11
     7be:	98 ab       	std	Y+48, r25	; 0x30
					}
					if(absoulute_y>10 && absoulute_y<20)
     7c0:	8f a7       	std	Y+47, r24	; 0x2f
     7c2:	86 e2       	ldi	r24, 0x26	; 38
     7c4:	92 e0       	ldi	r25, 0x02	; 2
					{
						learing_rate=250;
     7c6:	9f 93       	push	r25
     7c8:	8f 93       	push	r24
     7ca:	c8 d6       	rcall	.+3472   	; 0x155c <printf>
     7cc:	0f 90       	pop	r0
					}
					if(absoulute_y>20 && absoulute_y<30)
     7ce:	0f 90       	pop	r0
     7d0:	c8 01       	movw	r24, r16
     7d2:	0b 97       	sbiw	r24, 0x0b	; 11
					{
						learing_rate=150;
     7d4:	09 97       	sbiw	r24, 0x09	; 9
     7d6:	20 f4       	brcc	.+8      	; 0x7e0 <__LOCK_REGION_LENGTH__+0x3e0>
     7d8:	8a ef       	ldi	r24, 0xFA	; 250
					}
					if(absoulute_y>30 && absoulute_y<50)
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	98 ab       	std	Y+48, r25	; 0x30
     7de:	8f a7       	std	Y+47, r24	; 0x2f
     7e0:	c8 01       	movw	r24, r16
					{
						learing_rate=50;
     7e2:	45 97       	sbiw	r24, 0x15	; 21
     7e4:	09 97       	sbiw	r24, 0x09	; 9
     7e6:	20 f4       	brcc	.+8      	; 0x7f0 <__LOCK_REGION_LENGTH__+0x3f0>
     7e8:	86 e9       	ldi	r24, 0x96	; 150
					}
					uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	98 ab       	std	Y+48, r25	; 0x30
     7ee:	8f a7       	std	Y+47, r24	; 0x2f
     7f0:	c8 01       	movw	r24, r16
     7f2:	4f 97       	sbiw	r24, 0x1f	; 31
     7f4:	43 97       	sbiw	r24, 0x13	; 19
     7f6:	20 f4       	brcc	.+8      	; 0x800 <__LOCK_REGION_LENGTH__+0x400>
     7f8:	82 e3       	ldi	r24, 0x32	; 50
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	98 ab       	std	Y+48, r25	; 0x30
     7fe:	8f a7       	std	Y+47, r24	; 0x2f
     800:	8f a5       	ldd	r24, Y+47	; 0x2f
     802:	98 a9       	ldd	r25, Y+48	; 0x30
					if (local_motor_delay>2000)
     804:	80 9f       	mul	r24, r16
     806:	90 01       	movw	r18, r0
     808:	81 9f       	mul	r24, r17
     80a:	30 0d       	add	r19, r0
					{
						pwm_delay=local_motor_delay;
     80c:	90 9f       	mul	r25, r16
     80e:	30 0d       	add	r19, r0
     810:	11 24       	eor	r1, r1
     812:	8f ed       	ldi	r24, 0xDF	; 223
					}
					uint16_t reg_ = local_motor_delay;
     814:	9f e7       	ldi	r25, 0x7F	; 127
     816:	82 1b       	sub	r24, r18
					printf("ocr= ");
     818:	93 0b       	sbc	r25, r19
     81a:	81 3d       	cpi	r24, 0xD1	; 209
     81c:	27 e0       	ldi	r18, 0x07	; 7
     81e:	92 07       	cpc	r25, r18
     820:	20 f0       	brcs	.+8      	; 0x82a <__LOCK_REGION_LENGTH__+0x42a>
     822:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <__data_end+0x1>
					print16(&reg_);
     826:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <__data_end>
     82a:	9a 8f       	std	Y+26, r25	; 0x1a
					if (reg==0)
     82c:	89 8f       	std	Y+25, r24	; 0x19
     82e:	81 e3       	ldi	r24, 0x31	; 49
     830:	92 e0       	ldi	r25, 0x02	; 2
     832:	9f 93       	push	r25
     834:	8f 93       	push	r24
     836:	92 d6       	rcall	.+3364   	; 0x155c <printf>
					{
						incr=0;
     838:	ce 01       	movw	r24, r28
     83a:	49 96       	adiw	r24, 0x19	; 25
     83c:	91 dd       	rcall	.-1246   	; 0x360 <print16>
     83e:	0f 90       	pop	r0
						printf("\n");	
     840:	0f 90       	pop	r0
     842:	8d 8d       	ldd	r24, Y+29	; 0x1d
     844:	9e 8d       	ldd	r25, Y+30	; 0x1e
     846:	89 2b       	or	r24, r25
     848:	41 f4       	brne	.+16     	; 0x85a <__LOCK_REGION_LENGTH__+0x45a>
							printf(" yes\n");
							
							sei();
						}
						else
						{	cli();
     84a:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <incr+0x1>
							incr=-1;
     84e:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <incr>
     852:	8a e0       	ldi	r24, 0x0A	; 10
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	95 d6       	rcall	.+3370   	; 0x1582 <putchar>
							printf(" no\n");
     858:	09 ce       	rjmp	.-1006   	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     85a:	f8 94       	cli
     85c:	8f ef       	ldi	r24, 0xFF	; 255
     85e:	9f ef       	ldi	r25, 0xFF	; 255
							sei();
     860:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <incr+0x1>
     864:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <incr>
     868:	87 e3       	ldi	r24, 0x37	; 55
     86a:	92 e0       	ldi	r25, 0x02	; 2
     86c:	8f d6       	rcall	.+3358   	; 0x158c <puts>
     86e:	78 94       	sei
     870:	fd cd       	rjmp	.-1030   	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>

00000872 <mpu6050_readByte>:
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     872:	cf 93       	push	r28
     874:	c8 2f       	mov	r28, r24
     876:	80 ed       	ldi	r24, 0xD0	; 208
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	f3 d1       	rcall	.+998    	; 0xc62 <i2c_start>
     87c:	8c 2f       	mov	r24, r28
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	46 d2       	rcall	.+1164   	; 0xd0e <i2c_write>
     882:	35 d2       	rcall	.+1130   	; 0xcee <i2c_stop>
     884:	81 ed       	ldi	r24, 0xD1	; 209
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	ec d1       	rcall	.+984    	; 0xc62 <i2c_start>
     88a:	7c d2       	rcall	.+1272   	; 0xd84 <i2c_readNak>
     88c:	c8 2f       	mov	r28, r24
     88e:	2f d2       	rcall	.+1118   	; 0xcee <i2c_stop>
     890:	8c 2f       	mov	r24, r28
     892:	cf 91       	pop	r28
     894:	08 95       	ret

00000896 <mpu6050_read_gyroX>:
     896:	cf 93       	push	r28
     898:	df 93       	push	r29
     89a:	83 e4       	ldi	r24, 0x43	; 67
     89c:	ea df       	rcall	.-44     	; 0x872 <mpu6050_readByte>
     89e:	c8 2f       	mov	r28, r24
     8a0:	d0 e0       	ldi	r29, 0x00	; 0
     8a2:	dc 2f       	mov	r29, r28
     8a4:	cc 27       	eor	r28, r28
     8a6:	84 e4       	ldi	r24, 0x44	; 68
     8a8:	e4 df       	rcall	.-56     	; 0x872 <mpu6050_readByte>
     8aa:	9e 01       	movw	r18, r28
     8ac:	28 2b       	or	r18, r24
     8ae:	c9 01       	movw	r24, r18
     8b0:	df 91       	pop	r29
     8b2:	cf 91       	pop	r28
     8b4:	08 95       	ret

000008b6 <mpu6050_read_gyroY>:
     8b6:	cf 93       	push	r28
     8b8:	df 93       	push	r29
     8ba:	85 e4       	ldi	r24, 0x45	; 69
     8bc:	da df       	rcall	.-76     	; 0x872 <mpu6050_readByte>
     8be:	c8 2f       	mov	r28, r24
     8c0:	d0 e0       	ldi	r29, 0x00	; 0
     8c2:	dc 2f       	mov	r29, r28
     8c4:	cc 27       	eor	r28, r28
     8c6:	86 e4       	ldi	r24, 0x46	; 70
     8c8:	d4 df       	rcall	.-88     	; 0x872 <mpu6050_readByte>
     8ca:	9e 01       	movw	r18, r28
     8cc:	28 2b       	or	r18, r24
     8ce:	c9 01       	movw	r24, r18
     8d0:	df 91       	pop	r29
     8d2:	cf 91       	pop	r28
     8d4:	08 95       	ret

000008d6 <mpu6050_read_gyroZ>:
     8d6:	cf 93       	push	r28
     8d8:	df 93       	push	r29
     8da:	87 e4       	ldi	r24, 0x47	; 71
     8dc:	ca df       	rcall	.-108    	; 0x872 <mpu6050_readByte>
     8de:	c8 2f       	mov	r28, r24
     8e0:	d0 e0       	ldi	r29, 0x00	; 0
     8e2:	dc 2f       	mov	r29, r28
     8e4:	cc 27       	eor	r28, r28
     8e6:	88 e4       	ldi	r24, 0x48	; 72
     8e8:	c4 df       	rcall	.-120    	; 0x872 <mpu6050_readByte>
     8ea:	9e 01       	movw	r18, r28
     8ec:	28 2b       	or	r18, r24
     8ee:	c9 01       	movw	r24, r18
     8f0:	df 91       	pop	r29
     8f2:	cf 91       	pop	r28
     8f4:	08 95       	ret

000008f6 <mpu6050_calibrate_gyro>:
     8f6:	cf 92       	push	r12
     8f8:	df 92       	push	r13
     8fa:	ef 92       	push	r14
     8fc:	ff 92       	push	r15
     8fe:	0f 93       	push	r16
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	6c 01       	movw	r12, r24
     908:	7b 01       	movw	r14, r22
     90a:	8a 01       	movw	r16, r20
     90c:	8b e1       	ldi	r24, 0x1B	; 27
     90e:	94 e0       	ldi	r25, 0x04	; 4
     910:	3d d6       	rcall	.+3194   	; 0x158c <puts>
     912:	c4 e1       	ldi	r28, 0x14	; 20
     914:	d0 e0       	ldi	r29, 0x00	; 0
     916:	bf df       	rcall	.-130    	; 0x896 <mpu6050_read_gyroX>
     918:	f6 01       	movw	r30, r12
     91a:	40 81       	ld	r20, Z
     91c:	51 81       	ldd	r21, Z+1	; 0x01
     91e:	62 81       	ldd	r22, Z+2	; 0x02
     920:	73 81       	ldd	r23, Z+3	; 0x03
     922:	48 0f       	add	r20, r24
     924:	59 1f       	adc	r21, r25
     926:	61 1d       	adc	r22, r1
     928:	71 1d       	adc	r23, r1
     92a:	40 83       	st	Z, r20
     92c:	51 83       	std	Z+1, r21	; 0x01
     92e:	62 83       	std	Z+2, r22	; 0x02
     930:	73 83       	std	Z+3, r23	; 0x03
     932:	c1 df       	rcall	.-126    	; 0x8b6 <mpu6050_read_gyroY>
     934:	f7 01       	movw	r30, r14
     936:	40 81       	ld	r20, Z
     938:	51 81       	ldd	r21, Z+1	; 0x01
     93a:	62 81       	ldd	r22, Z+2	; 0x02
     93c:	73 81       	ldd	r23, Z+3	; 0x03
     93e:	48 0f       	add	r20, r24
     940:	59 1f       	adc	r21, r25
     942:	61 1d       	adc	r22, r1
     944:	71 1d       	adc	r23, r1
     946:	40 83       	st	Z, r20
     948:	51 83       	std	Z+1, r21	; 0x01
     94a:	62 83       	std	Z+2, r22	; 0x02
     94c:	73 83       	std	Z+3, r23	; 0x03
     94e:	c3 df       	rcall	.-122    	; 0x8d6 <mpu6050_read_gyroZ>
     950:	f8 01       	movw	r30, r16
     952:	40 81       	ld	r20, Z
     954:	51 81       	ldd	r21, Z+1	; 0x01
     956:	62 81       	ldd	r22, Z+2	; 0x02
     958:	73 81       	ldd	r23, Z+3	; 0x03
     95a:	48 0f       	add	r20, r24
     95c:	59 1f       	adc	r21, r25
     95e:	61 1d       	adc	r22, r1
     960:	71 1d       	adc	r23, r1
     962:	40 83       	st	Z, r20
     964:	51 83       	std	Z+1, r21	; 0x01
     966:	62 83       	std	Z+2, r22	; 0x02
     968:	73 83       	std	Z+3, r23	; 0x03
     96a:	21 97       	sbiw	r28, 0x01	; 1
     96c:	a1 f6       	brne	.-88     	; 0x916 <mpu6050_calibrate_gyro+0x20>
     96e:	f6 01       	movw	r30, r12
     970:	60 81       	ld	r22, Z
     972:	71 81       	ldd	r23, Z+1	; 0x01
     974:	82 81       	ldd	r24, Z+2	; 0x02
     976:	93 81       	ldd	r25, Z+3	; 0x03
     978:	99 23       	and	r25, r25
     97a:	ac f4       	brge	.+42     	; 0x9a6 <mpu6050_calibrate_gyro+0xb0>
     97c:	9b 01       	movw	r18, r22
     97e:	77 23       	and	r23, r23
     980:	24 f4       	brge	.+8      	; 0x98a <mpu6050_calibrate_gyro+0x94>
     982:	22 27       	eor	r18, r18
     984:	33 27       	eor	r19, r19
     986:	26 1b       	sub	r18, r22
     988:	37 0b       	sbc	r19, r23
     98a:	c9 01       	movw	r24, r18
     98c:	64 e1       	ldi	r22, 0x14	; 20
     98e:	70 e0       	ldi	r23, 0x00	; 0
     990:	0b d5       	rcall	.+2582   	; 0x13a8 <__divmodhi4>
     992:	cb 01       	movw	r24, r22
     994:	77 0f       	add	r23, r23
     996:	aa 0b       	sbc	r26, r26
     998:	bb 0b       	sbc	r27, r27
     99a:	f6 01       	movw	r30, r12
     99c:	80 83       	st	Z, r24
     99e:	91 83       	std	Z+1, r25	; 0x01
     9a0:	a2 83       	std	Z+2, r26	; 0x02
     9a2:	b3 83       	std	Z+3, r27	; 0x03
     9a4:	0a c0       	rjmp	.+20     	; 0x9ba <mpu6050_calibrate_gyro+0xc4>
     9a6:	24 e1       	ldi	r18, 0x14	; 20
     9a8:	30 e0       	ldi	r19, 0x00	; 0
     9aa:	40 e0       	ldi	r20, 0x00	; 0
     9ac:	50 e0       	ldi	r21, 0x00	; 0
     9ae:	0f d5       	rcall	.+2590   	; 0x13ce <__divmodsi4>
     9b0:	f6 01       	movw	r30, r12
     9b2:	20 83       	st	Z, r18
     9b4:	31 83       	std	Z+1, r19	; 0x01
     9b6:	42 83       	std	Z+2, r20	; 0x02
     9b8:	53 83       	std	Z+3, r21	; 0x03
     9ba:	f7 01       	movw	r30, r14
     9bc:	60 81       	ld	r22, Z
     9be:	71 81       	ldd	r23, Z+1	; 0x01
     9c0:	82 81       	ldd	r24, Z+2	; 0x02
     9c2:	93 81       	ldd	r25, Z+3	; 0x03
     9c4:	99 23       	and	r25, r25
     9c6:	ac f4       	brge	.+42     	; 0x9f2 <mpu6050_calibrate_gyro+0xfc>
     9c8:	9b 01       	movw	r18, r22
     9ca:	77 23       	and	r23, r23
     9cc:	24 f4       	brge	.+8      	; 0x9d6 <mpu6050_calibrate_gyro+0xe0>
     9ce:	22 27       	eor	r18, r18
     9d0:	33 27       	eor	r19, r19
     9d2:	26 1b       	sub	r18, r22
     9d4:	37 0b       	sbc	r19, r23
     9d6:	c9 01       	movw	r24, r18
     9d8:	64 e1       	ldi	r22, 0x14	; 20
     9da:	70 e0       	ldi	r23, 0x00	; 0
     9dc:	e5 d4       	rcall	.+2506   	; 0x13a8 <__divmodhi4>
     9de:	cb 01       	movw	r24, r22
     9e0:	77 0f       	add	r23, r23
     9e2:	aa 0b       	sbc	r26, r26
     9e4:	bb 0b       	sbc	r27, r27
     9e6:	f7 01       	movw	r30, r14
     9e8:	80 83       	st	Z, r24
     9ea:	91 83       	std	Z+1, r25	; 0x01
     9ec:	a2 83       	std	Z+2, r26	; 0x02
     9ee:	b3 83       	std	Z+3, r27	; 0x03
     9f0:	0a c0       	rjmp	.+20     	; 0xa06 <mpu6050_calibrate_gyro+0x110>
     9f2:	24 e1       	ldi	r18, 0x14	; 20
     9f4:	30 e0       	ldi	r19, 0x00	; 0
     9f6:	40 e0       	ldi	r20, 0x00	; 0
     9f8:	50 e0       	ldi	r21, 0x00	; 0
     9fa:	e9 d4       	rcall	.+2514   	; 0x13ce <__divmodsi4>
     9fc:	f7 01       	movw	r30, r14
     9fe:	20 83       	st	Z, r18
     a00:	31 83       	std	Z+1, r19	; 0x01
     a02:	42 83       	std	Z+2, r20	; 0x02
     a04:	53 83       	std	Z+3, r21	; 0x03
     a06:	f8 01       	movw	r30, r16
     a08:	60 81       	ld	r22, Z
     a0a:	71 81       	ldd	r23, Z+1	; 0x01
     a0c:	82 81       	ldd	r24, Z+2	; 0x02
     a0e:	93 81       	ldd	r25, Z+3	; 0x03
     a10:	99 23       	and	r25, r25
     a12:	ac f4       	brge	.+42     	; 0xa3e <mpu6050_calibrate_gyro+0x148>
     a14:	9b 01       	movw	r18, r22
     a16:	77 23       	and	r23, r23
     a18:	24 f4       	brge	.+8      	; 0xa22 <mpu6050_calibrate_gyro+0x12c>
     a1a:	22 27       	eor	r18, r18
     a1c:	33 27       	eor	r19, r19
     a1e:	26 1b       	sub	r18, r22
     a20:	37 0b       	sbc	r19, r23
     a22:	c9 01       	movw	r24, r18
     a24:	64 e1       	ldi	r22, 0x14	; 20
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	bf d4       	rcall	.+2430   	; 0x13a8 <__divmodhi4>
     a2a:	cb 01       	movw	r24, r22
     a2c:	77 0f       	add	r23, r23
     a2e:	aa 0b       	sbc	r26, r26
     a30:	bb 0b       	sbc	r27, r27
     a32:	f8 01       	movw	r30, r16
     a34:	80 83       	st	Z, r24
     a36:	91 83       	std	Z+1, r25	; 0x01
     a38:	a2 83       	std	Z+2, r26	; 0x02
     a3a:	b3 83       	std	Z+3, r27	; 0x03
     a3c:	0a c0       	rjmp	.+20     	; 0xa52 <mpu6050_calibrate_gyro+0x15c>
     a3e:	24 e1       	ldi	r18, 0x14	; 20
     a40:	30 e0       	ldi	r19, 0x00	; 0
     a42:	40 e0       	ldi	r20, 0x00	; 0
     a44:	50 e0       	ldi	r21, 0x00	; 0
     a46:	c3 d4       	rcall	.+2438   	; 0x13ce <__divmodsi4>
     a48:	f8 01       	movw	r30, r16
     a4a:	20 83       	st	Z, r18
     a4c:	31 83       	std	Z+1, r19	; 0x01
     a4e:	42 83       	std	Z+2, r20	; 0x02
     a50:	53 83       	std	Z+3, r21	; 0x03
     a52:	df 91       	pop	r29
     a54:	cf 91       	pop	r28
     a56:	1f 91       	pop	r17
     a58:	0f 91       	pop	r16
     a5a:	ff 90       	pop	r15
     a5c:	ef 90       	pop	r14
     a5e:	df 90       	pop	r13
     a60:	cf 90       	pop	r12
     a62:	08 95       	ret

00000a64 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     a64:	cf 93       	push	r28
     a66:	df 93       	push	r29
     a68:	d8 2f       	mov	r29, r24
     a6a:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     a6c:	80 ed       	ldi	r24, 0xD0	; 208
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	f8 d0       	rcall	.+496    	; 0xc62 <i2c_start>
	i2c_write(wereToWrite);
     a72:	8d 2f       	mov	r24, r29
     a74:	90 e0       	ldi	r25, 0x00	; 0
	i2c_write(byteToWrite);
     a76:	4b d1       	rcall	.+662    	; 0xd0e <i2c_write>
     a78:	8c 2f       	mov	r24, r28
	i2c_stop();
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	48 d1       	rcall	.+656    	; 0xd0e <i2c_write>
}
     a7e:	37 d1       	rcall	.+622    	; 0xcee <i2c_stop>
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	08 95       	ret

00000a86 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     a86:	af 92       	push	r10
     a88:	bf 92       	push	r11
     a8a:	cf 92       	push	r12
     a8c:	df 92       	push	r13
     a8e:	ff 92       	push	r15
     a90:	0f 93       	push	r16
     a92:	1f 93       	push	r17
     a94:	cf 93       	push	r28
     a96:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     a98:	66 23       	and	r22, r22
     a9a:	a1 f1       	breq	.+104    	; 0xb04 <mpu6050_readBytes+0x7e>
     a9c:	c5 2f       	mov	r28, r21
     a9e:	d4 2f       	mov	r29, r20
     aa0:	f6 2e       	mov	r15, r22
     aa2:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     aa4:	80 ed       	ldi	r24, 0xD0	; 208
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	dc d0       	rcall	.+440    	; 0xc62 <i2c_start>
		i2c_write(regAddr);
     aaa:	81 2f       	mov	r24, r17
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	2f d1       	rcall	.+606    	; 0xd0e <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ab0:	85 e3       	ldi	r24, 0x35	; 53
     ab2:	8a 95       	dec	r24
     ab4:	f1 f7       	brne	.-4      	; 0xab2 <mpu6050_readBytes+0x2c>
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     ab6:	00 00       	nop
     ab8:	81 ed       	ldi	r24, 0xD1	; 209
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	d2 d0       	rcall	.+420    	; 0xc62 <i2c_start>
     abe:	0d 2f       	mov	r16, r29
     ac0:	1c 2f       	mov	r17, r28
     ac2:	cc 24       	eor	r12, r12
     ac4:	ca 94       	dec	r12
     ac6:	cf 0c       	add	r12, r15
     ac8:	d1 2c       	mov	r13, r1
     aca:	ef ef       	ldi	r30, 0xFF	; 255
     acc:	ce 1a       	sub	r12, r30
     ace:	de 0a       	sbc	r13, r30
     ad0:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     ad2:	d0 e0       	ldi	r29, 0x00	; 0
     ad4:	af 2c       	mov	r10, r15
     ad6:	b1 2c       	mov	r11, r1
     ad8:	f1 e0       	ldi	r31, 0x01	; 1
     ada:	af 1a       	sub	r10, r31
     adc:	b1 08       	sbc	r11, r1
     ade:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     ae0:	bd 06       	cpc	r11, r29
     ae2:	21 f4       	brne	.+8      	; 0xaec <mpu6050_readBytes+0x66>
     ae4:	4f d1       	rcall	.+670    	; 0xd84 <i2c_readNak>
     ae6:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     ae8:	80 83       	st	Z, r24
     aea:	03 c0       	rjmp	.+6      	; 0xaf2 <mpu6050_readBytes+0x6c>
     aec:	31 d1       	rcall	.+610    	; 0xd50 <i2c_readAck>
     aee:	f8 01       	movw	r30, r16
     af0:	80 83       	st	Z, r24
     af2:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     af4:	0f 5f       	subi	r16, 0xFF	; 255
     af6:	1f 4f       	sbci	r17, 0xFF	; 255
     af8:	cc 15       	cp	r28, r12
     afa:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     afc:	81 f7       	brne	.-32     	; 0xade <mpu6050_readBytes+0x58>
     afe:	cf 2d       	mov	r28, r15
     b00:	f6 d0       	rcall	.+492    	; 0xcee <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     b02:	01 c0       	rjmp	.+2      	; 0xb06 <mpu6050_readBytes+0x80>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     b04:	c0 e0       	ldi	r28, 0x00	; 0
     b06:	8c 2f       	mov	r24, r28
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	1f 91       	pop	r17
     b0e:	0f 91       	pop	r16
     b10:	ff 90       	pop	r15
     b12:	df 90       	pop	r13
     b14:	cf 90       	pop	r12
     b16:	bf 90       	pop	r11
     b18:	af 90       	pop	r10
     b1a:	08 95       	ret

00000b1c <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     b1c:	6f 92       	push	r6
     b1e:	7f 92       	push	r7
     b20:	8f 92       	push	r8
     b22:	9f 92       	push	r9
     b24:	af 92       	push	r10
     b26:	bf 92       	push	r11
     b28:	cf 92       	push	r12
     b2a:	df 92       	push	r13
     b2c:	ef 92       	push	r14
     b2e:	ff 92       	push	r15
     b30:	0f 93       	push	r16
     b32:	1f 93       	push	r17
     b34:	cf 93       	push	r28
     b36:	df 93       	push	r29
     b38:	cd b7       	in	r28, 0x3d	; 61
     b3a:	de b7       	in	r29, 0x3e	; 62
     b3c:	2e 97       	sbiw	r28, 0x0e	; 14
     b3e:	0f b6       	in	r0, 0x3f	; 63
     b40:	f8 94       	cli
     b42:	de bf       	out	0x3e, r29	; 62
     b44:	0f be       	out	0x3f, r0	; 63
     b46:	cd bf       	out	0x3d, r28	; 61
     b48:	4c 01       	movw	r8, r24
     b4a:	5b 01       	movw	r10, r22
     b4c:	6a 01       	movw	r12, r20
     b4e:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     b50:	ae 01       	movw	r20, r28
     b52:	4f 5f       	subi	r20, 0xFF	; 255
     b54:	5f 4f       	sbci	r21, 0xFF	; 255
     b56:	6e e0       	ldi	r22, 0x0E	; 14
     b58:	8b e3       	ldi	r24, 0x3B	; 59
     b5a:	95 df       	rcall	.-214    	; 0xa86 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     b5c:	89 81       	ldd	r24, Y+1	; 0x01
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	98 2f       	mov	r25, r24
     b62:	88 27       	eor	r24, r24
     b64:	2a 81       	ldd	r18, Y+2	; 0x02
     b66:	82 2b       	or	r24, r18
     b68:	f4 01       	movw	r30, r8
     b6a:	91 83       	std	Z+1, r25	; 0x01
     b6c:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     b6e:	8b 81       	ldd	r24, Y+3	; 0x03
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	98 2f       	mov	r25, r24
     b74:	88 27       	eor	r24, r24
     b76:	2c 81       	ldd	r18, Y+4	; 0x04
     b78:	82 2b       	or	r24, r18
     b7a:	f5 01       	movw	r30, r10
     b7c:	91 83       	std	Z+1, r25	; 0x01
     b7e:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     b80:	8d 81       	ldd	r24, Y+5	; 0x05
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	98 2f       	mov	r25, r24
     b86:	88 27       	eor	r24, r24
     b88:	2e 81       	ldd	r18, Y+6	; 0x06
     b8a:	82 2b       	or	r24, r18
     b8c:	f6 01       	movw	r30, r12
     b8e:	91 83       	std	Z+1, r25	; 0x01
     b90:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     b92:	89 85       	ldd	r24, Y+9	; 0x09
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	98 2f       	mov	r25, r24
     b98:	88 27       	eor	r24, r24
     b9a:	2a 85       	ldd	r18, Y+10	; 0x0a
     b9c:	82 2b       	or	r24, r18
     b9e:	f3 01       	movw	r30, r6
     ba0:	91 83       	std	Z+1, r25	; 0x01
     ba2:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     ba4:	8b 85       	ldd	r24, Y+11	; 0x0b
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	98 2f       	mov	r25, r24
     baa:	88 27       	eor	r24, r24
     bac:	2c 85       	ldd	r18, Y+12	; 0x0c
     bae:	82 2b       	or	r24, r18
     bb0:	f8 01       	movw	r30, r16
     bb2:	91 83       	std	Z+1, r25	; 0x01
     bb4:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     bb6:	8d 85       	ldd	r24, Y+13	; 0x0d
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	98 2f       	mov	r25, r24
     bbc:	88 27       	eor	r24, r24
     bbe:	2e 85       	ldd	r18, Y+14	; 0x0e
     bc0:	82 2b       	or	r24, r18
     bc2:	f7 01       	movw	r30, r14
     bc4:	91 83       	std	Z+1, r25	; 0x01
     bc6:	80 83       	st	Z, r24
     bc8:	2e 96       	adiw	r28, 0x0e	; 14
     bca:	0f b6       	in	r0, 0x3f	; 63
     bcc:	f8 94       	cli
     bce:	de bf       	out	0x3e, r29	; 62
     bd0:	0f be       	out	0x3f, r0	; 63
     bd2:	cd bf       	out	0x3d, r28	; 61
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	1f 91       	pop	r17
     bda:	0f 91       	pop	r16
     bdc:	ff 90       	pop	r15
     bde:	ef 90       	pop	r14
     be0:	df 90       	pop	r13
     be2:	cf 90       	pop	r12
     be4:	bf 90       	pop	r11
     be6:	af 90       	pop	r10
     be8:	9f 90       	pop	r9
     bea:	8f 90       	pop	r8
     bec:	7f 90       	pop	r7
     bee:	6f 90       	pop	r6
     bf0:	08 95       	ret

00000bf2 <setup_timer4>:
	sbi (TIMSK3, TOIE3);
}*/
/*-----------Timter 1-----------*/
void setup_timer4(void)
{
    sbi (TCCR4B, CS40);//prescakaer 256
     bf2:	e1 ea       	ldi	r30, 0xA1	; 161
     bf4:	f0 e0       	ldi	r31, 0x00	; 0
     bf6:	80 81       	ld	r24, Z
     bf8:	81 60       	ori	r24, 0x01	; 1
     bfa:	80 83       	st	Z, r24
    sbi (TCCR4A, WGM40);//8 bit phase correct PWM
     bfc:	e0 ea       	ldi	r30, 0xA0	; 160
     bfe:	f0 e0       	ldi	r31, 0x00	; 0
     c00:	80 81       	ld	r24, Z
     c02:	81 60       	ori	r24, 0x01	; 1
     c04:	80 83       	st	Z, r24
	
	//sbi (TCCR4A,COM4A0);
	sbi (TCCR4A,COM4A1);
     c06:	80 81       	ld	r24, Z
     c08:	80 68       	ori	r24, 0x80	; 128
     c0a:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4B0);
	sbi (TCCR4A,COM4B1);
     c0c:	80 81       	ld	r24, Z
     c0e:	80 62       	ori	r24, 0x20	; 32
     c10:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4C0);
	sbi (TCCR4A,COM4C1);
     c12:	80 81       	ld	r24, Z
     c14:	88 60       	ori	r24, 0x08	; 8
     c16:	80 83       	st	Z, r24
     c18:	08 95       	ret

00000c1a <setup_timer3>:
void setup_timer3(void)
{
	//64 pres, 250.000 hz 0.000004s
	//sbi (TCCR5B, CS50);//only this no prescaling
	
	sbi (TCCR3B, CS30);//only this 8
     c1a:	e1 e9       	ldi	r30, 0x91	; 145
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	80 81       	ld	r24, Z
     c20:	81 60       	ori	r24, 0x01	; 1
     c22:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR3B, WGM32);//OCR4A compare interrupt
     c24:	80 81       	ld	r24, Z
     c26:	88 60       	ori	r24, 0x08	; 8
     c28:	80 83       	st	Z, r24
     c2a:	08 95       	ret

00000c2c <Enable_timer3_compare_interrupt>:
}
void Enable_timer3_compare_interrupt()
{
	sbi (TIMSK3, OCIE3A);
     c2c:	e1 e7       	ldi	r30, 0x71	; 113
     c2e:	f0 e0       	ldi	r31, 0x00	; 0
     c30:	80 81       	ld	r24, Z
     c32:	82 60       	ori	r24, 0x02	; 2
     c34:	80 83       	st	Z, r24
     c36:	08 95       	ret

00000c38 <setup_timer1>:
}
void setup_timer1(void)
{
	sbi (TCCR5B, CS50);//only this 8
     c38:	e1 e2       	ldi	r30, 0x21	; 33
     c3a:	f1 e0       	ldi	r31, 0x01	; 1
     c3c:	80 81       	ld	r24, Z
     c3e:	81 60       	ori	r24, 0x01	; 1
     c40:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR5B, WGM52);//OCR4A compare interrupt
     c42:	80 81       	ld	r24, Z
     c44:	88 60       	ori	r24, 0x08	; 8
     c46:	80 83       	st	Z, r24
     c48:	08 95       	ret

00000c4a <Enable_timer1_compare_interrupt>:
	
}
void Enable_timer1_compare_interrupt()
{
	sbi (TIMSK5, OCIE5A);
     c4a:	e3 e7       	ldi	r30, 0x73	; 115
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	80 81       	ld	r24, Z
     c50:	82 60       	ori	r24, 0x02	; 2
     c52:	80 83       	st	Z, r24
     c54:	08 95       	ret

00000c56 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     c56:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     c5a:	8c e0       	ldi	r24, 0x0C	; 12
     c5c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     c60:	08 95       	ret

00000c62 <i2c_start>:
     c62:	94 ea       	ldi	r25, 0xA4	; 164
     c64:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     c68:	4f ef       	ldi	r20, 0xFF	; 255
     c6a:	50 e0       	ldi	r21, 0x00	; 0
     c6c:	60 e0       	ldi	r22, 0x00	; 0
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	ec eb       	ldi	r30, 0xBC	; 188
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	90 81       	ld	r25, Z
     c76:	99 23       	and	r25, r25
     c78:	34 f0       	brlt	.+12     	; 0xc86 <i2c_start+0x24>
     c7a:	41 50       	subi	r20, 0x01	; 1
     c7c:	51 09       	sbc	r21, r1
     c7e:	61 09       	sbc	r22, r1
     c80:	71 09       	sbc	r23, r1
     c82:	c0 f7       	brcc	.-16     	; 0xc74 <i2c_start+0x12>
     c84:	04 c0       	rjmp	.+8      	; 0xc8e <i2c_start+0x2c>
     c86:	45 2b       	or	r20, r21
     c88:	46 2b       	or	r20, r22
     c8a:	47 2b       	or	r20, r23
     c8c:	41 f1       	breq	.+80     	; 0xcde <i2c_start+0x7c>
     c8e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     c92:	98 7f       	andi	r25, 0xF8	; 248
     c94:	98 30       	cpi	r25, 0x08	; 8
     c96:	11 f0       	breq	.+4      	; 0xc9c <i2c_start+0x3a>
     c98:	90 31       	cpi	r25, 0x10	; 16
     c9a:	19 f5       	brne	.+70     	; 0xce2 <i2c_start+0x80>
     c9c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     ca0:	84 e8       	ldi	r24, 0x84	; 132
     ca2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     ca6:	8f ef       	ldi	r24, 0xFF	; 255
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	a0 e0       	ldi	r26, 0x00	; 0
     cac:	b0 e0       	ldi	r27, 0x00	; 0
     cae:	ec eb       	ldi	r30, 0xBC	; 188
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	20 81       	ld	r18, Z
     cb4:	22 23       	and	r18, r18
     cb6:	2c f0       	brlt	.+10     	; 0xcc2 <i2c_start+0x60>
     cb8:	01 97       	sbiw	r24, 0x01	; 1
     cba:	a1 09       	sbc	r26, r1
     cbc:	b1 09       	sbc	r27, r1
     cbe:	c8 f7       	brcc	.-14     	; 0xcb2 <i2c_start+0x50>
     cc0:	04 c0       	rjmp	.+8      	; 0xcca <i2c_start+0x68>
     cc2:	89 2b       	or	r24, r25
     cc4:	8a 2b       	or	r24, r26
     cc6:	8b 2b       	or	r24, r27
     cc8:	71 f0       	breq	.+28     	; 0xce6 <i2c_start+0x84>
     cca:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     cce:	98 7f       	andi	r25, 0xF8	; 248
     cd0:	98 31       	cpi	r25, 0x18	; 24
     cd2:	59 f0       	breq	.+22     	; 0xcea <i2c_start+0x88>
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	90 34       	cpi	r25, 0x40	; 64
     cd8:	49 f4       	brne	.+18     	; 0xcec <i2c_start+0x8a>
     cda:	80 e0       	ldi	r24, 0x00	; 0
     cdc:	08 95       	ret
     cde:	81 e0       	ldi	r24, 0x01	; 1
     ce0:	08 95       	ret
     ce2:	81 e0       	ldi	r24, 0x01	; 1
     ce4:	08 95       	ret
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	08 95       	ret
     cea:	80 e0       	ldi	r24, 0x00	; 0
     cec:	08 95       	ret

00000cee <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     cee:	84 e9       	ldi	r24, 0x94	; 148
     cf0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	ec eb       	ldi	r30, 0xBC	; 188
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	20 81       	ld	r18, Z
     cfe:	24 ff       	sbrs	r18, 4
     d00:	05 c0       	rjmp	.+10     	; 0xd0c <i2c_stop+0x1e>
     d02:	01 96       	adiw	r24, 0x01	; 1
     d04:	81 15       	cp	r24, r1
     d06:	21 e0       	ldi	r18, 0x01	; 1
     d08:	92 07       	cpc	r25, r18
     d0a:	c1 f7       	brne	.-16     	; 0xcfc <i2c_stop+0xe>
     d0c:	08 95       	ret

00000d0e <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     d0e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     d12:	84 e8       	ldi	r24, 0x84	; 132
     d14:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     d18:	8f ef       	ldi	r24, 0xFF	; 255
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	a0 e0       	ldi	r26, 0x00	; 0
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     d20:	ec eb       	ldi	r30, 0xBC	; 188
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	20 81       	ld	r18, Z
     d26:	22 23       	and	r18, r18
     d28:	2c f0       	brlt	.+10     	; 0xd34 <i2c_write+0x26>
     d2a:	01 97       	sbiw	r24, 0x01	; 1
     d2c:	a1 09       	sbc	r26, r1
     d2e:	b1 09       	sbc	r27, r1
     d30:	c8 f7       	brcc	.-14     	; 0xd24 <i2c_write+0x16>
     d32:	04 c0       	rjmp	.+8      	; 0xd3c <i2c_write+0x2e>
	if(i2c_timer == 0)
     d34:	89 2b       	or	r24, r25
     d36:	8a 2b       	or	r24, r26
     d38:	8b 2b       	or	r24, r27
     d3a:	41 f0       	breq	.+16     	; 0xd4c <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     d3c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     d40:	98 7f       	andi	r25, 0xF8	; 248
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	98 32       	cpi	r25, 0x28	; 40
     d46:	19 f4       	brne	.+6      	; 0xd4e <i2c_write+0x40>
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	08 95       	ret
     d4c:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     d4e:	08 95       	ret

00000d50 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     d50:	84 ec       	ldi	r24, 0xC4	; 196
     d52:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     d56:	8f ef       	ldi	r24, 0xFF	; 255
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	a0 e0       	ldi	r26, 0x00	; 0
     d5c:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     d5e:	ec eb       	ldi	r30, 0xBC	; 188
     d60:	f0 e0       	ldi	r31, 0x00	; 0
     d62:	20 81       	ld	r18, Z
     d64:	22 23       	and	r18, r18
     d66:	2c f0       	brlt	.+10     	; 0xd72 <i2c_readAck+0x22>
     d68:	01 97       	sbiw	r24, 0x01	; 1
     d6a:	a1 09       	sbc	r26, r1
     d6c:	b1 09       	sbc	r27, r1
     d6e:	c8 f7       	brcc	.-14     	; 0xd62 <i2c_readAck+0x12>
     d70:	04 c0       	rjmp	.+8      	; 0xd7a <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     d72:	89 2b       	or	r24, r25
     d74:	8a 2b       	or	r24, r26
     d76:	8b 2b       	or	r24, r27
     d78:	19 f0       	breq	.+6      	; 0xd80 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     d7a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     d7e:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     d80:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     d82:	08 95       	ret

00000d84 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     d84:	84 e8       	ldi	r24, 0x84	; 132
     d86:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     d8a:	8f ef       	ldi	r24, 0xFF	; 255
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	a0 e0       	ldi	r26, 0x00	; 0
     d90:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     d92:	ec eb       	ldi	r30, 0xBC	; 188
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	20 81       	ld	r18, Z
     d98:	22 23       	and	r18, r18
     d9a:	2c f0       	brlt	.+10     	; 0xda6 <i2c_readNak+0x22>
     d9c:	01 97       	sbiw	r24, 0x01	; 1
     d9e:	a1 09       	sbc	r26, r1
     da0:	b1 09       	sbc	r27, r1
     da2:	c8 f7       	brcc	.-14     	; 0xd96 <i2c_readNak+0x12>
     da4:	04 c0       	rjmp	.+8      	; 0xdae <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     da6:	89 2b       	or	r24, r25
     da8:	8a 2b       	or	r24, r26
     daa:	8b 2b       	or	r24, r27
     dac:	19 f0       	breq	.+6      	; 0xdb4 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     dae:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     db2:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     db4:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     db6:	08 95       	ret

00000db8 <USART_Init>:
#include <avr/io.h>
#include <stdio.h>
void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     db8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)ubrr;
     dbc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	UCSR0B = (1<<TXEN0);// | (1<<TXCIE0);
     dc0:	88 e0       	ldi	r24, 0x08	; 8
     dc2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);//2 stop bit 8 bit
     dc6:	8e e0       	ldi	r24, 0x0E	; 14
     dc8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     dcc:	08 95       	ret

00000dce <__subsf3>:
     dce:	50 58       	subi	r21, 0x80	; 128

00000dd0 <__addsf3>:
     dd0:	bb 27       	eor	r27, r27
     dd2:	aa 27       	eor	r26, r26
     dd4:	0e d0       	rcall	.+28     	; 0xdf2 <__addsf3x>
     dd6:	b5 c1       	rjmp	.+874    	; 0x1142 <__fp_round>
     dd8:	a6 d1       	rcall	.+844    	; 0x1126 <__fp_pscA>
     dda:	30 f0       	brcs	.+12     	; 0xde8 <__addsf3+0x18>
     ddc:	ab d1       	rcall	.+854    	; 0x1134 <__fp_pscB>
     dde:	20 f0       	brcs	.+8      	; 0xde8 <__addsf3+0x18>
     de0:	31 f4       	brne	.+12     	; 0xdee <__addsf3+0x1e>
     de2:	9f 3f       	cpi	r25, 0xFF	; 255
     de4:	11 f4       	brne	.+4      	; 0xdea <__addsf3+0x1a>
     de6:	1e f4       	brtc	.+6      	; 0xdee <__addsf3+0x1e>
     de8:	65 c1       	rjmp	.+714    	; 0x10b4 <__fp_nan>
     dea:	0e f4       	brtc	.+2      	; 0xdee <__addsf3+0x1e>
     dec:	e0 95       	com	r30
     dee:	e7 fb       	bst	r30, 7
     df0:	5b c1       	rjmp	.+694    	; 0x10a8 <__fp_inf>

00000df2 <__addsf3x>:
     df2:	e9 2f       	mov	r30, r25
     df4:	b7 d1       	rcall	.+878    	; 0x1164 <__fp_split3>
     df6:	80 f3       	brcs	.-32     	; 0xdd8 <__addsf3+0x8>
     df8:	ba 17       	cp	r27, r26
     dfa:	62 07       	cpc	r22, r18
     dfc:	73 07       	cpc	r23, r19
     dfe:	84 07       	cpc	r24, r20
     e00:	95 07       	cpc	r25, r21
     e02:	18 f0       	brcs	.+6      	; 0xe0a <__addsf3x+0x18>
     e04:	71 f4       	brne	.+28     	; 0xe22 <__addsf3x+0x30>
     e06:	9e f5       	brtc	.+102    	; 0xe6e <__addsf3x+0x7c>
     e08:	cf c1       	rjmp	.+926    	; 0x11a8 <__fp_zero>
     e0a:	0e f4       	brtc	.+2      	; 0xe0e <__addsf3x+0x1c>
     e0c:	e0 95       	com	r30
     e0e:	0b 2e       	mov	r0, r27
     e10:	ba 2f       	mov	r27, r26
     e12:	a0 2d       	mov	r26, r0
     e14:	0b 01       	movw	r0, r22
     e16:	b9 01       	movw	r22, r18
     e18:	90 01       	movw	r18, r0
     e1a:	0c 01       	movw	r0, r24
     e1c:	ca 01       	movw	r24, r20
     e1e:	a0 01       	movw	r20, r0
     e20:	11 24       	eor	r1, r1
     e22:	ff 27       	eor	r31, r31
     e24:	59 1b       	sub	r21, r25
     e26:	99 f0       	breq	.+38     	; 0xe4e <__addsf3x+0x5c>
     e28:	59 3f       	cpi	r21, 0xF9	; 249
     e2a:	50 f4       	brcc	.+20     	; 0xe40 <__addsf3x+0x4e>
     e2c:	50 3e       	cpi	r21, 0xE0	; 224
     e2e:	68 f1       	brcs	.+90     	; 0xe8a <__addsf3x+0x98>
     e30:	1a 16       	cp	r1, r26
     e32:	f0 40       	sbci	r31, 0x00	; 0
     e34:	a2 2f       	mov	r26, r18
     e36:	23 2f       	mov	r18, r19
     e38:	34 2f       	mov	r19, r20
     e3a:	44 27       	eor	r20, r20
     e3c:	58 5f       	subi	r21, 0xF8	; 248
     e3e:	f3 cf       	rjmp	.-26     	; 0xe26 <__addsf3x+0x34>
     e40:	46 95       	lsr	r20
     e42:	37 95       	ror	r19
     e44:	27 95       	ror	r18
     e46:	a7 95       	ror	r26
     e48:	f0 40       	sbci	r31, 0x00	; 0
     e4a:	53 95       	inc	r21
     e4c:	c9 f7       	brne	.-14     	; 0xe40 <__addsf3x+0x4e>
     e4e:	7e f4       	brtc	.+30     	; 0xe6e <__addsf3x+0x7c>
     e50:	1f 16       	cp	r1, r31
     e52:	ba 0b       	sbc	r27, r26
     e54:	62 0b       	sbc	r22, r18
     e56:	73 0b       	sbc	r23, r19
     e58:	84 0b       	sbc	r24, r20
     e5a:	ba f0       	brmi	.+46     	; 0xe8a <__addsf3x+0x98>
     e5c:	91 50       	subi	r25, 0x01	; 1
     e5e:	a1 f0       	breq	.+40     	; 0xe88 <__addsf3x+0x96>
     e60:	ff 0f       	add	r31, r31
     e62:	bb 1f       	adc	r27, r27
     e64:	66 1f       	adc	r22, r22
     e66:	77 1f       	adc	r23, r23
     e68:	88 1f       	adc	r24, r24
     e6a:	c2 f7       	brpl	.-16     	; 0xe5c <__addsf3x+0x6a>
     e6c:	0e c0       	rjmp	.+28     	; 0xe8a <__addsf3x+0x98>
     e6e:	ba 0f       	add	r27, r26
     e70:	62 1f       	adc	r22, r18
     e72:	73 1f       	adc	r23, r19
     e74:	84 1f       	adc	r24, r20
     e76:	48 f4       	brcc	.+18     	; 0xe8a <__addsf3x+0x98>
     e78:	87 95       	ror	r24
     e7a:	77 95       	ror	r23
     e7c:	67 95       	ror	r22
     e7e:	b7 95       	ror	r27
     e80:	f7 95       	ror	r31
     e82:	9e 3f       	cpi	r25, 0xFE	; 254
     e84:	08 f0       	brcs	.+2      	; 0xe88 <__addsf3x+0x96>
     e86:	b3 cf       	rjmp	.-154    	; 0xdee <__addsf3+0x1e>
     e88:	93 95       	inc	r25
     e8a:	88 0f       	add	r24, r24
     e8c:	08 f0       	brcs	.+2      	; 0xe90 <__addsf3x+0x9e>
     e8e:	99 27       	eor	r25, r25
     e90:	ee 0f       	add	r30, r30
     e92:	97 95       	ror	r25
     e94:	87 95       	ror	r24
     e96:	08 95       	ret

00000e98 <asin>:
     e98:	9f 93       	push	r25
     e9a:	9f 77       	andi	r25, 0x7F	; 127
     e9c:	ee e3       	ldi	r30, 0x3E	; 62
     e9e:	89 37       	cpi	r24, 0x79	; 121
     ea0:	9e 07       	cpc	r25, r30
     ea2:	20 f4       	brcc	.+8      	; 0xeac <asin+0x14>
     ea4:	e8 ef       	ldi	r30, 0xF8	; 248
     ea6:	f0 e0       	ldi	r31, 0x00	; 0
     ea8:	2d d1       	rcall	.+602    	; 0x1104 <__fp_powsodd>
     eaa:	09 c0       	rjmp	.+18     	; 0xebe <asin+0x26>
     eac:	e2 d0       	rcall	.+452    	; 0x1072 <__fp_arccos>
     eae:	90 58       	subi	r25, 0x80	; 128
     eb0:	a2 ea       	ldi	r26, 0xA2	; 162
     eb2:	2a ed       	ldi	r18, 0xDA	; 218
     eb4:	3f e0       	ldi	r19, 0x0F	; 15
     eb6:	49 ec       	ldi	r20, 0xC9	; 201
     eb8:	5f e3       	ldi	r21, 0x3F	; 63
     eba:	9b df       	rcall	.-202    	; 0xdf2 <__addsf3x>
     ebc:	42 d1       	rcall	.+644    	; 0x1142 <__fp_round>
     ebe:	0f 90       	pop	r0
     ec0:	07 fc       	sbrc	r0, 7
     ec2:	90 58       	subi	r25, 0x80	; 128
     ec4:	08 95       	ret

00000ec6 <__divsf3>:
     ec6:	0c d0       	rcall	.+24     	; 0xee0 <__divsf3x>
     ec8:	3c c1       	rjmp	.+632    	; 0x1142 <__fp_round>
     eca:	34 d1       	rcall	.+616    	; 0x1134 <__fp_pscB>
     ecc:	40 f0       	brcs	.+16     	; 0xede <__divsf3+0x18>
     ece:	2b d1       	rcall	.+598    	; 0x1126 <__fp_pscA>
     ed0:	30 f0       	brcs	.+12     	; 0xede <__divsf3+0x18>
     ed2:	21 f4       	brne	.+8      	; 0xedc <__divsf3+0x16>
     ed4:	5f 3f       	cpi	r21, 0xFF	; 255
     ed6:	19 f0       	breq	.+6      	; 0xede <__divsf3+0x18>
     ed8:	e7 c0       	rjmp	.+462    	; 0x10a8 <__fp_inf>
     eda:	51 11       	cpse	r21, r1
     edc:	66 c1       	rjmp	.+716    	; 0x11aa <__fp_szero>
     ede:	ea c0       	rjmp	.+468    	; 0x10b4 <__fp_nan>

00000ee0 <__divsf3x>:
     ee0:	41 d1       	rcall	.+642    	; 0x1164 <__fp_split3>
     ee2:	98 f3       	brcs	.-26     	; 0xeca <__divsf3+0x4>

00000ee4 <__divsf3_pse>:
     ee4:	99 23       	and	r25, r25
     ee6:	c9 f3       	breq	.-14     	; 0xeda <__divsf3+0x14>
     ee8:	55 23       	and	r21, r21
     eea:	b1 f3       	breq	.-20     	; 0xed8 <__divsf3+0x12>
     eec:	95 1b       	sub	r25, r21
     eee:	55 0b       	sbc	r21, r21
     ef0:	bb 27       	eor	r27, r27
     ef2:	aa 27       	eor	r26, r26
     ef4:	62 17       	cp	r22, r18
     ef6:	73 07       	cpc	r23, r19
     ef8:	84 07       	cpc	r24, r20
     efa:	38 f0       	brcs	.+14     	; 0xf0a <__divsf3_pse+0x26>
     efc:	9f 5f       	subi	r25, 0xFF	; 255
     efe:	5f 4f       	sbci	r21, 0xFF	; 255
     f00:	22 0f       	add	r18, r18
     f02:	33 1f       	adc	r19, r19
     f04:	44 1f       	adc	r20, r20
     f06:	aa 1f       	adc	r26, r26
     f08:	a9 f3       	breq	.-22     	; 0xef4 <__divsf3_pse+0x10>
     f0a:	33 d0       	rcall	.+102    	; 0xf72 <__divsf3_pse+0x8e>
     f0c:	0e 2e       	mov	r0, r30
     f0e:	3a f0       	brmi	.+14     	; 0xf1e <__divsf3_pse+0x3a>
     f10:	e0 e8       	ldi	r30, 0x80	; 128
     f12:	30 d0       	rcall	.+96     	; 0xf74 <__divsf3_pse+0x90>
     f14:	91 50       	subi	r25, 0x01	; 1
     f16:	50 40       	sbci	r21, 0x00	; 0
     f18:	e6 95       	lsr	r30
     f1a:	00 1c       	adc	r0, r0
     f1c:	ca f7       	brpl	.-14     	; 0xf10 <__divsf3_pse+0x2c>
     f1e:	29 d0       	rcall	.+82     	; 0xf72 <__divsf3_pse+0x8e>
     f20:	fe 2f       	mov	r31, r30
     f22:	27 d0       	rcall	.+78     	; 0xf72 <__divsf3_pse+0x8e>
     f24:	66 0f       	add	r22, r22
     f26:	77 1f       	adc	r23, r23
     f28:	88 1f       	adc	r24, r24
     f2a:	bb 1f       	adc	r27, r27
     f2c:	26 17       	cp	r18, r22
     f2e:	37 07       	cpc	r19, r23
     f30:	48 07       	cpc	r20, r24
     f32:	ab 07       	cpc	r26, r27
     f34:	b0 e8       	ldi	r27, 0x80	; 128
     f36:	09 f0       	breq	.+2      	; 0xf3a <__divsf3_pse+0x56>
     f38:	bb 0b       	sbc	r27, r27
     f3a:	80 2d       	mov	r24, r0
     f3c:	bf 01       	movw	r22, r30
     f3e:	ff 27       	eor	r31, r31
     f40:	93 58       	subi	r25, 0x83	; 131
     f42:	5f 4f       	sbci	r21, 0xFF	; 255
     f44:	2a f0       	brmi	.+10     	; 0xf50 <__divsf3_pse+0x6c>
     f46:	9e 3f       	cpi	r25, 0xFE	; 254
     f48:	51 05       	cpc	r21, r1
     f4a:	68 f0       	brcs	.+26     	; 0xf66 <__divsf3_pse+0x82>
     f4c:	ad c0       	rjmp	.+346    	; 0x10a8 <__fp_inf>
     f4e:	2d c1       	rjmp	.+602    	; 0x11aa <__fp_szero>
     f50:	5f 3f       	cpi	r21, 0xFF	; 255
     f52:	ec f3       	brlt	.-6      	; 0xf4e <__divsf3_pse+0x6a>
     f54:	98 3e       	cpi	r25, 0xE8	; 232
     f56:	dc f3       	brlt	.-10     	; 0xf4e <__divsf3_pse+0x6a>
     f58:	86 95       	lsr	r24
     f5a:	77 95       	ror	r23
     f5c:	67 95       	ror	r22
     f5e:	b7 95       	ror	r27
     f60:	f7 95       	ror	r31
     f62:	9f 5f       	subi	r25, 0xFF	; 255
     f64:	c9 f7       	brne	.-14     	; 0xf58 <__divsf3_pse+0x74>
     f66:	88 0f       	add	r24, r24
     f68:	91 1d       	adc	r25, r1
     f6a:	96 95       	lsr	r25
     f6c:	87 95       	ror	r24
     f6e:	97 f9       	bld	r25, 7
     f70:	08 95       	ret
     f72:	e1 e0       	ldi	r30, 0x01	; 1
     f74:	66 0f       	add	r22, r22
     f76:	77 1f       	adc	r23, r23
     f78:	88 1f       	adc	r24, r24
     f7a:	bb 1f       	adc	r27, r27
     f7c:	62 17       	cp	r22, r18
     f7e:	73 07       	cpc	r23, r19
     f80:	84 07       	cpc	r24, r20
     f82:	ba 07       	cpc	r27, r26
     f84:	20 f0       	brcs	.+8      	; 0xf8e <__divsf3_pse+0xaa>
     f86:	62 1b       	sub	r22, r18
     f88:	73 0b       	sbc	r23, r19
     f8a:	84 0b       	sbc	r24, r20
     f8c:	ba 0b       	sbc	r27, r26
     f8e:	ee 1f       	adc	r30, r30
     f90:	88 f7       	brcc	.-30     	; 0xf74 <__divsf3_pse+0x90>
     f92:	e0 95       	com	r30
     f94:	08 95       	ret

00000f96 <__fixsfsi>:
     f96:	04 d0       	rcall	.+8      	; 0xfa0 <__fixunssfsi>
     f98:	68 94       	set
     f9a:	b1 11       	cpse	r27, r1
     f9c:	06 c1       	rjmp	.+524    	; 0x11aa <__fp_szero>
     f9e:	08 95       	ret

00000fa0 <__fixunssfsi>:
     fa0:	e9 d0       	rcall	.+466    	; 0x1174 <__fp_splitA>
     fa2:	88 f0       	brcs	.+34     	; 0xfc6 <__fixunssfsi+0x26>
     fa4:	9f 57       	subi	r25, 0x7F	; 127
     fa6:	90 f0       	brcs	.+36     	; 0xfcc <__fixunssfsi+0x2c>
     fa8:	b9 2f       	mov	r27, r25
     faa:	99 27       	eor	r25, r25
     fac:	b7 51       	subi	r27, 0x17	; 23
     fae:	a0 f0       	brcs	.+40     	; 0xfd8 <__fixunssfsi+0x38>
     fb0:	d1 f0       	breq	.+52     	; 0xfe6 <__fixunssfsi+0x46>
     fb2:	66 0f       	add	r22, r22
     fb4:	77 1f       	adc	r23, r23
     fb6:	88 1f       	adc	r24, r24
     fb8:	99 1f       	adc	r25, r25
     fba:	1a f0       	brmi	.+6      	; 0xfc2 <__fixunssfsi+0x22>
     fbc:	ba 95       	dec	r27
     fbe:	c9 f7       	brne	.-14     	; 0xfb2 <__fixunssfsi+0x12>
     fc0:	12 c0       	rjmp	.+36     	; 0xfe6 <__fixunssfsi+0x46>
     fc2:	b1 30       	cpi	r27, 0x01	; 1
     fc4:	81 f0       	breq	.+32     	; 0xfe6 <__fixunssfsi+0x46>
     fc6:	f0 d0       	rcall	.+480    	; 0x11a8 <__fp_zero>
     fc8:	b1 e0       	ldi	r27, 0x01	; 1
     fca:	08 95       	ret
     fcc:	ed c0       	rjmp	.+474    	; 0x11a8 <__fp_zero>
     fce:	67 2f       	mov	r22, r23
     fd0:	78 2f       	mov	r23, r24
     fd2:	88 27       	eor	r24, r24
     fd4:	b8 5f       	subi	r27, 0xF8	; 248
     fd6:	39 f0       	breq	.+14     	; 0xfe6 <__fixunssfsi+0x46>
     fd8:	b9 3f       	cpi	r27, 0xF9	; 249
     fda:	cc f3       	brlt	.-14     	; 0xfce <__fixunssfsi+0x2e>
     fdc:	86 95       	lsr	r24
     fde:	77 95       	ror	r23
     fe0:	67 95       	ror	r22
     fe2:	b3 95       	inc	r27
     fe4:	d9 f7       	brne	.-10     	; 0xfdc <__fixunssfsi+0x3c>
     fe6:	3e f4       	brtc	.+14     	; 0xff6 <__fixunssfsi+0x56>
     fe8:	90 95       	com	r25
     fea:	80 95       	com	r24
     fec:	70 95       	com	r23
     fee:	61 95       	neg	r22
     ff0:	7f 4f       	sbci	r23, 0xFF	; 255
     ff2:	8f 4f       	sbci	r24, 0xFF	; 255
     ff4:	9f 4f       	sbci	r25, 0xFF	; 255
     ff6:	08 95       	ret

00000ff8 <__floatunsisf>:
     ff8:	e8 94       	clt
     ffa:	09 c0       	rjmp	.+18     	; 0x100e <__floatsisf+0x12>

00000ffc <__floatsisf>:
     ffc:	97 fb       	bst	r25, 7
     ffe:	3e f4       	brtc	.+14     	; 0x100e <__floatsisf+0x12>
    1000:	90 95       	com	r25
    1002:	80 95       	com	r24
    1004:	70 95       	com	r23
    1006:	61 95       	neg	r22
    1008:	7f 4f       	sbci	r23, 0xFF	; 255
    100a:	8f 4f       	sbci	r24, 0xFF	; 255
    100c:	9f 4f       	sbci	r25, 0xFF	; 255
    100e:	99 23       	and	r25, r25
    1010:	a9 f0       	breq	.+42     	; 0x103c <__floatsisf+0x40>
    1012:	f9 2f       	mov	r31, r25
    1014:	96 e9       	ldi	r25, 0x96	; 150
    1016:	bb 27       	eor	r27, r27
    1018:	93 95       	inc	r25
    101a:	f6 95       	lsr	r31
    101c:	87 95       	ror	r24
    101e:	77 95       	ror	r23
    1020:	67 95       	ror	r22
    1022:	b7 95       	ror	r27
    1024:	f1 11       	cpse	r31, r1
    1026:	f8 cf       	rjmp	.-16     	; 0x1018 <__floatsisf+0x1c>
    1028:	fa f4       	brpl	.+62     	; 0x1068 <__floatsisf+0x6c>
    102a:	bb 0f       	add	r27, r27
    102c:	11 f4       	brne	.+4      	; 0x1032 <__floatsisf+0x36>
    102e:	60 ff       	sbrs	r22, 0
    1030:	1b c0       	rjmp	.+54     	; 0x1068 <__floatsisf+0x6c>
    1032:	6f 5f       	subi	r22, 0xFF	; 255
    1034:	7f 4f       	sbci	r23, 0xFF	; 255
    1036:	8f 4f       	sbci	r24, 0xFF	; 255
    1038:	9f 4f       	sbci	r25, 0xFF	; 255
    103a:	16 c0       	rjmp	.+44     	; 0x1068 <__floatsisf+0x6c>
    103c:	88 23       	and	r24, r24
    103e:	11 f0       	breq	.+4      	; 0x1044 <__floatsisf+0x48>
    1040:	96 e9       	ldi	r25, 0x96	; 150
    1042:	11 c0       	rjmp	.+34     	; 0x1066 <__floatsisf+0x6a>
    1044:	77 23       	and	r23, r23
    1046:	21 f0       	breq	.+8      	; 0x1050 <__floatsisf+0x54>
    1048:	9e e8       	ldi	r25, 0x8E	; 142
    104a:	87 2f       	mov	r24, r23
    104c:	76 2f       	mov	r23, r22
    104e:	05 c0       	rjmp	.+10     	; 0x105a <__floatsisf+0x5e>
    1050:	66 23       	and	r22, r22
    1052:	71 f0       	breq	.+28     	; 0x1070 <__floatsisf+0x74>
    1054:	96 e8       	ldi	r25, 0x86	; 134
    1056:	86 2f       	mov	r24, r22
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	60 e0       	ldi	r22, 0x00	; 0
    105c:	2a f0       	brmi	.+10     	; 0x1068 <__floatsisf+0x6c>
    105e:	9a 95       	dec	r25
    1060:	66 0f       	add	r22, r22
    1062:	77 1f       	adc	r23, r23
    1064:	88 1f       	adc	r24, r24
    1066:	da f7       	brpl	.-10     	; 0x105e <__floatsisf+0x62>
    1068:	88 0f       	add	r24, r24
    106a:	96 95       	lsr	r25
    106c:	87 95       	ror	r24
    106e:	97 f9       	bld	r25, 7
    1070:	08 95       	ret

00001072 <__fp_arccos>:
    1072:	df 93       	push	r29
    1074:	cf 93       	push	r28
    1076:	1f 93       	push	r17
    1078:	0f 93       	push	r16
    107a:	8b 01       	movw	r16, r22
    107c:	ec 01       	movw	r28, r24
    107e:	ec e0       	ldi	r30, 0x0C	; 12
    1080:	f1 e0       	ldi	r31, 0x01	; 1
    1082:	1b d0       	rcall	.+54     	; 0x10ba <__fp_powser>
    1084:	5e d0       	rcall	.+188    	; 0x1142 <__fp_round>
    1086:	98 01       	movw	r18, r16
    1088:	ae 01       	movw	r20, r28
    108a:	8b 01       	movw	r16, r22
    108c:	ec 01       	movw	r28, r24
    108e:	60 e0       	ldi	r22, 0x00	; 0
    1090:	70 e0       	ldi	r23, 0x00	; 0
    1092:	80 e8       	ldi	r24, 0x80	; 128
    1094:	9f e3       	ldi	r25, 0x3F	; 63
    1096:	9b de       	rcall	.-714    	; 0xdce <__subsf3>
    1098:	fb d0       	rcall	.+502    	; 0x1290 <sqrt>
    109a:	98 01       	movw	r18, r16
    109c:	ae 01       	movw	r20, r28
    109e:	0f 91       	pop	r16
    10a0:	1f 91       	pop	r17
    10a2:	cf 91       	pop	r28
    10a4:	df 91       	pop	r29
    10a6:	93 c0       	rjmp	.+294    	; 0x11ce <__mulsf3x>

000010a8 <__fp_inf>:
    10a8:	97 f9       	bld	r25, 7
    10aa:	9f 67       	ori	r25, 0x7F	; 127
    10ac:	80 e8       	ldi	r24, 0x80	; 128
    10ae:	70 e0       	ldi	r23, 0x00	; 0
    10b0:	60 e0       	ldi	r22, 0x00	; 0
    10b2:	08 95       	ret

000010b4 <__fp_nan>:
    10b4:	9f ef       	ldi	r25, 0xFF	; 255
    10b6:	80 ec       	ldi	r24, 0xC0	; 192
    10b8:	08 95       	ret

000010ba <__fp_powser>:
    10ba:	df 93       	push	r29
    10bc:	cf 93       	push	r28
    10be:	1f 93       	push	r17
    10c0:	0f 93       	push	r16
    10c2:	ff 92       	push	r15
    10c4:	ef 92       	push	r14
    10c6:	df 92       	push	r13
    10c8:	7b 01       	movw	r14, r22
    10ca:	8c 01       	movw	r16, r24
    10cc:	68 94       	set
    10ce:	05 c0       	rjmp	.+10     	; 0x10da <__fp_powser+0x20>
    10d0:	da 2e       	mov	r13, r26
    10d2:	ef 01       	movw	r28, r30
    10d4:	7c d0       	rcall	.+248    	; 0x11ce <__mulsf3x>
    10d6:	fe 01       	movw	r30, r28
    10d8:	e8 94       	clt
    10da:	a5 91       	lpm	r26, Z+
    10dc:	25 91       	lpm	r18, Z+
    10de:	35 91       	lpm	r19, Z+
    10e0:	45 91       	lpm	r20, Z+
    10e2:	55 91       	lpm	r21, Z+
    10e4:	ae f3       	brts	.-22     	; 0x10d0 <__fp_powser+0x16>
    10e6:	ef 01       	movw	r28, r30
    10e8:	84 de       	rcall	.-760    	; 0xdf2 <__addsf3x>
    10ea:	fe 01       	movw	r30, r28
    10ec:	97 01       	movw	r18, r14
    10ee:	a8 01       	movw	r20, r16
    10f0:	da 94       	dec	r13
    10f2:	79 f7       	brne	.-34     	; 0x10d2 <__fp_powser+0x18>
    10f4:	df 90       	pop	r13
    10f6:	ef 90       	pop	r14
    10f8:	ff 90       	pop	r15
    10fa:	0f 91       	pop	r16
    10fc:	1f 91       	pop	r17
    10fe:	cf 91       	pop	r28
    1100:	df 91       	pop	r29
    1102:	08 95       	ret

00001104 <__fp_powsodd>:
    1104:	9f 93       	push	r25
    1106:	8f 93       	push	r24
    1108:	7f 93       	push	r23
    110a:	6f 93       	push	r22
    110c:	ff 93       	push	r31
    110e:	ef 93       	push	r30
    1110:	9b 01       	movw	r18, r22
    1112:	ac 01       	movw	r20, r24
    1114:	50 d0       	rcall	.+160    	; 0x11b6 <__mulsf3>
    1116:	ef 91       	pop	r30
    1118:	ff 91       	pop	r31
    111a:	cf df       	rcall	.-98     	; 0x10ba <__fp_powser>
    111c:	2f 91       	pop	r18
    111e:	3f 91       	pop	r19
    1120:	4f 91       	pop	r20
    1122:	5f 91       	pop	r21
    1124:	48 c0       	rjmp	.+144    	; 0x11b6 <__mulsf3>

00001126 <__fp_pscA>:
    1126:	00 24       	eor	r0, r0
    1128:	0a 94       	dec	r0
    112a:	16 16       	cp	r1, r22
    112c:	17 06       	cpc	r1, r23
    112e:	18 06       	cpc	r1, r24
    1130:	09 06       	cpc	r0, r25
    1132:	08 95       	ret

00001134 <__fp_pscB>:
    1134:	00 24       	eor	r0, r0
    1136:	0a 94       	dec	r0
    1138:	12 16       	cp	r1, r18
    113a:	13 06       	cpc	r1, r19
    113c:	14 06       	cpc	r1, r20
    113e:	05 06       	cpc	r0, r21
    1140:	08 95       	ret

00001142 <__fp_round>:
    1142:	09 2e       	mov	r0, r25
    1144:	03 94       	inc	r0
    1146:	00 0c       	add	r0, r0
    1148:	11 f4       	brne	.+4      	; 0x114e <__fp_round+0xc>
    114a:	88 23       	and	r24, r24
    114c:	52 f0       	brmi	.+20     	; 0x1162 <__fp_round+0x20>
    114e:	bb 0f       	add	r27, r27
    1150:	40 f4       	brcc	.+16     	; 0x1162 <__fp_round+0x20>
    1152:	bf 2b       	or	r27, r31
    1154:	11 f4       	brne	.+4      	; 0x115a <__fp_round+0x18>
    1156:	60 ff       	sbrs	r22, 0
    1158:	04 c0       	rjmp	.+8      	; 0x1162 <__fp_round+0x20>
    115a:	6f 5f       	subi	r22, 0xFF	; 255
    115c:	7f 4f       	sbci	r23, 0xFF	; 255
    115e:	8f 4f       	sbci	r24, 0xFF	; 255
    1160:	9f 4f       	sbci	r25, 0xFF	; 255
    1162:	08 95       	ret

00001164 <__fp_split3>:
    1164:	57 fd       	sbrc	r21, 7
    1166:	90 58       	subi	r25, 0x80	; 128
    1168:	44 0f       	add	r20, r20
    116a:	55 1f       	adc	r21, r21
    116c:	59 f0       	breq	.+22     	; 0x1184 <__fp_splitA+0x10>
    116e:	5f 3f       	cpi	r21, 0xFF	; 255
    1170:	71 f0       	breq	.+28     	; 0x118e <__fp_splitA+0x1a>
    1172:	47 95       	ror	r20

00001174 <__fp_splitA>:
    1174:	88 0f       	add	r24, r24
    1176:	97 fb       	bst	r25, 7
    1178:	99 1f       	adc	r25, r25
    117a:	61 f0       	breq	.+24     	; 0x1194 <__fp_splitA+0x20>
    117c:	9f 3f       	cpi	r25, 0xFF	; 255
    117e:	79 f0       	breq	.+30     	; 0x119e <__fp_splitA+0x2a>
    1180:	87 95       	ror	r24
    1182:	08 95       	ret
    1184:	12 16       	cp	r1, r18
    1186:	13 06       	cpc	r1, r19
    1188:	14 06       	cpc	r1, r20
    118a:	55 1f       	adc	r21, r21
    118c:	f2 cf       	rjmp	.-28     	; 0x1172 <__fp_split3+0xe>
    118e:	46 95       	lsr	r20
    1190:	f1 df       	rcall	.-30     	; 0x1174 <__fp_splitA>
    1192:	08 c0       	rjmp	.+16     	; 0x11a4 <__fp_splitA+0x30>
    1194:	16 16       	cp	r1, r22
    1196:	17 06       	cpc	r1, r23
    1198:	18 06       	cpc	r1, r24
    119a:	99 1f       	adc	r25, r25
    119c:	f1 cf       	rjmp	.-30     	; 0x1180 <__fp_splitA+0xc>
    119e:	86 95       	lsr	r24
    11a0:	71 05       	cpc	r23, r1
    11a2:	61 05       	cpc	r22, r1
    11a4:	08 94       	sec
    11a6:	08 95       	ret

000011a8 <__fp_zero>:
    11a8:	e8 94       	clt

000011aa <__fp_szero>:
    11aa:	bb 27       	eor	r27, r27
    11ac:	66 27       	eor	r22, r22
    11ae:	77 27       	eor	r23, r23
    11b0:	cb 01       	movw	r24, r22
    11b2:	97 f9       	bld	r25, 7
    11b4:	08 95       	ret

000011b6 <__mulsf3>:
    11b6:	0b d0       	rcall	.+22     	; 0x11ce <__mulsf3x>
    11b8:	c4 cf       	rjmp	.-120    	; 0x1142 <__fp_round>
    11ba:	b5 df       	rcall	.-150    	; 0x1126 <__fp_pscA>
    11bc:	28 f0       	brcs	.+10     	; 0x11c8 <__mulsf3+0x12>
    11be:	ba df       	rcall	.-140    	; 0x1134 <__fp_pscB>
    11c0:	18 f0       	brcs	.+6      	; 0x11c8 <__mulsf3+0x12>
    11c2:	95 23       	and	r25, r21
    11c4:	09 f0       	breq	.+2      	; 0x11c8 <__mulsf3+0x12>
    11c6:	70 cf       	rjmp	.-288    	; 0x10a8 <__fp_inf>
    11c8:	75 cf       	rjmp	.-278    	; 0x10b4 <__fp_nan>
    11ca:	11 24       	eor	r1, r1
    11cc:	ee cf       	rjmp	.-36     	; 0x11aa <__fp_szero>

000011ce <__mulsf3x>:
    11ce:	ca df       	rcall	.-108    	; 0x1164 <__fp_split3>
    11d0:	a0 f3       	brcs	.-24     	; 0x11ba <__mulsf3+0x4>

000011d2 <__mulsf3_pse>:
    11d2:	95 9f       	mul	r25, r21
    11d4:	d1 f3       	breq	.-12     	; 0x11ca <__mulsf3+0x14>
    11d6:	95 0f       	add	r25, r21
    11d8:	50 e0       	ldi	r21, 0x00	; 0
    11da:	55 1f       	adc	r21, r21
    11dc:	62 9f       	mul	r22, r18
    11de:	f0 01       	movw	r30, r0
    11e0:	72 9f       	mul	r23, r18
    11e2:	bb 27       	eor	r27, r27
    11e4:	f0 0d       	add	r31, r0
    11e6:	b1 1d       	adc	r27, r1
    11e8:	63 9f       	mul	r22, r19
    11ea:	aa 27       	eor	r26, r26
    11ec:	f0 0d       	add	r31, r0
    11ee:	b1 1d       	adc	r27, r1
    11f0:	aa 1f       	adc	r26, r26
    11f2:	64 9f       	mul	r22, r20
    11f4:	66 27       	eor	r22, r22
    11f6:	b0 0d       	add	r27, r0
    11f8:	a1 1d       	adc	r26, r1
    11fa:	66 1f       	adc	r22, r22
    11fc:	82 9f       	mul	r24, r18
    11fe:	22 27       	eor	r18, r18
    1200:	b0 0d       	add	r27, r0
    1202:	a1 1d       	adc	r26, r1
    1204:	62 1f       	adc	r22, r18
    1206:	73 9f       	mul	r23, r19
    1208:	b0 0d       	add	r27, r0
    120a:	a1 1d       	adc	r26, r1
    120c:	62 1f       	adc	r22, r18
    120e:	83 9f       	mul	r24, r19
    1210:	a0 0d       	add	r26, r0
    1212:	61 1d       	adc	r22, r1
    1214:	22 1f       	adc	r18, r18
    1216:	74 9f       	mul	r23, r20
    1218:	33 27       	eor	r19, r19
    121a:	a0 0d       	add	r26, r0
    121c:	61 1d       	adc	r22, r1
    121e:	23 1f       	adc	r18, r19
    1220:	84 9f       	mul	r24, r20
    1222:	60 0d       	add	r22, r0
    1224:	21 1d       	adc	r18, r1
    1226:	82 2f       	mov	r24, r18
    1228:	76 2f       	mov	r23, r22
    122a:	6a 2f       	mov	r22, r26
    122c:	11 24       	eor	r1, r1
    122e:	9f 57       	subi	r25, 0x7F	; 127
    1230:	50 40       	sbci	r21, 0x00	; 0
    1232:	8a f0       	brmi	.+34     	; 0x1256 <__mulsf3_pse+0x84>
    1234:	e1 f0       	breq	.+56     	; 0x126e <__mulsf3_pse+0x9c>
    1236:	88 23       	and	r24, r24
    1238:	4a f0       	brmi	.+18     	; 0x124c <__mulsf3_pse+0x7a>
    123a:	ee 0f       	add	r30, r30
    123c:	ff 1f       	adc	r31, r31
    123e:	bb 1f       	adc	r27, r27
    1240:	66 1f       	adc	r22, r22
    1242:	77 1f       	adc	r23, r23
    1244:	88 1f       	adc	r24, r24
    1246:	91 50       	subi	r25, 0x01	; 1
    1248:	50 40       	sbci	r21, 0x00	; 0
    124a:	a9 f7       	brne	.-22     	; 0x1236 <__mulsf3_pse+0x64>
    124c:	9e 3f       	cpi	r25, 0xFE	; 254
    124e:	51 05       	cpc	r21, r1
    1250:	70 f0       	brcs	.+28     	; 0x126e <__mulsf3_pse+0x9c>
    1252:	2a cf       	rjmp	.-428    	; 0x10a8 <__fp_inf>
    1254:	aa cf       	rjmp	.-172    	; 0x11aa <__fp_szero>
    1256:	5f 3f       	cpi	r21, 0xFF	; 255
    1258:	ec f3       	brlt	.-6      	; 0x1254 <__mulsf3_pse+0x82>
    125a:	98 3e       	cpi	r25, 0xE8	; 232
    125c:	dc f3       	brlt	.-10     	; 0x1254 <__mulsf3_pse+0x82>
    125e:	86 95       	lsr	r24
    1260:	77 95       	ror	r23
    1262:	67 95       	ror	r22
    1264:	b7 95       	ror	r27
    1266:	f7 95       	ror	r31
    1268:	e7 95       	ror	r30
    126a:	9f 5f       	subi	r25, 0xFF	; 255
    126c:	c1 f7       	brne	.-16     	; 0x125e <__mulsf3_pse+0x8c>
    126e:	fe 2b       	or	r31, r30
    1270:	88 0f       	add	r24, r24
    1272:	91 1d       	adc	r25, r1
    1274:	96 95       	lsr	r25
    1276:	87 95       	ror	r24
    1278:	97 f9       	bld	r25, 7
    127a:	08 95       	ret

0000127c <sin>:
    127c:	9f 93       	push	r25
    127e:	5c d0       	rcall	.+184    	; 0x1338 <__fp_rempio2>
    1280:	0f 90       	pop	r0
    1282:	07 fc       	sbrc	r0, 7
    1284:	ee 5f       	subi	r30, 0xFE	; 254
    1286:	7f c0       	rjmp	.+254    	; 0x1386 <__fp_sinus>
    1288:	11 f4       	brne	.+4      	; 0x128e <sin+0x12>
    128a:	0e f4       	brtc	.+2      	; 0x128e <sin+0x12>
    128c:	13 cf       	rjmp	.-474    	; 0x10b4 <__fp_nan>
    128e:	3e c0       	rjmp	.+124    	; 0x130c <__fp_mpack>

00001290 <sqrt>:
    1290:	71 df       	rcall	.-286    	; 0x1174 <__fp_splitA>
    1292:	d0 f3       	brcs	.-12     	; 0x1288 <sin+0xc>
    1294:	99 23       	and	r25, r25
    1296:	d9 f3       	breq	.-10     	; 0x128e <sin+0x12>
    1298:	ce f3       	brts	.-14     	; 0x128c <sin+0x10>
    129a:	9f 57       	subi	r25, 0x7F	; 127
    129c:	55 0b       	sbc	r21, r21
    129e:	87 ff       	sbrs	r24, 7
    12a0:	43 d0       	rcall	.+134    	; 0x1328 <__fp_norm2>
    12a2:	00 24       	eor	r0, r0
    12a4:	a0 e6       	ldi	r26, 0x60	; 96
    12a6:	40 ea       	ldi	r20, 0xA0	; 160
    12a8:	90 01       	movw	r18, r0
    12aa:	80 58       	subi	r24, 0x80	; 128
    12ac:	56 95       	lsr	r21
    12ae:	97 95       	ror	r25
    12b0:	28 f4       	brcc	.+10     	; 0x12bc <sqrt+0x2c>
    12b2:	80 5c       	subi	r24, 0xC0	; 192
    12b4:	66 0f       	add	r22, r22
    12b6:	77 1f       	adc	r23, r23
    12b8:	88 1f       	adc	r24, r24
    12ba:	20 f0       	brcs	.+8      	; 0x12c4 <sqrt+0x34>
    12bc:	26 17       	cp	r18, r22
    12be:	37 07       	cpc	r19, r23
    12c0:	48 07       	cpc	r20, r24
    12c2:	30 f4       	brcc	.+12     	; 0x12d0 <sqrt+0x40>
    12c4:	62 1b       	sub	r22, r18
    12c6:	73 0b       	sbc	r23, r19
    12c8:	84 0b       	sbc	r24, r20
    12ca:	20 29       	or	r18, r0
    12cc:	31 29       	or	r19, r1
    12ce:	4a 2b       	or	r20, r26
    12d0:	a6 95       	lsr	r26
    12d2:	17 94       	ror	r1
    12d4:	07 94       	ror	r0
    12d6:	20 25       	eor	r18, r0
    12d8:	31 25       	eor	r19, r1
    12da:	4a 27       	eor	r20, r26
    12dc:	58 f7       	brcc	.-42     	; 0x12b4 <sqrt+0x24>
    12de:	66 0f       	add	r22, r22
    12e0:	77 1f       	adc	r23, r23
    12e2:	88 1f       	adc	r24, r24
    12e4:	20 f0       	brcs	.+8      	; 0x12ee <sqrt+0x5e>
    12e6:	26 17       	cp	r18, r22
    12e8:	37 07       	cpc	r19, r23
    12ea:	48 07       	cpc	r20, r24
    12ec:	30 f4       	brcc	.+12     	; 0x12fa <sqrt+0x6a>
    12ee:	62 0b       	sbc	r22, r18
    12f0:	73 0b       	sbc	r23, r19
    12f2:	84 0b       	sbc	r24, r20
    12f4:	20 0d       	add	r18, r0
    12f6:	31 1d       	adc	r19, r1
    12f8:	41 1d       	adc	r20, r1
    12fa:	a0 95       	com	r26
    12fc:	81 f7       	brne	.-32     	; 0x12de <sqrt+0x4e>
    12fe:	b9 01       	movw	r22, r18
    1300:	84 2f       	mov	r24, r20
    1302:	91 58       	subi	r25, 0x81	; 129
    1304:	88 0f       	add	r24, r24
    1306:	96 95       	lsr	r25
    1308:	87 95       	ror	r24
    130a:	08 95       	ret

0000130c <__fp_mpack>:
    130c:	9f 3f       	cpi	r25, 0xFF	; 255
    130e:	31 f0       	breq	.+12     	; 0x131c <__fp_mpack_finite+0xc>

00001310 <__fp_mpack_finite>:
    1310:	91 50       	subi	r25, 0x01	; 1
    1312:	20 f4       	brcc	.+8      	; 0x131c <__fp_mpack_finite+0xc>
    1314:	87 95       	ror	r24
    1316:	77 95       	ror	r23
    1318:	67 95       	ror	r22
    131a:	b7 95       	ror	r27
    131c:	88 0f       	add	r24, r24
    131e:	91 1d       	adc	r25, r1
    1320:	96 95       	lsr	r25
    1322:	87 95       	ror	r24
    1324:	97 f9       	bld	r25, 7
    1326:	08 95       	ret

00001328 <__fp_norm2>:
    1328:	91 50       	subi	r25, 0x01	; 1
    132a:	50 40       	sbci	r21, 0x00	; 0
    132c:	66 0f       	add	r22, r22
    132e:	77 1f       	adc	r23, r23
    1330:	88 1f       	adc	r24, r24
    1332:	d2 f7       	brpl	.-12     	; 0x1328 <__fp_norm2>
    1334:	08 95       	ret
    1336:	be ce       	rjmp	.-644    	; 0x10b4 <__fp_nan>

00001338 <__fp_rempio2>:
    1338:	1d df       	rcall	.-454    	; 0x1174 <__fp_splitA>
    133a:	e8 f3       	brcs	.-6      	; 0x1336 <__fp_norm2+0xe>
    133c:	e8 94       	clt
    133e:	e0 e0       	ldi	r30, 0x00	; 0
    1340:	bb 27       	eor	r27, r27
    1342:	9f 57       	subi	r25, 0x7F	; 127
    1344:	f0 f0       	brcs	.+60     	; 0x1382 <__fp_rempio2+0x4a>
    1346:	2a ed       	ldi	r18, 0xDA	; 218
    1348:	3f e0       	ldi	r19, 0x0F	; 15
    134a:	49 ec       	ldi	r20, 0xC9	; 201
    134c:	06 c0       	rjmp	.+12     	; 0x135a <__fp_rempio2+0x22>
    134e:	ee 0f       	add	r30, r30
    1350:	bb 0f       	add	r27, r27
    1352:	66 1f       	adc	r22, r22
    1354:	77 1f       	adc	r23, r23
    1356:	88 1f       	adc	r24, r24
    1358:	28 f0       	brcs	.+10     	; 0x1364 <__fp_rempio2+0x2c>
    135a:	b2 3a       	cpi	r27, 0xA2	; 162
    135c:	62 07       	cpc	r22, r18
    135e:	73 07       	cpc	r23, r19
    1360:	84 07       	cpc	r24, r20
    1362:	28 f0       	brcs	.+10     	; 0x136e <__fp_rempio2+0x36>
    1364:	b2 5a       	subi	r27, 0xA2	; 162
    1366:	62 0b       	sbc	r22, r18
    1368:	73 0b       	sbc	r23, r19
    136a:	84 0b       	sbc	r24, r20
    136c:	e3 95       	inc	r30
    136e:	9a 95       	dec	r25
    1370:	72 f7       	brpl	.-36     	; 0x134e <__fp_rempio2+0x16>
    1372:	80 38       	cpi	r24, 0x80	; 128
    1374:	30 f4       	brcc	.+12     	; 0x1382 <__fp_rempio2+0x4a>
    1376:	9a 95       	dec	r25
    1378:	bb 0f       	add	r27, r27
    137a:	66 1f       	adc	r22, r22
    137c:	77 1f       	adc	r23, r23
    137e:	88 1f       	adc	r24, r24
    1380:	d2 f7       	brpl	.-12     	; 0x1376 <__fp_rempio2+0x3e>
    1382:	90 48       	sbci	r25, 0x80	; 128
    1384:	c5 cf       	rjmp	.-118    	; 0x1310 <__fp_mpack_finite>

00001386 <__fp_sinus>:
    1386:	ef 93       	push	r30
    1388:	e0 ff       	sbrs	r30, 0
    138a:	06 c0       	rjmp	.+12     	; 0x1398 <__fp_sinus+0x12>
    138c:	a2 ea       	ldi	r26, 0xA2	; 162
    138e:	2a ed       	ldi	r18, 0xDA	; 218
    1390:	3f e0       	ldi	r19, 0x0F	; 15
    1392:	49 ec       	ldi	r20, 0xC9	; 201
    1394:	5f eb       	ldi	r21, 0xBF	; 191
    1396:	2d dd       	rcall	.-1446   	; 0xdf2 <__addsf3x>
    1398:	d4 de       	rcall	.-600    	; 0x1142 <__fp_round>
    139a:	0f 90       	pop	r0
    139c:	03 94       	inc	r0
    139e:	01 fc       	sbrc	r0, 1
    13a0:	90 58       	subi	r25, 0x80	; 128
    13a2:	e4 e3       	ldi	r30, 0x34	; 52
    13a4:	f1 e0       	ldi	r31, 0x01	; 1
    13a6:	ae ce       	rjmp	.-676    	; 0x1104 <__fp_powsodd>

000013a8 <__divmodhi4>:
    13a8:	97 fb       	bst	r25, 7
    13aa:	07 2e       	mov	r0, r23
    13ac:	16 f4       	brtc	.+4      	; 0x13b2 <__divmodhi4+0xa>
    13ae:	00 94       	com	r0
    13b0:	06 d0       	rcall	.+12     	; 0x13be <__divmodhi4_neg1>
    13b2:	77 fd       	sbrc	r23, 7
    13b4:	08 d0       	rcall	.+16     	; 0x13c6 <__divmodhi4_neg2>
    13b6:	2f d0       	rcall	.+94     	; 0x1416 <__udivmodhi4>
    13b8:	07 fc       	sbrc	r0, 7
    13ba:	05 d0       	rcall	.+10     	; 0x13c6 <__divmodhi4_neg2>
    13bc:	3e f4       	brtc	.+14     	; 0x13cc <__divmodhi4_exit>

000013be <__divmodhi4_neg1>:
    13be:	90 95       	com	r25
    13c0:	81 95       	neg	r24
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	08 95       	ret

000013c6 <__divmodhi4_neg2>:
    13c6:	70 95       	com	r23
    13c8:	61 95       	neg	r22
    13ca:	7f 4f       	sbci	r23, 0xFF	; 255

000013cc <__divmodhi4_exit>:
    13cc:	08 95       	ret

000013ce <__divmodsi4>:
    13ce:	05 2e       	mov	r0, r21
    13d0:	97 fb       	bst	r25, 7
    13d2:	16 f4       	brtc	.+4      	; 0x13d8 <__divmodsi4+0xa>
    13d4:	00 94       	com	r0
    13d6:	0f d0       	rcall	.+30     	; 0x13f6 <__negsi2>
    13d8:	57 fd       	sbrc	r21, 7
    13da:	05 d0       	rcall	.+10     	; 0x13e6 <__divmodsi4_neg2>
    13dc:	30 d0       	rcall	.+96     	; 0x143e <__udivmodsi4>
    13de:	07 fc       	sbrc	r0, 7
    13e0:	02 d0       	rcall	.+4      	; 0x13e6 <__divmodsi4_neg2>
    13e2:	46 f4       	brtc	.+16     	; 0x13f4 <__divmodsi4_exit>
    13e4:	08 c0       	rjmp	.+16     	; 0x13f6 <__negsi2>

000013e6 <__divmodsi4_neg2>:
    13e6:	50 95       	com	r21
    13e8:	40 95       	com	r20
    13ea:	30 95       	com	r19
    13ec:	21 95       	neg	r18
    13ee:	3f 4f       	sbci	r19, 0xFF	; 255
    13f0:	4f 4f       	sbci	r20, 0xFF	; 255
    13f2:	5f 4f       	sbci	r21, 0xFF	; 255

000013f4 <__divmodsi4_exit>:
    13f4:	08 95       	ret

000013f6 <__negsi2>:
    13f6:	90 95       	com	r25
    13f8:	80 95       	com	r24
    13fa:	70 95       	com	r23
    13fc:	61 95       	neg	r22
    13fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1400:	8f 4f       	sbci	r24, 0xFF	; 255
    1402:	9f 4f       	sbci	r25, 0xFF	; 255
    1404:	08 95       	ret

00001406 <__tablejump2__>:
    1406:	ee 0f       	add	r30, r30
    1408:	ff 1f       	adc	r31, r31
    140a:	88 1f       	adc	r24, r24
    140c:	8b bf       	out	0x3b, r24	; 59
    140e:	07 90       	elpm	r0, Z+
    1410:	f6 91       	elpm	r31, Z
    1412:	e0 2d       	mov	r30, r0
    1414:	19 94       	eijmp

00001416 <__udivmodhi4>:
    1416:	aa 1b       	sub	r26, r26
    1418:	bb 1b       	sub	r27, r27
    141a:	51 e1       	ldi	r21, 0x11	; 17
    141c:	07 c0       	rjmp	.+14     	; 0x142c <__udivmodhi4_ep>

0000141e <__udivmodhi4_loop>:
    141e:	aa 1f       	adc	r26, r26
    1420:	bb 1f       	adc	r27, r27
    1422:	a6 17       	cp	r26, r22
    1424:	b7 07       	cpc	r27, r23
    1426:	10 f0       	brcs	.+4      	; 0x142c <__udivmodhi4_ep>
    1428:	a6 1b       	sub	r26, r22
    142a:	b7 0b       	sbc	r27, r23

0000142c <__udivmodhi4_ep>:
    142c:	88 1f       	adc	r24, r24
    142e:	99 1f       	adc	r25, r25
    1430:	5a 95       	dec	r21
    1432:	a9 f7       	brne	.-22     	; 0x141e <__udivmodhi4_loop>
    1434:	80 95       	com	r24
    1436:	90 95       	com	r25
    1438:	bc 01       	movw	r22, r24
    143a:	cd 01       	movw	r24, r26
    143c:	08 95       	ret

0000143e <__udivmodsi4>:
    143e:	a1 e2       	ldi	r26, 0x21	; 33
    1440:	1a 2e       	mov	r1, r26
    1442:	aa 1b       	sub	r26, r26
    1444:	bb 1b       	sub	r27, r27
    1446:	fd 01       	movw	r30, r26
    1448:	0d c0       	rjmp	.+26     	; 0x1464 <__udivmodsi4_ep>

0000144a <__udivmodsi4_loop>:
    144a:	aa 1f       	adc	r26, r26
    144c:	bb 1f       	adc	r27, r27
    144e:	ee 1f       	adc	r30, r30
    1450:	ff 1f       	adc	r31, r31
    1452:	a2 17       	cp	r26, r18
    1454:	b3 07       	cpc	r27, r19
    1456:	e4 07       	cpc	r30, r20
    1458:	f5 07       	cpc	r31, r21
    145a:	20 f0       	brcs	.+8      	; 0x1464 <__udivmodsi4_ep>
    145c:	a2 1b       	sub	r26, r18
    145e:	b3 0b       	sbc	r27, r19
    1460:	e4 0b       	sbc	r30, r20
    1462:	f5 0b       	sbc	r31, r21

00001464 <__udivmodsi4_ep>:
    1464:	66 1f       	adc	r22, r22
    1466:	77 1f       	adc	r23, r23
    1468:	88 1f       	adc	r24, r24
    146a:	99 1f       	adc	r25, r25
    146c:	1a 94       	dec	r1
    146e:	69 f7       	brne	.-38     	; 0x144a <__udivmodsi4_loop>
    1470:	60 95       	com	r22
    1472:	70 95       	com	r23
    1474:	80 95       	com	r24
    1476:	90 95       	com	r25
    1478:	9b 01       	movw	r18, r22
    147a:	ac 01       	movw	r20, r24
    147c:	bd 01       	movw	r22, r26
    147e:	cf 01       	movw	r24, r30
    1480:	08 95       	ret

00001482 <__itoa_ncheck>:
    1482:	bb 27       	eor	r27, r27
    1484:	4a 30       	cpi	r20, 0x0A	; 10
    1486:	31 f4       	brne	.+12     	; 0x1494 <__itoa_ncheck+0x12>
    1488:	99 23       	and	r25, r25
    148a:	22 f4       	brpl	.+8      	; 0x1494 <__itoa_ncheck+0x12>
    148c:	bd e2       	ldi	r27, 0x2D	; 45
    148e:	90 95       	com	r25
    1490:	81 95       	neg	r24
    1492:	9f 4f       	sbci	r25, 0xFF	; 255
    1494:	01 c0       	rjmp	.+2      	; 0x1498 <__utoa_common>

00001496 <__utoa_ncheck>:
    1496:	bb 27       	eor	r27, r27

00001498 <__utoa_common>:
    1498:	fb 01       	movw	r30, r22
    149a:	55 27       	eor	r21, r21
    149c:	aa 27       	eor	r26, r26
    149e:	88 0f       	add	r24, r24
    14a0:	99 1f       	adc	r25, r25
    14a2:	aa 1f       	adc	r26, r26
    14a4:	a4 17       	cp	r26, r20
    14a6:	10 f0       	brcs	.+4      	; 0x14ac <__utoa_common+0x14>
    14a8:	a4 1b       	sub	r26, r20
    14aa:	83 95       	inc	r24
    14ac:	50 51       	subi	r21, 0x10	; 16
    14ae:	b9 f7       	brne	.-18     	; 0x149e <__utoa_common+0x6>
    14b0:	a0 5d       	subi	r26, 0xD0	; 208
    14b2:	aa 33       	cpi	r26, 0x3A	; 58
    14b4:	08 f0       	brcs	.+2      	; 0x14b8 <__utoa_common+0x20>
    14b6:	a9 5d       	subi	r26, 0xD9	; 217
    14b8:	a1 93       	st	Z+, r26
    14ba:	00 97       	sbiw	r24, 0x00	; 0
    14bc:	79 f7       	brne	.-34     	; 0x149c <__utoa_common+0x4>
    14be:	b1 11       	cpse	r27, r1
    14c0:	b1 93       	st	Z+, r27
    14c2:	11 92       	st	Z+, r1
    14c4:	cb 01       	movw	r24, r22
    14c6:	e7 c3       	rjmp	.+1998   	; 0x1c96 <strrev>

000014c8 <fdevopen>:
    14c8:	0f 93       	push	r16
    14ca:	1f 93       	push	r17
    14cc:	cf 93       	push	r28
    14ce:	df 93       	push	r29
    14d0:	00 97       	sbiw	r24, 0x00	; 0
    14d2:	31 f4       	brne	.+12     	; 0x14e0 <fdevopen+0x18>
    14d4:	61 15       	cp	r22, r1
    14d6:	71 05       	cpc	r23, r1
    14d8:	19 f4       	brne	.+6      	; 0x14e0 <fdevopen+0x18>
    14da:	80 e0       	ldi	r24, 0x00	; 0
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	39 c0       	rjmp	.+114    	; 0x1552 <fdevopen+0x8a>
    14e0:	8b 01       	movw	r16, r22
    14e2:	ec 01       	movw	r28, r24
    14e4:	6e e0       	ldi	r22, 0x0E	; 14
    14e6:	70 e0       	ldi	r23, 0x00	; 0
    14e8:	81 e0       	ldi	r24, 0x01	; 1
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	7c d2       	rcall	.+1272   	; 0x19e6 <calloc>
    14ee:	fc 01       	movw	r30, r24
    14f0:	89 2b       	or	r24, r25
    14f2:	99 f3       	breq	.-26     	; 0x14da <fdevopen+0x12>
    14f4:	80 e8       	ldi	r24, 0x80	; 128
    14f6:	83 83       	std	Z+3, r24	; 0x03
    14f8:	01 15       	cp	r16, r1
    14fa:	11 05       	cpc	r17, r1
    14fc:	71 f0       	breq	.+28     	; 0x151a <fdevopen+0x52>
    14fe:	13 87       	std	Z+11, r17	; 0x0b
    1500:	02 87       	std	Z+10, r16	; 0x0a
    1502:	81 e8       	ldi	r24, 0x81	; 129
    1504:	83 83       	std	Z+3, r24	; 0x03
    1506:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <__iob>
    150a:	90 91 67 04 	lds	r25, 0x0467	; 0x800467 <__iob+0x1>
    150e:	89 2b       	or	r24, r25
    1510:	21 f4       	brne	.+8      	; 0x151a <fdevopen+0x52>
    1512:	f0 93 67 04 	sts	0x0467, r31	; 0x800467 <__iob+0x1>
    1516:	e0 93 66 04 	sts	0x0466, r30	; 0x800466 <__iob>
    151a:	20 97       	sbiw	r28, 0x00	; 0
    151c:	c9 f0       	breq	.+50     	; 0x1550 <fdevopen+0x88>
    151e:	d1 87       	std	Z+9, r29	; 0x09
    1520:	c0 87       	std	Z+8, r28	; 0x08
    1522:	83 81       	ldd	r24, Z+3	; 0x03
    1524:	82 60       	ori	r24, 0x02	; 2
    1526:	83 83       	std	Z+3, r24	; 0x03
    1528:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__iob+0x2>
    152c:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <__iob+0x3>
    1530:	89 2b       	or	r24, r25
    1532:	71 f4       	brne	.+28     	; 0x1550 <fdevopen+0x88>
    1534:	f0 93 69 04 	sts	0x0469, r31	; 0x800469 <__iob+0x3>
    1538:	e0 93 68 04 	sts	0x0468, r30	; 0x800468 <__iob+0x2>
    153c:	80 91 6a 04 	lds	r24, 0x046A	; 0x80046a <__iob+0x4>
    1540:	90 91 6b 04 	lds	r25, 0x046B	; 0x80046b <__iob+0x5>
    1544:	89 2b       	or	r24, r25
    1546:	21 f4       	brne	.+8      	; 0x1550 <fdevopen+0x88>
    1548:	f0 93 6b 04 	sts	0x046B, r31	; 0x80046b <__iob+0x5>
    154c:	e0 93 6a 04 	sts	0x046A, r30	; 0x80046a <__iob+0x4>
    1550:	cf 01       	movw	r24, r30
    1552:	df 91       	pop	r29
    1554:	cf 91       	pop	r28
    1556:	1f 91       	pop	r17
    1558:	0f 91       	pop	r16
    155a:	08 95       	ret

0000155c <printf>:
    155c:	cf 93       	push	r28
    155e:	df 93       	push	r29
    1560:	cd b7       	in	r28, 0x3d	; 61
    1562:	de b7       	in	r29, 0x3e	; 62
    1564:	ae 01       	movw	r20, r28
    1566:	4a 5f       	subi	r20, 0xFA	; 250
    1568:	5f 4f       	sbci	r21, 0xFF	; 255
    156a:	fa 01       	movw	r30, r20
    156c:	61 91       	ld	r22, Z+
    156e:	71 91       	ld	r23, Z+
    1570:	af 01       	movw	r20, r30
    1572:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <__iob+0x2>
    1576:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <__iob+0x3>
    157a:	38 d0       	rcall	.+112    	; 0x15ec <vfprintf>
    157c:	df 91       	pop	r29
    157e:	cf 91       	pop	r28
    1580:	08 95       	ret

00001582 <putchar>:
    1582:	60 91 68 04 	lds	r22, 0x0468	; 0x800468 <__iob+0x2>
    1586:	70 91 69 04 	lds	r23, 0x0469	; 0x800469 <__iob+0x3>
    158a:	95 c3       	rjmp	.+1834   	; 0x1cb6 <fputc>

0000158c <puts>:
    158c:	0f 93       	push	r16
    158e:	1f 93       	push	r17
    1590:	cf 93       	push	r28
    1592:	df 93       	push	r29
    1594:	e0 91 68 04 	lds	r30, 0x0468	; 0x800468 <__iob+0x2>
    1598:	f0 91 69 04 	lds	r31, 0x0469	; 0x800469 <__iob+0x3>
    159c:	23 81       	ldd	r18, Z+3	; 0x03
    159e:	21 ff       	sbrs	r18, 1
    15a0:	1b c0       	rjmp	.+54     	; 0x15d8 <puts+0x4c>
    15a2:	8c 01       	movw	r16, r24
    15a4:	d0 e0       	ldi	r29, 0x00	; 0
    15a6:	c0 e0       	ldi	r28, 0x00	; 0
    15a8:	f8 01       	movw	r30, r16
    15aa:	81 91       	ld	r24, Z+
    15ac:	8f 01       	movw	r16, r30
    15ae:	60 91 68 04 	lds	r22, 0x0468	; 0x800468 <__iob+0x2>
    15b2:	70 91 69 04 	lds	r23, 0x0469	; 0x800469 <__iob+0x3>
    15b6:	db 01       	movw	r26, r22
    15b8:	18 96       	adiw	r26, 0x08	; 8
    15ba:	ed 91       	ld	r30, X+
    15bc:	fc 91       	ld	r31, X
    15be:	19 97       	sbiw	r26, 0x09	; 9
    15c0:	88 23       	and	r24, r24
    15c2:	31 f0       	breq	.+12     	; 0x15d0 <puts+0x44>
    15c4:	19 95       	eicall
    15c6:	89 2b       	or	r24, r25
    15c8:	79 f3       	breq	.-34     	; 0x15a8 <puts+0x1c>
    15ca:	df ef       	ldi	r29, 0xFF	; 255
    15cc:	cf ef       	ldi	r28, 0xFF	; 255
    15ce:	ec cf       	rjmp	.-40     	; 0x15a8 <puts+0x1c>
    15d0:	8a e0       	ldi	r24, 0x0A	; 10
    15d2:	19 95       	eicall
    15d4:	89 2b       	or	r24, r25
    15d6:	19 f0       	breq	.+6      	; 0x15de <puts+0x52>
    15d8:	8f ef       	ldi	r24, 0xFF	; 255
    15da:	9f ef       	ldi	r25, 0xFF	; 255
    15dc:	02 c0       	rjmp	.+4      	; 0x15e2 <puts+0x56>
    15de:	8d 2f       	mov	r24, r29
    15e0:	9c 2f       	mov	r25, r28
    15e2:	df 91       	pop	r29
    15e4:	cf 91       	pop	r28
    15e6:	1f 91       	pop	r17
    15e8:	0f 91       	pop	r16
    15ea:	08 95       	ret

000015ec <vfprintf>:
    15ec:	2f 92       	push	r2
    15ee:	3f 92       	push	r3
    15f0:	4f 92       	push	r4
    15f2:	5f 92       	push	r5
    15f4:	6f 92       	push	r6
    15f6:	7f 92       	push	r7
    15f8:	8f 92       	push	r8
    15fa:	9f 92       	push	r9
    15fc:	af 92       	push	r10
    15fe:	bf 92       	push	r11
    1600:	cf 92       	push	r12
    1602:	df 92       	push	r13
    1604:	ef 92       	push	r14
    1606:	ff 92       	push	r15
    1608:	0f 93       	push	r16
    160a:	1f 93       	push	r17
    160c:	cf 93       	push	r28
    160e:	df 93       	push	r29
    1610:	cd b7       	in	r28, 0x3d	; 61
    1612:	de b7       	in	r29, 0x3e	; 62
    1614:	2b 97       	sbiw	r28, 0x0b	; 11
    1616:	0f b6       	in	r0, 0x3f	; 63
    1618:	f8 94       	cli
    161a:	de bf       	out	0x3e, r29	; 62
    161c:	0f be       	out	0x3f, r0	; 63
    161e:	cd bf       	out	0x3d, r28	; 61
    1620:	6c 01       	movw	r12, r24
    1622:	7b 01       	movw	r14, r22
    1624:	8a 01       	movw	r16, r20
    1626:	fc 01       	movw	r30, r24
    1628:	17 82       	std	Z+7, r1	; 0x07
    162a:	16 82       	std	Z+6, r1	; 0x06
    162c:	83 81       	ldd	r24, Z+3	; 0x03
    162e:	81 ff       	sbrs	r24, 1
    1630:	bf c1       	rjmp	.+894    	; 0x19b0 <vfprintf+0x3c4>
    1632:	ce 01       	movw	r24, r28
    1634:	01 96       	adiw	r24, 0x01	; 1
    1636:	3c 01       	movw	r6, r24
    1638:	f6 01       	movw	r30, r12
    163a:	93 81       	ldd	r25, Z+3	; 0x03
    163c:	f7 01       	movw	r30, r14
    163e:	93 fd       	sbrc	r25, 3
    1640:	85 91       	lpm	r24, Z+
    1642:	93 ff       	sbrs	r25, 3
    1644:	81 91       	ld	r24, Z+
    1646:	7f 01       	movw	r14, r30
    1648:	88 23       	and	r24, r24
    164a:	09 f4       	brne	.+2      	; 0x164e <vfprintf+0x62>
    164c:	ad c1       	rjmp	.+858    	; 0x19a8 <vfprintf+0x3bc>
    164e:	85 32       	cpi	r24, 0x25	; 37
    1650:	39 f4       	brne	.+14     	; 0x1660 <vfprintf+0x74>
    1652:	93 fd       	sbrc	r25, 3
    1654:	85 91       	lpm	r24, Z+
    1656:	93 ff       	sbrs	r25, 3
    1658:	81 91       	ld	r24, Z+
    165a:	7f 01       	movw	r14, r30
    165c:	85 32       	cpi	r24, 0x25	; 37
    165e:	21 f4       	brne	.+8      	; 0x1668 <vfprintf+0x7c>
    1660:	b6 01       	movw	r22, r12
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	28 d3       	rcall	.+1616   	; 0x1cb6 <fputc>
    1666:	e8 cf       	rjmp	.-48     	; 0x1638 <vfprintf+0x4c>
    1668:	91 2c       	mov	r9, r1
    166a:	21 2c       	mov	r2, r1
    166c:	31 2c       	mov	r3, r1
    166e:	ff e1       	ldi	r31, 0x1F	; 31
    1670:	f3 15       	cp	r31, r3
    1672:	d8 f0       	brcs	.+54     	; 0x16aa <vfprintf+0xbe>
    1674:	8b 32       	cpi	r24, 0x2B	; 43
    1676:	79 f0       	breq	.+30     	; 0x1696 <vfprintf+0xaa>
    1678:	38 f4       	brcc	.+14     	; 0x1688 <vfprintf+0x9c>
    167a:	80 32       	cpi	r24, 0x20	; 32
    167c:	79 f0       	breq	.+30     	; 0x169c <vfprintf+0xb0>
    167e:	83 32       	cpi	r24, 0x23	; 35
    1680:	a1 f4       	brne	.+40     	; 0x16aa <vfprintf+0xbe>
    1682:	23 2d       	mov	r18, r3
    1684:	20 61       	ori	r18, 0x10	; 16
    1686:	1d c0       	rjmp	.+58     	; 0x16c2 <vfprintf+0xd6>
    1688:	8d 32       	cpi	r24, 0x2D	; 45
    168a:	61 f0       	breq	.+24     	; 0x16a4 <vfprintf+0xb8>
    168c:	80 33       	cpi	r24, 0x30	; 48
    168e:	69 f4       	brne	.+26     	; 0x16aa <vfprintf+0xbe>
    1690:	23 2d       	mov	r18, r3
    1692:	21 60       	ori	r18, 0x01	; 1
    1694:	16 c0       	rjmp	.+44     	; 0x16c2 <vfprintf+0xd6>
    1696:	83 2d       	mov	r24, r3
    1698:	82 60       	ori	r24, 0x02	; 2
    169a:	38 2e       	mov	r3, r24
    169c:	e3 2d       	mov	r30, r3
    169e:	e4 60       	ori	r30, 0x04	; 4
    16a0:	3e 2e       	mov	r3, r30
    16a2:	2a c0       	rjmp	.+84     	; 0x16f8 <vfprintf+0x10c>
    16a4:	f3 2d       	mov	r31, r3
    16a6:	f8 60       	ori	r31, 0x08	; 8
    16a8:	1d c0       	rjmp	.+58     	; 0x16e4 <vfprintf+0xf8>
    16aa:	37 fc       	sbrc	r3, 7
    16ac:	2d c0       	rjmp	.+90     	; 0x1708 <vfprintf+0x11c>
    16ae:	20 ed       	ldi	r18, 0xD0	; 208
    16b0:	28 0f       	add	r18, r24
    16b2:	2a 30       	cpi	r18, 0x0A	; 10
    16b4:	40 f0       	brcs	.+16     	; 0x16c6 <vfprintf+0xda>
    16b6:	8e 32       	cpi	r24, 0x2E	; 46
    16b8:	b9 f4       	brne	.+46     	; 0x16e8 <vfprintf+0xfc>
    16ba:	36 fc       	sbrc	r3, 6
    16bc:	75 c1       	rjmp	.+746    	; 0x19a8 <vfprintf+0x3bc>
    16be:	23 2d       	mov	r18, r3
    16c0:	20 64       	ori	r18, 0x40	; 64
    16c2:	32 2e       	mov	r3, r18
    16c4:	19 c0       	rjmp	.+50     	; 0x16f8 <vfprintf+0x10c>
    16c6:	36 fe       	sbrs	r3, 6
    16c8:	06 c0       	rjmp	.+12     	; 0x16d6 <vfprintf+0xea>
    16ca:	8a e0       	ldi	r24, 0x0A	; 10
    16cc:	98 9e       	mul	r9, r24
    16ce:	20 0d       	add	r18, r0
    16d0:	11 24       	eor	r1, r1
    16d2:	92 2e       	mov	r9, r18
    16d4:	11 c0       	rjmp	.+34     	; 0x16f8 <vfprintf+0x10c>
    16d6:	ea e0       	ldi	r30, 0x0A	; 10
    16d8:	2e 9e       	mul	r2, r30
    16da:	20 0d       	add	r18, r0
    16dc:	11 24       	eor	r1, r1
    16de:	22 2e       	mov	r2, r18
    16e0:	f3 2d       	mov	r31, r3
    16e2:	f0 62       	ori	r31, 0x20	; 32
    16e4:	3f 2e       	mov	r3, r31
    16e6:	08 c0       	rjmp	.+16     	; 0x16f8 <vfprintf+0x10c>
    16e8:	8c 36       	cpi	r24, 0x6C	; 108
    16ea:	21 f4       	brne	.+8      	; 0x16f4 <vfprintf+0x108>
    16ec:	83 2d       	mov	r24, r3
    16ee:	80 68       	ori	r24, 0x80	; 128
    16f0:	38 2e       	mov	r3, r24
    16f2:	02 c0       	rjmp	.+4      	; 0x16f8 <vfprintf+0x10c>
    16f4:	88 36       	cpi	r24, 0x68	; 104
    16f6:	41 f4       	brne	.+16     	; 0x1708 <vfprintf+0x11c>
    16f8:	f7 01       	movw	r30, r14
    16fa:	93 fd       	sbrc	r25, 3
    16fc:	85 91       	lpm	r24, Z+
    16fe:	93 ff       	sbrs	r25, 3
    1700:	81 91       	ld	r24, Z+
    1702:	7f 01       	movw	r14, r30
    1704:	81 11       	cpse	r24, r1
    1706:	b3 cf       	rjmp	.-154    	; 0x166e <vfprintf+0x82>
    1708:	98 2f       	mov	r25, r24
    170a:	9f 7d       	andi	r25, 0xDF	; 223
    170c:	95 54       	subi	r25, 0x45	; 69
    170e:	93 30       	cpi	r25, 0x03	; 3
    1710:	28 f4       	brcc	.+10     	; 0x171c <vfprintf+0x130>
    1712:	0c 5f       	subi	r16, 0xFC	; 252
    1714:	1f 4f       	sbci	r17, 0xFF	; 255
    1716:	9f e3       	ldi	r25, 0x3F	; 63
    1718:	99 83       	std	Y+1, r25	; 0x01
    171a:	0d c0       	rjmp	.+26     	; 0x1736 <vfprintf+0x14a>
    171c:	83 36       	cpi	r24, 0x63	; 99
    171e:	31 f0       	breq	.+12     	; 0x172c <vfprintf+0x140>
    1720:	83 37       	cpi	r24, 0x73	; 115
    1722:	71 f0       	breq	.+28     	; 0x1740 <vfprintf+0x154>
    1724:	83 35       	cpi	r24, 0x53	; 83
    1726:	09 f0       	breq	.+2      	; 0x172a <vfprintf+0x13e>
    1728:	55 c0       	rjmp	.+170    	; 0x17d4 <vfprintf+0x1e8>
    172a:	20 c0       	rjmp	.+64     	; 0x176c <vfprintf+0x180>
    172c:	f8 01       	movw	r30, r16
    172e:	80 81       	ld	r24, Z
    1730:	89 83       	std	Y+1, r24	; 0x01
    1732:	0e 5f       	subi	r16, 0xFE	; 254
    1734:	1f 4f       	sbci	r17, 0xFF	; 255
    1736:	88 24       	eor	r8, r8
    1738:	83 94       	inc	r8
    173a:	91 2c       	mov	r9, r1
    173c:	53 01       	movw	r10, r6
    173e:	12 c0       	rjmp	.+36     	; 0x1764 <vfprintf+0x178>
    1740:	28 01       	movw	r4, r16
    1742:	f2 e0       	ldi	r31, 0x02	; 2
    1744:	4f 0e       	add	r4, r31
    1746:	51 1c       	adc	r5, r1
    1748:	f8 01       	movw	r30, r16
    174a:	a0 80       	ld	r10, Z
    174c:	b1 80       	ldd	r11, Z+1	; 0x01
    174e:	36 fe       	sbrs	r3, 6
    1750:	03 c0       	rjmp	.+6      	; 0x1758 <vfprintf+0x16c>
    1752:	69 2d       	mov	r22, r9
    1754:	70 e0       	ldi	r23, 0x00	; 0
    1756:	02 c0       	rjmp	.+4      	; 0x175c <vfprintf+0x170>
    1758:	6f ef       	ldi	r22, 0xFF	; 255
    175a:	7f ef       	ldi	r23, 0xFF	; 255
    175c:	c5 01       	movw	r24, r10
    175e:	90 d2       	rcall	.+1312   	; 0x1c80 <strnlen>
    1760:	4c 01       	movw	r8, r24
    1762:	82 01       	movw	r16, r4
    1764:	f3 2d       	mov	r31, r3
    1766:	ff 77       	andi	r31, 0x7F	; 127
    1768:	3f 2e       	mov	r3, r31
    176a:	15 c0       	rjmp	.+42     	; 0x1796 <vfprintf+0x1aa>
    176c:	28 01       	movw	r4, r16
    176e:	22 e0       	ldi	r18, 0x02	; 2
    1770:	42 0e       	add	r4, r18
    1772:	51 1c       	adc	r5, r1
    1774:	f8 01       	movw	r30, r16
    1776:	a0 80       	ld	r10, Z
    1778:	b1 80       	ldd	r11, Z+1	; 0x01
    177a:	36 fe       	sbrs	r3, 6
    177c:	03 c0       	rjmp	.+6      	; 0x1784 <vfprintf+0x198>
    177e:	69 2d       	mov	r22, r9
    1780:	70 e0       	ldi	r23, 0x00	; 0
    1782:	02 c0       	rjmp	.+4      	; 0x1788 <vfprintf+0x19c>
    1784:	6f ef       	ldi	r22, 0xFF	; 255
    1786:	7f ef       	ldi	r23, 0xFF	; 255
    1788:	c5 01       	movw	r24, r10
    178a:	68 d2       	rcall	.+1232   	; 0x1c5c <strnlen_P>
    178c:	4c 01       	movw	r8, r24
    178e:	f3 2d       	mov	r31, r3
    1790:	f0 68       	ori	r31, 0x80	; 128
    1792:	3f 2e       	mov	r3, r31
    1794:	82 01       	movw	r16, r4
    1796:	33 fc       	sbrc	r3, 3
    1798:	19 c0       	rjmp	.+50     	; 0x17cc <vfprintf+0x1e0>
    179a:	82 2d       	mov	r24, r2
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	88 16       	cp	r8, r24
    17a0:	99 06       	cpc	r9, r25
    17a2:	a0 f4       	brcc	.+40     	; 0x17cc <vfprintf+0x1e0>
    17a4:	b6 01       	movw	r22, r12
    17a6:	80 e2       	ldi	r24, 0x20	; 32
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	85 d2       	rcall	.+1290   	; 0x1cb6 <fputc>
    17ac:	2a 94       	dec	r2
    17ae:	f5 cf       	rjmp	.-22     	; 0x179a <vfprintf+0x1ae>
    17b0:	f5 01       	movw	r30, r10
    17b2:	37 fc       	sbrc	r3, 7
    17b4:	85 91       	lpm	r24, Z+
    17b6:	37 fe       	sbrs	r3, 7
    17b8:	81 91       	ld	r24, Z+
    17ba:	5f 01       	movw	r10, r30
    17bc:	b6 01       	movw	r22, r12
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	7a d2       	rcall	.+1268   	; 0x1cb6 <fputc>
    17c2:	21 10       	cpse	r2, r1
    17c4:	2a 94       	dec	r2
    17c6:	21 e0       	ldi	r18, 0x01	; 1
    17c8:	82 1a       	sub	r8, r18
    17ca:	91 08       	sbc	r9, r1
    17cc:	81 14       	cp	r8, r1
    17ce:	91 04       	cpc	r9, r1
    17d0:	79 f7       	brne	.-34     	; 0x17b0 <vfprintf+0x1c4>
    17d2:	e1 c0       	rjmp	.+450    	; 0x1996 <vfprintf+0x3aa>
    17d4:	84 36       	cpi	r24, 0x64	; 100
    17d6:	11 f0       	breq	.+4      	; 0x17dc <vfprintf+0x1f0>
    17d8:	89 36       	cpi	r24, 0x69	; 105
    17da:	39 f5       	brne	.+78     	; 0x182a <vfprintf+0x23e>
    17dc:	f8 01       	movw	r30, r16
    17de:	37 fe       	sbrs	r3, 7
    17e0:	07 c0       	rjmp	.+14     	; 0x17f0 <vfprintf+0x204>
    17e2:	60 81       	ld	r22, Z
    17e4:	71 81       	ldd	r23, Z+1	; 0x01
    17e6:	82 81       	ldd	r24, Z+2	; 0x02
    17e8:	93 81       	ldd	r25, Z+3	; 0x03
    17ea:	0c 5f       	subi	r16, 0xFC	; 252
    17ec:	1f 4f       	sbci	r17, 0xFF	; 255
    17ee:	08 c0       	rjmp	.+16     	; 0x1800 <vfprintf+0x214>
    17f0:	60 81       	ld	r22, Z
    17f2:	71 81       	ldd	r23, Z+1	; 0x01
    17f4:	07 2e       	mov	r0, r23
    17f6:	00 0c       	add	r0, r0
    17f8:	88 0b       	sbc	r24, r24
    17fa:	99 0b       	sbc	r25, r25
    17fc:	0e 5f       	subi	r16, 0xFE	; 254
    17fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1800:	f3 2d       	mov	r31, r3
    1802:	ff 76       	andi	r31, 0x6F	; 111
    1804:	3f 2e       	mov	r3, r31
    1806:	97 ff       	sbrs	r25, 7
    1808:	09 c0       	rjmp	.+18     	; 0x181c <vfprintf+0x230>
    180a:	90 95       	com	r25
    180c:	80 95       	com	r24
    180e:	70 95       	com	r23
    1810:	61 95       	neg	r22
    1812:	7f 4f       	sbci	r23, 0xFF	; 255
    1814:	8f 4f       	sbci	r24, 0xFF	; 255
    1816:	9f 4f       	sbci	r25, 0xFF	; 255
    1818:	f0 68       	ori	r31, 0x80	; 128
    181a:	3f 2e       	mov	r3, r31
    181c:	2a e0       	ldi	r18, 0x0A	; 10
    181e:	30 e0       	ldi	r19, 0x00	; 0
    1820:	a3 01       	movw	r20, r6
    1822:	85 d2       	rcall	.+1290   	; 0x1d2e <__ultoa_invert>
    1824:	88 2e       	mov	r8, r24
    1826:	86 18       	sub	r8, r6
    1828:	44 c0       	rjmp	.+136    	; 0x18b2 <vfprintf+0x2c6>
    182a:	85 37       	cpi	r24, 0x75	; 117
    182c:	31 f4       	brne	.+12     	; 0x183a <vfprintf+0x24e>
    182e:	23 2d       	mov	r18, r3
    1830:	2f 7e       	andi	r18, 0xEF	; 239
    1832:	b2 2e       	mov	r11, r18
    1834:	2a e0       	ldi	r18, 0x0A	; 10
    1836:	30 e0       	ldi	r19, 0x00	; 0
    1838:	25 c0       	rjmp	.+74     	; 0x1884 <vfprintf+0x298>
    183a:	93 2d       	mov	r25, r3
    183c:	99 7f       	andi	r25, 0xF9	; 249
    183e:	b9 2e       	mov	r11, r25
    1840:	8f 36       	cpi	r24, 0x6F	; 111
    1842:	c1 f0       	breq	.+48     	; 0x1874 <vfprintf+0x288>
    1844:	18 f4       	brcc	.+6      	; 0x184c <vfprintf+0x260>
    1846:	88 35       	cpi	r24, 0x58	; 88
    1848:	79 f0       	breq	.+30     	; 0x1868 <vfprintf+0x27c>
    184a:	ae c0       	rjmp	.+348    	; 0x19a8 <vfprintf+0x3bc>
    184c:	80 37       	cpi	r24, 0x70	; 112
    184e:	19 f0       	breq	.+6      	; 0x1856 <vfprintf+0x26a>
    1850:	88 37       	cpi	r24, 0x78	; 120
    1852:	21 f0       	breq	.+8      	; 0x185c <vfprintf+0x270>
    1854:	a9 c0       	rjmp	.+338    	; 0x19a8 <vfprintf+0x3bc>
    1856:	e9 2f       	mov	r30, r25
    1858:	e0 61       	ori	r30, 0x10	; 16
    185a:	be 2e       	mov	r11, r30
    185c:	b4 fe       	sbrs	r11, 4
    185e:	0d c0       	rjmp	.+26     	; 0x187a <vfprintf+0x28e>
    1860:	fb 2d       	mov	r31, r11
    1862:	f4 60       	ori	r31, 0x04	; 4
    1864:	bf 2e       	mov	r11, r31
    1866:	09 c0       	rjmp	.+18     	; 0x187a <vfprintf+0x28e>
    1868:	34 fe       	sbrs	r3, 4
    186a:	0a c0       	rjmp	.+20     	; 0x1880 <vfprintf+0x294>
    186c:	29 2f       	mov	r18, r25
    186e:	26 60       	ori	r18, 0x06	; 6
    1870:	b2 2e       	mov	r11, r18
    1872:	06 c0       	rjmp	.+12     	; 0x1880 <vfprintf+0x294>
    1874:	28 e0       	ldi	r18, 0x08	; 8
    1876:	30 e0       	ldi	r19, 0x00	; 0
    1878:	05 c0       	rjmp	.+10     	; 0x1884 <vfprintf+0x298>
    187a:	20 e1       	ldi	r18, 0x10	; 16
    187c:	30 e0       	ldi	r19, 0x00	; 0
    187e:	02 c0       	rjmp	.+4      	; 0x1884 <vfprintf+0x298>
    1880:	20 e1       	ldi	r18, 0x10	; 16
    1882:	32 e0       	ldi	r19, 0x02	; 2
    1884:	f8 01       	movw	r30, r16
    1886:	b7 fe       	sbrs	r11, 7
    1888:	07 c0       	rjmp	.+14     	; 0x1898 <vfprintf+0x2ac>
    188a:	60 81       	ld	r22, Z
    188c:	71 81       	ldd	r23, Z+1	; 0x01
    188e:	82 81       	ldd	r24, Z+2	; 0x02
    1890:	93 81       	ldd	r25, Z+3	; 0x03
    1892:	0c 5f       	subi	r16, 0xFC	; 252
    1894:	1f 4f       	sbci	r17, 0xFF	; 255
    1896:	06 c0       	rjmp	.+12     	; 0x18a4 <vfprintf+0x2b8>
    1898:	60 81       	ld	r22, Z
    189a:	71 81       	ldd	r23, Z+1	; 0x01
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	0e 5f       	subi	r16, 0xFE	; 254
    18a2:	1f 4f       	sbci	r17, 0xFF	; 255
    18a4:	a3 01       	movw	r20, r6
    18a6:	43 d2       	rcall	.+1158   	; 0x1d2e <__ultoa_invert>
    18a8:	88 2e       	mov	r8, r24
    18aa:	86 18       	sub	r8, r6
    18ac:	fb 2d       	mov	r31, r11
    18ae:	ff 77       	andi	r31, 0x7F	; 127
    18b0:	3f 2e       	mov	r3, r31
    18b2:	36 fe       	sbrs	r3, 6
    18b4:	0d c0       	rjmp	.+26     	; 0x18d0 <vfprintf+0x2e4>
    18b6:	23 2d       	mov	r18, r3
    18b8:	2e 7f       	andi	r18, 0xFE	; 254
    18ba:	a2 2e       	mov	r10, r18
    18bc:	89 14       	cp	r8, r9
    18be:	58 f4       	brcc	.+22     	; 0x18d6 <vfprintf+0x2ea>
    18c0:	34 fe       	sbrs	r3, 4
    18c2:	0b c0       	rjmp	.+22     	; 0x18da <vfprintf+0x2ee>
    18c4:	32 fc       	sbrc	r3, 2
    18c6:	09 c0       	rjmp	.+18     	; 0x18da <vfprintf+0x2ee>
    18c8:	83 2d       	mov	r24, r3
    18ca:	8e 7e       	andi	r24, 0xEE	; 238
    18cc:	a8 2e       	mov	r10, r24
    18ce:	05 c0       	rjmp	.+10     	; 0x18da <vfprintf+0x2ee>
    18d0:	b8 2c       	mov	r11, r8
    18d2:	a3 2c       	mov	r10, r3
    18d4:	03 c0       	rjmp	.+6      	; 0x18dc <vfprintf+0x2f0>
    18d6:	b8 2c       	mov	r11, r8
    18d8:	01 c0       	rjmp	.+2      	; 0x18dc <vfprintf+0x2f0>
    18da:	b9 2c       	mov	r11, r9
    18dc:	a4 fe       	sbrs	r10, 4
    18de:	0f c0       	rjmp	.+30     	; 0x18fe <vfprintf+0x312>
    18e0:	fe 01       	movw	r30, r28
    18e2:	e8 0d       	add	r30, r8
    18e4:	f1 1d       	adc	r31, r1
    18e6:	80 81       	ld	r24, Z
    18e8:	80 33       	cpi	r24, 0x30	; 48
    18ea:	21 f4       	brne	.+8      	; 0x18f4 <vfprintf+0x308>
    18ec:	9a 2d       	mov	r25, r10
    18ee:	99 7e       	andi	r25, 0xE9	; 233
    18f0:	a9 2e       	mov	r10, r25
    18f2:	09 c0       	rjmp	.+18     	; 0x1906 <vfprintf+0x31a>
    18f4:	a2 fe       	sbrs	r10, 2
    18f6:	06 c0       	rjmp	.+12     	; 0x1904 <vfprintf+0x318>
    18f8:	b3 94       	inc	r11
    18fa:	b3 94       	inc	r11
    18fc:	04 c0       	rjmp	.+8      	; 0x1906 <vfprintf+0x31a>
    18fe:	8a 2d       	mov	r24, r10
    1900:	86 78       	andi	r24, 0x86	; 134
    1902:	09 f0       	breq	.+2      	; 0x1906 <vfprintf+0x31a>
    1904:	b3 94       	inc	r11
    1906:	a3 fc       	sbrc	r10, 3
    1908:	10 c0       	rjmp	.+32     	; 0x192a <vfprintf+0x33e>
    190a:	a0 fe       	sbrs	r10, 0
    190c:	06 c0       	rjmp	.+12     	; 0x191a <vfprintf+0x32e>
    190e:	b2 14       	cp	r11, r2
    1910:	80 f4       	brcc	.+32     	; 0x1932 <vfprintf+0x346>
    1912:	28 0c       	add	r2, r8
    1914:	92 2c       	mov	r9, r2
    1916:	9b 18       	sub	r9, r11
    1918:	0d c0       	rjmp	.+26     	; 0x1934 <vfprintf+0x348>
    191a:	b2 14       	cp	r11, r2
    191c:	58 f4       	brcc	.+22     	; 0x1934 <vfprintf+0x348>
    191e:	b6 01       	movw	r22, r12
    1920:	80 e2       	ldi	r24, 0x20	; 32
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	c8 d1       	rcall	.+912    	; 0x1cb6 <fputc>
    1926:	b3 94       	inc	r11
    1928:	f8 cf       	rjmp	.-16     	; 0x191a <vfprintf+0x32e>
    192a:	b2 14       	cp	r11, r2
    192c:	18 f4       	brcc	.+6      	; 0x1934 <vfprintf+0x348>
    192e:	2b 18       	sub	r2, r11
    1930:	02 c0       	rjmp	.+4      	; 0x1936 <vfprintf+0x34a>
    1932:	98 2c       	mov	r9, r8
    1934:	21 2c       	mov	r2, r1
    1936:	a4 fe       	sbrs	r10, 4
    1938:	0f c0       	rjmp	.+30     	; 0x1958 <vfprintf+0x36c>
    193a:	b6 01       	movw	r22, r12
    193c:	80 e3       	ldi	r24, 0x30	; 48
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	ba d1       	rcall	.+884    	; 0x1cb6 <fputc>
    1942:	a2 fe       	sbrs	r10, 2
    1944:	16 c0       	rjmp	.+44     	; 0x1972 <vfprintf+0x386>
    1946:	a1 fc       	sbrc	r10, 1
    1948:	03 c0       	rjmp	.+6      	; 0x1950 <vfprintf+0x364>
    194a:	88 e7       	ldi	r24, 0x78	; 120
    194c:	90 e0       	ldi	r25, 0x00	; 0
    194e:	02 c0       	rjmp	.+4      	; 0x1954 <vfprintf+0x368>
    1950:	88 e5       	ldi	r24, 0x58	; 88
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	b6 01       	movw	r22, r12
    1956:	0c c0       	rjmp	.+24     	; 0x1970 <vfprintf+0x384>
    1958:	8a 2d       	mov	r24, r10
    195a:	86 78       	andi	r24, 0x86	; 134
    195c:	51 f0       	breq	.+20     	; 0x1972 <vfprintf+0x386>
    195e:	a1 fe       	sbrs	r10, 1
    1960:	02 c0       	rjmp	.+4      	; 0x1966 <vfprintf+0x37a>
    1962:	8b e2       	ldi	r24, 0x2B	; 43
    1964:	01 c0       	rjmp	.+2      	; 0x1968 <vfprintf+0x37c>
    1966:	80 e2       	ldi	r24, 0x20	; 32
    1968:	a7 fc       	sbrc	r10, 7
    196a:	8d e2       	ldi	r24, 0x2D	; 45
    196c:	b6 01       	movw	r22, r12
    196e:	90 e0       	ldi	r25, 0x00	; 0
    1970:	a2 d1       	rcall	.+836    	; 0x1cb6 <fputc>
    1972:	89 14       	cp	r8, r9
    1974:	30 f4       	brcc	.+12     	; 0x1982 <vfprintf+0x396>
    1976:	b6 01       	movw	r22, r12
    1978:	80 e3       	ldi	r24, 0x30	; 48
    197a:	90 e0       	ldi	r25, 0x00	; 0
    197c:	9c d1       	rcall	.+824    	; 0x1cb6 <fputc>
    197e:	9a 94       	dec	r9
    1980:	f8 cf       	rjmp	.-16     	; 0x1972 <vfprintf+0x386>
    1982:	8a 94       	dec	r8
    1984:	f3 01       	movw	r30, r6
    1986:	e8 0d       	add	r30, r8
    1988:	f1 1d       	adc	r31, r1
    198a:	80 81       	ld	r24, Z
    198c:	b6 01       	movw	r22, r12
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	92 d1       	rcall	.+804    	; 0x1cb6 <fputc>
    1992:	81 10       	cpse	r8, r1
    1994:	f6 cf       	rjmp	.-20     	; 0x1982 <vfprintf+0x396>
    1996:	22 20       	and	r2, r2
    1998:	09 f4       	brne	.+2      	; 0x199c <vfprintf+0x3b0>
    199a:	4e ce       	rjmp	.-868    	; 0x1638 <vfprintf+0x4c>
    199c:	b6 01       	movw	r22, r12
    199e:	80 e2       	ldi	r24, 0x20	; 32
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	89 d1       	rcall	.+786    	; 0x1cb6 <fputc>
    19a4:	2a 94       	dec	r2
    19a6:	f7 cf       	rjmp	.-18     	; 0x1996 <vfprintf+0x3aa>
    19a8:	f6 01       	movw	r30, r12
    19aa:	86 81       	ldd	r24, Z+6	; 0x06
    19ac:	97 81       	ldd	r25, Z+7	; 0x07
    19ae:	02 c0       	rjmp	.+4      	; 0x19b4 <vfprintf+0x3c8>
    19b0:	8f ef       	ldi	r24, 0xFF	; 255
    19b2:	9f ef       	ldi	r25, 0xFF	; 255
    19b4:	2b 96       	adiw	r28, 0x0b	; 11
    19b6:	0f b6       	in	r0, 0x3f	; 63
    19b8:	f8 94       	cli
    19ba:	de bf       	out	0x3e, r29	; 62
    19bc:	0f be       	out	0x3f, r0	; 63
    19be:	cd bf       	out	0x3d, r28	; 61
    19c0:	df 91       	pop	r29
    19c2:	cf 91       	pop	r28
    19c4:	1f 91       	pop	r17
    19c6:	0f 91       	pop	r16
    19c8:	ff 90       	pop	r15
    19ca:	ef 90       	pop	r14
    19cc:	df 90       	pop	r13
    19ce:	cf 90       	pop	r12
    19d0:	bf 90       	pop	r11
    19d2:	af 90       	pop	r10
    19d4:	9f 90       	pop	r9
    19d6:	8f 90       	pop	r8
    19d8:	7f 90       	pop	r7
    19da:	6f 90       	pop	r6
    19dc:	5f 90       	pop	r5
    19de:	4f 90       	pop	r4
    19e0:	3f 90       	pop	r3
    19e2:	2f 90       	pop	r2
    19e4:	08 95       	ret

000019e6 <calloc>:
    19e6:	0f 93       	push	r16
    19e8:	1f 93       	push	r17
    19ea:	cf 93       	push	r28
    19ec:	df 93       	push	r29
    19ee:	86 9f       	mul	r24, r22
    19f0:	80 01       	movw	r16, r0
    19f2:	87 9f       	mul	r24, r23
    19f4:	10 0d       	add	r17, r0
    19f6:	96 9f       	mul	r25, r22
    19f8:	10 0d       	add	r17, r0
    19fa:	11 24       	eor	r1, r1
    19fc:	c8 01       	movw	r24, r16
    19fe:	0d d0       	rcall	.+26     	; 0x1a1a <malloc>
    1a00:	ec 01       	movw	r28, r24
    1a02:	00 97       	sbiw	r24, 0x00	; 0
    1a04:	21 f0       	breq	.+8      	; 0x1a0e <calloc+0x28>
    1a06:	a8 01       	movw	r20, r16
    1a08:	60 e0       	ldi	r22, 0x00	; 0
    1a0a:	70 e0       	ldi	r23, 0x00	; 0
    1a0c:	32 d1       	rcall	.+612    	; 0x1c72 <memset>
    1a0e:	ce 01       	movw	r24, r28
    1a10:	df 91       	pop	r29
    1a12:	cf 91       	pop	r28
    1a14:	1f 91       	pop	r17
    1a16:	0f 91       	pop	r16
    1a18:	08 95       	ret

00001a1a <malloc>:
    1a1a:	0f 93       	push	r16
    1a1c:	1f 93       	push	r17
    1a1e:	cf 93       	push	r28
    1a20:	df 93       	push	r29
    1a22:	82 30       	cpi	r24, 0x02	; 2
    1a24:	91 05       	cpc	r25, r1
    1a26:	10 f4       	brcc	.+4      	; 0x1a2c <malloc+0x12>
    1a28:	82 e0       	ldi	r24, 0x02	; 2
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	e0 91 6e 04 	lds	r30, 0x046E	; 0x80046e <__flp>
    1a30:	f0 91 6f 04 	lds	r31, 0x046F	; 0x80046f <__flp+0x1>
    1a34:	20 e0       	ldi	r18, 0x00	; 0
    1a36:	30 e0       	ldi	r19, 0x00	; 0
    1a38:	a0 e0       	ldi	r26, 0x00	; 0
    1a3a:	b0 e0       	ldi	r27, 0x00	; 0
    1a3c:	30 97       	sbiw	r30, 0x00	; 0
    1a3e:	19 f1       	breq	.+70     	; 0x1a86 <malloc+0x6c>
    1a40:	40 81       	ld	r20, Z
    1a42:	51 81       	ldd	r21, Z+1	; 0x01
    1a44:	02 81       	ldd	r16, Z+2	; 0x02
    1a46:	13 81       	ldd	r17, Z+3	; 0x03
    1a48:	48 17       	cp	r20, r24
    1a4a:	59 07       	cpc	r21, r25
    1a4c:	c8 f0       	brcs	.+50     	; 0x1a80 <malloc+0x66>
    1a4e:	84 17       	cp	r24, r20
    1a50:	95 07       	cpc	r25, r21
    1a52:	69 f4       	brne	.+26     	; 0x1a6e <malloc+0x54>
    1a54:	10 97       	sbiw	r26, 0x00	; 0
    1a56:	31 f0       	breq	.+12     	; 0x1a64 <malloc+0x4a>
    1a58:	12 96       	adiw	r26, 0x02	; 2
    1a5a:	0c 93       	st	X, r16
    1a5c:	12 97       	sbiw	r26, 0x02	; 2
    1a5e:	13 96       	adiw	r26, 0x03	; 3
    1a60:	1c 93       	st	X, r17
    1a62:	27 c0       	rjmp	.+78     	; 0x1ab2 <malloc+0x98>
    1a64:	00 93 6e 04 	sts	0x046E, r16	; 0x80046e <__flp>
    1a68:	10 93 6f 04 	sts	0x046F, r17	; 0x80046f <__flp+0x1>
    1a6c:	22 c0       	rjmp	.+68     	; 0x1ab2 <malloc+0x98>
    1a6e:	21 15       	cp	r18, r1
    1a70:	31 05       	cpc	r19, r1
    1a72:	19 f0       	breq	.+6      	; 0x1a7a <malloc+0x60>
    1a74:	42 17       	cp	r20, r18
    1a76:	53 07       	cpc	r21, r19
    1a78:	18 f4       	brcc	.+6      	; 0x1a80 <malloc+0x66>
    1a7a:	9a 01       	movw	r18, r20
    1a7c:	bd 01       	movw	r22, r26
    1a7e:	ef 01       	movw	r28, r30
    1a80:	df 01       	movw	r26, r30
    1a82:	f8 01       	movw	r30, r16
    1a84:	db cf       	rjmp	.-74     	; 0x1a3c <malloc+0x22>
    1a86:	21 15       	cp	r18, r1
    1a88:	31 05       	cpc	r19, r1
    1a8a:	f9 f0       	breq	.+62     	; 0x1aca <malloc+0xb0>
    1a8c:	28 1b       	sub	r18, r24
    1a8e:	39 0b       	sbc	r19, r25
    1a90:	24 30       	cpi	r18, 0x04	; 4
    1a92:	31 05       	cpc	r19, r1
    1a94:	80 f4       	brcc	.+32     	; 0x1ab6 <malloc+0x9c>
    1a96:	8a 81       	ldd	r24, Y+2	; 0x02
    1a98:	9b 81       	ldd	r25, Y+3	; 0x03
    1a9a:	61 15       	cp	r22, r1
    1a9c:	71 05       	cpc	r23, r1
    1a9e:	21 f0       	breq	.+8      	; 0x1aa8 <malloc+0x8e>
    1aa0:	fb 01       	movw	r30, r22
    1aa2:	93 83       	std	Z+3, r25	; 0x03
    1aa4:	82 83       	std	Z+2, r24	; 0x02
    1aa6:	04 c0       	rjmp	.+8      	; 0x1ab0 <malloc+0x96>
    1aa8:	90 93 6f 04 	sts	0x046F, r25	; 0x80046f <__flp+0x1>
    1aac:	80 93 6e 04 	sts	0x046E, r24	; 0x80046e <__flp>
    1ab0:	fe 01       	movw	r30, r28
    1ab2:	32 96       	adiw	r30, 0x02	; 2
    1ab4:	44 c0       	rjmp	.+136    	; 0x1b3e <malloc+0x124>
    1ab6:	fe 01       	movw	r30, r28
    1ab8:	e2 0f       	add	r30, r18
    1aba:	f3 1f       	adc	r31, r19
    1abc:	81 93       	st	Z+, r24
    1abe:	91 93       	st	Z+, r25
    1ac0:	22 50       	subi	r18, 0x02	; 2
    1ac2:	31 09       	sbc	r19, r1
    1ac4:	39 83       	std	Y+1, r19	; 0x01
    1ac6:	28 83       	st	Y, r18
    1ac8:	3a c0       	rjmp	.+116    	; 0x1b3e <malloc+0x124>
    1aca:	20 91 6c 04 	lds	r18, 0x046C	; 0x80046c <__brkval>
    1ace:	30 91 6d 04 	lds	r19, 0x046D	; 0x80046d <__brkval+0x1>
    1ad2:	23 2b       	or	r18, r19
    1ad4:	41 f4       	brne	.+16     	; 0x1ae6 <malloc+0xcc>
    1ad6:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1ada:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    1ade:	30 93 6d 04 	sts	0x046D, r19	; 0x80046d <__brkval+0x1>
    1ae2:	20 93 6c 04 	sts	0x046C, r18	; 0x80046c <__brkval>
    1ae6:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1aea:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    1aee:	21 15       	cp	r18, r1
    1af0:	31 05       	cpc	r19, r1
    1af2:	41 f4       	brne	.+16     	; 0x1b04 <malloc+0xea>
    1af4:	2d b7       	in	r18, 0x3d	; 61
    1af6:	3e b7       	in	r19, 0x3e	; 62
    1af8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1afc:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    1b00:	24 1b       	sub	r18, r20
    1b02:	35 0b       	sbc	r19, r21
    1b04:	e0 91 6c 04 	lds	r30, 0x046C	; 0x80046c <__brkval>
    1b08:	f0 91 6d 04 	lds	r31, 0x046D	; 0x80046d <__brkval+0x1>
    1b0c:	e2 17       	cp	r30, r18
    1b0e:	f3 07       	cpc	r31, r19
    1b10:	a0 f4       	brcc	.+40     	; 0x1b3a <malloc+0x120>
    1b12:	2e 1b       	sub	r18, r30
    1b14:	3f 0b       	sbc	r19, r31
    1b16:	28 17       	cp	r18, r24
    1b18:	39 07       	cpc	r19, r25
    1b1a:	78 f0       	brcs	.+30     	; 0x1b3a <malloc+0x120>
    1b1c:	ac 01       	movw	r20, r24
    1b1e:	4e 5f       	subi	r20, 0xFE	; 254
    1b20:	5f 4f       	sbci	r21, 0xFF	; 255
    1b22:	24 17       	cp	r18, r20
    1b24:	35 07       	cpc	r19, r21
    1b26:	48 f0       	brcs	.+18     	; 0x1b3a <malloc+0x120>
    1b28:	4e 0f       	add	r20, r30
    1b2a:	5f 1f       	adc	r21, r31
    1b2c:	50 93 6d 04 	sts	0x046D, r21	; 0x80046d <__brkval+0x1>
    1b30:	40 93 6c 04 	sts	0x046C, r20	; 0x80046c <__brkval>
    1b34:	81 93       	st	Z+, r24
    1b36:	91 93       	st	Z+, r25
    1b38:	02 c0       	rjmp	.+4      	; 0x1b3e <malloc+0x124>
    1b3a:	e0 e0       	ldi	r30, 0x00	; 0
    1b3c:	f0 e0       	ldi	r31, 0x00	; 0
    1b3e:	cf 01       	movw	r24, r30
    1b40:	df 91       	pop	r29
    1b42:	cf 91       	pop	r28
    1b44:	1f 91       	pop	r17
    1b46:	0f 91       	pop	r16
    1b48:	08 95       	ret

00001b4a <free>:
    1b4a:	cf 93       	push	r28
    1b4c:	df 93       	push	r29
    1b4e:	00 97       	sbiw	r24, 0x00	; 0
    1b50:	09 f4       	brne	.+2      	; 0x1b54 <free+0xa>
    1b52:	81 c0       	rjmp	.+258    	; 0x1c56 <free+0x10c>
    1b54:	fc 01       	movw	r30, r24
    1b56:	32 97       	sbiw	r30, 0x02	; 2
    1b58:	13 82       	std	Z+3, r1	; 0x03
    1b5a:	12 82       	std	Z+2, r1	; 0x02
    1b5c:	a0 91 6e 04 	lds	r26, 0x046E	; 0x80046e <__flp>
    1b60:	b0 91 6f 04 	lds	r27, 0x046F	; 0x80046f <__flp+0x1>
    1b64:	10 97       	sbiw	r26, 0x00	; 0
    1b66:	81 f4       	brne	.+32     	; 0x1b88 <free+0x3e>
    1b68:	20 81       	ld	r18, Z
    1b6a:	31 81       	ldd	r19, Z+1	; 0x01
    1b6c:	82 0f       	add	r24, r18
    1b6e:	93 1f       	adc	r25, r19
    1b70:	20 91 6c 04 	lds	r18, 0x046C	; 0x80046c <__brkval>
    1b74:	30 91 6d 04 	lds	r19, 0x046D	; 0x80046d <__brkval+0x1>
    1b78:	28 17       	cp	r18, r24
    1b7a:	39 07       	cpc	r19, r25
    1b7c:	51 f5       	brne	.+84     	; 0x1bd2 <free+0x88>
    1b7e:	f0 93 6d 04 	sts	0x046D, r31	; 0x80046d <__brkval+0x1>
    1b82:	e0 93 6c 04 	sts	0x046C, r30	; 0x80046c <__brkval>
    1b86:	67 c0       	rjmp	.+206    	; 0x1c56 <free+0x10c>
    1b88:	ed 01       	movw	r28, r26
    1b8a:	20 e0       	ldi	r18, 0x00	; 0
    1b8c:	30 e0       	ldi	r19, 0x00	; 0
    1b8e:	ce 17       	cp	r28, r30
    1b90:	df 07       	cpc	r29, r31
    1b92:	40 f4       	brcc	.+16     	; 0x1ba4 <free+0x5a>
    1b94:	4a 81       	ldd	r20, Y+2	; 0x02
    1b96:	5b 81       	ldd	r21, Y+3	; 0x03
    1b98:	9e 01       	movw	r18, r28
    1b9a:	41 15       	cp	r20, r1
    1b9c:	51 05       	cpc	r21, r1
    1b9e:	f1 f0       	breq	.+60     	; 0x1bdc <free+0x92>
    1ba0:	ea 01       	movw	r28, r20
    1ba2:	f5 cf       	rjmp	.-22     	; 0x1b8e <free+0x44>
    1ba4:	d3 83       	std	Z+3, r29	; 0x03
    1ba6:	c2 83       	std	Z+2, r28	; 0x02
    1ba8:	40 81       	ld	r20, Z
    1baa:	51 81       	ldd	r21, Z+1	; 0x01
    1bac:	84 0f       	add	r24, r20
    1bae:	95 1f       	adc	r25, r21
    1bb0:	c8 17       	cp	r28, r24
    1bb2:	d9 07       	cpc	r29, r25
    1bb4:	59 f4       	brne	.+22     	; 0x1bcc <free+0x82>
    1bb6:	88 81       	ld	r24, Y
    1bb8:	99 81       	ldd	r25, Y+1	; 0x01
    1bba:	84 0f       	add	r24, r20
    1bbc:	95 1f       	adc	r25, r21
    1bbe:	02 96       	adiw	r24, 0x02	; 2
    1bc0:	91 83       	std	Z+1, r25	; 0x01
    1bc2:	80 83       	st	Z, r24
    1bc4:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc6:	9b 81       	ldd	r25, Y+3	; 0x03
    1bc8:	93 83       	std	Z+3, r25	; 0x03
    1bca:	82 83       	std	Z+2, r24	; 0x02
    1bcc:	21 15       	cp	r18, r1
    1bce:	31 05       	cpc	r19, r1
    1bd0:	29 f4       	brne	.+10     	; 0x1bdc <free+0x92>
    1bd2:	f0 93 6f 04 	sts	0x046F, r31	; 0x80046f <__flp+0x1>
    1bd6:	e0 93 6e 04 	sts	0x046E, r30	; 0x80046e <__flp>
    1bda:	3d c0       	rjmp	.+122    	; 0x1c56 <free+0x10c>
    1bdc:	e9 01       	movw	r28, r18
    1bde:	fb 83       	std	Y+3, r31	; 0x03
    1be0:	ea 83       	std	Y+2, r30	; 0x02
    1be2:	49 91       	ld	r20, Y+
    1be4:	59 91       	ld	r21, Y+
    1be6:	c4 0f       	add	r28, r20
    1be8:	d5 1f       	adc	r29, r21
    1bea:	ec 17       	cp	r30, r28
    1bec:	fd 07       	cpc	r31, r29
    1bee:	61 f4       	brne	.+24     	; 0x1c08 <free+0xbe>
    1bf0:	80 81       	ld	r24, Z
    1bf2:	91 81       	ldd	r25, Z+1	; 0x01
    1bf4:	84 0f       	add	r24, r20
    1bf6:	95 1f       	adc	r25, r21
    1bf8:	02 96       	adiw	r24, 0x02	; 2
    1bfa:	e9 01       	movw	r28, r18
    1bfc:	99 83       	std	Y+1, r25	; 0x01
    1bfe:	88 83       	st	Y, r24
    1c00:	82 81       	ldd	r24, Z+2	; 0x02
    1c02:	93 81       	ldd	r25, Z+3	; 0x03
    1c04:	9b 83       	std	Y+3, r25	; 0x03
    1c06:	8a 83       	std	Y+2, r24	; 0x02
    1c08:	e0 e0       	ldi	r30, 0x00	; 0
    1c0a:	f0 e0       	ldi	r31, 0x00	; 0
    1c0c:	12 96       	adiw	r26, 0x02	; 2
    1c0e:	8d 91       	ld	r24, X+
    1c10:	9c 91       	ld	r25, X
    1c12:	13 97       	sbiw	r26, 0x03	; 3
    1c14:	00 97       	sbiw	r24, 0x00	; 0
    1c16:	19 f0       	breq	.+6      	; 0x1c1e <free+0xd4>
    1c18:	fd 01       	movw	r30, r26
    1c1a:	dc 01       	movw	r26, r24
    1c1c:	f7 cf       	rjmp	.-18     	; 0x1c0c <free+0xc2>
    1c1e:	8d 91       	ld	r24, X+
    1c20:	9c 91       	ld	r25, X
    1c22:	11 97       	sbiw	r26, 0x01	; 1
    1c24:	9d 01       	movw	r18, r26
    1c26:	2e 5f       	subi	r18, 0xFE	; 254
    1c28:	3f 4f       	sbci	r19, 0xFF	; 255
    1c2a:	82 0f       	add	r24, r18
    1c2c:	93 1f       	adc	r25, r19
    1c2e:	20 91 6c 04 	lds	r18, 0x046C	; 0x80046c <__brkval>
    1c32:	30 91 6d 04 	lds	r19, 0x046D	; 0x80046d <__brkval+0x1>
    1c36:	28 17       	cp	r18, r24
    1c38:	39 07       	cpc	r19, r25
    1c3a:	69 f4       	brne	.+26     	; 0x1c56 <free+0x10c>
    1c3c:	30 97       	sbiw	r30, 0x00	; 0
    1c3e:	29 f4       	brne	.+10     	; 0x1c4a <free+0x100>
    1c40:	10 92 6f 04 	sts	0x046F, r1	; 0x80046f <__flp+0x1>
    1c44:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <__flp>
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <free+0x104>
    1c4a:	13 82       	std	Z+3, r1	; 0x03
    1c4c:	12 82       	std	Z+2, r1	; 0x02
    1c4e:	b0 93 6d 04 	sts	0x046D, r27	; 0x80046d <__brkval+0x1>
    1c52:	a0 93 6c 04 	sts	0x046C, r26	; 0x80046c <__brkval>
    1c56:	df 91       	pop	r29
    1c58:	cf 91       	pop	r28
    1c5a:	08 95       	ret

00001c5c <strnlen_P>:
    1c5c:	fc 01       	movw	r30, r24
    1c5e:	05 90       	lpm	r0, Z+
    1c60:	61 50       	subi	r22, 0x01	; 1
    1c62:	70 40       	sbci	r23, 0x00	; 0
    1c64:	01 10       	cpse	r0, r1
    1c66:	d8 f7       	brcc	.-10     	; 0x1c5e <strnlen_P+0x2>
    1c68:	80 95       	com	r24
    1c6a:	90 95       	com	r25
    1c6c:	8e 0f       	add	r24, r30
    1c6e:	9f 1f       	adc	r25, r31
    1c70:	08 95       	ret

00001c72 <memset>:
    1c72:	dc 01       	movw	r26, r24
    1c74:	01 c0       	rjmp	.+2      	; 0x1c78 <memset+0x6>
    1c76:	6d 93       	st	X+, r22
    1c78:	41 50       	subi	r20, 0x01	; 1
    1c7a:	50 40       	sbci	r21, 0x00	; 0
    1c7c:	e0 f7       	brcc	.-8      	; 0x1c76 <memset+0x4>
    1c7e:	08 95       	ret

00001c80 <strnlen>:
    1c80:	fc 01       	movw	r30, r24
    1c82:	61 50       	subi	r22, 0x01	; 1
    1c84:	70 40       	sbci	r23, 0x00	; 0
    1c86:	01 90       	ld	r0, Z+
    1c88:	01 10       	cpse	r0, r1
    1c8a:	d8 f7       	brcc	.-10     	; 0x1c82 <strnlen+0x2>
    1c8c:	80 95       	com	r24
    1c8e:	90 95       	com	r25
    1c90:	8e 0f       	add	r24, r30
    1c92:	9f 1f       	adc	r25, r31
    1c94:	08 95       	ret

00001c96 <strrev>:
    1c96:	dc 01       	movw	r26, r24
    1c98:	fc 01       	movw	r30, r24
    1c9a:	67 2f       	mov	r22, r23
    1c9c:	71 91       	ld	r23, Z+
    1c9e:	77 23       	and	r23, r23
    1ca0:	e1 f7       	brne	.-8      	; 0x1c9a <strrev+0x4>
    1ca2:	32 97       	sbiw	r30, 0x02	; 2
    1ca4:	04 c0       	rjmp	.+8      	; 0x1cae <strrev+0x18>
    1ca6:	7c 91       	ld	r23, X
    1ca8:	6d 93       	st	X+, r22
    1caa:	70 83       	st	Z, r23
    1cac:	62 91       	ld	r22, -Z
    1cae:	ae 17       	cp	r26, r30
    1cb0:	bf 07       	cpc	r27, r31
    1cb2:	c8 f3       	brcs	.-14     	; 0x1ca6 <strrev+0x10>
    1cb4:	08 95       	ret

00001cb6 <fputc>:
    1cb6:	0f 93       	push	r16
    1cb8:	1f 93       	push	r17
    1cba:	cf 93       	push	r28
    1cbc:	df 93       	push	r29
    1cbe:	fb 01       	movw	r30, r22
    1cc0:	23 81       	ldd	r18, Z+3	; 0x03
    1cc2:	21 fd       	sbrc	r18, 1
    1cc4:	03 c0       	rjmp	.+6      	; 0x1ccc <fputc+0x16>
    1cc6:	8f ef       	ldi	r24, 0xFF	; 255
    1cc8:	9f ef       	ldi	r25, 0xFF	; 255
    1cca:	2c c0       	rjmp	.+88     	; 0x1d24 <fputc+0x6e>
    1ccc:	22 ff       	sbrs	r18, 2
    1cce:	16 c0       	rjmp	.+44     	; 0x1cfc <fputc+0x46>
    1cd0:	46 81       	ldd	r20, Z+6	; 0x06
    1cd2:	57 81       	ldd	r21, Z+7	; 0x07
    1cd4:	24 81       	ldd	r18, Z+4	; 0x04
    1cd6:	35 81       	ldd	r19, Z+5	; 0x05
    1cd8:	42 17       	cp	r20, r18
    1cda:	53 07       	cpc	r21, r19
    1cdc:	44 f4       	brge	.+16     	; 0x1cee <fputc+0x38>
    1cde:	a0 81       	ld	r26, Z
    1ce0:	b1 81       	ldd	r27, Z+1	; 0x01
    1ce2:	9d 01       	movw	r18, r26
    1ce4:	2f 5f       	subi	r18, 0xFF	; 255
    1ce6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ce8:	31 83       	std	Z+1, r19	; 0x01
    1cea:	20 83       	st	Z, r18
    1cec:	8c 93       	st	X, r24
    1cee:	26 81       	ldd	r18, Z+6	; 0x06
    1cf0:	37 81       	ldd	r19, Z+7	; 0x07
    1cf2:	2f 5f       	subi	r18, 0xFF	; 255
    1cf4:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf6:	37 83       	std	Z+7, r19	; 0x07
    1cf8:	26 83       	std	Z+6, r18	; 0x06
    1cfa:	14 c0       	rjmp	.+40     	; 0x1d24 <fputc+0x6e>
    1cfc:	8b 01       	movw	r16, r22
    1cfe:	ec 01       	movw	r28, r24
    1d00:	fb 01       	movw	r30, r22
    1d02:	00 84       	ldd	r0, Z+8	; 0x08
    1d04:	f1 85       	ldd	r31, Z+9	; 0x09
    1d06:	e0 2d       	mov	r30, r0
    1d08:	19 95       	eicall
    1d0a:	89 2b       	or	r24, r25
    1d0c:	e1 f6       	brne	.-72     	; 0x1cc6 <fputc+0x10>
    1d0e:	d8 01       	movw	r26, r16
    1d10:	16 96       	adiw	r26, 0x06	; 6
    1d12:	8d 91       	ld	r24, X+
    1d14:	9c 91       	ld	r25, X
    1d16:	17 97       	sbiw	r26, 0x07	; 7
    1d18:	01 96       	adiw	r24, 0x01	; 1
    1d1a:	17 96       	adiw	r26, 0x07	; 7
    1d1c:	9c 93       	st	X, r25
    1d1e:	8e 93       	st	-X, r24
    1d20:	16 97       	sbiw	r26, 0x06	; 6
    1d22:	ce 01       	movw	r24, r28
    1d24:	df 91       	pop	r29
    1d26:	cf 91       	pop	r28
    1d28:	1f 91       	pop	r17
    1d2a:	0f 91       	pop	r16
    1d2c:	08 95       	ret

00001d2e <__ultoa_invert>:
    1d2e:	fa 01       	movw	r30, r20
    1d30:	aa 27       	eor	r26, r26
    1d32:	28 30       	cpi	r18, 0x08	; 8
    1d34:	51 f1       	breq	.+84     	; 0x1d8a <__ultoa_invert+0x5c>
    1d36:	20 31       	cpi	r18, 0x10	; 16
    1d38:	81 f1       	breq	.+96     	; 0x1d9a <__ultoa_invert+0x6c>
    1d3a:	e8 94       	clt
    1d3c:	6f 93       	push	r22
    1d3e:	6e 7f       	andi	r22, 0xFE	; 254
    1d40:	6e 5f       	subi	r22, 0xFE	; 254
    1d42:	7f 4f       	sbci	r23, 0xFF	; 255
    1d44:	8f 4f       	sbci	r24, 0xFF	; 255
    1d46:	9f 4f       	sbci	r25, 0xFF	; 255
    1d48:	af 4f       	sbci	r26, 0xFF	; 255
    1d4a:	b1 e0       	ldi	r27, 0x01	; 1
    1d4c:	3e d0       	rcall	.+124    	; 0x1dca <__ultoa_invert+0x9c>
    1d4e:	b4 e0       	ldi	r27, 0x04	; 4
    1d50:	3c d0       	rcall	.+120    	; 0x1dca <__ultoa_invert+0x9c>
    1d52:	67 0f       	add	r22, r23
    1d54:	78 1f       	adc	r23, r24
    1d56:	89 1f       	adc	r24, r25
    1d58:	9a 1f       	adc	r25, r26
    1d5a:	a1 1d       	adc	r26, r1
    1d5c:	68 0f       	add	r22, r24
    1d5e:	79 1f       	adc	r23, r25
    1d60:	8a 1f       	adc	r24, r26
    1d62:	91 1d       	adc	r25, r1
    1d64:	a1 1d       	adc	r26, r1
    1d66:	6a 0f       	add	r22, r26
    1d68:	71 1d       	adc	r23, r1
    1d6a:	81 1d       	adc	r24, r1
    1d6c:	91 1d       	adc	r25, r1
    1d6e:	a1 1d       	adc	r26, r1
    1d70:	20 d0       	rcall	.+64     	; 0x1db2 <__ultoa_invert+0x84>
    1d72:	09 f4       	brne	.+2      	; 0x1d76 <__ultoa_invert+0x48>
    1d74:	68 94       	set
    1d76:	3f 91       	pop	r19
    1d78:	2a e0       	ldi	r18, 0x0A	; 10
    1d7a:	26 9f       	mul	r18, r22
    1d7c:	11 24       	eor	r1, r1
    1d7e:	30 19       	sub	r19, r0
    1d80:	30 5d       	subi	r19, 0xD0	; 208
    1d82:	31 93       	st	Z+, r19
    1d84:	de f6       	brtc	.-74     	; 0x1d3c <__ultoa_invert+0xe>
    1d86:	cf 01       	movw	r24, r30
    1d88:	08 95       	ret
    1d8a:	46 2f       	mov	r20, r22
    1d8c:	47 70       	andi	r20, 0x07	; 7
    1d8e:	40 5d       	subi	r20, 0xD0	; 208
    1d90:	41 93       	st	Z+, r20
    1d92:	b3 e0       	ldi	r27, 0x03	; 3
    1d94:	0f d0       	rcall	.+30     	; 0x1db4 <__ultoa_invert+0x86>
    1d96:	c9 f7       	brne	.-14     	; 0x1d8a <__ultoa_invert+0x5c>
    1d98:	f6 cf       	rjmp	.-20     	; 0x1d86 <__ultoa_invert+0x58>
    1d9a:	46 2f       	mov	r20, r22
    1d9c:	4f 70       	andi	r20, 0x0F	; 15
    1d9e:	40 5d       	subi	r20, 0xD0	; 208
    1da0:	4a 33       	cpi	r20, 0x3A	; 58
    1da2:	18 f0       	brcs	.+6      	; 0x1daa <__ultoa_invert+0x7c>
    1da4:	49 5d       	subi	r20, 0xD9	; 217
    1da6:	31 fd       	sbrc	r19, 1
    1da8:	40 52       	subi	r20, 0x20	; 32
    1daa:	41 93       	st	Z+, r20
    1dac:	02 d0       	rcall	.+4      	; 0x1db2 <__ultoa_invert+0x84>
    1dae:	a9 f7       	brne	.-22     	; 0x1d9a <__ultoa_invert+0x6c>
    1db0:	ea cf       	rjmp	.-44     	; 0x1d86 <__ultoa_invert+0x58>
    1db2:	b4 e0       	ldi	r27, 0x04	; 4
    1db4:	a6 95       	lsr	r26
    1db6:	97 95       	ror	r25
    1db8:	87 95       	ror	r24
    1dba:	77 95       	ror	r23
    1dbc:	67 95       	ror	r22
    1dbe:	ba 95       	dec	r27
    1dc0:	c9 f7       	brne	.-14     	; 0x1db4 <__ultoa_invert+0x86>
    1dc2:	00 97       	sbiw	r24, 0x00	; 0
    1dc4:	61 05       	cpc	r22, r1
    1dc6:	71 05       	cpc	r23, r1
    1dc8:	08 95       	ret
    1dca:	9b 01       	movw	r18, r22
    1dcc:	ac 01       	movw	r20, r24
    1dce:	0a 2e       	mov	r0, r26
    1dd0:	06 94       	lsr	r0
    1dd2:	57 95       	ror	r21
    1dd4:	47 95       	ror	r20
    1dd6:	37 95       	ror	r19
    1dd8:	27 95       	ror	r18
    1dda:	ba 95       	dec	r27
    1ddc:	c9 f7       	brne	.-14     	; 0x1dd0 <__ultoa_invert+0xa2>
    1dde:	62 0f       	add	r22, r18
    1de0:	73 1f       	adc	r23, r19
    1de2:	84 1f       	adc	r24, r20
    1de4:	95 1f       	adc	r25, r21
    1de6:	a0 1d       	adc	r26, r0
    1de8:	08 95       	ret

00001dea <_exit>:
    1dea:	f8 94       	cli

00001dec <__stop_program>:
    1dec:	ff cf       	rjmp	.-2      	; 0x1dec <__stop_program>
