
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000158  00800200  00001aac  00001b40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001aac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  00800358  00800358  00001c98  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c98  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cf4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00001d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002531  00000000  00000000  00001f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000135e  00000000  00000000  0000443d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000114d  00000000  00000000  0000579b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000590  00000000  00000000  000068e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b19  00000000  00000000  00006e78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017d8  00000000  00000000  00007991  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00009169  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	80 c0       	rjmp	.+256    	; 0x102 <__ctors_end>
       2:	00 00       	nop
       4:	9e c0       	rjmp	.+316    	; 0x142 <__bad_interrupt>
       6:	00 00       	nop
       8:	9c c0       	rjmp	.+312    	; 0x142 <__bad_interrupt>
       a:	00 00       	nop
       c:	9a c0       	rjmp	.+308    	; 0x142 <__bad_interrupt>
       e:	00 00       	nop
      10:	98 c0       	rjmp	.+304    	; 0x142 <__bad_interrupt>
      12:	00 00       	nop
      14:	96 c0       	rjmp	.+300    	; 0x142 <__bad_interrupt>
      16:	00 00       	nop
      18:	94 c0       	rjmp	.+296    	; 0x142 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	92 c0       	rjmp	.+292    	; 0x142 <__bad_interrupt>
      1e:	00 00       	nop
      20:	90 c0       	rjmp	.+288    	; 0x142 <__bad_interrupt>
      22:	00 00       	nop
      24:	8e c0       	rjmp	.+284    	; 0x142 <__bad_interrupt>
      26:	00 00       	nop
      28:	8c c0       	rjmp	.+280    	; 0x142 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8a c0       	rjmp	.+276    	; 0x142 <__bad_interrupt>
      2e:	00 00       	nop
      30:	88 c0       	rjmp	.+272    	; 0x142 <__bad_interrupt>
      32:	00 00       	nop
      34:	86 c0       	rjmp	.+268    	; 0x142 <__bad_interrupt>
      36:	00 00       	nop
      38:	84 c0       	rjmp	.+264    	; 0x142 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	82 c0       	rjmp	.+260    	; 0x142 <__bad_interrupt>
      3e:	00 00       	nop
      40:	80 c0       	rjmp	.+256    	; 0x142 <__bad_interrupt>
      42:	00 00       	nop
      44:	7e c0       	rjmp	.+252    	; 0x142 <__bad_interrupt>
      46:	00 00       	nop
      48:	7c c0       	rjmp	.+248    	; 0x142 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7a c0       	rjmp	.+244    	; 0x142 <__bad_interrupt>
      4e:	00 00       	nop
      50:	78 c0       	rjmp	.+240    	; 0x142 <__bad_interrupt>
      52:	00 00       	nop
      54:	76 c0       	rjmp	.+236    	; 0x142 <__bad_interrupt>
      56:	00 00       	nop
      58:	74 c0       	rjmp	.+232    	; 0x142 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	72 c0       	rjmp	.+228    	; 0x142 <__bad_interrupt>
      5e:	00 00       	nop
      60:	70 c0       	rjmp	.+224    	; 0x142 <__bad_interrupt>
      62:	00 00       	nop
      64:	6e c0       	rjmp	.+220    	; 0x142 <__bad_interrupt>
      66:	00 00       	nop
      68:	6c c0       	rjmp	.+216    	; 0x142 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6a c0       	rjmp	.+212    	; 0x142 <__bad_interrupt>
      6e:	00 00       	nop
      70:	68 c0       	rjmp	.+208    	; 0x142 <__bad_interrupt>
      72:	00 00       	nop
      74:	66 c0       	rjmp	.+204    	; 0x142 <__bad_interrupt>
      76:	00 00       	nop
      78:	64 c0       	rjmp	.+200    	; 0x142 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	62 c0       	rjmp	.+196    	; 0x142 <__bad_interrupt>
      7e:	00 00       	nop
      80:	7e c0       	rjmp	.+252    	; 0x17e <__vector_32>
      82:	00 00       	nop
      84:	5e c0       	rjmp	.+188    	; 0x142 <__bad_interrupt>
      86:	00 00       	nop
      88:	5c c0       	rjmp	.+184    	; 0x142 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	5a c0       	rjmp	.+180    	; 0x142 <__bad_interrupt>
      8e:	00 00       	nop
      90:	58 c0       	rjmp	.+176    	; 0x142 <__bad_interrupt>
      92:	00 00       	nop
      94:	56 c0       	rjmp	.+172    	; 0x142 <__bad_interrupt>
      96:	00 00       	nop
      98:	54 c0       	rjmp	.+168    	; 0x142 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	52 c0       	rjmp	.+164    	; 0x142 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	50 c0       	rjmp	.+160    	; 0x142 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	4e c0       	rjmp	.+156    	; 0x142 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	4c c0       	rjmp	.+152    	; 0x142 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	4a c0       	rjmp	.+148    	; 0x142 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	48 c0       	rjmp	.+144    	; 0x142 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	46 c0       	rjmp	.+140    	; 0x142 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	44 c0       	rjmp	.+136    	; 0x142 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	01 c1       	rjmp	.+514    	; 0x2c0 <__vector_47>
      be:	00 00       	nop
      c0:	40 c0       	rjmp	.+128    	; 0x142 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	3e c0       	rjmp	.+124    	; 0x142 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	3c c0       	rjmp	.+120    	; 0x142 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	3a c0       	rjmp	.+116    	; 0x142 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	38 c0       	rjmp	.+112    	; 0x142 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	36 c0       	rjmp	.+108    	; 0x142 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	34 c0       	rjmp	.+104    	; 0x142 <__bad_interrupt>
      da:	00 00       	nop
      dc:	32 c0       	rjmp	.+100    	; 0x142 <__bad_interrupt>
      de:	00 00       	nop
      e0:	30 c0       	rjmp	.+96     	; 0x142 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	05 a8       	ldd	r0, Z+53	; 0x35
      e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
      e8:	b2 d4       	rcall	.+2404   	; 0xa4e <i2c_start+0x28>
      ea:	4e b9       	out	0x0e, r20	; 14
      ec:	38 36       	cpi	r19, 0x68	; 104
      ee:	a9 02       	muls	r26, r25
      f0:	0c 50       	subi	r16, 0x0C	; 12
      f2:	b9 91       	ld	r27, Y+
      f4:	86 88       	ldd	r8, Z+22	; 0x16
      f6:	08 3c       	cpi	r16, 0xC8	; 200
      f8:	a6 aa       	std	Z+54, r10	; 0x36
      fa:	aa 2a       	or	r10, r26
      fc:	be 00       	.word	0x00be	; ????
      fe:	00 00       	nop
     100:	80 3f       	cpi	r24, 0xF0	; 240

00000102 <__ctors_end>:
     102:	11 24       	eor	r1, r1
     104:	1f be       	out	0x3f, r1	; 63
     106:	cf ef       	ldi	r28, 0xFF	; 255
     108:	d1 e2       	ldi	r29, 0x21	; 33
     10a:	de bf       	out	0x3e, r29	; 62
     10c:	cd bf       	out	0x3d, r28	; 61
     10e:	00 e0       	ldi	r16, 0x00	; 0
     110:	0c bf       	out	0x3c, r16	; 60

00000112 <__do_copy_data>:
     112:	13 e0       	ldi	r17, 0x03	; 3
     114:	a0 e0       	ldi	r26, 0x00	; 0
     116:	b2 e0       	ldi	r27, 0x02	; 2
     118:	ec ea       	ldi	r30, 0xAC	; 172
     11a:	fa e1       	ldi	r31, 0x1A	; 26
     11c:	00 e0       	ldi	r16, 0x00	; 0
     11e:	0b bf       	out	0x3b, r16	; 59
     120:	02 c0       	rjmp	.+4      	; 0x126 <__do_copy_data+0x14>
     122:	07 90       	elpm	r0, Z+
     124:	0d 92       	st	X+, r0
     126:	a8 35       	cpi	r26, 0x58	; 88
     128:	b1 07       	cpc	r27, r17
     12a:	d9 f7       	brne	.-10     	; 0x122 <__do_copy_data+0x10>

0000012c <__do_clear_bss>:
     12c:	23 e0       	ldi	r18, 0x03	; 3
     12e:	a8 e5       	ldi	r26, 0x58	; 88
     130:	b3 e0       	ldi	r27, 0x03	; 3
     132:	01 c0       	rjmp	.+2      	; 0x136 <.do_clear_bss_start>

00000134 <.do_clear_bss_loop>:
     134:	1d 92       	st	X+, r1

00000136 <.do_clear_bss_start>:
     136:	ac 37       	cpi	r26, 0x7C	; 124
     138:	b2 07       	cpc	r27, r18
     13a:	e1 f7       	brne	.-8      	; 0x134 <.do_clear_bss_loop>
     13c:	0d d1       	rcall	.+538    	; 0x358 <main>
     13e:	0c 94 54 0d 	jmp	0x1aa8	; 0x1aa8 <_exit>

00000142 <__bad_interrupt>:
     142:	5e cf       	rjmp	.-324    	; 0x0 <__vectors>

00000144 <init_gpio>:
	*/
	//DDRB|=(1<<PB5);//LED13
	//sbi(DDRB,4);//digital 10
	//sbi(DDRB,5);//digital 11
	//sbi(DDRB,6);//digital 12
	sbi(DDRH,3);//digital 6 OC4A
     144:	e1 e0       	ldi	r30, 0x01	; 1
     146:	f1 e0       	ldi	r31, 0x01	; 1
     148:	80 81       	ld	r24, Z
     14a:	88 60       	ori	r24, 0x08	; 8
     14c:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     14e:	80 81       	ld	r24, Z
     150:	80 61       	ori	r24, 0x10	; 16
     152:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     154:	80 81       	ld	r24, Z
     156:	80 62       	ori	r24, 0x20	; 32
     158:	80 83       	st	Z, r24
     15a:	08 95       	ret

0000015c <uart_putchar>:
}
void writeOcr(uint16_t bla)
{	
	cli();
	OCR1A=bla;
	sei();
     15c:	cf 93       	push	r28
     15e:	c8 2f       	mov	r28, r24
     160:	8a 30       	cpi	r24, 0x0A	; 10
     162:	11 f4       	brne	.+4      	; 0x168 <uart_putchar+0xc>
     164:	8d e0       	ldi	r24, 0x0D	; 13
     166:	fa df       	rcall	.-12     	; 0x15c <uart_putchar>
     168:	e0 ec       	ldi	r30, 0xC0	; 192
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	85 ff       	sbrs	r24, 5
     170:	fd cf       	rjmp	.-6      	; 0x16c <uart_putchar+0x10>
     172:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     176:	80 e0       	ldi	r24, 0x00	; 0
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	cf 91       	pop	r28
     17c:	08 95       	ret

0000017e <__vector_32>:
     17e:	1f 92       	push	r1
     180:	0f 92       	push	r0
     182:	0f b6       	in	r0, 0x3f	; 63
     184:	0f 92       	push	r0
     186:	11 24       	eor	r1, r1
     188:	8f 93       	push	r24
     18a:	9f 93       	push	r25
     18c:	af 93       	push	r26
     18e:	bf 93       	push	r27
     190:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <_10micros>
     194:	90 91 5d 03 	lds	r25, 0x035D	; 0x80035d <_10micros+0x1>
     198:	a0 91 5e 03 	lds	r26, 0x035E	; 0x80035e <_10micros+0x2>
     19c:	b0 91 5f 03 	lds	r27, 0x035F	; 0x80035f <_10micros+0x3>
     1a0:	01 96       	adiw	r24, 0x01	; 1
     1a2:	a1 1d       	adc	r26, r1
     1a4:	b1 1d       	adc	r27, r1
     1a6:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <_10micros>
     1aa:	90 93 5d 03 	sts	0x035D, r25	; 0x80035d <_10micros+0x1>
     1ae:	a0 93 5e 03 	sts	0x035E, r26	; 0x80035e <_10micros+0x2>
     1b2:	b0 93 5f 03 	sts	0x035F, r27	; 0x80035f <_10micros+0x3>
     1b6:	bf 91       	pop	r27
     1b8:	af 91       	pop	r26
     1ba:	9f 91       	pop	r25
     1bc:	8f 91       	pop	r24
     1be:	0f 90       	pop	r0
     1c0:	0f be       	out	0x3f, r0	; 63
     1c2:	0f 90       	pop	r0
     1c4:	1f 90       	pop	r1
     1c6:	18 95       	reti

000001c8 <PWM_update>:
     1c8:	e0 91 5a 03 	lds	r30, 0x035A	; 0x80035a <U_step>
     1cc:	f0 91 5b 03 	lds	r31, 0x035B	; 0x80035b <U_step+0x1>
     1d0:	ea 5d       	subi	r30, 0xDA	; 218
     1d2:	fd 4f       	sbci	r31, 0xFD	; 253
     1d4:	80 81       	ld	r24, Z
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     1dc:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     1e0:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <V_step>
     1e4:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <V_step+0x1>
     1e8:	ea 5d       	subi	r30, 0xDA	; 218
     1ea:	fd 4f       	sbci	r31, 0xFD	; 253
     1ec:	80 81       	ld	r24, Z
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     1f4:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     1f8:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <W_step>
     1fc:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <W_step+0x1>
     200:	ea 5d       	subi	r30, 0xDA	; 218
     202:	fd 4f       	sbci	r31, 0xFD	; 253
     204:	80 81       	ld	r24, Z
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     20c:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     210:	20 91 0b 02 	lds	r18, 0x020B	; 0x80020b <incr>
     214:	30 91 0c 02 	lds	r19, 0x020C	; 0x80020c <incr+0x1>
     218:	60 91 5a 03 	lds	r22, 0x035A	; 0x80035a <U_step>
     21c:	70 91 5b 03 	lds	r23, 0x035B	; 0x80035b <U_step+0x1>
     220:	62 0f       	add	r22, r18
     222:	73 1f       	adc	r23, r19
     224:	70 93 5b 03 	sts	0x035B, r23	; 0x80035b <U_step+0x1>
     228:	60 93 5a 03 	sts	0x035A, r22	; 0x80035a <U_step>
     22c:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <V_step>
     230:	50 91 09 02 	lds	r21, 0x0209	; 0x800209 <V_step+0x1>
     234:	42 0f       	add	r20, r18
     236:	53 1f       	adc	r21, r19
     238:	50 93 09 02 	sts	0x0209, r21	; 0x800209 <V_step+0x1>
     23c:	40 93 08 02 	sts	0x0208, r20	; 0x800208 <V_step>
     240:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <W_step>
     244:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <W_step+0x1>
     248:	28 0f       	add	r18, r24
     24a:	39 1f       	adc	r19, r25
     24c:	30 93 07 02 	sts	0x0207, r19	; 0x800207 <W_step+0x1>
     250:	20 93 06 02 	sts	0x0206, r18	; 0x800206 <W_step>
     254:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <sinTableSize>
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	86 17       	cp	r24, r22
     25c:	97 07       	cpc	r25, r23
     25e:	2c f4       	brge	.+10     	; 0x26a <PWM_update+0xa2>
     260:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <U_step+0x1>
     264:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <U_step>
     268:	06 c0       	rjmp	.+12     	; 0x276 <PWM_update+0xae>
     26a:	77 23       	and	r23, r23
     26c:	24 f4       	brge	.+8      	; 0x276 <PWM_update+0xae>
     26e:	90 93 5b 03 	sts	0x035B, r25	; 0x80035b <U_step+0x1>
     272:	80 93 5a 03 	sts	0x035A, r24	; 0x80035a <U_step>
     276:	84 17       	cp	r24, r20
     278:	95 07       	cpc	r25, r21
     27a:	2c f4       	brge	.+10     	; 0x286 <PWM_update+0xbe>
     27c:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <V_step+0x1>
     280:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <V_step>
     284:	06 c0       	rjmp	.+12     	; 0x292 <PWM_update+0xca>
     286:	55 23       	and	r21, r21
     288:	24 f4       	brge	.+8      	; 0x292 <PWM_update+0xca>
     28a:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <V_step+0x1>
     28e:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <V_step>
     292:	82 17       	cp	r24, r18
     294:	93 07       	cpc	r25, r19
     296:	2c f4       	brge	.+10     	; 0x2a2 <PWM_update+0xda>
     298:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <W_step+0x1>
     29c:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <W_step>
     2a0:	06 c0       	rjmp	.+12     	; 0x2ae <PWM_update+0xe6>
     2a2:	33 23       	and	r19, r19
     2a4:	24 f4       	brge	.+8      	; 0x2ae <PWM_update+0xe6>
     2a6:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <W_step+0x1>
     2aa:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <W_step>
     2ae:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <__data_end>
     2b2:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <__data_end+0x1>
     2b6:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     2ba:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     2be:	08 95       	ret

000002c0 <__vector_47>:
     2c0:	1f 92       	push	r1
     2c2:	0f 92       	push	r0
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	0f 92       	push	r0
     2c8:	11 24       	eor	r1, r1
     2ca:	0b b6       	in	r0, 0x3b	; 59
     2cc:	0f 92       	push	r0
     2ce:	2f 93       	push	r18
     2d0:	3f 93       	push	r19
     2d2:	4f 93       	push	r20
     2d4:	5f 93       	push	r21
     2d6:	6f 93       	push	r22
     2d8:	7f 93       	push	r23
     2da:	8f 93       	push	r24
     2dc:	9f 93       	push	r25
     2de:	af 93       	push	r26
     2e0:	bf 93       	push	r27
     2e2:	ef 93       	push	r30
     2e4:	ff 93       	push	r31
     2e6:	70 df       	rcall	.-288    	; 0x1c8 <PWM_update>
     2e8:	ff 91       	pop	r31
     2ea:	ef 91       	pop	r30
     2ec:	bf 91       	pop	r27
     2ee:	af 91       	pop	r26
     2f0:	9f 91       	pop	r25
     2f2:	8f 91       	pop	r24
     2f4:	7f 91       	pop	r23
     2f6:	6f 91       	pop	r22
     2f8:	5f 91       	pop	r21
     2fa:	4f 91       	pop	r20
     2fc:	3f 91       	pop	r19
     2fe:	2f 91       	pop	r18
     300:	0f 90       	pop	r0
     302:	0b be       	out	0x3b, r0	; 59
     304:	0f 90       	pop	r0
     306:	0f be       	out	0x3f, r0	; 63
     308:	0f 90       	pop	r0
     30a:	1f 90       	pop	r1
     30c:	18 95       	reti

0000030e <print16>:
//}

void print16(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     30e:	0f 93       	push	r16
     310:	1f 93       	push	r17
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	cd b7       	in	r28, 0x3d	; 61
     318:	de b7       	in	r29, 0x3e	; 62
     31a:	2a 97       	sbiw	r28, 0x0a	; 10
     31c:	0f b6       	in	r0, 0x3f	; 63
     31e:	f8 94       	cli
     320:	de bf       	out	0x3e, r29	; 62
     322:	0f be       	out	0x3f, r0	; 63
     324:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     326:	4a e0       	ldi	r20, 0x0A	; 10
     328:	8e 01       	movw	r16, r28
     32a:	0f 5f       	subi	r16, 0xFF	; 255
     32c:	1f 4f       	sbci	r17, 0xFF	; 255
     32e:	b8 01       	movw	r22, r16
     330:	fc 01       	movw	r30, r24
     332:	80 81       	ld	r24, Z
     334:	91 81       	ldd	r25, Z+1	; 0x01
     336:	04 d7       	rcall	.+3592   	; 0x1140 <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     338:	1f 93       	push	r17
     33a:	0f 93       	push	r16
     33c:	6e d7       	rcall	.+3804   	; 0x121a <printf>
	//printf("\n");
}
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	2a 96       	adiw	r28, 0x0a	; 10
     344:	0f b6       	in	r0, 0x3f	; 63
     346:	f8 94       	cli
     348:	de bf       	out	0x3e, r29	; 62
     34a:	0f be       	out	0x3f, r0	; 63
     34c:	cd bf       	out	0x3d, r28	; 61
     34e:	df 91       	pop	r29
     350:	cf 91       	pop	r28
     352:	1f 91       	pop	r17
     354:	0f 91       	pop	r16
     356:	08 95       	ret

00000358 <main>:
int V_step=85;
int W_step=170;
uint16_t pwm_delay=0;
int main(void)

{	
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	cd b7       	in	r28, 0x3d	; 61
     35e:	de b7       	in	r29, 0x3e	; 62
     360:	a4 97       	sbiw	r28, 0x24	; 36
     362:	0f b6       	in	r0, 0x3f	; 63
     364:	f8 94       	cli
     366:	de bf       	out	0x3e, r29	; 62
     368:	0f be       	out	0x3f, r0	; 63
	
	init_gpio();
	i2c_init();
     36a:	cd bf       	out	0x3d, r28	; 61
	USART_Init(MY_UBRR);
     36c:	eb de       	rcall	.-554    	; 0x144 <init_gpio>
     36e:	55 d3       	rcall	.+1706   	; 0xa1a <i2c_init>
     370:	80 e1       	ldi	r24, 0x10	; 16
	uart_str = fdevopen(uart_putchar, NULL);
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	03 d4       	rcall	.+2054   	; 0xb7c <USART_Init>
     376:	60 e0       	ldi	r22, 0x00	; 0
     378:	70 e0       	ldi	r23, 0x00	; 0
	setup_timer1();
     37a:	8e ea       	ldi	r24, 0xAE	; 174
	setup_timer3();
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	03 d7       	rcall	.+3590   	; 0x1186 <fdevopen>
	setup_timer4();//pwm
     380:	90 93 61 03 	sts	0x0361, r25	; 0x800361 <uart_str+0x1>
	Enable_timer3_compare_interrupt();
     384:	80 93 60 03 	sts	0x0360, r24	; 0x800360 <uart_str>
	Enable_timer1_compare_interrupt();
     388:	39 d3       	rcall	.+1650   	; 0x9fc <setup_timer1>
     38a:	29 d3       	rcall	.+1618   	; 0x9de <setup_timer3>
	OCR3A=159;//interrupt every 10us
     38c:	14 d3       	rcall	.+1576   	; 0x9b6 <setup_timer4>
     38e:	30 d3       	rcall	.+1632   	; 0x9f0 <Enable_timer3_compare_interrupt>
     390:	3e d3       	rcall	.+1660   	; 0xa0e <Enable_timer1_compare_interrupt>
     392:	8f e9       	ldi	r24, 0x9F	; 159
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
	OCR5A=4000;
     39a:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     39e:	80 ea       	ldi	r24, 0xA0	; 160
     3a0:	9f e0       	ldi	r25, 0x0F	; 15
     3a2:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
	float acc_total_vector=0;
	float angle_pitch_acc=0;
	float angle_roll_acc=0;
	bool set_gyro_angles;
	#ifdef CALIBERATED_DATA
		int32_t gyroX_calib=0;
     3a6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     3aa:	1d 86       	std	Y+13, r1	; 0x0d
		int32_t gyroY_calib=0;
     3ac:	1e 86       	std	Y+14, r1	; 0x0e
     3ae:	1f 86       	std	Y+15, r1	; 0x0f
     3b0:	18 8a       	std	Y+16, r1	; 0x10
     3b2:	19 8a       	std	Y+17, r1	; 0x11
		int32_t gyroZ_calib=0;
     3b4:	1a 8a       	std	Y+18, r1	; 0x12
     3b6:	1b 8a       	std	Y+19, r1	; 0x13
     3b8:	1c 8a       	std	Y+20, r1	; 0x14
		int32_t accelX_calib=0;
		int32_t accelY_calib=0;
		int32_t accelZ_calib=0;
		mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
     3ba:	1d 8a       	std	Y+21, r1	; 0x15
     3bc:	1e 8a       	std	Y+22, r1	; 0x16
     3be:	1f 8a       	std	Y+23, r1	; 0x17
     3c0:	18 8e       	std	Y+24, r1	; 0x18
     3c2:	ae 01       	movw	r20, r28
     3c4:	4b 5e       	subi	r20, 0xEB	; 235
     3c6:	5f 4f       	sbci	r21, 0xFF	; 255
		//mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
	#endif
	mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     3c8:	be 01       	movw	r22, r28
     3ca:	6f 5e       	subi	r22, 0xEF	; 239
	mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     3cc:	7f 4f       	sbci	r23, 0xFF	; 255
     3ce:	ce 01       	movw	r24, r28
     3d0:	0d 96       	adiw	r24, 0x0d	; 13
	mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     3d2:	73 d1       	rcall	.+742    	; 0x6ba <mpu6050_calibrate_gyro>
     3d4:	67 e0       	ldi	r22, 0x07	; 7
     3d6:	89 e1       	ldi	r24, 0x19	; 25
     3d8:	27 d2       	rcall	.+1102   	; 0x828 <mpu6050_writeByte>
	mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     3da:	60 e0       	ldi	r22, 0x00	; 0
     3dc:	8a e1       	ldi	r24, 0x1A	; 26
     3de:	24 d2       	rcall	.+1096   	; 0x828 <mpu6050_writeByte>
     3e0:	68 e0       	ldi	r22, 0x08	; 8
	mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     3e2:	8b e1       	ldi	r24, 0x1B	; 27
     3e4:	21 d2       	rcall	.+1090   	; 0x828 <mpu6050_writeByte>
     3e6:	60 e1       	ldi	r22, 0x10	; 16
     3e8:	8c e1       	ldi	r24, 0x1C	; 28
	
	/*-----------------end---------------*/
	sei();
     3ea:	1e d2       	rcall	.+1084   	; 0x828 <mpu6050_writeByte>
	uint32_t timer1=_10micros;
     3ec:	61 e0       	ldi	r22, 0x01	; 1
     3ee:	8b e6       	ldi	r24, 0x6B	; 107
     3f0:	1b d2       	rcall	.+1078   	; 0x828 <mpu6050_writeByte>
     3f2:	78 94       	sei
     3f4:	40 90 5c 03 	lds	r4, 0x035C	; 0x80035c <_10micros>
     3f8:	50 90 5d 03 	lds	r5, 0x035D	; 0x80035d <_10micros+0x1>
	int16_t gyro_z;
	int16_t accel_x;
	int16_t accel_y;
	int16_t accel_z;
	float angle_pitch=0;
	float angle_roll=0;
     3fc:	60 90 5e 03 	lds	r6, 0x035E	; 0x80035e <_10micros+0x2>
     400:	70 90 5f 03 	lds	r7, 0x035F	; 0x80035f <_10micros+0x3>
	int16_t gyro_y;
	int16_t gyro_z;
	int16_t accel_x;
	int16_t accel_y;
	int16_t accel_z;
	float angle_pitch=0;
     404:	19 a2       	std	Y+33, r1	; 0x21
     406:	1a a2       	std	Y+34, r1	; 0x22
     408:	1b a2       	std	Y+35, r1	; 0x23
				print16ln(&reg);*/
				
				#ifdef DRV8313
					int reg=angle_pitch;
					//printf(" ");
					printf("angle_x= ");
     40a:	1c a2       	std	Y+36, r1	; 0x24
     40c:	81 2c       	mov	r8, r1
     40e:	91 2c       	mov	r9, r1
     410:	54 01       	movw	r10, r8
     412:	0f 2e       	mov	r0, r31
     414:	fd e0       	ldi	r31, 0x0D	; 13
					if (local_motor_delay>2000)
					{
						pwm_delay=2*local_motor_delay;
					}
					uint16_t reg_ =local_motor_delay;
					printf("ocr= ");
     416:	2f 2e       	mov	r2, r31
     418:	f2 e0       	ldi	r31, 0x02	; 2
     41a:	3f 2e       	mov	r3, r31
     41c:	f0 2d       	mov	r31, r0
     41e:	0f 2e       	mov	r0, r31
     420:	f7 e1       	ldi	r31, 0x17	; 23
	/*-----------------end---------------*/
	sei();
	uint32_t timer1=_10micros;
    while (1) 
    {
    	mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     422:	cf 2e       	mov	r12, r31
     424:	f2 e0       	ldi	r31, 0x02	; 2
     426:	df 2e       	mov	r13, r31
     428:	f0 2d       	mov	r31, r0
     42a:	ae 01       	movw	r20, r28
     42c:	4b 5f       	subi	r20, 0xFB	; 251
     42e:	5f 4f       	sbci	r21, 0xFF	; 255
     430:	7a 01       	movw	r14, r20
     432:	8e 01       	movw	r16, r28
     434:	0d 5f       	subi	r16, 0xFD	; 253
     436:	1f 4f       	sbci	r17, 0xFF	; 255
     438:	9e 01       	movw	r18, r28
     43a:	2f 5f       	subi	r18, 0xFF	; 255
     43c:	3f 4f       	sbci	r19, 0xFF	; 255
     43e:	4a 5f       	subi	r20, 0xFA	; 250
     440:	5f 4f       	sbci	r21, 0xFF	; 255
     442:	be 01       	movw	r22, r28
    	double dt = (double)((_10micros - timer1));
     444:	67 5f       	subi	r22, 0xF7	; 247
     446:	7f 4f       	sbci	r23, 0xFF	; 255
     448:	ce 01       	movw	r24, r28
     44a:	07 96       	adiw	r24, 0x07	; 7
     44c:	49 d2       	rcall	.+1170   	; 0x8e0 <mpu6050_getRawData>
     44e:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <_10micros>
     452:	90 91 5d 03 	lds	r25, 0x035D	; 0x80035d <_10micros+0x1>
     456:	a0 91 5e 03 	lds	r26, 0x035E	; 0x80035e <_10micros+0x2>
     45a:	b0 91 5f 03 	lds	r27, 0x035F	; 0x80035f <_10micros+0x3>
     45e:	bc 01       	movw	r22, r24
     460:	cd 01       	movw	r24, r26
     462:	64 19       	sub	r22, r4
     464:	75 09       	sbc	r23, r5
     466:	86 09       	sbc	r24, r6
     468:	97 09       	sbc	r25, r7
     46a:	91 d4       	rcall	.+2338   	; 0xd8e <__floatunsisf>
    	timer1 = _10micros;
     46c:	6d 8f       	std	Y+29, r22	; 0x1d
     46e:	7e 8f       	std	Y+30, r23	; 0x1e
     470:	8f 8f       	std	Y+31, r24	; 0x1f
     472:	98 a3       	std	Y+32, r25	; 0x20
     474:	40 90 5c 03 	lds	r4, 0x035C	; 0x80035c <_10micros>
     478:	50 90 5d 03 	lds	r5, 0x035D	; 0x80035d <_10micros+0x1>
			#ifdef CALIBERATED_DATA
				accX;
				accY;
				accZ;
				grX;
     47c:	60 90 5e 03 	lds	r6, 0x035E	; 0x80035e <_10micros+0x2>
     480:	70 90 5f 03 	lds	r7, 0x035F	; 0x80035f <_10micros+0x3>
     484:	69 81       	ldd	r22, Y+1	; 0x01
     486:	7a 81       	ldd	r23, Y+2	; 0x02
     488:	8d 85       	ldd	r24, Y+13	; 0x0d
     48a:	9e 85       	ldd	r25, Y+14	; 0x0e
				grY;
     48c:	68 1b       	sub	r22, r24
     48e:	79 0b       	sbc	r23, r25
     490:	7a 83       	std	Y+2, r23	; 0x02
     492:	69 83       	std	Y+1, r22	; 0x01
     494:	0b 81       	ldd	r16, Y+3	; 0x03
     496:	1c 81       	ldd	r17, Y+4	; 0x04
				grZ;
     498:	89 89       	ldd	r24, Y+17	; 0x11
     49a:	9a 89       	ldd	r25, Y+18	; 0x12
     49c:	08 1b       	sub	r16, r24
     49e:	19 0b       	sbc	r17, r25
     4a0:	1c 83       	std	Y+4, r17	; 0x04
     4a2:	0b 83       	std	Y+3, r16	; 0x03
		#else
			#ifdef GYRO
				//Accelerometer angle calculations
				double gyroXrate = gyro_x / 65.5; // Convert to deg/s
				double gyroYrate = gyro_y / 65.5; // Convert to deg/s
				angle_pitch += gyroXrate*dt/100000; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     4a4:	ed 80       	ldd	r14, Y+5	; 0x05
     4a6:	fe 80       	ldd	r15, Y+6	; 0x06
     4a8:	8d 89       	ldd	r24, Y+21	; 0x15
     4aa:	9e 89       	ldd	r25, Y+22	; 0x16
     4ac:	e8 1a       	sub	r14, r24
     4ae:	f9 0a       	sbc	r15, r25
     4b0:	fe 82       	std	Y+6, r15	; 0x06
     4b2:	ed 82       	std	Y+5, r14	; 0x05
     4b4:	07 2e       	mov	r0, r23
     4b6:	00 0c       	add	r0, r0
     4b8:	88 0b       	sbc	r24, r24
     4ba:	99 0b       	sbc	r25, r25
     4bc:	6a d4       	rcall	.+2260   	; 0xd92 <__floatsisf>
     4be:	20 e0       	ldi	r18, 0x00	; 0
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	43 e8       	ldi	r20, 0x83	; 131
     4c4:	52 e4       	ldi	r21, 0x42	; 66
     4c6:	ca d3       	rcall	.+1940   	; 0xc5c <__divsf3>
     4c8:	2d 8d       	ldd	r18, Y+29	; 0x1d
     4ca:	3e 8d       	ldd	r19, Y+30	; 0x1e
     4cc:	4f 8d       	ldd	r20, Y+31	; 0x1f
     4ce:	58 a1       	ldd	r21, Y+32	; 0x20
     4d0:	ec d4       	rcall	.+2520   	; 0xeaa <__mulsf3>
     4d2:	20 e0       	ldi	r18, 0x00	; 0
				angle_roll += gyroYrate*dt/100000;  //Calculate the traveled roll angle and add this to the angle_roll variable
     4d4:	30 e5       	ldi	r19, 0x50	; 80
     4d6:	43 ec       	ldi	r20, 0xC3	; 195
     4d8:	57 e4       	ldi	r21, 0x47	; 71
     4da:	c0 d3       	rcall	.+1920   	; 0xc5c <__divsf3>
     4dc:	a5 01       	movw	r20, r10
     4de:	94 01       	movw	r18, r8
     4e0:	59 d3       	rcall	.+1714   	; 0xb94 <__addsf3>
     4e2:	4b 01       	movw	r8, r22
     4e4:	5c 01       	movw	r10, r24
     4e6:	b8 01       	movw	r22, r16
     4e8:	11 0f       	add	r17, r17
     4ea:	88 0b       	sbc	r24, r24
     4ec:	99 0b       	sbc	r25, r25
     4ee:	51 d4       	rcall	.+2210   	; 0xd92 <__floatsisf>
     4f0:	20 e0       	ldi	r18, 0x00	; 0
     4f2:	30 e0       	ldi	r19, 0x00	; 0
     4f4:	43 e8       	ldi	r20, 0x83	; 131
     4f6:	52 e4       	ldi	r21, 0x42	; 66
     4f8:	b1 d3       	rcall	.+1890   	; 0xc5c <__divsf3>
     4fa:	2d 8d       	ldd	r18, Y+29	; 0x1d
     4fc:	3e 8d       	ldd	r19, Y+30	; 0x1e
     4fe:	4f 8d       	ldd	r20, Y+31	; 0x1f
     500:	58 a1       	ldd	r21, Y+32	; 0x20
     502:	d3 d4       	rcall	.+2470   	; 0xeaa <__mulsf3>
     504:	20 e0       	ldi	r18, 0x00	; 0
     506:	30 e5       	ldi	r19, 0x50	; 80
     508:	43 ec       	ldi	r20, 0xC3	; 195
     50a:	57 e4       	ldi	r21, 0x47	; 71
				
				//0.000001066 = 0.0000611 * (3.142(PI) / 180degr) The Arduino sin function is in radians
				angle_pitch += angle_roll * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the roll angle to the pitch angel
     50c:	a7 d3       	rcall	.+1870   	; 0xc5c <__divsf3>
     50e:	29 a1       	ldd	r18, Y+33	; 0x21
     510:	3a a1       	ldd	r19, Y+34	; 0x22
     512:	4b a1       	ldd	r20, Y+35	; 0x23
     514:	5c a1       	ldd	r21, Y+36	; 0x24
     516:	3e d3       	rcall	.+1660   	; 0xb94 <__addsf3>
     518:	69 a3       	std	Y+33, r22	; 0x21
     51a:	7a a3       	std	Y+34, r23	; 0x22
     51c:	8b a3       	std	Y+35, r24	; 0x23
     51e:	9c a3       	std	Y+36, r25	; 0x24
     520:	b7 01       	movw	r22, r14
     522:	ff 0c       	add	r15, r15
     524:	88 0b       	sbc	r24, r24
     526:	99 0b       	sbc	r25, r25
     528:	34 d4       	rcall	.+2152   	; 0xd92 <__floatsisf>
     52a:	2b e7       	ldi	r18, 0x7B	; 123
     52c:	33 e1       	ldi	r19, 0x13	; 19
     52e:	4f e8       	ldi	r20, 0x8F	; 143
     530:	55 e3       	ldi	r21, 0x35	; 53
     532:	bb d4       	rcall	.+2422   	; 0xeaa <__mulsf3>
     534:	1d d5       	rcall	.+2618   	; 0xf70 <sin>
     536:	6d 8f       	std	Y+29, r22	; 0x1d
     538:	7e 8f       	std	Y+30, r23	; 0x1e
     53a:	8f 8f       	std	Y+31, r24	; 0x1f
     53c:	98 a3       	std	Y+32, r25	; 0x20
     53e:	9b 01       	movw	r18, r22
				angle_roll -= angle_pitch * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the pitch angle to the roll angel
     540:	ac 01       	movw	r20, r24
     542:	69 a1       	ldd	r22, Y+33	; 0x21
     544:	7a a1       	ldd	r23, Y+34	; 0x22
     546:	8b a1       	ldd	r24, Y+35	; 0x23
     548:	9c a1       	ldd	r25, Y+36	; 0x24
     54a:	af d4       	rcall	.+2398   	; 0xeaa <__mulsf3>
     54c:	a5 01       	movw	r20, r10
     54e:	94 01       	movw	r18, r8
     550:	21 d3       	rcall	.+1602   	; 0xb94 <__addsf3>
     552:	4b 01       	movw	r8, r22
     554:	5c 01       	movw	r10, r24
     556:	9b 01       	movw	r18, r22
     558:	ac 01       	movw	r20, r24
     55a:	6d 8d       	ldd	r22, Y+29	; 0x1d
     55c:	7e 8d       	ldd	r23, Y+30	; 0x1e
     55e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     560:	98 a1       	ldd	r25, Y+32	; 0x20
     562:	a3 d4       	rcall	.+2374   	; 0xeaa <__mulsf3>
     564:	9b 01       	movw	r18, r22
     566:	ac 01       	movw	r20, r24
				printf(" ");
				printf("accel= ");
				print16ln(&reg);*/
				
				#ifdef DRV8313
					int reg=angle_pitch;
     568:	69 a1       	ldd	r22, Y+33	; 0x21
     56a:	7a a1       	ldd	r23, Y+34	; 0x22
     56c:	8b a1       	ldd	r24, Y+35	; 0x23
     56e:	9c a1       	ldd	r25, Y+36	; 0x24
     570:	10 d3       	rcall	.+1568   	; 0xb92 <__subsf3>
     572:	69 a3       	std	Y+33, r22	; 0x21
					//printf(" ");
					printf("angle_x= ");
     574:	7a a3       	std	Y+34, r23	; 0x22
     576:	8b a3       	std	Y+35, r24	; 0x23
     578:	9c a3       	std	Y+36, r25	; 0x24
     57a:	c5 01       	movw	r24, r10
					print16(&reg);
     57c:	b4 01       	movw	r22, r8
     57e:	d6 d3       	rcall	.+1964   	; 0xd2c <__fixsfsi>
     580:	7c 8f       	std	Y+28, r23	; 0x1c
     582:	6b 8f       	std	Y+27, r22	; 0x1b
					printf(" ");
     584:	3f 92       	push	r3
     586:	2f 92       	push	r2
					uint16_t local_motor_delay=(32735-abs(reg)*500);
     588:	48 d6       	rcall	.+3216   	; 0x121a <printf>
     58a:	ce 01       	movw	r24, r28
     58c:	4b 96       	adiw	r24, 0x1b	; 27
     58e:	bf de       	rcall	.-642    	; 0x30e <print16>
     590:	80 e2       	ldi	r24, 0x20	; 32
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	55 d6       	rcall	.+3242   	; 0x1240 <putchar>
     596:	2b 8d       	ldd	r18, Y+27	; 0x1b
     598:	3c 8d       	ldd	r19, Y+28	; 0x1c
     59a:	33 23       	and	r19, r19
     59c:	1c f4       	brge	.+6      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
     59e:	31 95       	neg	r19
     5a0:	21 95       	neg	r18
     5a2:	31 09       	sbc	r19, r1
     5a4:	4c e0       	ldi	r20, 0x0C	; 12
     5a6:	5e ef       	ldi	r21, 0xFE	; 254
					if (local_motor_delay>2000)
     5a8:	24 9f       	mul	r18, r20
     5aa:	c0 01       	movw	r24, r0
     5ac:	25 9f       	mul	r18, r21
     5ae:	90 0d       	add	r25, r0
     5b0:	34 9f       	mul	r19, r20
     5b2:	90 0d       	add	r25, r0
					{
						pwm_delay=2*local_motor_delay;
     5b4:	11 24       	eor	r1, r1
     5b6:	81 52       	subi	r24, 0x21	; 33
     5b8:	90 48       	sbci	r25, 0x80	; 128
     5ba:	0f 90       	pop	r0
     5bc:	0f 90       	pop	r0
     5be:	81 3d       	cpi	r24, 0xD1	; 209
					}
					uint16_t reg_ =local_motor_delay;
     5c0:	57 e0       	ldi	r21, 0x07	; 7
     5c2:	95 07       	cpc	r25, r21
					printf("ocr= ");
     5c4:	38 f0       	brcs	.+14     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
     5c6:	9c 01       	movw	r18, r24
     5c8:	22 0f       	add	r18, r18
     5ca:	33 1f       	adc	r19, r19
					print16(&reg_);
     5cc:	30 93 59 03 	sts	0x0359, r19	; 0x800359 <__data_end+0x1>
     5d0:	20 93 58 03 	sts	0x0358, r18	; 0x800358 <__data_end>
					if (reg==0)
     5d4:	9a 8f       	std	Y+26, r25	; 0x1a
     5d6:	89 8f       	std	Y+25, r24	; 0x19
     5d8:	df 92       	push	r13
     5da:	cf 92       	push	r12
     5dc:	1e d6       	rcall	.+3132   	; 0x121a <printf>
					{
						incr=0;
     5de:	ce 01       	movw	r24, r28
     5e0:	49 96       	adiw	r24, 0x19	; 25
     5e2:	95 de       	rcall	.-726    	; 0x30e <print16>
     5e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
						printf("\n");	
     5e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     5e8:	0f 90       	pop	r0
     5ea:	0f 90       	pop	r0
     5ec:	00 97       	sbiw	r24, 0x00	; 0
     5ee:	41 f4       	brne	.+16     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
					}
					else if (reg>0)
     5f0:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <incr+0x1>
     5f4:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <incr>
						{
							cli();
							incr=1;
     5f8:	8a e0       	ldi	r24, 0x0A	; 10
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	21 d6       	rcall	.+3138   	; 0x1240 <putchar>
     5fe:	15 cf       	rjmp	.-470    	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     600:	18 16       	cp	r1, r24
     602:	19 06       	cpc	r1, r25
							printf(" yes\n");
     604:	64 f4       	brge	.+24     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
     606:	f8 94       	cli
     608:	81 e0       	ldi	r24, 0x01	; 1
     60a:	90 e0       	ldi	r25, 0x00	; 0
							
							sei();
     60c:	90 93 0c 02 	sts	0x020C, r25	; 0x80020c <incr+0x1>
						}
						else
						{	cli();
     610:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <incr>
							incr=-1;
     614:	8d e1       	ldi	r24, 0x1D	; 29
     616:	92 e0       	ldi	r25, 0x02	; 2
     618:	18 d6       	rcall	.+3120   	; 0x124a <puts>
     61a:	78 94       	sei
     61c:	06 cf       	rjmp	.-500    	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
							printf(" no\n");
     61e:	f8 94       	cli
     620:	4f ef       	ldi	r20, 0xFF	; 255
     622:	5f ef       	ldi	r21, 0xFF	; 255
     624:	50 93 0c 02 	sts	0x020C, r21	; 0x80020c <incr+0x1>
			////	//print16ln(&pop);
			////}
			
			
		#endif  
	}
     628:	40 93 0b 02 	sts	0x020B, r20	; 0x80020b <incr>
     62c:	82 e2       	ldi	r24, 0x22	; 34
     62e:	92 e0       	ldi	r25, 0x02	; 2
     630:	0c d6       	rcall	.+3096   	; 0x124a <puts>
     632:	78 94       	sei
     634:	fa ce       	rjmp	.-524    	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>

00000636 <mpu6050_readByte>:
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     636:	cf 93       	push	r28
     638:	c8 2f       	mov	r28, r24
     63a:	80 ed       	ldi	r24, 0xD0	; 208
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	f3 d1       	rcall	.+998    	; 0xa26 <i2c_start>
     640:	8c 2f       	mov	r24, r28
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	46 d2       	rcall	.+1164   	; 0xad2 <i2c_write>
     646:	35 d2       	rcall	.+1130   	; 0xab2 <i2c_stop>
     648:	81 ed       	ldi	r24, 0xD1	; 209
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	ec d1       	rcall	.+984    	; 0xa26 <i2c_start>
     64e:	7c d2       	rcall	.+1272   	; 0xb48 <i2c_readNak>
     650:	c8 2f       	mov	r28, r24
     652:	2f d2       	rcall	.+1118   	; 0xab2 <i2c_stop>
     654:	8c 2f       	mov	r24, r28
     656:	cf 91       	pop	r28
     658:	08 95       	ret

0000065a <mpu6050_read_gyroX>:
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	83 e4       	ldi	r24, 0x43	; 67
     660:	ea df       	rcall	.-44     	; 0x636 <mpu6050_readByte>
     662:	c8 2f       	mov	r28, r24
     664:	d0 e0       	ldi	r29, 0x00	; 0
     666:	dc 2f       	mov	r29, r28
     668:	cc 27       	eor	r28, r28
     66a:	84 e4       	ldi	r24, 0x44	; 68
     66c:	e4 df       	rcall	.-56     	; 0x636 <mpu6050_readByte>
     66e:	9e 01       	movw	r18, r28
     670:	28 2b       	or	r18, r24
     672:	c9 01       	movw	r24, r18
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	08 95       	ret

0000067a <mpu6050_read_gyroY>:
     67a:	cf 93       	push	r28
     67c:	df 93       	push	r29
     67e:	85 e4       	ldi	r24, 0x45	; 69
     680:	da df       	rcall	.-76     	; 0x636 <mpu6050_readByte>
     682:	c8 2f       	mov	r28, r24
     684:	d0 e0       	ldi	r29, 0x00	; 0
     686:	dc 2f       	mov	r29, r28
     688:	cc 27       	eor	r28, r28
     68a:	86 e4       	ldi	r24, 0x46	; 70
     68c:	d4 df       	rcall	.-88     	; 0x636 <mpu6050_readByte>
     68e:	9e 01       	movw	r18, r28
     690:	28 2b       	or	r18, r24
     692:	c9 01       	movw	r24, r18
     694:	df 91       	pop	r29
     696:	cf 91       	pop	r28
     698:	08 95       	ret

0000069a <mpu6050_read_gyroZ>:
     69a:	cf 93       	push	r28
     69c:	df 93       	push	r29
     69e:	87 e4       	ldi	r24, 0x47	; 71
     6a0:	ca df       	rcall	.-108    	; 0x636 <mpu6050_readByte>
     6a2:	c8 2f       	mov	r28, r24
     6a4:	d0 e0       	ldi	r29, 0x00	; 0
     6a6:	dc 2f       	mov	r29, r28
     6a8:	cc 27       	eor	r28, r28
     6aa:	88 e4       	ldi	r24, 0x48	; 72
     6ac:	c4 df       	rcall	.-120    	; 0x636 <mpu6050_readByte>
     6ae:	9e 01       	movw	r18, r28
     6b0:	28 2b       	or	r18, r24
     6b2:	c9 01       	movw	r24, r18
     6b4:	df 91       	pop	r29
     6b6:	cf 91       	pop	r28
     6b8:	08 95       	ret

000006ba <mpu6050_calibrate_gyro>:
     6ba:	cf 92       	push	r12
     6bc:	df 92       	push	r13
     6be:	ef 92       	push	r14
     6c0:	ff 92       	push	r15
     6c2:	0f 93       	push	r16
     6c4:	1f 93       	push	r17
     6c6:	cf 93       	push	r28
     6c8:	df 93       	push	r29
     6ca:	6c 01       	movw	r12, r24
     6cc:	7b 01       	movw	r14, r22
     6ce:	8a 01       	movw	r16, r20
     6d0:	86 e2       	ldi	r24, 0x26	; 38
     6d2:	93 e0       	ldi	r25, 0x03	; 3
     6d4:	ba d5       	rcall	.+2932   	; 0x124a <puts>
     6d6:	c4 e1       	ldi	r28, 0x14	; 20
     6d8:	d0 e0       	ldi	r29, 0x00	; 0
     6da:	bf df       	rcall	.-130    	; 0x65a <mpu6050_read_gyroX>
     6dc:	f6 01       	movw	r30, r12
     6de:	40 81       	ld	r20, Z
     6e0:	51 81       	ldd	r21, Z+1	; 0x01
     6e2:	62 81       	ldd	r22, Z+2	; 0x02
     6e4:	73 81       	ldd	r23, Z+3	; 0x03
     6e6:	48 0f       	add	r20, r24
     6e8:	59 1f       	adc	r21, r25
     6ea:	61 1d       	adc	r22, r1
     6ec:	71 1d       	adc	r23, r1
     6ee:	40 83       	st	Z, r20
     6f0:	51 83       	std	Z+1, r21	; 0x01
     6f2:	62 83       	std	Z+2, r22	; 0x02
     6f4:	73 83       	std	Z+3, r23	; 0x03
     6f6:	c1 df       	rcall	.-126    	; 0x67a <mpu6050_read_gyroY>
     6f8:	f7 01       	movw	r30, r14
     6fa:	40 81       	ld	r20, Z
     6fc:	51 81       	ldd	r21, Z+1	; 0x01
     6fe:	62 81       	ldd	r22, Z+2	; 0x02
     700:	73 81       	ldd	r23, Z+3	; 0x03
     702:	48 0f       	add	r20, r24
     704:	59 1f       	adc	r21, r25
     706:	61 1d       	adc	r22, r1
     708:	71 1d       	adc	r23, r1
     70a:	40 83       	st	Z, r20
     70c:	51 83       	std	Z+1, r21	; 0x01
     70e:	62 83       	std	Z+2, r22	; 0x02
     710:	73 83       	std	Z+3, r23	; 0x03
     712:	c3 df       	rcall	.-122    	; 0x69a <mpu6050_read_gyroZ>
     714:	f8 01       	movw	r30, r16
     716:	40 81       	ld	r20, Z
     718:	51 81       	ldd	r21, Z+1	; 0x01
     71a:	62 81       	ldd	r22, Z+2	; 0x02
     71c:	73 81       	ldd	r23, Z+3	; 0x03
     71e:	48 0f       	add	r20, r24
     720:	59 1f       	adc	r21, r25
     722:	61 1d       	adc	r22, r1
     724:	71 1d       	adc	r23, r1
     726:	40 83       	st	Z, r20
     728:	51 83       	std	Z+1, r21	; 0x01
     72a:	62 83       	std	Z+2, r22	; 0x02
     72c:	73 83       	std	Z+3, r23	; 0x03
     72e:	21 97       	sbiw	r28, 0x01	; 1
     730:	a1 f6       	brne	.-88     	; 0x6da <mpu6050_calibrate_gyro+0x20>
     732:	f6 01       	movw	r30, r12
     734:	60 81       	ld	r22, Z
     736:	71 81       	ldd	r23, Z+1	; 0x01
     738:	82 81       	ldd	r24, Z+2	; 0x02
     73a:	93 81       	ldd	r25, Z+3	; 0x03
     73c:	99 23       	and	r25, r25
     73e:	ac f4       	brge	.+42     	; 0x76a <mpu6050_calibrate_gyro+0xb0>
     740:	9b 01       	movw	r18, r22
     742:	77 23       	and	r23, r23
     744:	24 f4       	brge	.+8      	; 0x74e <mpu6050_calibrate_gyro+0x94>
     746:	22 27       	eor	r18, r18
     748:	33 27       	eor	r19, r19
     74a:	26 1b       	sub	r18, r22
     74c:	37 0b       	sbc	r19, r23
     74e:	c9 01       	movw	r24, r18
     750:	64 e1       	ldi	r22, 0x14	; 20
     752:	70 e0       	ldi	r23, 0x00	; 0
     754:	90 d4       	rcall	.+2336   	; 0x1076 <__divmodhi4>
     756:	cb 01       	movw	r24, r22
     758:	77 0f       	add	r23, r23
     75a:	aa 0b       	sbc	r26, r26
     75c:	bb 0b       	sbc	r27, r27
     75e:	f6 01       	movw	r30, r12
     760:	80 83       	st	Z, r24
     762:	91 83       	std	Z+1, r25	; 0x01
     764:	a2 83       	std	Z+2, r26	; 0x02
     766:	b3 83       	std	Z+3, r27	; 0x03
     768:	0a c0       	rjmp	.+20     	; 0x77e <mpu6050_calibrate_gyro+0xc4>
     76a:	24 e1       	ldi	r18, 0x14	; 20
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	40 e0       	ldi	r20, 0x00	; 0
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	94 d4       	rcall	.+2344   	; 0x109c <__divmodsi4>
     774:	f6 01       	movw	r30, r12
     776:	20 83       	st	Z, r18
     778:	31 83       	std	Z+1, r19	; 0x01
     77a:	42 83       	std	Z+2, r20	; 0x02
     77c:	53 83       	std	Z+3, r21	; 0x03
     77e:	f7 01       	movw	r30, r14
     780:	60 81       	ld	r22, Z
     782:	71 81       	ldd	r23, Z+1	; 0x01
     784:	82 81       	ldd	r24, Z+2	; 0x02
     786:	93 81       	ldd	r25, Z+3	; 0x03
     788:	99 23       	and	r25, r25
     78a:	ac f4       	brge	.+42     	; 0x7b6 <mpu6050_calibrate_gyro+0xfc>
     78c:	9b 01       	movw	r18, r22
     78e:	77 23       	and	r23, r23
     790:	24 f4       	brge	.+8      	; 0x79a <mpu6050_calibrate_gyro+0xe0>
     792:	22 27       	eor	r18, r18
     794:	33 27       	eor	r19, r19
     796:	26 1b       	sub	r18, r22
     798:	37 0b       	sbc	r19, r23
     79a:	c9 01       	movw	r24, r18
     79c:	64 e1       	ldi	r22, 0x14	; 20
     79e:	70 e0       	ldi	r23, 0x00	; 0
     7a0:	6a d4       	rcall	.+2260   	; 0x1076 <__divmodhi4>
     7a2:	cb 01       	movw	r24, r22
     7a4:	77 0f       	add	r23, r23
     7a6:	aa 0b       	sbc	r26, r26
     7a8:	bb 0b       	sbc	r27, r27
     7aa:	f7 01       	movw	r30, r14
     7ac:	80 83       	st	Z, r24
     7ae:	91 83       	std	Z+1, r25	; 0x01
     7b0:	a2 83       	std	Z+2, r26	; 0x02
     7b2:	b3 83       	std	Z+3, r27	; 0x03
     7b4:	0a c0       	rjmp	.+20     	; 0x7ca <mpu6050_calibrate_gyro+0x110>
     7b6:	24 e1       	ldi	r18, 0x14	; 20
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	40 e0       	ldi	r20, 0x00	; 0
     7bc:	50 e0       	ldi	r21, 0x00	; 0
     7be:	6e d4       	rcall	.+2268   	; 0x109c <__divmodsi4>
     7c0:	f7 01       	movw	r30, r14
     7c2:	20 83       	st	Z, r18
     7c4:	31 83       	std	Z+1, r19	; 0x01
     7c6:	42 83       	std	Z+2, r20	; 0x02
     7c8:	53 83       	std	Z+3, r21	; 0x03
     7ca:	f8 01       	movw	r30, r16
     7cc:	60 81       	ld	r22, Z
     7ce:	71 81       	ldd	r23, Z+1	; 0x01
     7d0:	82 81       	ldd	r24, Z+2	; 0x02
     7d2:	93 81       	ldd	r25, Z+3	; 0x03
     7d4:	99 23       	and	r25, r25
     7d6:	ac f4       	brge	.+42     	; 0x802 <mpu6050_calibrate_gyro+0x148>
     7d8:	9b 01       	movw	r18, r22
     7da:	77 23       	and	r23, r23
     7dc:	24 f4       	brge	.+8      	; 0x7e6 <mpu6050_calibrate_gyro+0x12c>
     7de:	22 27       	eor	r18, r18
     7e0:	33 27       	eor	r19, r19
     7e2:	26 1b       	sub	r18, r22
     7e4:	37 0b       	sbc	r19, r23
     7e6:	c9 01       	movw	r24, r18
     7e8:	64 e1       	ldi	r22, 0x14	; 20
     7ea:	70 e0       	ldi	r23, 0x00	; 0
     7ec:	44 d4       	rcall	.+2184   	; 0x1076 <__divmodhi4>
     7ee:	cb 01       	movw	r24, r22
     7f0:	77 0f       	add	r23, r23
     7f2:	aa 0b       	sbc	r26, r26
     7f4:	bb 0b       	sbc	r27, r27
     7f6:	f8 01       	movw	r30, r16
     7f8:	80 83       	st	Z, r24
     7fa:	91 83       	std	Z+1, r25	; 0x01
     7fc:	a2 83       	std	Z+2, r26	; 0x02
     7fe:	b3 83       	std	Z+3, r27	; 0x03
     800:	0a c0       	rjmp	.+20     	; 0x816 <mpu6050_calibrate_gyro+0x15c>
     802:	24 e1       	ldi	r18, 0x14	; 20
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	40 e0       	ldi	r20, 0x00	; 0
     808:	50 e0       	ldi	r21, 0x00	; 0
     80a:	48 d4       	rcall	.+2192   	; 0x109c <__divmodsi4>
     80c:	f8 01       	movw	r30, r16
     80e:	20 83       	st	Z, r18
     810:	31 83       	std	Z+1, r19	; 0x01
     812:	42 83       	std	Z+2, r20	; 0x02
     814:	53 83       	std	Z+3, r21	; 0x03
     816:	df 91       	pop	r29
     818:	cf 91       	pop	r28
     81a:	1f 91       	pop	r17
     81c:	0f 91       	pop	r16
     81e:	ff 90       	pop	r15
     820:	ef 90       	pop	r14
     822:	df 90       	pop	r13
     824:	cf 90       	pop	r12
     826:	08 95       	ret

00000828 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     828:	cf 93       	push	r28
     82a:	df 93       	push	r29
     82c:	d8 2f       	mov	r29, r24
     82e:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     830:	80 ed       	ldi	r24, 0xD0	; 208
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	f8 d0       	rcall	.+496    	; 0xa26 <i2c_start>
	i2c_write(wereToWrite);
     836:	8d 2f       	mov	r24, r29
     838:	90 e0       	ldi	r25, 0x00	; 0
	i2c_write(byteToWrite);
     83a:	4b d1       	rcall	.+662    	; 0xad2 <i2c_write>
     83c:	8c 2f       	mov	r24, r28
	i2c_stop();
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	48 d1       	rcall	.+656    	; 0xad2 <i2c_write>
}
     842:	37 d1       	rcall	.+622    	; 0xab2 <i2c_stop>
     844:	df 91       	pop	r29
     846:	cf 91       	pop	r28
     848:	08 95       	ret

0000084a <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     84a:	af 92       	push	r10
     84c:	bf 92       	push	r11
     84e:	cf 92       	push	r12
     850:	df 92       	push	r13
     852:	ff 92       	push	r15
     854:	0f 93       	push	r16
     856:	1f 93       	push	r17
     858:	cf 93       	push	r28
     85a:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     85c:	66 23       	and	r22, r22
     85e:	a1 f1       	breq	.+104    	; 0x8c8 <mpu6050_readBytes+0x7e>
     860:	c5 2f       	mov	r28, r21
     862:	d4 2f       	mov	r29, r20
     864:	f6 2e       	mov	r15, r22
     866:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     868:	80 ed       	ldi	r24, 0xD0	; 208
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	dc d0       	rcall	.+440    	; 0xa26 <i2c_start>
		i2c_write(regAddr);
     86e:	81 2f       	mov	r24, r17
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	2f d1       	rcall	.+606    	; 0xad2 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     874:	85 e3       	ldi	r24, 0x35	; 53
     876:	8a 95       	dec	r24
     878:	f1 f7       	brne	.-4      	; 0x876 <mpu6050_readBytes+0x2c>
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     87a:	00 00       	nop
     87c:	81 ed       	ldi	r24, 0xD1	; 209
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	d2 d0       	rcall	.+420    	; 0xa26 <i2c_start>
     882:	0d 2f       	mov	r16, r29
     884:	1c 2f       	mov	r17, r28
     886:	cc 24       	eor	r12, r12
     888:	ca 94       	dec	r12
     88a:	cf 0c       	add	r12, r15
     88c:	d1 2c       	mov	r13, r1
     88e:	ef ef       	ldi	r30, 0xFF	; 255
     890:	ce 1a       	sub	r12, r30
     892:	de 0a       	sbc	r13, r30
     894:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     896:	d0 e0       	ldi	r29, 0x00	; 0
     898:	af 2c       	mov	r10, r15
     89a:	b1 2c       	mov	r11, r1
     89c:	f1 e0       	ldi	r31, 0x01	; 1
     89e:	af 1a       	sub	r10, r31
     8a0:	b1 08       	sbc	r11, r1
     8a2:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     8a4:	bd 06       	cpc	r11, r29
     8a6:	21 f4       	brne	.+8      	; 0x8b0 <mpu6050_readBytes+0x66>
     8a8:	4f d1       	rcall	.+670    	; 0xb48 <i2c_readNak>
     8aa:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     8ac:	80 83       	st	Z, r24
     8ae:	03 c0       	rjmp	.+6      	; 0x8b6 <mpu6050_readBytes+0x6c>
     8b0:	31 d1       	rcall	.+610    	; 0xb14 <i2c_readAck>
     8b2:	f8 01       	movw	r30, r16
     8b4:	80 83       	st	Z, r24
     8b6:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     8b8:	0f 5f       	subi	r16, 0xFF	; 255
     8ba:	1f 4f       	sbci	r17, 0xFF	; 255
     8bc:	cc 15       	cp	r28, r12
     8be:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     8c0:	81 f7       	brne	.-32     	; 0x8a2 <mpu6050_readBytes+0x58>
     8c2:	cf 2d       	mov	r28, r15
     8c4:	f6 d0       	rcall	.+492    	; 0xab2 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     8c6:	01 c0       	rjmp	.+2      	; 0x8ca <mpu6050_readBytes+0x80>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     8c8:	c0 e0       	ldi	r28, 0x00	; 0
     8ca:	8c 2f       	mov	r24, r28
     8cc:	df 91       	pop	r29
     8ce:	cf 91       	pop	r28
     8d0:	1f 91       	pop	r17
     8d2:	0f 91       	pop	r16
     8d4:	ff 90       	pop	r15
     8d6:	df 90       	pop	r13
     8d8:	cf 90       	pop	r12
     8da:	bf 90       	pop	r11
     8dc:	af 90       	pop	r10
     8de:	08 95       	ret

000008e0 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     8e0:	6f 92       	push	r6
     8e2:	7f 92       	push	r7
     8e4:	8f 92       	push	r8
     8e6:	9f 92       	push	r9
     8e8:	af 92       	push	r10
     8ea:	bf 92       	push	r11
     8ec:	cf 92       	push	r12
     8ee:	df 92       	push	r13
     8f0:	ef 92       	push	r14
     8f2:	ff 92       	push	r15
     8f4:	0f 93       	push	r16
     8f6:	1f 93       	push	r17
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	cd b7       	in	r28, 0x3d	; 61
     8fe:	de b7       	in	r29, 0x3e	; 62
     900:	2e 97       	sbiw	r28, 0x0e	; 14
     902:	0f b6       	in	r0, 0x3f	; 63
     904:	f8 94       	cli
     906:	de bf       	out	0x3e, r29	; 62
     908:	0f be       	out	0x3f, r0	; 63
     90a:	cd bf       	out	0x3d, r28	; 61
     90c:	4c 01       	movw	r8, r24
     90e:	5b 01       	movw	r10, r22
     910:	6a 01       	movw	r12, r20
     912:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     914:	ae 01       	movw	r20, r28
     916:	4f 5f       	subi	r20, 0xFF	; 255
     918:	5f 4f       	sbci	r21, 0xFF	; 255
     91a:	6e e0       	ldi	r22, 0x0E	; 14
     91c:	8b e3       	ldi	r24, 0x3B	; 59
     91e:	95 df       	rcall	.-214    	; 0x84a <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     920:	89 81       	ldd	r24, Y+1	; 0x01
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	98 2f       	mov	r25, r24
     926:	88 27       	eor	r24, r24
     928:	2a 81       	ldd	r18, Y+2	; 0x02
     92a:	82 2b       	or	r24, r18
     92c:	f4 01       	movw	r30, r8
     92e:	91 83       	std	Z+1, r25	; 0x01
     930:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     932:	8b 81       	ldd	r24, Y+3	; 0x03
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	98 2f       	mov	r25, r24
     938:	88 27       	eor	r24, r24
     93a:	2c 81       	ldd	r18, Y+4	; 0x04
     93c:	82 2b       	or	r24, r18
     93e:	f5 01       	movw	r30, r10
     940:	91 83       	std	Z+1, r25	; 0x01
     942:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     944:	8d 81       	ldd	r24, Y+5	; 0x05
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	98 2f       	mov	r25, r24
     94a:	88 27       	eor	r24, r24
     94c:	2e 81       	ldd	r18, Y+6	; 0x06
     94e:	82 2b       	or	r24, r18
     950:	f6 01       	movw	r30, r12
     952:	91 83       	std	Z+1, r25	; 0x01
     954:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     956:	89 85       	ldd	r24, Y+9	; 0x09
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	98 2f       	mov	r25, r24
     95c:	88 27       	eor	r24, r24
     95e:	2a 85       	ldd	r18, Y+10	; 0x0a
     960:	82 2b       	or	r24, r18
     962:	f3 01       	movw	r30, r6
     964:	91 83       	std	Z+1, r25	; 0x01
     966:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     968:	8b 85       	ldd	r24, Y+11	; 0x0b
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	98 2f       	mov	r25, r24
     96e:	88 27       	eor	r24, r24
     970:	2c 85       	ldd	r18, Y+12	; 0x0c
     972:	82 2b       	or	r24, r18
     974:	f8 01       	movw	r30, r16
     976:	91 83       	std	Z+1, r25	; 0x01
     978:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     97a:	8d 85       	ldd	r24, Y+13	; 0x0d
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	98 2f       	mov	r25, r24
     980:	88 27       	eor	r24, r24
     982:	2e 85       	ldd	r18, Y+14	; 0x0e
     984:	82 2b       	or	r24, r18
     986:	f7 01       	movw	r30, r14
     988:	91 83       	std	Z+1, r25	; 0x01
     98a:	80 83       	st	Z, r24
     98c:	2e 96       	adiw	r28, 0x0e	; 14
     98e:	0f b6       	in	r0, 0x3f	; 63
     990:	f8 94       	cli
     992:	de bf       	out	0x3e, r29	; 62
     994:	0f be       	out	0x3f, r0	; 63
     996:	cd bf       	out	0x3d, r28	; 61
     998:	df 91       	pop	r29
     99a:	cf 91       	pop	r28
     99c:	1f 91       	pop	r17
     99e:	0f 91       	pop	r16
     9a0:	ff 90       	pop	r15
     9a2:	ef 90       	pop	r14
     9a4:	df 90       	pop	r13
     9a6:	cf 90       	pop	r12
     9a8:	bf 90       	pop	r11
     9aa:	af 90       	pop	r10
     9ac:	9f 90       	pop	r9
     9ae:	8f 90       	pop	r8
     9b0:	7f 90       	pop	r7
     9b2:	6f 90       	pop	r6
     9b4:	08 95       	ret

000009b6 <setup_timer4>:
	sbi (TIMSK3, TOIE3);
}*/
/*-----------Timter 1-----------*/
void setup_timer4(void)
{
    sbi (TCCR4B, CS40);//prescakaer 256
     9b6:	e1 ea       	ldi	r30, 0xA1	; 161
     9b8:	f0 e0       	ldi	r31, 0x00	; 0
     9ba:	80 81       	ld	r24, Z
     9bc:	81 60       	ori	r24, 0x01	; 1
     9be:	80 83       	st	Z, r24
    sbi (TCCR4A, WGM40);//8 bit phase correct PWM
     9c0:	e0 ea       	ldi	r30, 0xA0	; 160
     9c2:	f0 e0       	ldi	r31, 0x00	; 0
     9c4:	80 81       	ld	r24, Z
     9c6:	81 60       	ori	r24, 0x01	; 1
     9c8:	80 83       	st	Z, r24
	
	//sbi (TCCR4A,COM4A0);
	sbi (TCCR4A,COM4A1);
     9ca:	80 81       	ld	r24, Z
     9cc:	80 68       	ori	r24, 0x80	; 128
     9ce:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4B0);
	sbi (TCCR4A,COM4B1);
     9d0:	80 81       	ld	r24, Z
     9d2:	80 62       	ori	r24, 0x20	; 32
     9d4:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4C0);
	sbi (TCCR4A,COM4C1);
     9d6:	80 81       	ld	r24, Z
     9d8:	88 60       	ori	r24, 0x08	; 8
     9da:	80 83       	st	Z, r24
     9dc:	08 95       	ret

000009de <setup_timer3>:
void setup_timer3(void)
{
	//64 pres, 250.000 hz 0.000004s
	//sbi (TCCR5B, CS50);//only this no prescaling
	
	sbi (TCCR3B, CS30);//only this 8
     9de:	e1 e9       	ldi	r30, 0x91	; 145
     9e0:	f0 e0       	ldi	r31, 0x00	; 0
     9e2:	80 81       	ld	r24, Z
     9e4:	81 60       	ori	r24, 0x01	; 1
     9e6:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR3B, WGM32);//OCR4A compare interrupt
     9e8:	80 81       	ld	r24, Z
     9ea:	88 60       	ori	r24, 0x08	; 8
     9ec:	80 83       	st	Z, r24
     9ee:	08 95       	ret

000009f0 <Enable_timer3_compare_interrupt>:
}
void Enable_timer3_compare_interrupt()
{
	sbi (TIMSK3, OCIE3A);
     9f0:	e1 e7       	ldi	r30, 0x71	; 113
     9f2:	f0 e0       	ldi	r31, 0x00	; 0
     9f4:	80 81       	ld	r24, Z
     9f6:	82 60       	ori	r24, 0x02	; 2
     9f8:	80 83       	st	Z, r24
     9fa:	08 95       	ret

000009fc <setup_timer1>:
}
void setup_timer1(void)
{
	sbi (TCCR5B, CS50);//only this 8
     9fc:	e1 e2       	ldi	r30, 0x21	; 33
     9fe:	f1 e0       	ldi	r31, 0x01	; 1
     a00:	80 81       	ld	r24, Z
     a02:	81 60       	ori	r24, 0x01	; 1
     a04:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR5B, WGM52);//OCR4A compare interrupt
     a06:	80 81       	ld	r24, Z
     a08:	88 60       	ori	r24, 0x08	; 8
     a0a:	80 83       	st	Z, r24
     a0c:	08 95       	ret

00000a0e <Enable_timer1_compare_interrupt>:
	
}
void Enable_timer1_compare_interrupt()
{
	sbi (TIMSK5, OCIE5A);
     a0e:	e3 e7       	ldi	r30, 0x73	; 115
     a10:	f0 e0       	ldi	r31, 0x00	; 0
     a12:	80 81       	ld	r24, Z
     a14:	82 60       	ori	r24, 0x02	; 2
     a16:	80 83       	st	Z, r24
     a18:	08 95       	ret

00000a1a <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     a1a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     a1e:	8c e0       	ldi	r24, 0x0C	; 12
     a20:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     a24:	08 95       	ret

00000a26 <i2c_start>:
     a26:	94 ea       	ldi	r25, 0xA4	; 164
     a28:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     a2c:	4f ef       	ldi	r20, 0xFF	; 255
     a2e:	50 e0       	ldi	r21, 0x00	; 0
     a30:	60 e0       	ldi	r22, 0x00	; 0
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	ec eb       	ldi	r30, 0xBC	; 188
     a36:	f0 e0       	ldi	r31, 0x00	; 0
     a38:	90 81       	ld	r25, Z
     a3a:	99 23       	and	r25, r25
     a3c:	34 f0       	brlt	.+12     	; 0xa4a <i2c_start+0x24>
     a3e:	41 50       	subi	r20, 0x01	; 1
     a40:	51 09       	sbc	r21, r1
     a42:	61 09       	sbc	r22, r1
     a44:	71 09       	sbc	r23, r1
     a46:	c0 f7       	brcc	.-16     	; 0xa38 <i2c_start+0x12>
     a48:	04 c0       	rjmp	.+8      	; 0xa52 <i2c_start+0x2c>
     a4a:	45 2b       	or	r20, r21
     a4c:	46 2b       	or	r20, r22
     a4e:	47 2b       	or	r20, r23
     a50:	41 f1       	breq	.+80     	; 0xaa2 <i2c_start+0x7c>
     a52:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     a56:	98 7f       	andi	r25, 0xF8	; 248
     a58:	98 30       	cpi	r25, 0x08	; 8
     a5a:	11 f0       	breq	.+4      	; 0xa60 <i2c_start+0x3a>
     a5c:	90 31       	cpi	r25, 0x10	; 16
     a5e:	19 f5       	brne	.+70     	; 0xaa6 <i2c_start+0x80>
     a60:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     a64:	84 e8       	ldi	r24, 0x84	; 132
     a66:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     a6a:	8f ef       	ldi	r24, 0xFF	; 255
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	a0 e0       	ldi	r26, 0x00	; 0
     a70:	b0 e0       	ldi	r27, 0x00	; 0
     a72:	ec eb       	ldi	r30, 0xBC	; 188
     a74:	f0 e0       	ldi	r31, 0x00	; 0
     a76:	20 81       	ld	r18, Z
     a78:	22 23       	and	r18, r18
     a7a:	2c f0       	brlt	.+10     	; 0xa86 <i2c_start+0x60>
     a7c:	01 97       	sbiw	r24, 0x01	; 1
     a7e:	a1 09       	sbc	r26, r1
     a80:	b1 09       	sbc	r27, r1
     a82:	c8 f7       	brcc	.-14     	; 0xa76 <i2c_start+0x50>
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <i2c_start+0x68>
     a86:	89 2b       	or	r24, r25
     a88:	8a 2b       	or	r24, r26
     a8a:	8b 2b       	or	r24, r27
     a8c:	71 f0       	breq	.+28     	; 0xaaa <i2c_start+0x84>
     a8e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     a92:	98 7f       	andi	r25, 0xF8	; 248
     a94:	98 31       	cpi	r25, 0x18	; 24
     a96:	59 f0       	breq	.+22     	; 0xaae <i2c_start+0x88>
     a98:	81 e0       	ldi	r24, 0x01	; 1
     a9a:	90 34       	cpi	r25, 0x40	; 64
     a9c:	49 f4       	brne	.+18     	; 0xab0 <i2c_start+0x8a>
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	08 95       	ret
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	08 95       	ret
     aa6:	81 e0       	ldi	r24, 0x01	; 1
     aa8:	08 95       	ret
     aaa:	81 e0       	ldi	r24, 0x01	; 1
     aac:	08 95       	ret
     aae:	80 e0       	ldi	r24, 0x00	; 0
     ab0:	08 95       	ret

00000ab2 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     ab2:	84 e9       	ldi	r24, 0x94	; 148
     ab4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     ab8:	80 e0       	ldi	r24, 0x00	; 0
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	ec eb       	ldi	r30, 0xBC	; 188
     abe:	f0 e0       	ldi	r31, 0x00	; 0
     ac0:	20 81       	ld	r18, Z
     ac2:	24 ff       	sbrs	r18, 4
     ac4:	05 c0       	rjmp	.+10     	; 0xad0 <i2c_stop+0x1e>
     ac6:	01 96       	adiw	r24, 0x01	; 1
     ac8:	81 15       	cp	r24, r1
     aca:	21 e0       	ldi	r18, 0x01	; 1
     acc:	92 07       	cpc	r25, r18
     ace:	c1 f7       	brne	.-16     	; 0xac0 <i2c_stop+0xe>
     ad0:	08 95       	ret

00000ad2 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     ad2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     ad6:	84 e8       	ldi	r24, 0x84	; 132
     ad8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     adc:	8f ef       	ldi	r24, 0xFF	; 255
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	a0 e0       	ldi	r26, 0x00	; 0
     ae2:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     ae4:	ec eb       	ldi	r30, 0xBC	; 188
     ae6:	f0 e0       	ldi	r31, 0x00	; 0
     ae8:	20 81       	ld	r18, Z
     aea:	22 23       	and	r18, r18
     aec:	2c f0       	brlt	.+10     	; 0xaf8 <i2c_write+0x26>
     aee:	01 97       	sbiw	r24, 0x01	; 1
     af0:	a1 09       	sbc	r26, r1
     af2:	b1 09       	sbc	r27, r1
     af4:	c8 f7       	brcc	.-14     	; 0xae8 <i2c_write+0x16>
     af6:	04 c0       	rjmp	.+8      	; 0xb00 <i2c_write+0x2e>
	if(i2c_timer == 0)
     af8:	89 2b       	or	r24, r25
     afa:	8a 2b       	or	r24, r26
     afc:	8b 2b       	or	r24, r27
     afe:	41 f0       	breq	.+16     	; 0xb10 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     b00:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     b04:	98 7f       	andi	r25, 0xF8	; 248
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	98 32       	cpi	r25, 0x28	; 40
     b0a:	19 f4       	brne	.+6      	; 0xb12 <i2c_write+0x40>
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	08 95       	ret
     b10:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     b12:	08 95       	ret

00000b14 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     b14:	84 ec       	ldi	r24, 0xC4	; 196
     b16:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     b1a:	8f ef       	ldi	r24, 0xFF	; 255
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	a0 e0       	ldi	r26, 0x00	; 0
     b20:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     b22:	ec eb       	ldi	r30, 0xBC	; 188
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	20 81       	ld	r18, Z
     b28:	22 23       	and	r18, r18
     b2a:	2c f0       	brlt	.+10     	; 0xb36 <i2c_readAck+0x22>
     b2c:	01 97       	sbiw	r24, 0x01	; 1
     b2e:	a1 09       	sbc	r26, r1
     b30:	b1 09       	sbc	r27, r1
     b32:	c8 f7       	brcc	.-14     	; 0xb26 <i2c_readAck+0x12>
     b34:	04 c0       	rjmp	.+8      	; 0xb3e <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     b36:	89 2b       	or	r24, r25
     b38:	8a 2b       	or	r24, r26
     b3a:	8b 2b       	or	r24, r27
     b3c:	19 f0       	breq	.+6      	; 0xb44 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     b3e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     b42:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     b44:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     b46:	08 95       	ret

00000b48 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     b48:	84 e8       	ldi	r24, 0x84	; 132
     b4a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     b4e:	8f ef       	ldi	r24, 0xFF	; 255
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	a0 e0       	ldi	r26, 0x00	; 0
     b54:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     b56:	ec eb       	ldi	r30, 0xBC	; 188
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	20 81       	ld	r18, Z
     b5c:	22 23       	and	r18, r18
     b5e:	2c f0       	brlt	.+10     	; 0xb6a <i2c_readNak+0x22>
     b60:	01 97       	sbiw	r24, 0x01	; 1
     b62:	a1 09       	sbc	r26, r1
     b64:	b1 09       	sbc	r27, r1
     b66:	c8 f7       	brcc	.-14     	; 0xb5a <i2c_readNak+0x12>
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     b6a:	89 2b       	or	r24, r25
     b6c:	8a 2b       	or	r24, r26
     b6e:	8b 2b       	or	r24, r27
     b70:	19 f0       	breq	.+6      	; 0xb78 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     b72:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     b76:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     b78:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     b7a:	08 95       	ret

00000b7c <USART_Init>:
#include <avr/io.h>
#include <stdio.h>
void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     b7c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)ubrr;
     b80:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	UCSR0B = (1<<TXEN0);// | (1<<TXCIE0);
     b84:	88 e0       	ldi	r24, 0x08	; 8
     b86:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);//2 stop bit 8 bit
     b8a:	8e e0       	ldi	r24, 0x0E	; 14
     b8c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     b90:	08 95       	ret

00000b92 <__subsf3>:
     b92:	50 58       	subi	r21, 0x80	; 128

00000b94 <__addsf3>:
     b94:	bb 27       	eor	r27, r27
     b96:	aa 27       	eor	r26, r26
     b98:	0e d0       	rcall	.+28     	; 0xbb6 <__addsf3x>
     b9a:	4d c1       	rjmp	.+666    	; 0xe36 <__fp_round>
     b9c:	3e d1       	rcall	.+636    	; 0xe1a <__fp_pscA>
     b9e:	30 f0       	brcs	.+12     	; 0xbac <__addsf3+0x18>
     ba0:	43 d1       	rcall	.+646    	; 0xe28 <__fp_pscB>
     ba2:	20 f0       	brcs	.+8      	; 0xbac <__addsf3+0x18>
     ba4:	31 f4       	brne	.+12     	; 0xbb2 <__addsf3+0x1e>
     ba6:	9f 3f       	cpi	r25, 0xFF	; 255
     ba8:	11 f4       	brne	.+4      	; 0xbae <__addsf3+0x1a>
     baa:	1e f4       	brtc	.+6      	; 0xbb2 <__addsf3+0x1e>
     bac:	33 c1       	rjmp	.+614    	; 0xe14 <__fp_nan>
     bae:	0e f4       	brtc	.+2      	; 0xbb2 <__addsf3+0x1e>
     bb0:	e0 95       	com	r30
     bb2:	e7 fb       	bst	r30, 7
     bb4:	29 c1       	rjmp	.+594    	; 0xe08 <__fp_inf>

00000bb6 <__addsf3x>:
     bb6:	e9 2f       	mov	r30, r25
     bb8:	4f d1       	rcall	.+670    	; 0xe58 <__fp_split3>
     bba:	80 f3       	brcs	.-32     	; 0xb9c <__addsf3+0x8>
     bbc:	ba 17       	cp	r27, r26
     bbe:	62 07       	cpc	r22, r18
     bc0:	73 07       	cpc	r23, r19
     bc2:	84 07       	cpc	r24, r20
     bc4:	95 07       	cpc	r25, r21
     bc6:	18 f0       	brcs	.+6      	; 0xbce <__addsf3x+0x18>
     bc8:	71 f4       	brne	.+28     	; 0xbe6 <__addsf3x+0x30>
     bca:	9e f5       	brtc	.+102    	; 0xc32 <__addsf3x+0x7c>
     bcc:	67 c1       	rjmp	.+718    	; 0xe9c <__fp_zero>
     bce:	0e f4       	brtc	.+2      	; 0xbd2 <__addsf3x+0x1c>
     bd0:	e0 95       	com	r30
     bd2:	0b 2e       	mov	r0, r27
     bd4:	ba 2f       	mov	r27, r26
     bd6:	a0 2d       	mov	r26, r0
     bd8:	0b 01       	movw	r0, r22
     bda:	b9 01       	movw	r22, r18
     bdc:	90 01       	movw	r18, r0
     bde:	0c 01       	movw	r0, r24
     be0:	ca 01       	movw	r24, r20
     be2:	a0 01       	movw	r20, r0
     be4:	11 24       	eor	r1, r1
     be6:	ff 27       	eor	r31, r31
     be8:	59 1b       	sub	r21, r25
     bea:	99 f0       	breq	.+38     	; 0xc12 <__addsf3x+0x5c>
     bec:	59 3f       	cpi	r21, 0xF9	; 249
     bee:	50 f4       	brcc	.+20     	; 0xc04 <__addsf3x+0x4e>
     bf0:	50 3e       	cpi	r21, 0xE0	; 224
     bf2:	68 f1       	brcs	.+90     	; 0xc4e <__addsf3x+0x98>
     bf4:	1a 16       	cp	r1, r26
     bf6:	f0 40       	sbci	r31, 0x00	; 0
     bf8:	a2 2f       	mov	r26, r18
     bfa:	23 2f       	mov	r18, r19
     bfc:	34 2f       	mov	r19, r20
     bfe:	44 27       	eor	r20, r20
     c00:	58 5f       	subi	r21, 0xF8	; 248
     c02:	f3 cf       	rjmp	.-26     	; 0xbea <__addsf3x+0x34>
     c04:	46 95       	lsr	r20
     c06:	37 95       	ror	r19
     c08:	27 95       	ror	r18
     c0a:	a7 95       	ror	r26
     c0c:	f0 40       	sbci	r31, 0x00	; 0
     c0e:	53 95       	inc	r21
     c10:	c9 f7       	brne	.-14     	; 0xc04 <__addsf3x+0x4e>
     c12:	7e f4       	brtc	.+30     	; 0xc32 <__addsf3x+0x7c>
     c14:	1f 16       	cp	r1, r31
     c16:	ba 0b       	sbc	r27, r26
     c18:	62 0b       	sbc	r22, r18
     c1a:	73 0b       	sbc	r23, r19
     c1c:	84 0b       	sbc	r24, r20
     c1e:	ba f0       	brmi	.+46     	; 0xc4e <__addsf3x+0x98>
     c20:	91 50       	subi	r25, 0x01	; 1
     c22:	a1 f0       	breq	.+40     	; 0xc4c <__addsf3x+0x96>
     c24:	ff 0f       	add	r31, r31
     c26:	bb 1f       	adc	r27, r27
     c28:	66 1f       	adc	r22, r22
     c2a:	77 1f       	adc	r23, r23
     c2c:	88 1f       	adc	r24, r24
     c2e:	c2 f7       	brpl	.-16     	; 0xc20 <__addsf3x+0x6a>
     c30:	0e c0       	rjmp	.+28     	; 0xc4e <__addsf3x+0x98>
     c32:	ba 0f       	add	r27, r26
     c34:	62 1f       	adc	r22, r18
     c36:	73 1f       	adc	r23, r19
     c38:	84 1f       	adc	r24, r20
     c3a:	48 f4       	brcc	.+18     	; 0xc4e <__addsf3x+0x98>
     c3c:	87 95       	ror	r24
     c3e:	77 95       	ror	r23
     c40:	67 95       	ror	r22
     c42:	b7 95       	ror	r27
     c44:	f7 95       	ror	r31
     c46:	9e 3f       	cpi	r25, 0xFE	; 254
     c48:	08 f0       	brcs	.+2      	; 0xc4c <__addsf3x+0x96>
     c4a:	b3 cf       	rjmp	.-154    	; 0xbb2 <__addsf3+0x1e>
     c4c:	93 95       	inc	r25
     c4e:	88 0f       	add	r24, r24
     c50:	08 f0       	brcs	.+2      	; 0xc54 <__addsf3x+0x9e>
     c52:	99 27       	eor	r25, r25
     c54:	ee 0f       	add	r30, r30
     c56:	97 95       	ror	r25
     c58:	87 95       	ror	r24
     c5a:	08 95       	ret

00000c5c <__divsf3>:
     c5c:	0c d0       	rcall	.+24     	; 0xc76 <__divsf3x>
     c5e:	eb c0       	rjmp	.+470    	; 0xe36 <__fp_round>
     c60:	e3 d0       	rcall	.+454    	; 0xe28 <__fp_pscB>
     c62:	40 f0       	brcs	.+16     	; 0xc74 <__divsf3+0x18>
     c64:	da d0       	rcall	.+436    	; 0xe1a <__fp_pscA>
     c66:	30 f0       	brcs	.+12     	; 0xc74 <__divsf3+0x18>
     c68:	21 f4       	brne	.+8      	; 0xc72 <__divsf3+0x16>
     c6a:	5f 3f       	cpi	r21, 0xFF	; 255
     c6c:	19 f0       	breq	.+6      	; 0xc74 <__divsf3+0x18>
     c6e:	cc c0       	rjmp	.+408    	; 0xe08 <__fp_inf>
     c70:	51 11       	cpse	r21, r1
     c72:	15 c1       	rjmp	.+554    	; 0xe9e <__fp_szero>
     c74:	cf c0       	rjmp	.+414    	; 0xe14 <__fp_nan>

00000c76 <__divsf3x>:
     c76:	f0 d0       	rcall	.+480    	; 0xe58 <__fp_split3>
     c78:	98 f3       	brcs	.-26     	; 0xc60 <__divsf3+0x4>

00000c7a <__divsf3_pse>:
     c7a:	99 23       	and	r25, r25
     c7c:	c9 f3       	breq	.-14     	; 0xc70 <__divsf3+0x14>
     c7e:	55 23       	and	r21, r21
     c80:	b1 f3       	breq	.-20     	; 0xc6e <__divsf3+0x12>
     c82:	95 1b       	sub	r25, r21
     c84:	55 0b       	sbc	r21, r21
     c86:	bb 27       	eor	r27, r27
     c88:	aa 27       	eor	r26, r26
     c8a:	62 17       	cp	r22, r18
     c8c:	73 07       	cpc	r23, r19
     c8e:	84 07       	cpc	r24, r20
     c90:	38 f0       	brcs	.+14     	; 0xca0 <__divsf3_pse+0x26>
     c92:	9f 5f       	subi	r25, 0xFF	; 255
     c94:	5f 4f       	sbci	r21, 0xFF	; 255
     c96:	22 0f       	add	r18, r18
     c98:	33 1f       	adc	r19, r19
     c9a:	44 1f       	adc	r20, r20
     c9c:	aa 1f       	adc	r26, r26
     c9e:	a9 f3       	breq	.-22     	; 0xc8a <__divsf3_pse+0x10>
     ca0:	33 d0       	rcall	.+102    	; 0xd08 <__divsf3_pse+0x8e>
     ca2:	0e 2e       	mov	r0, r30
     ca4:	3a f0       	brmi	.+14     	; 0xcb4 <__divsf3_pse+0x3a>
     ca6:	e0 e8       	ldi	r30, 0x80	; 128
     ca8:	30 d0       	rcall	.+96     	; 0xd0a <__divsf3_pse+0x90>
     caa:	91 50       	subi	r25, 0x01	; 1
     cac:	50 40       	sbci	r21, 0x00	; 0
     cae:	e6 95       	lsr	r30
     cb0:	00 1c       	adc	r0, r0
     cb2:	ca f7       	brpl	.-14     	; 0xca6 <__divsf3_pse+0x2c>
     cb4:	29 d0       	rcall	.+82     	; 0xd08 <__divsf3_pse+0x8e>
     cb6:	fe 2f       	mov	r31, r30
     cb8:	27 d0       	rcall	.+78     	; 0xd08 <__divsf3_pse+0x8e>
     cba:	66 0f       	add	r22, r22
     cbc:	77 1f       	adc	r23, r23
     cbe:	88 1f       	adc	r24, r24
     cc0:	bb 1f       	adc	r27, r27
     cc2:	26 17       	cp	r18, r22
     cc4:	37 07       	cpc	r19, r23
     cc6:	48 07       	cpc	r20, r24
     cc8:	ab 07       	cpc	r26, r27
     cca:	b0 e8       	ldi	r27, 0x80	; 128
     ccc:	09 f0       	breq	.+2      	; 0xcd0 <__divsf3_pse+0x56>
     cce:	bb 0b       	sbc	r27, r27
     cd0:	80 2d       	mov	r24, r0
     cd2:	bf 01       	movw	r22, r30
     cd4:	ff 27       	eor	r31, r31
     cd6:	93 58       	subi	r25, 0x83	; 131
     cd8:	5f 4f       	sbci	r21, 0xFF	; 255
     cda:	2a f0       	brmi	.+10     	; 0xce6 <__divsf3_pse+0x6c>
     cdc:	9e 3f       	cpi	r25, 0xFE	; 254
     cde:	51 05       	cpc	r21, r1
     ce0:	68 f0       	brcs	.+26     	; 0xcfc <__divsf3_pse+0x82>
     ce2:	92 c0       	rjmp	.+292    	; 0xe08 <__fp_inf>
     ce4:	dc c0       	rjmp	.+440    	; 0xe9e <__fp_szero>
     ce6:	5f 3f       	cpi	r21, 0xFF	; 255
     ce8:	ec f3       	brlt	.-6      	; 0xce4 <__divsf3_pse+0x6a>
     cea:	98 3e       	cpi	r25, 0xE8	; 232
     cec:	dc f3       	brlt	.-10     	; 0xce4 <__divsf3_pse+0x6a>
     cee:	86 95       	lsr	r24
     cf0:	77 95       	ror	r23
     cf2:	67 95       	ror	r22
     cf4:	b7 95       	ror	r27
     cf6:	f7 95       	ror	r31
     cf8:	9f 5f       	subi	r25, 0xFF	; 255
     cfa:	c9 f7       	brne	.-14     	; 0xcee <__divsf3_pse+0x74>
     cfc:	88 0f       	add	r24, r24
     cfe:	91 1d       	adc	r25, r1
     d00:	96 95       	lsr	r25
     d02:	87 95       	ror	r24
     d04:	97 f9       	bld	r25, 7
     d06:	08 95       	ret
     d08:	e1 e0       	ldi	r30, 0x01	; 1
     d0a:	66 0f       	add	r22, r22
     d0c:	77 1f       	adc	r23, r23
     d0e:	88 1f       	adc	r24, r24
     d10:	bb 1f       	adc	r27, r27
     d12:	62 17       	cp	r22, r18
     d14:	73 07       	cpc	r23, r19
     d16:	84 07       	cpc	r24, r20
     d18:	ba 07       	cpc	r27, r26
     d1a:	20 f0       	brcs	.+8      	; 0xd24 <__divsf3_pse+0xaa>
     d1c:	62 1b       	sub	r22, r18
     d1e:	73 0b       	sbc	r23, r19
     d20:	84 0b       	sbc	r24, r20
     d22:	ba 0b       	sbc	r27, r26
     d24:	ee 1f       	adc	r30, r30
     d26:	88 f7       	brcc	.-30     	; 0xd0a <__divsf3_pse+0x90>
     d28:	e0 95       	com	r30
     d2a:	08 95       	ret

00000d2c <__fixsfsi>:
     d2c:	04 d0       	rcall	.+8      	; 0xd36 <__fixunssfsi>
     d2e:	68 94       	set
     d30:	b1 11       	cpse	r27, r1
     d32:	b5 c0       	rjmp	.+362    	; 0xe9e <__fp_szero>
     d34:	08 95       	ret

00000d36 <__fixunssfsi>:
     d36:	98 d0       	rcall	.+304    	; 0xe68 <__fp_splitA>
     d38:	88 f0       	brcs	.+34     	; 0xd5c <__fixunssfsi+0x26>
     d3a:	9f 57       	subi	r25, 0x7F	; 127
     d3c:	90 f0       	brcs	.+36     	; 0xd62 <__fixunssfsi+0x2c>
     d3e:	b9 2f       	mov	r27, r25
     d40:	99 27       	eor	r25, r25
     d42:	b7 51       	subi	r27, 0x17	; 23
     d44:	a0 f0       	brcs	.+40     	; 0xd6e <__fixunssfsi+0x38>
     d46:	d1 f0       	breq	.+52     	; 0xd7c <__fixunssfsi+0x46>
     d48:	66 0f       	add	r22, r22
     d4a:	77 1f       	adc	r23, r23
     d4c:	88 1f       	adc	r24, r24
     d4e:	99 1f       	adc	r25, r25
     d50:	1a f0       	brmi	.+6      	; 0xd58 <__fixunssfsi+0x22>
     d52:	ba 95       	dec	r27
     d54:	c9 f7       	brne	.-14     	; 0xd48 <__fixunssfsi+0x12>
     d56:	12 c0       	rjmp	.+36     	; 0xd7c <__fixunssfsi+0x46>
     d58:	b1 30       	cpi	r27, 0x01	; 1
     d5a:	81 f0       	breq	.+32     	; 0xd7c <__fixunssfsi+0x46>
     d5c:	9f d0       	rcall	.+318    	; 0xe9c <__fp_zero>
     d5e:	b1 e0       	ldi	r27, 0x01	; 1
     d60:	08 95       	ret
     d62:	9c c0       	rjmp	.+312    	; 0xe9c <__fp_zero>
     d64:	67 2f       	mov	r22, r23
     d66:	78 2f       	mov	r23, r24
     d68:	88 27       	eor	r24, r24
     d6a:	b8 5f       	subi	r27, 0xF8	; 248
     d6c:	39 f0       	breq	.+14     	; 0xd7c <__fixunssfsi+0x46>
     d6e:	b9 3f       	cpi	r27, 0xF9	; 249
     d70:	cc f3       	brlt	.-14     	; 0xd64 <__fixunssfsi+0x2e>
     d72:	86 95       	lsr	r24
     d74:	77 95       	ror	r23
     d76:	67 95       	ror	r22
     d78:	b3 95       	inc	r27
     d7a:	d9 f7       	brne	.-10     	; 0xd72 <__fixunssfsi+0x3c>
     d7c:	3e f4       	brtc	.+14     	; 0xd8c <__fixunssfsi+0x56>
     d7e:	90 95       	com	r25
     d80:	80 95       	com	r24
     d82:	70 95       	com	r23
     d84:	61 95       	neg	r22
     d86:	7f 4f       	sbci	r23, 0xFF	; 255
     d88:	8f 4f       	sbci	r24, 0xFF	; 255
     d8a:	9f 4f       	sbci	r25, 0xFF	; 255
     d8c:	08 95       	ret

00000d8e <__floatunsisf>:
     d8e:	e8 94       	clt
     d90:	09 c0       	rjmp	.+18     	; 0xda4 <__floatsisf+0x12>

00000d92 <__floatsisf>:
     d92:	97 fb       	bst	r25, 7
     d94:	3e f4       	brtc	.+14     	; 0xda4 <__floatsisf+0x12>
     d96:	90 95       	com	r25
     d98:	80 95       	com	r24
     d9a:	70 95       	com	r23
     d9c:	61 95       	neg	r22
     d9e:	7f 4f       	sbci	r23, 0xFF	; 255
     da0:	8f 4f       	sbci	r24, 0xFF	; 255
     da2:	9f 4f       	sbci	r25, 0xFF	; 255
     da4:	99 23       	and	r25, r25
     da6:	a9 f0       	breq	.+42     	; 0xdd2 <__floatsisf+0x40>
     da8:	f9 2f       	mov	r31, r25
     daa:	96 e9       	ldi	r25, 0x96	; 150
     dac:	bb 27       	eor	r27, r27
     dae:	93 95       	inc	r25
     db0:	f6 95       	lsr	r31
     db2:	87 95       	ror	r24
     db4:	77 95       	ror	r23
     db6:	67 95       	ror	r22
     db8:	b7 95       	ror	r27
     dba:	f1 11       	cpse	r31, r1
     dbc:	f8 cf       	rjmp	.-16     	; 0xdae <__floatsisf+0x1c>
     dbe:	fa f4       	brpl	.+62     	; 0xdfe <__floatsisf+0x6c>
     dc0:	bb 0f       	add	r27, r27
     dc2:	11 f4       	brne	.+4      	; 0xdc8 <__floatsisf+0x36>
     dc4:	60 ff       	sbrs	r22, 0
     dc6:	1b c0       	rjmp	.+54     	; 0xdfe <__floatsisf+0x6c>
     dc8:	6f 5f       	subi	r22, 0xFF	; 255
     dca:	7f 4f       	sbci	r23, 0xFF	; 255
     dcc:	8f 4f       	sbci	r24, 0xFF	; 255
     dce:	9f 4f       	sbci	r25, 0xFF	; 255
     dd0:	16 c0       	rjmp	.+44     	; 0xdfe <__floatsisf+0x6c>
     dd2:	88 23       	and	r24, r24
     dd4:	11 f0       	breq	.+4      	; 0xdda <__floatsisf+0x48>
     dd6:	96 e9       	ldi	r25, 0x96	; 150
     dd8:	11 c0       	rjmp	.+34     	; 0xdfc <__floatsisf+0x6a>
     dda:	77 23       	and	r23, r23
     ddc:	21 f0       	breq	.+8      	; 0xde6 <__floatsisf+0x54>
     dde:	9e e8       	ldi	r25, 0x8E	; 142
     de0:	87 2f       	mov	r24, r23
     de2:	76 2f       	mov	r23, r22
     de4:	05 c0       	rjmp	.+10     	; 0xdf0 <__floatsisf+0x5e>
     de6:	66 23       	and	r22, r22
     de8:	71 f0       	breq	.+28     	; 0xe06 <__floatsisf+0x74>
     dea:	96 e8       	ldi	r25, 0x86	; 134
     dec:	86 2f       	mov	r24, r22
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	60 e0       	ldi	r22, 0x00	; 0
     df2:	2a f0       	brmi	.+10     	; 0xdfe <__floatsisf+0x6c>
     df4:	9a 95       	dec	r25
     df6:	66 0f       	add	r22, r22
     df8:	77 1f       	adc	r23, r23
     dfa:	88 1f       	adc	r24, r24
     dfc:	da f7       	brpl	.-10     	; 0xdf4 <__floatsisf+0x62>
     dfe:	88 0f       	add	r24, r24
     e00:	96 95       	lsr	r25
     e02:	87 95       	ror	r24
     e04:	97 f9       	bld	r25, 7
     e06:	08 95       	ret

00000e08 <__fp_inf>:
     e08:	97 f9       	bld	r25, 7
     e0a:	9f 67       	ori	r25, 0x7F	; 127
     e0c:	80 e8       	ldi	r24, 0x80	; 128
     e0e:	70 e0       	ldi	r23, 0x00	; 0
     e10:	60 e0       	ldi	r22, 0x00	; 0
     e12:	08 95       	ret

00000e14 <__fp_nan>:
     e14:	9f ef       	ldi	r25, 0xFF	; 255
     e16:	80 ec       	ldi	r24, 0xC0	; 192
     e18:	08 95       	ret

00000e1a <__fp_pscA>:
     e1a:	00 24       	eor	r0, r0
     e1c:	0a 94       	dec	r0
     e1e:	16 16       	cp	r1, r22
     e20:	17 06       	cpc	r1, r23
     e22:	18 06       	cpc	r1, r24
     e24:	09 06       	cpc	r0, r25
     e26:	08 95       	ret

00000e28 <__fp_pscB>:
     e28:	00 24       	eor	r0, r0
     e2a:	0a 94       	dec	r0
     e2c:	12 16       	cp	r1, r18
     e2e:	13 06       	cpc	r1, r19
     e30:	14 06       	cpc	r1, r20
     e32:	05 06       	cpc	r0, r21
     e34:	08 95       	ret

00000e36 <__fp_round>:
     e36:	09 2e       	mov	r0, r25
     e38:	03 94       	inc	r0
     e3a:	00 0c       	add	r0, r0
     e3c:	11 f4       	brne	.+4      	; 0xe42 <__fp_round+0xc>
     e3e:	88 23       	and	r24, r24
     e40:	52 f0       	brmi	.+20     	; 0xe56 <__fp_round+0x20>
     e42:	bb 0f       	add	r27, r27
     e44:	40 f4       	brcc	.+16     	; 0xe56 <__fp_round+0x20>
     e46:	bf 2b       	or	r27, r31
     e48:	11 f4       	brne	.+4      	; 0xe4e <__fp_round+0x18>
     e4a:	60 ff       	sbrs	r22, 0
     e4c:	04 c0       	rjmp	.+8      	; 0xe56 <__fp_round+0x20>
     e4e:	6f 5f       	subi	r22, 0xFF	; 255
     e50:	7f 4f       	sbci	r23, 0xFF	; 255
     e52:	8f 4f       	sbci	r24, 0xFF	; 255
     e54:	9f 4f       	sbci	r25, 0xFF	; 255
     e56:	08 95       	ret

00000e58 <__fp_split3>:
     e58:	57 fd       	sbrc	r21, 7
     e5a:	90 58       	subi	r25, 0x80	; 128
     e5c:	44 0f       	add	r20, r20
     e5e:	55 1f       	adc	r21, r21
     e60:	59 f0       	breq	.+22     	; 0xe78 <__fp_splitA+0x10>
     e62:	5f 3f       	cpi	r21, 0xFF	; 255
     e64:	71 f0       	breq	.+28     	; 0xe82 <__fp_splitA+0x1a>
     e66:	47 95       	ror	r20

00000e68 <__fp_splitA>:
     e68:	88 0f       	add	r24, r24
     e6a:	97 fb       	bst	r25, 7
     e6c:	99 1f       	adc	r25, r25
     e6e:	61 f0       	breq	.+24     	; 0xe88 <__fp_splitA+0x20>
     e70:	9f 3f       	cpi	r25, 0xFF	; 255
     e72:	79 f0       	breq	.+30     	; 0xe92 <__fp_splitA+0x2a>
     e74:	87 95       	ror	r24
     e76:	08 95       	ret
     e78:	12 16       	cp	r1, r18
     e7a:	13 06       	cpc	r1, r19
     e7c:	14 06       	cpc	r1, r20
     e7e:	55 1f       	adc	r21, r21
     e80:	f2 cf       	rjmp	.-28     	; 0xe66 <__fp_split3+0xe>
     e82:	46 95       	lsr	r20
     e84:	f1 df       	rcall	.-30     	; 0xe68 <__fp_splitA>
     e86:	08 c0       	rjmp	.+16     	; 0xe98 <__fp_splitA+0x30>
     e88:	16 16       	cp	r1, r22
     e8a:	17 06       	cpc	r1, r23
     e8c:	18 06       	cpc	r1, r24
     e8e:	99 1f       	adc	r25, r25
     e90:	f1 cf       	rjmp	.-30     	; 0xe74 <__fp_splitA+0xc>
     e92:	86 95       	lsr	r24
     e94:	71 05       	cpc	r23, r1
     e96:	61 05       	cpc	r22, r1
     e98:	08 94       	sec
     e9a:	08 95       	ret

00000e9c <__fp_zero>:
     e9c:	e8 94       	clt

00000e9e <__fp_szero>:
     e9e:	bb 27       	eor	r27, r27
     ea0:	66 27       	eor	r22, r22
     ea2:	77 27       	eor	r23, r23
     ea4:	cb 01       	movw	r24, r22
     ea6:	97 f9       	bld	r25, 7
     ea8:	08 95       	ret

00000eaa <__mulsf3>:
     eaa:	0b d0       	rcall	.+22     	; 0xec2 <__mulsf3x>
     eac:	c4 cf       	rjmp	.-120    	; 0xe36 <__fp_round>
     eae:	b5 df       	rcall	.-150    	; 0xe1a <__fp_pscA>
     eb0:	28 f0       	brcs	.+10     	; 0xebc <__mulsf3+0x12>
     eb2:	ba df       	rcall	.-140    	; 0xe28 <__fp_pscB>
     eb4:	18 f0       	brcs	.+6      	; 0xebc <__mulsf3+0x12>
     eb6:	95 23       	and	r25, r21
     eb8:	09 f0       	breq	.+2      	; 0xebc <__mulsf3+0x12>
     eba:	a6 cf       	rjmp	.-180    	; 0xe08 <__fp_inf>
     ebc:	ab cf       	rjmp	.-170    	; 0xe14 <__fp_nan>
     ebe:	11 24       	eor	r1, r1
     ec0:	ee cf       	rjmp	.-36     	; 0xe9e <__fp_szero>

00000ec2 <__mulsf3x>:
     ec2:	ca df       	rcall	.-108    	; 0xe58 <__fp_split3>
     ec4:	a0 f3       	brcs	.-24     	; 0xeae <__mulsf3+0x4>

00000ec6 <__mulsf3_pse>:
     ec6:	95 9f       	mul	r25, r21
     ec8:	d1 f3       	breq	.-12     	; 0xebe <__mulsf3+0x14>
     eca:	95 0f       	add	r25, r21
     ecc:	50 e0       	ldi	r21, 0x00	; 0
     ece:	55 1f       	adc	r21, r21
     ed0:	62 9f       	mul	r22, r18
     ed2:	f0 01       	movw	r30, r0
     ed4:	72 9f       	mul	r23, r18
     ed6:	bb 27       	eor	r27, r27
     ed8:	f0 0d       	add	r31, r0
     eda:	b1 1d       	adc	r27, r1
     edc:	63 9f       	mul	r22, r19
     ede:	aa 27       	eor	r26, r26
     ee0:	f0 0d       	add	r31, r0
     ee2:	b1 1d       	adc	r27, r1
     ee4:	aa 1f       	adc	r26, r26
     ee6:	64 9f       	mul	r22, r20
     ee8:	66 27       	eor	r22, r22
     eea:	b0 0d       	add	r27, r0
     eec:	a1 1d       	adc	r26, r1
     eee:	66 1f       	adc	r22, r22
     ef0:	82 9f       	mul	r24, r18
     ef2:	22 27       	eor	r18, r18
     ef4:	b0 0d       	add	r27, r0
     ef6:	a1 1d       	adc	r26, r1
     ef8:	62 1f       	adc	r22, r18
     efa:	73 9f       	mul	r23, r19
     efc:	b0 0d       	add	r27, r0
     efe:	a1 1d       	adc	r26, r1
     f00:	62 1f       	adc	r22, r18
     f02:	83 9f       	mul	r24, r19
     f04:	a0 0d       	add	r26, r0
     f06:	61 1d       	adc	r22, r1
     f08:	22 1f       	adc	r18, r18
     f0a:	74 9f       	mul	r23, r20
     f0c:	33 27       	eor	r19, r19
     f0e:	a0 0d       	add	r26, r0
     f10:	61 1d       	adc	r22, r1
     f12:	23 1f       	adc	r18, r19
     f14:	84 9f       	mul	r24, r20
     f16:	60 0d       	add	r22, r0
     f18:	21 1d       	adc	r18, r1
     f1a:	82 2f       	mov	r24, r18
     f1c:	76 2f       	mov	r23, r22
     f1e:	6a 2f       	mov	r22, r26
     f20:	11 24       	eor	r1, r1
     f22:	9f 57       	subi	r25, 0x7F	; 127
     f24:	50 40       	sbci	r21, 0x00	; 0
     f26:	8a f0       	brmi	.+34     	; 0xf4a <__mulsf3_pse+0x84>
     f28:	e1 f0       	breq	.+56     	; 0xf62 <__mulsf3_pse+0x9c>
     f2a:	88 23       	and	r24, r24
     f2c:	4a f0       	brmi	.+18     	; 0xf40 <__mulsf3_pse+0x7a>
     f2e:	ee 0f       	add	r30, r30
     f30:	ff 1f       	adc	r31, r31
     f32:	bb 1f       	adc	r27, r27
     f34:	66 1f       	adc	r22, r22
     f36:	77 1f       	adc	r23, r23
     f38:	88 1f       	adc	r24, r24
     f3a:	91 50       	subi	r25, 0x01	; 1
     f3c:	50 40       	sbci	r21, 0x00	; 0
     f3e:	a9 f7       	brne	.-22     	; 0xf2a <__mulsf3_pse+0x64>
     f40:	9e 3f       	cpi	r25, 0xFE	; 254
     f42:	51 05       	cpc	r21, r1
     f44:	70 f0       	brcs	.+28     	; 0xf62 <__mulsf3_pse+0x9c>
     f46:	60 cf       	rjmp	.-320    	; 0xe08 <__fp_inf>
     f48:	aa cf       	rjmp	.-172    	; 0xe9e <__fp_szero>
     f4a:	5f 3f       	cpi	r21, 0xFF	; 255
     f4c:	ec f3       	brlt	.-6      	; 0xf48 <__mulsf3_pse+0x82>
     f4e:	98 3e       	cpi	r25, 0xE8	; 232
     f50:	dc f3       	brlt	.-10     	; 0xf48 <__mulsf3_pse+0x82>
     f52:	86 95       	lsr	r24
     f54:	77 95       	ror	r23
     f56:	67 95       	ror	r22
     f58:	b7 95       	ror	r27
     f5a:	f7 95       	ror	r31
     f5c:	e7 95       	ror	r30
     f5e:	9f 5f       	subi	r25, 0xFF	; 255
     f60:	c1 f7       	brne	.-16     	; 0xf52 <__mulsf3_pse+0x8c>
     f62:	fe 2b       	or	r31, r30
     f64:	88 0f       	add	r24, r24
     f66:	91 1d       	adc	r25, r1
     f68:	96 95       	lsr	r25
     f6a:	87 95       	ror	r24
     f6c:	97 f9       	bld	r25, 7
     f6e:	08 95       	ret

00000f70 <sin>:
     f70:	9f 93       	push	r25
     f72:	2a d0       	rcall	.+84     	; 0xfc8 <__fp_rempio2>
     f74:	0f 90       	pop	r0
     f76:	07 fc       	sbrc	r0, 7
     f78:	ee 5f       	subi	r30, 0xFE	; 254
     f7a:	4d c0       	rjmp	.+154    	; 0x1016 <__fp_sinus>

00000f7c <__fp_powser>:
     f7c:	df 93       	push	r29
     f7e:	cf 93       	push	r28
     f80:	1f 93       	push	r17
     f82:	0f 93       	push	r16
     f84:	ff 92       	push	r15
     f86:	ef 92       	push	r14
     f88:	df 92       	push	r13
     f8a:	7b 01       	movw	r14, r22
     f8c:	8c 01       	movw	r16, r24
     f8e:	68 94       	set
     f90:	05 c0       	rjmp	.+10     	; 0xf9c <__fp_powser+0x20>
     f92:	da 2e       	mov	r13, r26
     f94:	ef 01       	movw	r28, r30
     f96:	95 df       	rcall	.-214    	; 0xec2 <__mulsf3x>
     f98:	fe 01       	movw	r30, r28
     f9a:	e8 94       	clt
     f9c:	a5 91       	lpm	r26, Z+
     f9e:	25 91       	lpm	r18, Z+
     fa0:	35 91       	lpm	r19, Z+
     fa2:	45 91       	lpm	r20, Z+
     fa4:	55 91       	lpm	r21, Z+
     fa6:	ae f3       	brts	.-22     	; 0xf92 <__fp_powser+0x16>
     fa8:	ef 01       	movw	r28, r30
     faa:	05 de       	rcall	.-1014   	; 0xbb6 <__addsf3x>
     fac:	fe 01       	movw	r30, r28
     fae:	97 01       	movw	r18, r14
     fb0:	a8 01       	movw	r20, r16
     fb2:	da 94       	dec	r13
     fb4:	79 f7       	brne	.-34     	; 0xf94 <__fp_powser+0x18>
     fb6:	df 90       	pop	r13
     fb8:	ef 90       	pop	r14
     fba:	ff 90       	pop	r15
     fbc:	0f 91       	pop	r16
     fbe:	1f 91       	pop	r17
     fc0:	cf 91       	pop	r28
     fc2:	df 91       	pop	r29
     fc4:	08 95       	ret
     fc6:	26 cf       	rjmp	.-436    	; 0xe14 <__fp_nan>

00000fc8 <__fp_rempio2>:
     fc8:	4f df       	rcall	.-354    	; 0xe68 <__fp_splitA>
     fca:	e8 f3       	brcs	.-6      	; 0xfc6 <__fp_powser+0x4a>
     fcc:	e8 94       	clt
     fce:	e0 e0       	ldi	r30, 0x00	; 0
     fd0:	bb 27       	eor	r27, r27
     fd2:	9f 57       	subi	r25, 0x7F	; 127
     fd4:	f0 f0       	brcs	.+60     	; 0x1012 <__fp_rempio2+0x4a>
     fd6:	2a ed       	ldi	r18, 0xDA	; 218
     fd8:	3f e0       	ldi	r19, 0x0F	; 15
     fda:	49 ec       	ldi	r20, 0xC9	; 201
     fdc:	06 c0       	rjmp	.+12     	; 0xfea <__fp_rempio2+0x22>
     fde:	ee 0f       	add	r30, r30
     fe0:	bb 0f       	add	r27, r27
     fe2:	66 1f       	adc	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	88 1f       	adc	r24, r24
     fe8:	28 f0       	brcs	.+10     	; 0xff4 <__fp_rempio2+0x2c>
     fea:	b2 3a       	cpi	r27, 0xA2	; 162
     fec:	62 07       	cpc	r22, r18
     fee:	73 07       	cpc	r23, r19
     ff0:	84 07       	cpc	r24, r20
     ff2:	28 f0       	brcs	.+10     	; 0xffe <__fp_rempio2+0x36>
     ff4:	b2 5a       	subi	r27, 0xA2	; 162
     ff6:	62 0b       	sbc	r22, r18
     ff8:	73 0b       	sbc	r23, r19
     ffa:	84 0b       	sbc	r24, r20
     ffc:	e3 95       	inc	r30
     ffe:	9a 95       	dec	r25
    1000:	72 f7       	brpl	.-36     	; 0xfde <__fp_rempio2+0x16>
    1002:	80 38       	cpi	r24, 0x80	; 128
    1004:	30 f4       	brcc	.+12     	; 0x1012 <__fp_rempio2+0x4a>
    1006:	9a 95       	dec	r25
    1008:	bb 0f       	add	r27, r27
    100a:	66 1f       	adc	r22, r22
    100c:	77 1f       	adc	r23, r23
    100e:	88 1f       	adc	r24, r24
    1010:	d2 f7       	brpl	.-12     	; 0x1006 <__fp_rempio2+0x3e>
    1012:	90 48       	sbci	r25, 0x80	; 128
    1014:	13 c0       	rjmp	.+38     	; 0x103c <__fp_mpack_finite>

00001016 <__fp_sinus>:
    1016:	ef 93       	push	r30
    1018:	e0 ff       	sbrs	r30, 0
    101a:	06 c0       	rjmp	.+12     	; 0x1028 <__fp_sinus+0x12>
    101c:	a2 ea       	ldi	r26, 0xA2	; 162
    101e:	2a ed       	ldi	r18, 0xDA	; 218
    1020:	3f e0       	ldi	r19, 0x0F	; 15
    1022:	49 ec       	ldi	r20, 0xC9	; 201
    1024:	5f eb       	ldi	r21, 0xBF	; 191
    1026:	c7 dd       	rcall	.-1138   	; 0xbb6 <__addsf3x>
    1028:	06 df       	rcall	.-500    	; 0xe36 <__fp_round>
    102a:	0f 90       	pop	r0
    102c:	03 94       	inc	r0
    102e:	01 fc       	sbrc	r0, 1
    1030:	90 58       	subi	r25, 0x80	; 128
    1032:	e4 ee       	ldi	r30, 0xE4	; 228
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	0e c0       	rjmp	.+28     	; 0x1054 <__fp_powsodd>

00001038 <__fp_mpack>:
    1038:	9f 3f       	cpi	r25, 0xFF	; 255
    103a:	31 f0       	breq	.+12     	; 0x1048 <__fp_mpack_finite+0xc>

0000103c <__fp_mpack_finite>:
    103c:	91 50       	subi	r25, 0x01	; 1
    103e:	20 f4       	brcc	.+8      	; 0x1048 <__fp_mpack_finite+0xc>
    1040:	87 95       	ror	r24
    1042:	77 95       	ror	r23
    1044:	67 95       	ror	r22
    1046:	b7 95       	ror	r27
    1048:	88 0f       	add	r24, r24
    104a:	91 1d       	adc	r25, r1
    104c:	96 95       	lsr	r25
    104e:	87 95       	ror	r24
    1050:	97 f9       	bld	r25, 7
    1052:	08 95       	ret

00001054 <__fp_powsodd>:
    1054:	9f 93       	push	r25
    1056:	8f 93       	push	r24
    1058:	7f 93       	push	r23
    105a:	6f 93       	push	r22
    105c:	ff 93       	push	r31
    105e:	ef 93       	push	r30
    1060:	9b 01       	movw	r18, r22
    1062:	ac 01       	movw	r20, r24
    1064:	22 df       	rcall	.-444    	; 0xeaa <__mulsf3>
    1066:	ef 91       	pop	r30
    1068:	ff 91       	pop	r31
    106a:	88 df       	rcall	.-240    	; 0xf7c <__fp_powser>
    106c:	2f 91       	pop	r18
    106e:	3f 91       	pop	r19
    1070:	4f 91       	pop	r20
    1072:	5f 91       	pop	r21
    1074:	1a cf       	rjmp	.-460    	; 0xeaa <__mulsf3>

00001076 <__divmodhi4>:
    1076:	97 fb       	bst	r25, 7
    1078:	07 2e       	mov	r0, r23
    107a:	16 f4       	brtc	.+4      	; 0x1080 <__divmodhi4+0xa>
    107c:	00 94       	com	r0
    107e:	06 d0       	rcall	.+12     	; 0x108c <__divmodhi4_neg1>
    1080:	77 fd       	sbrc	r23, 7
    1082:	08 d0       	rcall	.+16     	; 0x1094 <__divmodhi4_neg2>
    1084:	27 d0       	rcall	.+78     	; 0x10d4 <__udivmodhi4>
    1086:	07 fc       	sbrc	r0, 7
    1088:	05 d0       	rcall	.+10     	; 0x1094 <__divmodhi4_neg2>
    108a:	3e f4       	brtc	.+14     	; 0x109a <__divmodhi4_exit>

0000108c <__divmodhi4_neg1>:
    108c:	90 95       	com	r25
    108e:	81 95       	neg	r24
    1090:	9f 4f       	sbci	r25, 0xFF	; 255
    1092:	08 95       	ret

00001094 <__divmodhi4_neg2>:
    1094:	70 95       	com	r23
    1096:	61 95       	neg	r22
    1098:	7f 4f       	sbci	r23, 0xFF	; 255

0000109a <__divmodhi4_exit>:
    109a:	08 95       	ret

0000109c <__divmodsi4>:
    109c:	05 2e       	mov	r0, r21
    109e:	97 fb       	bst	r25, 7
    10a0:	16 f4       	brtc	.+4      	; 0x10a6 <__divmodsi4+0xa>
    10a2:	00 94       	com	r0
    10a4:	0f d0       	rcall	.+30     	; 0x10c4 <__negsi2>
    10a6:	57 fd       	sbrc	r21, 7
    10a8:	05 d0       	rcall	.+10     	; 0x10b4 <__divmodsi4_neg2>
    10aa:	28 d0       	rcall	.+80     	; 0x10fc <__udivmodsi4>
    10ac:	07 fc       	sbrc	r0, 7
    10ae:	02 d0       	rcall	.+4      	; 0x10b4 <__divmodsi4_neg2>
    10b0:	46 f4       	brtc	.+16     	; 0x10c2 <__divmodsi4_exit>
    10b2:	08 c0       	rjmp	.+16     	; 0x10c4 <__negsi2>

000010b4 <__divmodsi4_neg2>:
    10b4:	50 95       	com	r21
    10b6:	40 95       	com	r20
    10b8:	30 95       	com	r19
    10ba:	21 95       	neg	r18
    10bc:	3f 4f       	sbci	r19, 0xFF	; 255
    10be:	4f 4f       	sbci	r20, 0xFF	; 255
    10c0:	5f 4f       	sbci	r21, 0xFF	; 255

000010c2 <__divmodsi4_exit>:
    10c2:	08 95       	ret

000010c4 <__negsi2>:
    10c4:	90 95       	com	r25
    10c6:	80 95       	com	r24
    10c8:	70 95       	com	r23
    10ca:	61 95       	neg	r22
    10cc:	7f 4f       	sbci	r23, 0xFF	; 255
    10ce:	8f 4f       	sbci	r24, 0xFF	; 255
    10d0:	9f 4f       	sbci	r25, 0xFF	; 255
    10d2:	08 95       	ret

000010d4 <__udivmodhi4>:
    10d4:	aa 1b       	sub	r26, r26
    10d6:	bb 1b       	sub	r27, r27
    10d8:	51 e1       	ldi	r21, 0x11	; 17
    10da:	07 c0       	rjmp	.+14     	; 0x10ea <__udivmodhi4_ep>

000010dc <__udivmodhi4_loop>:
    10dc:	aa 1f       	adc	r26, r26
    10de:	bb 1f       	adc	r27, r27
    10e0:	a6 17       	cp	r26, r22
    10e2:	b7 07       	cpc	r27, r23
    10e4:	10 f0       	brcs	.+4      	; 0x10ea <__udivmodhi4_ep>
    10e6:	a6 1b       	sub	r26, r22
    10e8:	b7 0b       	sbc	r27, r23

000010ea <__udivmodhi4_ep>:
    10ea:	88 1f       	adc	r24, r24
    10ec:	99 1f       	adc	r25, r25
    10ee:	5a 95       	dec	r21
    10f0:	a9 f7       	brne	.-22     	; 0x10dc <__udivmodhi4_loop>
    10f2:	80 95       	com	r24
    10f4:	90 95       	com	r25
    10f6:	bc 01       	movw	r22, r24
    10f8:	cd 01       	movw	r24, r26
    10fa:	08 95       	ret

000010fc <__udivmodsi4>:
    10fc:	a1 e2       	ldi	r26, 0x21	; 33
    10fe:	1a 2e       	mov	r1, r26
    1100:	aa 1b       	sub	r26, r26
    1102:	bb 1b       	sub	r27, r27
    1104:	fd 01       	movw	r30, r26
    1106:	0d c0       	rjmp	.+26     	; 0x1122 <__udivmodsi4_ep>

00001108 <__udivmodsi4_loop>:
    1108:	aa 1f       	adc	r26, r26
    110a:	bb 1f       	adc	r27, r27
    110c:	ee 1f       	adc	r30, r30
    110e:	ff 1f       	adc	r31, r31
    1110:	a2 17       	cp	r26, r18
    1112:	b3 07       	cpc	r27, r19
    1114:	e4 07       	cpc	r30, r20
    1116:	f5 07       	cpc	r31, r21
    1118:	20 f0       	brcs	.+8      	; 0x1122 <__udivmodsi4_ep>
    111a:	a2 1b       	sub	r26, r18
    111c:	b3 0b       	sbc	r27, r19
    111e:	e4 0b       	sbc	r30, r20
    1120:	f5 0b       	sbc	r31, r21

00001122 <__udivmodsi4_ep>:
    1122:	66 1f       	adc	r22, r22
    1124:	77 1f       	adc	r23, r23
    1126:	88 1f       	adc	r24, r24
    1128:	99 1f       	adc	r25, r25
    112a:	1a 94       	dec	r1
    112c:	69 f7       	brne	.-38     	; 0x1108 <__udivmodsi4_loop>
    112e:	60 95       	com	r22
    1130:	70 95       	com	r23
    1132:	80 95       	com	r24
    1134:	90 95       	com	r25
    1136:	9b 01       	movw	r18, r22
    1138:	ac 01       	movw	r20, r24
    113a:	bd 01       	movw	r22, r26
    113c:	cf 01       	movw	r24, r30
    113e:	08 95       	ret

00001140 <__itoa_ncheck>:
    1140:	bb 27       	eor	r27, r27
    1142:	4a 30       	cpi	r20, 0x0A	; 10
    1144:	31 f4       	brne	.+12     	; 0x1152 <__itoa_ncheck+0x12>
    1146:	99 23       	and	r25, r25
    1148:	22 f4       	brpl	.+8      	; 0x1152 <__itoa_ncheck+0x12>
    114a:	bd e2       	ldi	r27, 0x2D	; 45
    114c:	90 95       	com	r25
    114e:	81 95       	neg	r24
    1150:	9f 4f       	sbci	r25, 0xFF	; 255
    1152:	01 c0       	rjmp	.+2      	; 0x1156 <__utoa_common>

00001154 <__utoa_ncheck>:
    1154:	bb 27       	eor	r27, r27

00001156 <__utoa_common>:
    1156:	fb 01       	movw	r30, r22
    1158:	55 27       	eor	r21, r21
    115a:	aa 27       	eor	r26, r26
    115c:	88 0f       	add	r24, r24
    115e:	99 1f       	adc	r25, r25
    1160:	aa 1f       	adc	r26, r26
    1162:	a4 17       	cp	r26, r20
    1164:	10 f0       	brcs	.+4      	; 0x116a <__utoa_common+0x14>
    1166:	a4 1b       	sub	r26, r20
    1168:	83 95       	inc	r24
    116a:	50 51       	subi	r21, 0x10	; 16
    116c:	b9 f7       	brne	.-18     	; 0x115c <__utoa_common+0x6>
    116e:	a0 5d       	subi	r26, 0xD0	; 208
    1170:	aa 33       	cpi	r26, 0x3A	; 58
    1172:	08 f0       	brcs	.+2      	; 0x1176 <__utoa_common+0x20>
    1174:	a9 5d       	subi	r26, 0xD9	; 217
    1176:	a1 93       	st	Z+, r26
    1178:	00 97       	sbiw	r24, 0x00	; 0
    117a:	79 f7       	brne	.-34     	; 0x115a <__utoa_common+0x4>
    117c:	b1 11       	cpse	r27, r1
    117e:	b1 93       	st	Z+, r27
    1180:	11 92       	st	Z+, r1
    1182:	cb 01       	movw	r24, r22
    1184:	e7 c3       	rjmp	.+1998   	; 0x1954 <strrev>

00001186 <fdevopen>:
    1186:	0f 93       	push	r16
    1188:	1f 93       	push	r17
    118a:	cf 93       	push	r28
    118c:	df 93       	push	r29
    118e:	00 97       	sbiw	r24, 0x00	; 0
    1190:	31 f4       	brne	.+12     	; 0x119e <fdevopen+0x18>
    1192:	61 15       	cp	r22, r1
    1194:	71 05       	cpc	r23, r1
    1196:	19 f4       	brne	.+6      	; 0x119e <fdevopen+0x18>
    1198:	80 e0       	ldi	r24, 0x00	; 0
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	39 c0       	rjmp	.+114    	; 0x1210 <fdevopen+0x8a>
    119e:	8b 01       	movw	r16, r22
    11a0:	ec 01       	movw	r28, r24
    11a2:	6e e0       	ldi	r22, 0x0E	; 14
    11a4:	70 e0       	ldi	r23, 0x00	; 0
    11a6:	81 e0       	ldi	r24, 0x01	; 1
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	7c d2       	rcall	.+1272   	; 0x16a4 <calloc>
    11ac:	fc 01       	movw	r30, r24
    11ae:	89 2b       	or	r24, r25
    11b0:	99 f3       	breq	.-26     	; 0x1198 <fdevopen+0x12>
    11b2:	80 e8       	ldi	r24, 0x80	; 128
    11b4:	83 83       	std	Z+3, r24	; 0x03
    11b6:	01 15       	cp	r16, r1
    11b8:	11 05       	cpc	r17, r1
    11ba:	71 f0       	breq	.+28     	; 0x11d8 <fdevopen+0x52>
    11bc:	13 87       	std	Z+11, r17	; 0x0b
    11be:	02 87       	std	Z+10, r16	; 0x0a
    11c0:	81 e8       	ldi	r24, 0x81	; 129
    11c2:	83 83       	std	Z+3, r24	; 0x03
    11c4:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <__iob>
    11c8:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <__iob+0x1>
    11cc:	89 2b       	or	r24, r25
    11ce:	21 f4       	brne	.+8      	; 0x11d8 <fdevopen+0x52>
    11d0:	f0 93 73 03 	sts	0x0373, r31	; 0x800373 <__iob+0x1>
    11d4:	e0 93 72 03 	sts	0x0372, r30	; 0x800372 <__iob>
    11d8:	20 97       	sbiw	r28, 0x00	; 0
    11da:	c9 f0       	breq	.+50     	; 0x120e <fdevopen+0x88>
    11dc:	d1 87       	std	Z+9, r29	; 0x09
    11de:	c0 87       	std	Z+8, r28	; 0x08
    11e0:	83 81       	ldd	r24, Z+3	; 0x03
    11e2:	82 60       	ori	r24, 0x02	; 2
    11e4:	83 83       	std	Z+3, r24	; 0x03
    11e6:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <__iob+0x2>
    11ea:	90 91 75 03 	lds	r25, 0x0375	; 0x800375 <__iob+0x3>
    11ee:	89 2b       	or	r24, r25
    11f0:	71 f4       	brne	.+28     	; 0x120e <fdevopen+0x88>
    11f2:	f0 93 75 03 	sts	0x0375, r31	; 0x800375 <__iob+0x3>
    11f6:	e0 93 74 03 	sts	0x0374, r30	; 0x800374 <__iob+0x2>
    11fa:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <__iob+0x4>
    11fe:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <__iob+0x5>
    1202:	89 2b       	or	r24, r25
    1204:	21 f4       	brne	.+8      	; 0x120e <fdevopen+0x88>
    1206:	f0 93 77 03 	sts	0x0377, r31	; 0x800377 <__iob+0x5>
    120a:	e0 93 76 03 	sts	0x0376, r30	; 0x800376 <__iob+0x4>
    120e:	cf 01       	movw	r24, r30
    1210:	df 91       	pop	r29
    1212:	cf 91       	pop	r28
    1214:	1f 91       	pop	r17
    1216:	0f 91       	pop	r16
    1218:	08 95       	ret

0000121a <printf>:
    121a:	cf 93       	push	r28
    121c:	df 93       	push	r29
    121e:	cd b7       	in	r28, 0x3d	; 61
    1220:	de b7       	in	r29, 0x3e	; 62
    1222:	ae 01       	movw	r20, r28
    1224:	4a 5f       	subi	r20, 0xFA	; 250
    1226:	5f 4f       	sbci	r21, 0xFF	; 255
    1228:	fa 01       	movw	r30, r20
    122a:	61 91       	ld	r22, Z+
    122c:	71 91       	ld	r23, Z+
    122e:	af 01       	movw	r20, r30
    1230:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <__iob+0x2>
    1234:	90 91 75 03 	lds	r25, 0x0375	; 0x800375 <__iob+0x3>
    1238:	38 d0       	rcall	.+112    	; 0x12aa <vfprintf>
    123a:	df 91       	pop	r29
    123c:	cf 91       	pop	r28
    123e:	08 95       	ret

00001240 <putchar>:
    1240:	60 91 74 03 	lds	r22, 0x0374	; 0x800374 <__iob+0x2>
    1244:	70 91 75 03 	lds	r23, 0x0375	; 0x800375 <__iob+0x3>
    1248:	95 c3       	rjmp	.+1834   	; 0x1974 <fputc>

0000124a <puts>:
    124a:	0f 93       	push	r16
    124c:	1f 93       	push	r17
    124e:	cf 93       	push	r28
    1250:	df 93       	push	r29
    1252:	e0 91 74 03 	lds	r30, 0x0374	; 0x800374 <__iob+0x2>
    1256:	f0 91 75 03 	lds	r31, 0x0375	; 0x800375 <__iob+0x3>
    125a:	23 81       	ldd	r18, Z+3	; 0x03
    125c:	21 ff       	sbrs	r18, 1
    125e:	1b c0       	rjmp	.+54     	; 0x1296 <puts+0x4c>
    1260:	8c 01       	movw	r16, r24
    1262:	d0 e0       	ldi	r29, 0x00	; 0
    1264:	c0 e0       	ldi	r28, 0x00	; 0
    1266:	f8 01       	movw	r30, r16
    1268:	81 91       	ld	r24, Z+
    126a:	8f 01       	movw	r16, r30
    126c:	60 91 74 03 	lds	r22, 0x0374	; 0x800374 <__iob+0x2>
    1270:	70 91 75 03 	lds	r23, 0x0375	; 0x800375 <__iob+0x3>
    1274:	db 01       	movw	r26, r22
    1276:	18 96       	adiw	r26, 0x08	; 8
    1278:	ed 91       	ld	r30, X+
    127a:	fc 91       	ld	r31, X
    127c:	19 97       	sbiw	r26, 0x09	; 9
    127e:	88 23       	and	r24, r24
    1280:	31 f0       	breq	.+12     	; 0x128e <puts+0x44>
    1282:	19 95       	eicall
    1284:	89 2b       	or	r24, r25
    1286:	79 f3       	breq	.-34     	; 0x1266 <puts+0x1c>
    1288:	df ef       	ldi	r29, 0xFF	; 255
    128a:	cf ef       	ldi	r28, 0xFF	; 255
    128c:	ec cf       	rjmp	.-40     	; 0x1266 <puts+0x1c>
    128e:	8a e0       	ldi	r24, 0x0A	; 10
    1290:	19 95       	eicall
    1292:	89 2b       	or	r24, r25
    1294:	19 f0       	breq	.+6      	; 0x129c <puts+0x52>
    1296:	8f ef       	ldi	r24, 0xFF	; 255
    1298:	9f ef       	ldi	r25, 0xFF	; 255
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <puts+0x56>
    129c:	8d 2f       	mov	r24, r29
    129e:	9c 2f       	mov	r25, r28
    12a0:	df 91       	pop	r29
    12a2:	cf 91       	pop	r28
    12a4:	1f 91       	pop	r17
    12a6:	0f 91       	pop	r16
    12a8:	08 95       	ret

000012aa <vfprintf>:
    12aa:	2f 92       	push	r2
    12ac:	3f 92       	push	r3
    12ae:	4f 92       	push	r4
    12b0:	5f 92       	push	r5
    12b2:	6f 92       	push	r6
    12b4:	7f 92       	push	r7
    12b6:	8f 92       	push	r8
    12b8:	9f 92       	push	r9
    12ba:	af 92       	push	r10
    12bc:	bf 92       	push	r11
    12be:	cf 92       	push	r12
    12c0:	df 92       	push	r13
    12c2:	ef 92       	push	r14
    12c4:	ff 92       	push	r15
    12c6:	0f 93       	push	r16
    12c8:	1f 93       	push	r17
    12ca:	cf 93       	push	r28
    12cc:	df 93       	push	r29
    12ce:	cd b7       	in	r28, 0x3d	; 61
    12d0:	de b7       	in	r29, 0x3e	; 62
    12d2:	2b 97       	sbiw	r28, 0x0b	; 11
    12d4:	0f b6       	in	r0, 0x3f	; 63
    12d6:	f8 94       	cli
    12d8:	de bf       	out	0x3e, r29	; 62
    12da:	0f be       	out	0x3f, r0	; 63
    12dc:	cd bf       	out	0x3d, r28	; 61
    12de:	6c 01       	movw	r12, r24
    12e0:	7b 01       	movw	r14, r22
    12e2:	8a 01       	movw	r16, r20
    12e4:	fc 01       	movw	r30, r24
    12e6:	17 82       	std	Z+7, r1	; 0x07
    12e8:	16 82       	std	Z+6, r1	; 0x06
    12ea:	83 81       	ldd	r24, Z+3	; 0x03
    12ec:	81 ff       	sbrs	r24, 1
    12ee:	bf c1       	rjmp	.+894    	; 0x166e <vfprintf+0x3c4>
    12f0:	ce 01       	movw	r24, r28
    12f2:	01 96       	adiw	r24, 0x01	; 1
    12f4:	3c 01       	movw	r6, r24
    12f6:	f6 01       	movw	r30, r12
    12f8:	93 81       	ldd	r25, Z+3	; 0x03
    12fa:	f7 01       	movw	r30, r14
    12fc:	93 fd       	sbrc	r25, 3
    12fe:	85 91       	lpm	r24, Z+
    1300:	93 ff       	sbrs	r25, 3
    1302:	81 91       	ld	r24, Z+
    1304:	7f 01       	movw	r14, r30
    1306:	88 23       	and	r24, r24
    1308:	09 f4       	brne	.+2      	; 0x130c <vfprintf+0x62>
    130a:	ad c1       	rjmp	.+858    	; 0x1666 <vfprintf+0x3bc>
    130c:	85 32       	cpi	r24, 0x25	; 37
    130e:	39 f4       	brne	.+14     	; 0x131e <vfprintf+0x74>
    1310:	93 fd       	sbrc	r25, 3
    1312:	85 91       	lpm	r24, Z+
    1314:	93 ff       	sbrs	r25, 3
    1316:	81 91       	ld	r24, Z+
    1318:	7f 01       	movw	r14, r30
    131a:	85 32       	cpi	r24, 0x25	; 37
    131c:	21 f4       	brne	.+8      	; 0x1326 <vfprintf+0x7c>
    131e:	b6 01       	movw	r22, r12
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	28 d3       	rcall	.+1616   	; 0x1974 <fputc>
    1324:	e8 cf       	rjmp	.-48     	; 0x12f6 <vfprintf+0x4c>
    1326:	91 2c       	mov	r9, r1
    1328:	21 2c       	mov	r2, r1
    132a:	31 2c       	mov	r3, r1
    132c:	ff e1       	ldi	r31, 0x1F	; 31
    132e:	f3 15       	cp	r31, r3
    1330:	d8 f0       	brcs	.+54     	; 0x1368 <vfprintf+0xbe>
    1332:	8b 32       	cpi	r24, 0x2B	; 43
    1334:	79 f0       	breq	.+30     	; 0x1354 <vfprintf+0xaa>
    1336:	38 f4       	brcc	.+14     	; 0x1346 <vfprintf+0x9c>
    1338:	80 32       	cpi	r24, 0x20	; 32
    133a:	79 f0       	breq	.+30     	; 0x135a <vfprintf+0xb0>
    133c:	83 32       	cpi	r24, 0x23	; 35
    133e:	a1 f4       	brne	.+40     	; 0x1368 <vfprintf+0xbe>
    1340:	23 2d       	mov	r18, r3
    1342:	20 61       	ori	r18, 0x10	; 16
    1344:	1d c0       	rjmp	.+58     	; 0x1380 <vfprintf+0xd6>
    1346:	8d 32       	cpi	r24, 0x2D	; 45
    1348:	61 f0       	breq	.+24     	; 0x1362 <vfprintf+0xb8>
    134a:	80 33       	cpi	r24, 0x30	; 48
    134c:	69 f4       	brne	.+26     	; 0x1368 <vfprintf+0xbe>
    134e:	23 2d       	mov	r18, r3
    1350:	21 60       	ori	r18, 0x01	; 1
    1352:	16 c0       	rjmp	.+44     	; 0x1380 <vfprintf+0xd6>
    1354:	83 2d       	mov	r24, r3
    1356:	82 60       	ori	r24, 0x02	; 2
    1358:	38 2e       	mov	r3, r24
    135a:	e3 2d       	mov	r30, r3
    135c:	e4 60       	ori	r30, 0x04	; 4
    135e:	3e 2e       	mov	r3, r30
    1360:	2a c0       	rjmp	.+84     	; 0x13b6 <vfprintf+0x10c>
    1362:	f3 2d       	mov	r31, r3
    1364:	f8 60       	ori	r31, 0x08	; 8
    1366:	1d c0       	rjmp	.+58     	; 0x13a2 <vfprintf+0xf8>
    1368:	37 fc       	sbrc	r3, 7
    136a:	2d c0       	rjmp	.+90     	; 0x13c6 <vfprintf+0x11c>
    136c:	20 ed       	ldi	r18, 0xD0	; 208
    136e:	28 0f       	add	r18, r24
    1370:	2a 30       	cpi	r18, 0x0A	; 10
    1372:	40 f0       	brcs	.+16     	; 0x1384 <vfprintf+0xda>
    1374:	8e 32       	cpi	r24, 0x2E	; 46
    1376:	b9 f4       	brne	.+46     	; 0x13a6 <vfprintf+0xfc>
    1378:	36 fc       	sbrc	r3, 6
    137a:	75 c1       	rjmp	.+746    	; 0x1666 <vfprintf+0x3bc>
    137c:	23 2d       	mov	r18, r3
    137e:	20 64       	ori	r18, 0x40	; 64
    1380:	32 2e       	mov	r3, r18
    1382:	19 c0       	rjmp	.+50     	; 0x13b6 <vfprintf+0x10c>
    1384:	36 fe       	sbrs	r3, 6
    1386:	06 c0       	rjmp	.+12     	; 0x1394 <vfprintf+0xea>
    1388:	8a e0       	ldi	r24, 0x0A	; 10
    138a:	98 9e       	mul	r9, r24
    138c:	20 0d       	add	r18, r0
    138e:	11 24       	eor	r1, r1
    1390:	92 2e       	mov	r9, r18
    1392:	11 c0       	rjmp	.+34     	; 0x13b6 <vfprintf+0x10c>
    1394:	ea e0       	ldi	r30, 0x0A	; 10
    1396:	2e 9e       	mul	r2, r30
    1398:	20 0d       	add	r18, r0
    139a:	11 24       	eor	r1, r1
    139c:	22 2e       	mov	r2, r18
    139e:	f3 2d       	mov	r31, r3
    13a0:	f0 62       	ori	r31, 0x20	; 32
    13a2:	3f 2e       	mov	r3, r31
    13a4:	08 c0       	rjmp	.+16     	; 0x13b6 <vfprintf+0x10c>
    13a6:	8c 36       	cpi	r24, 0x6C	; 108
    13a8:	21 f4       	brne	.+8      	; 0x13b2 <vfprintf+0x108>
    13aa:	83 2d       	mov	r24, r3
    13ac:	80 68       	ori	r24, 0x80	; 128
    13ae:	38 2e       	mov	r3, r24
    13b0:	02 c0       	rjmp	.+4      	; 0x13b6 <vfprintf+0x10c>
    13b2:	88 36       	cpi	r24, 0x68	; 104
    13b4:	41 f4       	brne	.+16     	; 0x13c6 <vfprintf+0x11c>
    13b6:	f7 01       	movw	r30, r14
    13b8:	93 fd       	sbrc	r25, 3
    13ba:	85 91       	lpm	r24, Z+
    13bc:	93 ff       	sbrs	r25, 3
    13be:	81 91       	ld	r24, Z+
    13c0:	7f 01       	movw	r14, r30
    13c2:	81 11       	cpse	r24, r1
    13c4:	b3 cf       	rjmp	.-154    	; 0x132c <vfprintf+0x82>
    13c6:	98 2f       	mov	r25, r24
    13c8:	9f 7d       	andi	r25, 0xDF	; 223
    13ca:	95 54       	subi	r25, 0x45	; 69
    13cc:	93 30       	cpi	r25, 0x03	; 3
    13ce:	28 f4       	brcc	.+10     	; 0x13da <vfprintf+0x130>
    13d0:	0c 5f       	subi	r16, 0xFC	; 252
    13d2:	1f 4f       	sbci	r17, 0xFF	; 255
    13d4:	9f e3       	ldi	r25, 0x3F	; 63
    13d6:	99 83       	std	Y+1, r25	; 0x01
    13d8:	0d c0       	rjmp	.+26     	; 0x13f4 <vfprintf+0x14a>
    13da:	83 36       	cpi	r24, 0x63	; 99
    13dc:	31 f0       	breq	.+12     	; 0x13ea <vfprintf+0x140>
    13de:	83 37       	cpi	r24, 0x73	; 115
    13e0:	71 f0       	breq	.+28     	; 0x13fe <vfprintf+0x154>
    13e2:	83 35       	cpi	r24, 0x53	; 83
    13e4:	09 f0       	breq	.+2      	; 0x13e8 <vfprintf+0x13e>
    13e6:	55 c0       	rjmp	.+170    	; 0x1492 <vfprintf+0x1e8>
    13e8:	20 c0       	rjmp	.+64     	; 0x142a <vfprintf+0x180>
    13ea:	f8 01       	movw	r30, r16
    13ec:	80 81       	ld	r24, Z
    13ee:	89 83       	std	Y+1, r24	; 0x01
    13f0:	0e 5f       	subi	r16, 0xFE	; 254
    13f2:	1f 4f       	sbci	r17, 0xFF	; 255
    13f4:	88 24       	eor	r8, r8
    13f6:	83 94       	inc	r8
    13f8:	91 2c       	mov	r9, r1
    13fa:	53 01       	movw	r10, r6
    13fc:	12 c0       	rjmp	.+36     	; 0x1422 <vfprintf+0x178>
    13fe:	28 01       	movw	r4, r16
    1400:	f2 e0       	ldi	r31, 0x02	; 2
    1402:	4f 0e       	add	r4, r31
    1404:	51 1c       	adc	r5, r1
    1406:	f8 01       	movw	r30, r16
    1408:	a0 80       	ld	r10, Z
    140a:	b1 80       	ldd	r11, Z+1	; 0x01
    140c:	36 fe       	sbrs	r3, 6
    140e:	03 c0       	rjmp	.+6      	; 0x1416 <vfprintf+0x16c>
    1410:	69 2d       	mov	r22, r9
    1412:	70 e0       	ldi	r23, 0x00	; 0
    1414:	02 c0       	rjmp	.+4      	; 0x141a <vfprintf+0x170>
    1416:	6f ef       	ldi	r22, 0xFF	; 255
    1418:	7f ef       	ldi	r23, 0xFF	; 255
    141a:	c5 01       	movw	r24, r10
    141c:	90 d2       	rcall	.+1312   	; 0x193e <strnlen>
    141e:	4c 01       	movw	r8, r24
    1420:	82 01       	movw	r16, r4
    1422:	f3 2d       	mov	r31, r3
    1424:	ff 77       	andi	r31, 0x7F	; 127
    1426:	3f 2e       	mov	r3, r31
    1428:	15 c0       	rjmp	.+42     	; 0x1454 <vfprintf+0x1aa>
    142a:	28 01       	movw	r4, r16
    142c:	22 e0       	ldi	r18, 0x02	; 2
    142e:	42 0e       	add	r4, r18
    1430:	51 1c       	adc	r5, r1
    1432:	f8 01       	movw	r30, r16
    1434:	a0 80       	ld	r10, Z
    1436:	b1 80       	ldd	r11, Z+1	; 0x01
    1438:	36 fe       	sbrs	r3, 6
    143a:	03 c0       	rjmp	.+6      	; 0x1442 <vfprintf+0x198>
    143c:	69 2d       	mov	r22, r9
    143e:	70 e0       	ldi	r23, 0x00	; 0
    1440:	02 c0       	rjmp	.+4      	; 0x1446 <vfprintf+0x19c>
    1442:	6f ef       	ldi	r22, 0xFF	; 255
    1444:	7f ef       	ldi	r23, 0xFF	; 255
    1446:	c5 01       	movw	r24, r10
    1448:	68 d2       	rcall	.+1232   	; 0x191a <strnlen_P>
    144a:	4c 01       	movw	r8, r24
    144c:	f3 2d       	mov	r31, r3
    144e:	f0 68       	ori	r31, 0x80	; 128
    1450:	3f 2e       	mov	r3, r31
    1452:	82 01       	movw	r16, r4
    1454:	33 fc       	sbrc	r3, 3
    1456:	19 c0       	rjmp	.+50     	; 0x148a <vfprintf+0x1e0>
    1458:	82 2d       	mov	r24, r2
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	88 16       	cp	r8, r24
    145e:	99 06       	cpc	r9, r25
    1460:	a0 f4       	brcc	.+40     	; 0x148a <vfprintf+0x1e0>
    1462:	b6 01       	movw	r22, r12
    1464:	80 e2       	ldi	r24, 0x20	; 32
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	85 d2       	rcall	.+1290   	; 0x1974 <fputc>
    146a:	2a 94       	dec	r2
    146c:	f5 cf       	rjmp	.-22     	; 0x1458 <vfprintf+0x1ae>
    146e:	f5 01       	movw	r30, r10
    1470:	37 fc       	sbrc	r3, 7
    1472:	85 91       	lpm	r24, Z+
    1474:	37 fe       	sbrs	r3, 7
    1476:	81 91       	ld	r24, Z+
    1478:	5f 01       	movw	r10, r30
    147a:	b6 01       	movw	r22, r12
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	7a d2       	rcall	.+1268   	; 0x1974 <fputc>
    1480:	21 10       	cpse	r2, r1
    1482:	2a 94       	dec	r2
    1484:	21 e0       	ldi	r18, 0x01	; 1
    1486:	82 1a       	sub	r8, r18
    1488:	91 08       	sbc	r9, r1
    148a:	81 14       	cp	r8, r1
    148c:	91 04       	cpc	r9, r1
    148e:	79 f7       	brne	.-34     	; 0x146e <vfprintf+0x1c4>
    1490:	e1 c0       	rjmp	.+450    	; 0x1654 <vfprintf+0x3aa>
    1492:	84 36       	cpi	r24, 0x64	; 100
    1494:	11 f0       	breq	.+4      	; 0x149a <vfprintf+0x1f0>
    1496:	89 36       	cpi	r24, 0x69	; 105
    1498:	39 f5       	brne	.+78     	; 0x14e8 <vfprintf+0x23e>
    149a:	f8 01       	movw	r30, r16
    149c:	37 fe       	sbrs	r3, 7
    149e:	07 c0       	rjmp	.+14     	; 0x14ae <vfprintf+0x204>
    14a0:	60 81       	ld	r22, Z
    14a2:	71 81       	ldd	r23, Z+1	; 0x01
    14a4:	82 81       	ldd	r24, Z+2	; 0x02
    14a6:	93 81       	ldd	r25, Z+3	; 0x03
    14a8:	0c 5f       	subi	r16, 0xFC	; 252
    14aa:	1f 4f       	sbci	r17, 0xFF	; 255
    14ac:	08 c0       	rjmp	.+16     	; 0x14be <vfprintf+0x214>
    14ae:	60 81       	ld	r22, Z
    14b0:	71 81       	ldd	r23, Z+1	; 0x01
    14b2:	07 2e       	mov	r0, r23
    14b4:	00 0c       	add	r0, r0
    14b6:	88 0b       	sbc	r24, r24
    14b8:	99 0b       	sbc	r25, r25
    14ba:	0e 5f       	subi	r16, 0xFE	; 254
    14bc:	1f 4f       	sbci	r17, 0xFF	; 255
    14be:	f3 2d       	mov	r31, r3
    14c0:	ff 76       	andi	r31, 0x6F	; 111
    14c2:	3f 2e       	mov	r3, r31
    14c4:	97 ff       	sbrs	r25, 7
    14c6:	09 c0       	rjmp	.+18     	; 0x14da <vfprintf+0x230>
    14c8:	90 95       	com	r25
    14ca:	80 95       	com	r24
    14cc:	70 95       	com	r23
    14ce:	61 95       	neg	r22
    14d0:	7f 4f       	sbci	r23, 0xFF	; 255
    14d2:	8f 4f       	sbci	r24, 0xFF	; 255
    14d4:	9f 4f       	sbci	r25, 0xFF	; 255
    14d6:	f0 68       	ori	r31, 0x80	; 128
    14d8:	3f 2e       	mov	r3, r31
    14da:	2a e0       	ldi	r18, 0x0A	; 10
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	a3 01       	movw	r20, r6
    14e0:	85 d2       	rcall	.+1290   	; 0x19ec <__ultoa_invert>
    14e2:	88 2e       	mov	r8, r24
    14e4:	86 18       	sub	r8, r6
    14e6:	44 c0       	rjmp	.+136    	; 0x1570 <vfprintf+0x2c6>
    14e8:	85 37       	cpi	r24, 0x75	; 117
    14ea:	31 f4       	brne	.+12     	; 0x14f8 <vfprintf+0x24e>
    14ec:	23 2d       	mov	r18, r3
    14ee:	2f 7e       	andi	r18, 0xEF	; 239
    14f0:	b2 2e       	mov	r11, r18
    14f2:	2a e0       	ldi	r18, 0x0A	; 10
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	25 c0       	rjmp	.+74     	; 0x1542 <vfprintf+0x298>
    14f8:	93 2d       	mov	r25, r3
    14fa:	99 7f       	andi	r25, 0xF9	; 249
    14fc:	b9 2e       	mov	r11, r25
    14fe:	8f 36       	cpi	r24, 0x6F	; 111
    1500:	c1 f0       	breq	.+48     	; 0x1532 <vfprintf+0x288>
    1502:	18 f4       	brcc	.+6      	; 0x150a <vfprintf+0x260>
    1504:	88 35       	cpi	r24, 0x58	; 88
    1506:	79 f0       	breq	.+30     	; 0x1526 <vfprintf+0x27c>
    1508:	ae c0       	rjmp	.+348    	; 0x1666 <vfprintf+0x3bc>
    150a:	80 37       	cpi	r24, 0x70	; 112
    150c:	19 f0       	breq	.+6      	; 0x1514 <vfprintf+0x26a>
    150e:	88 37       	cpi	r24, 0x78	; 120
    1510:	21 f0       	breq	.+8      	; 0x151a <vfprintf+0x270>
    1512:	a9 c0       	rjmp	.+338    	; 0x1666 <vfprintf+0x3bc>
    1514:	e9 2f       	mov	r30, r25
    1516:	e0 61       	ori	r30, 0x10	; 16
    1518:	be 2e       	mov	r11, r30
    151a:	b4 fe       	sbrs	r11, 4
    151c:	0d c0       	rjmp	.+26     	; 0x1538 <vfprintf+0x28e>
    151e:	fb 2d       	mov	r31, r11
    1520:	f4 60       	ori	r31, 0x04	; 4
    1522:	bf 2e       	mov	r11, r31
    1524:	09 c0       	rjmp	.+18     	; 0x1538 <vfprintf+0x28e>
    1526:	34 fe       	sbrs	r3, 4
    1528:	0a c0       	rjmp	.+20     	; 0x153e <vfprintf+0x294>
    152a:	29 2f       	mov	r18, r25
    152c:	26 60       	ori	r18, 0x06	; 6
    152e:	b2 2e       	mov	r11, r18
    1530:	06 c0       	rjmp	.+12     	; 0x153e <vfprintf+0x294>
    1532:	28 e0       	ldi	r18, 0x08	; 8
    1534:	30 e0       	ldi	r19, 0x00	; 0
    1536:	05 c0       	rjmp	.+10     	; 0x1542 <vfprintf+0x298>
    1538:	20 e1       	ldi	r18, 0x10	; 16
    153a:	30 e0       	ldi	r19, 0x00	; 0
    153c:	02 c0       	rjmp	.+4      	; 0x1542 <vfprintf+0x298>
    153e:	20 e1       	ldi	r18, 0x10	; 16
    1540:	32 e0       	ldi	r19, 0x02	; 2
    1542:	f8 01       	movw	r30, r16
    1544:	b7 fe       	sbrs	r11, 7
    1546:	07 c0       	rjmp	.+14     	; 0x1556 <vfprintf+0x2ac>
    1548:	60 81       	ld	r22, Z
    154a:	71 81       	ldd	r23, Z+1	; 0x01
    154c:	82 81       	ldd	r24, Z+2	; 0x02
    154e:	93 81       	ldd	r25, Z+3	; 0x03
    1550:	0c 5f       	subi	r16, 0xFC	; 252
    1552:	1f 4f       	sbci	r17, 0xFF	; 255
    1554:	06 c0       	rjmp	.+12     	; 0x1562 <vfprintf+0x2b8>
    1556:	60 81       	ld	r22, Z
    1558:	71 81       	ldd	r23, Z+1	; 0x01
    155a:	80 e0       	ldi	r24, 0x00	; 0
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	0e 5f       	subi	r16, 0xFE	; 254
    1560:	1f 4f       	sbci	r17, 0xFF	; 255
    1562:	a3 01       	movw	r20, r6
    1564:	43 d2       	rcall	.+1158   	; 0x19ec <__ultoa_invert>
    1566:	88 2e       	mov	r8, r24
    1568:	86 18       	sub	r8, r6
    156a:	fb 2d       	mov	r31, r11
    156c:	ff 77       	andi	r31, 0x7F	; 127
    156e:	3f 2e       	mov	r3, r31
    1570:	36 fe       	sbrs	r3, 6
    1572:	0d c0       	rjmp	.+26     	; 0x158e <vfprintf+0x2e4>
    1574:	23 2d       	mov	r18, r3
    1576:	2e 7f       	andi	r18, 0xFE	; 254
    1578:	a2 2e       	mov	r10, r18
    157a:	89 14       	cp	r8, r9
    157c:	58 f4       	brcc	.+22     	; 0x1594 <vfprintf+0x2ea>
    157e:	34 fe       	sbrs	r3, 4
    1580:	0b c0       	rjmp	.+22     	; 0x1598 <vfprintf+0x2ee>
    1582:	32 fc       	sbrc	r3, 2
    1584:	09 c0       	rjmp	.+18     	; 0x1598 <vfprintf+0x2ee>
    1586:	83 2d       	mov	r24, r3
    1588:	8e 7e       	andi	r24, 0xEE	; 238
    158a:	a8 2e       	mov	r10, r24
    158c:	05 c0       	rjmp	.+10     	; 0x1598 <vfprintf+0x2ee>
    158e:	b8 2c       	mov	r11, r8
    1590:	a3 2c       	mov	r10, r3
    1592:	03 c0       	rjmp	.+6      	; 0x159a <vfprintf+0x2f0>
    1594:	b8 2c       	mov	r11, r8
    1596:	01 c0       	rjmp	.+2      	; 0x159a <vfprintf+0x2f0>
    1598:	b9 2c       	mov	r11, r9
    159a:	a4 fe       	sbrs	r10, 4
    159c:	0f c0       	rjmp	.+30     	; 0x15bc <vfprintf+0x312>
    159e:	fe 01       	movw	r30, r28
    15a0:	e8 0d       	add	r30, r8
    15a2:	f1 1d       	adc	r31, r1
    15a4:	80 81       	ld	r24, Z
    15a6:	80 33       	cpi	r24, 0x30	; 48
    15a8:	21 f4       	brne	.+8      	; 0x15b2 <vfprintf+0x308>
    15aa:	9a 2d       	mov	r25, r10
    15ac:	99 7e       	andi	r25, 0xE9	; 233
    15ae:	a9 2e       	mov	r10, r25
    15b0:	09 c0       	rjmp	.+18     	; 0x15c4 <vfprintf+0x31a>
    15b2:	a2 fe       	sbrs	r10, 2
    15b4:	06 c0       	rjmp	.+12     	; 0x15c2 <vfprintf+0x318>
    15b6:	b3 94       	inc	r11
    15b8:	b3 94       	inc	r11
    15ba:	04 c0       	rjmp	.+8      	; 0x15c4 <vfprintf+0x31a>
    15bc:	8a 2d       	mov	r24, r10
    15be:	86 78       	andi	r24, 0x86	; 134
    15c0:	09 f0       	breq	.+2      	; 0x15c4 <vfprintf+0x31a>
    15c2:	b3 94       	inc	r11
    15c4:	a3 fc       	sbrc	r10, 3
    15c6:	10 c0       	rjmp	.+32     	; 0x15e8 <vfprintf+0x33e>
    15c8:	a0 fe       	sbrs	r10, 0
    15ca:	06 c0       	rjmp	.+12     	; 0x15d8 <vfprintf+0x32e>
    15cc:	b2 14       	cp	r11, r2
    15ce:	80 f4       	brcc	.+32     	; 0x15f0 <vfprintf+0x346>
    15d0:	28 0c       	add	r2, r8
    15d2:	92 2c       	mov	r9, r2
    15d4:	9b 18       	sub	r9, r11
    15d6:	0d c0       	rjmp	.+26     	; 0x15f2 <vfprintf+0x348>
    15d8:	b2 14       	cp	r11, r2
    15da:	58 f4       	brcc	.+22     	; 0x15f2 <vfprintf+0x348>
    15dc:	b6 01       	movw	r22, r12
    15de:	80 e2       	ldi	r24, 0x20	; 32
    15e0:	90 e0       	ldi	r25, 0x00	; 0
    15e2:	c8 d1       	rcall	.+912    	; 0x1974 <fputc>
    15e4:	b3 94       	inc	r11
    15e6:	f8 cf       	rjmp	.-16     	; 0x15d8 <vfprintf+0x32e>
    15e8:	b2 14       	cp	r11, r2
    15ea:	18 f4       	brcc	.+6      	; 0x15f2 <vfprintf+0x348>
    15ec:	2b 18       	sub	r2, r11
    15ee:	02 c0       	rjmp	.+4      	; 0x15f4 <vfprintf+0x34a>
    15f0:	98 2c       	mov	r9, r8
    15f2:	21 2c       	mov	r2, r1
    15f4:	a4 fe       	sbrs	r10, 4
    15f6:	0f c0       	rjmp	.+30     	; 0x1616 <vfprintf+0x36c>
    15f8:	b6 01       	movw	r22, r12
    15fa:	80 e3       	ldi	r24, 0x30	; 48
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	ba d1       	rcall	.+884    	; 0x1974 <fputc>
    1600:	a2 fe       	sbrs	r10, 2
    1602:	16 c0       	rjmp	.+44     	; 0x1630 <vfprintf+0x386>
    1604:	a1 fc       	sbrc	r10, 1
    1606:	03 c0       	rjmp	.+6      	; 0x160e <vfprintf+0x364>
    1608:	88 e7       	ldi	r24, 0x78	; 120
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	02 c0       	rjmp	.+4      	; 0x1612 <vfprintf+0x368>
    160e:	88 e5       	ldi	r24, 0x58	; 88
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	b6 01       	movw	r22, r12
    1614:	0c c0       	rjmp	.+24     	; 0x162e <vfprintf+0x384>
    1616:	8a 2d       	mov	r24, r10
    1618:	86 78       	andi	r24, 0x86	; 134
    161a:	51 f0       	breq	.+20     	; 0x1630 <vfprintf+0x386>
    161c:	a1 fe       	sbrs	r10, 1
    161e:	02 c0       	rjmp	.+4      	; 0x1624 <vfprintf+0x37a>
    1620:	8b e2       	ldi	r24, 0x2B	; 43
    1622:	01 c0       	rjmp	.+2      	; 0x1626 <vfprintf+0x37c>
    1624:	80 e2       	ldi	r24, 0x20	; 32
    1626:	a7 fc       	sbrc	r10, 7
    1628:	8d e2       	ldi	r24, 0x2D	; 45
    162a:	b6 01       	movw	r22, r12
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	a2 d1       	rcall	.+836    	; 0x1974 <fputc>
    1630:	89 14       	cp	r8, r9
    1632:	30 f4       	brcc	.+12     	; 0x1640 <vfprintf+0x396>
    1634:	b6 01       	movw	r22, r12
    1636:	80 e3       	ldi	r24, 0x30	; 48
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	9c d1       	rcall	.+824    	; 0x1974 <fputc>
    163c:	9a 94       	dec	r9
    163e:	f8 cf       	rjmp	.-16     	; 0x1630 <vfprintf+0x386>
    1640:	8a 94       	dec	r8
    1642:	f3 01       	movw	r30, r6
    1644:	e8 0d       	add	r30, r8
    1646:	f1 1d       	adc	r31, r1
    1648:	80 81       	ld	r24, Z
    164a:	b6 01       	movw	r22, r12
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	92 d1       	rcall	.+804    	; 0x1974 <fputc>
    1650:	81 10       	cpse	r8, r1
    1652:	f6 cf       	rjmp	.-20     	; 0x1640 <vfprintf+0x396>
    1654:	22 20       	and	r2, r2
    1656:	09 f4       	brne	.+2      	; 0x165a <vfprintf+0x3b0>
    1658:	4e ce       	rjmp	.-868    	; 0x12f6 <vfprintf+0x4c>
    165a:	b6 01       	movw	r22, r12
    165c:	80 e2       	ldi	r24, 0x20	; 32
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	89 d1       	rcall	.+786    	; 0x1974 <fputc>
    1662:	2a 94       	dec	r2
    1664:	f7 cf       	rjmp	.-18     	; 0x1654 <vfprintf+0x3aa>
    1666:	f6 01       	movw	r30, r12
    1668:	86 81       	ldd	r24, Z+6	; 0x06
    166a:	97 81       	ldd	r25, Z+7	; 0x07
    166c:	02 c0       	rjmp	.+4      	; 0x1672 <vfprintf+0x3c8>
    166e:	8f ef       	ldi	r24, 0xFF	; 255
    1670:	9f ef       	ldi	r25, 0xFF	; 255
    1672:	2b 96       	adiw	r28, 0x0b	; 11
    1674:	0f b6       	in	r0, 0x3f	; 63
    1676:	f8 94       	cli
    1678:	de bf       	out	0x3e, r29	; 62
    167a:	0f be       	out	0x3f, r0	; 63
    167c:	cd bf       	out	0x3d, r28	; 61
    167e:	df 91       	pop	r29
    1680:	cf 91       	pop	r28
    1682:	1f 91       	pop	r17
    1684:	0f 91       	pop	r16
    1686:	ff 90       	pop	r15
    1688:	ef 90       	pop	r14
    168a:	df 90       	pop	r13
    168c:	cf 90       	pop	r12
    168e:	bf 90       	pop	r11
    1690:	af 90       	pop	r10
    1692:	9f 90       	pop	r9
    1694:	8f 90       	pop	r8
    1696:	7f 90       	pop	r7
    1698:	6f 90       	pop	r6
    169a:	5f 90       	pop	r5
    169c:	4f 90       	pop	r4
    169e:	3f 90       	pop	r3
    16a0:	2f 90       	pop	r2
    16a2:	08 95       	ret

000016a4 <calloc>:
    16a4:	0f 93       	push	r16
    16a6:	1f 93       	push	r17
    16a8:	cf 93       	push	r28
    16aa:	df 93       	push	r29
    16ac:	86 9f       	mul	r24, r22
    16ae:	80 01       	movw	r16, r0
    16b0:	87 9f       	mul	r24, r23
    16b2:	10 0d       	add	r17, r0
    16b4:	96 9f       	mul	r25, r22
    16b6:	10 0d       	add	r17, r0
    16b8:	11 24       	eor	r1, r1
    16ba:	c8 01       	movw	r24, r16
    16bc:	0d d0       	rcall	.+26     	; 0x16d8 <malloc>
    16be:	ec 01       	movw	r28, r24
    16c0:	00 97       	sbiw	r24, 0x00	; 0
    16c2:	21 f0       	breq	.+8      	; 0x16cc <calloc+0x28>
    16c4:	a8 01       	movw	r20, r16
    16c6:	60 e0       	ldi	r22, 0x00	; 0
    16c8:	70 e0       	ldi	r23, 0x00	; 0
    16ca:	32 d1       	rcall	.+612    	; 0x1930 <memset>
    16cc:	ce 01       	movw	r24, r28
    16ce:	df 91       	pop	r29
    16d0:	cf 91       	pop	r28
    16d2:	1f 91       	pop	r17
    16d4:	0f 91       	pop	r16
    16d6:	08 95       	ret

000016d8 <malloc>:
    16d8:	0f 93       	push	r16
    16da:	1f 93       	push	r17
    16dc:	cf 93       	push	r28
    16de:	df 93       	push	r29
    16e0:	82 30       	cpi	r24, 0x02	; 2
    16e2:	91 05       	cpc	r25, r1
    16e4:	10 f4       	brcc	.+4      	; 0x16ea <malloc+0x12>
    16e6:	82 e0       	ldi	r24, 0x02	; 2
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	e0 91 7a 03 	lds	r30, 0x037A	; 0x80037a <__flp>
    16ee:	f0 91 7b 03 	lds	r31, 0x037B	; 0x80037b <__flp+0x1>
    16f2:	20 e0       	ldi	r18, 0x00	; 0
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	a0 e0       	ldi	r26, 0x00	; 0
    16f8:	b0 e0       	ldi	r27, 0x00	; 0
    16fa:	30 97       	sbiw	r30, 0x00	; 0
    16fc:	19 f1       	breq	.+70     	; 0x1744 <malloc+0x6c>
    16fe:	40 81       	ld	r20, Z
    1700:	51 81       	ldd	r21, Z+1	; 0x01
    1702:	02 81       	ldd	r16, Z+2	; 0x02
    1704:	13 81       	ldd	r17, Z+3	; 0x03
    1706:	48 17       	cp	r20, r24
    1708:	59 07       	cpc	r21, r25
    170a:	c8 f0       	brcs	.+50     	; 0x173e <malloc+0x66>
    170c:	84 17       	cp	r24, r20
    170e:	95 07       	cpc	r25, r21
    1710:	69 f4       	brne	.+26     	; 0x172c <malloc+0x54>
    1712:	10 97       	sbiw	r26, 0x00	; 0
    1714:	31 f0       	breq	.+12     	; 0x1722 <malloc+0x4a>
    1716:	12 96       	adiw	r26, 0x02	; 2
    1718:	0c 93       	st	X, r16
    171a:	12 97       	sbiw	r26, 0x02	; 2
    171c:	13 96       	adiw	r26, 0x03	; 3
    171e:	1c 93       	st	X, r17
    1720:	27 c0       	rjmp	.+78     	; 0x1770 <malloc+0x98>
    1722:	00 93 7a 03 	sts	0x037A, r16	; 0x80037a <__flp>
    1726:	10 93 7b 03 	sts	0x037B, r17	; 0x80037b <__flp+0x1>
    172a:	22 c0       	rjmp	.+68     	; 0x1770 <malloc+0x98>
    172c:	21 15       	cp	r18, r1
    172e:	31 05       	cpc	r19, r1
    1730:	19 f0       	breq	.+6      	; 0x1738 <malloc+0x60>
    1732:	42 17       	cp	r20, r18
    1734:	53 07       	cpc	r21, r19
    1736:	18 f4       	brcc	.+6      	; 0x173e <malloc+0x66>
    1738:	9a 01       	movw	r18, r20
    173a:	bd 01       	movw	r22, r26
    173c:	ef 01       	movw	r28, r30
    173e:	df 01       	movw	r26, r30
    1740:	f8 01       	movw	r30, r16
    1742:	db cf       	rjmp	.-74     	; 0x16fa <malloc+0x22>
    1744:	21 15       	cp	r18, r1
    1746:	31 05       	cpc	r19, r1
    1748:	f9 f0       	breq	.+62     	; 0x1788 <malloc+0xb0>
    174a:	28 1b       	sub	r18, r24
    174c:	39 0b       	sbc	r19, r25
    174e:	24 30       	cpi	r18, 0x04	; 4
    1750:	31 05       	cpc	r19, r1
    1752:	80 f4       	brcc	.+32     	; 0x1774 <malloc+0x9c>
    1754:	8a 81       	ldd	r24, Y+2	; 0x02
    1756:	9b 81       	ldd	r25, Y+3	; 0x03
    1758:	61 15       	cp	r22, r1
    175a:	71 05       	cpc	r23, r1
    175c:	21 f0       	breq	.+8      	; 0x1766 <malloc+0x8e>
    175e:	fb 01       	movw	r30, r22
    1760:	93 83       	std	Z+3, r25	; 0x03
    1762:	82 83       	std	Z+2, r24	; 0x02
    1764:	04 c0       	rjmp	.+8      	; 0x176e <malloc+0x96>
    1766:	90 93 7b 03 	sts	0x037B, r25	; 0x80037b <__flp+0x1>
    176a:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <__flp>
    176e:	fe 01       	movw	r30, r28
    1770:	32 96       	adiw	r30, 0x02	; 2
    1772:	44 c0       	rjmp	.+136    	; 0x17fc <malloc+0x124>
    1774:	fe 01       	movw	r30, r28
    1776:	e2 0f       	add	r30, r18
    1778:	f3 1f       	adc	r31, r19
    177a:	81 93       	st	Z+, r24
    177c:	91 93       	st	Z+, r25
    177e:	22 50       	subi	r18, 0x02	; 2
    1780:	31 09       	sbc	r19, r1
    1782:	39 83       	std	Y+1, r19	; 0x01
    1784:	28 83       	st	Y, r18
    1786:	3a c0       	rjmp	.+116    	; 0x17fc <malloc+0x124>
    1788:	20 91 78 03 	lds	r18, 0x0378	; 0x800378 <__brkval>
    178c:	30 91 79 03 	lds	r19, 0x0379	; 0x800379 <__brkval+0x1>
    1790:	23 2b       	or	r18, r19
    1792:	41 f4       	brne	.+16     	; 0x17a4 <malloc+0xcc>
    1794:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1798:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    179c:	30 93 79 03 	sts	0x0379, r19	; 0x800379 <__brkval+0x1>
    17a0:	20 93 78 03 	sts	0x0378, r18	; 0x800378 <__brkval>
    17a4:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    17a8:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    17ac:	21 15       	cp	r18, r1
    17ae:	31 05       	cpc	r19, r1
    17b0:	41 f4       	brne	.+16     	; 0x17c2 <malloc+0xea>
    17b2:	2d b7       	in	r18, 0x3d	; 61
    17b4:	3e b7       	in	r19, 0x3e	; 62
    17b6:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    17ba:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    17be:	24 1b       	sub	r18, r20
    17c0:	35 0b       	sbc	r19, r21
    17c2:	e0 91 78 03 	lds	r30, 0x0378	; 0x800378 <__brkval>
    17c6:	f0 91 79 03 	lds	r31, 0x0379	; 0x800379 <__brkval+0x1>
    17ca:	e2 17       	cp	r30, r18
    17cc:	f3 07       	cpc	r31, r19
    17ce:	a0 f4       	brcc	.+40     	; 0x17f8 <malloc+0x120>
    17d0:	2e 1b       	sub	r18, r30
    17d2:	3f 0b       	sbc	r19, r31
    17d4:	28 17       	cp	r18, r24
    17d6:	39 07       	cpc	r19, r25
    17d8:	78 f0       	brcs	.+30     	; 0x17f8 <malloc+0x120>
    17da:	ac 01       	movw	r20, r24
    17dc:	4e 5f       	subi	r20, 0xFE	; 254
    17de:	5f 4f       	sbci	r21, 0xFF	; 255
    17e0:	24 17       	cp	r18, r20
    17e2:	35 07       	cpc	r19, r21
    17e4:	48 f0       	brcs	.+18     	; 0x17f8 <malloc+0x120>
    17e6:	4e 0f       	add	r20, r30
    17e8:	5f 1f       	adc	r21, r31
    17ea:	50 93 79 03 	sts	0x0379, r21	; 0x800379 <__brkval+0x1>
    17ee:	40 93 78 03 	sts	0x0378, r20	; 0x800378 <__brkval>
    17f2:	81 93       	st	Z+, r24
    17f4:	91 93       	st	Z+, r25
    17f6:	02 c0       	rjmp	.+4      	; 0x17fc <malloc+0x124>
    17f8:	e0 e0       	ldi	r30, 0x00	; 0
    17fa:	f0 e0       	ldi	r31, 0x00	; 0
    17fc:	cf 01       	movw	r24, r30
    17fe:	df 91       	pop	r29
    1800:	cf 91       	pop	r28
    1802:	1f 91       	pop	r17
    1804:	0f 91       	pop	r16
    1806:	08 95       	ret

00001808 <free>:
    1808:	cf 93       	push	r28
    180a:	df 93       	push	r29
    180c:	00 97       	sbiw	r24, 0x00	; 0
    180e:	09 f4       	brne	.+2      	; 0x1812 <free+0xa>
    1810:	81 c0       	rjmp	.+258    	; 0x1914 <free+0x10c>
    1812:	fc 01       	movw	r30, r24
    1814:	32 97       	sbiw	r30, 0x02	; 2
    1816:	13 82       	std	Z+3, r1	; 0x03
    1818:	12 82       	std	Z+2, r1	; 0x02
    181a:	a0 91 7a 03 	lds	r26, 0x037A	; 0x80037a <__flp>
    181e:	b0 91 7b 03 	lds	r27, 0x037B	; 0x80037b <__flp+0x1>
    1822:	10 97       	sbiw	r26, 0x00	; 0
    1824:	81 f4       	brne	.+32     	; 0x1846 <free+0x3e>
    1826:	20 81       	ld	r18, Z
    1828:	31 81       	ldd	r19, Z+1	; 0x01
    182a:	82 0f       	add	r24, r18
    182c:	93 1f       	adc	r25, r19
    182e:	20 91 78 03 	lds	r18, 0x0378	; 0x800378 <__brkval>
    1832:	30 91 79 03 	lds	r19, 0x0379	; 0x800379 <__brkval+0x1>
    1836:	28 17       	cp	r18, r24
    1838:	39 07       	cpc	r19, r25
    183a:	51 f5       	brne	.+84     	; 0x1890 <free+0x88>
    183c:	f0 93 79 03 	sts	0x0379, r31	; 0x800379 <__brkval+0x1>
    1840:	e0 93 78 03 	sts	0x0378, r30	; 0x800378 <__brkval>
    1844:	67 c0       	rjmp	.+206    	; 0x1914 <free+0x10c>
    1846:	ed 01       	movw	r28, r26
    1848:	20 e0       	ldi	r18, 0x00	; 0
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	ce 17       	cp	r28, r30
    184e:	df 07       	cpc	r29, r31
    1850:	40 f4       	brcc	.+16     	; 0x1862 <free+0x5a>
    1852:	4a 81       	ldd	r20, Y+2	; 0x02
    1854:	5b 81       	ldd	r21, Y+3	; 0x03
    1856:	9e 01       	movw	r18, r28
    1858:	41 15       	cp	r20, r1
    185a:	51 05       	cpc	r21, r1
    185c:	f1 f0       	breq	.+60     	; 0x189a <free+0x92>
    185e:	ea 01       	movw	r28, r20
    1860:	f5 cf       	rjmp	.-22     	; 0x184c <free+0x44>
    1862:	d3 83       	std	Z+3, r29	; 0x03
    1864:	c2 83       	std	Z+2, r28	; 0x02
    1866:	40 81       	ld	r20, Z
    1868:	51 81       	ldd	r21, Z+1	; 0x01
    186a:	84 0f       	add	r24, r20
    186c:	95 1f       	adc	r25, r21
    186e:	c8 17       	cp	r28, r24
    1870:	d9 07       	cpc	r29, r25
    1872:	59 f4       	brne	.+22     	; 0x188a <free+0x82>
    1874:	88 81       	ld	r24, Y
    1876:	99 81       	ldd	r25, Y+1	; 0x01
    1878:	84 0f       	add	r24, r20
    187a:	95 1f       	adc	r25, r21
    187c:	02 96       	adiw	r24, 0x02	; 2
    187e:	91 83       	std	Z+1, r25	; 0x01
    1880:	80 83       	st	Z, r24
    1882:	8a 81       	ldd	r24, Y+2	; 0x02
    1884:	9b 81       	ldd	r25, Y+3	; 0x03
    1886:	93 83       	std	Z+3, r25	; 0x03
    1888:	82 83       	std	Z+2, r24	; 0x02
    188a:	21 15       	cp	r18, r1
    188c:	31 05       	cpc	r19, r1
    188e:	29 f4       	brne	.+10     	; 0x189a <free+0x92>
    1890:	f0 93 7b 03 	sts	0x037B, r31	; 0x80037b <__flp+0x1>
    1894:	e0 93 7a 03 	sts	0x037A, r30	; 0x80037a <__flp>
    1898:	3d c0       	rjmp	.+122    	; 0x1914 <free+0x10c>
    189a:	e9 01       	movw	r28, r18
    189c:	fb 83       	std	Y+3, r31	; 0x03
    189e:	ea 83       	std	Y+2, r30	; 0x02
    18a0:	49 91       	ld	r20, Y+
    18a2:	59 91       	ld	r21, Y+
    18a4:	c4 0f       	add	r28, r20
    18a6:	d5 1f       	adc	r29, r21
    18a8:	ec 17       	cp	r30, r28
    18aa:	fd 07       	cpc	r31, r29
    18ac:	61 f4       	brne	.+24     	; 0x18c6 <free+0xbe>
    18ae:	80 81       	ld	r24, Z
    18b0:	91 81       	ldd	r25, Z+1	; 0x01
    18b2:	84 0f       	add	r24, r20
    18b4:	95 1f       	adc	r25, r21
    18b6:	02 96       	adiw	r24, 0x02	; 2
    18b8:	e9 01       	movw	r28, r18
    18ba:	99 83       	std	Y+1, r25	; 0x01
    18bc:	88 83       	st	Y, r24
    18be:	82 81       	ldd	r24, Z+2	; 0x02
    18c0:	93 81       	ldd	r25, Z+3	; 0x03
    18c2:	9b 83       	std	Y+3, r25	; 0x03
    18c4:	8a 83       	std	Y+2, r24	; 0x02
    18c6:	e0 e0       	ldi	r30, 0x00	; 0
    18c8:	f0 e0       	ldi	r31, 0x00	; 0
    18ca:	12 96       	adiw	r26, 0x02	; 2
    18cc:	8d 91       	ld	r24, X+
    18ce:	9c 91       	ld	r25, X
    18d0:	13 97       	sbiw	r26, 0x03	; 3
    18d2:	00 97       	sbiw	r24, 0x00	; 0
    18d4:	19 f0       	breq	.+6      	; 0x18dc <free+0xd4>
    18d6:	fd 01       	movw	r30, r26
    18d8:	dc 01       	movw	r26, r24
    18da:	f7 cf       	rjmp	.-18     	; 0x18ca <free+0xc2>
    18dc:	8d 91       	ld	r24, X+
    18de:	9c 91       	ld	r25, X
    18e0:	11 97       	sbiw	r26, 0x01	; 1
    18e2:	9d 01       	movw	r18, r26
    18e4:	2e 5f       	subi	r18, 0xFE	; 254
    18e6:	3f 4f       	sbci	r19, 0xFF	; 255
    18e8:	82 0f       	add	r24, r18
    18ea:	93 1f       	adc	r25, r19
    18ec:	20 91 78 03 	lds	r18, 0x0378	; 0x800378 <__brkval>
    18f0:	30 91 79 03 	lds	r19, 0x0379	; 0x800379 <__brkval+0x1>
    18f4:	28 17       	cp	r18, r24
    18f6:	39 07       	cpc	r19, r25
    18f8:	69 f4       	brne	.+26     	; 0x1914 <free+0x10c>
    18fa:	30 97       	sbiw	r30, 0x00	; 0
    18fc:	29 f4       	brne	.+10     	; 0x1908 <free+0x100>
    18fe:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <__flp+0x1>
    1902:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <__flp>
    1906:	02 c0       	rjmp	.+4      	; 0x190c <free+0x104>
    1908:	13 82       	std	Z+3, r1	; 0x03
    190a:	12 82       	std	Z+2, r1	; 0x02
    190c:	b0 93 79 03 	sts	0x0379, r27	; 0x800379 <__brkval+0x1>
    1910:	a0 93 78 03 	sts	0x0378, r26	; 0x800378 <__brkval>
    1914:	df 91       	pop	r29
    1916:	cf 91       	pop	r28
    1918:	08 95       	ret

0000191a <strnlen_P>:
    191a:	fc 01       	movw	r30, r24
    191c:	05 90       	lpm	r0, Z+
    191e:	61 50       	subi	r22, 0x01	; 1
    1920:	70 40       	sbci	r23, 0x00	; 0
    1922:	01 10       	cpse	r0, r1
    1924:	d8 f7       	brcc	.-10     	; 0x191c <strnlen_P+0x2>
    1926:	80 95       	com	r24
    1928:	90 95       	com	r25
    192a:	8e 0f       	add	r24, r30
    192c:	9f 1f       	adc	r25, r31
    192e:	08 95       	ret

00001930 <memset>:
    1930:	dc 01       	movw	r26, r24
    1932:	01 c0       	rjmp	.+2      	; 0x1936 <memset+0x6>
    1934:	6d 93       	st	X+, r22
    1936:	41 50       	subi	r20, 0x01	; 1
    1938:	50 40       	sbci	r21, 0x00	; 0
    193a:	e0 f7       	brcc	.-8      	; 0x1934 <memset+0x4>
    193c:	08 95       	ret

0000193e <strnlen>:
    193e:	fc 01       	movw	r30, r24
    1940:	61 50       	subi	r22, 0x01	; 1
    1942:	70 40       	sbci	r23, 0x00	; 0
    1944:	01 90       	ld	r0, Z+
    1946:	01 10       	cpse	r0, r1
    1948:	d8 f7       	brcc	.-10     	; 0x1940 <strnlen+0x2>
    194a:	80 95       	com	r24
    194c:	90 95       	com	r25
    194e:	8e 0f       	add	r24, r30
    1950:	9f 1f       	adc	r25, r31
    1952:	08 95       	ret

00001954 <strrev>:
    1954:	dc 01       	movw	r26, r24
    1956:	fc 01       	movw	r30, r24
    1958:	67 2f       	mov	r22, r23
    195a:	71 91       	ld	r23, Z+
    195c:	77 23       	and	r23, r23
    195e:	e1 f7       	brne	.-8      	; 0x1958 <strrev+0x4>
    1960:	32 97       	sbiw	r30, 0x02	; 2
    1962:	04 c0       	rjmp	.+8      	; 0x196c <strrev+0x18>
    1964:	7c 91       	ld	r23, X
    1966:	6d 93       	st	X+, r22
    1968:	70 83       	st	Z, r23
    196a:	62 91       	ld	r22, -Z
    196c:	ae 17       	cp	r26, r30
    196e:	bf 07       	cpc	r27, r31
    1970:	c8 f3       	brcs	.-14     	; 0x1964 <strrev+0x10>
    1972:	08 95       	ret

00001974 <fputc>:
    1974:	0f 93       	push	r16
    1976:	1f 93       	push	r17
    1978:	cf 93       	push	r28
    197a:	df 93       	push	r29
    197c:	fb 01       	movw	r30, r22
    197e:	23 81       	ldd	r18, Z+3	; 0x03
    1980:	21 fd       	sbrc	r18, 1
    1982:	03 c0       	rjmp	.+6      	; 0x198a <fputc+0x16>
    1984:	8f ef       	ldi	r24, 0xFF	; 255
    1986:	9f ef       	ldi	r25, 0xFF	; 255
    1988:	2c c0       	rjmp	.+88     	; 0x19e2 <fputc+0x6e>
    198a:	22 ff       	sbrs	r18, 2
    198c:	16 c0       	rjmp	.+44     	; 0x19ba <fputc+0x46>
    198e:	46 81       	ldd	r20, Z+6	; 0x06
    1990:	57 81       	ldd	r21, Z+7	; 0x07
    1992:	24 81       	ldd	r18, Z+4	; 0x04
    1994:	35 81       	ldd	r19, Z+5	; 0x05
    1996:	42 17       	cp	r20, r18
    1998:	53 07       	cpc	r21, r19
    199a:	44 f4       	brge	.+16     	; 0x19ac <fputc+0x38>
    199c:	a0 81       	ld	r26, Z
    199e:	b1 81       	ldd	r27, Z+1	; 0x01
    19a0:	9d 01       	movw	r18, r26
    19a2:	2f 5f       	subi	r18, 0xFF	; 255
    19a4:	3f 4f       	sbci	r19, 0xFF	; 255
    19a6:	31 83       	std	Z+1, r19	; 0x01
    19a8:	20 83       	st	Z, r18
    19aa:	8c 93       	st	X, r24
    19ac:	26 81       	ldd	r18, Z+6	; 0x06
    19ae:	37 81       	ldd	r19, Z+7	; 0x07
    19b0:	2f 5f       	subi	r18, 0xFF	; 255
    19b2:	3f 4f       	sbci	r19, 0xFF	; 255
    19b4:	37 83       	std	Z+7, r19	; 0x07
    19b6:	26 83       	std	Z+6, r18	; 0x06
    19b8:	14 c0       	rjmp	.+40     	; 0x19e2 <fputc+0x6e>
    19ba:	8b 01       	movw	r16, r22
    19bc:	ec 01       	movw	r28, r24
    19be:	fb 01       	movw	r30, r22
    19c0:	00 84       	ldd	r0, Z+8	; 0x08
    19c2:	f1 85       	ldd	r31, Z+9	; 0x09
    19c4:	e0 2d       	mov	r30, r0
    19c6:	19 95       	eicall
    19c8:	89 2b       	or	r24, r25
    19ca:	e1 f6       	brne	.-72     	; 0x1984 <fputc+0x10>
    19cc:	d8 01       	movw	r26, r16
    19ce:	16 96       	adiw	r26, 0x06	; 6
    19d0:	8d 91       	ld	r24, X+
    19d2:	9c 91       	ld	r25, X
    19d4:	17 97       	sbiw	r26, 0x07	; 7
    19d6:	01 96       	adiw	r24, 0x01	; 1
    19d8:	17 96       	adiw	r26, 0x07	; 7
    19da:	9c 93       	st	X, r25
    19dc:	8e 93       	st	-X, r24
    19de:	16 97       	sbiw	r26, 0x06	; 6
    19e0:	ce 01       	movw	r24, r28
    19e2:	df 91       	pop	r29
    19e4:	cf 91       	pop	r28
    19e6:	1f 91       	pop	r17
    19e8:	0f 91       	pop	r16
    19ea:	08 95       	ret

000019ec <__ultoa_invert>:
    19ec:	fa 01       	movw	r30, r20
    19ee:	aa 27       	eor	r26, r26
    19f0:	28 30       	cpi	r18, 0x08	; 8
    19f2:	51 f1       	breq	.+84     	; 0x1a48 <__ultoa_invert+0x5c>
    19f4:	20 31       	cpi	r18, 0x10	; 16
    19f6:	81 f1       	breq	.+96     	; 0x1a58 <__ultoa_invert+0x6c>
    19f8:	e8 94       	clt
    19fa:	6f 93       	push	r22
    19fc:	6e 7f       	andi	r22, 0xFE	; 254
    19fe:	6e 5f       	subi	r22, 0xFE	; 254
    1a00:	7f 4f       	sbci	r23, 0xFF	; 255
    1a02:	8f 4f       	sbci	r24, 0xFF	; 255
    1a04:	9f 4f       	sbci	r25, 0xFF	; 255
    1a06:	af 4f       	sbci	r26, 0xFF	; 255
    1a08:	b1 e0       	ldi	r27, 0x01	; 1
    1a0a:	3e d0       	rcall	.+124    	; 0x1a88 <__ultoa_invert+0x9c>
    1a0c:	b4 e0       	ldi	r27, 0x04	; 4
    1a0e:	3c d0       	rcall	.+120    	; 0x1a88 <__ultoa_invert+0x9c>
    1a10:	67 0f       	add	r22, r23
    1a12:	78 1f       	adc	r23, r24
    1a14:	89 1f       	adc	r24, r25
    1a16:	9a 1f       	adc	r25, r26
    1a18:	a1 1d       	adc	r26, r1
    1a1a:	68 0f       	add	r22, r24
    1a1c:	79 1f       	adc	r23, r25
    1a1e:	8a 1f       	adc	r24, r26
    1a20:	91 1d       	adc	r25, r1
    1a22:	a1 1d       	adc	r26, r1
    1a24:	6a 0f       	add	r22, r26
    1a26:	71 1d       	adc	r23, r1
    1a28:	81 1d       	adc	r24, r1
    1a2a:	91 1d       	adc	r25, r1
    1a2c:	a1 1d       	adc	r26, r1
    1a2e:	20 d0       	rcall	.+64     	; 0x1a70 <__ultoa_invert+0x84>
    1a30:	09 f4       	brne	.+2      	; 0x1a34 <__ultoa_invert+0x48>
    1a32:	68 94       	set
    1a34:	3f 91       	pop	r19
    1a36:	2a e0       	ldi	r18, 0x0A	; 10
    1a38:	26 9f       	mul	r18, r22
    1a3a:	11 24       	eor	r1, r1
    1a3c:	30 19       	sub	r19, r0
    1a3e:	30 5d       	subi	r19, 0xD0	; 208
    1a40:	31 93       	st	Z+, r19
    1a42:	de f6       	brtc	.-74     	; 0x19fa <__ultoa_invert+0xe>
    1a44:	cf 01       	movw	r24, r30
    1a46:	08 95       	ret
    1a48:	46 2f       	mov	r20, r22
    1a4a:	47 70       	andi	r20, 0x07	; 7
    1a4c:	40 5d       	subi	r20, 0xD0	; 208
    1a4e:	41 93       	st	Z+, r20
    1a50:	b3 e0       	ldi	r27, 0x03	; 3
    1a52:	0f d0       	rcall	.+30     	; 0x1a72 <__ultoa_invert+0x86>
    1a54:	c9 f7       	brne	.-14     	; 0x1a48 <__ultoa_invert+0x5c>
    1a56:	f6 cf       	rjmp	.-20     	; 0x1a44 <__ultoa_invert+0x58>
    1a58:	46 2f       	mov	r20, r22
    1a5a:	4f 70       	andi	r20, 0x0F	; 15
    1a5c:	40 5d       	subi	r20, 0xD0	; 208
    1a5e:	4a 33       	cpi	r20, 0x3A	; 58
    1a60:	18 f0       	brcs	.+6      	; 0x1a68 <__ultoa_invert+0x7c>
    1a62:	49 5d       	subi	r20, 0xD9	; 217
    1a64:	31 fd       	sbrc	r19, 1
    1a66:	40 52       	subi	r20, 0x20	; 32
    1a68:	41 93       	st	Z+, r20
    1a6a:	02 d0       	rcall	.+4      	; 0x1a70 <__ultoa_invert+0x84>
    1a6c:	a9 f7       	brne	.-22     	; 0x1a58 <__ultoa_invert+0x6c>
    1a6e:	ea cf       	rjmp	.-44     	; 0x1a44 <__ultoa_invert+0x58>
    1a70:	b4 e0       	ldi	r27, 0x04	; 4
    1a72:	a6 95       	lsr	r26
    1a74:	97 95       	ror	r25
    1a76:	87 95       	ror	r24
    1a78:	77 95       	ror	r23
    1a7a:	67 95       	ror	r22
    1a7c:	ba 95       	dec	r27
    1a7e:	c9 f7       	brne	.-14     	; 0x1a72 <__ultoa_invert+0x86>
    1a80:	00 97       	sbiw	r24, 0x00	; 0
    1a82:	61 05       	cpc	r22, r1
    1a84:	71 05       	cpc	r23, r1
    1a86:	08 95       	ret
    1a88:	9b 01       	movw	r18, r22
    1a8a:	ac 01       	movw	r20, r24
    1a8c:	0a 2e       	mov	r0, r26
    1a8e:	06 94       	lsr	r0
    1a90:	57 95       	ror	r21
    1a92:	47 95       	ror	r20
    1a94:	37 95       	ror	r19
    1a96:	27 95       	ror	r18
    1a98:	ba 95       	dec	r27
    1a9a:	c9 f7       	brne	.-14     	; 0x1a8e <__ultoa_invert+0xa2>
    1a9c:	62 0f       	add	r22, r18
    1a9e:	73 1f       	adc	r23, r19
    1aa0:	84 1f       	adc	r24, r20
    1aa2:	95 1f       	adc	r25, r21
    1aa4:	a0 1d       	adc	r26, r0
    1aa6:	08 95       	ret

00001aa8 <_exit>:
    1aa8:	f8 94       	cli

00001aaa <__stop_program>:
    1aaa:	ff cf       	rjmp	.-2      	; 0x1aaa <__stop_program>
