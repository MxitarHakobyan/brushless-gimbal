
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001a4  00800200  00002be4  00002c78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002be4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000093  008003a4  008003a4  00002e1c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002e78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002c0  00000000  00000000  00002eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000038aa  00000000  00000000  00003178  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a3c  00000000  00000000  00006a22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019cc  00000000  00000000  0000845e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008a8  00000000  00000000  00009e2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d81  00000000  00000000  0000a6d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002364  00000000  00000000  0000b455  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000d7b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 93 0a 	jmp	0x1526	; 0x1526 <__vector_17>
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__bad_interrupt>
      66:	00 00       	nop
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2332>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	e4 ee       	ldi	r30, 0xE4	; 228
     22c:	fb e2       	ldi	r31, 0x2B	; 43
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	a4 3a       	cpi	r26, 0xA4	; 164
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	a4 ea       	ldi	r26, 0xA4	; 164
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	a7 33       	cpi	r26, 0x37	; 55
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	51 d5       	rcall	.+2722   	; 0xcf2 <main>
     250:	0c 94 f0 15 	jmp	0x2be0	; 0x2be0 <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
{	
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     256:	08 95       	ret

00000258 <PWM_update>:
void PWM_update()//motor pwm update
{
     258:	af 92       	push	r10
     25a:	bf 92       	push	r11
     25c:	cf 92       	push	r12
     25e:	df 92       	push	r13
     260:	ef 92       	push	r14
     262:	ff 92       	push	r15
     264:	0f 93       	push	r16
     266:	1f 93       	push	r17
	
	PID_roll=Compute_PID(kalman_angle_roll, 0 , &pid_i_roll, &previous_error_roll,dt,kp_roll,ki_roll,kd_roll);
     268:	a0 90 25 04 	lds	r10, 0x0425	; 0x800425 <dt>
     26c:	b0 90 26 04 	lds	r11, 0x0426	; 0x800426 <dt+0x1>
     270:	c0 90 27 04 	lds	r12, 0x0427	; 0x800427 <dt+0x2>
     274:	d0 90 28 04 	lds	r13, 0x0428	; 0x800428 <dt+0x3>
     278:	60 91 29 04 	lds	r22, 0x0429	; 0x800429 <kalman_angle_roll>
     27c:	70 91 2a 04 	lds	r23, 0x042A	; 0x80042a <kalman_angle_roll+0x1>
     280:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <kalman_angle_roll+0x2>
     284:	90 91 2c 04 	lds	r25, 0x042C	; 0x80042c <kalman_angle_roll+0x3>
     288:	20 91 7c 03 	lds	r18, 0x037C	; 0x80037c <kd_roll+0x3>
     28c:	2f 93       	push	r18
     28e:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <kd_roll+0x2>
     292:	2f 93       	push	r18
     294:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <kd_roll+0x1>
     298:	2f 93       	push	r18
     29a:	20 91 79 03 	lds	r18, 0x0379	; 0x800379 <kd_roll>
     29e:	2f 93       	push	r18
     2a0:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <ki_roll+0x3>
     2a4:	2f 93       	push	r18
     2a6:	20 91 7f 03 	lds	r18, 0x037F	; 0x80037f <ki_roll+0x2>
     2aa:	2f 93       	push	r18
     2ac:	20 91 7e 03 	lds	r18, 0x037E	; 0x80037e <ki_roll+0x1>
     2b0:	2f 93       	push	r18
     2b2:	20 91 7d 03 	lds	r18, 0x037D	; 0x80037d <ki_roll>
     2b6:	2f 93       	push	r18
     2b8:	20 91 84 03 	lds	r18, 0x0384	; 0x800384 <kp_roll+0x3>
     2bc:	2f 93       	push	r18
     2be:	20 91 83 03 	lds	r18, 0x0383	; 0x800383 <kp_roll+0x2>
     2c2:	2f 93       	push	r18
     2c4:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <kp_roll+0x1>
     2c8:	2f 93       	push	r18
     2ca:	20 91 81 03 	lds	r18, 0x0381	; 0x800381 <kp_roll>
     2ce:	2f 93       	push	r18
     2d0:	0f 2e       	mov	r0, r31
     2d2:	f5 eb       	ldi	r31, 0xB5	; 181
     2d4:	ef 2e       	mov	r14, r31
     2d6:	f3 e0       	ldi	r31, 0x03	; 3
     2d8:	ff 2e       	mov	r15, r31
     2da:	f0 2d       	mov	r31, r0
     2dc:	01 eb       	ldi	r16, 0xB1	; 177
     2de:	13 e0       	ldi	r17, 0x03	; 3
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	a9 01       	movw	r20, r18
     2e6:	d6 d7       	rcall	.+4012   	; 0x1294 <Compute_PID>
     2e8:	60 93 b9 03 	sts	0x03B9, r22	; 0x8003b9 <PID_roll>
     2ec:	70 93 ba 03 	sts	0x03BA, r23	; 0x8003ba <PID_roll+0x1>
     2f0:	80 93 bb 03 	sts	0x03BB, r24	; 0x8003bb <PID_roll+0x2>
     2f4:	90 93 bc 03 	sts	0x03BC, r25	; 0x8003bc <PID_roll+0x3>
	//double PID_pitch=Compute_PID(kalman_angle_pitch, 0 ,&pid_i_pitch,&previous_error_pitch,dt,kp_pitch,ki_pitch,kd_pitch);
	//printSD("kal = ", previous_error_roll);
	U_PWM=pwmSin[U_step];
     2f8:	e0 91 a6 03 	lds	r30, 0x03A6	; 0x8003a6 <U_step>
     2fc:	f0 91 a7 03 	lds	r31, 0x03A7	; 0x8003a7 <U_step+0x1>
     300:	ea 5f       	subi	r30, 0xFA	; 250
     302:	fd 4f       	sbci	r31, 0xFD	; 253
     304:	80 81       	ld	r24, Z
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     30c:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     310:	e0 91 75 03 	lds	r30, 0x0375	; 0x800375 <V_step>
     314:	f0 91 76 03 	lds	r31, 0x0376	; 0x800376 <V_step+0x1>
     318:	ea 5f       	subi	r30, 0xFA	; 250
     31a:	fd 4f       	sbci	r31, 0xFD	; 253
     31c:	80 81       	ld	r24, Z
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     324:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     328:	e0 91 73 03 	lds	r30, 0x0373	; 0x800373 <W_step>
     32c:	f0 91 74 03 	lds	r31, 0x0374	; 0x800374 <W_step+0x1>
     330:	ea 5f       	subi	r30, 0xFA	; 250
     332:	fd 4f       	sbci	r31, 0xFD	; 253
     334:	80 81       	ld	r24, Z
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     33c:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	//U_PWM=255;
	//V_PWM=170;
	//W_PWM=85;
	U_step=U_step+incr;
     340:	60 91 c7 03 	lds	r22, 0x03C7	; 0x8003c7 <incr>
     344:	70 91 c8 03 	lds	r23, 0x03C8	; 0x8003c8 <incr+0x1>
     348:	40 91 a6 03 	lds	r20, 0x03A6	; 0x8003a6 <U_step>
     34c:	50 91 a7 03 	lds	r21, 0x03A7	; 0x8003a7 <U_step+0x1>
     350:	46 0f       	add	r20, r22
     352:	57 1f       	adc	r21, r23
     354:	50 93 a7 03 	sts	0x03A7, r21	; 0x8003a7 <U_step+0x1>
     358:	40 93 a6 03 	sts	0x03A6, r20	; 0x8003a6 <U_step>
	V_step=V_step+incr;
     35c:	20 91 75 03 	lds	r18, 0x0375	; 0x800375 <V_step>
     360:	30 91 76 03 	lds	r19, 0x0376	; 0x800376 <V_step+0x1>
     364:	26 0f       	add	r18, r22
     366:	37 1f       	adc	r19, r23
     368:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     36c:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step+incr;
     370:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <W_step>
     374:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <W_step+0x1>
     378:	86 0f       	add	r24, r22
     37a:	97 1f       	adc	r25, r23
     37c:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     380:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	if(U_step > SINE_TABLE_SZ)
     384:	6d b7       	in	r22, 0x3d	; 61
     386:	7e b7       	in	r23, 0x3e	; 62
     388:	64 5f       	subi	r22, 0xF4	; 244
     38a:	7f 4f       	sbci	r23, 0xFF	; 255
     38c:	0f b6       	in	r0, 0x3f	; 63
     38e:	f8 94       	cli
     390:	7e bf       	out	0x3e, r23	; 62
     392:	0f be       	out	0x3f, r0	; 63
     394:	6d bf       	out	0x3d, r22	; 61
     396:	49 36       	cpi	r20, 0x69	; 105
     398:	71 e0       	ldi	r23, 0x01	; 1
     39a:	57 07       	cpc	r21, r23
     39c:	2c f0       	brlt	.+10     	; 0x3a8 <PWM_update+0x150>
	U_step = 0;
     39e:	10 92 a7 03 	sts	0x03A7, r1	; 0x8003a7 <U_step+0x1>
     3a2:	10 92 a6 03 	sts	0x03A6, r1	; 0x8003a6 <U_step>
     3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <PWM_update+0x160>
	if(U_step < 0)
     3a8:	55 23       	and	r21, r21
     3aa:	34 f4       	brge	.+12     	; 0x3b8 <PWM_update+0x160>
	U_step = SINE_TABLE_SZ;
     3ac:	48 e6       	ldi	r20, 0x68	; 104
     3ae:	51 e0       	ldi	r21, 0x01	; 1
     3b0:	50 93 a7 03 	sts	0x03A7, r21	; 0x8003a7 <U_step+0x1>
     3b4:	40 93 a6 03 	sts	0x03A6, r20	; 0x8003a6 <U_step>
	
	if(V_step > SINE_TABLE_SZ)
     3b8:	29 36       	cpi	r18, 0x69	; 105
     3ba:	41 e0       	ldi	r20, 0x01	; 1
     3bc:	34 07       	cpc	r19, r20
     3be:	2c f0       	brlt	.+10     	; 0x3ca <PWM_update+0x172>
	V_step = 0;
     3c0:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <V_step+0x1>
     3c4:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <V_step>
     3c8:	08 c0       	rjmp	.+16     	; 0x3da <PWM_update+0x182>
	if(V_step < 0)
     3ca:	33 23       	and	r19, r19
     3cc:	34 f4       	brge	.+12     	; 0x3da <PWM_update+0x182>
	V_step = SINE_TABLE_SZ;
     3ce:	28 e6       	ldi	r18, 0x68	; 104
     3d0:	31 e0       	ldi	r19, 0x01	; 1
     3d2:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     3d6:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     3da:	89 36       	cpi	r24, 0x69	; 105
     3dc:	61 e0       	ldi	r22, 0x01	; 1
     3de:	96 07       	cpc	r25, r22
     3e0:	2c f0       	brlt	.+10     	; 0x3ec <PWM_update+0x194>
	W_step = 0;
     3e2:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <W_step+0x1>
     3e6:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <W_step>
     3ea:	08 c0       	rjmp	.+16     	; 0x3fc <PWM_update+0x1a4>
	if(W_step < 0)
     3ec:	99 23       	and	r25, r25
     3ee:	34 f4       	brge	.+12     	; 0x3fc <PWM_update+0x1a4>
	W_step = SINE_TABLE_SZ;
     3f0:	88 e6       	ldi	r24, 0x68	; 104
     3f2:	91 e0       	ldi	r25, 0x01	; 1
     3f4:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     3f8:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	//printf("debug 0000000");
	INT_MOTOR_SPEED1=pwm_delay;
     3fc:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <pwm_delay>
     400:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <pwm_delay+0x1>
     404:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     408:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
}
     40c:	1f 91       	pop	r17
     40e:	0f 91       	pop	r16
     410:	ff 90       	pop	r15
     412:	ef 90       	pop	r14
     414:	df 90       	pop	r13
     416:	cf 90       	pop	r12
     418:	bf 90       	pop	r11
     41a:	af 90       	pop	r10
     41c:	08 95       	ret

0000041e <PWM_update_2>:
void PWM_update_2()//motor pwm update
{
	U1_PWM=pwmSin[U_step_2];
     41e:	e0 91 a4 03 	lds	r30, 0x03A4	; 0x8003a4 <__data_end>
     422:	f0 91 a5 03 	lds	r31, 0x03A5	; 0x8003a5 <__data_end+0x1>
     426:	ea 5f       	subi	r30, 0xFA	; 250
     428:	fd 4f       	sbci	r31, 0xFD	; 253
     42a:	80 81       	ld	r24, Z
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     432:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	V1_PWM=pwmSin[V_step_2];
     436:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step_2>
     43a:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step_2+0x1>
     43e:	ea 5f       	subi	r30, 0xFA	; 250
     440:	fd 4f       	sbci	r31, 0xFD	; 253
     442:	80 81       	ld	r24, Z
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     44a:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
	W1_PWM=pwmSin[W_step_2];
     44e:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step_2>
     452:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step_2+0x1>
     456:	ea 5f       	subi	r30, 0xFA	; 250
     458:	fd 4f       	sbci	r31, 0xFD	; 253
     45a:	80 81       	ld	r24, Z
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     462:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
	U_step_2=U_step_2+incr_2;
     466:	60 91 c5 03 	lds	r22, 0x03C5	; 0x8003c5 <incr_2>
     46a:	70 91 c6 03 	lds	r23, 0x03C6	; 0x8003c6 <incr_2+0x1>
     46e:	40 91 a4 03 	lds	r20, 0x03A4	; 0x8003a4 <__data_end>
     472:	50 91 a5 03 	lds	r21, 0x03A5	; 0x8003a5 <__data_end+0x1>
     476:	46 0f       	add	r20, r22
     478:	57 1f       	adc	r21, r23
     47a:	50 93 a5 03 	sts	0x03A5, r21	; 0x8003a5 <__data_end+0x1>
     47e:	40 93 a4 03 	sts	0x03A4, r20	; 0x8003a4 <__data_end>
	V_step_2=V_step_2+incr_2;
     482:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step_2>
     486:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step_2+0x1>
     48a:	26 0f       	add	r18, r22
     48c:	37 1f       	adc	r19, r23
     48e:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     492:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_2+incr_2;
     496:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step_2>
     49a:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step_2+0x1>
     49e:	86 0f       	add	r24, r22
     4a0:	97 1f       	adc	r25, r23
     4a2:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     4a6:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	if(U_step_2 > SINE_TABLE_SZ)
     4aa:	49 36       	cpi	r20, 0x69	; 105
     4ac:	61 e0       	ldi	r22, 0x01	; 1
     4ae:	56 07       	cpc	r21, r22
     4b0:	2c f0       	brlt	.+10     	; 0x4bc <PWM_update_2+0x9e>
	U_step_2 = 0;
     4b2:	10 92 a5 03 	sts	0x03A5, r1	; 0x8003a5 <__data_end+0x1>
     4b6:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <__data_end>
     4ba:	08 c0       	rjmp	.+16     	; 0x4cc <PWM_update_2+0xae>
	if(U_step_2 < 0)
     4bc:	55 23       	and	r21, r21
     4be:	34 f4       	brge	.+12     	; 0x4cc <PWM_update_2+0xae>
	U_step_2 = SINE_TABLE_SZ;
     4c0:	48 e6       	ldi	r20, 0x68	; 104
     4c2:	51 e0       	ldi	r21, 0x01	; 1
     4c4:	50 93 a5 03 	sts	0x03A5, r21	; 0x8003a5 <__data_end+0x1>
     4c8:	40 93 a4 03 	sts	0x03A4, r20	; 0x8003a4 <__data_end>
	
	if(V_step_2 > SINE_TABLE_SZ)
     4cc:	29 36       	cpi	r18, 0x69	; 105
     4ce:	41 e0       	ldi	r20, 0x01	; 1
     4d0:	34 07       	cpc	r19, r20
     4d2:	2c f0       	brlt	.+10     	; 0x4de <PWM_update_2+0xc0>
	V_step_2 = 0;
     4d4:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step_2+0x1>
     4d8:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step_2>
     4dc:	08 c0       	rjmp	.+16     	; 0x4ee <PWM_update_2+0xd0>
	if(V_step_2 < 0)
     4de:	33 23       	and	r19, r19
     4e0:	34 f4       	brge	.+12     	; 0x4ee <PWM_update_2+0xd0>
	V_step = SINE_TABLE_SZ;
     4e2:	28 e6       	ldi	r18, 0x68	; 104
     4e4:	31 e0       	ldi	r19, 0x01	; 1
     4e6:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     4ea:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step_2 > SINE_TABLE_SZ)
     4ee:	89 36       	cpi	r24, 0x69	; 105
     4f0:	61 e0       	ldi	r22, 0x01	; 1
     4f2:	96 07       	cpc	r25, r22
     4f4:	2c f0       	brlt	.+10     	; 0x500 <PWM_update_2+0xe2>
	W_step_2 = 0;
     4f6:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step_2+0x1>
     4fa:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step_2>
     4fe:	08 c0       	rjmp	.+16     	; 0x510 <PWM_update_2+0xf2>
	if(W_step_2< 0)
     500:	99 23       	and	r25, r25
     502:	34 f4       	brge	.+12     	; 0x510 <PWM_update_2+0xf2>
	W_step_2 = SINE_TABLE_SZ;
     504:	88 e6       	ldi	r24, 0x68	; 104
     506:	91 e0       	ldi	r25, 0x01	; 1
     508:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     50c:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	//_delay_us(100);
	INT_MOTOR_SPEED2=pwm_delay_2;
     510:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <pwm_delay_2>
     514:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <pwm_delay_2+0x1>
     518:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     51c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     520:	08 95       	ret

00000522 <init_motor_gpio>:
	//printf("oopooo");
}
void init_motor_gpio()
{
	//setting pin mode to output for motor 1 
	sbi(DDRH,3);//digital 6 OC4A
     522:	e1 e0       	ldi	r30, 0x01	; 1
     524:	f1 e0       	ldi	r31, 0x01	; 1
     526:	80 81       	ld	r24, Z
     528:	88 60       	ori	r24, 0x08	; 8
     52a:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     52c:	80 81       	ld	r24, Z
     52e:	80 61       	ori	r24, 0x10	; 16
     530:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     532:	80 81       	ld	r24, Z
     534:	80 62       	ori	r24, 0x20	; 32
     536:	80 83       	st	Z, r24
	
	sbi(DDRA,0);//digital 22 EN1
     538:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     53a:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     53c:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     53e:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     540:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     542:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     544:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     546:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     548:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     54a:	47 9a       	sbi	0x08, 7	; 8
	
	
	//setting pin mode to output for motor 2
	sbi(DDRE,4);//digital 2 OC3B
     54c:	6c 9a       	sbi	0x0d, 4	; 13
	sbi(DDRE,5);//digital 3 OC3C
     54e:	6d 9a       	sbi	0x0d, 5	; 13
	sbi(DDRE,3);//digital 5 OC3A
     550:	6b 9a       	sbi	0x0d, 3	; 13
	
	sbi(DDRC,5);//digital 32 EN1
     552:	3d 9a       	sbi	0x07, 5	; 7
	sbi(DDRC,3);//digital 34 EN2
     554:	3b 9a       	sbi	0x07, 3	; 7
	sbi(DDRC,1);//digital 36 EN3
     556:	39 9a       	sbi	0x07, 1	; 7
	sbi(DDRD,7);//digital 38 sleep
     558:	57 9a       	sbi	0x0a, 7	; 10
	sbi(DDRG,1);//digital 40 nf, see drv8313
     55a:	99 9a       	sbi	0x13, 1	; 19
	
	sbi(PORTC,5);//sleep HIGH
     55c:	45 9a       	sbi	0x08, 5	; 8
	sbi(PORTC,3);//nf HIGH
     55e:	43 9a       	sbi	0x08, 3	; 8
	sbi(PORTC,1);//EN1 HIGH
     560:	41 9a       	sbi	0x08, 1	; 8
	sbi(PORTD,7);//EN2 HIGH
     562:	5f 9a       	sbi	0x0b, 7	; 11
	sbi(PORTG,1);//EN3 HIGH
     564:	a1 9a       	sbi	0x14, 1	; 20
     566:	08 95       	ret

00000568 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     568:	4f 92       	push	r4
     56a:	5f 92       	push	r5
     56c:	6f 92       	push	r6
     56e:	7f 92       	push	r7
     570:	8f 92       	push	r8
     572:	9f 92       	push	r9
     574:	af 92       	push	r10
     576:	bf 92       	push	r11
     578:	cf 92       	push	r12
     57a:	df 92       	push	r13
     57c:	ef 92       	push	r14
     57e:	ff 92       	push	r15
     580:	0f 93       	push	r16
     582:	1f 93       	push	r17
     584:	cf 93       	push	r28
     586:	df 93       	push	r29
     588:	cd b7       	in	r28, 0x3d	; 61
     58a:	de b7       	in	r29, 0x3e	; 62
     58c:	6c 97       	sbiw	r28, 0x1c	; 28
     58e:	0f b6       	in	r0, 0x3f	; 63
     590:	f8 94       	cli
     592:	de bf       	out	0x3e, r29	; 62
     594:	0f be       	out	0x3f, r0	; 63
     596:	cd bf       	out	0x3d, r28	; 61
     598:	69 8b       	std	Y+17, r22	; 0x11
     59a:	7a 8b       	std	Y+18, r23	; 0x12
     59c:	8b 8b       	std	Y+19, r24	; 0x13
     59e:	9c 8b       	std	Y+20, r25	; 0x14
     5a0:	ca 01       	movw	r24, r20
     5a2:	b9 01       	movw	r22, r18
     5a4:	e9 82       	std	Y+1, r14	; 0x01
     5a6:	fa 82       	std	Y+2, r15	; 0x02
     5a8:	0b 83       	std	Y+3, r16	; 0x03
     5aa:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     5ac:	c0 90 d5 03 	lds	r12, 0x03D5	; 0x8003d5 <bias>
     5b0:	d0 90 d6 03 	lds	r13, 0x03D6	; 0x8003d6 <bias+0x1>
     5b4:	e0 90 d7 03 	lds	r14, 0x03D7	; 0x8003d7 <bias+0x2>
     5b8:	f0 90 d8 03 	lds	r15, 0x03D8	; 0x8003d8 <bias+0x3>
     5bc:	a7 01       	movw	r20, r14
     5be:	96 01       	movw	r18, r12
     5c0:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__subsf3>
     5c4:	60 93 cd 03 	sts	0x03CD, r22	; 0x8003cd <rate>
     5c8:	70 93 ce 03 	sts	0x03CE, r23	; 0x8003ce <rate+0x1>
     5cc:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <rate+0x2>
     5d0:	90 93 d0 03 	sts	0x03D0, r25	; 0x8003d0 <rate+0x3>
	angle += dt * rate;
     5d4:	29 81       	ldd	r18, Y+1	; 0x01
     5d6:	3a 81       	ldd	r19, Y+2	; 0x02
     5d8:	4b 81       	ldd	r20, Y+3	; 0x03
     5da:	5c 81       	ldd	r21, Y+4	; 0x04
     5dc:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     5e0:	20 91 f9 03 	lds	r18, 0x03F9	; 0x8003f9 <angle>
     5e4:	30 91 fa 03 	lds	r19, 0x03FA	; 0x8003fa <angle+0x1>
     5e8:	40 91 fb 03 	lds	r20, 0x03FB	; 0x8003fb <angle+0x2>
     5ec:	50 91 fc 03 	lds	r21, 0x03FC	; 0x8003fc <angle+0x3>
     5f0:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__addsf3>
     5f4:	6d 8b       	std	Y+21, r22	; 0x15
     5f6:	7e 8b       	std	Y+22, r23	; 0x16
     5f8:	8f 8b       	std	Y+23, r24	; 0x17
     5fa:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     5fc:	80 90 11 04 	lds	r8, 0x0411	; 0x800411 <P+0xc>
     600:	90 90 12 04 	lds	r9, 0x0412	; 0x800412 <P+0xd>
     604:	a0 90 13 04 	lds	r10, 0x0413	; 0x800413 <P+0xe>
     608:	b0 90 14 04 	lds	r11, 0x0414	; 0x800414 <P+0xf>
     60c:	a5 01       	movw	r20, r10
     60e:	94 01       	movw	r18, r8
     610:	69 81       	ldd	r22, Y+1	; 0x01
     612:	7a 81       	ldd	r23, Y+2	; 0x02
     614:	8b 81       	ldd	r24, Y+3	; 0x03
     616:	9c 81       	ldd	r25, Y+4	; 0x04
     618:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     61c:	6d 83       	std	Y+5, r22	; 0x05
     61e:	7e 83       	std	Y+6, r23	; 0x06
     620:	8f 83       	std	Y+7, r24	; 0x07
     622:	98 87       	std	Y+8, r25	; 0x08
     624:	40 90 09 04 	lds	r4, 0x0409	; 0x800409 <P+0x4>
     628:	50 90 0a 04 	lds	r5, 0x040A	; 0x80040a <P+0x5>
     62c:	60 90 0b 04 	lds	r6, 0x040B	; 0x80040b <P+0x6>
     630:	70 90 0c 04 	lds	r7, 0x040C	; 0x80040c <P+0x7>
     634:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <P+0x8>
     638:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <P+0x9>
     63c:	a0 91 0f 04 	lds	r26, 0x040F	; 0x80040f <P+0xa>
     640:	b0 91 10 04 	lds	r27, 0x0410	; 0x800410 <P+0xb>
     644:	8d 87       	std	Y+13, r24	; 0x0d
     646:	9e 87       	std	Y+14, r25	; 0x0e
     648:	af 87       	std	Y+15, r26	; 0x0f
     64a:	b8 8b       	std	Y+16, r27	; 0x10
     64c:	a3 01       	movw	r20, r6
     64e:	92 01       	movw	r18, r4
     650:	6d 81       	ldd	r22, Y+5	; 0x05
     652:	7e 81       	ldd	r23, Y+6	; 0x06
     654:	8f 81       	ldd	r24, Y+7	; 0x07
     656:	98 85       	ldd	r25, Y+8	; 0x08
     658:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__subsf3>
     65c:	2d 85       	ldd	r18, Y+13	; 0x0d
     65e:	3e 85       	ldd	r19, Y+14	; 0x0e
     660:	4f 85       	ldd	r20, Y+15	; 0x0f
     662:	58 89       	ldd	r21, Y+16	; 0x10
     664:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__subsf3>
     668:	20 91 d1 03 	lds	r18, 0x03D1	; 0x8003d1 <Q_angle>
     66c:	30 91 d2 03 	lds	r19, 0x03D2	; 0x8003d2 <Q_angle+0x1>
     670:	40 91 d3 03 	lds	r20, 0x03D3	; 0x8003d3 <Q_angle+0x2>
     674:	50 91 d4 03 	lds	r21, 0x03D4	; 0x8003d4 <Q_angle+0x3>
     678:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__addsf3>
     67c:	29 81       	ldd	r18, Y+1	; 0x01
     67e:	3a 81       	ldd	r19, Y+2	; 0x02
     680:	4b 81       	ldd	r20, Y+3	; 0x03
     682:	5c 81       	ldd	r21, Y+4	; 0x04
     684:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     688:	a5 e0       	ldi	r26, 0x05	; 5
     68a:	b4 e0       	ldi	r27, 0x04	; 4
     68c:	2d 91       	ld	r18, X+
     68e:	3d 91       	ld	r19, X+
     690:	4d 91       	ld	r20, X+
     692:	5c 91       	ld	r21, X
     694:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__addsf3>
     698:	69 87       	std	Y+9, r22	; 0x09
     69a:	7a 87       	std	Y+10, r23	; 0x0a
     69c:	8b 87       	std	Y+11, r24	; 0x0b
     69e:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     6a0:	2d 81       	ldd	r18, Y+5	; 0x05
     6a2:	3e 81       	ldd	r19, Y+6	; 0x06
     6a4:	4f 81       	ldd	r20, Y+7	; 0x07
     6a6:	58 85       	ldd	r21, Y+8	; 0x08
     6a8:	c3 01       	movw	r24, r6
     6aa:	b2 01       	movw	r22, r4
     6ac:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__subsf3>
     6b0:	2b 01       	movw	r4, r22
     6b2:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     6b4:	2d 81       	ldd	r18, Y+5	; 0x05
     6b6:	3e 81       	ldd	r19, Y+6	; 0x06
     6b8:	4f 81       	ldd	r20, Y+7	; 0x07
     6ba:	58 85       	ldd	r21, Y+8	; 0x08
     6bc:	6d 85       	ldd	r22, Y+13	; 0x0d
     6be:	7e 85       	ldd	r23, Y+14	; 0x0e
     6c0:	8f 85       	ldd	r24, Y+15	; 0x0f
     6c2:	98 89       	ldd	r25, Y+16	; 0x10
     6c4:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__subsf3>
     6c8:	6d 87       	std	Y+13, r22	; 0x0d
     6ca:	7e 87       	std	Y+14, r23	; 0x0e
     6cc:	8f 87       	std	Y+15, r24	; 0x0f
     6ce:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     6d0:	20 91 c9 03 	lds	r18, 0x03C9	; 0x8003c9 <Q_bias>
     6d4:	30 91 ca 03 	lds	r19, 0x03CA	; 0x8003ca <Q_bias+0x1>
     6d8:	40 91 cb 03 	lds	r20, 0x03CB	; 0x8003cb <Q_bias+0x2>
     6dc:	50 91 cc 03 	lds	r21, 0x03CC	; 0x8003cc <Q_bias+0x3>
     6e0:	69 81       	ldd	r22, Y+1	; 0x01
     6e2:	7a 81       	ldd	r23, Y+2	; 0x02
     6e4:	8b 81       	ldd	r24, Y+3	; 0x03
     6e6:	9c 81       	ldd	r25, Y+4	; 0x04
     6e8:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     6ec:	a5 01       	movw	r20, r10
     6ee:	94 01       	movw	r18, r8
     6f0:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__addsf3>
     6f4:	69 8f       	std	Y+25, r22	; 0x19
     6f6:	7a 8f       	std	Y+26, r23	; 0x1a
     6f8:	8b 8f       	std	Y+27, r24	; 0x1b
     6fa:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     6fc:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <R_measure>
     700:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <R_measure+0x1>
     704:	40 91 f3 03 	lds	r20, 0x03F3	; 0x8003f3 <R_measure+0x2>
     708:	50 91 f4 03 	lds	r21, 0x03F4	; 0x8003f4 <R_measure+0x3>
     70c:	69 85       	ldd	r22, Y+9	; 0x09
     70e:	7a 85       	ldd	r23, Y+10	; 0x0a
     710:	8b 85       	ldd	r24, Y+11	; 0x0b
     712:	9c 85       	ldd	r25, Y+12	; 0x0c
     714:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__addsf3>
     718:	4b 01       	movw	r8, r22
     71a:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     71c:	9b 01       	movw	r18, r22
     71e:	ac 01       	movw	r20, r24
     720:	69 85       	ldd	r22, Y+9	; 0x09
     722:	7a 85       	ldd	r23, Y+10	; 0x0a
     724:	8b 85       	ldd	r24, Y+11	; 0x0b
     726:	9c 85       	ldd	r25, Y+12	; 0x0c
     728:	0e 94 ae 0c 	call	0x195c	; 0x195c <__divsf3>
     72c:	69 83       	std	Y+1, r22	; 0x01
     72e:	7a 83       	std	Y+2, r23	; 0x02
     730:	8b 83       	std	Y+3, r24	; 0x03
     732:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     734:	a5 01       	movw	r20, r10
     736:	94 01       	movw	r18, r8
     738:	6d 85       	ldd	r22, Y+13	; 0x0d
     73a:	7e 85       	ldd	r23, Y+14	; 0x0e
     73c:	8f 85       	ldd	r24, Y+15	; 0x0f
     73e:	98 89       	ldd	r25, Y+16	; 0x10
     740:	0e 94 ae 0c 	call	0x195c	; 0x195c <__divsf3>
     744:	6d 83       	std	Y+5, r22	; 0x05
     746:	7e 83       	std	Y+6, r23	; 0x06
     748:	8f 83       	std	Y+7, r24	; 0x07
     74a:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     74c:	2d 89       	ldd	r18, Y+21	; 0x15
     74e:	3e 89       	ldd	r19, Y+22	; 0x16
     750:	4f 89       	ldd	r20, Y+23	; 0x17
     752:	58 8d       	ldd	r21, Y+24	; 0x18
     754:	69 89       	ldd	r22, Y+17	; 0x11
     756:	7a 89       	ldd	r23, Y+18	; 0x12
     758:	8b 89       	ldd	r24, Y+19	; 0x13
     75a:	9c 89       	ldd	r25, Y+20	; 0x14
     75c:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__subsf3>
     760:	69 8b       	std	Y+17, r22	; 0x11
     762:	7a 8b       	std	Y+18, r23	; 0x12
     764:	8b 8b       	std	Y+19, r24	; 0x13
     766:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     768:	9b 01       	movw	r18, r22
     76a:	ac 01       	movw	r20, r24
     76c:	69 81       	ldd	r22, Y+1	; 0x01
     76e:	7a 81       	ldd	r23, Y+2	; 0x02
     770:	8b 81       	ldd	r24, Y+3	; 0x03
     772:	9c 81       	ldd	r25, Y+4	; 0x04
     774:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     778:	2d 89       	ldd	r18, Y+21	; 0x15
     77a:	3e 89       	ldd	r19, Y+22	; 0x16
     77c:	4f 89       	ldd	r20, Y+23	; 0x17
     77e:	58 8d       	ldd	r21, Y+24	; 0x18
     780:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__addsf3>
     784:	4b 01       	movw	r8, r22
     786:	5c 01       	movw	r10, r24
     788:	60 93 f9 03 	sts	0x03F9, r22	; 0x8003f9 <angle>
     78c:	70 93 fa 03 	sts	0x03FA, r23	; 0x8003fa <angle+0x1>
     790:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <angle+0x2>
     794:	90 93 fc 03 	sts	0x03FC, r25	; 0x8003fc <angle+0x3>
	bias += K[1] * y;
     798:	29 89       	ldd	r18, Y+17	; 0x11
     79a:	3a 89       	ldd	r19, Y+18	; 0x12
     79c:	4b 89       	ldd	r20, Y+19	; 0x13
     79e:	5c 89       	ldd	r21, Y+20	; 0x14
     7a0:	6d 81       	ldd	r22, Y+5	; 0x05
     7a2:	7e 81       	ldd	r23, Y+6	; 0x06
     7a4:	8f 81       	ldd	r24, Y+7	; 0x07
     7a6:	98 85       	ldd	r25, Y+8	; 0x08
     7a8:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     7ac:	a7 01       	movw	r20, r14
     7ae:	96 01       	movw	r18, r12
     7b0:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__addsf3>
     7b4:	60 93 d5 03 	sts	0x03D5, r22	; 0x8003d5 <bias>
     7b8:	70 93 d6 03 	sts	0x03D6, r23	; 0x8003d6 <bias+0x1>
     7bc:	80 93 d7 03 	sts	0x03D7, r24	; 0x8003d7 <bias+0x2>
     7c0:	90 93 d8 03 	sts	0x03D8, r25	; 0x8003d8 <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     7c4:	29 81       	ldd	r18, Y+1	; 0x01
     7c6:	3a 81       	ldd	r19, Y+2	; 0x02
     7c8:	4b 81       	ldd	r20, Y+3	; 0x03
     7ca:	5c 81       	ldd	r21, Y+4	; 0x04
     7cc:	69 85       	ldd	r22, Y+9	; 0x09
     7ce:	7a 85       	ldd	r23, Y+10	; 0x0a
     7d0:	8b 85       	ldd	r24, Y+11	; 0x0b
     7d2:	9c 85       	ldd	r25, Y+12	; 0x0c
     7d4:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     7d8:	9b 01       	movw	r18, r22
     7da:	ac 01       	movw	r20, r24
     7dc:	69 85       	ldd	r22, Y+9	; 0x09
     7de:	7a 85       	ldd	r23, Y+10	; 0x0a
     7e0:	8b 85       	ldd	r24, Y+11	; 0x0b
     7e2:	9c 85       	ldd	r25, Y+12	; 0x0c
     7e4:	f0 d7       	rcall	.+4064   	; 0x17c6 <__subsf3>
     7e6:	e5 e0       	ldi	r30, 0x05	; 5
     7e8:	f4 e0       	ldi	r31, 0x04	; 4
     7ea:	60 83       	st	Z, r22
     7ec:	71 83       	std	Z+1, r23	; 0x01
     7ee:	82 83       	std	Z+2, r24	; 0x02
     7f0:	93 83       	std	Z+3, r25	; 0x03
	P[0][1] -= K[0] * P01_temp;
     7f2:	29 81       	ldd	r18, Y+1	; 0x01
     7f4:	3a 81       	ldd	r19, Y+2	; 0x02
     7f6:	4b 81       	ldd	r20, Y+3	; 0x03
     7f8:	5c 81       	ldd	r21, Y+4	; 0x04
     7fa:	c3 01       	movw	r24, r6
     7fc:	b2 01       	movw	r22, r4
     7fe:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     802:	9b 01       	movw	r18, r22
     804:	ac 01       	movw	r20, r24
     806:	c3 01       	movw	r24, r6
     808:	b2 01       	movw	r22, r4
     80a:	dd d7       	rcall	.+4026   	; 0x17c6 <__subsf3>
     80c:	60 93 09 04 	sts	0x0409, r22	; 0x800409 <P+0x4>
     810:	70 93 0a 04 	sts	0x040A, r23	; 0x80040a <P+0x5>
     814:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <P+0x6>
     818:	90 93 0c 04 	sts	0x040C, r25	; 0x80040c <P+0x7>
	P[1][0] -= K[1] * P00_temp;
     81c:	2d 81       	ldd	r18, Y+5	; 0x05
     81e:	3e 81       	ldd	r19, Y+6	; 0x06
     820:	4f 81       	ldd	r20, Y+7	; 0x07
     822:	58 85       	ldd	r21, Y+8	; 0x08
     824:	69 85       	ldd	r22, Y+9	; 0x09
     826:	7a 85       	ldd	r23, Y+10	; 0x0a
     828:	8b 85       	ldd	r24, Y+11	; 0x0b
     82a:	9c 85       	ldd	r25, Y+12	; 0x0c
     82c:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     830:	9b 01       	movw	r18, r22
     832:	ac 01       	movw	r20, r24
     834:	6d 85       	ldd	r22, Y+13	; 0x0d
     836:	7e 85       	ldd	r23, Y+14	; 0x0e
     838:	8f 85       	ldd	r24, Y+15	; 0x0f
     83a:	98 89       	ldd	r25, Y+16	; 0x10
     83c:	c4 d7       	rcall	.+3976   	; 0x17c6 <__subsf3>
     83e:	60 93 0d 04 	sts	0x040D, r22	; 0x80040d <P+0x8>
     842:	70 93 0e 04 	sts	0x040E, r23	; 0x80040e <P+0x9>
     846:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <P+0xa>
     84a:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <P+0xb>
	P[1][1] -= K[1] * P01_temp;
     84e:	2d 81       	ldd	r18, Y+5	; 0x05
     850:	3e 81       	ldd	r19, Y+6	; 0x06
     852:	4f 81       	ldd	r20, Y+7	; 0x07
     854:	58 85       	ldd	r21, Y+8	; 0x08
     856:	c3 01       	movw	r24, r6
     858:	b2 01       	movw	r22, r4
     85a:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     85e:	9b 01       	movw	r18, r22
     860:	ac 01       	movw	r20, r24
     862:	69 8d       	ldd	r22, Y+25	; 0x19
     864:	7a 8d       	ldd	r23, Y+26	; 0x1a
     866:	8b 8d       	ldd	r24, Y+27	; 0x1b
     868:	9c 8d       	ldd	r25, Y+28	; 0x1c
     86a:	ad d7       	rcall	.+3930   	; 0x17c6 <__subsf3>
     86c:	60 93 11 04 	sts	0x0411, r22	; 0x800411 <P+0xc>
     870:	70 93 12 04 	sts	0x0412, r23	; 0x800412 <P+0xd>
     874:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <P+0xe>
     878:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <P+0xf>

	return angle;
};
     87c:	c5 01       	movw	r24, r10
     87e:	b4 01       	movw	r22, r8
     880:	6c 96       	adiw	r28, 0x1c	; 28
     882:	0f b6       	in	r0, 0x3f	; 63
     884:	f8 94       	cli
     886:	de bf       	out	0x3e, r29	; 62
     888:	0f be       	out	0x3f, r0	; 63
     88a:	cd bf       	out	0x3d, r28	; 61
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	1f 91       	pop	r17
     892:	0f 91       	pop	r16
     894:	ff 90       	pop	r15
     896:	ef 90       	pop	r14
     898:	df 90       	pop	r13
     89a:	cf 90       	pop	r12
     89c:	bf 90       	pop	r11
     89e:	af 90       	pop	r10
     8a0:	9f 90       	pop	r9
     8a2:	8f 90       	pop	r8
     8a4:	7f 90       	pop	r7
     8a6:	6f 90       	pop	r6
     8a8:	5f 90       	pop	r5
     8aa:	4f 90       	pop	r4
     8ac:	08 95       	ret

000008ae <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     8ae:	8f e6       	ldi	r24, 0x6F	; 111
     8b0:	92 e1       	ldi	r25, 0x12	; 18
     8b2:	a3 e8       	ldi	r26, 0x83	; 131
     8b4:	ba e3       	ldi	r27, 0x3A	; 58
     8b6:	80 93 d1 03 	sts	0x03D1, r24	; 0x8003d1 <Q_angle>
     8ba:	90 93 d2 03 	sts	0x03D2, r25	; 0x8003d2 <Q_angle+0x1>
     8be:	a0 93 d3 03 	sts	0x03D3, r26	; 0x8003d3 <Q_angle+0x2>
     8c2:	b0 93 d4 03 	sts	0x03D4, r27	; 0x8003d4 <Q_angle+0x3>
	Q_bias = 0.003f;
     8c6:	86 ea       	ldi	r24, 0xA6	; 166
     8c8:	9b e9       	ldi	r25, 0x9B	; 155
     8ca:	a4 e4       	ldi	r26, 0x44	; 68
     8cc:	bb e3       	ldi	r27, 0x3B	; 59
     8ce:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <Q_bias>
     8d2:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <Q_bias+0x1>
     8d6:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <Q_bias+0x2>
     8da:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <Q_bias+0x3>
	R_measure = 0.03f;
     8de:	8f e8       	ldi	r24, 0x8F	; 143
     8e0:	92 ec       	ldi	r25, 0xC2	; 194
     8e2:	a5 ef       	ldi	r26, 0xF5	; 245
     8e4:	bc e3       	ldi	r27, 0x3C	; 60
     8e6:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <R_measure>
     8ea:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <R_measure+0x1>
     8ee:	a0 93 f3 03 	sts	0x03F3, r26	; 0x8003f3 <R_measure+0x2>
     8f2:	b0 93 f4 03 	sts	0x03F4, r27	; 0x8003f4 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     8f6:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <angle>
     8fa:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <angle+0x1>
     8fe:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <angle+0x2>
     902:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <angle+0x3>
	bias = 0.0f; // Reset bias
     906:	10 92 d5 03 	sts	0x03D5, r1	; 0x8003d5 <bias>
     90a:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <bias+0x1>
     90e:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <bias+0x2>
     912:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     916:	e5 e0       	ldi	r30, 0x05	; 5
     918:	f4 e0       	ldi	r31, 0x04	; 4
     91a:	10 82       	st	Z, r1
     91c:	11 82       	std	Z+1, r1	; 0x01
     91e:	12 82       	std	Z+2, r1	; 0x02
     920:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     922:	14 82       	std	Z+4, r1	; 0x04
     924:	15 82       	std	Z+5, r1	; 0x05
     926:	16 82       	std	Z+6, r1	; 0x06
     928:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     92a:	10 86       	std	Z+8, r1	; 0x08
     92c:	11 86       	std	Z+9, r1	; 0x09
     92e:	12 86       	std	Z+10, r1	; 0x0a
     930:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     932:	14 86       	std	Z+12, r1	; 0x0c
     934:	15 86       	std	Z+13, r1	; 0x0d
     936:	16 86       	std	Z+14, r1	; 0x0e
     938:	17 86       	std	Z+15, r1	; 0x0f
     93a:	08 95       	ret

0000093c <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     93c:	4f 92       	push	r4
     93e:	5f 92       	push	r5
     940:	6f 92       	push	r6
     942:	7f 92       	push	r7
     944:	8f 92       	push	r8
     946:	9f 92       	push	r9
     948:	af 92       	push	r10
     94a:	bf 92       	push	r11
     94c:	cf 92       	push	r12
     94e:	df 92       	push	r13
     950:	ef 92       	push	r14
     952:	ff 92       	push	r15
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	cd b7       	in	r28, 0x3d	; 61
     95e:	de b7       	in	r29, 0x3e	; 62
     960:	6c 97       	sbiw	r28, 0x1c	; 28
     962:	0f b6       	in	r0, 0x3f	; 63
     964:	f8 94       	cli
     966:	de bf       	out	0x3e, r29	; 62
     968:	0f be       	out	0x3f, r0	; 63
     96a:	cd bf       	out	0x3d, r28	; 61
     96c:	69 8b       	std	Y+17, r22	; 0x11
     96e:	7a 8b       	std	Y+18, r23	; 0x12
     970:	8b 8b       	std	Y+19, r24	; 0x13
     972:	9c 8b       	std	Y+20, r25	; 0x14
     974:	ca 01       	movw	r24, r20
     976:	b9 01       	movw	r22, r18
     978:	e9 82       	std	Y+1, r14	; 0x01
     97a:	fa 82       	std	Y+2, r15	; 0x02
     97c:	0b 83       	std	Y+3, r16	; 0x03
     97e:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     980:	c0 90 f5 03 	lds	r12, 0x03F5	; 0x8003f5 <bias_1>
     984:	d0 90 f6 03 	lds	r13, 0x03F6	; 0x8003f6 <bias_1+0x1>
     988:	e0 90 f7 03 	lds	r14, 0x03F7	; 0x8003f7 <bias_1+0x2>
     98c:	f0 90 f8 03 	lds	r15, 0x03F8	; 0x8003f8 <bias_1+0x3>
     990:	a7 01       	movw	r20, r14
     992:	96 01       	movw	r18, r12
     994:	18 d7       	rcall	.+3632   	; 0x17c6 <__subsf3>
     996:	60 93 ed 03 	sts	0x03ED, r22	; 0x8003ed <rate_1>
     99a:	70 93 ee 03 	sts	0x03EE, r23	; 0x8003ee <rate_1+0x1>
     99e:	80 93 ef 03 	sts	0x03EF, r24	; 0x8003ef <rate_1+0x2>
     9a2:	90 93 f0 03 	sts	0x03F0, r25	; 0x8003f0 <rate_1+0x3>
	angle_1 += dt * rate_1;
     9a6:	29 81       	ldd	r18, Y+1	; 0x01
     9a8:	3a 81       	ldd	r19, Y+2	; 0x02
     9aa:	4b 81       	ldd	r20, Y+3	; 0x03
     9ac:	5c 81       	ldd	r21, Y+4	; 0x04
     9ae:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     9b2:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <angle_1>
     9b6:	30 91 da 03 	lds	r19, 0x03DA	; 0x8003da <angle_1+0x1>
     9ba:	40 91 db 03 	lds	r20, 0x03DB	; 0x8003db <angle_1+0x2>
     9be:	50 91 dc 03 	lds	r21, 0x03DC	; 0x8003dc <angle_1+0x3>
     9c2:	02 d7       	rcall	.+3588   	; 0x17c8 <__addsf3>
     9c4:	6d 8b       	std	Y+21, r22	; 0x15
     9c6:	7e 8b       	std	Y+22, r23	; 0x16
     9c8:	8f 8b       	std	Y+23, r24	; 0x17
     9ca:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     9cc:	80 90 e9 03 	lds	r8, 0x03E9	; 0x8003e9 <P_1+0xc>
     9d0:	90 90 ea 03 	lds	r9, 0x03EA	; 0x8003ea <P_1+0xd>
     9d4:	a0 90 eb 03 	lds	r10, 0x03EB	; 0x8003eb <P_1+0xe>
     9d8:	b0 90 ec 03 	lds	r11, 0x03EC	; 0x8003ec <P_1+0xf>
     9dc:	a5 01       	movw	r20, r10
     9de:	94 01       	movw	r18, r8
     9e0:	69 81       	ldd	r22, Y+1	; 0x01
     9e2:	7a 81       	ldd	r23, Y+2	; 0x02
     9e4:	8b 81       	ldd	r24, Y+3	; 0x03
     9e6:	9c 81       	ldd	r25, Y+4	; 0x04
     9e8:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     9ec:	6d 83       	std	Y+5, r22	; 0x05
     9ee:	7e 83       	std	Y+6, r23	; 0x06
     9f0:	8f 83       	std	Y+7, r24	; 0x07
     9f2:	98 87       	std	Y+8, r25	; 0x08
     9f4:	40 90 e1 03 	lds	r4, 0x03E1	; 0x8003e1 <P_1+0x4>
     9f8:	50 90 e2 03 	lds	r5, 0x03E2	; 0x8003e2 <P_1+0x5>
     9fc:	60 90 e3 03 	lds	r6, 0x03E3	; 0x8003e3 <P_1+0x6>
     a00:	70 90 e4 03 	lds	r7, 0x03E4	; 0x8003e4 <P_1+0x7>
     a04:	80 91 e5 03 	lds	r24, 0x03E5	; 0x8003e5 <P_1+0x8>
     a08:	90 91 e6 03 	lds	r25, 0x03E6	; 0x8003e6 <P_1+0x9>
     a0c:	a0 91 e7 03 	lds	r26, 0x03E7	; 0x8003e7 <P_1+0xa>
     a10:	b0 91 e8 03 	lds	r27, 0x03E8	; 0x8003e8 <P_1+0xb>
     a14:	8d 87       	std	Y+13, r24	; 0x0d
     a16:	9e 87       	std	Y+14, r25	; 0x0e
     a18:	af 87       	std	Y+15, r26	; 0x0f
     a1a:	b8 8b       	std	Y+16, r27	; 0x10
     a1c:	a3 01       	movw	r20, r6
     a1e:	92 01       	movw	r18, r4
     a20:	6d 81       	ldd	r22, Y+5	; 0x05
     a22:	7e 81       	ldd	r23, Y+6	; 0x06
     a24:	8f 81       	ldd	r24, Y+7	; 0x07
     a26:	98 85       	ldd	r25, Y+8	; 0x08
     a28:	ce d6       	rcall	.+3484   	; 0x17c6 <__subsf3>
     a2a:	2d 85       	ldd	r18, Y+13	; 0x0d
     a2c:	3e 85       	ldd	r19, Y+14	; 0x0e
     a2e:	4f 85       	ldd	r20, Y+15	; 0x0f
     a30:	58 89       	ldd	r21, Y+16	; 0x10
     a32:	c9 d6       	rcall	.+3474   	; 0x17c6 <__subsf3>
     a34:	20 91 15 04 	lds	r18, 0x0415	; 0x800415 <Q_angle_1>
     a38:	30 91 16 04 	lds	r19, 0x0416	; 0x800416 <Q_angle_1+0x1>
     a3c:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <Q_angle_1+0x2>
     a40:	50 91 18 04 	lds	r21, 0x0418	; 0x800418 <Q_angle_1+0x3>
     a44:	c1 d6       	rcall	.+3458   	; 0x17c8 <__addsf3>
     a46:	29 81       	ldd	r18, Y+1	; 0x01
     a48:	3a 81       	ldd	r19, Y+2	; 0x02
     a4a:	4b 81       	ldd	r20, Y+3	; 0x03
     a4c:	5c 81       	ldd	r21, Y+4	; 0x04
     a4e:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     a52:	ad ed       	ldi	r26, 0xDD	; 221
     a54:	b3 e0       	ldi	r27, 0x03	; 3
     a56:	2d 91       	ld	r18, X+
     a58:	3d 91       	ld	r19, X+
     a5a:	4d 91       	ld	r20, X+
     a5c:	5c 91       	ld	r21, X
     a5e:	b4 d6       	rcall	.+3432   	; 0x17c8 <__addsf3>
     a60:	69 87       	std	Y+9, r22	; 0x09
     a62:	7a 87       	std	Y+10, r23	; 0x0a
     a64:	8b 87       	std	Y+11, r24	; 0x0b
	P_1[0][1] -= dt * P_1[1][1];
     a66:	9c 87       	std	Y+12, r25	; 0x0c
     a68:	2d 81       	ldd	r18, Y+5	; 0x05
     a6a:	3e 81       	ldd	r19, Y+6	; 0x06
     a6c:	4f 81       	ldd	r20, Y+7	; 0x07
     a6e:	58 85       	ldd	r21, Y+8	; 0x08
     a70:	c3 01       	movw	r24, r6
     a72:	b2 01       	movw	r22, r4
     a74:	a8 d6       	rcall	.+3408   	; 0x17c6 <__subsf3>
     a76:	2b 01       	movw	r4, r22
	P_1[1][0] -= dt * P_1[1][1];
     a78:	3c 01       	movw	r6, r24
     a7a:	2d 81       	ldd	r18, Y+5	; 0x05
     a7c:	3e 81       	ldd	r19, Y+6	; 0x06
     a7e:	4f 81       	ldd	r20, Y+7	; 0x07
     a80:	58 85       	ldd	r21, Y+8	; 0x08
     a82:	6d 85       	ldd	r22, Y+13	; 0x0d
     a84:	7e 85       	ldd	r23, Y+14	; 0x0e
     a86:	8f 85       	ldd	r24, Y+15	; 0x0f
     a88:	98 89       	ldd	r25, Y+16	; 0x10
     a8a:	9d d6       	rcall	.+3386   	; 0x17c6 <__subsf3>
     a8c:	6d 87       	std	Y+13, r22	; 0x0d
     a8e:	7e 87       	std	Y+14, r23	; 0x0e
     a90:	8f 87       	std	Y+15, r24	; 0x0f
	P_1[1][1] += Q_bias_1 * dt;
     a92:	98 8b       	std	Y+16, r25	; 0x10
     a94:	20 91 01 04 	lds	r18, 0x0401	; 0x800401 <Q_bias_1>
     a98:	30 91 02 04 	lds	r19, 0x0402	; 0x800402 <Q_bias_1+0x1>
     a9c:	40 91 03 04 	lds	r20, 0x0403	; 0x800403 <Q_bias_1+0x2>
     aa0:	50 91 04 04 	lds	r21, 0x0404	; 0x800404 <Q_bias_1+0x3>
     aa4:	69 81       	ldd	r22, Y+1	; 0x01
     aa6:	7a 81       	ldd	r23, Y+2	; 0x02
     aa8:	8b 81       	ldd	r24, Y+3	; 0x03
     aaa:	9c 81       	ldd	r25, Y+4	; 0x04
     aac:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     ab0:	a5 01       	movw	r20, r10
     ab2:	94 01       	movw	r18, r8
     ab4:	89 d6       	rcall	.+3346   	; 0x17c8 <__addsf3>
     ab6:	69 8f       	std	Y+25, r22	; 0x19
     ab8:	7a 8f       	std	Y+26, r23	; 0x1a
     aba:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     abc:	9c 8f       	std	Y+28, r25	; 0x1c
     abe:	20 91 fd 03 	lds	r18, 0x03FD	; 0x8003fd <R_measure_1>
     ac2:	30 91 fe 03 	lds	r19, 0x03FE	; 0x8003fe <R_measure_1+0x1>
     ac6:	40 91 ff 03 	lds	r20, 0x03FF	; 0x8003ff <R_measure_1+0x2>
     aca:	50 91 00 04 	lds	r21, 0x0400	; 0x800400 <R_measure_1+0x3>
     ace:	69 85       	ldd	r22, Y+9	; 0x09
     ad0:	7a 85       	ldd	r23, Y+10	; 0x0a
     ad2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ad4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ad6:	78 d6       	rcall	.+3312   	; 0x17c8 <__addsf3>
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     ad8:	4b 01       	movw	r8, r22
     ada:	5c 01       	movw	r10, r24
     adc:	9b 01       	movw	r18, r22
     ade:	ac 01       	movw	r20, r24
     ae0:	69 85       	ldd	r22, Y+9	; 0x09
     ae2:	7a 85       	ldd	r23, Y+10	; 0x0a
     ae4:	8b 85       	ldd	r24, Y+11	; 0x0b
     ae6:	9c 85       	ldd	r25, Y+12	; 0x0c
     ae8:	39 d7       	rcall	.+3698   	; 0x195c <__divsf3>
     aea:	69 83       	std	Y+1, r22	; 0x01
     aec:	7a 83       	std	Y+2, r23	; 0x02
	K_1[1] = P_1[1][0] / S_1;
     aee:	8b 83       	std	Y+3, r24	; 0x03
     af0:	9c 83       	std	Y+4, r25	; 0x04
     af2:	a5 01       	movw	r20, r10
     af4:	94 01       	movw	r18, r8
     af6:	6d 85       	ldd	r22, Y+13	; 0x0d
     af8:	7e 85       	ldd	r23, Y+14	; 0x0e
     afa:	8f 85       	ldd	r24, Y+15	; 0x0f
     afc:	98 89       	ldd	r25, Y+16	; 0x10
     afe:	2e d7       	rcall	.+3676   	; 0x195c <__divsf3>
     b00:	6d 83       	std	Y+5, r22	; 0x05
     b02:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     b04:	8f 83       	std	Y+7, r24	; 0x07
     b06:	98 87       	std	Y+8, r25	; 0x08
     b08:	2d 89       	ldd	r18, Y+21	; 0x15
     b0a:	3e 89       	ldd	r19, Y+22	; 0x16
     b0c:	4f 89       	ldd	r20, Y+23	; 0x17
     b0e:	58 8d       	ldd	r21, Y+24	; 0x18
     b10:	69 89       	ldd	r22, Y+17	; 0x11
     b12:	7a 89       	ldd	r23, Y+18	; 0x12
     b14:	8b 89       	ldd	r24, Y+19	; 0x13
     b16:	9c 89       	ldd	r25, Y+20	; 0x14
     b18:	56 d6       	rcall	.+3244   	; 0x17c6 <__subsf3>
     b1a:	69 8b       	std	Y+17, r22	; 0x11
     b1c:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     b1e:	8b 8b       	std	Y+19, r24	; 0x13
     b20:	9c 8b       	std	Y+20, r25	; 0x14
     b22:	9b 01       	movw	r18, r22
     b24:	ac 01       	movw	r20, r24
     b26:	69 81       	ldd	r22, Y+1	; 0x01
     b28:	7a 81       	ldd	r23, Y+2	; 0x02
     b2a:	8b 81       	ldd	r24, Y+3	; 0x03
     b2c:	9c 81       	ldd	r25, Y+4	; 0x04
     b2e:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     b32:	2d 89       	ldd	r18, Y+21	; 0x15
     b34:	3e 89       	ldd	r19, Y+22	; 0x16
     b36:	4f 89       	ldd	r20, Y+23	; 0x17
     b38:	58 8d       	ldd	r21, Y+24	; 0x18
     b3a:	46 d6       	rcall	.+3212   	; 0x17c8 <__addsf3>
     b3c:	4b 01       	movw	r8, r22
     b3e:	5c 01       	movw	r10, r24
     b40:	60 93 d9 03 	sts	0x03D9, r22	; 0x8003d9 <angle_1>
     b44:	70 93 da 03 	sts	0x03DA, r23	; 0x8003da <angle_1+0x1>
     b48:	80 93 db 03 	sts	0x03DB, r24	; 0x8003db <angle_1+0x2>
	bias_1 += K_1[1] * y_1;
     b4c:	90 93 dc 03 	sts	0x03DC, r25	; 0x8003dc <angle_1+0x3>
     b50:	29 89       	ldd	r18, Y+17	; 0x11
     b52:	3a 89       	ldd	r19, Y+18	; 0x12
     b54:	4b 89       	ldd	r20, Y+19	; 0x13
     b56:	5c 89       	ldd	r21, Y+20	; 0x14
     b58:	6d 81       	ldd	r22, Y+5	; 0x05
     b5a:	7e 81       	ldd	r23, Y+6	; 0x06
     b5c:	8f 81       	ldd	r24, Y+7	; 0x07
     b5e:	98 85       	ldd	r25, Y+8	; 0x08
     b60:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     b64:	a7 01       	movw	r20, r14
     b66:	96 01       	movw	r18, r12
     b68:	2f d6       	rcall	.+3166   	; 0x17c8 <__addsf3>
     b6a:	60 93 f5 03 	sts	0x03F5, r22	; 0x8003f5 <bias_1>
     b6e:	70 93 f6 03 	sts	0x03F6, r23	; 0x8003f6 <bias_1+0x1>
     b72:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <bias_1+0x2>
     b76:	90 93 f8 03 	sts	0x03F8, r25	; 0x8003f8 <bias_1+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     b7a:	29 81       	ldd	r18, Y+1	; 0x01
     b7c:	3a 81       	ldd	r19, Y+2	; 0x02
     b7e:	4b 81       	ldd	r20, Y+3	; 0x03
     b80:	5c 81       	ldd	r21, Y+4	; 0x04
     b82:	69 85       	ldd	r22, Y+9	; 0x09
     b84:	7a 85       	ldd	r23, Y+10	; 0x0a
     b86:	8b 85       	ldd	r24, Y+11	; 0x0b
     b88:	9c 85       	ldd	r25, Y+12	; 0x0c
     b8a:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     b8e:	9b 01       	movw	r18, r22
     b90:	ac 01       	movw	r20, r24
     b92:	69 85       	ldd	r22, Y+9	; 0x09
     b94:	7a 85       	ldd	r23, Y+10	; 0x0a
     b96:	8b 85       	ldd	r24, Y+11	; 0x0b
     b98:	9c 85       	ldd	r25, Y+12	; 0x0c
     b9a:	15 d6       	rcall	.+3114   	; 0x17c6 <__subsf3>
     b9c:	ed ed       	ldi	r30, 0xDD	; 221
     b9e:	f3 e0       	ldi	r31, 0x03	; 3
     ba0:	60 83       	st	Z, r22
     ba2:	71 83       	std	Z+1, r23	; 0x01
	P_1[0][1] -= K_1[0] * P01_temp_1;
     ba4:	82 83       	std	Z+2, r24	; 0x02
     ba6:	93 83       	std	Z+3, r25	; 0x03
     ba8:	29 81       	ldd	r18, Y+1	; 0x01
     baa:	3a 81       	ldd	r19, Y+2	; 0x02
     bac:	4b 81       	ldd	r20, Y+3	; 0x03
     bae:	5c 81       	ldd	r21, Y+4	; 0x04
     bb0:	c3 01       	movw	r24, r6
     bb2:	b2 01       	movw	r22, r4
     bb4:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     bb8:	9b 01       	movw	r18, r22
     bba:	ac 01       	movw	r20, r24
     bbc:	c3 01       	movw	r24, r6
     bbe:	b2 01       	movw	r22, r4
     bc0:	02 d6       	rcall	.+3076   	; 0x17c6 <__subsf3>
     bc2:	60 93 e1 03 	sts	0x03E1, r22	; 0x8003e1 <P_1+0x4>
     bc6:	70 93 e2 03 	sts	0x03E2, r23	; 0x8003e2 <P_1+0x5>
     bca:	80 93 e3 03 	sts	0x03E3, r24	; 0x8003e3 <P_1+0x6>
	P_1[1][0] -= K_1[1] * P00_temp_1;
     bce:	90 93 e4 03 	sts	0x03E4, r25	; 0x8003e4 <P_1+0x7>
     bd2:	2d 81       	ldd	r18, Y+5	; 0x05
     bd4:	3e 81       	ldd	r19, Y+6	; 0x06
     bd6:	4f 81       	ldd	r20, Y+7	; 0x07
     bd8:	58 85       	ldd	r21, Y+8	; 0x08
     bda:	69 85       	ldd	r22, Y+9	; 0x09
     bdc:	7a 85       	ldd	r23, Y+10	; 0x0a
     bde:	8b 85       	ldd	r24, Y+11	; 0x0b
     be0:	9c 85       	ldd	r25, Y+12	; 0x0c
     be2:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     be6:	9b 01       	movw	r18, r22
     be8:	ac 01       	movw	r20, r24
     bea:	6d 85       	ldd	r22, Y+13	; 0x0d
     bec:	7e 85       	ldd	r23, Y+14	; 0x0e
     bee:	8f 85       	ldd	r24, Y+15	; 0x0f
     bf0:	98 89       	ldd	r25, Y+16	; 0x10
     bf2:	e9 d5       	rcall	.+3026   	; 0x17c6 <__subsf3>
     bf4:	60 93 e5 03 	sts	0x03E5, r22	; 0x8003e5 <P_1+0x8>
     bf8:	70 93 e6 03 	sts	0x03E6, r23	; 0x8003e6 <P_1+0x9>
     bfc:	80 93 e7 03 	sts	0x03E7, r24	; 0x8003e7 <P_1+0xa>
	P_1[1][1] -= K_1[1] * P01_temp_1;
     c00:	90 93 e8 03 	sts	0x03E8, r25	; 0x8003e8 <P_1+0xb>
     c04:	2d 81       	ldd	r18, Y+5	; 0x05
     c06:	3e 81       	ldd	r19, Y+6	; 0x06
     c08:	4f 81       	ldd	r20, Y+7	; 0x07
     c0a:	58 85       	ldd	r21, Y+8	; 0x08
     c0c:	c3 01       	movw	r24, r6
     c0e:	b2 01       	movw	r22, r4
     c10:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__mulsf3>
     c14:	9b 01       	movw	r18, r22
     c16:	ac 01       	movw	r20, r24
     c18:	69 8d       	ldd	r22, Y+25	; 0x19
     c1a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     c1c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c1e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c20:	d2 d5       	rcall	.+2980   	; 0x17c6 <__subsf3>
     c22:	60 93 e9 03 	sts	0x03E9, r22	; 0x8003e9 <P_1+0xc>
     c26:	70 93 ea 03 	sts	0x03EA, r23	; 0x8003ea <P_1+0xd>
     c2a:	80 93 eb 03 	sts	0x03EB, r24	; 0x8003eb <P_1+0xe>
     c2e:	90 93 ec 03 	sts	0x03EC, r25	; 0x8003ec <P_1+0xf>

	return angle_1;
};
     c32:	c5 01       	movw	r24, r10
     c34:	b4 01       	movw	r22, r8
     c36:	6c 96       	adiw	r28, 0x1c	; 28
     c38:	0f b6       	in	r0, 0x3f	; 63
     c3a:	f8 94       	cli
     c3c:	de bf       	out	0x3e, r29	; 62
     c3e:	0f be       	out	0x3f, r0	; 63
     c40:	cd bf       	out	0x3d, r28	; 61
     c42:	df 91       	pop	r29
     c44:	cf 91       	pop	r28
     c46:	1f 91       	pop	r17
     c48:	0f 91       	pop	r16
     c4a:	ff 90       	pop	r15
     c4c:	ef 90       	pop	r14
     c4e:	df 90       	pop	r13
     c50:	cf 90       	pop	r12
     c52:	bf 90       	pop	r11
     c54:	af 90       	pop	r10
     c56:	9f 90       	pop	r9
     c58:	8f 90       	pop	r8
     c5a:	7f 90       	pop	r7
     c5c:	6f 90       	pop	r6
     c5e:	5f 90       	pop	r5
     c60:	4f 90       	pop	r4
     c62:	08 95       	ret

00000c64 <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     c64:	8f e6       	ldi	r24, 0x6F	; 111
     c66:	92 e1       	ldi	r25, 0x12	; 18
     c68:	a3 e8       	ldi	r26, 0x83	; 131
     c6a:	ba e3       	ldi	r27, 0x3A	; 58
     c6c:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <Q_angle_1>
     c70:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <Q_angle_1+0x1>
     c74:	a0 93 17 04 	sts	0x0417, r26	; 0x800417 <Q_angle_1+0x2>
     c78:	b0 93 18 04 	sts	0x0418, r27	; 0x800418 <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     c7c:	86 ea       	ldi	r24, 0xA6	; 166
     c7e:	9b e9       	ldi	r25, 0x9B	; 155
     c80:	a4 e4       	ldi	r26, 0x44	; 68
     c82:	bb e3       	ldi	r27, 0x3B	; 59
     c84:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <Q_bias_1>
     c88:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <Q_bias_1+0x1>
     c8c:	a0 93 03 04 	sts	0x0403, r26	; 0x800403 <Q_bias_1+0x2>
     c90:	b0 93 04 04 	sts	0x0404, r27	; 0x800404 <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     c94:	8f e8       	ldi	r24, 0x8F	; 143
     c96:	92 ec       	ldi	r25, 0xC2	; 194
     c98:	a5 ef       	ldi	r26, 0xF5	; 245
     c9a:	bc e3       	ldi	r27, 0x3C	; 60
     c9c:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <R_measure_1>
     ca0:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <R_measure_1+0x1>
     ca4:	a0 93 ff 03 	sts	0x03FF, r26	; 0x8003ff <R_measure_1+0x2>
     ca8:	b0 93 00 04 	sts	0x0400, r27	; 0x800400 <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     cac:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <angle_1>
     cb0:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <angle_1+0x1>
     cb4:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <angle_1+0x2>
     cb8:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     cbc:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <bias_1>
     cc0:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <bias_1+0x1>
     cc4:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <bias_1+0x2>
     cc8:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     ccc:	ed ed       	ldi	r30, 0xDD	; 221
     cce:	f3 e0       	ldi	r31, 0x03	; 3
     cd0:	10 82       	st	Z, r1
     cd2:	11 82       	std	Z+1, r1	; 0x01
     cd4:	12 82       	std	Z+2, r1	; 0x02
     cd6:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     cd8:	14 82       	std	Z+4, r1	; 0x04
     cda:	15 82       	std	Z+5, r1	; 0x05
     cdc:	16 82       	std	Z+6, r1	; 0x06
     cde:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     ce0:	10 86       	std	Z+8, r1	; 0x08
     ce2:	11 86       	std	Z+9, r1	; 0x09
     ce4:	12 86       	std	Z+10, r1	; 0x0a
     ce6:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     ce8:	14 86       	std	Z+12, r1	; 0x0c
     cea:	15 86       	std	Z+13, r1	; 0x0d
     cec:	16 86       	std	Z+14, r1	; 0x0e
     cee:	17 86       	std	Z+15, r1	; 0x0f
     cf0:	08 95       	ret

00000cf2 <main>:



/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     cf2:	cf 93       	push	r28
     cf4:	df 93       	push	r29
     cf6:	cd b7       	in	r28, 0x3d	; 61
     cf8:	de b7       	in	r29, 0x3e	; 62
     cfa:	6c 97       	sbiw	r28, 0x1c	; 28
     cfc:	0f b6       	in	r0, 0x3f	; 63
     cfe:	f8 94       	cli
     d00:	de bf       	out	0x3e, r29	; 62
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	cd bf       	out	0x3d, r28	; 61
	//variableInit();
	U_step=U_step_predefine;
     d06:	10 92 a7 03 	sts	0x03A7, r1	; 0x8003a7 <U_step+0x1>
     d0a:	10 92 a6 03 	sts	0x03A6, r1	; 0x8003a6 <U_step>
	V_step=V_step_predefine;
     d0e:	28 e7       	ldi	r18, 0x78	; 120
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     d16:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step_predefine;
     d1a:	80 ef       	ldi	r24, 0xF0	; 240
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     d22:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	U_step_2=U_step_predefine;
     d26:	10 92 a5 03 	sts	0x03A5, r1	; 0x8003a5 <__data_end+0x1>
     d2a:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <__data_end>
	V_step_2=V_step_predefine;
     d2e:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     d32:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_predefine;
     d36:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     d3a:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	incr=-1;
     d3e:	8f ef       	ldi	r24, 0xFF	; 255
     d40:	9f ef       	ldi	r25, 0xFF	; 255
     d42:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <incr+0x1>
     d46:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <incr>
	incr_2=-1;
     d4a:	90 93 c6 03 	sts	0x03C6, r25	; 0x8003c6 <incr_2+0x1>
     d4e:	80 93 c5 03 	sts	0x03C5, r24	; 0x8003c5 <incr_2>
	pwm_delay=15000;
     d52:	88 e9       	ldi	r24, 0x98	; 152
     d54:	9a e3       	ldi	r25, 0x3A	; 58
     d56:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <pwm_delay+0x1>
     d5a:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <pwm_delay>
	pwm_delay_2=15000;
     d5e:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <pwm_delay_2+0x1>
     d62:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <pwm_delay_2>
	cli();
	init_gpio();
     d66:	f8 94       	cli
     d68:	76 da       	rcall	.-2836   	; 0x256 <init_gpio>
     d6a:	db db       	rcall	.-2122   	; 0x522 <init_motor_gpio>
     d6c:	04 d4       	rcall	.+2056   	; 0x1576 <i2c_init>
     d6e:	8c e0       	ldi	r24, 0x0C	; 12
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	b2 d4       	rcall	.+2404   	; 0x16d8 <USART_Init>
     d74:	60 e0       	ldi	r22, 0x00	; 0
     d76:	70 e0       	ldi	r23, 0x00	; 0
     d78:	87 e7       	ldi	r24, 0x77	; 119
     d7a:	9b e0       	ldi	r25, 0x0B	; 11
     d7c:	0e 94 84 13 	call	0x2708	; 0x2708 <fdevopen>
     d80:	90 93 c2 03 	sts	0x03C2, r25	; 0x8003c2 <uart_str+0x1>
     d84:	80 93 c1 03 	sts	0x03C1, r24	; 0x8003c1 <uart_str>
     d88:	47 d3       	rcall	.+1678   	; 0x1418 <setup_timer0>
     d8a:	4d d3       	rcall	.+1690   	; 0x1426 <Enable_timer0_overflow_interrupt>
     d8c:	05 d3       	rcall	.+1546   	; 0x1398 <setup_timer4>
     d8e:	18 d3       	rcall	.+1584   	; 0x13c0 <setup_timer3>
     d90:	2b d3       	rcall	.+1622   	; 0x13e8 <setup_timer5>
     d92:	33 d3       	rcall	.+1638   	; 0x13fa <Enable_timer5_compare_interrupt>
     d94:	38 d3       	rcall	.+1648   	; 0x1406 <setup_timer1>
     d96:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <pwm_delay>
     d9a:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <pwm_delay+0x1>
     d9e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     da2:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     da6:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <pwm_delay_2>
     daa:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <pwm_delay_2+0x1>
     dae:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     db2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     db6:	3d d3       	rcall	.+1658   	; 0x1432 <micros>
     db8:	1b 01       	movw	r2, r22
     dba:	2c 01       	movw	r4, r24
     dbc:	67 e0       	ldi	r22, 0x07	; 7
     dbe:	89 e1       	ldi	r24, 0x19	; 25
     dc0:	a8 d1       	rcall	.+848    	; 0x1112 <mpu6050_writeByte>
     dc2:	60 e0       	ldi	r22, 0x00	; 0
     dc4:	8a e1       	ldi	r24, 0x1A	; 26
     dc6:	a5 d1       	rcall	.+842    	; 0x1112 <mpu6050_writeByte>
     dc8:	68 e0       	ldi	r22, 0x08	; 8
     dca:	8b e1       	ldi	r24, 0x1B	; 27
     dcc:	a2 d1       	rcall	.+836    	; 0x1112 <mpu6050_writeByte>
     dce:	60 e1       	ldi	r22, 0x10	; 16
     dd0:	8c e1       	ldi	r24, 0x1C	; 28
     dd2:	9f d1       	rcall	.+830    	; 0x1112 <mpu6050_writeByte>
     dd4:	61 e0       	ldi	r22, 0x01	; 1
     dd6:	8b e6       	ldi	r24, 0x6B	; 107
     dd8:	9c d1       	rcall	.+824    	; 0x1112 <mpu6050_writeByte>
     dda:	69 dd       	rcall	.-1326   	; 0x8ae <Kalman_init>
     ddc:	43 df       	rcall	.-378    	; 0xc64 <Kalman_init_1>
     dde:	2f ef       	ldi	r18, 0xFF	; 255
     de0:	81 ee       	ldi	r24, 0xE1	; 225
     de2:	94 e0       	ldi	r25, 0x04	; 4
     de4:	21 50       	subi	r18, 0x01	; 1
     de6:	80 40       	sbci	r24, 0x00	; 0
     de8:	90 40       	sbci	r25, 0x00	; 0
     dea:	e1 f7       	brne	.-8      	; 0xde4 <main+0xf2>
     dec:	00 c0       	rjmp	.+0      	; 0xdee <main+0xfc>
     dee:	00 00       	nop
     df0:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <angle>
     df4:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <angle+0x1>
     df8:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <angle+0x2>
     dfc:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <angle+0x3>
     e00:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <angle_1>
     e04:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <angle_1+0x1>
     e08:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <angle_1+0x2>
     e0c:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <angle_1+0x3>
     e10:	78 94       	sei
     e12:	ce 01       	movw	r24, r28
     e14:	05 96       	adiw	r24, 0x05	; 5
     e16:	7c 01       	movw	r14, r24
     e18:	8e 01       	movw	r16, r28
     e1a:	0d 5f       	subi	r16, 0xFD	; 253
     e1c:	1f 4f       	sbci	r17, 0xFF	; 255
     e1e:	9e 01       	movw	r18, r28
     e20:	2f 5f       	subi	r18, 0xFF	; 255
     e22:	3f 4f       	sbci	r19, 0xFF	; 255
     e24:	ae 01       	movw	r20, r28
     e26:	45 5f       	subi	r20, 0xF5	; 245
     e28:	5f 4f       	sbci	r21, 0xFF	; 255
     e2a:	be 01       	movw	r22, r28
     e2c:	67 5f       	subi	r22, 0xF7	; 247
     e2e:	7f 4f       	sbci	r23, 0xFF	; 255
     e30:	02 96       	adiw	r24, 0x02	; 2
     e32:	c5 d1       	rcall	.+906    	; 0x11be <mpu6050_getRawData>
     e34:	89 81       	ldd	r24, Y+1	; 0x01
     e36:	9a 81       	ldd	r25, Y+2	; 0x02
     e38:	84 59       	subi	r24, 0x94	; 148
     e3a:	9f 4f       	sbci	r25, 0xFF	; 255
     e3c:	9a 83       	std	Y+2, r25	; 0x02
     e3e:	89 83       	std	Y+1, r24	; 0x01
     e40:	8b 81       	ldd	r24, Y+3	; 0x03
     e42:	9c 81       	ldd	r25, Y+4	; 0x04
     e44:	80 52       	subi	r24, 0x20	; 32
     e46:	9f 4f       	sbci	r25, 0xFF	; 255
     e48:	9c 83       	std	Y+4, r25	; 0x04
     e4a:	8b 83       	std	Y+3, r24	; 0x03
     e4c:	8d 81       	ldd	r24, Y+5	; 0x05
     e4e:	9e 81       	ldd	r25, Y+6	; 0x06
     e50:	8f 58       	subi	r24, 0x8F	; 143
     e52:	9d 4f       	sbci	r25, 0xFD	; 253
     e54:	9e 83       	std	Y+6, r25	; 0x06
     e56:	8d 83       	std	Y+5, r24	; 0x05
     e58:	ec d2       	rcall	.+1496   	; 0x1432 <micros>
     e5a:	62 19       	sub	r22, r2
     e5c:	73 09       	sbc	r23, r3
     e5e:	84 09       	sbc	r24, r4
     e60:	95 09       	sbc	r25, r5
     e62:	15 d6       	rcall	.+3114   	; 0x1a8e <__floatunsisf>
     e64:	20 e0       	ldi	r18, 0x00	; 0
     e66:	34 e2       	ldi	r19, 0x24	; 36
     e68:	44 e7       	ldi	r20, 0x74	; 116
     e6a:	59 e4       	ldi	r21, 0x49	; 73
     e6c:	77 d5       	rcall	.+2798   	; 0x195c <__divsf3>
     e6e:	60 93 25 04 	sts	0x0425, r22	; 0x800425 <dt>
     e72:	70 93 26 04 	sts	0x0426, r23	; 0x800426 <dt+0x1>
     e76:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <dt+0x2>
     e7a:	90 93 28 04 	sts	0x0428, r25	; 0x800428 <dt+0x3>
     e7e:	d9 d2       	rcall	.+1458   	; 0x1432 <micros>
     e80:	1b 01       	movw	r2, r22
     e82:	2c 01       	movw	r4, r24
     e84:	69 81       	ldd	r22, Y+1	; 0x01
     e86:	7a 81       	ldd	r23, Y+2	; 0x02
     e88:	07 2e       	mov	r0, r23
     e8a:	00 0c       	add	r0, r0
     e8c:	88 0b       	sbc	r24, r24
     e8e:	99 0b       	sbc	r25, r25
     e90:	00 d6       	rcall	.+3072   	; 0x1a92 <__floatsisf>
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	43 e8       	ldi	r20, 0x83	; 131
     e98:	52 e4       	ldi	r21, 0x42	; 66
     e9a:	60 d5       	rcall	.+2752   	; 0x195c <__divsf3>
     e9c:	6d 87       	std	Y+13, r22	; 0x0d
     e9e:	7e 87       	std	Y+14, r23	; 0x0e
     ea0:	8f 87       	std	Y+15, r24	; 0x0f
     ea2:	98 8b       	std	Y+16, r25	; 0x10
     ea4:	6b 81       	ldd	r22, Y+3	; 0x03
     ea6:	7c 81       	ldd	r23, Y+4	; 0x04
     ea8:	07 2e       	mov	r0, r23
     eaa:	00 0c       	add	r0, r0
     eac:	88 0b       	sbc	r24, r24
     eae:	99 0b       	sbc	r25, r25
     eb0:	f0 d5       	rcall	.+3040   	; 0x1a92 <__floatsisf>
     eb2:	20 e0       	ldi	r18, 0x00	; 0
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	43 e8       	ldi	r20, 0x83	; 131
     eb8:	52 e4       	ldi	r21, 0x42	; 66
     eba:	50 d5       	rcall	.+2720   	; 0x195c <__divsf3>
     ebc:	69 8b       	std	Y+17, r22	; 0x11
     ebe:	7a 8b       	std	Y+18, r23	; 0x12
     ec0:	8b 8b       	std	Y+19, r24	; 0x13
     ec2:	9c 8b       	std	Y+20, r25	; 0x14
     ec4:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <loop_bool>
     ec8:	90 91 78 03 	lds	r25, 0x0378	; 0x800378 <loop_bool+0x1>
     ecc:	89 2b       	or	r24, r25
     ece:	21 f0       	breq	.+8      	; 0xed8 <main+0x1e6>
     ed0:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <loop_bool+0x1>
     ed4:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <loop_bool>
     ed8:	ab 84       	ldd	r10, Y+11	; 0x0b
     eda:	bc 84       	ldd	r11, Y+12	; 0x0c
     edc:	e9 84       	ldd	r14, Y+9	; 0x09
     ede:	fa 84       	ldd	r15, Y+10	; 0x0a
     ee0:	b5 01       	movw	r22, r10
     ee2:	0b 2c       	mov	r0, r11
     ee4:	00 0c       	add	r0, r0
     ee6:	88 0b       	sbc	r24, r24
     ee8:	99 0b       	sbc	r25, r25
     eea:	d3 d5       	rcall	.+2982   	; 0x1a92 <__floatsisf>
     eec:	3b 01       	movw	r6, r22
     eee:	4c 01       	movw	r8, r24
     ef0:	b7 01       	movw	r22, r14
     ef2:	0f 2c       	mov	r0, r15
     ef4:	00 0c       	add	r0, r0
     ef6:	88 0b       	sbc	r24, r24
     ef8:	99 0b       	sbc	r25, r25
     efa:	cb d5       	rcall	.+2966   	; 0x1a92 <__floatsisf>
     efc:	a4 01       	movw	r20, r8
     efe:	93 01       	movw	r18, r6
     f00:	d6 d4       	rcall	.+2476   	; 0x18ae <atan2>
     f02:	6d 8b       	std	Y+21, r22	; 0x15
     f04:	7e 8b       	std	Y+22, r23	; 0x16
     f06:	8f 8b       	std	Y+23, r24	; 0x17
     f08:	98 8f       	std	Y+24, r25	; 0x18
     f0a:	c7 01       	movw	r24, r14
     f0c:	64 e6       	ldi	r22, 0x64	; 100
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	0e 94 6f 12 	call	0x24de	; 0x24de <__divmodhi4>
     f14:	07 2e       	mov	r0, r23
     f16:	00 0c       	add	r0, r0
     f18:	88 0b       	sbc	r24, r24
     f1a:	99 0b       	sbc	r25, r25
     f1c:	ba d5       	rcall	.+2932   	; 0x1a92 <__floatsisf>
     f1e:	6b 01       	movw	r12, r22
     f20:	7c 01       	movw	r14, r24
     f22:	c5 01       	movw	r24, r10
     f24:	64 e6       	ldi	r22, 0x64	; 100
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	0e 94 6f 12 	call	0x24de	; 0x24de <__divmodhi4>
     f2c:	07 2e       	mov	r0, r23
     f2e:	00 0c       	add	r0, r0
     f30:	88 0b       	sbc	r24, r24
     f32:	99 0b       	sbc	r25, r25
     f34:	ae d5       	rcall	.+2908   	; 0x1a92 <__floatsisf>
     f36:	4b 01       	movw	r8, r22
     f38:	5c 01       	movw	r10, r24
     f3a:	a7 01       	movw	r20, r14
     f3c:	96 01       	movw	r18, r12
     f3e:	c7 01       	movw	r24, r14
     f40:	b6 01       	movw	r22, r12
     f42:	87 d6       	rcall	.+3342   	; 0x1c52 <__mulsf3>
     f44:	69 8f       	std	Y+25, r22	; 0x19
     f46:	7a 8f       	std	Y+26, r23	; 0x1a
     f48:	8b 8f       	std	Y+27, r24	; 0x1b
     f4a:	9c 8f       	std	Y+28, r25	; 0x1c
     f4c:	a7 01       	movw	r20, r14
     f4e:	96 01       	movw	r18, r12
     f50:	c7 01       	movw	r24, r14
     f52:	b6 01       	movw	r22, r12
     f54:	7e d6       	rcall	.+3324   	; 0x1c52 <__mulsf3>
     f56:	6b 01       	movw	r12, r22
     f58:	7c 01       	movw	r14, r24
     f5a:	a5 01       	movw	r20, r10
     f5c:	94 01       	movw	r18, r8
     f5e:	c5 01       	movw	r24, r10
     f60:	b4 01       	movw	r22, r8
     f62:	77 d6       	rcall	.+3310   	; 0x1c52 <__mulsf3>
     f64:	9b 01       	movw	r18, r22
     f66:	ac 01       	movw	r20, r24
     f68:	c7 01       	movw	r24, r14
     f6a:	b6 01       	movw	r22, r12
     f6c:	2d d4       	rcall	.+2138   	; 0x17c8 <__addsf3>
     f6e:	d8 d6       	rcall	.+3504   	; 0x1d20 <sqrt>
     f70:	20 e0       	ldi	r18, 0x00	; 0
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	48 ec       	ldi	r20, 0xC8	; 200
     f76:	52 e4       	ldi	r21, 0x42	; 66
     f78:	6c d6       	rcall	.+3288   	; 0x1c52 <__mulsf3>
     f7a:	6b 01       	movw	r12, r22
     f7c:	7c 01       	movw	r14, r24
     f7e:	6f 81       	ldd	r22, Y+7	; 0x07
     f80:	78 85       	ldd	r23, Y+8	; 0x08
     f82:	07 2e       	mov	r0, r23
     f84:	00 0c       	add	r0, r0
     f86:	88 0b       	sbc	r24, r24
     f88:	99 0b       	sbc	r25, r25
     f8a:	83 d5       	rcall	.+2822   	; 0x1a92 <__floatsisf>
     f8c:	a7 01       	movw	r20, r14
     f8e:	96 01       	movw	r18, r12
     f90:	8e d4       	rcall	.+2332   	; 0x18ae <atan2>
     f92:	4b 01       	movw	r8, r22
     f94:	5c 01       	movw	r10, r24
     f96:	c0 90 25 04 	lds	r12, 0x0425	; 0x800425 <dt>
     f9a:	d0 90 26 04 	lds	r13, 0x0426	; 0x800426 <dt+0x1>
     f9e:	e0 90 27 04 	lds	r14, 0x0427	; 0x800427 <dt+0x2>
     fa2:	f0 90 28 04 	lds	r15, 0x0428	; 0x800428 <dt+0x3>
     fa6:	21 ee       	ldi	r18, 0xE1	; 225
     fa8:	3e e2       	ldi	r19, 0x2E	; 46
     faa:	45 e6       	ldi	r20, 0x65	; 101
     fac:	52 e4       	ldi	r21, 0x42	; 66
     fae:	6d 89       	ldd	r22, Y+21	; 0x15
     fb0:	7e 89       	ldd	r23, Y+22	; 0x16
     fb2:	8f 89       	ldd	r24, Y+23	; 0x17
     fb4:	98 8d       	ldd	r25, Y+24	; 0x18
     fb6:	4d d6       	rcall	.+3226   	; 0x1c52 <__mulsf3>
     fb8:	87 01       	movw	r16, r14
     fba:	76 01       	movw	r14, r12
     fbc:	2d 85       	ldd	r18, Y+13	; 0x0d
     fbe:	3e 85       	ldd	r19, Y+14	; 0x0e
     fc0:	4f 85       	ldd	r20, Y+15	; 0x0f
     fc2:	58 89       	ldd	r21, Y+16	; 0x10
     fc4:	d1 da       	rcall	.-2654   	; 0x568 <getAngle>
     fc6:	60 93 29 04 	sts	0x0429, r22	; 0x800429 <kalman_angle_roll>
     fca:	70 93 2a 04 	sts	0x042A, r23	; 0x80042a <kalman_angle_roll+0x1>
     fce:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <kalman_angle_roll+0x2>
     fd2:	90 93 2c 04 	sts	0x042C, r25	; 0x80042c <kalman_angle_roll+0x3>
     fd6:	c0 90 25 04 	lds	r12, 0x0425	; 0x800425 <dt>
     fda:	d0 90 26 04 	lds	r13, 0x0426	; 0x800426 <dt+0x1>
     fde:	e0 90 27 04 	lds	r14, 0x0427	; 0x800427 <dt+0x2>
     fe2:	f0 90 28 04 	lds	r15, 0x0428	; 0x800428 <dt+0x3>
     fe6:	21 ee       	ldi	r18, 0xE1	; 225
     fe8:	3e e2       	ldi	r19, 0x2E	; 46
     fea:	45 e6       	ldi	r20, 0x65	; 101
     fec:	52 e4       	ldi	r21, 0x42	; 66
     fee:	c5 01       	movw	r24, r10
     ff0:	b4 01       	movw	r22, r8
     ff2:	2f d6       	rcall	.+3166   	; 0x1c52 <__mulsf3>
     ff4:	87 01       	movw	r16, r14
     ff6:	76 01       	movw	r14, r12
     ff8:	29 89       	ldd	r18, Y+17	; 0x11
     ffa:	3a 89       	ldd	r19, Y+18	; 0x12
     ffc:	4b 89       	ldd	r20, Y+19	; 0x13
     ffe:	5c 89       	ldd	r21, Y+20	; 0x14
    1000:	9d dc       	rcall	.-1734   	; 0x93c <getAngle_1>
    1002:	60 93 1d 04 	sts	0x041D, r22	; 0x80041d <kalman_angle_pitch>
    1006:	70 93 1e 04 	sts	0x041E, r23	; 0x80041e <kalman_angle_pitch+0x1>
    100a:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <kalman_angle_pitch+0x2>
    100e:	90 93 20 04 	sts	0x0420, r25	; 0x800420 <kalman_angle_pitch+0x3>
    1012:	40 91 29 04 	lds	r20, 0x0429	; 0x800429 <kalman_angle_roll>
    1016:	50 91 2a 04 	lds	r21, 0x042A	; 0x80042a <kalman_angle_roll+0x1>
    101a:	60 91 2b 04 	lds	r22, 0x042B	; 0x80042b <kalman_angle_roll+0x2>
    101e:	70 91 2c 04 	lds	r23, 0x042C	; 0x80042c <kalman_angle_roll+0x3>
    1022:	85 e8       	ldi	r24, 0x85	; 133
    1024:	93 e0       	ldi	r25, 0x03	; 3
    1026:	ad d3       	rcall	.+1882   	; 0x1782 <printSD>
    1028:	17 d9       	rcall	.-3538   	; 0x258 <PWM_update>
    102a:	40 91 b9 03 	lds	r20, 0x03B9	; 0x8003b9 <PID_roll>
    102e:	50 91 ba 03 	lds	r21, 0x03BA	; 0x8003ba <PID_roll+0x1>
    1032:	60 91 bb 03 	lds	r22, 0x03BB	; 0x8003bb <PID_roll+0x2>
    1036:	70 91 bc 03 	lds	r23, 0x03BC	; 0x8003bc <PID_roll+0x3>
    103a:	8c e8       	ldi	r24, 0x8C	; 140
    103c:	93 e0       	ldi	r25, 0x03	; 3
    103e:	a1 d3       	rcall	.+1858   	; 0x1782 <printSD>
    1040:	40 91 b1 03 	lds	r20, 0x03B1	; 0x8003b1 <pid_i_roll>
    1044:	50 91 b2 03 	lds	r21, 0x03B2	; 0x8003b2 <pid_i_roll+0x1>
    1048:	60 91 b3 03 	lds	r22, 0x03B3	; 0x8003b3 <pid_i_roll+0x2>
    104c:	70 91 b4 03 	lds	r23, 0x03B4	; 0x8003b4 <pid_i_roll+0x3>
    1050:	86 e9       	ldi	r24, 0x96	; 150
    1052:	93 e0       	ldi	r25, 0x03	; 3
    1054:	96 d3       	rcall	.+1836   	; 0x1782 <printSD>
    1056:	8a e0       	ldi	r24, 0x0A	; 10
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	0e 94 1d 14 	call	0x283a	; 0x283a <putchar>
    105e:	80 90 29 04 	lds	r8, 0x0429	; 0x800429 <kalman_angle_roll>
    1062:	90 90 2a 04 	lds	r9, 0x042A	; 0x80042a <kalman_angle_roll+0x1>
    1066:	a0 90 2b 04 	lds	r10, 0x042B	; 0x80042b <kalman_angle_roll+0x2>
    106a:	b0 90 2c 04 	lds	r11, 0x042C	; 0x80042c <kalman_angle_roll+0x3>
    106e:	c5 01       	movw	r24, r10
    1070:	b4 01       	movw	r22, r8
    1072:	dc d4       	rcall	.+2488   	; 0x1a2c <__fixsfsi>
    1074:	9b 01       	movw	r18, r22
    1076:	77 23       	and	r23, r23
    1078:	24 f4       	brge	.+8      	; 0x1082 <main+0x390>
    107a:	22 27       	eor	r18, r18
    107c:	33 27       	eor	r19, r19
    107e:	26 1b       	sub	r18, r22
    1080:	37 0b       	sbc	r19, r23
    1082:	79 01       	movw	r14, r18
    1084:	b9 01       	movw	r22, r18
    1086:	33 0f       	add	r19, r19
    1088:	88 0b       	sbc	r24, r24
    108a:	99 0b       	sbc	r25, r25
    108c:	02 d5       	rcall	.+2564   	; 0x1a92 <__floatsisf>
    108e:	2c ee       	ldi	r18, 0xEC	; 236
    1090:	31 e5       	ldi	r19, 0x51	; 81
    1092:	48 e3       	ldi	r20, 0x38	; 56
    1094:	5e e3       	ldi	r21, 0x3E	; 62
    1096:	5e d4       	rcall	.+2236   	; 0x1954 <__cmpsf2>
    1098:	18 16       	cp	r1, r24
    109a:	24 f4       	brge	.+8      	; 0x10a4 <main+0x3b2>
    109c:	9e e2       	ldi	r25, 0x2E	; 46
    109e:	e9 16       	cp	r14, r25
    10a0:	f1 04       	cpc	r15, r1
    10a2:	2c f0       	brlt	.+10     	; 0x10ae <main+0x3bc>
    10a4:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <incr+0x1>
    10a8:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <incr>
    10ac:	b2 ce       	rjmp	.-668    	; 0xe12 <main+0x120>
    10ae:	2c ee       	ldi	r18, 0xEC	; 236
    10b0:	31 e5       	ldi	r19, 0x51	; 81
    10b2:	48 e3       	ldi	r20, 0x38	; 56
    10b4:	5e e3       	ldi	r21, 0x3E	; 62
    10b6:	c5 01       	movw	r24, r10
    10b8:	b4 01       	movw	r22, r8
    10ba:	c0 d5       	rcall	.+2944   	; 0x1c3c <__gesf2>
    10bc:	18 16       	cp	r1, r24
    10be:	9c f4       	brge	.+38     	; 0x10e6 <main+0x3f4>
    10c0:	60 91 b9 03 	lds	r22, 0x03B9	; 0x8003b9 <PID_roll>
    10c4:	70 91 ba 03 	lds	r23, 0x03BA	; 0x8003ba <PID_roll+0x1>
    10c8:	80 91 bb 03 	lds	r24, 0x03BB	; 0x8003bb <PID_roll+0x2>
    10cc:	90 91 bc 03 	lds	r25, 0x03BC	; 0x8003bc <PID_roll+0x3>
    10d0:	ad d4       	rcall	.+2394   	; 0x1a2c <__fixsfsi>
    10d2:	cb 01       	movw	r24, r22
    10d4:	68 ee       	ldi	r22, 0xE8	; 232
    10d6:	73 e0       	ldi	r23, 0x03	; 3
    10d8:	0e 94 6f 12 	call	0x24de	; 0x24de <__divmodhi4>
    10dc:	70 93 c8 03 	sts	0x03C8, r23	; 0x8003c8 <incr+0x1>
    10e0:	60 93 c7 03 	sts	0x03C7, r22	; 0x8003c7 <incr>
    10e4:	96 ce       	rjmp	.-724    	; 0xe12 <main+0x120>
    10e6:	60 91 b9 03 	lds	r22, 0x03B9	; 0x8003b9 <PID_roll>
    10ea:	70 91 ba 03 	lds	r23, 0x03BA	; 0x8003ba <PID_roll+0x1>
    10ee:	80 91 bb 03 	lds	r24, 0x03BB	; 0x8003bb <PID_roll+0x2>
    10f2:	90 91 bc 03 	lds	r25, 0x03BC	; 0x8003bc <PID_roll+0x3>
    10f6:	9a d4       	rcall	.+2356   	; 0x1a2c <__fixsfsi>
    10f8:	88 27       	eor	r24, r24
    10fa:	99 27       	eor	r25, r25
    10fc:	86 1b       	sub	r24, r22
    10fe:	97 0b       	sbc	r25, r23
    1100:	68 ee       	ldi	r22, 0xE8	; 232
    1102:	73 e0       	ldi	r23, 0x03	; 3
    1104:	0e 94 6f 12 	call	0x24de	; 0x24de <__divmodhi4>
    1108:	70 93 c8 03 	sts	0x03C8, r23	; 0x8003c8 <incr+0x1>
    110c:	60 93 c7 03 	sts	0x03C7, r22	; 0x8003c7 <incr>
    1110:	80 ce       	rjmp	.-768    	; 0xe12 <main+0x120>

00001112 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
    1112:	cf 93       	push	r28
    1114:	df 93       	push	r29
    1116:	d8 2f       	mov	r29, r24
    1118:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
    111a:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
    111c:	32 d2       	rcall	.+1124   	; 0x1582 <i2c_start>
    111e:	8d 2f       	mov	r24, r29
	i2c_stop();
    1120:	86 d2       	rcall	.+1292   	; 0x162e <i2c_write>
    1122:	8c 2f       	mov	r24, r28
}
    1124:	84 d2       	rcall	.+1288   	; 0x162e <i2c_write>
    1126:	73 d2       	rcall	.+1254   	; 0x160e <i2c_stop>
    1128:	df 91       	pop	r29
    112a:	cf 91       	pop	r28
    112c:	08 95       	ret

0000112e <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
    112e:	af 92       	push	r10
    1130:	bf 92       	push	r11
    1132:	cf 92       	push	r12
    1134:	df 92       	push	r13
    1136:	ff 92       	push	r15
    1138:	0f 93       	push	r16
    113a:	1f 93       	push	r17
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
    1140:	66 23       	and	r22, r22
    1142:	89 f1       	breq	.+98     	; 0x11a6 <mpu6050_readBytes+0x78>
    1144:	c5 2f       	mov	r28, r21
    1146:	d4 2f       	mov	r29, r20
    1148:	f6 2e       	mov	r15, r22
    114a:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
    114c:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
    114e:	19 d2       	rcall	.+1074   	; 0x1582 <i2c_start>
    1150:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1152:	6d d2       	rcall	.+1242   	; 0x162e <i2c_write>
    1154:	85 e3       	ldi	r24, 0x35	; 53
    1156:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    1158:	f1 f7       	brne	.-4      	; 0x1156 <mpu6050_readBytes+0x28>
    115a:	00 00       	nop
    115c:	81 ed       	ldi	r24, 0xD1	; 209
    115e:	11 d2       	rcall	.+1058   	; 0x1582 <i2c_start>
    1160:	0d 2f       	mov	r16, r29
    1162:	1c 2f       	mov	r17, r28
    1164:	cc 24       	eor	r12, r12
    1166:	ca 94       	dec	r12
    1168:	cf 0c       	add	r12, r15
    116a:	d1 2c       	mov	r13, r1
    116c:	ef ef       	ldi	r30, 0xFF	; 255
    116e:	ce 1a       	sub	r12, r30
    1170:	de 0a       	sbc	r13, r30
    1172:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    1174:	d0 e0       	ldi	r29, 0x00	; 0
    1176:	af 2c       	mov	r10, r15
    1178:	b1 2c       	mov	r11, r1
    117a:	f1 e0       	ldi	r31, 0x01	; 1
    117c:	af 1a       	sub	r10, r31
    117e:	b1 08       	sbc	r11, r1
    1180:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
    1182:	bd 06       	cpc	r11, r29
    1184:	21 f4       	brne	.+8      	; 0x118e <mpu6050_readBytes+0x60>
    1186:	8e d2       	rcall	.+1308   	; 0x16a4 <i2c_readNak>
    1188:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
    118a:	80 83       	st	Z, r24
    118c:	03 c0       	rjmp	.+6      	; 0x1194 <mpu6050_readBytes+0x66>
    118e:	70 d2       	rcall	.+1248   	; 0x1670 <i2c_readAck>
    1190:	f8 01       	movw	r30, r16
    1192:	80 83       	st	Z, r24
    1194:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    1196:	0f 5f       	subi	r16, 0xFF	; 255
    1198:	1f 4f       	sbci	r17, 0xFF	; 255
    119a:	cc 15       	cp	r28, r12
    119c:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    119e:	81 f7       	brne	.-32     	; 0x1180 <mpu6050_readBytes+0x52>
    11a0:	cf 2d       	mov	r28, r15
    11a2:	35 d2       	rcall	.+1130   	; 0x160e <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    11a4:	01 c0       	rjmp	.+2      	; 0x11a8 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    11a6:	c0 e0       	ldi	r28, 0x00	; 0
    11a8:	8c 2f       	mov	r24, r28
    11aa:	df 91       	pop	r29
    11ac:	cf 91       	pop	r28
    11ae:	1f 91       	pop	r17
    11b0:	0f 91       	pop	r16
    11b2:	ff 90       	pop	r15
    11b4:	df 90       	pop	r13
    11b6:	cf 90       	pop	r12
    11b8:	bf 90       	pop	r11
    11ba:	af 90       	pop	r10
    11bc:	08 95       	ret

000011be <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    11be:	6f 92       	push	r6
    11c0:	7f 92       	push	r7
    11c2:	8f 92       	push	r8
    11c4:	9f 92       	push	r9
    11c6:	af 92       	push	r10
    11c8:	bf 92       	push	r11
    11ca:	cf 92       	push	r12
    11cc:	df 92       	push	r13
    11ce:	ef 92       	push	r14
    11d0:	ff 92       	push	r15
    11d2:	0f 93       	push	r16
    11d4:	1f 93       	push	r17
    11d6:	cf 93       	push	r28
    11d8:	df 93       	push	r29
    11da:	cd b7       	in	r28, 0x3d	; 61
    11dc:	de b7       	in	r29, 0x3e	; 62
    11de:	2e 97       	sbiw	r28, 0x0e	; 14
    11e0:	0f b6       	in	r0, 0x3f	; 63
    11e2:	f8 94       	cli
    11e4:	de bf       	out	0x3e, r29	; 62
    11e6:	0f be       	out	0x3f, r0	; 63
    11e8:	cd bf       	out	0x3d, r28	; 61
    11ea:	4c 01       	movw	r8, r24
    11ec:	5b 01       	movw	r10, r22
    11ee:	6a 01       	movw	r12, r20
    11f0:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    11f2:	ae 01       	movw	r20, r28
    11f4:	4f 5f       	subi	r20, 0xFF	; 255
    11f6:	5f 4f       	sbci	r21, 0xFF	; 255
    11f8:	6e e0       	ldi	r22, 0x0E	; 14
    11fa:	8b e3       	ldi	r24, 0x3B	; 59
    11fc:	98 df       	rcall	.-208    	; 0x112e <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    11fe:	89 81       	ldd	r24, Y+1	; 0x01
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	98 2f       	mov	r25, r24
    1204:	88 27       	eor	r24, r24
    1206:	2a 81       	ldd	r18, Y+2	; 0x02
    1208:	82 2b       	or	r24, r18
    120a:	f4 01       	movw	r30, r8
    120c:	91 83       	std	Z+1, r25	; 0x01
    120e:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    1210:	8b 81       	ldd	r24, Y+3	; 0x03
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	98 2f       	mov	r25, r24
    1216:	88 27       	eor	r24, r24
    1218:	2c 81       	ldd	r18, Y+4	; 0x04
    121a:	82 2b       	or	r24, r18
    121c:	f5 01       	movw	r30, r10
    121e:	91 83       	std	Z+1, r25	; 0x01
    1220:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    1222:	8d 81       	ldd	r24, Y+5	; 0x05
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	98 2f       	mov	r25, r24
    1228:	88 27       	eor	r24, r24
    122a:	2e 81       	ldd	r18, Y+6	; 0x06
    122c:	82 2b       	or	r24, r18
    122e:	f6 01       	movw	r30, r12
    1230:	91 83       	std	Z+1, r25	; 0x01
    1232:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    1234:	89 85       	ldd	r24, Y+9	; 0x09
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	98 2f       	mov	r25, r24
    123a:	88 27       	eor	r24, r24
    123c:	2a 85       	ldd	r18, Y+10	; 0x0a
    123e:	82 2b       	or	r24, r18
    1240:	f3 01       	movw	r30, r6
    1242:	91 83       	std	Z+1, r25	; 0x01
    1244:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    1246:	8b 85       	ldd	r24, Y+11	; 0x0b
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	98 2f       	mov	r25, r24
    124c:	88 27       	eor	r24, r24
    124e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1250:	82 2b       	or	r24, r18
    1252:	f8 01       	movw	r30, r16
    1254:	91 83       	std	Z+1, r25	; 0x01
    1256:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    1258:	8d 85       	ldd	r24, Y+13	; 0x0d
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	98 2f       	mov	r25, r24
    125e:	88 27       	eor	r24, r24
    1260:	2e 85       	ldd	r18, Y+14	; 0x0e
    1262:	82 2b       	or	r24, r18
    1264:	f7 01       	movw	r30, r14
    1266:	91 83       	std	Z+1, r25	; 0x01
    1268:	80 83       	st	Z, r24
    126a:	2e 96       	adiw	r28, 0x0e	; 14
    126c:	0f b6       	in	r0, 0x3f	; 63
    126e:	f8 94       	cli
    1270:	de bf       	out	0x3e, r29	; 62
    1272:	0f be       	out	0x3f, r0	; 63
    1274:	cd bf       	out	0x3d, r28	; 61
    1276:	df 91       	pop	r29
    1278:	cf 91       	pop	r28
    127a:	1f 91       	pop	r17
    127c:	0f 91       	pop	r16
    127e:	ff 90       	pop	r15
    1280:	ef 90       	pop	r14
    1282:	df 90       	pop	r13
    1284:	cf 90       	pop	r12
    1286:	bf 90       	pop	r11
    1288:	af 90       	pop	r10
    128a:	9f 90       	pop	r9
    128c:	8f 90       	pop	r8
    128e:	7f 90       	pop	r7
    1290:	6f 90       	pop	r6
    1292:	08 95       	ret

00001294 <Compute_PID>:
 * Created: 9/24/2017 10:52:39 AM
 *  Author: rafja
 */ 
#include "PID.h"
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd)
{
    1294:	2f 92       	push	r2
    1296:	3f 92       	push	r3
    1298:	4f 92       	push	r4
    129a:	5f 92       	push	r5
    129c:	6f 92       	push	r6
    129e:	7f 92       	push	r7
    12a0:	8f 92       	push	r8
    12a2:	9f 92       	push	r9
    12a4:	af 92       	push	r10
    12a6:	bf 92       	push	r11
    12a8:	cf 92       	push	r12
    12aa:	df 92       	push	r13
    12ac:	ef 92       	push	r14
    12ae:	ff 92       	push	r15
    12b0:	0f 93       	push	r16
    12b2:	1f 93       	push	r17
    12b4:	cf 93       	push	r28
    12b6:	df 93       	push	r29
    12b8:	00 d0       	rcall	.+0      	; 0x12ba <Compute_PID+0x26>
    12ba:	1f 92       	push	r1
    12bc:	cd b7       	in	r28, 0x3d	; 61
    12be:	de b7       	in	r29, 0x3e	; 62
	
	//printSD("prever_local = ", *previous_error);

	double error = angle-desired_angle;
    12c0:	17 01       	movw	r2, r14
    12c2:	81 d2       	rcall	.+1282   	; 0x17c6 <__subsf3>
    12c4:	69 83       	std	Y+1, r22	; 0x01
    12c6:	7a 83       	std	Y+2, r23	; 0x02
    12c8:	8b 83       	std	Y+3, r24	; 0x03
	double pid_p = kp*error;
    12ca:	9c 83       	std	Y+4, r25	; 0x04
    12cc:	2a 8d       	ldd	r18, Y+26	; 0x1a
    12ce:	3b 8d       	ldd	r19, Y+27	; 0x1b
    12d0:	4c 8d       	ldd	r20, Y+28	; 0x1c
    12d2:	5d 8d       	ldd	r21, Y+29	; 0x1d
    12d4:	be d4       	rcall	.+2428   	; 0x1c52 <__mulsf3>
    12d6:	2b 01       	movw	r4, r22
	if (abs(error)<3)
    12d8:	3c 01       	movw	r6, r24
    12da:	69 81       	ldd	r22, Y+1	; 0x01
    12dc:	7a 81       	ldd	r23, Y+2	; 0x02
    12de:	8b 81       	ldd	r24, Y+3	; 0x03
    12e0:	9c 81       	ldd	r25, Y+4	; 0x04
    12e2:	a4 d3       	rcall	.+1864   	; 0x1a2c <__fixsfsi>
    12e4:	6e 5f       	subi	r22, 0xFE	; 254
    12e6:	7f 4f       	sbci	r23, 0xFF	; 255
    12e8:	65 30       	cpi	r22, 0x05	; 5
    12ea:	71 05       	cpc	r23, r1
	{
		*pid_i=*pid_i+(ki*error);	
    12ec:	b0 f4       	brcc	.+44     	; 0x131a <Compute_PID+0x86>
    12ee:	2e 8d       	ldd	r18, Y+30	; 0x1e
    12f0:	3f 8d       	ldd	r19, Y+31	; 0x1f
    12f2:	48 a1       	ldd	r20, Y+32	; 0x20
    12f4:	59 a1       	ldd	r21, Y+33	; 0x21
    12f6:	69 81       	ldd	r22, Y+1	; 0x01
    12f8:	7a 81       	ldd	r23, Y+2	; 0x02
    12fa:	8b 81       	ldd	r24, Y+3	; 0x03
    12fc:	9c 81       	ldd	r25, Y+4	; 0x04
    12fe:	a9 d4       	rcall	.+2386   	; 0x1c52 <__mulsf3>
    1300:	9b 01       	movw	r18, r22
    1302:	ac 01       	movw	r20, r24
    1304:	d8 01       	movw	r26, r16
    1306:	6d 91       	ld	r22, X+
    1308:	7d 91       	ld	r23, X+
    130a:	8d 91       	ld	r24, X+
    130c:	9c 91       	ld	r25, X
    130e:	5c d2       	rcall	.+1208   	; 0x17c8 <__addsf3>
    1310:	f8 01       	movw	r30, r16
    1312:	60 83       	st	Z, r22
    1314:	71 83       	std	Z+1, r23	; 0x01
    1316:	82 83       	std	Z+2, r24	; 0x02
	}
	double pid_d = kd*((error - *previous_error)/dt);
    1318:	93 83       	std	Z+3, r25	; 0x03
    131a:	d1 01       	movw	r26, r2
    131c:	2d 91       	ld	r18, X+
    131e:	3d 91       	ld	r19, X+
    1320:	4d 91       	ld	r20, X+
    1322:	5c 91       	ld	r21, X
    1324:	69 81       	ldd	r22, Y+1	; 0x01
    1326:	7a 81       	ldd	r23, Y+2	; 0x02
    1328:	8b 81       	ldd	r24, Y+3	; 0x03
    132a:	9c 81       	ldd	r25, Y+4	; 0x04
    132c:	4c d2       	rcall	.+1176   	; 0x17c6 <__subsf3>
    132e:	a6 01       	movw	r20, r12
    1330:	95 01       	movw	r18, r10
    1332:	14 d3       	rcall	.+1576   	; 0x195c <__divsf3>
    1334:	2a a1       	ldd	r18, Y+34	; 0x22
    1336:	3b a1       	ldd	r19, Y+35	; 0x23
    1338:	4c a1       	ldd	r20, Y+36	; 0x24
    133a:	5d a1       	ldd	r21, Y+37	; 0x25
    133c:	8a d4       	rcall	.+2324   	; 0x1c52 <__mulsf3>
    133e:	4b 01       	movw	r8, r22
	*previous_error=error;
    1340:	5c 01       	movw	r10, r24
    1342:	89 81       	ldd	r24, Y+1	; 0x01
    1344:	9a 81       	ldd	r25, Y+2	; 0x02
    1346:	ab 81       	ldd	r26, Y+3	; 0x03
    1348:	bc 81       	ldd	r27, Y+4	; 0x04
    134a:	f1 01       	movw	r30, r2
    134c:	80 83       	st	Z, r24
    134e:	91 83       	std	Z+1, r25	; 0x01
	
	return pid_p + (*pid_i) + pid_d;
    1350:	a2 83       	std	Z+2, r26	; 0x02
    1352:	b3 83       	std	Z+3, r27	; 0x03
    1354:	d8 01       	movw	r26, r16
    1356:	2d 91       	ld	r18, X+
    1358:	3d 91       	ld	r19, X+
    135a:	4d 91       	ld	r20, X+
    135c:	5c 91       	ld	r21, X
    135e:	c3 01       	movw	r24, r6
    1360:	b2 01       	movw	r22, r4
    1362:	32 d2       	rcall	.+1124   	; 0x17c8 <__addsf3>
    1364:	a5 01       	movw	r20, r10
    1366:	94 01       	movw	r18, r8
}
    1368:	2f d2       	rcall	.+1118   	; 0x17c8 <__addsf3>
    136a:	0f 90       	pop	r0
    136c:	0f 90       	pop	r0
    136e:	0f 90       	pop	r0
    1370:	0f 90       	pop	r0
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	1f 91       	pop	r17
    1378:	0f 91       	pop	r16
    137a:	ff 90       	pop	r15
    137c:	ef 90       	pop	r14
    137e:	df 90       	pop	r13
    1380:	cf 90       	pop	r12
    1382:	bf 90       	pop	r11
    1384:	af 90       	pop	r10
    1386:	9f 90       	pop	r9
    1388:	8f 90       	pop	r8
    138a:	7f 90       	pop	r7
    138c:	6f 90       	pop	r6
    138e:	5f 90       	pop	r5
    1390:	4f 90       	pop	r4
    1392:	3f 90       	pop	r3
    1394:	2f 90       	pop	r2
    1396:	08 95       	ret

00001398 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    1398:	e1 ea       	ldi	r30, 0xA1	; 161
    139a:	f0 e0       	ldi	r31, 0x00	; 0
    139c:	80 81       	ld	r24, Z
    139e:	81 60       	ori	r24, 0x01	; 1
    13a0:	80 83       	st	Z, r24
    13a2:	e0 ea       	ldi	r30, 0xA0	; 160
    13a4:	f0 e0       	ldi	r31, 0x00	; 0
    13a6:	80 81       	ld	r24, Z
    13a8:	81 60       	ori	r24, 0x01	; 1
    13aa:	80 83       	st	Z, r24
    13ac:	80 81       	ld	r24, Z
    13ae:	80 68       	ori	r24, 0x80	; 128
    13b0:	80 83       	st	Z, r24
    13b2:	80 81       	ld	r24, Z
    13b4:	80 62       	ori	r24, 0x20	; 32
    13b6:	80 83       	st	Z, r24
    13b8:	80 81       	ld	r24, Z
    13ba:	88 60       	ori	r24, 0x08	; 8
    13bc:	80 83       	st	Z, r24
    13be:	08 95       	ret

000013c0 <setup_timer3>:
    13c0:	e1 e9       	ldi	r30, 0x91	; 145
    13c2:	f0 e0       	ldi	r31, 0x00	; 0
    13c4:	80 81       	ld	r24, Z
    13c6:	81 60       	ori	r24, 0x01	; 1
    13c8:	80 83       	st	Z, r24
    13ca:	e0 e9       	ldi	r30, 0x90	; 144
    13cc:	f0 e0       	ldi	r31, 0x00	; 0
    13ce:	80 81       	ld	r24, Z
    13d0:	81 60       	ori	r24, 0x01	; 1
    13d2:	80 83       	st	Z, r24
    13d4:	80 81       	ld	r24, Z
    13d6:	80 68       	ori	r24, 0x80	; 128
    13d8:	80 83       	st	Z, r24
    13da:	80 81       	ld	r24, Z
    13dc:	80 62       	ori	r24, 0x20	; 32
    13de:	80 83       	st	Z, r24
    13e0:	80 81       	ld	r24, Z
    13e2:	88 60       	ori	r24, 0x08	; 8
    13e4:	80 83       	st	Z, r24
    13e6:	08 95       	ret

000013e8 <setup_timer5>:
    13e8:	e1 e2       	ldi	r30, 0x21	; 33
    13ea:	f1 e0       	ldi	r31, 0x01	; 1
    13ec:	80 81       	ld	r24, Z
    13ee:	81 60       	ori	r24, 0x01	; 1
    13f0:	80 83       	st	Z, r24
    13f2:	80 81       	ld	r24, Z
    13f4:	88 60       	ori	r24, 0x08	; 8
    13f6:	80 83       	st	Z, r24
    13f8:	08 95       	ret

000013fa <Enable_timer5_compare_interrupt>:
    13fa:	e3 e7       	ldi	r30, 0x73	; 115
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	80 81       	ld	r24, Z
    1400:	82 60       	ori	r24, 0x02	; 2
    1402:	80 83       	st	Z, r24
    1404:	08 95       	ret

00001406 <setup_timer1>:
    1406:	e1 e8       	ldi	r30, 0x81	; 129
    1408:	f0 e0       	ldi	r31, 0x00	; 0
    140a:	80 81       	ld	r24, Z
    140c:	81 60       	ori	r24, 0x01	; 1
    140e:	80 83       	st	Z, r24
    1410:	80 81       	ld	r24, Z
    1412:	88 60       	ori	r24, 0x08	; 8
    1414:	80 83       	st	Z, r24
    1416:	08 95       	ret

00001418 <setup_timer0>:
    1418:	85 b5       	in	r24, 0x25	; 37
    141a:	81 60       	ori	r24, 0x01	; 1
    141c:	85 bd       	out	0x25, r24	; 37
    141e:	85 b5       	in	r24, 0x25	; 37
    1420:	82 60       	ori	r24, 0x02	; 2
    1422:	85 bd       	out	0x25, r24	; 37
    1424:	08 95       	ret

00001426 <Enable_timer0_overflow_interrupt>:
    1426:	ee e6       	ldi	r30, 0x6E	; 110
    1428:	f0 e0       	ldi	r31, 0x00	; 0
    142a:	80 81       	ld	r24, Z
    142c:	81 60       	ori	r24, 0x01	; 1
    142e:	80 83       	st	Z, r24
    1430:	08 95       	ret

00001432 <micros>:
    1432:	3f b7       	in	r19, 0x3f	; 63
    1434:	f8 94       	cli
    1436:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <timer0_overflow_count>
    143a:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <timer0_overflow_count+0x1>
    143e:	a0 91 af 03 	lds	r26, 0x03AF	; 0x8003af <timer0_overflow_count+0x2>
    1442:	b0 91 b0 03 	lds	r27, 0x03B0	; 0x8003b0 <timer0_overflow_count+0x3>
    1446:	26 b5       	in	r18, 0x26	; 38
    1448:	a8 9b       	sbis	0x15, 0	; 21
    144a:	05 c0       	rjmp	.+10     	; 0x1456 <micros+0x24>
    144c:	2f 3f       	cpi	r18, 0xFF	; 255
    144e:	19 f0       	breq	.+6      	; 0x1456 <micros+0x24>
    1450:	01 96       	adiw	r24, 0x01	; 1
    1452:	a1 1d       	adc	r26, r1
    1454:	b1 1d       	adc	r27, r1
    1456:	3f bf       	out	0x3f, r19	; 63
    1458:	ba 2f       	mov	r27, r26
    145a:	a9 2f       	mov	r26, r25
    145c:	98 2f       	mov	r25, r24
    145e:	88 27       	eor	r24, r24
    1460:	82 0f       	add	r24, r18
    1462:	91 1d       	adc	r25, r1
    1464:	a1 1d       	adc	r26, r1
    1466:	b1 1d       	adc	r27, r1
    1468:	bc 01       	movw	r22, r24
    146a:	cd 01       	movw	r24, r26
    146c:	66 0f       	add	r22, r22
    146e:	77 1f       	adc	r23, r23
    1470:	88 1f       	adc	r24, r24
    1472:	99 1f       	adc	r25, r25
    1474:	66 0f       	add	r22, r22
    1476:	77 1f       	adc	r23, r23
    1478:	88 1f       	adc	r24, r24
    147a:	99 1f       	adc	r25, r25
    147c:	08 95       	ret

0000147e <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    147e:	1f 92       	push	r1
    1480:	0f 92       	push	r0
    1482:	0f b6       	in	r0, 0x3f	; 63
    1484:	0f 92       	push	r0
    1486:	11 24       	eor	r1, r1
    1488:	2f 93       	push	r18
    148a:	3f 93       	push	r19
    148c:	8f 93       	push	r24
    148e:	9f 93       	push	r25
    1490:	af 93       	push	r26
    1492:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    1494:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <timer0_millis>
    1498:	90 91 aa 03 	lds	r25, 0x03AA	; 0x8003aa <timer0_millis+0x1>
    149c:	a0 91 ab 03 	lds	r26, 0x03AB	; 0x8003ab <timer0_millis+0x2>
    14a0:	b0 91 ac 03 	lds	r27, 0x03AC	; 0x8003ac <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    14a4:	30 91 a8 03 	lds	r19, 0x03A8	; 0x8003a8 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    14a8:	23 e0       	ldi	r18, 0x03	; 3
    14aa:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    14ac:	2d 37       	cpi	r18, 0x7D	; 125
    14ae:	20 f4       	brcc	.+8      	; 0x14b8 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    14b0:	01 96       	adiw	r24, 0x01	; 1
    14b2:	a1 1d       	adc	r26, r1
    14b4:	b1 1d       	adc	r27, r1
    14b6:	05 c0       	rjmp	.+10     	; 0x14c2 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    14b8:	26 e8       	ldi	r18, 0x86	; 134
    14ba:	23 0f       	add	r18, r19
		m += 1;
    14bc:	02 96       	adiw	r24, 0x02	; 2
    14be:	a1 1d       	adc	r26, r1
    14c0:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    14c2:	20 93 a8 03 	sts	0x03A8, r18	; 0x8003a8 <timer0_fract>
	timer0_millis = m;
    14c6:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <timer0_millis>
    14ca:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <timer0_millis+0x1>
    14ce:	a0 93 ab 03 	sts	0x03AB, r26	; 0x8003ab <timer0_millis+0x2>
    14d2:	b0 93 ac 03 	sts	0x03AC, r27	; 0x8003ac <timer0_millis+0x3>
	timer0_overflow_count++;
    14d6:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <timer0_overflow_count>
    14da:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <timer0_overflow_count+0x1>
    14de:	a0 91 af 03 	lds	r26, 0x03AF	; 0x8003af <timer0_overflow_count+0x2>
    14e2:	b0 91 b0 03 	lds	r27, 0x03B0	; 0x8003b0 <timer0_overflow_count+0x3>
    14e6:	01 96       	adiw	r24, 0x01	; 1
    14e8:	a1 1d       	adc	r26, r1
    14ea:	b1 1d       	adc	r27, r1
    14ec:	80 93 ad 03 	sts	0x03AD, r24	; 0x8003ad <timer0_overflow_count>
    14f0:	90 93 ae 03 	sts	0x03AE, r25	; 0x8003ae <timer0_overflow_count+0x1>
    14f4:	a0 93 af 03 	sts	0x03AF, r26	; 0x8003af <timer0_overflow_count+0x2>
    14f8:	b0 93 b0 03 	sts	0x03B0, r27	; 0x8003b0 <timer0_overflow_count+0x3>
}
    14fc:	bf 91       	pop	r27
    14fe:	af 91       	pop	r26
    1500:	9f 91       	pop	r25
    1502:	8f 91       	pop	r24
    1504:	3f 91       	pop	r19
    1506:	2f 91       	pop	r18
    1508:	0f 90       	pop	r0
    150a:	0f be       	out	0x3f, r0	; 63
    150c:	0f 90       	pop	r0
    150e:	1f 90       	pop	r1
    1510:	18 95       	reti

00001512 <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    1512:	1f 92       	push	r1
    1514:	0f 92       	push	r0
    1516:	0f b6       	in	r0, 0x3f	; 63
    1518:	0f 92       	push	r0
    151a:	11 24       	eor	r1, r1
	//PWM_update();
}
    151c:	0f 90       	pop	r0
    151e:	0f be       	out	0x3f, r0	; 63
    1520:	0f 90       	pop	r0
    1522:	1f 90       	pop	r1
    1524:	18 95       	reti

00001526 <__vector_17>:
ISR(TIMER1_COMPA_vect)//motor update interrupt routine
{
    1526:	1f 92       	push	r1
    1528:	0f 92       	push	r0
    152a:	0f b6       	in	r0, 0x3f	; 63
    152c:	0f 92       	push	r0
    152e:	11 24       	eor	r1, r1
    1530:	0b b6       	in	r0, 0x3b	; 59
    1532:	0f 92       	push	r0
    1534:	2f 93       	push	r18
    1536:	3f 93       	push	r19
    1538:	4f 93       	push	r20
    153a:	5f 93       	push	r21
    153c:	6f 93       	push	r22
    153e:	7f 93       	push	r23
    1540:	8f 93       	push	r24
    1542:	9f 93       	push	r25
    1544:	af 93       	push	r26
    1546:	bf 93       	push	r27
    1548:	ef 93       	push	r30
    154a:	ff 93       	push	r31
	PWM_update_2();
    154c:	0e 94 0f 02 	call	0x41e	; 0x41e <PWM_update_2>
    1550:	ff 91       	pop	r31
    1552:	ef 91       	pop	r30
    1554:	bf 91       	pop	r27
    1556:	af 91       	pop	r26
    1558:	9f 91       	pop	r25
    155a:	8f 91       	pop	r24
    155c:	7f 91       	pop	r23
    155e:	6f 91       	pop	r22
    1560:	5f 91       	pop	r21
    1562:	4f 91       	pop	r20
    1564:	3f 91       	pop	r19
    1566:	2f 91       	pop	r18
    1568:	0f 90       	pop	r0
    156a:	0b be       	out	0x3b, r0	; 59
    156c:	0f 90       	pop	r0
    156e:	0f be       	out	0x3f, r0	; 63
    1570:	0f 90       	pop	r0
    1572:	1f 90       	pop	r1
    1574:	18 95       	reti

00001576 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    1576:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    157a:	8c e0       	ldi	r24, 0x0C	; 12
    157c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    1580:	08 95       	ret

00001582 <i2c_start>:
    1582:	94 ea       	ldi	r25, 0xA4	; 164
    1584:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1588:	4f ef       	ldi	r20, 0xFF	; 255
    158a:	50 e0       	ldi	r21, 0x00	; 0
    158c:	60 e0       	ldi	r22, 0x00	; 0
    158e:	70 e0       	ldi	r23, 0x00	; 0
    1590:	ec eb       	ldi	r30, 0xBC	; 188
    1592:	f0 e0       	ldi	r31, 0x00	; 0
    1594:	90 81       	ld	r25, Z
    1596:	99 23       	and	r25, r25
    1598:	34 f0       	brlt	.+12     	; 0x15a6 <i2c_start+0x24>
    159a:	41 50       	subi	r20, 0x01	; 1
    159c:	51 09       	sbc	r21, r1
    159e:	61 09       	sbc	r22, r1
    15a0:	71 09       	sbc	r23, r1
    15a2:	c0 f7       	brcc	.-16     	; 0x1594 <i2c_start+0x12>
    15a4:	04 c0       	rjmp	.+8      	; 0x15ae <i2c_start+0x2c>
    15a6:	45 2b       	or	r20, r21
    15a8:	46 2b       	or	r20, r22
    15aa:	47 2b       	or	r20, r23
    15ac:	41 f1       	breq	.+80     	; 0x15fe <i2c_start+0x7c>
    15ae:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    15b2:	98 7f       	andi	r25, 0xF8	; 248
    15b4:	98 30       	cpi	r25, 0x08	; 8
    15b6:	11 f0       	breq	.+4      	; 0x15bc <i2c_start+0x3a>
    15b8:	90 31       	cpi	r25, 0x10	; 16
    15ba:	19 f5       	brne	.+70     	; 0x1602 <i2c_start+0x80>
    15bc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    15c0:	84 e8       	ldi	r24, 0x84	; 132
    15c2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    15c6:	8f ef       	ldi	r24, 0xFF	; 255
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	a0 e0       	ldi	r26, 0x00	; 0
    15cc:	b0 e0       	ldi	r27, 0x00	; 0
    15ce:	ec eb       	ldi	r30, 0xBC	; 188
    15d0:	f0 e0       	ldi	r31, 0x00	; 0
    15d2:	20 81       	ld	r18, Z
    15d4:	22 23       	and	r18, r18
    15d6:	2c f0       	brlt	.+10     	; 0x15e2 <i2c_start+0x60>
    15d8:	01 97       	sbiw	r24, 0x01	; 1
    15da:	a1 09       	sbc	r26, r1
    15dc:	b1 09       	sbc	r27, r1
    15de:	c8 f7       	brcc	.-14     	; 0x15d2 <i2c_start+0x50>
    15e0:	04 c0       	rjmp	.+8      	; 0x15ea <i2c_start+0x68>
    15e2:	89 2b       	or	r24, r25
    15e4:	8a 2b       	or	r24, r26
    15e6:	8b 2b       	or	r24, r27
    15e8:	71 f0       	breq	.+28     	; 0x1606 <i2c_start+0x84>
    15ea:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    15ee:	98 7f       	andi	r25, 0xF8	; 248
    15f0:	98 31       	cpi	r25, 0x18	; 24
    15f2:	59 f0       	breq	.+22     	; 0x160a <i2c_start+0x88>
    15f4:	81 e0       	ldi	r24, 0x01	; 1
    15f6:	90 34       	cpi	r25, 0x40	; 64
    15f8:	49 f4       	brne	.+18     	; 0x160c <i2c_start+0x8a>
    15fa:	80 e0       	ldi	r24, 0x00	; 0
    15fc:	08 95       	ret
    15fe:	81 e0       	ldi	r24, 0x01	; 1
    1600:	08 95       	ret
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	08 95       	ret
    1606:	81 e0       	ldi	r24, 0x01	; 1
    1608:	08 95       	ret
    160a:	80 e0       	ldi	r24, 0x00	; 0
    160c:	08 95       	ret

0000160e <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    160e:	84 e9       	ldi	r24, 0x94	; 148
    1610:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    1614:	80 e0       	ldi	r24, 0x00	; 0
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	ec eb       	ldi	r30, 0xBC	; 188
    161a:	f0 e0       	ldi	r31, 0x00	; 0
    161c:	20 81       	ld	r18, Z
    161e:	24 ff       	sbrs	r18, 4
    1620:	05 c0       	rjmp	.+10     	; 0x162c <i2c_stop+0x1e>
    1622:	01 96       	adiw	r24, 0x01	; 1
    1624:	81 15       	cp	r24, r1
    1626:	21 e0       	ldi	r18, 0x01	; 1
    1628:	92 07       	cpc	r25, r18
    162a:	c1 f7       	brne	.-16     	; 0x161c <i2c_stop+0xe>
    162c:	08 95       	ret

0000162e <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    162e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    1632:	84 e8       	ldi	r24, 0x84	; 132
    1634:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    1638:	8f ef       	ldi	r24, 0xFF	; 255
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	a0 e0       	ldi	r26, 0x00	; 0
    163e:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1640:	ec eb       	ldi	r30, 0xBC	; 188
    1642:	f0 e0       	ldi	r31, 0x00	; 0
    1644:	20 81       	ld	r18, Z
    1646:	22 23       	and	r18, r18
    1648:	2c f0       	brlt	.+10     	; 0x1654 <i2c_write+0x26>
    164a:	01 97       	sbiw	r24, 0x01	; 1
    164c:	a1 09       	sbc	r26, r1
    164e:	b1 09       	sbc	r27, r1
    1650:	c8 f7       	brcc	.-14     	; 0x1644 <i2c_write+0x16>
    1652:	04 c0       	rjmp	.+8      	; 0x165c <i2c_write+0x2e>
	if(i2c_timer == 0)
    1654:	89 2b       	or	r24, r25
    1656:	8a 2b       	or	r24, r26
    1658:	8b 2b       	or	r24, r27
    165a:	41 f0       	breq	.+16     	; 0x166c <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    165c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    1660:	98 7f       	andi	r25, 0xF8	; 248
    1662:	81 e0       	ldi	r24, 0x01	; 1
    1664:	98 32       	cpi	r25, 0x28	; 40
    1666:	19 f4       	brne	.+6      	; 0x166e <i2c_write+0x40>
    1668:	80 e0       	ldi	r24, 0x00	; 0
    166a:	08 95       	ret
    166c:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    166e:	08 95       	ret

00001670 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    1670:	84 ec       	ldi	r24, 0xC4	; 196
    1672:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    1676:	8f ef       	ldi	r24, 0xFF	; 255
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	a0 e0       	ldi	r26, 0x00	; 0
    167c:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    167e:	ec eb       	ldi	r30, 0xBC	; 188
    1680:	f0 e0       	ldi	r31, 0x00	; 0
    1682:	20 81       	ld	r18, Z
    1684:	22 23       	and	r18, r18
    1686:	2c f0       	brlt	.+10     	; 0x1692 <i2c_readAck+0x22>
    1688:	01 97       	sbiw	r24, 0x01	; 1
    168a:	a1 09       	sbc	r26, r1
    168c:	b1 09       	sbc	r27, r1
    168e:	c8 f7       	brcc	.-14     	; 0x1682 <i2c_readAck+0x12>
    1690:	04 c0       	rjmp	.+8      	; 0x169a <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    1692:	89 2b       	or	r24, r25
    1694:	8a 2b       	or	r24, r26
    1696:	8b 2b       	or	r24, r27
    1698:	19 f0       	breq	.+6      	; 0x16a0 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    169a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    169e:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    16a0:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    16a2:	08 95       	ret

000016a4 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    16a4:	84 e8       	ldi	r24, 0x84	; 132
    16a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    16aa:	8f ef       	ldi	r24, 0xFF	; 255
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	a0 e0       	ldi	r26, 0x00	; 0
    16b0:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    16b2:	ec eb       	ldi	r30, 0xBC	; 188
    16b4:	f0 e0       	ldi	r31, 0x00	; 0
    16b6:	20 81       	ld	r18, Z
    16b8:	22 23       	and	r18, r18
    16ba:	2c f0       	brlt	.+10     	; 0x16c6 <i2c_readNak+0x22>
    16bc:	01 97       	sbiw	r24, 0x01	; 1
    16be:	a1 09       	sbc	r26, r1
    16c0:	b1 09       	sbc	r27, r1
    16c2:	c8 f7       	brcc	.-14     	; 0x16b6 <i2c_readNak+0x12>
    16c4:	04 c0       	rjmp	.+8      	; 0x16ce <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    16c6:	89 2b       	or	r24, r25
    16c8:	8a 2b       	or	r24, r26
    16ca:	8b 2b       	or	r24, r27
    16cc:	19 f0       	breq	.+6      	; 0x16d4 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    16ce:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    16d2:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    16d4:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    16d6:	08 95       	ret

000016d8 <USART_Init>:
void printSI(char c[20],int16_t intToPrint)
{
	printf(c);
	print16(&intToPrint);
	printf("  ");
}
    16d8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    16dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    16e0:	88 e0       	ldi	r24, 0x08	; 8
    16e2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    16e6:	8e e0       	ldi	r24, 0x0E	; 14
    16e8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    16ec:	08 95       	ret

000016ee <uart_putchar>:
    16ee:	cf 93       	push	r28
    16f0:	c8 2f       	mov	r28, r24
    16f2:	8a 30       	cpi	r24, 0x0A	; 10
    16f4:	11 f4       	brne	.+4      	; 0x16fa <uart_putchar+0xc>
    16f6:	8d e0       	ldi	r24, 0x0D	; 13
    16f8:	fa df       	rcall	.-12     	; 0x16ee <uart_putchar>
    16fa:	e0 ec       	ldi	r30, 0xC0	; 192
    16fc:	f0 e0       	ldi	r31, 0x00	; 0
    16fe:	80 81       	ld	r24, Z
    1700:	85 ff       	sbrs	r24, 5
    1702:	fd cf       	rjmp	.-6      	; 0x16fe <uart_putchar+0x10>
    1704:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1708:	80 e0       	ldi	r24, 0x00	; 0
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	cf 91       	pop	r28
    170e:	08 95       	ret

00001710 <printDouble>:
void printDouble(double *value)
{
    1710:	0f 93       	push	r16
    1712:	1f 93       	push	r17
    1714:	cf 93       	push	r28
    1716:	df 93       	push	r29
    1718:	cd b7       	in	r28, 0x3d	; 61
    171a:	de b7       	in	r29, 0x3e	; 62
    171c:	64 97       	sbiw	r28, 0x14	; 20
    171e:	0f b6       	in	r0, 0x3f	; 63
    1720:	f8 94       	cli
    1722:	de bf       	out	0x3e, r29	; 62
    1724:	0f be       	out	0x3f, r0	; 63
    1726:	cd bf       	out	0x3d, r28	; 61
    1728:	fc 01       	movw	r30, r24
	char c[20]={0};
    172a:	8e 01       	movw	r16, r28
    172c:	0f 5f       	subi	r16, 0xFF	; 255
    172e:	1f 4f       	sbci	r17, 0xFF	; 255
    1730:	84 e1       	ldi	r24, 0x14	; 20
    1732:	d8 01       	movw	r26, r16
    1734:	1d 92       	st	X+, r1
    1736:	8a 95       	dec	r24
    1738:	e9 f7       	brne	.-6      	; 0x1734 <printDouble+0x24>
	sprintf(c, "%f", *value);
    173a:	83 81       	ldd	r24, Z+3	; 0x03
    173c:	8f 93       	push	r24
    173e:	82 81       	ldd	r24, Z+2	; 0x02
    1740:	8f 93       	push	r24
    1742:	81 81       	ldd	r24, Z+1	; 0x01
    1744:	8f 93       	push	r24
    1746:	80 81       	ld	r24, Z
    1748:	8f 93       	push	r24
    174a:	80 ea       	ldi	r24, 0xA0	; 160
    174c:	93 e0       	ldi	r25, 0x03	; 3
    174e:	9f 93       	push	r25
    1750:	8f 93       	push	r24
    1752:	1f 93       	push	r17
    1754:	0f 93       	push	r16
    1756:	0e 94 22 14 	call	0x2844	; 0x2844 <sprintf>
	printf(c);
    175a:	1f 93       	push	r17
    175c:	0f 93       	push	r16
    175e:	0e 94 0a 14 	call	0x2814	; 0x2814 <printf>
}
    1762:	0f b6       	in	r0, 0x3f	; 63
    1764:	f8 94       	cli
    1766:	de bf       	out	0x3e, r29	; 62
    1768:	0f be       	out	0x3f, r0	; 63
    176a:	cd bf       	out	0x3d, r28	; 61
    176c:	64 96       	adiw	r28, 0x14	; 20
    176e:	0f b6       	in	r0, 0x3f	; 63
    1770:	f8 94       	cli
    1772:	de bf       	out	0x3e, r29	; 62
    1774:	0f be       	out	0x3f, r0	; 63
    1776:	cd bf       	out	0x3d, r28	; 61
    1778:	df 91       	pop	r29
    177a:	cf 91       	pop	r28
    177c:	1f 91       	pop	r17
    177e:	0f 91       	pop	r16
    1780:	08 95       	ret

00001782 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    1782:	cf 93       	push	r28
    1784:	df 93       	push	r29
    1786:	00 d0       	rcall	.+0      	; 0x1788 <printSD+0x6>
    1788:	1f 92       	push	r1
    178a:	cd b7       	in	r28, 0x3d	; 61
    178c:	de b7       	in	r29, 0x3e	; 62
    178e:	49 83       	std	Y+1, r20	; 0x01
    1790:	5a 83       	std	Y+2, r21	; 0x02
    1792:	6b 83       	std	Y+3, r22	; 0x03
    1794:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    1796:	9f 93       	push	r25
    1798:	8f 93       	push	r24
    179a:	0e 94 0a 14 	call	0x2814	; 0x2814 <printf>
	printDouble(&doubleToPrint);
    179e:	ce 01       	movw	r24, r28
    17a0:	01 96       	adiw	r24, 0x01	; 1
    17a2:	b6 df       	rcall	.-148    	; 0x1710 <printDouble>
	printf("  ");
    17a4:	8d e9       	ldi	r24, 0x9D	; 157
    17a6:	93 e0       	ldi	r25, 0x03	; 3
    17a8:	9f 93       	push	r25
    17aa:	8f 93       	push	r24
    17ac:	0e 94 0a 14 	call	0x2814	; 0x2814 <printf>
    17b0:	0f 90       	pop	r0
    17b2:	0f 90       	pop	r0
    17b4:	0f 90       	pop	r0
    17b6:	0f 90       	pop	r0
    17b8:	0f 90       	pop	r0
    17ba:	0f 90       	pop	r0
    17bc:	0f 90       	pop	r0
    17be:	0f 90       	pop	r0
    17c0:	df 91       	pop	r29
    17c2:	cf 91       	pop	r28
    17c4:	08 95       	ret

000017c6 <__subsf3>:
    17c6:	50 58       	subi	r21, 0x80	; 128

000017c8 <__addsf3>:
    17c8:	bb 27       	eor	r27, r27
    17ca:	aa 27       	eor	r26, r26
    17cc:	0e d0       	rcall	.+28     	; 0x17ea <__addsf3x>
    17ce:	fc c1       	rjmp	.+1016   	; 0x1bc8 <__fp_round>
    17d0:	ed d1       	rcall	.+986    	; 0x1bac <__fp_pscA>
    17d2:	30 f0       	brcs	.+12     	; 0x17e0 <__addsf3+0x18>
    17d4:	f2 d1       	rcall	.+996    	; 0x1bba <__fp_pscB>
    17d6:	20 f0       	brcs	.+8      	; 0x17e0 <__addsf3+0x18>
    17d8:	31 f4       	brne	.+12     	; 0x17e6 <__addsf3+0x1e>
    17da:	9f 3f       	cpi	r25, 0xFF	; 255
    17dc:	11 f4       	brne	.+4      	; 0x17e2 <__addsf3+0x1a>
    17de:	1e f4       	brtc	.+6      	; 0x17e6 <__addsf3+0x1e>
    17e0:	bd c1       	rjmp	.+890    	; 0x1b5c <__fp_nan>
    17e2:	0e f4       	brtc	.+2      	; 0x17e6 <__addsf3+0x1e>
    17e4:	e0 95       	com	r30
    17e6:	e7 fb       	bst	r30, 7
    17e8:	b3 c1       	rjmp	.+870    	; 0x1b50 <__fp_inf>

000017ea <__addsf3x>:
    17ea:	e9 2f       	mov	r30, r25
    17ec:	fe d1       	rcall	.+1020   	; 0x1bea <__fp_split3>
    17ee:	80 f3       	brcs	.-32     	; 0x17d0 <__addsf3+0x8>
    17f0:	ba 17       	cp	r27, r26
    17f2:	62 07       	cpc	r22, r18
    17f4:	73 07       	cpc	r23, r19
    17f6:	84 07       	cpc	r24, r20
    17f8:	95 07       	cpc	r25, r21
    17fa:	18 f0       	brcs	.+6      	; 0x1802 <__addsf3x+0x18>
    17fc:	71 f4       	brne	.+28     	; 0x181a <__addsf3x+0x30>
    17fe:	9e f5       	brtc	.+102    	; 0x1866 <__addsf3x+0x7c>
    1800:	16 c2       	rjmp	.+1068   	; 0x1c2e <__fp_zero>
    1802:	0e f4       	brtc	.+2      	; 0x1806 <__addsf3x+0x1c>
    1804:	e0 95       	com	r30
    1806:	0b 2e       	mov	r0, r27
    1808:	ba 2f       	mov	r27, r26
    180a:	a0 2d       	mov	r26, r0
    180c:	0b 01       	movw	r0, r22
    180e:	b9 01       	movw	r22, r18
    1810:	90 01       	movw	r18, r0
    1812:	0c 01       	movw	r0, r24
    1814:	ca 01       	movw	r24, r20
    1816:	a0 01       	movw	r20, r0
    1818:	11 24       	eor	r1, r1
    181a:	ff 27       	eor	r31, r31
    181c:	59 1b       	sub	r21, r25
    181e:	99 f0       	breq	.+38     	; 0x1846 <__addsf3x+0x5c>
    1820:	59 3f       	cpi	r21, 0xF9	; 249
    1822:	50 f4       	brcc	.+20     	; 0x1838 <__addsf3x+0x4e>
    1824:	50 3e       	cpi	r21, 0xE0	; 224
    1826:	68 f1       	brcs	.+90     	; 0x1882 <__addsf3x+0x98>
    1828:	1a 16       	cp	r1, r26
    182a:	f0 40       	sbci	r31, 0x00	; 0
    182c:	a2 2f       	mov	r26, r18
    182e:	23 2f       	mov	r18, r19
    1830:	34 2f       	mov	r19, r20
    1832:	44 27       	eor	r20, r20
    1834:	58 5f       	subi	r21, 0xF8	; 248
    1836:	f3 cf       	rjmp	.-26     	; 0x181e <__addsf3x+0x34>
    1838:	46 95       	lsr	r20
    183a:	37 95       	ror	r19
    183c:	27 95       	ror	r18
    183e:	a7 95       	ror	r26
    1840:	f0 40       	sbci	r31, 0x00	; 0
    1842:	53 95       	inc	r21
    1844:	c9 f7       	brne	.-14     	; 0x1838 <__addsf3x+0x4e>
    1846:	7e f4       	brtc	.+30     	; 0x1866 <__addsf3x+0x7c>
    1848:	1f 16       	cp	r1, r31
    184a:	ba 0b       	sbc	r27, r26
    184c:	62 0b       	sbc	r22, r18
    184e:	73 0b       	sbc	r23, r19
    1850:	84 0b       	sbc	r24, r20
    1852:	ba f0       	brmi	.+46     	; 0x1882 <__addsf3x+0x98>
    1854:	91 50       	subi	r25, 0x01	; 1
    1856:	a1 f0       	breq	.+40     	; 0x1880 <__addsf3x+0x96>
    1858:	ff 0f       	add	r31, r31
    185a:	bb 1f       	adc	r27, r27
    185c:	66 1f       	adc	r22, r22
    185e:	77 1f       	adc	r23, r23
    1860:	88 1f       	adc	r24, r24
    1862:	c2 f7       	brpl	.-16     	; 0x1854 <__addsf3x+0x6a>
    1864:	0e c0       	rjmp	.+28     	; 0x1882 <__addsf3x+0x98>
    1866:	ba 0f       	add	r27, r26
    1868:	62 1f       	adc	r22, r18
    186a:	73 1f       	adc	r23, r19
    186c:	84 1f       	adc	r24, r20
    186e:	48 f4       	brcc	.+18     	; 0x1882 <__addsf3x+0x98>
    1870:	87 95       	ror	r24
    1872:	77 95       	ror	r23
    1874:	67 95       	ror	r22
    1876:	b7 95       	ror	r27
    1878:	f7 95       	ror	r31
    187a:	9e 3f       	cpi	r25, 0xFE	; 254
    187c:	08 f0       	brcs	.+2      	; 0x1880 <__addsf3x+0x96>
    187e:	b3 cf       	rjmp	.-154    	; 0x17e6 <__addsf3+0x1e>
    1880:	93 95       	inc	r25
    1882:	88 0f       	add	r24, r24
    1884:	08 f0       	brcs	.+2      	; 0x1888 <__addsf3x+0x9e>
    1886:	99 27       	eor	r25, r25
    1888:	ee 0f       	add	r30, r30
    188a:	97 95       	ror	r25
    188c:	87 95       	ror	r24
    188e:	08 95       	ret
    1890:	8d d1       	rcall	.+794    	; 0x1bac <__fp_pscA>
    1892:	58 f0       	brcs	.+22     	; 0x18aa <__addsf3x+0xc0>
    1894:	80 e8       	ldi	r24, 0x80	; 128
    1896:	91 e0       	ldi	r25, 0x01	; 1
    1898:	09 f4       	brne	.+2      	; 0x189c <__addsf3x+0xb2>
    189a:	9e ef       	ldi	r25, 0xFE	; 254
    189c:	8e d1       	rcall	.+796    	; 0x1bba <__fp_pscB>
    189e:	28 f0       	brcs	.+10     	; 0x18aa <__addsf3x+0xc0>
    18a0:	40 e8       	ldi	r20, 0x80	; 128
    18a2:	51 e0       	ldi	r21, 0x01	; 1
    18a4:	59 f4       	brne	.+22     	; 0x18bc <atan2+0xe>
    18a6:	5e ef       	ldi	r21, 0xFE	; 254
    18a8:	09 c0       	rjmp	.+18     	; 0x18bc <atan2+0xe>
    18aa:	58 c1       	rjmp	.+688    	; 0x1b5c <__fp_nan>
    18ac:	c0 c1       	rjmp	.+896    	; 0x1c2e <__fp_zero>

000018ae <atan2>:
    18ae:	e9 2f       	mov	r30, r25
    18b0:	e0 78       	andi	r30, 0x80	; 128
    18b2:	9b d1       	rcall	.+822    	; 0x1bea <__fp_split3>
    18b4:	68 f3       	brcs	.-38     	; 0x1890 <__addsf3x+0xa6>
    18b6:	09 2e       	mov	r0, r25
    18b8:	05 2a       	or	r0, r21
    18ba:	c1 f3       	breq	.-16     	; 0x18ac <__addsf3x+0xc2>
    18bc:	26 17       	cp	r18, r22
    18be:	37 07       	cpc	r19, r23
    18c0:	48 07       	cpc	r20, r24
    18c2:	59 07       	cpc	r21, r25
    18c4:	38 f0       	brcs	.+14     	; 0x18d4 <atan2+0x26>
    18c6:	0e 2e       	mov	r0, r30
    18c8:	07 f8       	bld	r0, 7
    18ca:	e0 25       	eor	r30, r0
    18cc:	69 f0       	breq	.+26     	; 0x18e8 <atan2+0x3a>
    18ce:	e0 25       	eor	r30, r0
    18d0:	e0 64       	ori	r30, 0x40	; 64
    18d2:	0a c0       	rjmp	.+20     	; 0x18e8 <atan2+0x3a>
    18d4:	ef 63       	ori	r30, 0x3F	; 63
    18d6:	07 f8       	bld	r0, 7
    18d8:	00 94       	com	r0
    18da:	07 fa       	bst	r0, 7
    18dc:	db 01       	movw	r26, r22
    18de:	b9 01       	movw	r22, r18
    18e0:	9d 01       	movw	r18, r26
    18e2:	dc 01       	movw	r26, r24
    18e4:	ca 01       	movw	r24, r20
    18e6:	ad 01       	movw	r20, r26
    18e8:	ef 93       	push	r30
    18ea:	47 d0       	rcall	.+142    	; 0x197a <__divsf3_pse>
    18ec:	6d d1       	rcall	.+730    	; 0x1bc8 <__fp_round>
    18ee:	0a d0       	rcall	.+20     	; 0x1904 <atan>
    18f0:	5f 91       	pop	r21
    18f2:	55 23       	and	r21, r21
    18f4:	31 f0       	breq	.+12     	; 0x1902 <atan2+0x54>
    18f6:	2b ed       	ldi	r18, 0xDB	; 219
    18f8:	3f e0       	ldi	r19, 0x0F	; 15
    18fa:	49 e4       	ldi	r20, 0x49	; 73
    18fc:	50 fd       	sbrc	r21, 0
    18fe:	49 ec       	ldi	r20, 0xC9	; 201
    1900:	63 cf       	rjmp	.-314    	; 0x17c8 <__addsf3>
    1902:	08 95       	ret

00001904 <atan>:
    1904:	df 93       	push	r29
    1906:	dd 27       	eor	r29, r29
    1908:	b9 2f       	mov	r27, r25
    190a:	bf 77       	andi	r27, 0x7F	; 127
    190c:	40 e8       	ldi	r20, 0x80	; 128
    190e:	5f e3       	ldi	r21, 0x3F	; 63
    1910:	16 16       	cp	r1, r22
    1912:	17 06       	cpc	r1, r23
    1914:	48 07       	cpc	r20, r24
    1916:	5b 07       	cpc	r21, r27
    1918:	10 f4       	brcc	.+4      	; 0x191e <atan+0x1a>
    191a:	d9 2f       	mov	r29, r25
    191c:	93 d1       	rcall	.+806    	; 0x1c44 <inverse>
    191e:	9f 93       	push	r25
    1920:	8f 93       	push	r24
    1922:	7f 93       	push	r23
    1924:	6f 93       	push	r22
    1926:	3a d2       	rcall	.+1140   	; 0x1d9c <square>
    1928:	e4 ee       	ldi	r30, 0xE4	; 228
    192a:	f0 e0       	ldi	r31, 0x00	; 0
    192c:	1a d1       	rcall	.+564    	; 0x1b62 <__fp_powser>
    192e:	4c d1       	rcall	.+664    	; 0x1bc8 <__fp_round>
    1930:	2f 91       	pop	r18
    1932:	3f 91       	pop	r19
    1934:	4f 91       	pop	r20
    1936:	5f 91       	pop	r21
    1938:	98 d1       	rcall	.+816    	; 0x1c6a <__mulsf3x>
    193a:	dd 23       	and	r29, r29
    193c:	49 f0       	breq	.+18     	; 0x1950 <atan+0x4c>
    193e:	90 58       	subi	r25, 0x80	; 128
    1940:	a2 ea       	ldi	r26, 0xA2	; 162
    1942:	2a ed       	ldi	r18, 0xDA	; 218
    1944:	3f e0       	ldi	r19, 0x0F	; 15
    1946:	49 ec       	ldi	r20, 0xC9	; 201
    1948:	5f e3       	ldi	r21, 0x3F	; 63
    194a:	d0 78       	andi	r29, 0x80	; 128
    194c:	5d 27       	eor	r21, r29
    194e:	4d df       	rcall	.-358    	; 0x17ea <__addsf3x>
    1950:	df 91       	pop	r29
    1952:	3a c1       	rjmp	.+628    	; 0x1bc8 <__fp_round>

00001954 <__cmpsf2>:
    1954:	d9 d0       	rcall	.+434    	; 0x1b08 <__fp_cmp>
    1956:	08 f4       	brcc	.+2      	; 0x195a <__cmpsf2+0x6>
    1958:	81 e0       	ldi	r24, 0x01	; 1
    195a:	08 95       	ret

0000195c <__divsf3>:
    195c:	0c d0       	rcall	.+24     	; 0x1976 <__divsf3x>
    195e:	34 c1       	rjmp	.+616    	; 0x1bc8 <__fp_round>
    1960:	2c d1       	rcall	.+600    	; 0x1bba <__fp_pscB>
    1962:	40 f0       	brcs	.+16     	; 0x1974 <__divsf3+0x18>
    1964:	23 d1       	rcall	.+582    	; 0x1bac <__fp_pscA>
    1966:	30 f0       	brcs	.+12     	; 0x1974 <__divsf3+0x18>
    1968:	21 f4       	brne	.+8      	; 0x1972 <__divsf3+0x16>
    196a:	5f 3f       	cpi	r21, 0xFF	; 255
    196c:	19 f0       	breq	.+6      	; 0x1974 <__divsf3+0x18>
    196e:	f0 c0       	rjmp	.+480    	; 0x1b50 <__fp_inf>
    1970:	51 11       	cpse	r21, r1
    1972:	5e c1       	rjmp	.+700    	; 0x1c30 <__fp_szero>
    1974:	f3 c0       	rjmp	.+486    	; 0x1b5c <__fp_nan>

00001976 <__divsf3x>:
    1976:	39 d1       	rcall	.+626    	; 0x1bea <__fp_split3>
    1978:	98 f3       	brcs	.-26     	; 0x1960 <__divsf3+0x4>

0000197a <__divsf3_pse>:
    197a:	99 23       	and	r25, r25
    197c:	c9 f3       	breq	.-14     	; 0x1970 <__divsf3+0x14>
    197e:	55 23       	and	r21, r21
    1980:	b1 f3       	breq	.-20     	; 0x196e <__divsf3+0x12>
    1982:	95 1b       	sub	r25, r21
    1984:	55 0b       	sbc	r21, r21
    1986:	bb 27       	eor	r27, r27
    1988:	aa 27       	eor	r26, r26
    198a:	62 17       	cp	r22, r18
    198c:	73 07       	cpc	r23, r19
    198e:	84 07       	cpc	r24, r20
    1990:	38 f0       	brcs	.+14     	; 0x19a0 <__divsf3_pse+0x26>
    1992:	9f 5f       	subi	r25, 0xFF	; 255
    1994:	5f 4f       	sbci	r21, 0xFF	; 255
    1996:	22 0f       	add	r18, r18
    1998:	33 1f       	adc	r19, r19
    199a:	44 1f       	adc	r20, r20
    199c:	aa 1f       	adc	r26, r26
    199e:	a9 f3       	breq	.-22     	; 0x198a <__divsf3_pse+0x10>
    19a0:	33 d0       	rcall	.+102    	; 0x1a08 <__divsf3_pse+0x8e>
    19a2:	0e 2e       	mov	r0, r30
    19a4:	3a f0       	brmi	.+14     	; 0x19b4 <__divsf3_pse+0x3a>
    19a6:	e0 e8       	ldi	r30, 0x80	; 128
    19a8:	30 d0       	rcall	.+96     	; 0x1a0a <__divsf3_pse+0x90>
    19aa:	91 50       	subi	r25, 0x01	; 1
    19ac:	50 40       	sbci	r21, 0x00	; 0
    19ae:	e6 95       	lsr	r30
    19b0:	00 1c       	adc	r0, r0
    19b2:	ca f7       	brpl	.-14     	; 0x19a6 <__divsf3_pse+0x2c>
    19b4:	29 d0       	rcall	.+82     	; 0x1a08 <__divsf3_pse+0x8e>
    19b6:	fe 2f       	mov	r31, r30
    19b8:	27 d0       	rcall	.+78     	; 0x1a08 <__divsf3_pse+0x8e>
    19ba:	66 0f       	add	r22, r22
    19bc:	77 1f       	adc	r23, r23
    19be:	88 1f       	adc	r24, r24
    19c0:	bb 1f       	adc	r27, r27
    19c2:	26 17       	cp	r18, r22
    19c4:	37 07       	cpc	r19, r23
    19c6:	48 07       	cpc	r20, r24
    19c8:	ab 07       	cpc	r26, r27
    19ca:	b0 e8       	ldi	r27, 0x80	; 128
    19cc:	09 f0       	breq	.+2      	; 0x19d0 <__divsf3_pse+0x56>
    19ce:	bb 0b       	sbc	r27, r27
    19d0:	80 2d       	mov	r24, r0
    19d2:	bf 01       	movw	r22, r30
    19d4:	ff 27       	eor	r31, r31
    19d6:	93 58       	subi	r25, 0x83	; 131
    19d8:	5f 4f       	sbci	r21, 0xFF	; 255
    19da:	2a f0       	brmi	.+10     	; 0x19e6 <__divsf3_pse+0x6c>
    19dc:	9e 3f       	cpi	r25, 0xFE	; 254
    19de:	51 05       	cpc	r21, r1
    19e0:	68 f0       	brcs	.+26     	; 0x19fc <__divsf3_pse+0x82>
    19e2:	b6 c0       	rjmp	.+364    	; 0x1b50 <__fp_inf>
    19e4:	25 c1       	rjmp	.+586    	; 0x1c30 <__fp_szero>
    19e6:	5f 3f       	cpi	r21, 0xFF	; 255
    19e8:	ec f3       	brlt	.-6      	; 0x19e4 <__divsf3_pse+0x6a>
    19ea:	98 3e       	cpi	r25, 0xE8	; 232
    19ec:	dc f3       	brlt	.-10     	; 0x19e4 <__divsf3_pse+0x6a>
    19ee:	86 95       	lsr	r24
    19f0:	77 95       	ror	r23
    19f2:	67 95       	ror	r22
    19f4:	b7 95       	ror	r27
    19f6:	f7 95       	ror	r31
    19f8:	9f 5f       	subi	r25, 0xFF	; 255
    19fa:	c9 f7       	brne	.-14     	; 0x19ee <__divsf3_pse+0x74>
    19fc:	88 0f       	add	r24, r24
    19fe:	91 1d       	adc	r25, r1
    1a00:	96 95       	lsr	r25
    1a02:	87 95       	ror	r24
    1a04:	97 f9       	bld	r25, 7
    1a06:	08 95       	ret
    1a08:	e1 e0       	ldi	r30, 0x01	; 1
    1a0a:	66 0f       	add	r22, r22
    1a0c:	77 1f       	adc	r23, r23
    1a0e:	88 1f       	adc	r24, r24
    1a10:	bb 1f       	adc	r27, r27
    1a12:	62 17       	cp	r22, r18
    1a14:	73 07       	cpc	r23, r19
    1a16:	84 07       	cpc	r24, r20
    1a18:	ba 07       	cpc	r27, r26
    1a1a:	20 f0       	brcs	.+8      	; 0x1a24 <__divsf3_pse+0xaa>
    1a1c:	62 1b       	sub	r22, r18
    1a1e:	73 0b       	sbc	r23, r19
    1a20:	84 0b       	sbc	r24, r20
    1a22:	ba 0b       	sbc	r27, r26
    1a24:	ee 1f       	adc	r30, r30
    1a26:	88 f7       	brcc	.-30     	; 0x1a0a <__divsf3_pse+0x90>
    1a28:	e0 95       	com	r30
    1a2a:	08 95       	ret

00001a2c <__fixsfsi>:
    1a2c:	04 d0       	rcall	.+8      	; 0x1a36 <__fixunssfsi>
    1a2e:	68 94       	set
    1a30:	b1 11       	cpse	r27, r1
    1a32:	fe c0       	rjmp	.+508    	; 0x1c30 <__fp_szero>
    1a34:	08 95       	ret

00001a36 <__fixunssfsi>:
    1a36:	e1 d0       	rcall	.+450    	; 0x1bfa <__fp_splitA>
    1a38:	88 f0       	brcs	.+34     	; 0x1a5c <__fixunssfsi+0x26>
    1a3a:	9f 57       	subi	r25, 0x7F	; 127
    1a3c:	90 f0       	brcs	.+36     	; 0x1a62 <__fixunssfsi+0x2c>
    1a3e:	b9 2f       	mov	r27, r25
    1a40:	99 27       	eor	r25, r25
    1a42:	b7 51       	subi	r27, 0x17	; 23
    1a44:	a0 f0       	brcs	.+40     	; 0x1a6e <__fixunssfsi+0x38>
    1a46:	d1 f0       	breq	.+52     	; 0x1a7c <__fixunssfsi+0x46>
    1a48:	66 0f       	add	r22, r22
    1a4a:	77 1f       	adc	r23, r23
    1a4c:	88 1f       	adc	r24, r24
    1a4e:	99 1f       	adc	r25, r25
    1a50:	1a f0       	brmi	.+6      	; 0x1a58 <__fixunssfsi+0x22>
    1a52:	ba 95       	dec	r27
    1a54:	c9 f7       	brne	.-14     	; 0x1a48 <__fixunssfsi+0x12>
    1a56:	12 c0       	rjmp	.+36     	; 0x1a7c <__fixunssfsi+0x46>
    1a58:	b1 30       	cpi	r27, 0x01	; 1
    1a5a:	81 f0       	breq	.+32     	; 0x1a7c <__fixunssfsi+0x46>
    1a5c:	e8 d0       	rcall	.+464    	; 0x1c2e <__fp_zero>
    1a5e:	b1 e0       	ldi	r27, 0x01	; 1
    1a60:	08 95       	ret
    1a62:	e5 c0       	rjmp	.+458    	; 0x1c2e <__fp_zero>
    1a64:	67 2f       	mov	r22, r23
    1a66:	78 2f       	mov	r23, r24
    1a68:	88 27       	eor	r24, r24
    1a6a:	b8 5f       	subi	r27, 0xF8	; 248
    1a6c:	39 f0       	breq	.+14     	; 0x1a7c <__fixunssfsi+0x46>
    1a6e:	b9 3f       	cpi	r27, 0xF9	; 249
    1a70:	cc f3       	brlt	.-14     	; 0x1a64 <__fixunssfsi+0x2e>
    1a72:	86 95       	lsr	r24
    1a74:	77 95       	ror	r23
    1a76:	67 95       	ror	r22
    1a78:	b3 95       	inc	r27
    1a7a:	d9 f7       	brne	.-10     	; 0x1a72 <__fixunssfsi+0x3c>
    1a7c:	3e f4       	brtc	.+14     	; 0x1a8c <__fixunssfsi+0x56>
    1a7e:	90 95       	com	r25
    1a80:	80 95       	com	r24
    1a82:	70 95       	com	r23
    1a84:	61 95       	neg	r22
    1a86:	7f 4f       	sbci	r23, 0xFF	; 255
    1a88:	8f 4f       	sbci	r24, 0xFF	; 255
    1a8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a8c:	08 95       	ret

00001a8e <__floatunsisf>:
    1a8e:	e8 94       	clt
    1a90:	09 c0       	rjmp	.+18     	; 0x1aa4 <__floatsisf+0x12>

00001a92 <__floatsisf>:
    1a92:	97 fb       	bst	r25, 7
    1a94:	3e f4       	brtc	.+14     	; 0x1aa4 <__floatsisf+0x12>
    1a96:	90 95       	com	r25
    1a98:	80 95       	com	r24
    1a9a:	70 95       	com	r23
    1a9c:	61 95       	neg	r22
    1a9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1aa0:	8f 4f       	sbci	r24, 0xFF	; 255
    1aa2:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa4:	99 23       	and	r25, r25
    1aa6:	a9 f0       	breq	.+42     	; 0x1ad2 <__floatsisf+0x40>
    1aa8:	f9 2f       	mov	r31, r25
    1aaa:	96 e9       	ldi	r25, 0x96	; 150
    1aac:	bb 27       	eor	r27, r27
    1aae:	93 95       	inc	r25
    1ab0:	f6 95       	lsr	r31
    1ab2:	87 95       	ror	r24
    1ab4:	77 95       	ror	r23
    1ab6:	67 95       	ror	r22
    1ab8:	b7 95       	ror	r27
    1aba:	f1 11       	cpse	r31, r1
    1abc:	f8 cf       	rjmp	.-16     	; 0x1aae <__floatsisf+0x1c>
    1abe:	fa f4       	brpl	.+62     	; 0x1afe <__floatsisf+0x6c>
    1ac0:	bb 0f       	add	r27, r27
    1ac2:	11 f4       	brne	.+4      	; 0x1ac8 <__floatsisf+0x36>
    1ac4:	60 ff       	sbrs	r22, 0
    1ac6:	1b c0       	rjmp	.+54     	; 0x1afe <__floatsisf+0x6c>
    1ac8:	6f 5f       	subi	r22, 0xFF	; 255
    1aca:	7f 4f       	sbci	r23, 0xFF	; 255
    1acc:	8f 4f       	sbci	r24, 0xFF	; 255
    1ace:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad0:	16 c0       	rjmp	.+44     	; 0x1afe <__floatsisf+0x6c>
    1ad2:	88 23       	and	r24, r24
    1ad4:	11 f0       	breq	.+4      	; 0x1ada <__floatsisf+0x48>
    1ad6:	96 e9       	ldi	r25, 0x96	; 150
    1ad8:	11 c0       	rjmp	.+34     	; 0x1afc <__floatsisf+0x6a>
    1ada:	77 23       	and	r23, r23
    1adc:	21 f0       	breq	.+8      	; 0x1ae6 <__floatsisf+0x54>
    1ade:	9e e8       	ldi	r25, 0x8E	; 142
    1ae0:	87 2f       	mov	r24, r23
    1ae2:	76 2f       	mov	r23, r22
    1ae4:	05 c0       	rjmp	.+10     	; 0x1af0 <__floatsisf+0x5e>
    1ae6:	66 23       	and	r22, r22
    1ae8:	71 f0       	breq	.+28     	; 0x1b06 <__floatsisf+0x74>
    1aea:	96 e8       	ldi	r25, 0x86	; 134
    1aec:	86 2f       	mov	r24, r22
    1aee:	70 e0       	ldi	r23, 0x00	; 0
    1af0:	60 e0       	ldi	r22, 0x00	; 0
    1af2:	2a f0       	brmi	.+10     	; 0x1afe <__floatsisf+0x6c>
    1af4:	9a 95       	dec	r25
    1af6:	66 0f       	add	r22, r22
    1af8:	77 1f       	adc	r23, r23
    1afa:	88 1f       	adc	r24, r24
    1afc:	da f7       	brpl	.-10     	; 0x1af4 <__floatsisf+0x62>
    1afe:	88 0f       	add	r24, r24
    1b00:	96 95       	lsr	r25
    1b02:	87 95       	ror	r24
    1b04:	97 f9       	bld	r25, 7
    1b06:	08 95       	ret

00001b08 <__fp_cmp>:
    1b08:	99 0f       	add	r25, r25
    1b0a:	00 08       	sbc	r0, r0
    1b0c:	55 0f       	add	r21, r21
    1b0e:	aa 0b       	sbc	r26, r26
    1b10:	e0 e8       	ldi	r30, 0x80	; 128
    1b12:	fe ef       	ldi	r31, 0xFE	; 254
    1b14:	16 16       	cp	r1, r22
    1b16:	17 06       	cpc	r1, r23
    1b18:	e8 07       	cpc	r30, r24
    1b1a:	f9 07       	cpc	r31, r25
    1b1c:	c0 f0       	brcs	.+48     	; 0x1b4e <__fp_cmp+0x46>
    1b1e:	12 16       	cp	r1, r18
    1b20:	13 06       	cpc	r1, r19
    1b22:	e4 07       	cpc	r30, r20
    1b24:	f5 07       	cpc	r31, r21
    1b26:	98 f0       	brcs	.+38     	; 0x1b4e <__fp_cmp+0x46>
    1b28:	62 1b       	sub	r22, r18
    1b2a:	73 0b       	sbc	r23, r19
    1b2c:	84 0b       	sbc	r24, r20
    1b2e:	95 0b       	sbc	r25, r21
    1b30:	39 f4       	brne	.+14     	; 0x1b40 <__fp_cmp+0x38>
    1b32:	0a 26       	eor	r0, r26
    1b34:	61 f0       	breq	.+24     	; 0x1b4e <__fp_cmp+0x46>
    1b36:	23 2b       	or	r18, r19
    1b38:	24 2b       	or	r18, r20
    1b3a:	25 2b       	or	r18, r21
    1b3c:	21 f4       	brne	.+8      	; 0x1b46 <__fp_cmp+0x3e>
    1b3e:	08 95       	ret
    1b40:	0a 26       	eor	r0, r26
    1b42:	09 f4       	brne	.+2      	; 0x1b46 <__fp_cmp+0x3e>
    1b44:	a1 40       	sbci	r26, 0x01	; 1
    1b46:	a6 95       	lsr	r26
    1b48:	8f ef       	ldi	r24, 0xFF	; 255
    1b4a:	81 1d       	adc	r24, r1
    1b4c:	81 1d       	adc	r24, r1
    1b4e:	08 95       	ret

00001b50 <__fp_inf>:
    1b50:	97 f9       	bld	r25, 7
    1b52:	9f 67       	ori	r25, 0x7F	; 127
    1b54:	80 e8       	ldi	r24, 0x80	; 128
    1b56:	70 e0       	ldi	r23, 0x00	; 0
    1b58:	60 e0       	ldi	r22, 0x00	; 0
    1b5a:	08 95       	ret

00001b5c <__fp_nan>:
    1b5c:	9f ef       	ldi	r25, 0xFF	; 255
    1b5e:	80 ec       	ldi	r24, 0xC0	; 192
    1b60:	08 95       	ret

00001b62 <__fp_powser>:
    1b62:	df 93       	push	r29
    1b64:	cf 93       	push	r28
    1b66:	1f 93       	push	r17
    1b68:	0f 93       	push	r16
    1b6a:	ff 92       	push	r15
    1b6c:	ef 92       	push	r14
    1b6e:	df 92       	push	r13
    1b70:	7b 01       	movw	r14, r22
    1b72:	8c 01       	movw	r16, r24
    1b74:	68 94       	set
    1b76:	05 c0       	rjmp	.+10     	; 0x1b82 <__fp_powser+0x20>
    1b78:	da 2e       	mov	r13, r26
    1b7a:	ef 01       	movw	r28, r30
    1b7c:	76 d0       	rcall	.+236    	; 0x1c6a <__mulsf3x>
    1b7e:	fe 01       	movw	r30, r28
    1b80:	e8 94       	clt
    1b82:	a5 91       	lpm	r26, Z+
    1b84:	25 91       	lpm	r18, Z+
    1b86:	35 91       	lpm	r19, Z+
    1b88:	45 91       	lpm	r20, Z+
    1b8a:	55 91       	lpm	r21, Z+
    1b8c:	ae f3       	brts	.-22     	; 0x1b78 <__fp_powser+0x16>
    1b8e:	ef 01       	movw	r28, r30
    1b90:	2c de       	rcall	.-936    	; 0x17ea <__addsf3x>
    1b92:	fe 01       	movw	r30, r28
    1b94:	97 01       	movw	r18, r14
    1b96:	a8 01       	movw	r20, r16
    1b98:	da 94       	dec	r13
    1b9a:	79 f7       	brne	.-34     	; 0x1b7a <__fp_powser+0x18>
    1b9c:	df 90       	pop	r13
    1b9e:	ef 90       	pop	r14
    1ba0:	ff 90       	pop	r15
    1ba2:	0f 91       	pop	r16
    1ba4:	1f 91       	pop	r17
    1ba6:	cf 91       	pop	r28
    1ba8:	df 91       	pop	r29
    1baa:	08 95       	ret

00001bac <__fp_pscA>:
    1bac:	00 24       	eor	r0, r0
    1bae:	0a 94       	dec	r0
    1bb0:	16 16       	cp	r1, r22
    1bb2:	17 06       	cpc	r1, r23
    1bb4:	18 06       	cpc	r1, r24
    1bb6:	09 06       	cpc	r0, r25
    1bb8:	08 95       	ret

00001bba <__fp_pscB>:
    1bba:	00 24       	eor	r0, r0
    1bbc:	0a 94       	dec	r0
    1bbe:	12 16       	cp	r1, r18
    1bc0:	13 06       	cpc	r1, r19
    1bc2:	14 06       	cpc	r1, r20
    1bc4:	05 06       	cpc	r0, r21
    1bc6:	08 95       	ret

00001bc8 <__fp_round>:
    1bc8:	09 2e       	mov	r0, r25
    1bca:	03 94       	inc	r0
    1bcc:	00 0c       	add	r0, r0
    1bce:	11 f4       	brne	.+4      	; 0x1bd4 <__fp_round+0xc>
    1bd0:	88 23       	and	r24, r24
    1bd2:	52 f0       	brmi	.+20     	; 0x1be8 <__fp_round+0x20>
    1bd4:	bb 0f       	add	r27, r27
    1bd6:	40 f4       	brcc	.+16     	; 0x1be8 <__fp_round+0x20>
    1bd8:	bf 2b       	or	r27, r31
    1bda:	11 f4       	brne	.+4      	; 0x1be0 <__fp_round+0x18>
    1bdc:	60 ff       	sbrs	r22, 0
    1bde:	04 c0       	rjmp	.+8      	; 0x1be8 <__fp_round+0x20>
    1be0:	6f 5f       	subi	r22, 0xFF	; 255
    1be2:	7f 4f       	sbci	r23, 0xFF	; 255
    1be4:	8f 4f       	sbci	r24, 0xFF	; 255
    1be6:	9f 4f       	sbci	r25, 0xFF	; 255
    1be8:	08 95       	ret

00001bea <__fp_split3>:
    1bea:	57 fd       	sbrc	r21, 7
    1bec:	90 58       	subi	r25, 0x80	; 128
    1bee:	44 0f       	add	r20, r20
    1bf0:	55 1f       	adc	r21, r21
    1bf2:	59 f0       	breq	.+22     	; 0x1c0a <__fp_splitA+0x10>
    1bf4:	5f 3f       	cpi	r21, 0xFF	; 255
    1bf6:	71 f0       	breq	.+28     	; 0x1c14 <__fp_splitA+0x1a>
    1bf8:	47 95       	ror	r20

00001bfa <__fp_splitA>:
    1bfa:	88 0f       	add	r24, r24
    1bfc:	97 fb       	bst	r25, 7
    1bfe:	99 1f       	adc	r25, r25
    1c00:	61 f0       	breq	.+24     	; 0x1c1a <__fp_splitA+0x20>
    1c02:	9f 3f       	cpi	r25, 0xFF	; 255
    1c04:	79 f0       	breq	.+30     	; 0x1c24 <__fp_splitA+0x2a>
    1c06:	87 95       	ror	r24
    1c08:	08 95       	ret
    1c0a:	12 16       	cp	r1, r18
    1c0c:	13 06       	cpc	r1, r19
    1c0e:	14 06       	cpc	r1, r20
    1c10:	55 1f       	adc	r21, r21
    1c12:	f2 cf       	rjmp	.-28     	; 0x1bf8 <__fp_split3+0xe>
    1c14:	46 95       	lsr	r20
    1c16:	f1 df       	rcall	.-30     	; 0x1bfa <__fp_splitA>
    1c18:	08 c0       	rjmp	.+16     	; 0x1c2a <__fp_splitA+0x30>
    1c1a:	16 16       	cp	r1, r22
    1c1c:	17 06       	cpc	r1, r23
    1c1e:	18 06       	cpc	r1, r24
    1c20:	99 1f       	adc	r25, r25
    1c22:	f1 cf       	rjmp	.-30     	; 0x1c06 <__fp_splitA+0xc>
    1c24:	86 95       	lsr	r24
    1c26:	71 05       	cpc	r23, r1
    1c28:	61 05       	cpc	r22, r1
    1c2a:	08 94       	sec
    1c2c:	08 95       	ret

00001c2e <__fp_zero>:
    1c2e:	e8 94       	clt

00001c30 <__fp_szero>:
    1c30:	bb 27       	eor	r27, r27
    1c32:	66 27       	eor	r22, r22
    1c34:	77 27       	eor	r23, r23
    1c36:	cb 01       	movw	r24, r22
    1c38:	97 f9       	bld	r25, 7
    1c3a:	08 95       	ret

00001c3c <__gesf2>:
    1c3c:	65 df       	rcall	.-310    	; 0x1b08 <__fp_cmp>
    1c3e:	08 f4       	brcc	.+2      	; 0x1c42 <__gesf2+0x6>
    1c40:	8f ef       	ldi	r24, 0xFF	; 255
    1c42:	08 95       	ret

00001c44 <inverse>:
    1c44:	9b 01       	movw	r18, r22
    1c46:	ac 01       	movw	r20, r24
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	70 e0       	ldi	r23, 0x00	; 0
    1c4c:	80 e8       	ldi	r24, 0x80	; 128
    1c4e:	9f e3       	ldi	r25, 0x3F	; 63
    1c50:	85 ce       	rjmp	.-758    	; 0x195c <__divsf3>

00001c52 <__mulsf3>:
    1c52:	0b d0       	rcall	.+22     	; 0x1c6a <__mulsf3x>
    1c54:	b9 cf       	rjmp	.-142    	; 0x1bc8 <__fp_round>
    1c56:	aa df       	rcall	.-172    	; 0x1bac <__fp_pscA>
    1c58:	28 f0       	brcs	.+10     	; 0x1c64 <__mulsf3+0x12>
    1c5a:	af df       	rcall	.-162    	; 0x1bba <__fp_pscB>
    1c5c:	18 f0       	brcs	.+6      	; 0x1c64 <__mulsf3+0x12>
    1c5e:	95 23       	and	r25, r21
    1c60:	09 f0       	breq	.+2      	; 0x1c64 <__mulsf3+0x12>
    1c62:	76 cf       	rjmp	.-276    	; 0x1b50 <__fp_inf>
    1c64:	7b cf       	rjmp	.-266    	; 0x1b5c <__fp_nan>
    1c66:	11 24       	eor	r1, r1
    1c68:	e3 cf       	rjmp	.-58     	; 0x1c30 <__fp_szero>

00001c6a <__mulsf3x>:
    1c6a:	bf df       	rcall	.-130    	; 0x1bea <__fp_split3>
    1c6c:	a0 f3       	brcs	.-24     	; 0x1c56 <__mulsf3+0x4>

00001c6e <__mulsf3_pse>:
    1c6e:	95 9f       	mul	r25, r21
    1c70:	d1 f3       	breq	.-12     	; 0x1c66 <__mulsf3+0x14>
    1c72:	95 0f       	add	r25, r21
    1c74:	50 e0       	ldi	r21, 0x00	; 0
    1c76:	55 1f       	adc	r21, r21
    1c78:	62 9f       	mul	r22, r18
    1c7a:	f0 01       	movw	r30, r0
    1c7c:	72 9f       	mul	r23, r18
    1c7e:	bb 27       	eor	r27, r27
    1c80:	f0 0d       	add	r31, r0
    1c82:	b1 1d       	adc	r27, r1
    1c84:	63 9f       	mul	r22, r19
    1c86:	aa 27       	eor	r26, r26
    1c88:	f0 0d       	add	r31, r0
    1c8a:	b1 1d       	adc	r27, r1
    1c8c:	aa 1f       	adc	r26, r26
    1c8e:	64 9f       	mul	r22, r20
    1c90:	66 27       	eor	r22, r22
    1c92:	b0 0d       	add	r27, r0
    1c94:	a1 1d       	adc	r26, r1
    1c96:	66 1f       	adc	r22, r22
    1c98:	82 9f       	mul	r24, r18
    1c9a:	22 27       	eor	r18, r18
    1c9c:	b0 0d       	add	r27, r0
    1c9e:	a1 1d       	adc	r26, r1
    1ca0:	62 1f       	adc	r22, r18
    1ca2:	73 9f       	mul	r23, r19
    1ca4:	b0 0d       	add	r27, r0
    1ca6:	a1 1d       	adc	r26, r1
    1ca8:	62 1f       	adc	r22, r18
    1caa:	83 9f       	mul	r24, r19
    1cac:	a0 0d       	add	r26, r0
    1cae:	61 1d       	adc	r22, r1
    1cb0:	22 1f       	adc	r18, r18
    1cb2:	74 9f       	mul	r23, r20
    1cb4:	33 27       	eor	r19, r19
    1cb6:	a0 0d       	add	r26, r0
    1cb8:	61 1d       	adc	r22, r1
    1cba:	23 1f       	adc	r18, r19
    1cbc:	84 9f       	mul	r24, r20
    1cbe:	60 0d       	add	r22, r0
    1cc0:	21 1d       	adc	r18, r1
    1cc2:	82 2f       	mov	r24, r18
    1cc4:	76 2f       	mov	r23, r22
    1cc6:	6a 2f       	mov	r22, r26
    1cc8:	11 24       	eor	r1, r1
    1cca:	9f 57       	subi	r25, 0x7F	; 127
    1ccc:	50 40       	sbci	r21, 0x00	; 0
    1cce:	8a f0       	brmi	.+34     	; 0x1cf2 <__mulsf3_pse+0x84>
    1cd0:	e1 f0       	breq	.+56     	; 0x1d0a <__mulsf3_pse+0x9c>
    1cd2:	88 23       	and	r24, r24
    1cd4:	4a f0       	brmi	.+18     	; 0x1ce8 <__mulsf3_pse+0x7a>
    1cd6:	ee 0f       	add	r30, r30
    1cd8:	ff 1f       	adc	r31, r31
    1cda:	bb 1f       	adc	r27, r27
    1cdc:	66 1f       	adc	r22, r22
    1cde:	77 1f       	adc	r23, r23
    1ce0:	88 1f       	adc	r24, r24
    1ce2:	91 50       	subi	r25, 0x01	; 1
    1ce4:	50 40       	sbci	r21, 0x00	; 0
    1ce6:	a9 f7       	brne	.-22     	; 0x1cd2 <__mulsf3_pse+0x64>
    1ce8:	9e 3f       	cpi	r25, 0xFE	; 254
    1cea:	51 05       	cpc	r21, r1
    1cec:	70 f0       	brcs	.+28     	; 0x1d0a <__mulsf3_pse+0x9c>
    1cee:	30 cf       	rjmp	.-416    	; 0x1b50 <__fp_inf>
    1cf0:	9f cf       	rjmp	.-194    	; 0x1c30 <__fp_szero>
    1cf2:	5f 3f       	cpi	r21, 0xFF	; 255
    1cf4:	ec f3       	brlt	.-6      	; 0x1cf0 <__mulsf3_pse+0x82>
    1cf6:	98 3e       	cpi	r25, 0xE8	; 232
    1cf8:	dc f3       	brlt	.-10     	; 0x1cf0 <__mulsf3_pse+0x82>
    1cfa:	86 95       	lsr	r24
    1cfc:	77 95       	ror	r23
    1cfe:	67 95       	ror	r22
    1d00:	b7 95       	ror	r27
    1d02:	f7 95       	ror	r31
    1d04:	e7 95       	ror	r30
    1d06:	9f 5f       	subi	r25, 0xFF	; 255
    1d08:	c1 f7       	brne	.-16     	; 0x1cfa <__mulsf3_pse+0x8c>
    1d0a:	fe 2b       	or	r31, r30
    1d0c:	88 0f       	add	r24, r24
    1d0e:	91 1d       	adc	r25, r1
    1d10:	96 95       	lsr	r25
    1d12:	87 95       	ror	r24
    1d14:	97 f9       	bld	r25, 7
    1d16:	08 95       	ret
    1d18:	11 f4       	brne	.+4      	; 0x1d1e <__mulsf3_pse+0xb0>
    1d1a:	0e f4       	brtc	.+2      	; 0x1d1e <__mulsf3_pse+0xb0>
    1d1c:	1f cf       	rjmp	.-450    	; 0x1b5c <__fp_nan>
    1d1e:	41 c0       	rjmp	.+130    	; 0x1da2 <__fp_mpack>

00001d20 <sqrt>:
    1d20:	6c df       	rcall	.-296    	; 0x1bfa <__fp_splitA>
    1d22:	d0 f3       	brcs	.-12     	; 0x1d18 <__mulsf3_pse+0xaa>
    1d24:	99 23       	and	r25, r25
    1d26:	d9 f3       	breq	.-10     	; 0x1d1e <__mulsf3_pse+0xb0>
    1d28:	ce f3       	brts	.-14     	; 0x1d1c <__mulsf3_pse+0xae>
    1d2a:	9f 57       	subi	r25, 0x7F	; 127
    1d2c:	55 0b       	sbc	r21, r21
    1d2e:	87 ff       	sbrs	r24, 7
    1d30:	46 d0       	rcall	.+140    	; 0x1dbe <__fp_norm2>
    1d32:	00 24       	eor	r0, r0
    1d34:	a0 e6       	ldi	r26, 0x60	; 96
    1d36:	40 ea       	ldi	r20, 0xA0	; 160
    1d38:	90 01       	movw	r18, r0
    1d3a:	80 58       	subi	r24, 0x80	; 128
    1d3c:	56 95       	lsr	r21
    1d3e:	97 95       	ror	r25
    1d40:	28 f4       	brcc	.+10     	; 0x1d4c <sqrt+0x2c>
    1d42:	80 5c       	subi	r24, 0xC0	; 192
    1d44:	66 0f       	add	r22, r22
    1d46:	77 1f       	adc	r23, r23
    1d48:	88 1f       	adc	r24, r24
    1d4a:	20 f0       	brcs	.+8      	; 0x1d54 <sqrt+0x34>
    1d4c:	26 17       	cp	r18, r22
    1d4e:	37 07       	cpc	r19, r23
    1d50:	48 07       	cpc	r20, r24
    1d52:	30 f4       	brcc	.+12     	; 0x1d60 <sqrt+0x40>
    1d54:	62 1b       	sub	r22, r18
    1d56:	73 0b       	sbc	r23, r19
    1d58:	84 0b       	sbc	r24, r20
    1d5a:	20 29       	or	r18, r0
    1d5c:	31 29       	or	r19, r1
    1d5e:	4a 2b       	or	r20, r26
    1d60:	a6 95       	lsr	r26
    1d62:	17 94       	ror	r1
    1d64:	07 94       	ror	r0
    1d66:	20 25       	eor	r18, r0
    1d68:	31 25       	eor	r19, r1
    1d6a:	4a 27       	eor	r20, r26
    1d6c:	58 f7       	brcc	.-42     	; 0x1d44 <sqrt+0x24>
    1d6e:	66 0f       	add	r22, r22
    1d70:	77 1f       	adc	r23, r23
    1d72:	88 1f       	adc	r24, r24
    1d74:	20 f0       	brcs	.+8      	; 0x1d7e <sqrt+0x5e>
    1d76:	26 17       	cp	r18, r22
    1d78:	37 07       	cpc	r19, r23
    1d7a:	48 07       	cpc	r20, r24
    1d7c:	30 f4       	brcc	.+12     	; 0x1d8a <sqrt+0x6a>
    1d7e:	62 0b       	sbc	r22, r18
    1d80:	73 0b       	sbc	r23, r19
    1d82:	84 0b       	sbc	r24, r20
    1d84:	20 0d       	add	r18, r0
    1d86:	31 1d       	adc	r19, r1
    1d88:	41 1d       	adc	r20, r1
    1d8a:	a0 95       	com	r26
    1d8c:	81 f7       	brne	.-32     	; 0x1d6e <sqrt+0x4e>
    1d8e:	b9 01       	movw	r22, r18
    1d90:	84 2f       	mov	r24, r20
    1d92:	91 58       	subi	r25, 0x81	; 129
    1d94:	88 0f       	add	r24, r24
    1d96:	96 95       	lsr	r25
    1d98:	87 95       	ror	r24
    1d9a:	08 95       	ret

00001d9c <square>:
    1d9c:	9b 01       	movw	r18, r22
    1d9e:	ac 01       	movw	r20, r24
    1da0:	58 cf       	rjmp	.-336    	; 0x1c52 <__mulsf3>

00001da2 <__fp_mpack>:
    1da2:	9f 3f       	cpi	r25, 0xFF	; 255
    1da4:	31 f0       	breq	.+12     	; 0x1db2 <__fp_mpack_finite+0xc>

00001da6 <__fp_mpack_finite>:
    1da6:	91 50       	subi	r25, 0x01	; 1
    1da8:	20 f4       	brcc	.+8      	; 0x1db2 <__fp_mpack_finite+0xc>
    1daa:	87 95       	ror	r24
    1dac:	77 95       	ror	r23
    1dae:	67 95       	ror	r22
    1db0:	b7 95       	ror	r27
    1db2:	88 0f       	add	r24, r24
    1db4:	91 1d       	adc	r25, r1
    1db6:	96 95       	lsr	r25
    1db8:	87 95       	ror	r24
    1dba:	97 f9       	bld	r25, 7
    1dbc:	08 95       	ret

00001dbe <__fp_norm2>:
    1dbe:	91 50       	subi	r25, 0x01	; 1
    1dc0:	50 40       	sbci	r21, 0x00	; 0
    1dc2:	66 0f       	add	r22, r22
    1dc4:	77 1f       	adc	r23, r23
    1dc6:	88 1f       	adc	r24, r24
    1dc8:	d2 f7       	brpl	.-12     	; 0x1dbe <__fp_norm2>
    1dca:	08 95       	ret

00001dcc <vfprintf>:
    1dcc:	2f 92       	push	r2
    1dce:	3f 92       	push	r3
    1dd0:	4f 92       	push	r4
    1dd2:	5f 92       	push	r5
    1dd4:	6f 92       	push	r6
    1dd6:	7f 92       	push	r7
    1dd8:	8f 92       	push	r8
    1dda:	9f 92       	push	r9
    1ddc:	af 92       	push	r10
    1dde:	bf 92       	push	r11
    1de0:	cf 92       	push	r12
    1de2:	df 92       	push	r13
    1de4:	ef 92       	push	r14
    1de6:	ff 92       	push	r15
    1de8:	0f 93       	push	r16
    1dea:	1f 93       	push	r17
    1dec:	cf 93       	push	r28
    1dee:	df 93       	push	r29
    1df0:	cd b7       	in	r28, 0x3d	; 61
    1df2:	de b7       	in	r29, 0x3e	; 62
    1df4:	60 97       	sbiw	r28, 0x10	; 16
    1df6:	0f b6       	in	r0, 0x3f	; 63
    1df8:	f8 94       	cli
    1dfa:	de bf       	out	0x3e, r29	; 62
    1dfc:	0f be       	out	0x3f, r0	; 63
    1dfe:	cd bf       	out	0x3d, r28	; 61
    1e00:	7c 01       	movw	r14, r24
    1e02:	1b 01       	movw	r2, r22
    1e04:	6a 01       	movw	r12, r20
    1e06:	fc 01       	movw	r30, r24
    1e08:	17 82       	std	Z+7, r1	; 0x07
    1e0a:	16 82       	std	Z+6, r1	; 0x06
    1e0c:	83 81       	ldd	r24, Z+3	; 0x03
    1e0e:	81 ff       	sbrs	r24, 1
    1e10:	2a c3       	rjmp	.+1620   	; 0x2466 <__stack+0x267>
    1e12:	9e 01       	movw	r18, r28
    1e14:	2f 5f       	subi	r18, 0xFF	; 255
    1e16:	3f 4f       	sbci	r19, 0xFF	; 255
    1e18:	39 01       	movw	r6, r18
    1e1a:	f7 01       	movw	r30, r14
    1e1c:	93 81       	ldd	r25, Z+3	; 0x03
    1e1e:	f1 01       	movw	r30, r2
    1e20:	93 fd       	sbrc	r25, 3
    1e22:	85 91       	lpm	r24, Z+
    1e24:	93 ff       	sbrs	r25, 3
    1e26:	81 91       	ld	r24, Z+
    1e28:	1f 01       	movw	r2, r30
    1e2a:	88 23       	and	r24, r24
    1e2c:	09 f4       	brne	.+2      	; 0x1e30 <vfprintf+0x64>
    1e2e:	17 c3       	rjmp	.+1582   	; 0x245e <__stack+0x25f>
    1e30:	85 32       	cpi	r24, 0x25	; 37
    1e32:	39 f4       	brne	.+14     	; 0x1e42 <vfprintf+0x76>
    1e34:	93 fd       	sbrc	r25, 3
    1e36:	85 91       	lpm	r24, Z+
    1e38:	93 ff       	sbrs	r25, 3
    1e3a:	81 91       	ld	r24, Z+
    1e3c:	1f 01       	movw	r2, r30
    1e3e:	85 32       	cpi	r24, 0x25	; 37
    1e40:	31 f4       	brne	.+12     	; 0x1e4e <vfprintf+0x82>
    1e42:	b7 01       	movw	r22, r14
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	aa d4       	rcall	.+2388   	; 0x279c <fputc>
    1e48:	56 01       	movw	r10, r12
    1e4a:	65 01       	movw	r12, r10
    1e4c:	e6 cf       	rjmp	.-52     	; 0x1e1a <vfprintf+0x4e>
    1e4e:	10 e0       	ldi	r17, 0x00	; 0
    1e50:	51 2c       	mov	r5, r1
    1e52:	91 2c       	mov	r9, r1
    1e54:	ff e1       	ldi	r31, 0x1F	; 31
    1e56:	f9 15       	cp	r31, r9
    1e58:	d8 f0       	brcs	.+54     	; 0x1e90 <vfprintf+0xc4>
    1e5a:	8b 32       	cpi	r24, 0x2B	; 43
    1e5c:	79 f0       	breq	.+30     	; 0x1e7c <vfprintf+0xb0>
    1e5e:	38 f4       	brcc	.+14     	; 0x1e6e <vfprintf+0xa2>
    1e60:	80 32       	cpi	r24, 0x20	; 32
    1e62:	79 f0       	breq	.+30     	; 0x1e82 <vfprintf+0xb6>
    1e64:	83 32       	cpi	r24, 0x23	; 35
    1e66:	a1 f4       	brne	.+40     	; 0x1e90 <vfprintf+0xc4>
    1e68:	f9 2d       	mov	r31, r9
    1e6a:	f0 61       	ori	r31, 0x10	; 16
    1e6c:	2e c0       	rjmp	.+92     	; 0x1eca <vfprintf+0xfe>
    1e6e:	8d 32       	cpi	r24, 0x2D	; 45
    1e70:	61 f0       	breq	.+24     	; 0x1e8a <vfprintf+0xbe>
    1e72:	80 33       	cpi	r24, 0x30	; 48
    1e74:	69 f4       	brne	.+26     	; 0x1e90 <vfprintf+0xc4>
    1e76:	29 2d       	mov	r18, r9
    1e78:	21 60       	ori	r18, 0x01	; 1
    1e7a:	2d c0       	rjmp	.+90     	; 0x1ed6 <vfprintf+0x10a>
    1e7c:	39 2d       	mov	r19, r9
    1e7e:	32 60       	ori	r19, 0x02	; 2
    1e80:	93 2e       	mov	r9, r19
    1e82:	89 2d       	mov	r24, r9
    1e84:	84 60       	ori	r24, 0x04	; 4
    1e86:	98 2e       	mov	r9, r24
    1e88:	2a c0       	rjmp	.+84     	; 0x1ede <vfprintf+0x112>
    1e8a:	e9 2d       	mov	r30, r9
    1e8c:	e8 60       	ori	r30, 0x08	; 8
    1e8e:	15 c0       	rjmp	.+42     	; 0x1eba <vfprintf+0xee>
    1e90:	97 fc       	sbrc	r9, 7
    1e92:	2d c0       	rjmp	.+90     	; 0x1eee <vfprintf+0x122>
    1e94:	20 ed       	ldi	r18, 0xD0	; 208
    1e96:	28 0f       	add	r18, r24
    1e98:	2a 30       	cpi	r18, 0x0A	; 10
    1e9a:	88 f4       	brcc	.+34     	; 0x1ebe <vfprintf+0xf2>
    1e9c:	96 fe       	sbrs	r9, 6
    1e9e:	06 c0       	rjmp	.+12     	; 0x1eac <vfprintf+0xe0>
    1ea0:	3a e0       	ldi	r19, 0x0A	; 10
    1ea2:	13 9f       	mul	r17, r19
    1ea4:	20 0d       	add	r18, r0
    1ea6:	11 24       	eor	r1, r1
    1ea8:	12 2f       	mov	r17, r18
    1eaa:	19 c0       	rjmp	.+50     	; 0x1ede <vfprintf+0x112>
    1eac:	8a e0       	ldi	r24, 0x0A	; 10
    1eae:	58 9e       	mul	r5, r24
    1eb0:	20 0d       	add	r18, r0
    1eb2:	11 24       	eor	r1, r1
    1eb4:	52 2e       	mov	r5, r18
    1eb6:	e9 2d       	mov	r30, r9
    1eb8:	e0 62       	ori	r30, 0x20	; 32
    1eba:	9e 2e       	mov	r9, r30
    1ebc:	10 c0       	rjmp	.+32     	; 0x1ede <vfprintf+0x112>
    1ebe:	8e 32       	cpi	r24, 0x2E	; 46
    1ec0:	31 f4       	brne	.+12     	; 0x1ece <vfprintf+0x102>
    1ec2:	96 fc       	sbrc	r9, 6
    1ec4:	cc c2       	rjmp	.+1432   	; 0x245e <__stack+0x25f>
    1ec6:	f9 2d       	mov	r31, r9
    1ec8:	f0 64       	ori	r31, 0x40	; 64
    1eca:	9f 2e       	mov	r9, r31
    1ecc:	08 c0       	rjmp	.+16     	; 0x1ede <vfprintf+0x112>
    1ece:	8c 36       	cpi	r24, 0x6C	; 108
    1ed0:	21 f4       	brne	.+8      	; 0x1eda <vfprintf+0x10e>
    1ed2:	29 2d       	mov	r18, r9
    1ed4:	20 68       	ori	r18, 0x80	; 128
    1ed6:	92 2e       	mov	r9, r18
    1ed8:	02 c0       	rjmp	.+4      	; 0x1ede <vfprintf+0x112>
    1eda:	88 36       	cpi	r24, 0x68	; 104
    1edc:	41 f4       	brne	.+16     	; 0x1eee <vfprintf+0x122>
    1ede:	f1 01       	movw	r30, r2
    1ee0:	93 fd       	sbrc	r25, 3
    1ee2:	85 91       	lpm	r24, Z+
    1ee4:	93 ff       	sbrs	r25, 3
    1ee6:	81 91       	ld	r24, Z+
    1ee8:	1f 01       	movw	r2, r30
    1eea:	81 11       	cpse	r24, r1
    1eec:	b3 cf       	rjmp	.-154    	; 0x1e54 <vfprintf+0x88>
    1eee:	9b eb       	ldi	r25, 0xBB	; 187
    1ef0:	98 0f       	add	r25, r24
    1ef2:	93 30       	cpi	r25, 0x03	; 3
    1ef4:	20 f4       	brcc	.+8      	; 0x1efe <vfprintf+0x132>
    1ef6:	99 2d       	mov	r25, r9
    1ef8:	90 61       	ori	r25, 0x10	; 16
    1efa:	80 5e       	subi	r24, 0xE0	; 224
    1efc:	07 c0       	rjmp	.+14     	; 0x1f0c <vfprintf+0x140>
    1efe:	9b e9       	ldi	r25, 0x9B	; 155
    1f00:	98 0f       	add	r25, r24
    1f02:	93 30       	cpi	r25, 0x03	; 3
    1f04:	08 f0       	brcs	.+2      	; 0x1f08 <vfprintf+0x13c>
    1f06:	59 c1       	rjmp	.+690    	; 0x21ba <vfprintf+0x3ee>
    1f08:	99 2d       	mov	r25, r9
    1f0a:	9f 7e       	andi	r25, 0xEF	; 239
    1f0c:	96 ff       	sbrs	r25, 6
    1f0e:	16 e0       	ldi	r17, 0x06	; 6
    1f10:	9f 73       	andi	r25, 0x3F	; 63
    1f12:	99 2e       	mov	r9, r25
    1f14:	85 36       	cpi	r24, 0x65	; 101
    1f16:	19 f4       	brne	.+6      	; 0x1f1e <vfprintf+0x152>
    1f18:	90 64       	ori	r25, 0x40	; 64
    1f1a:	99 2e       	mov	r9, r25
    1f1c:	08 c0       	rjmp	.+16     	; 0x1f2e <vfprintf+0x162>
    1f1e:	86 36       	cpi	r24, 0x66	; 102
    1f20:	21 f4       	brne	.+8      	; 0x1f2a <vfprintf+0x15e>
    1f22:	39 2f       	mov	r19, r25
    1f24:	30 68       	ori	r19, 0x80	; 128
    1f26:	93 2e       	mov	r9, r19
    1f28:	02 c0       	rjmp	.+4      	; 0x1f2e <vfprintf+0x162>
    1f2a:	11 11       	cpse	r17, r1
    1f2c:	11 50       	subi	r17, 0x01	; 1
    1f2e:	97 fe       	sbrs	r9, 7
    1f30:	07 c0       	rjmp	.+14     	; 0x1f40 <vfprintf+0x174>
    1f32:	1c 33       	cpi	r17, 0x3C	; 60
    1f34:	50 f4       	brcc	.+20     	; 0x1f4a <vfprintf+0x17e>
    1f36:	44 24       	eor	r4, r4
    1f38:	43 94       	inc	r4
    1f3a:	41 0e       	add	r4, r17
    1f3c:	27 e0       	ldi	r18, 0x07	; 7
    1f3e:	0b c0       	rjmp	.+22     	; 0x1f56 <vfprintf+0x18a>
    1f40:	18 30       	cpi	r17, 0x08	; 8
    1f42:	38 f0       	brcs	.+14     	; 0x1f52 <vfprintf+0x186>
    1f44:	27 e0       	ldi	r18, 0x07	; 7
    1f46:	17 e0       	ldi	r17, 0x07	; 7
    1f48:	05 c0       	rjmp	.+10     	; 0x1f54 <vfprintf+0x188>
    1f4a:	27 e0       	ldi	r18, 0x07	; 7
    1f4c:	9c e3       	ldi	r25, 0x3C	; 60
    1f4e:	49 2e       	mov	r4, r25
    1f50:	02 c0       	rjmp	.+4      	; 0x1f56 <vfprintf+0x18a>
    1f52:	21 2f       	mov	r18, r17
    1f54:	41 2c       	mov	r4, r1
    1f56:	56 01       	movw	r10, r12
    1f58:	84 e0       	ldi	r24, 0x04	; 4
    1f5a:	a8 0e       	add	r10, r24
    1f5c:	b1 1c       	adc	r11, r1
    1f5e:	f6 01       	movw	r30, r12
    1f60:	60 81       	ld	r22, Z
    1f62:	71 81       	ldd	r23, Z+1	; 0x01
    1f64:	82 81       	ldd	r24, Z+2	; 0x02
    1f66:	93 81       	ldd	r25, Z+3	; 0x03
    1f68:	04 2d       	mov	r16, r4
    1f6a:	a3 01       	movw	r20, r6
    1f6c:	df d2       	rcall	.+1470   	; 0x252c <__ftoa_engine>
    1f6e:	6c 01       	movw	r12, r24
    1f70:	f9 81       	ldd	r31, Y+1	; 0x01
    1f72:	fc 87       	std	Y+12, r31	; 0x0c
    1f74:	f0 ff       	sbrs	r31, 0
    1f76:	02 c0       	rjmp	.+4      	; 0x1f7c <vfprintf+0x1b0>
    1f78:	f3 ff       	sbrs	r31, 3
    1f7a:	06 c0       	rjmp	.+12     	; 0x1f88 <vfprintf+0x1bc>
    1f7c:	91 fc       	sbrc	r9, 1
    1f7e:	06 c0       	rjmp	.+12     	; 0x1f8c <vfprintf+0x1c0>
    1f80:	92 fe       	sbrs	r9, 2
    1f82:	06 c0       	rjmp	.+12     	; 0x1f90 <vfprintf+0x1c4>
    1f84:	00 e2       	ldi	r16, 0x20	; 32
    1f86:	05 c0       	rjmp	.+10     	; 0x1f92 <vfprintf+0x1c6>
    1f88:	0d e2       	ldi	r16, 0x2D	; 45
    1f8a:	03 c0       	rjmp	.+6      	; 0x1f92 <vfprintf+0x1c6>
    1f8c:	0b e2       	ldi	r16, 0x2B	; 43
    1f8e:	01 c0       	rjmp	.+2      	; 0x1f92 <vfprintf+0x1c6>
    1f90:	00 e0       	ldi	r16, 0x00	; 0
    1f92:	8c 85       	ldd	r24, Y+12	; 0x0c
    1f94:	8c 70       	andi	r24, 0x0C	; 12
    1f96:	19 f0       	breq	.+6      	; 0x1f9e <vfprintf+0x1d2>
    1f98:	01 11       	cpse	r16, r1
    1f9a:	43 c2       	rjmp	.+1158   	; 0x2422 <__stack+0x223>
    1f9c:	80 c2       	rjmp	.+1280   	; 0x249e <__stack+0x29f>
    1f9e:	97 fe       	sbrs	r9, 7
    1fa0:	10 c0       	rjmp	.+32     	; 0x1fc2 <vfprintf+0x1f6>
    1fa2:	4c 0c       	add	r4, r12
    1fa4:	fc 85       	ldd	r31, Y+12	; 0x0c
    1fa6:	f4 ff       	sbrs	r31, 4
    1fa8:	04 c0       	rjmp	.+8      	; 0x1fb2 <vfprintf+0x1e6>
    1faa:	8a 81       	ldd	r24, Y+2	; 0x02
    1fac:	81 33       	cpi	r24, 0x31	; 49
    1fae:	09 f4       	brne	.+2      	; 0x1fb2 <vfprintf+0x1e6>
    1fb0:	4a 94       	dec	r4
    1fb2:	14 14       	cp	r1, r4
    1fb4:	74 f5       	brge	.+92     	; 0x2012 <vfprintf+0x246>
    1fb6:	28 e0       	ldi	r18, 0x08	; 8
    1fb8:	24 15       	cp	r18, r4
    1fba:	78 f5       	brcc	.+94     	; 0x201a <vfprintf+0x24e>
    1fbc:	88 e0       	ldi	r24, 0x08	; 8
    1fbe:	48 2e       	mov	r4, r24
    1fc0:	2c c0       	rjmp	.+88     	; 0x201a <vfprintf+0x24e>
    1fc2:	96 fc       	sbrc	r9, 6
    1fc4:	2a c0       	rjmp	.+84     	; 0x201a <vfprintf+0x24e>
    1fc6:	81 2f       	mov	r24, r17
    1fc8:	90 e0       	ldi	r25, 0x00	; 0
    1fca:	8c 15       	cp	r24, r12
    1fcc:	9d 05       	cpc	r25, r13
    1fce:	9c f0       	brlt	.+38     	; 0x1ff6 <vfprintf+0x22a>
    1fd0:	3c ef       	ldi	r19, 0xFC	; 252
    1fd2:	c3 16       	cp	r12, r19
    1fd4:	3f ef       	ldi	r19, 0xFF	; 255
    1fd6:	d3 06       	cpc	r13, r19
    1fd8:	74 f0       	brlt	.+28     	; 0x1ff6 <vfprintf+0x22a>
    1fda:	89 2d       	mov	r24, r9
    1fdc:	80 68       	ori	r24, 0x80	; 128
    1fde:	98 2e       	mov	r9, r24
    1fe0:	0a c0       	rjmp	.+20     	; 0x1ff6 <vfprintf+0x22a>
    1fe2:	e2 e0       	ldi	r30, 0x02	; 2
    1fe4:	f0 e0       	ldi	r31, 0x00	; 0
    1fe6:	ec 0f       	add	r30, r28
    1fe8:	fd 1f       	adc	r31, r29
    1fea:	e1 0f       	add	r30, r17
    1fec:	f1 1d       	adc	r31, r1
    1fee:	80 81       	ld	r24, Z
    1ff0:	80 33       	cpi	r24, 0x30	; 48
    1ff2:	19 f4       	brne	.+6      	; 0x1ffa <vfprintf+0x22e>
    1ff4:	11 50       	subi	r17, 0x01	; 1
    1ff6:	11 11       	cpse	r17, r1
    1ff8:	f4 cf       	rjmp	.-24     	; 0x1fe2 <vfprintf+0x216>
    1ffa:	97 fe       	sbrs	r9, 7
    1ffc:	0e c0       	rjmp	.+28     	; 0x201a <vfprintf+0x24e>
    1ffe:	44 24       	eor	r4, r4
    2000:	43 94       	inc	r4
    2002:	41 0e       	add	r4, r17
    2004:	81 2f       	mov	r24, r17
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	c8 16       	cp	r12, r24
    200a:	d9 06       	cpc	r13, r25
    200c:	2c f4       	brge	.+10     	; 0x2018 <vfprintf+0x24c>
    200e:	1c 19       	sub	r17, r12
    2010:	04 c0       	rjmp	.+8      	; 0x201a <vfprintf+0x24e>
    2012:	44 24       	eor	r4, r4
    2014:	43 94       	inc	r4
    2016:	01 c0       	rjmp	.+2      	; 0x201a <vfprintf+0x24e>
    2018:	10 e0       	ldi	r17, 0x00	; 0
    201a:	97 fe       	sbrs	r9, 7
    201c:	06 c0       	rjmp	.+12     	; 0x202a <vfprintf+0x25e>
    201e:	1c 14       	cp	r1, r12
    2020:	1d 04       	cpc	r1, r13
    2022:	34 f4       	brge	.+12     	; 0x2030 <vfprintf+0x264>
    2024:	c6 01       	movw	r24, r12
    2026:	01 96       	adiw	r24, 0x01	; 1
    2028:	05 c0       	rjmp	.+10     	; 0x2034 <vfprintf+0x268>
    202a:	85 e0       	ldi	r24, 0x05	; 5
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	02 c0       	rjmp	.+4      	; 0x2034 <vfprintf+0x268>
    2030:	81 e0       	ldi	r24, 0x01	; 1
    2032:	90 e0       	ldi	r25, 0x00	; 0
    2034:	01 11       	cpse	r16, r1
    2036:	01 96       	adiw	r24, 0x01	; 1
    2038:	11 23       	and	r17, r17
    203a:	31 f0       	breq	.+12     	; 0x2048 <vfprintf+0x27c>
    203c:	21 2f       	mov	r18, r17
    203e:	30 e0       	ldi	r19, 0x00	; 0
    2040:	2f 5f       	subi	r18, 0xFF	; 255
    2042:	3f 4f       	sbci	r19, 0xFF	; 255
    2044:	82 0f       	add	r24, r18
    2046:	93 1f       	adc	r25, r19
    2048:	25 2d       	mov	r18, r5
    204a:	30 e0       	ldi	r19, 0x00	; 0
    204c:	82 17       	cp	r24, r18
    204e:	93 07       	cpc	r25, r19
    2050:	14 f4       	brge	.+4      	; 0x2056 <vfprintf+0x28a>
    2052:	58 1a       	sub	r5, r24
    2054:	01 c0       	rjmp	.+2      	; 0x2058 <vfprintf+0x28c>
    2056:	51 2c       	mov	r5, r1
    2058:	89 2d       	mov	r24, r9
    205a:	89 70       	andi	r24, 0x09	; 9
    205c:	41 f4       	brne	.+16     	; 0x206e <vfprintf+0x2a2>
    205e:	55 20       	and	r5, r5
    2060:	31 f0       	breq	.+12     	; 0x206e <vfprintf+0x2a2>
    2062:	b7 01       	movw	r22, r14
    2064:	80 e2       	ldi	r24, 0x20	; 32
    2066:	90 e0       	ldi	r25, 0x00	; 0
    2068:	99 d3       	rcall	.+1842   	; 0x279c <fputc>
    206a:	5a 94       	dec	r5
    206c:	f8 cf       	rjmp	.-16     	; 0x205e <vfprintf+0x292>
    206e:	00 23       	and	r16, r16
    2070:	21 f0       	breq	.+8      	; 0x207a <vfprintf+0x2ae>
    2072:	b7 01       	movw	r22, r14
    2074:	80 2f       	mov	r24, r16
    2076:	90 e0       	ldi	r25, 0x00	; 0
    2078:	91 d3       	rcall	.+1826   	; 0x279c <fputc>
    207a:	93 fc       	sbrc	r9, 3
    207c:	08 c0       	rjmp	.+16     	; 0x208e <vfprintf+0x2c2>
    207e:	55 20       	and	r5, r5
    2080:	31 f0       	breq	.+12     	; 0x208e <vfprintf+0x2c2>
    2082:	b7 01       	movw	r22, r14
    2084:	80 e3       	ldi	r24, 0x30	; 48
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	89 d3       	rcall	.+1810   	; 0x279c <fputc>
    208a:	5a 94       	dec	r5
    208c:	f8 cf       	rjmp	.-16     	; 0x207e <vfprintf+0x2b2>
    208e:	97 fe       	sbrs	r9, 7
    2090:	4a c0       	rjmp	.+148    	; 0x2126 <vfprintf+0x35a>
    2092:	46 01       	movw	r8, r12
    2094:	d7 fe       	sbrs	r13, 7
    2096:	02 c0       	rjmp	.+4      	; 0x209c <vfprintf+0x2d0>
    2098:	81 2c       	mov	r8, r1
    209a:	91 2c       	mov	r9, r1
    209c:	c6 01       	movw	r24, r12
    209e:	88 19       	sub	r24, r8
    20a0:	99 09       	sbc	r25, r9
    20a2:	f3 01       	movw	r30, r6
    20a4:	e8 0f       	add	r30, r24
    20a6:	f9 1f       	adc	r31, r25
    20a8:	fe 87       	std	Y+14, r31	; 0x0e
    20aa:	ed 87       	std	Y+13, r30	; 0x0d
    20ac:	96 01       	movw	r18, r12
    20ae:	24 19       	sub	r18, r4
    20b0:	31 09       	sbc	r19, r1
    20b2:	38 8b       	std	Y+16, r19	; 0x10
    20b4:	2f 87       	std	Y+15, r18	; 0x0f
    20b6:	01 2f       	mov	r16, r17
    20b8:	10 e0       	ldi	r17, 0x00	; 0
    20ba:	11 95       	neg	r17
    20bc:	01 95       	neg	r16
    20be:	11 09       	sbc	r17, r1
    20c0:	3f ef       	ldi	r19, 0xFF	; 255
    20c2:	83 16       	cp	r8, r19
    20c4:	93 06       	cpc	r9, r19
    20c6:	21 f4       	brne	.+8      	; 0x20d0 <vfprintf+0x304>
    20c8:	b7 01       	movw	r22, r14
    20ca:	8e e2       	ldi	r24, 0x2E	; 46
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	66 d3       	rcall	.+1740   	; 0x279c <fputc>
    20d0:	c8 14       	cp	r12, r8
    20d2:	d9 04       	cpc	r13, r9
    20d4:	4c f0       	brlt	.+18     	; 0x20e8 <vfprintf+0x31c>
    20d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    20d8:	98 89       	ldd	r25, Y+16	; 0x10
    20da:	88 15       	cp	r24, r8
    20dc:	99 05       	cpc	r25, r9
    20de:	24 f4       	brge	.+8      	; 0x20e8 <vfprintf+0x31c>
    20e0:	ed 85       	ldd	r30, Y+13	; 0x0d
    20e2:	fe 85       	ldd	r31, Y+14	; 0x0e
    20e4:	81 81       	ldd	r24, Z+1	; 0x01
    20e6:	01 c0       	rjmp	.+2      	; 0x20ea <vfprintf+0x31e>
    20e8:	80 e3       	ldi	r24, 0x30	; 48
    20ea:	f1 e0       	ldi	r31, 0x01	; 1
    20ec:	8f 1a       	sub	r8, r31
    20ee:	91 08       	sbc	r9, r1
    20f0:	2d 85       	ldd	r18, Y+13	; 0x0d
    20f2:	3e 85       	ldd	r19, Y+14	; 0x0e
    20f4:	2f 5f       	subi	r18, 0xFF	; 255
    20f6:	3f 4f       	sbci	r19, 0xFF	; 255
    20f8:	3e 87       	std	Y+14, r19	; 0x0e
    20fa:	2d 87       	std	Y+13, r18	; 0x0d
    20fc:	80 16       	cp	r8, r16
    20fe:	91 06       	cpc	r9, r17
    2100:	24 f0       	brlt	.+8      	; 0x210a <vfprintf+0x33e>
    2102:	b7 01       	movw	r22, r14
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	4a d3       	rcall	.+1684   	; 0x279c <fputc>
    2108:	db cf       	rjmp	.-74     	; 0x20c0 <vfprintf+0x2f4>
    210a:	c8 14       	cp	r12, r8
    210c:	d9 04       	cpc	r13, r9
    210e:	41 f4       	brne	.+16     	; 0x2120 <vfprintf+0x354>
    2110:	9a 81       	ldd	r25, Y+2	; 0x02
    2112:	96 33       	cpi	r25, 0x36	; 54
    2114:	20 f4       	brcc	.+8      	; 0x211e <vfprintf+0x352>
    2116:	95 33       	cpi	r25, 0x35	; 53
    2118:	19 f4       	brne	.+6      	; 0x2120 <vfprintf+0x354>
    211a:	3c 85       	ldd	r19, Y+12	; 0x0c
    211c:	34 ff       	sbrs	r19, 4
    211e:	81 e3       	ldi	r24, 0x31	; 49
    2120:	b7 01       	movw	r22, r14
    2122:	90 e0       	ldi	r25, 0x00	; 0
    2124:	48 c0       	rjmp	.+144    	; 0x21b6 <vfprintf+0x3ea>
    2126:	8a 81       	ldd	r24, Y+2	; 0x02
    2128:	81 33       	cpi	r24, 0x31	; 49
    212a:	19 f0       	breq	.+6      	; 0x2132 <vfprintf+0x366>
    212c:	9c 85       	ldd	r25, Y+12	; 0x0c
    212e:	9f 7e       	andi	r25, 0xEF	; 239
    2130:	9c 87       	std	Y+12, r25	; 0x0c
    2132:	b7 01       	movw	r22, r14
    2134:	90 e0       	ldi	r25, 0x00	; 0
    2136:	32 d3       	rcall	.+1636   	; 0x279c <fputc>
    2138:	11 11       	cpse	r17, r1
    213a:	05 c0       	rjmp	.+10     	; 0x2146 <vfprintf+0x37a>
    213c:	94 fc       	sbrc	r9, 4
    213e:	16 c0       	rjmp	.+44     	; 0x216c <vfprintf+0x3a0>
    2140:	85 e6       	ldi	r24, 0x65	; 101
    2142:	90 e0       	ldi	r25, 0x00	; 0
    2144:	15 c0       	rjmp	.+42     	; 0x2170 <vfprintf+0x3a4>
    2146:	b7 01       	movw	r22, r14
    2148:	8e e2       	ldi	r24, 0x2E	; 46
    214a:	90 e0       	ldi	r25, 0x00	; 0
    214c:	27 d3       	rcall	.+1614   	; 0x279c <fputc>
    214e:	1e 5f       	subi	r17, 0xFE	; 254
    2150:	82 e0       	ldi	r24, 0x02	; 2
    2152:	01 e0       	ldi	r16, 0x01	; 1
    2154:	08 0f       	add	r16, r24
    2156:	f3 01       	movw	r30, r6
    2158:	e8 0f       	add	r30, r24
    215a:	f1 1d       	adc	r31, r1
    215c:	80 81       	ld	r24, Z
    215e:	b7 01       	movw	r22, r14
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	1c d3       	rcall	.+1592   	; 0x279c <fputc>
    2164:	80 2f       	mov	r24, r16
    2166:	01 13       	cpse	r16, r17
    2168:	f4 cf       	rjmp	.-24     	; 0x2152 <vfprintf+0x386>
    216a:	e8 cf       	rjmp	.-48     	; 0x213c <vfprintf+0x370>
    216c:	85 e4       	ldi	r24, 0x45	; 69
    216e:	90 e0       	ldi	r25, 0x00	; 0
    2170:	b7 01       	movw	r22, r14
    2172:	14 d3       	rcall	.+1576   	; 0x279c <fputc>
    2174:	d7 fc       	sbrc	r13, 7
    2176:	06 c0       	rjmp	.+12     	; 0x2184 <vfprintf+0x3b8>
    2178:	c1 14       	cp	r12, r1
    217a:	d1 04       	cpc	r13, r1
    217c:	41 f4       	brne	.+16     	; 0x218e <vfprintf+0x3c2>
    217e:	ec 85       	ldd	r30, Y+12	; 0x0c
    2180:	e4 ff       	sbrs	r30, 4
    2182:	05 c0       	rjmp	.+10     	; 0x218e <vfprintf+0x3c2>
    2184:	d1 94       	neg	r13
    2186:	c1 94       	neg	r12
    2188:	d1 08       	sbc	r13, r1
    218a:	8d e2       	ldi	r24, 0x2D	; 45
    218c:	01 c0       	rjmp	.+2      	; 0x2190 <vfprintf+0x3c4>
    218e:	8b e2       	ldi	r24, 0x2B	; 43
    2190:	b7 01       	movw	r22, r14
    2192:	90 e0       	ldi	r25, 0x00	; 0
    2194:	03 d3       	rcall	.+1542   	; 0x279c <fputc>
    2196:	80 e3       	ldi	r24, 0x30	; 48
    2198:	2a e0       	ldi	r18, 0x0A	; 10
    219a:	c2 16       	cp	r12, r18
    219c:	d1 04       	cpc	r13, r1
    219e:	2c f0       	brlt	.+10     	; 0x21aa <vfprintf+0x3de>
    21a0:	8f 5f       	subi	r24, 0xFF	; 255
    21a2:	fa e0       	ldi	r31, 0x0A	; 10
    21a4:	cf 1a       	sub	r12, r31
    21a6:	d1 08       	sbc	r13, r1
    21a8:	f7 cf       	rjmp	.-18     	; 0x2198 <vfprintf+0x3cc>
    21aa:	b7 01       	movw	r22, r14
    21ac:	90 e0       	ldi	r25, 0x00	; 0
    21ae:	f6 d2       	rcall	.+1516   	; 0x279c <fputc>
    21b0:	b7 01       	movw	r22, r14
    21b2:	c6 01       	movw	r24, r12
    21b4:	c0 96       	adiw	r24, 0x30	; 48
    21b6:	f2 d2       	rcall	.+1508   	; 0x279c <fputc>
    21b8:	49 c1       	rjmp	.+658    	; 0x244c <__stack+0x24d>
    21ba:	83 36       	cpi	r24, 0x63	; 99
    21bc:	31 f0       	breq	.+12     	; 0x21ca <vfprintf+0x3fe>
    21be:	83 37       	cpi	r24, 0x73	; 115
    21c0:	79 f0       	breq	.+30     	; 0x21e0 <vfprintf+0x414>
    21c2:	83 35       	cpi	r24, 0x53	; 83
    21c4:	09 f0       	breq	.+2      	; 0x21c8 <vfprintf+0x3fc>
    21c6:	52 c0       	rjmp	.+164    	; 0x226c <__stack+0x6d>
    21c8:	1f c0       	rjmp	.+62     	; 0x2208 <__stack+0x9>
    21ca:	56 01       	movw	r10, r12
    21cc:	32 e0       	ldi	r19, 0x02	; 2
    21ce:	a3 0e       	add	r10, r19
    21d0:	b1 1c       	adc	r11, r1
    21d2:	f6 01       	movw	r30, r12
    21d4:	80 81       	ld	r24, Z
    21d6:	89 83       	std	Y+1, r24	; 0x01
    21d8:	01 e0       	ldi	r16, 0x01	; 1
    21da:	10 e0       	ldi	r17, 0x00	; 0
    21dc:	63 01       	movw	r12, r6
    21de:	11 c0       	rjmp	.+34     	; 0x2202 <__stack+0x3>
    21e0:	56 01       	movw	r10, r12
    21e2:	f2 e0       	ldi	r31, 0x02	; 2
    21e4:	af 0e       	add	r10, r31
    21e6:	b1 1c       	adc	r11, r1
    21e8:	f6 01       	movw	r30, r12
    21ea:	c0 80       	ld	r12, Z
    21ec:	d1 80       	ldd	r13, Z+1	; 0x01
    21ee:	96 fe       	sbrs	r9, 6
    21f0:	03 c0       	rjmp	.+6      	; 0x21f8 <vfprintf+0x42c>
    21f2:	61 2f       	mov	r22, r17
    21f4:	70 e0       	ldi	r23, 0x00	; 0
    21f6:	02 c0       	rjmp	.+4      	; 0x21fc <vfprintf+0x430>
    21f8:	6f ef       	ldi	r22, 0xFF	; 255
    21fa:	7f ef       	ldi	r23, 0xFF	; 255
    21fc:	c6 01       	movw	r24, r12
    21fe:	79 d2       	rcall	.+1266   	; 0x26f2 <strnlen>
    2200:	8c 01       	movw	r16, r24
    2202:	f9 2d       	mov	r31, r9
    2204:	ff 77       	andi	r31, 0x7F	; 127
    2206:	13 c0       	rjmp	.+38     	; 0x222e <__stack+0x2f>
    2208:	56 01       	movw	r10, r12
    220a:	22 e0       	ldi	r18, 0x02	; 2
    220c:	a2 0e       	add	r10, r18
    220e:	b1 1c       	adc	r11, r1
    2210:	f6 01       	movw	r30, r12
    2212:	c0 80       	ld	r12, Z
    2214:	d1 80       	ldd	r13, Z+1	; 0x01
    2216:	96 fe       	sbrs	r9, 6
    2218:	03 c0       	rjmp	.+6      	; 0x2220 <__stack+0x21>
    221a:	61 2f       	mov	r22, r17
    221c:	70 e0       	ldi	r23, 0x00	; 0
    221e:	02 c0       	rjmp	.+4      	; 0x2224 <__stack+0x25>
    2220:	6f ef       	ldi	r22, 0xFF	; 255
    2222:	7f ef       	ldi	r23, 0xFF	; 255
    2224:	c6 01       	movw	r24, r12
    2226:	5a d2       	rcall	.+1204   	; 0x26dc <strnlen_P>
    2228:	8c 01       	movw	r16, r24
    222a:	f9 2d       	mov	r31, r9
    222c:	f0 68       	ori	r31, 0x80	; 128
    222e:	9f 2e       	mov	r9, r31
    2230:	f3 fd       	sbrc	r31, 3
    2232:	18 c0       	rjmp	.+48     	; 0x2264 <__stack+0x65>
    2234:	85 2d       	mov	r24, r5
    2236:	90 e0       	ldi	r25, 0x00	; 0
    2238:	08 17       	cp	r16, r24
    223a:	19 07       	cpc	r17, r25
    223c:	98 f4       	brcc	.+38     	; 0x2264 <__stack+0x65>
    223e:	b7 01       	movw	r22, r14
    2240:	80 e2       	ldi	r24, 0x20	; 32
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	ab d2       	rcall	.+1366   	; 0x279c <fputc>
    2246:	5a 94       	dec	r5
    2248:	f5 cf       	rjmp	.-22     	; 0x2234 <__stack+0x35>
    224a:	f6 01       	movw	r30, r12
    224c:	97 fc       	sbrc	r9, 7
    224e:	85 91       	lpm	r24, Z+
    2250:	97 fe       	sbrs	r9, 7
    2252:	81 91       	ld	r24, Z+
    2254:	6f 01       	movw	r12, r30
    2256:	b7 01       	movw	r22, r14
    2258:	90 e0       	ldi	r25, 0x00	; 0
    225a:	a0 d2       	rcall	.+1344   	; 0x279c <fputc>
    225c:	51 10       	cpse	r5, r1
    225e:	5a 94       	dec	r5
    2260:	01 50       	subi	r16, 0x01	; 1
    2262:	11 09       	sbc	r17, r1
    2264:	01 15       	cp	r16, r1
    2266:	11 05       	cpc	r17, r1
    2268:	81 f7       	brne	.-32     	; 0x224a <__stack+0x4b>
    226a:	f0 c0       	rjmp	.+480    	; 0x244c <__stack+0x24d>
    226c:	84 36       	cpi	r24, 0x64	; 100
    226e:	11 f0       	breq	.+4      	; 0x2274 <__stack+0x75>
    2270:	89 36       	cpi	r24, 0x69	; 105
    2272:	59 f5       	brne	.+86     	; 0x22ca <__stack+0xcb>
    2274:	56 01       	movw	r10, r12
    2276:	97 fe       	sbrs	r9, 7
    2278:	09 c0       	rjmp	.+18     	; 0x228c <__stack+0x8d>
    227a:	24 e0       	ldi	r18, 0x04	; 4
    227c:	a2 0e       	add	r10, r18
    227e:	b1 1c       	adc	r11, r1
    2280:	f6 01       	movw	r30, r12
    2282:	60 81       	ld	r22, Z
    2284:	71 81       	ldd	r23, Z+1	; 0x01
    2286:	82 81       	ldd	r24, Z+2	; 0x02
    2288:	93 81       	ldd	r25, Z+3	; 0x03
    228a:	0a c0       	rjmp	.+20     	; 0x22a0 <__stack+0xa1>
    228c:	f2 e0       	ldi	r31, 0x02	; 2
    228e:	af 0e       	add	r10, r31
    2290:	b1 1c       	adc	r11, r1
    2292:	f6 01       	movw	r30, r12
    2294:	60 81       	ld	r22, Z
    2296:	71 81       	ldd	r23, Z+1	; 0x01
    2298:	07 2e       	mov	r0, r23
    229a:	00 0c       	add	r0, r0
    229c:	88 0b       	sbc	r24, r24
    229e:	99 0b       	sbc	r25, r25
    22a0:	f9 2d       	mov	r31, r9
    22a2:	ff 76       	andi	r31, 0x6F	; 111
    22a4:	9f 2e       	mov	r9, r31
    22a6:	97 ff       	sbrs	r25, 7
    22a8:	09 c0       	rjmp	.+18     	; 0x22bc <__stack+0xbd>
    22aa:	90 95       	com	r25
    22ac:	80 95       	com	r24
    22ae:	70 95       	com	r23
    22b0:	61 95       	neg	r22
    22b2:	7f 4f       	sbci	r23, 0xFF	; 255
    22b4:	8f 4f       	sbci	r24, 0xFF	; 255
    22b6:	9f 4f       	sbci	r25, 0xFF	; 255
    22b8:	f0 68       	ori	r31, 0x80	; 128
    22ba:	9f 2e       	mov	r9, r31
    22bc:	2a e0       	ldi	r18, 0x0A	; 10
    22be:	30 e0       	ldi	r19, 0x00	; 0
    22c0:	a3 01       	movw	r20, r6
    22c2:	ee d2       	rcall	.+1500   	; 0x28a0 <__ultoa_invert>
    22c4:	c8 2e       	mov	r12, r24
    22c6:	c6 18       	sub	r12, r6
    22c8:	3e c0       	rjmp	.+124    	; 0x2346 <__stack+0x147>
    22ca:	09 2d       	mov	r16, r9
    22cc:	85 37       	cpi	r24, 0x75	; 117
    22ce:	21 f4       	brne	.+8      	; 0x22d8 <__stack+0xd9>
    22d0:	0f 7e       	andi	r16, 0xEF	; 239
    22d2:	2a e0       	ldi	r18, 0x0A	; 10
    22d4:	30 e0       	ldi	r19, 0x00	; 0
    22d6:	1d c0       	rjmp	.+58     	; 0x2312 <__stack+0x113>
    22d8:	09 7f       	andi	r16, 0xF9	; 249
    22da:	8f 36       	cpi	r24, 0x6F	; 111
    22dc:	91 f0       	breq	.+36     	; 0x2302 <__stack+0x103>
    22de:	18 f4       	brcc	.+6      	; 0x22e6 <__stack+0xe7>
    22e0:	88 35       	cpi	r24, 0x58	; 88
    22e2:	59 f0       	breq	.+22     	; 0x22fa <__stack+0xfb>
    22e4:	bc c0       	rjmp	.+376    	; 0x245e <__stack+0x25f>
    22e6:	80 37       	cpi	r24, 0x70	; 112
    22e8:	19 f0       	breq	.+6      	; 0x22f0 <__stack+0xf1>
    22ea:	88 37       	cpi	r24, 0x78	; 120
    22ec:	11 f0       	breq	.+4      	; 0x22f2 <__stack+0xf3>
    22ee:	b7 c0       	rjmp	.+366    	; 0x245e <__stack+0x25f>
    22f0:	00 61       	ori	r16, 0x10	; 16
    22f2:	04 ff       	sbrs	r16, 4
    22f4:	09 c0       	rjmp	.+18     	; 0x2308 <__stack+0x109>
    22f6:	04 60       	ori	r16, 0x04	; 4
    22f8:	07 c0       	rjmp	.+14     	; 0x2308 <__stack+0x109>
    22fa:	94 fe       	sbrs	r9, 4
    22fc:	08 c0       	rjmp	.+16     	; 0x230e <__stack+0x10f>
    22fe:	06 60       	ori	r16, 0x06	; 6
    2300:	06 c0       	rjmp	.+12     	; 0x230e <__stack+0x10f>
    2302:	28 e0       	ldi	r18, 0x08	; 8
    2304:	30 e0       	ldi	r19, 0x00	; 0
    2306:	05 c0       	rjmp	.+10     	; 0x2312 <__stack+0x113>
    2308:	20 e1       	ldi	r18, 0x10	; 16
    230a:	30 e0       	ldi	r19, 0x00	; 0
    230c:	02 c0       	rjmp	.+4      	; 0x2312 <__stack+0x113>
    230e:	20 e1       	ldi	r18, 0x10	; 16
    2310:	32 e0       	ldi	r19, 0x02	; 2
    2312:	56 01       	movw	r10, r12
    2314:	07 ff       	sbrs	r16, 7
    2316:	09 c0       	rjmp	.+18     	; 0x232a <__stack+0x12b>
    2318:	84 e0       	ldi	r24, 0x04	; 4
    231a:	a8 0e       	add	r10, r24
    231c:	b1 1c       	adc	r11, r1
    231e:	f6 01       	movw	r30, r12
    2320:	60 81       	ld	r22, Z
    2322:	71 81       	ldd	r23, Z+1	; 0x01
    2324:	82 81       	ldd	r24, Z+2	; 0x02
    2326:	93 81       	ldd	r25, Z+3	; 0x03
    2328:	08 c0       	rjmp	.+16     	; 0x233a <__stack+0x13b>
    232a:	f2 e0       	ldi	r31, 0x02	; 2
    232c:	af 0e       	add	r10, r31
    232e:	b1 1c       	adc	r11, r1
    2330:	f6 01       	movw	r30, r12
    2332:	60 81       	ld	r22, Z
    2334:	71 81       	ldd	r23, Z+1	; 0x01
    2336:	80 e0       	ldi	r24, 0x00	; 0
    2338:	90 e0       	ldi	r25, 0x00	; 0
    233a:	a3 01       	movw	r20, r6
    233c:	b1 d2       	rcall	.+1378   	; 0x28a0 <__ultoa_invert>
    233e:	c8 2e       	mov	r12, r24
    2340:	c6 18       	sub	r12, r6
    2342:	0f 77       	andi	r16, 0x7F	; 127
    2344:	90 2e       	mov	r9, r16
    2346:	96 fe       	sbrs	r9, 6
    2348:	0b c0       	rjmp	.+22     	; 0x2360 <__stack+0x161>
    234a:	09 2d       	mov	r16, r9
    234c:	0e 7f       	andi	r16, 0xFE	; 254
    234e:	c1 16       	cp	r12, r17
    2350:	50 f4       	brcc	.+20     	; 0x2366 <__stack+0x167>
    2352:	94 fe       	sbrs	r9, 4
    2354:	0a c0       	rjmp	.+20     	; 0x236a <__stack+0x16b>
    2356:	92 fc       	sbrc	r9, 2
    2358:	08 c0       	rjmp	.+16     	; 0x236a <__stack+0x16b>
    235a:	09 2d       	mov	r16, r9
    235c:	0e 7e       	andi	r16, 0xEE	; 238
    235e:	05 c0       	rjmp	.+10     	; 0x236a <__stack+0x16b>
    2360:	dc 2c       	mov	r13, r12
    2362:	09 2d       	mov	r16, r9
    2364:	03 c0       	rjmp	.+6      	; 0x236c <__stack+0x16d>
    2366:	dc 2c       	mov	r13, r12
    2368:	01 c0       	rjmp	.+2      	; 0x236c <__stack+0x16d>
    236a:	d1 2e       	mov	r13, r17
    236c:	04 ff       	sbrs	r16, 4
    236e:	0d c0       	rjmp	.+26     	; 0x238a <__stack+0x18b>
    2370:	fe 01       	movw	r30, r28
    2372:	ec 0d       	add	r30, r12
    2374:	f1 1d       	adc	r31, r1
    2376:	80 81       	ld	r24, Z
    2378:	80 33       	cpi	r24, 0x30	; 48
    237a:	11 f4       	brne	.+4      	; 0x2380 <__stack+0x181>
    237c:	09 7e       	andi	r16, 0xE9	; 233
    237e:	09 c0       	rjmp	.+18     	; 0x2392 <__stack+0x193>
    2380:	02 ff       	sbrs	r16, 2
    2382:	06 c0       	rjmp	.+12     	; 0x2390 <__stack+0x191>
    2384:	d3 94       	inc	r13
    2386:	d3 94       	inc	r13
    2388:	04 c0       	rjmp	.+8      	; 0x2392 <__stack+0x193>
    238a:	80 2f       	mov	r24, r16
    238c:	86 78       	andi	r24, 0x86	; 134
    238e:	09 f0       	breq	.+2      	; 0x2392 <__stack+0x193>
    2390:	d3 94       	inc	r13
    2392:	03 fd       	sbrc	r16, 3
    2394:	10 c0       	rjmp	.+32     	; 0x23b6 <__stack+0x1b7>
    2396:	00 ff       	sbrs	r16, 0
    2398:	06 c0       	rjmp	.+12     	; 0x23a6 <__stack+0x1a7>
    239a:	1c 2d       	mov	r17, r12
    239c:	d5 14       	cp	r13, r5
    239e:	78 f4       	brcc	.+30     	; 0x23be <__stack+0x1bf>
    23a0:	15 0d       	add	r17, r5
    23a2:	1d 19       	sub	r17, r13
    23a4:	0c c0       	rjmp	.+24     	; 0x23be <__stack+0x1bf>
    23a6:	d5 14       	cp	r13, r5
    23a8:	50 f4       	brcc	.+20     	; 0x23be <__stack+0x1bf>
    23aa:	b7 01       	movw	r22, r14
    23ac:	80 e2       	ldi	r24, 0x20	; 32
    23ae:	90 e0       	ldi	r25, 0x00	; 0
    23b0:	f5 d1       	rcall	.+1002   	; 0x279c <fputc>
    23b2:	d3 94       	inc	r13
    23b4:	f8 cf       	rjmp	.-16     	; 0x23a6 <__stack+0x1a7>
    23b6:	d5 14       	cp	r13, r5
    23b8:	10 f4       	brcc	.+4      	; 0x23be <__stack+0x1bf>
    23ba:	5d 18       	sub	r5, r13
    23bc:	01 c0       	rjmp	.+2      	; 0x23c0 <__stack+0x1c1>
    23be:	51 2c       	mov	r5, r1
    23c0:	04 ff       	sbrs	r16, 4
    23c2:	0f c0       	rjmp	.+30     	; 0x23e2 <__stack+0x1e3>
    23c4:	b7 01       	movw	r22, r14
    23c6:	80 e3       	ldi	r24, 0x30	; 48
    23c8:	90 e0       	ldi	r25, 0x00	; 0
    23ca:	e8 d1       	rcall	.+976    	; 0x279c <fputc>
    23cc:	02 ff       	sbrs	r16, 2
    23ce:	16 c0       	rjmp	.+44     	; 0x23fc <__stack+0x1fd>
    23d0:	01 fd       	sbrc	r16, 1
    23d2:	03 c0       	rjmp	.+6      	; 0x23da <__stack+0x1db>
    23d4:	88 e7       	ldi	r24, 0x78	; 120
    23d6:	90 e0       	ldi	r25, 0x00	; 0
    23d8:	02 c0       	rjmp	.+4      	; 0x23de <__stack+0x1df>
    23da:	88 e5       	ldi	r24, 0x58	; 88
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	b7 01       	movw	r22, r14
    23e0:	0c c0       	rjmp	.+24     	; 0x23fa <__stack+0x1fb>
    23e2:	80 2f       	mov	r24, r16
    23e4:	86 78       	andi	r24, 0x86	; 134
    23e6:	51 f0       	breq	.+20     	; 0x23fc <__stack+0x1fd>
    23e8:	01 ff       	sbrs	r16, 1
    23ea:	02 c0       	rjmp	.+4      	; 0x23f0 <__stack+0x1f1>
    23ec:	8b e2       	ldi	r24, 0x2B	; 43
    23ee:	01 c0       	rjmp	.+2      	; 0x23f2 <__stack+0x1f3>
    23f0:	80 e2       	ldi	r24, 0x20	; 32
    23f2:	07 fd       	sbrc	r16, 7
    23f4:	8d e2       	ldi	r24, 0x2D	; 45
    23f6:	b7 01       	movw	r22, r14
    23f8:	90 e0       	ldi	r25, 0x00	; 0
    23fa:	d0 d1       	rcall	.+928    	; 0x279c <fputc>
    23fc:	c1 16       	cp	r12, r17
    23fe:	30 f4       	brcc	.+12     	; 0x240c <__stack+0x20d>
    2400:	b7 01       	movw	r22, r14
    2402:	80 e3       	ldi	r24, 0x30	; 48
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	ca d1       	rcall	.+916    	; 0x279c <fputc>
    2408:	11 50       	subi	r17, 0x01	; 1
    240a:	f8 cf       	rjmp	.-16     	; 0x23fc <__stack+0x1fd>
    240c:	ca 94       	dec	r12
    240e:	f3 01       	movw	r30, r6
    2410:	ec 0d       	add	r30, r12
    2412:	f1 1d       	adc	r31, r1
    2414:	80 81       	ld	r24, Z
    2416:	b7 01       	movw	r22, r14
    2418:	90 e0       	ldi	r25, 0x00	; 0
    241a:	c0 d1       	rcall	.+896    	; 0x279c <fputc>
    241c:	c1 10       	cpse	r12, r1
    241e:	f6 cf       	rjmp	.-20     	; 0x240c <__stack+0x20d>
    2420:	15 c0       	rjmp	.+42     	; 0x244c <__stack+0x24d>
    2422:	f4 e0       	ldi	r31, 0x04	; 4
    2424:	f5 15       	cp	r31, r5
    2426:	50 f5       	brcc	.+84     	; 0x247c <__stack+0x27d>
    2428:	84 e0       	ldi	r24, 0x04	; 4
    242a:	58 1a       	sub	r5, r24
    242c:	93 fe       	sbrs	r9, 3
    242e:	1e c0       	rjmp	.+60     	; 0x246c <__stack+0x26d>
    2430:	01 11       	cpse	r16, r1
    2432:	25 c0       	rjmp	.+74     	; 0x247e <__stack+0x27f>
    2434:	2c 85       	ldd	r18, Y+12	; 0x0c
    2436:	23 ff       	sbrs	r18, 3
    2438:	27 c0       	rjmp	.+78     	; 0x2488 <__stack+0x289>
    243a:	02 e1       	ldi	r16, 0x12	; 18
    243c:	11 e0       	ldi	r17, 0x01	; 1
    243e:	39 2d       	mov	r19, r9
    2440:	30 71       	andi	r19, 0x10	; 16
    2442:	93 2e       	mov	r9, r19
    2444:	f8 01       	movw	r30, r16
    2446:	84 91       	lpm	r24, Z
    2448:	81 11       	cpse	r24, r1
    244a:	21 c0       	rjmp	.+66     	; 0x248e <__stack+0x28f>
    244c:	55 20       	and	r5, r5
    244e:	09 f4       	brne	.+2      	; 0x2452 <__stack+0x253>
    2450:	fc cc       	rjmp	.-1544   	; 0x1e4a <vfprintf+0x7e>
    2452:	b7 01       	movw	r22, r14
    2454:	80 e2       	ldi	r24, 0x20	; 32
    2456:	90 e0       	ldi	r25, 0x00	; 0
    2458:	a1 d1       	rcall	.+834    	; 0x279c <fputc>
    245a:	5a 94       	dec	r5
    245c:	f7 cf       	rjmp	.-18     	; 0x244c <__stack+0x24d>
    245e:	f7 01       	movw	r30, r14
    2460:	86 81       	ldd	r24, Z+6	; 0x06
    2462:	97 81       	ldd	r25, Z+7	; 0x07
    2464:	23 c0       	rjmp	.+70     	; 0x24ac <__stack+0x2ad>
    2466:	8f ef       	ldi	r24, 0xFF	; 255
    2468:	9f ef       	ldi	r25, 0xFF	; 255
    246a:	20 c0       	rjmp	.+64     	; 0x24ac <__stack+0x2ad>
    246c:	b7 01       	movw	r22, r14
    246e:	80 e2       	ldi	r24, 0x20	; 32
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	94 d1       	rcall	.+808    	; 0x279c <fputc>
    2474:	5a 94       	dec	r5
    2476:	51 10       	cpse	r5, r1
    2478:	f9 cf       	rjmp	.-14     	; 0x246c <__stack+0x26d>
    247a:	da cf       	rjmp	.-76     	; 0x2430 <__stack+0x231>
    247c:	51 2c       	mov	r5, r1
    247e:	b7 01       	movw	r22, r14
    2480:	80 2f       	mov	r24, r16
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	8b d1       	rcall	.+790    	; 0x279c <fputc>
    2486:	d6 cf       	rjmp	.-84     	; 0x2434 <__stack+0x235>
    2488:	06 e1       	ldi	r16, 0x16	; 22
    248a:	11 e0       	ldi	r17, 0x01	; 1
    248c:	d8 cf       	rjmp	.-80     	; 0x243e <__stack+0x23f>
    248e:	91 10       	cpse	r9, r1
    2490:	80 52       	subi	r24, 0x20	; 32
    2492:	b7 01       	movw	r22, r14
    2494:	90 e0       	ldi	r25, 0x00	; 0
    2496:	82 d1       	rcall	.+772    	; 0x279c <fputc>
    2498:	0f 5f       	subi	r16, 0xFF	; 255
    249a:	1f 4f       	sbci	r17, 0xFF	; 255
    249c:	d3 cf       	rjmp	.-90     	; 0x2444 <__stack+0x245>
    249e:	23 e0       	ldi	r18, 0x03	; 3
    24a0:	25 15       	cp	r18, r5
    24a2:	10 f4       	brcc	.+4      	; 0x24a8 <__stack+0x2a9>
    24a4:	83 e0       	ldi	r24, 0x03	; 3
    24a6:	c1 cf       	rjmp	.-126    	; 0x242a <__stack+0x22b>
    24a8:	51 2c       	mov	r5, r1
    24aa:	c4 cf       	rjmp	.-120    	; 0x2434 <__stack+0x235>
    24ac:	60 96       	adiw	r28, 0x10	; 16
    24ae:	0f b6       	in	r0, 0x3f	; 63
    24b0:	f8 94       	cli
    24b2:	de bf       	out	0x3e, r29	; 62
    24b4:	0f be       	out	0x3f, r0	; 63
    24b6:	cd bf       	out	0x3d, r28	; 61
    24b8:	df 91       	pop	r29
    24ba:	cf 91       	pop	r28
    24bc:	1f 91       	pop	r17
    24be:	0f 91       	pop	r16
    24c0:	ff 90       	pop	r15
    24c2:	ef 90       	pop	r14
    24c4:	df 90       	pop	r13
    24c6:	cf 90       	pop	r12
    24c8:	bf 90       	pop	r11
    24ca:	af 90       	pop	r10
    24cc:	9f 90       	pop	r9
    24ce:	8f 90       	pop	r8
    24d0:	7f 90       	pop	r7
    24d2:	6f 90       	pop	r6
    24d4:	5f 90       	pop	r5
    24d6:	4f 90       	pop	r4
    24d8:	3f 90       	pop	r3
    24da:	2f 90       	pop	r2
    24dc:	08 95       	ret

000024de <__divmodhi4>:
    24de:	97 fb       	bst	r25, 7
    24e0:	07 2e       	mov	r0, r23
    24e2:	16 f4       	brtc	.+4      	; 0x24e8 <__divmodhi4+0xa>
    24e4:	00 94       	com	r0
    24e6:	06 d0       	rcall	.+12     	; 0x24f4 <__divmodhi4_neg1>
    24e8:	77 fd       	sbrc	r23, 7
    24ea:	08 d0       	rcall	.+16     	; 0x24fc <__divmodhi4_neg2>
    24ec:	0b d0       	rcall	.+22     	; 0x2504 <__udivmodhi4>
    24ee:	07 fc       	sbrc	r0, 7
    24f0:	05 d0       	rcall	.+10     	; 0x24fc <__divmodhi4_neg2>
    24f2:	3e f4       	brtc	.+14     	; 0x2502 <__divmodhi4_exit>

000024f4 <__divmodhi4_neg1>:
    24f4:	90 95       	com	r25
    24f6:	81 95       	neg	r24
    24f8:	9f 4f       	sbci	r25, 0xFF	; 255
    24fa:	08 95       	ret

000024fc <__divmodhi4_neg2>:
    24fc:	70 95       	com	r23
    24fe:	61 95       	neg	r22
    2500:	7f 4f       	sbci	r23, 0xFF	; 255

00002502 <__divmodhi4_exit>:
    2502:	08 95       	ret

00002504 <__udivmodhi4>:
    2504:	aa 1b       	sub	r26, r26
    2506:	bb 1b       	sub	r27, r27
    2508:	51 e1       	ldi	r21, 0x11	; 17
    250a:	07 c0       	rjmp	.+14     	; 0x251a <__udivmodhi4_ep>

0000250c <__udivmodhi4_loop>:
    250c:	aa 1f       	adc	r26, r26
    250e:	bb 1f       	adc	r27, r27
    2510:	a6 17       	cp	r26, r22
    2512:	b7 07       	cpc	r27, r23
    2514:	10 f0       	brcs	.+4      	; 0x251a <__udivmodhi4_ep>
    2516:	a6 1b       	sub	r26, r22
    2518:	b7 0b       	sbc	r27, r23

0000251a <__udivmodhi4_ep>:
    251a:	88 1f       	adc	r24, r24
    251c:	99 1f       	adc	r25, r25
    251e:	5a 95       	dec	r21
    2520:	a9 f7       	brne	.-22     	; 0x250c <__udivmodhi4_loop>
    2522:	80 95       	com	r24
    2524:	90 95       	com	r25
    2526:	bc 01       	movw	r22, r24
    2528:	cd 01       	movw	r24, r26
    252a:	08 95       	ret

0000252c <__ftoa_engine>:
    252c:	28 30       	cpi	r18, 0x08	; 8
    252e:	08 f0       	brcs	.+2      	; 0x2532 <__ftoa_engine+0x6>
    2530:	27 e0       	ldi	r18, 0x07	; 7
    2532:	33 27       	eor	r19, r19
    2534:	da 01       	movw	r26, r20
    2536:	99 0f       	add	r25, r25
    2538:	31 1d       	adc	r19, r1
    253a:	87 fd       	sbrc	r24, 7
    253c:	91 60       	ori	r25, 0x01	; 1
    253e:	00 96       	adiw	r24, 0x00	; 0
    2540:	61 05       	cpc	r22, r1
    2542:	71 05       	cpc	r23, r1
    2544:	39 f4       	brne	.+14     	; 0x2554 <__ftoa_engine+0x28>
    2546:	32 60       	ori	r19, 0x02	; 2
    2548:	2e 5f       	subi	r18, 0xFE	; 254
    254a:	3d 93       	st	X+, r19
    254c:	30 e3       	ldi	r19, 0x30	; 48
    254e:	2a 95       	dec	r18
    2550:	e1 f7       	brne	.-8      	; 0x254a <__ftoa_engine+0x1e>
    2552:	08 95       	ret
    2554:	9f 3f       	cpi	r25, 0xFF	; 255
    2556:	30 f0       	brcs	.+12     	; 0x2564 <__ftoa_engine+0x38>
    2558:	80 38       	cpi	r24, 0x80	; 128
    255a:	71 05       	cpc	r23, r1
    255c:	61 05       	cpc	r22, r1
    255e:	09 f0       	breq	.+2      	; 0x2562 <__ftoa_engine+0x36>
    2560:	3c 5f       	subi	r19, 0xFC	; 252
    2562:	3c 5f       	subi	r19, 0xFC	; 252
    2564:	3d 93       	st	X+, r19
    2566:	91 30       	cpi	r25, 0x01	; 1
    2568:	08 f0       	brcs	.+2      	; 0x256c <__ftoa_engine+0x40>
    256a:	80 68       	ori	r24, 0x80	; 128
    256c:	91 1d       	adc	r25, r1
    256e:	df 93       	push	r29
    2570:	cf 93       	push	r28
    2572:	1f 93       	push	r17
    2574:	0f 93       	push	r16
    2576:	ff 92       	push	r15
    2578:	ef 92       	push	r14
    257a:	19 2f       	mov	r17, r25
    257c:	98 7f       	andi	r25, 0xF8	; 248
    257e:	96 95       	lsr	r25
    2580:	e9 2f       	mov	r30, r25
    2582:	96 95       	lsr	r25
    2584:	96 95       	lsr	r25
    2586:	e9 0f       	add	r30, r25
    2588:	ff 27       	eor	r31, r31
    258a:	ec 58       	subi	r30, 0x8C	; 140
    258c:	fe 4f       	sbci	r31, 0xFE	; 254
    258e:	99 27       	eor	r25, r25
    2590:	33 27       	eor	r19, r19
    2592:	ee 24       	eor	r14, r14
    2594:	ff 24       	eor	r15, r15
    2596:	a7 01       	movw	r20, r14
    2598:	e7 01       	movw	r28, r14
    259a:	05 90       	lpm	r0, Z+
    259c:	08 94       	sec
    259e:	07 94       	ror	r0
    25a0:	28 f4       	brcc	.+10     	; 0x25ac <__ftoa_engine+0x80>
    25a2:	36 0f       	add	r19, r22
    25a4:	e7 1e       	adc	r14, r23
    25a6:	f8 1e       	adc	r15, r24
    25a8:	49 1f       	adc	r20, r25
    25aa:	51 1d       	adc	r21, r1
    25ac:	66 0f       	add	r22, r22
    25ae:	77 1f       	adc	r23, r23
    25b0:	88 1f       	adc	r24, r24
    25b2:	99 1f       	adc	r25, r25
    25b4:	06 94       	lsr	r0
    25b6:	a1 f7       	brne	.-24     	; 0x25a0 <__ftoa_engine+0x74>
    25b8:	05 90       	lpm	r0, Z+
    25ba:	07 94       	ror	r0
    25bc:	28 f4       	brcc	.+10     	; 0x25c8 <__ftoa_engine+0x9c>
    25be:	e7 0e       	add	r14, r23
    25c0:	f8 1e       	adc	r15, r24
    25c2:	49 1f       	adc	r20, r25
    25c4:	56 1f       	adc	r21, r22
    25c6:	c1 1d       	adc	r28, r1
    25c8:	77 0f       	add	r23, r23
    25ca:	88 1f       	adc	r24, r24
    25cc:	99 1f       	adc	r25, r25
    25ce:	66 1f       	adc	r22, r22
    25d0:	06 94       	lsr	r0
    25d2:	a1 f7       	brne	.-24     	; 0x25bc <__ftoa_engine+0x90>
    25d4:	05 90       	lpm	r0, Z+
    25d6:	07 94       	ror	r0
    25d8:	28 f4       	brcc	.+10     	; 0x25e4 <__ftoa_engine+0xb8>
    25da:	f8 0e       	add	r15, r24
    25dc:	49 1f       	adc	r20, r25
    25de:	56 1f       	adc	r21, r22
    25e0:	c7 1f       	adc	r28, r23
    25e2:	d1 1d       	adc	r29, r1
    25e4:	88 0f       	add	r24, r24
    25e6:	99 1f       	adc	r25, r25
    25e8:	66 1f       	adc	r22, r22
    25ea:	77 1f       	adc	r23, r23
    25ec:	06 94       	lsr	r0
    25ee:	a1 f7       	brne	.-24     	; 0x25d8 <__ftoa_engine+0xac>
    25f0:	05 90       	lpm	r0, Z+
    25f2:	07 94       	ror	r0
    25f4:	20 f4       	brcc	.+8      	; 0x25fe <__ftoa_engine+0xd2>
    25f6:	49 0f       	add	r20, r25
    25f8:	56 1f       	adc	r21, r22
    25fa:	c7 1f       	adc	r28, r23
    25fc:	d8 1f       	adc	r29, r24
    25fe:	99 0f       	add	r25, r25
    2600:	66 1f       	adc	r22, r22
    2602:	77 1f       	adc	r23, r23
    2604:	88 1f       	adc	r24, r24
    2606:	06 94       	lsr	r0
    2608:	a9 f7       	brne	.-22     	; 0x25f4 <__ftoa_engine+0xc8>
    260a:	84 91       	lpm	r24, Z
    260c:	10 95       	com	r17
    260e:	17 70       	andi	r17, 0x07	; 7
    2610:	41 f0       	breq	.+16     	; 0x2622 <__ftoa_engine+0xf6>
    2612:	d6 95       	lsr	r29
    2614:	c7 95       	ror	r28
    2616:	57 95       	ror	r21
    2618:	47 95       	ror	r20
    261a:	f7 94       	ror	r15
    261c:	e7 94       	ror	r14
    261e:	1a 95       	dec	r17
    2620:	c1 f7       	brne	.-16     	; 0x2612 <__ftoa_engine+0xe6>
    2622:	ea e1       	ldi	r30, 0x1A	; 26
    2624:	f1 e0       	ldi	r31, 0x01	; 1
    2626:	68 94       	set
    2628:	15 90       	lpm	r1, Z+
    262a:	15 91       	lpm	r17, Z+
    262c:	35 91       	lpm	r19, Z+
    262e:	65 91       	lpm	r22, Z+
    2630:	95 91       	lpm	r25, Z+
    2632:	05 90       	lpm	r0, Z+
    2634:	7f e2       	ldi	r23, 0x2F	; 47
    2636:	73 95       	inc	r23
    2638:	e1 18       	sub	r14, r1
    263a:	f1 0a       	sbc	r15, r17
    263c:	43 0b       	sbc	r20, r19
    263e:	56 0b       	sbc	r21, r22
    2640:	c9 0b       	sbc	r28, r25
    2642:	d0 09       	sbc	r29, r0
    2644:	c0 f7       	brcc	.-16     	; 0x2636 <__ftoa_engine+0x10a>
    2646:	e1 0c       	add	r14, r1
    2648:	f1 1e       	adc	r15, r17
    264a:	43 1f       	adc	r20, r19
    264c:	56 1f       	adc	r21, r22
    264e:	c9 1f       	adc	r28, r25
    2650:	d0 1d       	adc	r29, r0
    2652:	7e f4       	brtc	.+30     	; 0x2672 <__ftoa_engine+0x146>
    2654:	70 33       	cpi	r23, 0x30	; 48
    2656:	11 f4       	brne	.+4      	; 0x265c <__ftoa_engine+0x130>
    2658:	8a 95       	dec	r24
    265a:	e6 cf       	rjmp	.-52     	; 0x2628 <__ftoa_engine+0xfc>
    265c:	e8 94       	clt
    265e:	01 50       	subi	r16, 0x01	; 1
    2660:	30 f0       	brcs	.+12     	; 0x266e <__ftoa_engine+0x142>
    2662:	08 0f       	add	r16, r24
    2664:	0a f4       	brpl	.+2      	; 0x2668 <__ftoa_engine+0x13c>
    2666:	00 27       	eor	r16, r16
    2668:	02 17       	cp	r16, r18
    266a:	08 f4       	brcc	.+2      	; 0x266e <__ftoa_engine+0x142>
    266c:	20 2f       	mov	r18, r16
    266e:	23 95       	inc	r18
    2670:	02 2f       	mov	r16, r18
    2672:	7a 33       	cpi	r23, 0x3A	; 58
    2674:	28 f0       	brcs	.+10     	; 0x2680 <__ftoa_engine+0x154>
    2676:	79 e3       	ldi	r23, 0x39	; 57
    2678:	7d 93       	st	X+, r23
    267a:	2a 95       	dec	r18
    267c:	e9 f7       	brne	.-6      	; 0x2678 <__ftoa_engine+0x14c>
    267e:	10 c0       	rjmp	.+32     	; 0x26a0 <__ftoa_engine+0x174>
    2680:	7d 93       	st	X+, r23
    2682:	2a 95       	dec	r18
    2684:	89 f6       	brne	.-94     	; 0x2628 <__ftoa_engine+0xfc>
    2686:	06 94       	lsr	r0
    2688:	97 95       	ror	r25
    268a:	67 95       	ror	r22
    268c:	37 95       	ror	r19
    268e:	17 95       	ror	r17
    2690:	17 94       	ror	r1
    2692:	e1 18       	sub	r14, r1
    2694:	f1 0a       	sbc	r15, r17
    2696:	43 0b       	sbc	r20, r19
    2698:	56 0b       	sbc	r21, r22
    269a:	c9 0b       	sbc	r28, r25
    269c:	d0 09       	sbc	r29, r0
    269e:	98 f0       	brcs	.+38     	; 0x26c6 <__ftoa_engine+0x19a>
    26a0:	23 95       	inc	r18
    26a2:	7e 91       	ld	r23, -X
    26a4:	73 95       	inc	r23
    26a6:	7a 33       	cpi	r23, 0x3A	; 58
    26a8:	08 f0       	brcs	.+2      	; 0x26ac <__ftoa_engine+0x180>
    26aa:	70 e3       	ldi	r23, 0x30	; 48
    26ac:	7c 93       	st	X, r23
    26ae:	20 13       	cpse	r18, r16
    26b0:	b8 f7       	brcc	.-18     	; 0x26a0 <__ftoa_engine+0x174>
    26b2:	7e 91       	ld	r23, -X
    26b4:	70 61       	ori	r23, 0x10	; 16
    26b6:	7d 93       	st	X+, r23
    26b8:	30 f0       	brcs	.+12     	; 0x26c6 <__ftoa_engine+0x19a>
    26ba:	83 95       	inc	r24
    26bc:	71 e3       	ldi	r23, 0x31	; 49
    26be:	7d 93       	st	X+, r23
    26c0:	70 e3       	ldi	r23, 0x30	; 48
    26c2:	2a 95       	dec	r18
    26c4:	e1 f7       	brne	.-8      	; 0x26be <__ftoa_engine+0x192>
    26c6:	11 24       	eor	r1, r1
    26c8:	ef 90       	pop	r14
    26ca:	ff 90       	pop	r15
    26cc:	0f 91       	pop	r16
    26ce:	1f 91       	pop	r17
    26d0:	cf 91       	pop	r28
    26d2:	df 91       	pop	r29
    26d4:	99 27       	eor	r25, r25
    26d6:	87 fd       	sbrc	r24, 7
    26d8:	90 95       	com	r25
    26da:	08 95       	ret

000026dc <strnlen_P>:
    26dc:	fc 01       	movw	r30, r24
    26de:	05 90       	lpm	r0, Z+
    26e0:	61 50       	subi	r22, 0x01	; 1
    26e2:	70 40       	sbci	r23, 0x00	; 0
    26e4:	01 10       	cpse	r0, r1
    26e6:	d8 f7       	brcc	.-10     	; 0x26de <strnlen_P+0x2>
    26e8:	80 95       	com	r24
    26ea:	90 95       	com	r25
    26ec:	8e 0f       	add	r24, r30
    26ee:	9f 1f       	adc	r25, r31
    26f0:	08 95       	ret

000026f2 <strnlen>:
    26f2:	fc 01       	movw	r30, r24
    26f4:	61 50       	subi	r22, 0x01	; 1
    26f6:	70 40       	sbci	r23, 0x00	; 0
    26f8:	01 90       	ld	r0, Z+
    26fa:	01 10       	cpse	r0, r1
    26fc:	d8 f7       	brcc	.-10     	; 0x26f4 <strnlen+0x2>
    26fe:	80 95       	com	r24
    2700:	90 95       	com	r25
    2702:	8e 0f       	add	r24, r30
    2704:	9f 1f       	adc	r25, r31
    2706:	08 95       	ret

00002708 <fdevopen>:
    2708:	0f 93       	push	r16
    270a:	1f 93       	push	r17
    270c:	cf 93       	push	r28
    270e:	df 93       	push	r29
    2710:	00 97       	sbiw	r24, 0x00	; 0
    2712:	31 f4       	brne	.+12     	; 0x2720 <fdevopen+0x18>
    2714:	61 15       	cp	r22, r1
    2716:	71 05       	cpc	r23, r1
    2718:	19 f4       	brne	.+6      	; 0x2720 <fdevopen+0x18>
    271a:	80 e0       	ldi	r24, 0x00	; 0
    271c:	90 e0       	ldi	r25, 0x00	; 0
    271e:	39 c0       	rjmp	.+114    	; 0x2792 <fdevopen+0x8a>
    2720:	8b 01       	movw	r16, r22
    2722:	ec 01       	movw	r28, r24
    2724:	6e e0       	ldi	r22, 0x0E	; 14
    2726:	70 e0       	ldi	r23, 0x00	; 0
    2728:	81 e0       	ldi	r24, 0x01	; 1
    272a:	90 e0       	ldi	r25, 0x00	; 0
    272c:	17 d1       	rcall	.+558    	; 0x295c <calloc>
    272e:	fc 01       	movw	r30, r24
    2730:	89 2b       	or	r24, r25
    2732:	99 f3       	breq	.-26     	; 0x271a <fdevopen+0x12>
    2734:	80 e8       	ldi	r24, 0x80	; 128
    2736:	83 83       	std	Z+3, r24	; 0x03
    2738:	01 15       	cp	r16, r1
    273a:	11 05       	cpc	r17, r1
    273c:	71 f0       	breq	.+28     	; 0x275a <fdevopen+0x52>
    273e:	13 87       	std	Z+11, r17	; 0x0b
    2740:	02 87       	std	Z+10, r16	; 0x0a
    2742:	81 e8       	ldi	r24, 0x81	; 129
    2744:	83 83       	std	Z+3, r24	; 0x03
    2746:	80 91 2d 04 	lds	r24, 0x042D	; 0x80042d <__iob>
    274a:	90 91 2e 04 	lds	r25, 0x042E	; 0x80042e <__iob+0x1>
    274e:	89 2b       	or	r24, r25
    2750:	21 f4       	brne	.+8      	; 0x275a <fdevopen+0x52>
    2752:	f0 93 2e 04 	sts	0x042E, r31	; 0x80042e <__iob+0x1>
    2756:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <__iob>
    275a:	20 97       	sbiw	r28, 0x00	; 0
    275c:	c9 f0       	breq	.+50     	; 0x2790 <fdevopen+0x88>
    275e:	d1 87       	std	Z+9, r29	; 0x09
    2760:	c0 87       	std	Z+8, r28	; 0x08
    2762:	83 81       	ldd	r24, Z+3	; 0x03
    2764:	82 60       	ori	r24, 0x02	; 2
    2766:	83 83       	std	Z+3, r24	; 0x03
    2768:	80 91 2f 04 	lds	r24, 0x042F	; 0x80042f <__iob+0x2>
    276c:	90 91 30 04 	lds	r25, 0x0430	; 0x800430 <__iob+0x3>
    2770:	89 2b       	or	r24, r25
    2772:	71 f4       	brne	.+28     	; 0x2790 <fdevopen+0x88>
    2774:	f0 93 30 04 	sts	0x0430, r31	; 0x800430 <__iob+0x3>
    2778:	e0 93 2f 04 	sts	0x042F, r30	; 0x80042f <__iob+0x2>
    277c:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <__iob+0x4>
    2780:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <__iob+0x5>
    2784:	89 2b       	or	r24, r25
    2786:	21 f4       	brne	.+8      	; 0x2790 <fdevopen+0x88>
    2788:	f0 93 32 04 	sts	0x0432, r31	; 0x800432 <__iob+0x5>
    278c:	e0 93 31 04 	sts	0x0431, r30	; 0x800431 <__iob+0x4>
    2790:	cf 01       	movw	r24, r30
    2792:	df 91       	pop	r29
    2794:	cf 91       	pop	r28
    2796:	1f 91       	pop	r17
    2798:	0f 91       	pop	r16
    279a:	08 95       	ret

0000279c <fputc>:
    279c:	0f 93       	push	r16
    279e:	1f 93       	push	r17
    27a0:	cf 93       	push	r28
    27a2:	df 93       	push	r29
    27a4:	fb 01       	movw	r30, r22
    27a6:	23 81       	ldd	r18, Z+3	; 0x03
    27a8:	21 fd       	sbrc	r18, 1
    27aa:	03 c0       	rjmp	.+6      	; 0x27b2 <fputc+0x16>
    27ac:	8f ef       	ldi	r24, 0xFF	; 255
    27ae:	9f ef       	ldi	r25, 0xFF	; 255
    27b0:	2c c0       	rjmp	.+88     	; 0x280a <fputc+0x6e>
    27b2:	22 ff       	sbrs	r18, 2
    27b4:	16 c0       	rjmp	.+44     	; 0x27e2 <fputc+0x46>
    27b6:	46 81       	ldd	r20, Z+6	; 0x06
    27b8:	57 81       	ldd	r21, Z+7	; 0x07
    27ba:	24 81       	ldd	r18, Z+4	; 0x04
    27bc:	35 81       	ldd	r19, Z+5	; 0x05
    27be:	42 17       	cp	r20, r18
    27c0:	53 07       	cpc	r21, r19
    27c2:	44 f4       	brge	.+16     	; 0x27d4 <fputc+0x38>
    27c4:	a0 81       	ld	r26, Z
    27c6:	b1 81       	ldd	r27, Z+1	; 0x01
    27c8:	9d 01       	movw	r18, r26
    27ca:	2f 5f       	subi	r18, 0xFF	; 255
    27cc:	3f 4f       	sbci	r19, 0xFF	; 255
    27ce:	31 83       	std	Z+1, r19	; 0x01
    27d0:	20 83       	st	Z, r18
    27d2:	8c 93       	st	X, r24
    27d4:	26 81       	ldd	r18, Z+6	; 0x06
    27d6:	37 81       	ldd	r19, Z+7	; 0x07
    27d8:	2f 5f       	subi	r18, 0xFF	; 255
    27da:	3f 4f       	sbci	r19, 0xFF	; 255
    27dc:	37 83       	std	Z+7, r19	; 0x07
    27de:	26 83       	std	Z+6, r18	; 0x06
    27e0:	14 c0       	rjmp	.+40     	; 0x280a <fputc+0x6e>
    27e2:	8b 01       	movw	r16, r22
    27e4:	ec 01       	movw	r28, r24
    27e6:	fb 01       	movw	r30, r22
    27e8:	00 84       	ldd	r0, Z+8	; 0x08
    27ea:	f1 85       	ldd	r31, Z+9	; 0x09
    27ec:	e0 2d       	mov	r30, r0
    27ee:	19 95       	eicall
    27f0:	89 2b       	or	r24, r25
    27f2:	e1 f6       	brne	.-72     	; 0x27ac <fputc+0x10>
    27f4:	d8 01       	movw	r26, r16
    27f6:	16 96       	adiw	r26, 0x06	; 6
    27f8:	8d 91       	ld	r24, X+
    27fa:	9c 91       	ld	r25, X
    27fc:	17 97       	sbiw	r26, 0x07	; 7
    27fe:	01 96       	adiw	r24, 0x01	; 1
    2800:	17 96       	adiw	r26, 0x07	; 7
    2802:	9c 93       	st	X, r25
    2804:	8e 93       	st	-X, r24
    2806:	16 97       	sbiw	r26, 0x06	; 6
    2808:	ce 01       	movw	r24, r28
    280a:	df 91       	pop	r29
    280c:	cf 91       	pop	r28
    280e:	1f 91       	pop	r17
    2810:	0f 91       	pop	r16
    2812:	08 95       	ret

00002814 <printf>:
    2814:	cf 93       	push	r28
    2816:	df 93       	push	r29
    2818:	cd b7       	in	r28, 0x3d	; 61
    281a:	de b7       	in	r29, 0x3e	; 62
    281c:	ae 01       	movw	r20, r28
    281e:	4a 5f       	subi	r20, 0xFA	; 250
    2820:	5f 4f       	sbci	r21, 0xFF	; 255
    2822:	fa 01       	movw	r30, r20
    2824:	61 91       	ld	r22, Z+
    2826:	71 91       	ld	r23, Z+
    2828:	af 01       	movw	r20, r30
    282a:	80 91 2f 04 	lds	r24, 0x042F	; 0x80042f <__iob+0x2>
    282e:	90 91 30 04 	lds	r25, 0x0430	; 0x800430 <__iob+0x3>
    2832:	cc da       	rcall	.-2664   	; 0x1dcc <vfprintf>
    2834:	df 91       	pop	r29
    2836:	cf 91       	pop	r28
    2838:	08 95       	ret

0000283a <putchar>:
    283a:	60 91 2f 04 	lds	r22, 0x042F	; 0x80042f <__iob+0x2>
    283e:	70 91 30 04 	lds	r23, 0x0430	; 0x800430 <__iob+0x3>
    2842:	ac cf       	rjmp	.-168    	; 0x279c <fputc>

00002844 <sprintf>:
    2844:	0f 93       	push	r16
    2846:	1f 93       	push	r17
    2848:	cf 93       	push	r28
    284a:	df 93       	push	r29
    284c:	cd b7       	in	r28, 0x3d	; 61
    284e:	de b7       	in	r29, 0x3e	; 62
    2850:	2e 97       	sbiw	r28, 0x0e	; 14
    2852:	0f b6       	in	r0, 0x3f	; 63
    2854:	f8 94       	cli
    2856:	de bf       	out	0x3e, r29	; 62
    2858:	0f be       	out	0x3f, r0	; 63
    285a:	cd bf       	out	0x3d, r28	; 61
    285c:	0e 89       	ldd	r16, Y+22	; 0x16
    285e:	1f 89       	ldd	r17, Y+23	; 0x17
    2860:	86 e0       	ldi	r24, 0x06	; 6
    2862:	8c 83       	std	Y+4, r24	; 0x04
    2864:	1a 83       	std	Y+2, r17	; 0x02
    2866:	09 83       	std	Y+1, r16	; 0x01
    2868:	8f ef       	ldi	r24, 0xFF	; 255
    286a:	9f e7       	ldi	r25, 0x7F	; 127
    286c:	9e 83       	std	Y+6, r25	; 0x06
    286e:	8d 83       	std	Y+5, r24	; 0x05
    2870:	ae 01       	movw	r20, r28
    2872:	46 5e       	subi	r20, 0xE6	; 230
    2874:	5f 4f       	sbci	r21, 0xFF	; 255
    2876:	68 8d       	ldd	r22, Y+24	; 0x18
    2878:	79 8d       	ldd	r23, Y+25	; 0x19
    287a:	ce 01       	movw	r24, r28
    287c:	01 96       	adiw	r24, 0x01	; 1
    287e:	a6 da       	rcall	.-2740   	; 0x1dcc <vfprintf>
    2880:	ef 81       	ldd	r30, Y+7	; 0x07
    2882:	f8 85       	ldd	r31, Y+8	; 0x08
    2884:	e0 0f       	add	r30, r16
    2886:	f1 1f       	adc	r31, r17
    2888:	10 82       	st	Z, r1
    288a:	2e 96       	adiw	r28, 0x0e	; 14
    288c:	0f b6       	in	r0, 0x3f	; 63
    288e:	f8 94       	cli
    2890:	de bf       	out	0x3e, r29	; 62
    2892:	0f be       	out	0x3f, r0	; 63
    2894:	cd bf       	out	0x3d, r28	; 61
    2896:	df 91       	pop	r29
    2898:	cf 91       	pop	r28
    289a:	1f 91       	pop	r17
    289c:	0f 91       	pop	r16
    289e:	08 95       	ret

000028a0 <__ultoa_invert>:
    28a0:	fa 01       	movw	r30, r20
    28a2:	aa 27       	eor	r26, r26
    28a4:	28 30       	cpi	r18, 0x08	; 8
    28a6:	51 f1       	breq	.+84     	; 0x28fc <__ultoa_invert+0x5c>
    28a8:	20 31       	cpi	r18, 0x10	; 16
    28aa:	81 f1       	breq	.+96     	; 0x290c <__ultoa_invert+0x6c>
    28ac:	e8 94       	clt
    28ae:	6f 93       	push	r22
    28b0:	6e 7f       	andi	r22, 0xFE	; 254
    28b2:	6e 5f       	subi	r22, 0xFE	; 254
    28b4:	7f 4f       	sbci	r23, 0xFF	; 255
    28b6:	8f 4f       	sbci	r24, 0xFF	; 255
    28b8:	9f 4f       	sbci	r25, 0xFF	; 255
    28ba:	af 4f       	sbci	r26, 0xFF	; 255
    28bc:	b1 e0       	ldi	r27, 0x01	; 1
    28be:	3e d0       	rcall	.+124    	; 0x293c <__ultoa_invert+0x9c>
    28c0:	b4 e0       	ldi	r27, 0x04	; 4
    28c2:	3c d0       	rcall	.+120    	; 0x293c <__ultoa_invert+0x9c>
    28c4:	67 0f       	add	r22, r23
    28c6:	78 1f       	adc	r23, r24
    28c8:	89 1f       	adc	r24, r25
    28ca:	9a 1f       	adc	r25, r26
    28cc:	a1 1d       	adc	r26, r1
    28ce:	68 0f       	add	r22, r24
    28d0:	79 1f       	adc	r23, r25
    28d2:	8a 1f       	adc	r24, r26
    28d4:	91 1d       	adc	r25, r1
    28d6:	a1 1d       	adc	r26, r1
    28d8:	6a 0f       	add	r22, r26
    28da:	71 1d       	adc	r23, r1
    28dc:	81 1d       	adc	r24, r1
    28de:	91 1d       	adc	r25, r1
    28e0:	a1 1d       	adc	r26, r1
    28e2:	20 d0       	rcall	.+64     	; 0x2924 <__ultoa_invert+0x84>
    28e4:	09 f4       	brne	.+2      	; 0x28e8 <__ultoa_invert+0x48>
    28e6:	68 94       	set
    28e8:	3f 91       	pop	r19
    28ea:	2a e0       	ldi	r18, 0x0A	; 10
    28ec:	26 9f       	mul	r18, r22
    28ee:	11 24       	eor	r1, r1
    28f0:	30 19       	sub	r19, r0
    28f2:	30 5d       	subi	r19, 0xD0	; 208
    28f4:	31 93       	st	Z+, r19
    28f6:	de f6       	brtc	.-74     	; 0x28ae <__ultoa_invert+0xe>
    28f8:	cf 01       	movw	r24, r30
    28fa:	08 95       	ret
    28fc:	46 2f       	mov	r20, r22
    28fe:	47 70       	andi	r20, 0x07	; 7
    2900:	40 5d       	subi	r20, 0xD0	; 208
    2902:	41 93       	st	Z+, r20
    2904:	b3 e0       	ldi	r27, 0x03	; 3
    2906:	0f d0       	rcall	.+30     	; 0x2926 <__ultoa_invert+0x86>
    2908:	c9 f7       	brne	.-14     	; 0x28fc <__ultoa_invert+0x5c>
    290a:	f6 cf       	rjmp	.-20     	; 0x28f8 <__ultoa_invert+0x58>
    290c:	46 2f       	mov	r20, r22
    290e:	4f 70       	andi	r20, 0x0F	; 15
    2910:	40 5d       	subi	r20, 0xD0	; 208
    2912:	4a 33       	cpi	r20, 0x3A	; 58
    2914:	18 f0       	brcs	.+6      	; 0x291c <__ultoa_invert+0x7c>
    2916:	49 5d       	subi	r20, 0xD9	; 217
    2918:	31 fd       	sbrc	r19, 1
    291a:	40 52       	subi	r20, 0x20	; 32
    291c:	41 93       	st	Z+, r20
    291e:	02 d0       	rcall	.+4      	; 0x2924 <__ultoa_invert+0x84>
    2920:	a9 f7       	brne	.-22     	; 0x290c <__ultoa_invert+0x6c>
    2922:	ea cf       	rjmp	.-44     	; 0x28f8 <__ultoa_invert+0x58>
    2924:	b4 e0       	ldi	r27, 0x04	; 4
    2926:	a6 95       	lsr	r26
    2928:	97 95       	ror	r25
    292a:	87 95       	ror	r24
    292c:	77 95       	ror	r23
    292e:	67 95       	ror	r22
    2930:	ba 95       	dec	r27
    2932:	c9 f7       	brne	.-14     	; 0x2926 <__ultoa_invert+0x86>
    2934:	00 97       	sbiw	r24, 0x00	; 0
    2936:	61 05       	cpc	r22, r1
    2938:	71 05       	cpc	r23, r1
    293a:	08 95       	ret
    293c:	9b 01       	movw	r18, r22
    293e:	ac 01       	movw	r20, r24
    2940:	0a 2e       	mov	r0, r26
    2942:	06 94       	lsr	r0
    2944:	57 95       	ror	r21
    2946:	47 95       	ror	r20
    2948:	37 95       	ror	r19
    294a:	27 95       	ror	r18
    294c:	ba 95       	dec	r27
    294e:	c9 f7       	brne	.-14     	; 0x2942 <__ultoa_invert+0xa2>
    2950:	62 0f       	add	r22, r18
    2952:	73 1f       	adc	r23, r19
    2954:	84 1f       	adc	r24, r20
    2956:	95 1f       	adc	r25, r21
    2958:	a0 1d       	adc	r26, r0
    295a:	08 95       	ret

0000295c <calloc>:
    295c:	0f 93       	push	r16
    295e:	1f 93       	push	r17
    2960:	cf 93       	push	r28
    2962:	df 93       	push	r29
    2964:	86 9f       	mul	r24, r22
    2966:	80 01       	movw	r16, r0
    2968:	87 9f       	mul	r24, r23
    296a:	10 0d       	add	r17, r0
    296c:	96 9f       	mul	r25, r22
    296e:	10 0d       	add	r17, r0
    2970:	11 24       	eor	r1, r1
    2972:	c8 01       	movw	r24, r16
    2974:	0d d0       	rcall	.+26     	; 0x2990 <malloc>
    2976:	ec 01       	movw	r28, r24
    2978:	00 97       	sbiw	r24, 0x00	; 0
    297a:	21 f0       	breq	.+8      	; 0x2984 <calloc+0x28>
    297c:	a8 01       	movw	r20, r16
    297e:	60 e0       	ldi	r22, 0x00	; 0
    2980:	70 e0       	ldi	r23, 0x00	; 0
    2982:	27 d1       	rcall	.+590    	; 0x2bd2 <memset>
    2984:	ce 01       	movw	r24, r28
    2986:	df 91       	pop	r29
    2988:	cf 91       	pop	r28
    298a:	1f 91       	pop	r17
    298c:	0f 91       	pop	r16
    298e:	08 95       	ret

00002990 <malloc>:
    2990:	0f 93       	push	r16
    2992:	1f 93       	push	r17
    2994:	cf 93       	push	r28
    2996:	df 93       	push	r29
    2998:	82 30       	cpi	r24, 0x02	; 2
    299a:	91 05       	cpc	r25, r1
    299c:	10 f4       	brcc	.+4      	; 0x29a2 <malloc+0x12>
    299e:	82 e0       	ldi	r24, 0x02	; 2
    29a0:	90 e0       	ldi	r25, 0x00	; 0
    29a2:	e0 91 35 04 	lds	r30, 0x0435	; 0x800435 <__flp>
    29a6:	f0 91 36 04 	lds	r31, 0x0436	; 0x800436 <__flp+0x1>
    29aa:	20 e0       	ldi	r18, 0x00	; 0
    29ac:	30 e0       	ldi	r19, 0x00	; 0
    29ae:	a0 e0       	ldi	r26, 0x00	; 0
    29b0:	b0 e0       	ldi	r27, 0x00	; 0
    29b2:	30 97       	sbiw	r30, 0x00	; 0
    29b4:	19 f1       	breq	.+70     	; 0x29fc <malloc+0x6c>
    29b6:	40 81       	ld	r20, Z
    29b8:	51 81       	ldd	r21, Z+1	; 0x01
    29ba:	02 81       	ldd	r16, Z+2	; 0x02
    29bc:	13 81       	ldd	r17, Z+3	; 0x03
    29be:	48 17       	cp	r20, r24
    29c0:	59 07       	cpc	r21, r25
    29c2:	c8 f0       	brcs	.+50     	; 0x29f6 <malloc+0x66>
    29c4:	84 17       	cp	r24, r20
    29c6:	95 07       	cpc	r25, r21
    29c8:	69 f4       	brne	.+26     	; 0x29e4 <malloc+0x54>
    29ca:	10 97       	sbiw	r26, 0x00	; 0
    29cc:	31 f0       	breq	.+12     	; 0x29da <malloc+0x4a>
    29ce:	12 96       	adiw	r26, 0x02	; 2
    29d0:	0c 93       	st	X, r16
    29d2:	12 97       	sbiw	r26, 0x02	; 2
    29d4:	13 96       	adiw	r26, 0x03	; 3
    29d6:	1c 93       	st	X, r17
    29d8:	27 c0       	rjmp	.+78     	; 0x2a28 <malloc+0x98>
    29da:	00 93 35 04 	sts	0x0435, r16	; 0x800435 <__flp>
    29de:	10 93 36 04 	sts	0x0436, r17	; 0x800436 <__flp+0x1>
    29e2:	22 c0       	rjmp	.+68     	; 0x2a28 <malloc+0x98>
    29e4:	21 15       	cp	r18, r1
    29e6:	31 05       	cpc	r19, r1
    29e8:	19 f0       	breq	.+6      	; 0x29f0 <malloc+0x60>
    29ea:	42 17       	cp	r20, r18
    29ec:	53 07       	cpc	r21, r19
    29ee:	18 f4       	brcc	.+6      	; 0x29f6 <malloc+0x66>
    29f0:	9a 01       	movw	r18, r20
    29f2:	bd 01       	movw	r22, r26
    29f4:	ef 01       	movw	r28, r30
    29f6:	df 01       	movw	r26, r30
    29f8:	f8 01       	movw	r30, r16
    29fa:	db cf       	rjmp	.-74     	; 0x29b2 <malloc+0x22>
    29fc:	21 15       	cp	r18, r1
    29fe:	31 05       	cpc	r19, r1
    2a00:	f9 f0       	breq	.+62     	; 0x2a40 <malloc+0xb0>
    2a02:	28 1b       	sub	r18, r24
    2a04:	39 0b       	sbc	r19, r25
    2a06:	24 30       	cpi	r18, 0x04	; 4
    2a08:	31 05       	cpc	r19, r1
    2a0a:	80 f4       	brcc	.+32     	; 0x2a2c <malloc+0x9c>
    2a0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a0e:	9b 81       	ldd	r25, Y+3	; 0x03
    2a10:	61 15       	cp	r22, r1
    2a12:	71 05       	cpc	r23, r1
    2a14:	21 f0       	breq	.+8      	; 0x2a1e <malloc+0x8e>
    2a16:	fb 01       	movw	r30, r22
    2a18:	93 83       	std	Z+3, r25	; 0x03
    2a1a:	82 83       	std	Z+2, r24	; 0x02
    2a1c:	04 c0       	rjmp	.+8      	; 0x2a26 <malloc+0x96>
    2a1e:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <__flp+0x1>
    2a22:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <__flp>
    2a26:	fe 01       	movw	r30, r28
    2a28:	32 96       	adiw	r30, 0x02	; 2
    2a2a:	44 c0       	rjmp	.+136    	; 0x2ab4 <malloc+0x124>
    2a2c:	fe 01       	movw	r30, r28
    2a2e:	e2 0f       	add	r30, r18
    2a30:	f3 1f       	adc	r31, r19
    2a32:	81 93       	st	Z+, r24
    2a34:	91 93       	st	Z+, r25
    2a36:	22 50       	subi	r18, 0x02	; 2
    2a38:	31 09       	sbc	r19, r1
    2a3a:	39 83       	std	Y+1, r19	; 0x01
    2a3c:	28 83       	st	Y, r18
    2a3e:	3a c0       	rjmp	.+116    	; 0x2ab4 <malloc+0x124>
    2a40:	20 91 33 04 	lds	r18, 0x0433	; 0x800433 <__brkval>
    2a44:	30 91 34 04 	lds	r19, 0x0434	; 0x800434 <__brkval+0x1>
    2a48:	23 2b       	or	r18, r19
    2a4a:	41 f4       	brne	.+16     	; 0x2a5c <malloc+0xcc>
    2a4c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2a50:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2a54:	30 93 34 04 	sts	0x0434, r19	; 0x800434 <__brkval+0x1>
    2a58:	20 93 33 04 	sts	0x0433, r18	; 0x800433 <__brkval>
    2a5c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2a60:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2a64:	21 15       	cp	r18, r1
    2a66:	31 05       	cpc	r19, r1
    2a68:	41 f4       	brne	.+16     	; 0x2a7a <malloc+0xea>
    2a6a:	2d b7       	in	r18, 0x3d	; 61
    2a6c:	3e b7       	in	r19, 0x3e	; 62
    2a6e:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2a72:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2a76:	24 1b       	sub	r18, r20
    2a78:	35 0b       	sbc	r19, r21
    2a7a:	e0 91 33 04 	lds	r30, 0x0433	; 0x800433 <__brkval>
    2a7e:	f0 91 34 04 	lds	r31, 0x0434	; 0x800434 <__brkval+0x1>
    2a82:	e2 17       	cp	r30, r18
    2a84:	f3 07       	cpc	r31, r19
    2a86:	a0 f4       	brcc	.+40     	; 0x2ab0 <malloc+0x120>
    2a88:	2e 1b       	sub	r18, r30
    2a8a:	3f 0b       	sbc	r19, r31
    2a8c:	28 17       	cp	r18, r24
    2a8e:	39 07       	cpc	r19, r25
    2a90:	78 f0       	brcs	.+30     	; 0x2ab0 <malloc+0x120>
    2a92:	ac 01       	movw	r20, r24
    2a94:	4e 5f       	subi	r20, 0xFE	; 254
    2a96:	5f 4f       	sbci	r21, 0xFF	; 255
    2a98:	24 17       	cp	r18, r20
    2a9a:	35 07       	cpc	r19, r21
    2a9c:	48 f0       	brcs	.+18     	; 0x2ab0 <malloc+0x120>
    2a9e:	4e 0f       	add	r20, r30
    2aa0:	5f 1f       	adc	r21, r31
    2aa2:	50 93 34 04 	sts	0x0434, r21	; 0x800434 <__brkval+0x1>
    2aa6:	40 93 33 04 	sts	0x0433, r20	; 0x800433 <__brkval>
    2aaa:	81 93       	st	Z+, r24
    2aac:	91 93       	st	Z+, r25
    2aae:	02 c0       	rjmp	.+4      	; 0x2ab4 <malloc+0x124>
    2ab0:	e0 e0       	ldi	r30, 0x00	; 0
    2ab2:	f0 e0       	ldi	r31, 0x00	; 0
    2ab4:	cf 01       	movw	r24, r30
    2ab6:	df 91       	pop	r29
    2ab8:	cf 91       	pop	r28
    2aba:	1f 91       	pop	r17
    2abc:	0f 91       	pop	r16
    2abe:	08 95       	ret

00002ac0 <free>:
    2ac0:	cf 93       	push	r28
    2ac2:	df 93       	push	r29
    2ac4:	00 97       	sbiw	r24, 0x00	; 0
    2ac6:	09 f4       	brne	.+2      	; 0x2aca <free+0xa>
    2ac8:	81 c0       	rjmp	.+258    	; 0x2bcc <free+0x10c>
    2aca:	fc 01       	movw	r30, r24
    2acc:	32 97       	sbiw	r30, 0x02	; 2
    2ace:	13 82       	std	Z+3, r1	; 0x03
    2ad0:	12 82       	std	Z+2, r1	; 0x02
    2ad2:	a0 91 35 04 	lds	r26, 0x0435	; 0x800435 <__flp>
    2ad6:	b0 91 36 04 	lds	r27, 0x0436	; 0x800436 <__flp+0x1>
    2ada:	10 97       	sbiw	r26, 0x00	; 0
    2adc:	81 f4       	brne	.+32     	; 0x2afe <free+0x3e>
    2ade:	20 81       	ld	r18, Z
    2ae0:	31 81       	ldd	r19, Z+1	; 0x01
    2ae2:	82 0f       	add	r24, r18
    2ae4:	93 1f       	adc	r25, r19
    2ae6:	20 91 33 04 	lds	r18, 0x0433	; 0x800433 <__brkval>
    2aea:	30 91 34 04 	lds	r19, 0x0434	; 0x800434 <__brkval+0x1>
    2aee:	28 17       	cp	r18, r24
    2af0:	39 07       	cpc	r19, r25
    2af2:	51 f5       	brne	.+84     	; 0x2b48 <free+0x88>
    2af4:	f0 93 34 04 	sts	0x0434, r31	; 0x800434 <__brkval+0x1>
    2af8:	e0 93 33 04 	sts	0x0433, r30	; 0x800433 <__brkval>
    2afc:	67 c0       	rjmp	.+206    	; 0x2bcc <free+0x10c>
    2afe:	ed 01       	movw	r28, r26
    2b00:	20 e0       	ldi	r18, 0x00	; 0
    2b02:	30 e0       	ldi	r19, 0x00	; 0
    2b04:	ce 17       	cp	r28, r30
    2b06:	df 07       	cpc	r29, r31
    2b08:	40 f4       	brcc	.+16     	; 0x2b1a <free+0x5a>
    2b0a:	4a 81       	ldd	r20, Y+2	; 0x02
    2b0c:	5b 81       	ldd	r21, Y+3	; 0x03
    2b0e:	9e 01       	movw	r18, r28
    2b10:	41 15       	cp	r20, r1
    2b12:	51 05       	cpc	r21, r1
    2b14:	f1 f0       	breq	.+60     	; 0x2b52 <free+0x92>
    2b16:	ea 01       	movw	r28, r20
    2b18:	f5 cf       	rjmp	.-22     	; 0x2b04 <free+0x44>
    2b1a:	d3 83       	std	Z+3, r29	; 0x03
    2b1c:	c2 83       	std	Z+2, r28	; 0x02
    2b1e:	40 81       	ld	r20, Z
    2b20:	51 81       	ldd	r21, Z+1	; 0x01
    2b22:	84 0f       	add	r24, r20
    2b24:	95 1f       	adc	r25, r21
    2b26:	c8 17       	cp	r28, r24
    2b28:	d9 07       	cpc	r29, r25
    2b2a:	59 f4       	brne	.+22     	; 0x2b42 <free+0x82>
    2b2c:	88 81       	ld	r24, Y
    2b2e:	99 81       	ldd	r25, Y+1	; 0x01
    2b30:	84 0f       	add	r24, r20
    2b32:	95 1f       	adc	r25, r21
    2b34:	02 96       	adiw	r24, 0x02	; 2
    2b36:	91 83       	std	Z+1, r25	; 0x01
    2b38:	80 83       	st	Z, r24
    2b3a:	8a 81       	ldd	r24, Y+2	; 0x02
    2b3c:	9b 81       	ldd	r25, Y+3	; 0x03
    2b3e:	93 83       	std	Z+3, r25	; 0x03
    2b40:	82 83       	std	Z+2, r24	; 0x02
    2b42:	21 15       	cp	r18, r1
    2b44:	31 05       	cpc	r19, r1
    2b46:	29 f4       	brne	.+10     	; 0x2b52 <free+0x92>
    2b48:	f0 93 36 04 	sts	0x0436, r31	; 0x800436 <__flp+0x1>
    2b4c:	e0 93 35 04 	sts	0x0435, r30	; 0x800435 <__flp>
    2b50:	3d c0       	rjmp	.+122    	; 0x2bcc <free+0x10c>
    2b52:	e9 01       	movw	r28, r18
    2b54:	fb 83       	std	Y+3, r31	; 0x03
    2b56:	ea 83       	std	Y+2, r30	; 0x02
    2b58:	49 91       	ld	r20, Y+
    2b5a:	59 91       	ld	r21, Y+
    2b5c:	c4 0f       	add	r28, r20
    2b5e:	d5 1f       	adc	r29, r21
    2b60:	ec 17       	cp	r30, r28
    2b62:	fd 07       	cpc	r31, r29
    2b64:	61 f4       	brne	.+24     	; 0x2b7e <free+0xbe>
    2b66:	80 81       	ld	r24, Z
    2b68:	91 81       	ldd	r25, Z+1	; 0x01
    2b6a:	84 0f       	add	r24, r20
    2b6c:	95 1f       	adc	r25, r21
    2b6e:	02 96       	adiw	r24, 0x02	; 2
    2b70:	e9 01       	movw	r28, r18
    2b72:	99 83       	std	Y+1, r25	; 0x01
    2b74:	88 83       	st	Y, r24
    2b76:	82 81       	ldd	r24, Z+2	; 0x02
    2b78:	93 81       	ldd	r25, Z+3	; 0x03
    2b7a:	9b 83       	std	Y+3, r25	; 0x03
    2b7c:	8a 83       	std	Y+2, r24	; 0x02
    2b7e:	e0 e0       	ldi	r30, 0x00	; 0
    2b80:	f0 e0       	ldi	r31, 0x00	; 0
    2b82:	12 96       	adiw	r26, 0x02	; 2
    2b84:	8d 91       	ld	r24, X+
    2b86:	9c 91       	ld	r25, X
    2b88:	13 97       	sbiw	r26, 0x03	; 3
    2b8a:	00 97       	sbiw	r24, 0x00	; 0
    2b8c:	19 f0       	breq	.+6      	; 0x2b94 <free+0xd4>
    2b8e:	fd 01       	movw	r30, r26
    2b90:	dc 01       	movw	r26, r24
    2b92:	f7 cf       	rjmp	.-18     	; 0x2b82 <free+0xc2>
    2b94:	8d 91       	ld	r24, X+
    2b96:	9c 91       	ld	r25, X
    2b98:	11 97       	sbiw	r26, 0x01	; 1
    2b9a:	9d 01       	movw	r18, r26
    2b9c:	2e 5f       	subi	r18, 0xFE	; 254
    2b9e:	3f 4f       	sbci	r19, 0xFF	; 255
    2ba0:	82 0f       	add	r24, r18
    2ba2:	93 1f       	adc	r25, r19
    2ba4:	20 91 33 04 	lds	r18, 0x0433	; 0x800433 <__brkval>
    2ba8:	30 91 34 04 	lds	r19, 0x0434	; 0x800434 <__brkval+0x1>
    2bac:	28 17       	cp	r18, r24
    2bae:	39 07       	cpc	r19, r25
    2bb0:	69 f4       	brne	.+26     	; 0x2bcc <free+0x10c>
    2bb2:	30 97       	sbiw	r30, 0x00	; 0
    2bb4:	29 f4       	brne	.+10     	; 0x2bc0 <free+0x100>
    2bb6:	10 92 36 04 	sts	0x0436, r1	; 0x800436 <__flp+0x1>
    2bba:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <__flp>
    2bbe:	02 c0       	rjmp	.+4      	; 0x2bc4 <free+0x104>
    2bc0:	13 82       	std	Z+3, r1	; 0x03
    2bc2:	12 82       	std	Z+2, r1	; 0x02
    2bc4:	b0 93 34 04 	sts	0x0434, r27	; 0x800434 <__brkval+0x1>
    2bc8:	a0 93 33 04 	sts	0x0433, r26	; 0x800433 <__brkval>
    2bcc:	df 91       	pop	r29
    2bce:	cf 91       	pop	r28
    2bd0:	08 95       	ret

00002bd2 <memset>:
    2bd2:	dc 01       	movw	r26, r24
    2bd4:	01 c0       	rjmp	.+2      	; 0x2bd8 <memset+0x6>
    2bd6:	6d 93       	st	X+, r22
    2bd8:	41 50       	subi	r20, 0x01	; 1
    2bda:	50 40       	sbci	r21, 0x00	; 0
    2bdc:	e0 f7       	brcc	.-8      	; 0x2bd6 <memset+0x4>
    2bde:	08 95       	ret

00002be0 <_exit>:
    2be0:	f8 94       	cli

00002be2 <__stop_program>:
    2be2:	ff cf       	rjmp	.-2      	; 0x2be2 <__stop_program>
