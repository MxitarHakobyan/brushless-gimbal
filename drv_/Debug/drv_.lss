
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001bc  00800200  00002b2e  00002bc2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002b2e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a5  008003bc  008003bc  00002d7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002d7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ddc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000359e  00000000  00000000  000030c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001876  00000000  00000000  00006662  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018d0  00000000  00000000  00007ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000858  00000000  00000000  000097a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d71  00000000  00000000  0000a000  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002268  00000000  00000000  0000ad71  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000cfd9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 38 0a 	jmp	0x1470	; 0x1470 <__vector_17>
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 e4 09 	jmp	0x13c8	; 0x13c8 <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__bad_interrupt>
      66:	00 00       	nop
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 2e 0a 	jmp	0x145c	; 0x145c <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2332>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	ee e2       	ldi	r30, 0x2E	; 46
     22c:	fb e2       	ldi	r31, 0x2B	; 43
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	ac 3b       	cpi	r26, 0xBC	; 188
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	ac eb       	ldi	r26, 0xBC	; 188
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	a1 36       	cpi	r26, 0x61	; 97
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	72 d4       	rcall	.+2276   	; 0xb34 <main>
     250:	0c 94 95 15 	jmp	0x2b2a	; 0x2b2a <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
	if(W_step > SINE_TABLE_SZ)
	W_step = 0;
	if(W_step < 0)
	W_step = SINE_TABLE_SZ;
	//printf("debug 0000000");
	INT_MOTOR_SPEED1=pwm_delay;
     256:	08 95       	ret

00000258 <PWM_update_2>:
}
void PWM_update_2()//motor pwm update
{
	U1_PWM=pwmSin[U_step_2];
     258:	e0 91 bc 03 	lds	r30, 0x03BC	; 0x8003bc <__data_end>
     25c:	f0 91 bd 03 	lds	r31, 0x03BD	; 0x8003bd <__data_end+0x1>
     260:	ea 5f       	subi	r30, 0xFA	; 250
     262:	fd 4f       	sbci	r31, 0xFD	; 253
     264:	80 81       	ld	r24, Z
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     26c:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	V1_PWM=pwmSin[V_step_2];
     270:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step_2>
     274:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step_2+0x1>
     278:	ea 5f       	subi	r30, 0xFA	; 250
     27a:	fd 4f       	sbci	r31, 0xFD	; 253
     27c:	80 81       	ld	r24, Z
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     284:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
	W1_PWM=pwmSin[W_step_2];
     288:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step_2>
     28c:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step_2+0x1>
     290:	ea 5f       	subi	r30, 0xFA	; 250
     292:	fd 4f       	sbci	r31, 0xFD	; 253
     294:	80 81       	ld	r24, Z
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     29c:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
	U_step_2=U_step_2+incr_2;
     2a0:	60 91 d7 03 	lds	r22, 0x03D7	; 0x8003d7 <incr_2>
     2a4:	70 91 d8 03 	lds	r23, 0x03D8	; 0x8003d8 <incr_2+0x1>
     2a8:	40 91 bc 03 	lds	r20, 0x03BC	; 0x8003bc <__data_end>
     2ac:	50 91 bd 03 	lds	r21, 0x03BD	; 0x8003bd <__data_end+0x1>
     2b0:	46 0f       	add	r20, r22
     2b2:	57 1f       	adc	r21, r23
     2b4:	50 93 bd 03 	sts	0x03BD, r21	; 0x8003bd <__data_end+0x1>
     2b8:	40 93 bc 03 	sts	0x03BC, r20	; 0x8003bc <__data_end>
	V_step_2=V_step_2+incr_2;
     2bc:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step_2>
     2c0:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step_2+0x1>
     2c4:	26 0f       	add	r18, r22
     2c6:	37 1f       	adc	r19, r23
     2c8:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     2cc:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_2+incr_2;
     2d0:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step_2>
     2d4:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step_2+0x1>
     2d8:	86 0f       	add	r24, r22
     2da:	97 1f       	adc	r25, r23
     2dc:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     2e0:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	if(U_step_2 > SINE_TABLE_SZ)
     2e4:	49 36       	cpi	r20, 0x69	; 105
     2e6:	61 e0       	ldi	r22, 0x01	; 1
     2e8:	56 07       	cpc	r21, r22
     2ea:	2c f0       	brlt	.+10     	; 0x2f6 <PWM_update_2+0x9e>
	U_step_2 = 0;
     2ec:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <__data_end+0x1>
     2f0:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <__data_end>
     2f4:	08 c0       	rjmp	.+16     	; 0x306 <PWM_update_2+0xae>
	if(U_step_2 < 0)
     2f6:	55 23       	and	r21, r21
     2f8:	34 f4       	brge	.+12     	; 0x306 <PWM_update_2+0xae>
	U_step_2 = SINE_TABLE_SZ;
     2fa:	48 e6       	ldi	r20, 0x68	; 104
     2fc:	51 e0       	ldi	r21, 0x01	; 1
     2fe:	50 93 bd 03 	sts	0x03BD, r21	; 0x8003bd <__data_end+0x1>
     302:	40 93 bc 03 	sts	0x03BC, r20	; 0x8003bc <__data_end>
	
	if(V_step_2 > SINE_TABLE_SZ)
     306:	29 36       	cpi	r18, 0x69	; 105
     308:	41 e0       	ldi	r20, 0x01	; 1
     30a:	34 07       	cpc	r19, r20
     30c:	2c f0       	brlt	.+10     	; 0x318 <PWM_update_2+0xc0>
	V_step_2 = 0;
     30e:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step_2+0x1>
     312:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step_2>
     316:	08 c0       	rjmp	.+16     	; 0x328 <PWM_update_2+0xd0>
	if(V_step_2 < 0)
     318:	33 23       	and	r19, r19
     31a:	34 f4       	brge	.+12     	; 0x328 <PWM_update_2+0xd0>
	V_step = SINE_TABLE_SZ;
     31c:	28 e6       	ldi	r18, 0x68	; 104
     31e:	31 e0       	ldi	r19, 0x01	; 1
     320:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     324:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step_2 > SINE_TABLE_SZ)
     328:	89 36       	cpi	r24, 0x69	; 105
     32a:	61 e0       	ldi	r22, 0x01	; 1
     32c:	96 07       	cpc	r25, r22
     32e:	2c f0       	brlt	.+10     	; 0x33a <PWM_update_2+0xe2>
	W_step_2 = 0;
     330:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step_2+0x1>
     334:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step_2>
     338:	08 c0       	rjmp	.+16     	; 0x34a <PWM_update_2+0xf2>
	if(W_step_2< 0)
     33a:	99 23       	and	r25, r25
     33c:	34 f4       	brge	.+12     	; 0x34a <PWM_update_2+0xf2>
	W_step_2 = SINE_TABLE_SZ;
     33e:	88 e6       	ldi	r24, 0x68	; 104
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     346:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	//_delay_us(100);
	INT_MOTOR_SPEED2=pwm_delay_2;
     34a:	80 91 d1 03 	lds	r24, 0x03D1	; 0x8003d1 <pwm_delay_2>
     34e:	90 91 d2 03 	lds	r25, 0x03D2	; 0x8003d2 <pwm_delay_2+0x1>
     352:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     356:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     35a:	08 95       	ret

0000035c <init_motor_gpio>:
	//printf("oopooo");
}
void init_motor_gpio()
{
	//setting pin mode to output for motor 1 
	sbi(DDRH,3);//digital 6 OC4A
     35c:	e1 e0       	ldi	r30, 0x01	; 1
     35e:	f1 e0       	ldi	r31, 0x01	; 1
     360:	80 81       	ld	r24, Z
     362:	88 60       	ori	r24, 0x08	; 8
     364:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     366:	80 81       	ld	r24, Z
     368:	80 61       	ori	r24, 0x10	; 16
     36a:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     36c:	80 81       	ld	r24, Z
     36e:	80 62       	ori	r24, 0x20	; 32
     370:	80 83       	st	Z, r24
	
	sbi(DDRA,0);//digital 22 EN1
     372:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     374:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     376:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     378:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     37a:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     37c:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     37e:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     380:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     382:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     384:	47 9a       	sbi	0x08, 7	; 8
	
	
	//setting pin mode to output for motor 2
	sbi(DDRE,4);//digital 2 OC3B
     386:	6c 9a       	sbi	0x0d, 4	; 13
	sbi(DDRE,5);//digital 3 OC3C
     388:	6d 9a       	sbi	0x0d, 5	; 13
	sbi(DDRE,3);//digital 5 OC3A
     38a:	6b 9a       	sbi	0x0d, 3	; 13
	
	sbi(DDRC,5);//digital 32 EN1
     38c:	3d 9a       	sbi	0x07, 5	; 7
	sbi(DDRC,3);//digital 34 EN2
     38e:	3b 9a       	sbi	0x07, 3	; 7
	sbi(DDRC,1);//digital 36 EN3
     390:	39 9a       	sbi	0x07, 1	; 7
	sbi(DDRD,7);//digital 38 sleep
     392:	57 9a       	sbi	0x0a, 7	; 10
	sbi(DDRG,1);//digital 40 nf, see drv8313
     394:	99 9a       	sbi	0x13, 1	; 19
	
	sbi(PORTC,5);//sleep HIGH
     396:	45 9a       	sbi	0x08, 5	; 8
	sbi(PORTC,3);//nf HIGH
     398:	43 9a       	sbi	0x08, 3	; 8
	sbi(PORTC,1);//EN1 HIGH
     39a:	41 9a       	sbi	0x08, 1	; 8
	sbi(PORTD,7);//EN2 HIGH
     39c:	5f 9a       	sbi	0x0b, 7	; 11
	sbi(PORTG,1);//EN3 HIGH
     39e:	a1 9a       	sbi	0x14, 1	; 20
     3a0:	08 95       	ret

000003a2 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     3a2:	4f 92       	push	r4
     3a4:	5f 92       	push	r5
     3a6:	6f 92       	push	r6
     3a8:	7f 92       	push	r7
     3aa:	8f 92       	push	r8
     3ac:	9f 92       	push	r9
     3ae:	af 92       	push	r10
     3b0:	bf 92       	push	r11
     3b2:	cf 92       	push	r12
     3b4:	df 92       	push	r13
     3b6:	ef 92       	push	r14
     3b8:	ff 92       	push	r15
     3ba:	0f 93       	push	r16
     3bc:	1f 93       	push	r17
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	cd b7       	in	r28, 0x3d	; 61
     3c4:	de b7       	in	r29, 0x3e	; 62
     3c6:	6c 97       	sbiw	r28, 0x1c	; 28
     3c8:	0f b6       	in	r0, 0x3f	; 63
     3ca:	f8 94       	cli
     3cc:	de bf       	out	0x3e, r29	; 62
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	cd bf       	out	0x3d, r28	; 61
     3d2:	69 8b       	std	Y+17, r22	; 0x11
     3d4:	7a 8b       	std	Y+18, r23	; 0x12
     3d6:	8b 8b       	std	Y+19, r24	; 0x13
     3d8:	9c 8b       	std	Y+20, r25	; 0x14
     3da:	ca 01       	movw	r24, r20
     3dc:	b9 01       	movw	r22, r18
     3de:	e9 82       	std	Y+1, r14	; 0x01
     3e0:	fa 82       	std	Y+2, r15	; 0x02
     3e2:	0b 83       	std	Y+3, r16	; 0x03
     3e4:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     3e6:	c0 90 e7 03 	lds	r12, 0x03E7	; 0x8003e7 <bias>
     3ea:	d0 90 e8 03 	lds	r13, 0x03E8	; 0x8003e8 <bias+0x1>
     3ee:	e0 90 e9 03 	lds	r14, 0x03E9	; 0x8003e9 <bias+0x2>
     3f2:	f0 90 ea 03 	lds	r15, 0x03EA	; 0x8003ea <bias+0x3>
     3f6:	a7 01       	movw	r20, r14
     3f8:	96 01       	movw	r18, r12
     3fa:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     3fe:	60 93 df 03 	sts	0x03DF, r22	; 0x8003df <rate>
     402:	70 93 e0 03 	sts	0x03E0, r23	; 0x8003e0 <rate+0x1>
     406:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <rate+0x2>
     40a:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <rate+0x3>
	angle += dt * rate;
     40e:	29 81       	ldd	r18, Y+1	; 0x01
     410:	3a 81       	ldd	r19, Y+2	; 0x02
     412:	4b 81       	ldd	r20, Y+3	; 0x03
     414:	5c 81       	ldd	r21, Y+4	; 0x04
     416:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     41a:	20 91 0b 04 	lds	r18, 0x040B	; 0x80040b <angle>
     41e:	30 91 0c 04 	lds	r19, 0x040C	; 0x80040c <angle+0x1>
     422:	40 91 0d 04 	lds	r20, 0x040D	; 0x80040d <angle+0x2>
     426:	50 91 0e 04 	lds	r21, 0x040E	; 0x80040e <angle+0x3>
     42a:	0e 94 89 0b 	call	0x1712	; 0x1712 <__addsf3>
     42e:	6d 8b       	std	Y+21, r22	; 0x15
     430:	7e 8b       	std	Y+22, r23	; 0x16
     432:	8f 8b       	std	Y+23, r24	; 0x17
     434:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     436:	80 90 23 04 	lds	r8, 0x0423	; 0x800423 <P+0xc>
     43a:	90 90 24 04 	lds	r9, 0x0424	; 0x800424 <P+0xd>
     43e:	a0 90 25 04 	lds	r10, 0x0425	; 0x800425 <P+0xe>
     442:	b0 90 26 04 	lds	r11, 0x0426	; 0x800426 <P+0xf>
     446:	a5 01       	movw	r20, r10
     448:	94 01       	movw	r18, r8
     44a:	69 81       	ldd	r22, Y+1	; 0x01
     44c:	7a 81       	ldd	r23, Y+2	; 0x02
     44e:	8b 81       	ldd	r24, Y+3	; 0x03
     450:	9c 81       	ldd	r25, Y+4	; 0x04
     452:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     456:	6d 83       	std	Y+5, r22	; 0x05
     458:	7e 83       	std	Y+6, r23	; 0x06
     45a:	8f 83       	std	Y+7, r24	; 0x07
     45c:	98 87       	std	Y+8, r25	; 0x08
     45e:	40 90 1b 04 	lds	r4, 0x041B	; 0x80041b <P+0x4>
     462:	50 90 1c 04 	lds	r5, 0x041C	; 0x80041c <P+0x5>
     466:	60 90 1d 04 	lds	r6, 0x041D	; 0x80041d <P+0x6>
     46a:	70 90 1e 04 	lds	r7, 0x041E	; 0x80041e <P+0x7>
     46e:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <P+0x8>
     472:	90 91 20 04 	lds	r25, 0x0420	; 0x800420 <P+0x9>
     476:	a0 91 21 04 	lds	r26, 0x0421	; 0x800421 <P+0xa>
     47a:	b0 91 22 04 	lds	r27, 0x0422	; 0x800422 <P+0xb>
     47e:	8d 87       	std	Y+13, r24	; 0x0d
     480:	9e 87       	std	Y+14, r25	; 0x0e
     482:	af 87       	std	Y+15, r26	; 0x0f
     484:	b8 8b       	std	Y+16, r27	; 0x10
     486:	a3 01       	movw	r20, r6
     488:	92 01       	movw	r18, r4
     48a:	6d 81       	ldd	r22, Y+5	; 0x05
     48c:	7e 81       	ldd	r23, Y+6	; 0x06
     48e:	8f 81       	ldd	r24, Y+7	; 0x07
     490:	98 85       	ldd	r25, Y+8	; 0x08
     492:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     496:	2d 85       	ldd	r18, Y+13	; 0x0d
     498:	3e 85       	ldd	r19, Y+14	; 0x0e
     49a:	4f 85       	ldd	r20, Y+15	; 0x0f
     49c:	58 89       	ldd	r21, Y+16	; 0x10
     49e:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     4a2:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <Q_angle>
     4a6:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <Q_angle+0x1>
     4aa:	40 91 e5 03 	lds	r20, 0x03E5	; 0x8003e5 <Q_angle+0x2>
     4ae:	50 91 e6 03 	lds	r21, 0x03E6	; 0x8003e6 <Q_angle+0x3>
     4b2:	0e 94 89 0b 	call	0x1712	; 0x1712 <__addsf3>
     4b6:	29 81       	ldd	r18, Y+1	; 0x01
     4b8:	3a 81       	ldd	r19, Y+2	; 0x02
     4ba:	4b 81       	ldd	r20, Y+3	; 0x03
     4bc:	5c 81       	ldd	r21, Y+4	; 0x04
     4be:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     4c2:	a7 e1       	ldi	r26, 0x17	; 23
     4c4:	b4 e0       	ldi	r27, 0x04	; 4
     4c6:	2d 91       	ld	r18, X+
     4c8:	3d 91       	ld	r19, X+
     4ca:	4d 91       	ld	r20, X+
     4cc:	5c 91       	ld	r21, X
     4ce:	0e 94 89 0b 	call	0x1712	; 0x1712 <__addsf3>
     4d2:	69 87       	std	Y+9, r22	; 0x09
     4d4:	7a 87       	std	Y+10, r23	; 0x0a
     4d6:	8b 87       	std	Y+11, r24	; 0x0b
     4d8:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     4da:	2d 81       	ldd	r18, Y+5	; 0x05
     4dc:	3e 81       	ldd	r19, Y+6	; 0x06
     4de:	4f 81       	ldd	r20, Y+7	; 0x07
     4e0:	58 85       	ldd	r21, Y+8	; 0x08
     4e2:	c3 01       	movw	r24, r6
     4e4:	b2 01       	movw	r22, r4
     4e6:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     4ea:	2b 01       	movw	r4, r22
     4ec:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     4ee:	2d 81       	ldd	r18, Y+5	; 0x05
     4f0:	3e 81       	ldd	r19, Y+6	; 0x06
     4f2:	4f 81       	ldd	r20, Y+7	; 0x07
     4f4:	58 85       	ldd	r21, Y+8	; 0x08
     4f6:	6d 85       	ldd	r22, Y+13	; 0x0d
     4f8:	7e 85       	ldd	r23, Y+14	; 0x0e
     4fa:	8f 85       	ldd	r24, Y+15	; 0x0f
     4fc:	98 89       	ldd	r25, Y+16	; 0x10
     4fe:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     502:	6d 87       	std	Y+13, r22	; 0x0d
     504:	7e 87       	std	Y+14, r23	; 0x0e
     506:	8f 87       	std	Y+15, r24	; 0x0f
     508:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     50a:	20 91 db 03 	lds	r18, 0x03DB	; 0x8003db <Q_bias>
     50e:	30 91 dc 03 	lds	r19, 0x03DC	; 0x8003dc <Q_bias+0x1>
     512:	40 91 dd 03 	lds	r20, 0x03DD	; 0x8003dd <Q_bias+0x2>
     516:	50 91 de 03 	lds	r21, 0x03DE	; 0x8003de <Q_bias+0x3>
     51a:	69 81       	ldd	r22, Y+1	; 0x01
     51c:	7a 81       	ldd	r23, Y+2	; 0x02
     51e:	8b 81       	ldd	r24, Y+3	; 0x03
     520:	9c 81       	ldd	r25, Y+4	; 0x04
     522:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     526:	a5 01       	movw	r20, r10
     528:	94 01       	movw	r18, r8
     52a:	0e 94 89 0b 	call	0x1712	; 0x1712 <__addsf3>
     52e:	69 8f       	std	Y+25, r22	; 0x19
     530:	7a 8f       	std	Y+26, r23	; 0x1a
     532:	8b 8f       	std	Y+27, r24	; 0x1b
     534:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     536:	20 91 03 04 	lds	r18, 0x0403	; 0x800403 <R_measure>
     53a:	30 91 04 04 	lds	r19, 0x0404	; 0x800404 <R_measure+0x1>
     53e:	40 91 05 04 	lds	r20, 0x0405	; 0x800405 <R_measure+0x2>
     542:	50 91 06 04 	lds	r21, 0x0406	; 0x800406 <R_measure+0x3>
     546:	69 85       	ldd	r22, Y+9	; 0x09
     548:	7a 85       	ldd	r23, Y+10	; 0x0a
     54a:	8b 85       	ldd	r24, Y+11	; 0x0b
     54c:	9c 85       	ldd	r25, Y+12	; 0x0c
     54e:	0e 94 89 0b 	call	0x1712	; 0x1712 <__addsf3>
     552:	4b 01       	movw	r8, r22
     554:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     556:	9b 01       	movw	r18, r22
     558:	ac 01       	movw	r20, r24
     55a:	69 85       	ldd	r22, Y+9	; 0x09
     55c:	7a 85       	ldd	r23, Y+10	; 0x0a
     55e:	8b 85       	ldd	r24, Y+11	; 0x0b
     560:	9c 85       	ldd	r25, Y+12	; 0x0c
     562:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <__divsf3>
     566:	69 83       	std	Y+1, r22	; 0x01
     568:	7a 83       	std	Y+2, r23	; 0x02
     56a:	8b 83       	std	Y+3, r24	; 0x03
     56c:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     56e:	a5 01       	movw	r20, r10
     570:	94 01       	movw	r18, r8
     572:	6d 85       	ldd	r22, Y+13	; 0x0d
     574:	7e 85       	ldd	r23, Y+14	; 0x0e
     576:	8f 85       	ldd	r24, Y+15	; 0x0f
     578:	98 89       	ldd	r25, Y+16	; 0x10
     57a:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <__divsf3>
     57e:	6d 83       	std	Y+5, r22	; 0x05
     580:	7e 83       	std	Y+6, r23	; 0x06
     582:	8f 83       	std	Y+7, r24	; 0x07
     584:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     586:	2d 89       	ldd	r18, Y+21	; 0x15
     588:	3e 89       	ldd	r19, Y+22	; 0x16
     58a:	4f 89       	ldd	r20, Y+23	; 0x17
     58c:	58 8d       	ldd	r21, Y+24	; 0x18
     58e:	69 89       	ldd	r22, Y+17	; 0x11
     590:	7a 89       	ldd	r23, Y+18	; 0x12
     592:	8b 89       	ldd	r24, Y+19	; 0x13
     594:	9c 89       	ldd	r25, Y+20	; 0x14
     596:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     59a:	69 8b       	std	Y+17, r22	; 0x11
     59c:	7a 8b       	std	Y+18, r23	; 0x12
     59e:	8b 8b       	std	Y+19, r24	; 0x13
     5a0:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     5a2:	9b 01       	movw	r18, r22
     5a4:	ac 01       	movw	r20, r24
     5a6:	69 81       	ldd	r22, Y+1	; 0x01
     5a8:	7a 81       	ldd	r23, Y+2	; 0x02
     5aa:	8b 81       	ldd	r24, Y+3	; 0x03
     5ac:	9c 81       	ldd	r25, Y+4	; 0x04
     5ae:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     5b2:	2d 89       	ldd	r18, Y+21	; 0x15
     5b4:	3e 89       	ldd	r19, Y+22	; 0x16
     5b6:	4f 89       	ldd	r20, Y+23	; 0x17
     5b8:	58 8d       	ldd	r21, Y+24	; 0x18
     5ba:	0e 94 89 0b 	call	0x1712	; 0x1712 <__addsf3>
     5be:	4b 01       	movw	r8, r22
     5c0:	5c 01       	movw	r10, r24
     5c2:	60 93 0b 04 	sts	0x040B, r22	; 0x80040b <angle>
     5c6:	70 93 0c 04 	sts	0x040C, r23	; 0x80040c <angle+0x1>
     5ca:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <angle+0x2>
     5ce:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <angle+0x3>
	bias += K[1] * y;
     5d2:	29 89       	ldd	r18, Y+17	; 0x11
     5d4:	3a 89       	ldd	r19, Y+18	; 0x12
     5d6:	4b 89       	ldd	r20, Y+19	; 0x13
     5d8:	5c 89       	ldd	r21, Y+20	; 0x14
     5da:	6d 81       	ldd	r22, Y+5	; 0x05
     5dc:	7e 81       	ldd	r23, Y+6	; 0x06
     5de:	8f 81       	ldd	r24, Y+7	; 0x07
     5e0:	98 85       	ldd	r25, Y+8	; 0x08
     5e2:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     5e6:	a7 01       	movw	r20, r14
     5e8:	96 01       	movw	r18, r12
     5ea:	0e 94 89 0b 	call	0x1712	; 0x1712 <__addsf3>
     5ee:	60 93 e7 03 	sts	0x03E7, r22	; 0x8003e7 <bias>
     5f2:	70 93 e8 03 	sts	0x03E8, r23	; 0x8003e8 <bias+0x1>
     5f6:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <bias+0x2>
     5fa:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     5fe:	29 81       	ldd	r18, Y+1	; 0x01
     600:	3a 81       	ldd	r19, Y+2	; 0x02
     602:	4b 81       	ldd	r20, Y+3	; 0x03
     604:	5c 81       	ldd	r21, Y+4	; 0x04
     606:	69 85       	ldd	r22, Y+9	; 0x09
     608:	7a 85       	ldd	r23, Y+10	; 0x0a
     60a:	8b 85       	ldd	r24, Y+11	; 0x0b
     60c:	9c 85       	ldd	r25, Y+12	; 0x0c
     60e:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     612:	9b 01       	movw	r18, r22
     614:	ac 01       	movw	r20, r24
     616:	69 85       	ldd	r22, Y+9	; 0x09
     618:	7a 85       	ldd	r23, Y+10	; 0x0a
     61a:	8b 85       	ldd	r24, Y+11	; 0x0b
     61c:	9c 85       	ldd	r25, Y+12	; 0x0c
     61e:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     622:	e7 e1       	ldi	r30, 0x17	; 23
     624:	f4 e0       	ldi	r31, 0x04	; 4
     626:	60 83       	st	Z, r22
     628:	71 83       	std	Z+1, r23	; 0x01
     62a:	82 83       	std	Z+2, r24	; 0x02
     62c:	93 83       	std	Z+3, r25	; 0x03
	P[0][1] -= K[0] * P01_temp;
     62e:	29 81       	ldd	r18, Y+1	; 0x01
     630:	3a 81       	ldd	r19, Y+2	; 0x02
     632:	4b 81       	ldd	r20, Y+3	; 0x03
     634:	5c 81       	ldd	r21, Y+4	; 0x04
     636:	c3 01       	movw	r24, r6
     638:	b2 01       	movw	r22, r4
     63a:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     63e:	9b 01       	movw	r18, r22
     640:	ac 01       	movw	r20, r24
     642:	c3 01       	movw	r24, r6
     644:	b2 01       	movw	r22, r4
     646:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     64a:	60 93 1b 04 	sts	0x041B, r22	; 0x80041b <P+0x4>
     64e:	70 93 1c 04 	sts	0x041C, r23	; 0x80041c <P+0x5>
     652:	80 93 1d 04 	sts	0x041D, r24	; 0x80041d <P+0x6>
     656:	90 93 1e 04 	sts	0x041E, r25	; 0x80041e <P+0x7>
	P[1][0] -= K[1] * P00_temp;
     65a:	2d 81       	ldd	r18, Y+5	; 0x05
     65c:	3e 81       	ldd	r19, Y+6	; 0x06
     65e:	4f 81       	ldd	r20, Y+7	; 0x07
     660:	58 85       	ldd	r21, Y+8	; 0x08
     662:	69 85       	ldd	r22, Y+9	; 0x09
     664:	7a 85       	ldd	r23, Y+10	; 0x0a
     666:	8b 85       	ldd	r24, Y+11	; 0x0b
     668:	9c 85       	ldd	r25, Y+12	; 0x0c
     66a:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     66e:	9b 01       	movw	r18, r22
     670:	ac 01       	movw	r20, r24
     672:	6d 85       	ldd	r22, Y+13	; 0x0d
     674:	7e 85       	ldd	r23, Y+14	; 0x0e
     676:	8f 85       	ldd	r24, Y+15	; 0x0f
     678:	98 89       	ldd	r25, Y+16	; 0x10
     67a:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     67e:	60 93 1f 04 	sts	0x041F, r22	; 0x80041f <P+0x8>
     682:	70 93 20 04 	sts	0x0420, r23	; 0x800420 <P+0x9>
     686:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <P+0xa>
     68a:	90 93 22 04 	sts	0x0422, r25	; 0x800422 <P+0xb>
	P[1][1] -= K[1] * P01_temp;
     68e:	2d 81       	ldd	r18, Y+5	; 0x05
     690:	3e 81       	ldd	r19, Y+6	; 0x06
     692:	4f 81       	ldd	r20, Y+7	; 0x07
     694:	58 85       	ldd	r21, Y+8	; 0x08
     696:	c3 01       	movw	r24, r6
     698:	b2 01       	movw	r22, r4
     69a:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     69e:	9b 01       	movw	r18, r22
     6a0:	ac 01       	movw	r20, r24
     6a2:	69 8d       	ldd	r22, Y+25	; 0x19
     6a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     6a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     6a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6aa:	0e 94 88 0b 	call	0x1710	; 0x1710 <__subsf3>
     6ae:	60 93 23 04 	sts	0x0423, r22	; 0x800423 <P+0xc>
     6b2:	70 93 24 04 	sts	0x0424, r23	; 0x800424 <P+0xd>
     6b6:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <P+0xe>
     6ba:	90 93 26 04 	sts	0x0426, r25	; 0x800426 <P+0xf>

	return angle;
};
     6be:	c5 01       	movw	r24, r10
     6c0:	b4 01       	movw	r22, r8
     6c2:	6c 96       	adiw	r28, 0x1c	; 28
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	f8 94       	cli
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	0f be       	out	0x3f, r0	; 63
     6cc:	cd bf       	out	0x3d, r28	; 61
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	1f 91       	pop	r17
     6d4:	0f 91       	pop	r16
     6d6:	ff 90       	pop	r15
     6d8:	ef 90       	pop	r14
     6da:	df 90       	pop	r13
     6dc:	cf 90       	pop	r12
     6de:	bf 90       	pop	r11
     6e0:	af 90       	pop	r10
     6e2:	9f 90       	pop	r9
     6e4:	8f 90       	pop	r8
     6e6:	7f 90       	pop	r7
     6e8:	6f 90       	pop	r6
     6ea:	5f 90       	pop	r5
     6ec:	4f 90       	pop	r4
     6ee:	08 95       	ret

000006f0 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     6f0:	8f e6       	ldi	r24, 0x6F	; 111
     6f2:	92 e1       	ldi	r25, 0x12	; 18
     6f4:	a3 e8       	ldi	r26, 0x83	; 131
     6f6:	ba e3       	ldi	r27, 0x3A	; 58
     6f8:	80 93 e3 03 	sts	0x03E3, r24	; 0x8003e3 <Q_angle>
     6fc:	90 93 e4 03 	sts	0x03E4, r25	; 0x8003e4 <Q_angle+0x1>
     700:	a0 93 e5 03 	sts	0x03E5, r26	; 0x8003e5 <Q_angle+0x2>
     704:	b0 93 e6 03 	sts	0x03E6, r27	; 0x8003e6 <Q_angle+0x3>
	Q_bias = 0.003f;
     708:	86 ea       	ldi	r24, 0xA6	; 166
     70a:	9b e9       	ldi	r25, 0x9B	; 155
     70c:	a4 e4       	ldi	r26, 0x44	; 68
     70e:	bb e3       	ldi	r27, 0x3B	; 59
     710:	80 93 db 03 	sts	0x03DB, r24	; 0x8003db <Q_bias>
     714:	90 93 dc 03 	sts	0x03DC, r25	; 0x8003dc <Q_bias+0x1>
     718:	a0 93 dd 03 	sts	0x03DD, r26	; 0x8003dd <Q_bias+0x2>
     71c:	b0 93 de 03 	sts	0x03DE, r27	; 0x8003de <Q_bias+0x3>
	R_measure = 0.03f;
     720:	8f e8       	ldi	r24, 0x8F	; 143
     722:	92 ec       	ldi	r25, 0xC2	; 194
     724:	a5 ef       	ldi	r26, 0xF5	; 245
     726:	bc e3       	ldi	r27, 0x3C	; 60
     728:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <R_measure>
     72c:	90 93 04 04 	sts	0x0404, r25	; 0x800404 <R_measure+0x1>
     730:	a0 93 05 04 	sts	0x0405, r26	; 0x800405 <R_measure+0x2>
     734:	b0 93 06 04 	sts	0x0406, r27	; 0x800406 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     738:	10 92 0b 04 	sts	0x040B, r1	; 0x80040b <angle>
     73c:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <angle+0x1>
     740:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <angle+0x2>
     744:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <angle+0x3>
	bias = 0.0f; // Reset bias
     748:	10 92 e7 03 	sts	0x03E7, r1	; 0x8003e7 <bias>
     74c:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <bias+0x1>
     750:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <bias+0x2>
     754:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     758:	e7 e1       	ldi	r30, 0x17	; 23
     75a:	f4 e0       	ldi	r31, 0x04	; 4
     75c:	10 82       	st	Z, r1
     75e:	11 82       	std	Z+1, r1	; 0x01
     760:	12 82       	std	Z+2, r1	; 0x02
     762:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     764:	14 82       	std	Z+4, r1	; 0x04
     766:	15 82       	std	Z+5, r1	; 0x05
     768:	16 82       	std	Z+6, r1	; 0x06
     76a:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     76c:	10 86       	std	Z+8, r1	; 0x08
     76e:	11 86       	std	Z+9, r1	; 0x09
     770:	12 86       	std	Z+10, r1	; 0x0a
     772:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     774:	14 86       	std	Z+12, r1	; 0x0c
     776:	15 86       	std	Z+13, r1	; 0x0d
     778:	16 86       	std	Z+14, r1	; 0x0e
     77a:	17 86       	std	Z+15, r1	; 0x0f
     77c:	08 95       	ret

0000077e <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     77e:	4f 92       	push	r4
     780:	5f 92       	push	r5
     782:	6f 92       	push	r6
     784:	7f 92       	push	r7
     786:	8f 92       	push	r8
     788:	9f 92       	push	r9
     78a:	af 92       	push	r10
     78c:	bf 92       	push	r11
     78e:	cf 92       	push	r12
     790:	df 92       	push	r13
     792:	ef 92       	push	r14
     794:	ff 92       	push	r15
     796:	0f 93       	push	r16
     798:	1f 93       	push	r17
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	cd b7       	in	r28, 0x3d	; 61
     7a0:	de b7       	in	r29, 0x3e	; 62
     7a2:	6c 97       	sbiw	r28, 0x1c	; 28
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	69 8b       	std	Y+17, r22	; 0x11
     7b0:	7a 8b       	std	Y+18, r23	; 0x12
     7b2:	8b 8b       	std	Y+19, r24	; 0x13
     7b4:	9c 8b       	std	Y+20, r25	; 0x14
     7b6:	ca 01       	movw	r24, r20
     7b8:	b9 01       	movw	r22, r18
     7ba:	e9 82       	std	Y+1, r14	; 0x01
     7bc:	fa 82       	std	Y+2, r15	; 0x02
     7be:	0b 83       	std	Y+3, r16	; 0x03
     7c0:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     7c2:	c0 90 07 04 	lds	r12, 0x0407	; 0x800407 <bias_1>
     7c6:	d0 90 08 04 	lds	r13, 0x0408	; 0x800408 <bias_1+0x1>
     7ca:	e0 90 09 04 	lds	r14, 0x0409	; 0x800409 <bias_1+0x2>
     7ce:	f0 90 0a 04 	lds	r15, 0x040A	; 0x80040a <bias_1+0x3>
     7d2:	a7 01       	movw	r20, r14
     7d4:	96 01       	movw	r18, r12
     7d6:	9c d7       	rcall	.+3896   	; 0x1710 <__subsf3>
     7d8:	60 93 ff 03 	sts	0x03FF, r22	; 0x8003ff <rate_1>
     7dc:	70 93 00 04 	sts	0x0400, r23	; 0x800400 <rate_1+0x1>
     7e0:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <rate_1+0x2>
     7e4:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <rate_1+0x3>
	angle_1 += dt * rate_1;
     7e8:	29 81       	ldd	r18, Y+1	; 0x01
     7ea:	3a 81       	ldd	r19, Y+2	; 0x02
     7ec:	4b 81       	ldd	r20, Y+3	; 0x03
     7ee:	5c 81       	ldd	r21, Y+4	; 0x04
     7f0:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     7f4:	20 91 eb 03 	lds	r18, 0x03EB	; 0x8003eb <angle_1>
     7f8:	30 91 ec 03 	lds	r19, 0x03EC	; 0x8003ec <angle_1+0x1>
     7fc:	40 91 ed 03 	lds	r20, 0x03ED	; 0x8003ed <angle_1+0x2>
     800:	50 91 ee 03 	lds	r21, 0x03EE	; 0x8003ee <angle_1+0x3>
     804:	86 d7       	rcall	.+3852   	; 0x1712 <__addsf3>
     806:	6d 8b       	std	Y+21, r22	; 0x15
     808:	7e 8b       	std	Y+22, r23	; 0x16
     80a:	8f 8b       	std	Y+23, r24	; 0x17
     80c:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     80e:	80 90 fb 03 	lds	r8, 0x03FB	; 0x8003fb <P_1+0xc>
     812:	90 90 fc 03 	lds	r9, 0x03FC	; 0x8003fc <P_1+0xd>
     816:	a0 90 fd 03 	lds	r10, 0x03FD	; 0x8003fd <P_1+0xe>
     81a:	b0 90 fe 03 	lds	r11, 0x03FE	; 0x8003fe <P_1+0xf>
     81e:	a5 01       	movw	r20, r10
     820:	94 01       	movw	r18, r8
     822:	69 81       	ldd	r22, Y+1	; 0x01
     824:	7a 81       	ldd	r23, Y+2	; 0x02
     826:	8b 81       	ldd	r24, Y+3	; 0x03
     828:	9c 81       	ldd	r25, Y+4	; 0x04
     82a:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     82e:	6d 83       	std	Y+5, r22	; 0x05
     830:	7e 83       	std	Y+6, r23	; 0x06
     832:	8f 83       	std	Y+7, r24	; 0x07
     834:	98 87       	std	Y+8, r25	; 0x08
     836:	40 90 f3 03 	lds	r4, 0x03F3	; 0x8003f3 <P_1+0x4>
     83a:	50 90 f4 03 	lds	r5, 0x03F4	; 0x8003f4 <P_1+0x5>
     83e:	60 90 f5 03 	lds	r6, 0x03F5	; 0x8003f5 <P_1+0x6>
     842:	70 90 f6 03 	lds	r7, 0x03F6	; 0x8003f6 <P_1+0x7>
     846:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <P_1+0x8>
     84a:	90 91 f8 03 	lds	r25, 0x03F8	; 0x8003f8 <P_1+0x9>
     84e:	a0 91 f9 03 	lds	r26, 0x03F9	; 0x8003f9 <P_1+0xa>
     852:	b0 91 fa 03 	lds	r27, 0x03FA	; 0x8003fa <P_1+0xb>
     856:	8d 87       	std	Y+13, r24	; 0x0d
     858:	9e 87       	std	Y+14, r25	; 0x0e
     85a:	af 87       	std	Y+15, r26	; 0x0f
     85c:	b8 8b       	std	Y+16, r27	; 0x10
     85e:	a3 01       	movw	r20, r6
     860:	92 01       	movw	r18, r4
     862:	6d 81       	ldd	r22, Y+5	; 0x05
     864:	7e 81       	ldd	r23, Y+6	; 0x06
     866:	8f 81       	ldd	r24, Y+7	; 0x07
     868:	98 85       	ldd	r25, Y+8	; 0x08
     86a:	52 d7       	rcall	.+3748   	; 0x1710 <__subsf3>
     86c:	2d 85       	ldd	r18, Y+13	; 0x0d
     86e:	3e 85       	ldd	r19, Y+14	; 0x0e
     870:	4f 85       	ldd	r20, Y+15	; 0x0f
     872:	58 89       	ldd	r21, Y+16	; 0x10
     874:	4d d7       	rcall	.+3738   	; 0x1710 <__subsf3>
     876:	20 91 27 04 	lds	r18, 0x0427	; 0x800427 <Q_angle_1>
     87a:	30 91 28 04 	lds	r19, 0x0428	; 0x800428 <Q_angle_1+0x1>
     87e:	40 91 29 04 	lds	r20, 0x0429	; 0x800429 <Q_angle_1+0x2>
     882:	50 91 2a 04 	lds	r21, 0x042A	; 0x80042a <Q_angle_1+0x3>
     886:	45 d7       	rcall	.+3722   	; 0x1712 <__addsf3>
     888:	29 81       	ldd	r18, Y+1	; 0x01
     88a:	3a 81       	ldd	r19, Y+2	; 0x02
     88c:	4b 81       	ldd	r20, Y+3	; 0x03
     88e:	5c 81       	ldd	r21, Y+4	; 0x04
     890:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     894:	af ee       	ldi	r26, 0xEF	; 239
     896:	b3 e0       	ldi	r27, 0x03	; 3
     898:	2d 91       	ld	r18, X+
     89a:	3d 91       	ld	r19, X+
     89c:	4d 91       	ld	r20, X+
     89e:	5c 91       	ld	r21, X
     8a0:	38 d7       	rcall	.+3696   	; 0x1712 <__addsf3>
     8a2:	69 87       	std	Y+9, r22	; 0x09
     8a4:	7a 87       	std	Y+10, r23	; 0x0a
     8a6:	8b 87       	std	Y+11, r24	; 0x0b
	P_1[0][1] -= dt * P_1[1][1];
     8a8:	9c 87       	std	Y+12, r25	; 0x0c
     8aa:	2d 81       	ldd	r18, Y+5	; 0x05
     8ac:	3e 81       	ldd	r19, Y+6	; 0x06
     8ae:	4f 81       	ldd	r20, Y+7	; 0x07
     8b0:	58 85       	ldd	r21, Y+8	; 0x08
     8b2:	c3 01       	movw	r24, r6
     8b4:	b2 01       	movw	r22, r4
     8b6:	2c d7       	rcall	.+3672   	; 0x1710 <__subsf3>
     8b8:	2b 01       	movw	r4, r22
	P_1[1][0] -= dt * P_1[1][1];
     8ba:	3c 01       	movw	r6, r24
     8bc:	2d 81       	ldd	r18, Y+5	; 0x05
     8be:	3e 81       	ldd	r19, Y+6	; 0x06
     8c0:	4f 81       	ldd	r20, Y+7	; 0x07
     8c2:	58 85       	ldd	r21, Y+8	; 0x08
     8c4:	6d 85       	ldd	r22, Y+13	; 0x0d
     8c6:	7e 85       	ldd	r23, Y+14	; 0x0e
     8c8:	8f 85       	ldd	r24, Y+15	; 0x0f
     8ca:	98 89       	ldd	r25, Y+16	; 0x10
     8cc:	21 d7       	rcall	.+3650   	; 0x1710 <__subsf3>
     8ce:	6d 87       	std	Y+13, r22	; 0x0d
     8d0:	7e 87       	std	Y+14, r23	; 0x0e
     8d2:	8f 87       	std	Y+15, r24	; 0x0f
	P_1[1][1] += Q_bias_1 * dt;
     8d4:	98 8b       	std	Y+16, r25	; 0x10
     8d6:	20 91 13 04 	lds	r18, 0x0413	; 0x800413 <Q_bias_1>
     8da:	30 91 14 04 	lds	r19, 0x0414	; 0x800414 <Q_bias_1+0x1>
     8de:	40 91 15 04 	lds	r20, 0x0415	; 0x800415 <Q_bias_1+0x2>
     8e2:	50 91 16 04 	lds	r21, 0x0416	; 0x800416 <Q_bias_1+0x3>
     8e6:	69 81       	ldd	r22, Y+1	; 0x01
     8e8:	7a 81       	ldd	r23, Y+2	; 0x02
     8ea:	8b 81       	ldd	r24, Y+3	; 0x03
     8ec:	9c 81       	ldd	r25, Y+4	; 0x04
     8ee:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     8f2:	a5 01       	movw	r20, r10
     8f4:	94 01       	movw	r18, r8
     8f6:	0d d7       	rcall	.+3610   	; 0x1712 <__addsf3>
     8f8:	69 8f       	std	Y+25, r22	; 0x19
     8fa:	7a 8f       	std	Y+26, r23	; 0x1a
     8fc:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     8fe:	9c 8f       	std	Y+28, r25	; 0x1c
     900:	20 91 0f 04 	lds	r18, 0x040F	; 0x80040f <R_measure_1>
     904:	30 91 10 04 	lds	r19, 0x0410	; 0x800410 <R_measure_1+0x1>
     908:	40 91 11 04 	lds	r20, 0x0411	; 0x800411 <R_measure_1+0x2>
     90c:	50 91 12 04 	lds	r21, 0x0412	; 0x800412 <R_measure_1+0x3>
     910:	69 85       	ldd	r22, Y+9	; 0x09
     912:	7a 85       	ldd	r23, Y+10	; 0x0a
     914:	8b 85       	ldd	r24, Y+11	; 0x0b
     916:	9c 85       	ldd	r25, Y+12	; 0x0c
     918:	fc d6       	rcall	.+3576   	; 0x1712 <__addsf3>
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     91a:	4b 01       	movw	r8, r22
     91c:	5c 01       	movw	r10, r24
     91e:	9b 01       	movw	r18, r22
     920:	ac 01       	movw	r20, r24
     922:	69 85       	ldd	r22, Y+9	; 0x09
     924:	7a 85       	ldd	r23, Y+10	; 0x0a
     926:	8b 85       	ldd	r24, Y+11	; 0x0b
     928:	9c 85       	ldd	r25, Y+12	; 0x0c
     92a:	bd d7       	rcall	.+3962   	; 0x18a6 <__divsf3>
     92c:	69 83       	std	Y+1, r22	; 0x01
     92e:	7a 83       	std	Y+2, r23	; 0x02
	K_1[1] = P_1[1][0] / S_1;
     930:	8b 83       	std	Y+3, r24	; 0x03
     932:	9c 83       	std	Y+4, r25	; 0x04
     934:	a5 01       	movw	r20, r10
     936:	94 01       	movw	r18, r8
     938:	6d 85       	ldd	r22, Y+13	; 0x0d
     93a:	7e 85       	ldd	r23, Y+14	; 0x0e
     93c:	8f 85       	ldd	r24, Y+15	; 0x0f
     93e:	98 89       	ldd	r25, Y+16	; 0x10
     940:	b2 d7       	rcall	.+3940   	; 0x18a6 <__divsf3>
     942:	6d 83       	std	Y+5, r22	; 0x05
     944:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     946:	8f 83       	std	Y+7, r24	; 0x07
     948:	98 87       	std	Y+8, r25	; 0x08
     94a:	2d 89       	ldd	r18, Y+21	; 0x15
     94c:	3e 89       	ldd	r19, Y+22	; 0x16
     94e:	4f 89       	ldd	r20, Y+23	; 0x17
     950:	58 8d       	ldd	r21, Y+24	; 0x18
     952:	69 89       	ldd	r22, Y+17	; 0x11
     954:	7a 89       	ldd	r23, Y+18	; 0x12
     956:	8b 89       	ldd	r24, Y+19	; 0x13
     958:	9c 89       	ldd	r25, Y+20	; 0x14
     95a:	da d6       	rcall	.+3508   	; 0x1710 <__subsf3>
     95c:	69 8b       	std	Y+17, r22	; 0x11
     95e:	7a 8b       	std	Y+18, r23	; 0x12
     960:	8b 8b       	std	Y+19, r24	; 0x13
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     962:	9c 8b       	std	Y+20, r25	; 0x14
     964:	9b 01       	movw	r18, r22
     966:	ac 01       	movw	r20, r24
     968:	69 81       	ldd	r22, Y+1	; 0x01
     96a:	7a 81       	ldd	r23, Y+2	; 0x02
     96c:	8b 81       	ldd	r24, Y+3	; 0x03
     96e:	9c 81       	ldd	r25, Y+4	; 0x04
     970:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     974:	2d 89       	ldd	r18, Y+21	; 0x15
     976:	3e 89       	ldd	r19, Y+22	; 0x16
     978:	4f 89       	ldd	r20, Y+23	; 0x17
     97a:	58 8d       	ldd	r21, Y+24	; 0x18
     97c:	ca d6       	rcall	.+3476   	; 0x1712 <__addsf3>
     97e:	4b 01       	movw	r8, r22
     980:	5c 01       	movw	r10, r24
     982:	60 93 eb 03 	sts	0x03EB, r22	; 0x8003eb <angle_1>
     986:	70 93 ec 03 	sts	0x03EC, r23	; 0x8003ec <angle_1+0x1>
     98a:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <angle_1+0x2>
	bias_1 += K_1[1] * y_1;
     98e:	90 93 ee 03 	sts	0x03EE, r25	; 0x8003ee <angle_1+0x3>
     992:	29 89       	ldd	r18, Y+17	; 0x11
     994:	3a 89       	ldd	r19, Y+18	; 0x12
     996:	4b 89       	ldd	r20, Y+19	; 0x13
     998:	5c 89       	ldd	r21, Y+20	; 0x14
     99a:	6d 81       	ldd	r22, Y+5	; 0x05
     99c:	7e 81       	ldd	r23, Y+6	; 0x06
     99e:	8f 81       	ldd	r24, Y+7	; 0x07
     9a0:	98 85       	ldd	r25, Y+8	; 0x08
     9a2:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     9a6:	a7 01       	movw	r20, r14
     9a8:	96 01       	movw	r18, r12
     9aa:	b3 d6       	rcall	.+3430   	; 0x1712 <__addsf3>
     9ac:	60 93 07 04 	sts	0x0407, r22	; 0x800407 <bias_1>
     9b0:	70 93 08 04 	sts	0x0408, r23	; 0x800408 <bias_1+0x1>
     9b4:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <bias_1+0x2>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     9b8:	90 93 0a 04 	sts	0x040A, r25	; 0x80040a <bias_1+0x3>
     9bc:	29 81       	ldd	r18, Y+1	; 0x01
     9be:	3a 81       	ldd	r19, Y+2	; 0x02
     9c0:	4b 81       	ldd	r20, Y+3	; 0x03
     9c2:	5c 81       	ldd	r21, Y+4	; 0x04
     9c4:	69 85       	ldd	r22, Y+9	; 0x09
     9c6:	7a 85       	ldd	r23, Y+10	; 0x0a
     9c8:	8b 85       	ldd	r24, Y+11	; 0x0b
     9ca:	9c 85       	ldd	r25, Y+12	; 0x0c
     9cc:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     9d0:	9b 01       	movw	r18, r22
     9d2:	ac 01       	movw	r20, r24
     9d4:	69 85       	ldd	r22, Y+9	; 0x09
     9d6:	7a 85       	ldd	r23, Y+10	; 0x0a
     9d8:	8b 85       	ldd	r24, Y+11	; 0x0b
     9da:	9c 85       	ldd	r25, Y+12	; 0x0c
     9dc:	99 d6       	rcall	.+3378   	; 0x1710 <__subsf3>
     9de:	ef ee       	ldi	r30, 0xEF	; 239
     9e0:	f3 e0       	ldi	r31, 0x03	; 3
     9e2:	60 83       	st	Z, r22
	P_1[0][1] -= K_1[0] * P01_temp_1;
     9e4:	71 83       	std	Z+1, r23	; 0x01
     9e6:	82 83       	std	Z+2, r24	; 0x02
     9e8:	93 83       	std	Z+3, r25	; 0x03
     9ea:	29 81       	ldd	r18, Y+1	; 0x01
     9ec:	3a 81       	ldd	r19, Y+2	; 0x02
     9ee:	4b 81       	ldd	r20, Y+3	; 0x03
     9f0:	5c 81       	ldd	r21, Y+4	; 0x04
     9f2:	c3 01       	movw	r24, r6
     9f4:	b2 01       	movw	r22, r4
     9f6:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     9fa:	9b 01       	movw	r18, r22
     9fc:	ac 01       	movw	r20, r24
     9fe:	c3 01       	movw	r24, r6
     a00:	b2 01       	movw	r22, r4
     a02:	86 d6       	rcall	.+3340   	; 0x1710 <__subsf3>
     a04:	60 93 f3 03 	sts	0x03F3, r22	; 0x8003f3 <P_1+0x4>
     a08:	70 93 f4 03 	sts	0x03F4, r23	; 0x8003f4 <P_1+0x5>
     a0c:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <P_1+0x6>
	P_1[1][0] -= K_1[1] * P00_temp_1;
     a10:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <P_1+0x7>
     a14:	2d 81       	ldd	r18, Y+5	; 0x05
     a16:	3e 81       	ldd	r19, Y+6	; 0x06
     a18:	4f 81       	ldd	r20, Y+7	; 0x07
     a1a:	58 85       	ldd	r21, Y+8	; 0x08
     a1c:	69 85       	ldd	r22, Y+9	; 0x09
     a1e:	7a 85       	ldd	r23, Y+10	; 0x0a
     a20:	8b 85       	ldd	r24, Y+11	; 0x0b
     a22:	9c 85       	ldd	r25, Y+12	; 0x0c
     a24:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     a28:	9b 01       	movw	r18, r22
     a2a:	ac 01       	movw	r20, r24
     a2c:	6d 85       	ldd	r22, Y+13	; 0x0d
     a2e:	7e 85       	ldd	r23, Y+14	; 0x0e
     a30:	8f 85       	ldd	r24, Y+15	; 0x0f
     a32:	98 89       	ldd	r25, Y+16	; 0x10
     a34:	6d d6       	rcall	.+3290   	; 0x1710 <__subsf3>
     a36:	60 93 f7 03 	sts	0x03F7, r22	; 0x8003f7 <P_1+0x8>
     a3a:	70 93 f8 03 	sts	0x03F8, r23	; 0x8003f8 <P_1+0x9>
     a3e:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <P_1+0xa>
	P_1[1][1] -= K_1[1] * P01_temp_1;
     a42:	90 93 fa 03 	sts	0x03FA, r25	; 0x8003fa <P_1+0xb>
     a46:	2d 81       	ldd	r18, Y+5	; 0x05
     a48:	3e 81       	ldd	r19, Y+6	; 0x06
     a4a:	4f 81       	ldd	r20, Y+7	; 0x07
     a4c:	58 85       	ldd	r21, Y+8	; 0x08
     a4e:	c3 01       	movw	r24, r6
     a50:	b2 01       	movw	r22, r4
     a52:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__mulsf3>
     a56:	9b 01       	movw	r18, r22
     a58:	ac 01       	movw	r20, r24
     a5a:	69 8d       	ldd	r22, Y+25	; 0x19
     a5c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a5e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a60:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a62:	56 d6       	rcall	.+3244   	; 0x1710 <__subsf3>
     a64:	60 93 fb 03 	sts	0x03FB, r22	; 0x8003fb <P_1+0xc>
     a68:	70 93 fc 03 	sts	0x03FC, r23	; 0x8003fc <P_1+0xd>
     a6c:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <P_1+0xe>

	return angle_1;
};
     a70:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <P_1+0xf>
     a74:	c5 01       	movw	r24, r10
     a76:	b4 01       	movw	r22, r8
     a78:	6c 96       	adiw	r28, 0x1c	; 28
     a7a:	0f b6       	in	r0, 0x3f	; 63
     a7c:	f8 94       	cli
     a7e:	de bf       	out	0x3e, r29	; 62
     a80:	0f be       	out	0x3f, r0	; 63
     a82:	cd bf       	out	0x3d, r28	; 61
     a84:	df 91       	pop	r29
     a86:	cf 91       	pop	r28
     a88:	1f 91       	pop	r17
     a8a:	0f 91       	pop	r16
     a8c:	ff 90       	pop	r15
     a8e:	ef 90       	pop	r14
     a90:	df 90       	pop	r13
     a92:	cf 90       	pop	r12
     a94:	bf 90       	pop	r11
     a96:	af 90       	pop	r10
     a98:	9f 90       	pop	r9
     a9a:	8f 90       	pop	r8
     a9c:	7f 90       	pop	r7
     a9e:	6f 90       	pop	r6
     aa0:	5f 90       	pop	r5
     aa2:	4f 90       	pop	r4
     aa4:	08 95       	ret

00000aa6 <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     aa6:	8f e6       	ldi	r24, 0x6F	; 111
     aa8:	92 e1       	ldi	r25, 0x12	; 18
     aaa:	a3 e8       	ldi	r26, 0x83	; 131
     aac:	ba e3       	ldi	r27, 0x3A	; 58
     aae:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <Q_angle_1>
     ab2:	90 93 28 04 	sts	0x0428, r25	; 0x800428 <Q_angle_1+0x1>
     ab6:	a0 93 29 04 	sts	0x0429, r26	; 0x800429 <Q_angle_1+0x2>
     aba:	b0 93 2a 04 	sts	0x042A, r27	; 0x80042a <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     abe:	86 ea       	ldi	r24, 0xA6	; 166
     ac0:	9b e9       	ldi	r25, 0x9B	; 155
     ac2:	a4 e4       	ldi	r26, 0x44	; 68
     ac4:	bb e3       	ldi	r27, 0x3B	; 59
     ac6:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <Q_bias_1>
     aca:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <Q_bias_1+0x1>
     ace:	a0 93 15 04 	sts	0x0415, r26	; 0x800415 <Q_bias_1+0x2>
     ad2:	b0 93 16 04 	sts	0x0416, r27	; 0x800416 <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     ad6:	8f e8       	ldi	r24, 0x8F	; 143
     ad8:	92 ec       	ldi	r25, 0xC2	; 194
     ada:	a5 ef       	ldi	r26, 0xF5	; 245
     adc:	bc e3       	ldi	r27, 0x3C	; 60
     ade:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <R_measure_1>
     ae2:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <R_measure_1+0x1>
     ae6:	a0 93 11 04 	sts	0x0411, r26	; 0x800411 <R_measure_1+0x2>
     aea:	b0 93 12 04 	sts	0x0412, r27	; 0x800412 <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     aee:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <angle_1>
     af2:	10 92 ec 03 	sts	0x03EC, r1	; 0x8003ec <angle_1+0x1>
     af6:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <angle_1+0x2>
     afa:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     afe:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <bias_1>
     b02:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <bias_1+0x1>
     b06:	10 92 09 04 	sts	0x0409, r1	; 0x800409 <bias_1+0x2>
     b0a:	10 92 0a 04 	sts	0x040A, r1	; 0x80040a <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     b0e:	ef ee       	ldi	r30, 0xEF	; 239
     b10:	f3 e0       	ldi	r31, 0x03	; 3
     b12:	10 82       	st	Z, r1
     b14:	11 82       	std	Z+1, r1	; 0x01
     b16:	12 82       	std	Z+2, r1	; 0x02
     b18:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     b1a:	14 82       	std	Z+4, r1	; 0x04
     b1c:	15 82       	std	Z+5, r1	; 0x05
     b1e:	16 82       	std	Z+6, r1	; 0x06
     b20:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     b22:	10 86       	std	Z+8, r1	; 0x08
     b24:	11 86       	std	Z+9, r1	; 0x09
     b26:	12 86       	std	Z+10, r1	; 0x0a
     b28:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     b2a:	14 86       	std	Z+12, r1	; 0x0c
     b2c:	15 86       	std	Z+13, r1	; 0x0d
     b2e:	16 86       	std	Z+14, r1	; 0x0e
     b30:	17 86       	std	Z+15, r1	; 0x0f
     b32:	08 95       	ret

00000b34 <main>:
float kalman_angle_roll;
float kalman_angle_pitch;

/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     b34:	cf 93       	push	r28
     b36:	df 93       	push	r29
     b38:	cd b7       	in	r28, 0x3d	; 61
     b3a:	de b7       	in	r29, 0x3e	; 62
     b3c:	6c 97       	sbiw	r28, 0x1c	; 28
     b3e:	0f b6       	in	r0, 0x3f	; 63
     b40:	f8 94       	cli
     b42:	de bf       	out	0x3e, r29	; 62
     b44:	0f be       	out	0x3f, r0	; 63
     b46:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     b48:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <U_step+0x1>
     b4c:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <U_step>
	V_step=V_step_predefine;
     b50:	28 e7       	ldi	r18, 0x78	; 120
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     b58:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step_predefine;
     b5c:	80 ef       	ldi	r24, 0xF0	; 240
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     b64:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	U_step_2=U_step_predefine;
     b68:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <__data_end+0x1>
     b6c:	10 92 bc 03 	sts	0x03BC, r1	; 0x8003bc <__data_end>
	V_step_2=V_step_predefine;
     b70:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     b74:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_predefine;
     b78:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     b7c:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	incr=-1;
     b80:	8f ef       	ldi	r24, 0xFF	; 255
     b82:	9f ef       	ldi	r25, 0xFF	; 255
     b84:	90 93 da 03 	sts	0x03DA, r25	; 0x8003da <incr+0x1>
     b88:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <incr>
	incr_2=-1;
     b8c:	90 93 d8 03 	sts	0x03D8, r25	; 0x8003d8 <incr_2+0x1>
     b90:	80 93 d7 03 	sts	0x03D7, r24	; 0x8003d7 <incr_2>
	pwm_delay=15000;
     b94:	88 e9       	ldi	r24, 0x98	; 152
     b96:	9a e3       	ldi	r25, 0x3A	; 58
     b98:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <pwm_delay+0x1>
     b9c:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <pwm_delay>
	pwm_delay_2=15000;
     ba0:	90 93 d2 03 	sts	0x03D2, r25	; 0x8003d2 <pwm_delay_2+0x1>
     ba4:	80 93 d1 03 	sts	0x03D1, r24	; 0x8003d1 <pwm_delay_2>
	cli();
	init_gpio();
     ba8:	f8 94       	cli
     baa:	55 db       	rcall	.-2390   	; 0x256 <init_gpio>
     bac:	d7 db       	rcall	.-2130   	; 0x35c <init_motor_gpio>
     bae:	88 d4       	rcall	.+2320   	; 0x14c0 <i2c_init>
     bb0:	8c e0       	ldi	r24, 0x0C	; 12
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	36 d5       	rcall	.+2668   	; 0x1622 <USART_Init>
     bb6:	60 e0       	ldi	r22, 0x00	; 0
     bb8:	70 e0       	ldi	r23, 0x00	; 0
     bba:	8c e1       	ldi	r24, 0x1C	; 28
     bbc:	9b e0       	ldi	r25, 0x0B	; 11
     bbe:	0e 94 29 13 	call	0x2652	; 0x2652 <fdevopen>
     bc2:	90 93 2c 04 	sts	0x042C, r25	; 0x80042c <uart_str+0x1>
     bc6:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <uart_str>
     bca:	cb d3       	rcall	.+1942   	; 0x1362 <setup_timer0>
     bcc:	d1 d3       	rcall	.+1954   	; 0x1370 <Enable_timer0_overflow_interrupt>
     bce:	89 d3       	rcall	.+1810   	; 0x12e2 <setup_timer4>
     bd0:	9c d3       	rcall	.+1848   	; 0x130a <setup_timer3>
     bd2:	af d3       	rcall	.+1886   	; 0x1332 <setup_timer5>
     bd4:	b7 d3       	rcall	.+1902   	; 0x1344 <Enable_timer5_compare_interrupt>
     bd6:	bc d3       	rcall	.+1912   	; 0x1350 <setup_timer1>
     bd8:	80 91 d3 03 	lds	r24, 0x03D3	; 0x8003d3 <pwm_delay>
     bdc:	90 91 d4 03 	lds	r25, 0x03D4	; 0x8003d4 <pwm_delay+0x1>
     be0:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     be4:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     be8:	80 91 d1 03 	lds	r24, 0x03D1	; 0x8003d1 <pwm_delay_2>
     bec:	90 91 d2 03 	lds	r25, 0x03D2	; 0x8003d2 <pwm_delay_2+0x1>
     bf0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     bf4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     bf8:	c1 d3       	rcall	.+1922   	; 0x137c <micros>
     bfa:	1b 01       	movw	r2, r22
     bfc:	2c 01       	movw	r4, r24
     bfe:	67 e0       	ldi	r22, 0x07	; 7
     c00:	89 e1       	ldi	r24, 0x19	; 25
     c02:	2c d2       	rcall	.+1112   	; 0x105c <mpu6050_writeByte>
     c04:	60 e0       	ldi	r22, 0x00	; 0
     c06:	8a e1       	ldi	r24, 0x1A	; 26
     c08:	29 d2       	rcall	.+1106   	; 0x105c <mpu6050_writeByte>
     c0a:	68 e0       	ldi	r22, 0x08	; 8
     c0c:	8b e1       	ldi	r24, 0x1B	; 27
     c0e:	26 d2       	rcall	.+1100   	; 0x105c <mpu6050_writeByte>
     c10:	60 e1       	ldi	r22, 0x10	; 16
     c12:	8c e1       	ldi	r24, 0x1C	; 28
     c14:	23 d2       	rcall	.+1094   	; 0x105c <mpu6050_writeByte>
     c16:	61 e0       	ldi	r22, 0x01	; 1
     c18:	8b e6       	ldi	r24, 0x6B	; 107
     c1a:	20 d2       	rcall	.+1088   	; 0x105c <mpu6050_writeByte>
     c1c:	69 dd       	rcall	.-1326   	; 0x6f0 <Kalman_init>
     c1e:	43 df       	rcall	.-378    	; 0xaa6 <Kalman_init_1>
     c20:	2f ef       	ldi	r18, 0xFF	; 255
     c22:	31 ee       	ldi	r19, 0xE1	; 225
     c24:	84 e0       	ldi	r24, 0x04	; 4
     c26:	21 50       	subi	r18, 0x01	; 1
     c28:	30 40       	sbci	r19, 0x00	; 0
     c2a:	80 40       	sbci	r24, 0x00	; 0
     c2c:	e1 f7       	brne	.-8      	; 0xc26 <main+0xf2>
     c2e:	00 c0       	rjmp	.+0      	; 0xc30 <main+0xfc>
     c30:	00 00       	nop
     c32:	10 92 0b 04 	sts	0x040B, r1	; 0x80040b <angle>
     c36:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <angle+0x1>
     c3a:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <angle+0x2>
     c3e:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <angle+0x3>
     c42:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <angle_1>
     c46:	10 92 ec 03 	sts	0x03EC, r1	; 0x8003ec <angle_1+0x1>
     c4a:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <angle_1+0x2>
     c4e:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <angle_1+0x3>
     c52:	78 94       	sei
     c54:	9e 01       	movw	r18, r28
     c56:	2b 5f       	subi	r18, 0xFB	; 251
     c58:	3f 4f       	sbci	r19, 0xFF	; 255
     c5a:	79 01       	movw	r14, r18
     c5c:	8e 01       	movw	r16, r28
     c5e:	0d 5f       	subi	r16, 0xFD	; 253
     c60:	1f 4f       	sbci	r17, 0xFF	; 255
     c62:	24 50       	subi	r18, 0x04	; 4
     c64:	31 09       	sbc	r19, r1
     c66:	ae 01       	movw	r20, r28
     c68:	45 5f       	subi	r20, 0xF5	; 245
     c6a:	5f 4f       	sbci	r21, 0xFF	; 255
     c6c:	be 01       	movw	r22, r28
     c6e:	67 5f       	subi	r22, 0xF7	; 247
     c70:	7f 4f       	sbci	r23, 0xFF	; 255
     c72:	ce 01       	movw	r24, r28
     c74:	07 96       	adiw	r24, 0x07	; 7
     c76:	48 d2       	rcall	.+1168   	; 0x1108 <mpu6050_getRawData>
     c78:	89 81       	ldd	r24, Y+1	; 0x01
     c7a:	9a 81       	ldd	r25, Y+2	; 0x02
     c7c:	84 59       	subi	r24, 0x94	; 148
     c7e:	9f 4f       	sbci	r25, 0xFF	; 255
     c80:	9a 83       	std	Y+2, r25	; 0x02
     c82:	89 83       	std	Y+1, r24	; 0x01
     c84:	8b 81       	ldd	r24, Y+3	; 0x03
     c86:	9c 81       	ldd	r25, Y+4	; 0x04
     c88:	80 52       	subi	r24, 0x20	; 32
     c8a:	9f 4f       	sbci	r25, 0xFF	; 255
     c8c:	9c 83       	std	Y+4, r25	; 0x04
     c8e:	8b 83       	std	Y+3, r24	; 0x03
     c90:	8d 81       	ldd	r24, Y+5	; 0x05
     c92:	9e 81       	ldd	r25, Y+6	; 0x06
     c94:	8f 58       	subi	r24, 0x8F	; 143
     c96:	9d 4f       	sbci	r25, 0xFD	; 253
     c98:	9e 83       	std	Y+6, r25	; 0x06
     c9a:	8d 83       	std	Y+5, r24	; 0x05
     c9c:	6f d3       	rcall	.+1758   	; 0x137c <micros>
     c9e:	62 19       	sub	r22, r2
     ca0:	73 09       	sbc	r23, r3
     ca2:	84 09       	sbc	r24, r4
     ca4:	95 09       	sbc	r25, r5
     ca6:	98 d6       	rcall	.+3376   	; 0x19d8 <__floatunsisf>
     ca8:	20 e0       	ldi	r18, 0x00	; 0
     caa:	34 e2       	ldi	r19, 0x24	; 36
     cac:	44 e7       	ldi	r20, 0x74	; 116
     cae:	59 e4       	ldi	r21, 0x49	; 73
     cb0:	fa d5       	rcall	.+3060   	; 0x18a6 <__divsf3>
     cb2:	60 93 4f 04 	sts	0x044F, r22	; 0x80044f <dt>
     cb6:	70 93 50 04 	sts	0x0450, r23	; 0x800450 <dt+0x1>
     cba:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <dt+0x2>
     cbe:	90 93 52 04 	sts	0x0452, r25	; 0x800452 <dt+0x3>
     cc2:	5c d3       	rcall	.+1720   	; 0x137c <micros>
     cc4:	1b 01       	movw	r2, r22
     cc6:	2c 01       	movw	r4, r24
     cc8:	69 81       	ldd	r22, Y+1	; 0x01
     cca:	7a 81       	ldd	r23, Y+2	; 0x02
     ccc:	07 2e       	mov	r0, r23
     cce:	00 0c       	add	r0, r0
     cd0:	88 0b       	sbc	r24, r24
     cd2:	99 0b       	sbc	r25, r25
     cd4:	83 d6       	rcall	.+3334   	; 0x19dc <__floatsisf>
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	43 e8       	ldi	r20, 0x83	; 131
     cdc:	52 e4       	ldi	r21, 0x42	; 66
     cde:	e3 d5       	rcall	.+3014   	; 0x18a6 <__divsf3>
     ce0:	6d 87       	std	Y+13, r22	; 0x0d
     ce2:	7e 87       	std	Y+14, r23	; 0x0e
     ce4:	8f 87       	std	Y+15, r24	; 0x0f
     ce6:	98 8b       	std	Y+16, r25	; 0x10
     ce8:	6b 81       	ldd	r22, Y+3	; 0x03
     cea:	7c 81       	ldd	r23, Y+4	; 0x04
     cec:	07 2e       	mov	r0, r23
     cee:	00 0c       	add	r0, r0
     cf0:	88 0b       	sbc	r24, r24
     cf2:	99 0b       	sbc	r25, r25
     cf4:	73 d6       	rcall	.+3302   	; 0x19dc <__floatsisf>
     cf6:	20 e0       	ldi	r18, 0x00	; 0
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	43 e8       	ldi	r20, 0x83	; 131
     cfc:	52 e4       	ldi	r21, 0x42	; 66
     cfe:	d3 d5       	rcall	.+2982   	; 0x18a6 <__divsf3>
     d00:	69 8b       	std	Y+17, r22	; 0x11
     d02:	7a 8b       	std	Y+18, r23	; 0x12
     d04:	8b 8b       	std	Y+19, r24	; 0x13
     d06:	9c 8b       	std	Y+20, r25	; 0x14
     d08:	80 91 8f 03 	lds	r24, 0x038F	; 0x80038f <loop_bool>
     d0c:	90 91 90 03 	lds	r25, 0x0390	; 0x800390 <loop_bool+0x1>
     d10:	89 2b       	or	r24, r25
     d12:	21 f0       	breq	.+8      	; 0xd1c <main+0x1e8>
     d14:	10 92 90 03 	sts	0x0390, r1	; 0x800390 <loop_bool+0x1>
     d18:	10 92 8f 03 	sts	0x038F, r1	; 0x80038f <loop_bool>
     d1c:	ab 84       	ldd	r10, Y+11	; 0x0b
     d1e:	bc 84       	ldd	r11, Y+12	; 0x0c
     d20:	e9 84       	ldd	r14, Y+9	; 0x09
     d22:	fa 84       	ldd	r15, Y+10	; 0x0a
     d24:	b5 01       	movw	r22, r10
     d26:	0b 2c       	mov	r0, r11
     d28:	00 0c       	add	r0, r0
     d2a:	88 0b       	sbc	r24, r24
     d2c:	99 0b       	sbc	r25, r25
     d2e:	56 d6       	rcall	.+3244   	; 0x19dc <__floatsisf>
     d30:	3b 01       	movw	r6, r22
     d32:	4c 01       	movw	r8, r24
     d34:	b7 01       	movw	r22, r14
     d36:	0f 2c       	mov	r0, r15
     d38:	00 0c       	add	r0, r0
     d3a:	88 0b       	sbc	r24, r24
     d3c:	99 0b       	sbc	r25, r25
     d3e:	4e d6       	rcall	.+3228   	; 0x19dc <__floatsisf>
     d40:	a4 01       	movw	r20, r8
     d42:	93 01       	movw	r18, r6
     d44:	59 d5       	rcall	.+2738   	; 0x17f8 <atan2>
     d46:	6d 8b       	std	Y+21, r22	; 0x15
     d48:	7e 8b       	std	Y+22, r23	; 0x16
     d4a:	8f 8b       	std	Y+23, r24	; 0x17
     d4c:	98 8f       	std	Y+24, r25	; 0x18
     d4e:	c7 01       	movw	r24, r14
     d50:	64 e6       	ldi	r22, 0x64	; 100
     d52:	70 e0       	ldi	r23, 0x00	; 0
     d54:	0e 94 14 12 	call	0x2428	; 0x2428 <__divmodhi4>
     d58:	07 2e       	mov	r0, r23
     d5a:	00 0c       	add	r0, r0
     d5c:	88 0b       	sbc	r24, r24
     d5e:	99 0b       	sbc	r25, r25
     d60:	3d d6       	rcall	.+3194   	; 0x19dc <__floatsisf>
     d62:	6b 01       	movw	r12, r22
     d64:	7c 01       	movw	r14, r24
     d66:	c5 01       	movw	r24, r10
     d68:	64 e6       	ldi	r22, 0x64	; 100
     d6a:	70 e0       	ldi	r23, 0x00	; 0
     d6c:	0e 94 14 12 	call	0x2428	; 0x2428 <__divmodhi4>
     d70:	07 2e       	mov	r0, r23
     d72:	00 0c       	add	r0, r0
     d74:	88 0b       	sbc	r24, r24
     d76:	99 0b       	sbc	r25, r25
     d78:	31 d6       	rcall	.+3170   	; 0x19dc <__floatsisf>
     d7a:	4b 01       	movw	r8, r22
     d7c:	5c 01       	movw	r10, r24
     d7e:	a7 01       	movw	r20, r14
     d80:	96 01       	movw	r18, r12
     d82:	c7 01       	movw	r24, r14
     d84:	b6 01       	movw	r22, r12
     d86:	0a d7       	rcall	.+3604   	; 0x1b9c <__mulsf3>
     d88:	69 8f       	std	Y+25, r22	; 0x19
     d8a:	7a 8f       	std	Y+26, r23	; 0x1a
     d8c:	8b 8f       	std	Y+27, r24	; 0x1b
     d8e:	9c 8f       	std	Y+28, r25	; 0x1c
     d90:	a7 01       	movw	r20, r14
     d92:	96 01       	movw	r18, r12
     d94:	c7 01       	movw	r24, r14
     d96:	b6 01       	movw	r22, r12
     d98:	01 d7       	rcall	.+3586   	; 0x1b9c <__mulsf3>
     d9a:	6b 01       	movw	r12, r22
     d9c:	7c 01       	movw	r14, r24
     d9e:	a5 01       	movw	r20, r10
     da0:	94 01       	movw	r18, r8
     da2:	c5 01       	movw	r24, r10
     da4:	b4 01       	movw	r22, r8
     da6:	fa d6       	rcall	.+3572   	; 0x1b9c <__mulsf3>
     da8:	9b 01       	movw	r18, r22
     daa:	ac 01       	movw	r20, r24
     dac:	c7 01       	movw	r24, r14
     dae:	b6 01       	movw	r22, r12
     db0:	b0 d4       	rcall	.+2400   	; 0x1712 <__addsf3>
     db2:	5b d7       	rcall	.+3766   	; 0x1c6a <sqrt>
     db4:	20 e0       	ldi	r18, 0x00	; 0
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	48 ec       	ldi	r20, 0xC8	; 200
     dba:	52 e4       	ldi	r21, 0x42	; 66
     dbc:	ef d6       	rcall	.+3550   	; 0x1b9c <__mulsf3>
     dbe:	6b 01       	movw	r12, r22
     dc0:	7c 01       	movw	r14, r24
     dc2:	6f 81       	ldd	r22, Y+7	; 0x07
     dc4:	78 85       	ldd	r23, Y+8	; 0x08
     dc6:	07 2e       	mov	r0, r23
     dc8:	00 0c       	add	r0, r0
     dca:	88 0b       	sbc	r24, r24
     dcc:	99 0b       	sbc	r25, r25
     dce:	06 d6       	rcall	.+3084   	; 0x19dc <__floatsisf>
     dd0:	a7 01       	movw	r20, r14
     dd2:	96 01       	movw	r18, r12
     dd4:	11 d5       	rcall	.+2594   	; 0x17f8 <atan2>
     dd6:	4b 01       	movw	r8, r22
     dd8:	5c 01       	movw	r10, r24
     dda:	c0 90 4f 04 	lds	r12, 0x044F	; 0x80044f <dt>
     dde:	d0 90 50 04 	lds	r13, 0x0450	; 0x800450 <dt+0x1>
     de2:	e0 90 51 04 	lds	r14, 0x0451	; 0x800451 <dt+0x2>
     de6:	f0 90 52 04 	lds	r15, 0x0452	; 0x800452 <dt+0x3>
     dea:	21 ee       	ldi	r18, 0xE1	; 225
     dec:	3e e2       	ldi	r19, 0x2E	; 46
     dee:	45 e6       	ldi	r20, 0x65	; 101
     df0:	52 e4       	ldi	r21, 0x42	; 66
     df2:	6d 89       	ldd	r22, Y+21	; 0x15
     df4:	7e 89       	ldd	r23, Y+22	; 0x16
     df6:	8f 89       	ldd	r24, Y+23	; 0x17
     df8:	98 8d       	ldd	r25, Y+24	; 0x18
     dfa:	d0 d6       	rcall	.+3488   	; 0x1b9c <__mulsf3>
     dfc:	87 01       	movw	r16, r14
     dfe:	76 01       	movw	r14, r12
     e00:	2d 85       	ldd	r18, Y+13	; 0x0d
     e02:	3e 85       	ldd	r19, Y+14	; 0x0e
     e04:	4f 85       	ldd	r20, Y+15	; 0x0f
     e06:	58 89       	ldd	r21, Y+16	; 0x10
     e08:	cc da       	rcall	.-2664   	; 0x3a2 <getAngle>
     e0a:	60 93 53 04 	sts	0x0453, r22	; 0x800453 <kalman_angle_roll>
     e0e:	70 93 54 04 	sts	0x0454, r23	; 0x800454 <kalman_angle_roll+0x1>
     e12:	80 93 55 04 	sts	0x0455, r24	; 0x800455 <kalman_angle_roll+0x2>
     e16:	90 93 56 04 	sts	0x0456, r25	; 0x800456 <kalman_angle_roll+0x3>
     e1a:	c0 90 4f 04 	lds	r12, 0x044F	; 0x80044f <dt>
     e1e:	d0 90 50 04 	lds	r13, 0x0450	; 0x800450 <dt+0x1>
     e22:	e0 90 51 04 	lds	r14, 0x0451	; 0x800451 <dt+0x2>
     e26:	f0 90 52 04 	lds	r15, 0x0452	; 0x800452 <dt+0x3>
     e2a:	21 ee       	ldi	r18, 0xE1	; 225
     e2c:	3e e2       	ldi	r19, 0x2E	; 46
     e2e:	45 e6       	ldi	r20, 0x65	; 101
     e30:	52 e4       	ldi	r21, 0x42	; 66
     e32:	c5 01       	movw	r24, r10
     e34:	b4 01       	movw	r22, r8
     e36:	b2 d6       	rcall	.+3428   	; 0x1b9c <__mulsf3>
     e38:	87 01       	movw	r16, r14
     e3a:	76 01       	movw	r14, r12
     e3c:	29 89       	ldd	r18, Y+17	; 0x11
     e3e:	3a 89       	ldd	r19, Y+18	; 0x12
     e40:	4b 89       	ldd	r20, Y+19	; 0x13
     e42:	5c 89       	ldd	r21, Y+20	; 0x14
     e44:	9c dc       	rcall	.-1736   	; 0x77e <getAngle_1>
     e46:	60 93 35 04 	sts	0x0435, r22	; 0x800435 <kalman_angle_pitch>
     e4a:	70 93 36 04 	sts	0x0436, r23	; 0x800436 <kalman_angle_pitch+0x1>
     e4e:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <kalman_angle_pitch+0x2>
     e52:	90 93 38 04 	sts	0x0438, r25	; 0x800438 <kalman_angle_pitch+0x3>
     e56:	40 91 53 04 	lds	r20, 0x0453	; 0x800453 <kalman_angle_roll>
     e5a:	50 91 54 04 	lds	r21, 0x0454	; 0x800454 <kalman_angle_roll+0x1>
     e5e:	60 91 55 04 	lds	r22, 0x0455	; 0x800455 <kalman_angle_roll+0x2>
     e62:	70 91 56 04 	lds	r23, 0x0456	; 0x800456 <kalman_angle_roll+0x3>
     e66:	81 e9       	ldi	r24, 0x91	; 145
     e68:	93 e0       	ldi	r25, 0x03	; 3
     e6a:	30 d4       	rcall	.+2144   	; 0x16cc <printSD>
     e6c:	40 91 c4 03 	lds	r20, 0x03C4	; 0x8003c4 <pid_i_roll>
     e70:	50 91 c5 03 	lds	r21, 0x03C5	; 0x8003c5 <pid_i_roll+0x1>
     e74:	60 91 c6 03 	lds	r22, 0x03C6	; 0x8003c6 <pid_i_roll+0x2>
     e78:	70 91 c7 03 	lds	r23, 0x03C7	; 0x8003c7 <pid_i_roll+0x3>
     e7c:	88 e9       	ldi	r24, 0x98	; 152
     e7e:	93 e0       	ldi	r25, 0x03	; 3
     e80:	25 d4       	rcall	.+2122   	; 0x16cc <printSD>
     e82:	a0 90 4f 04 	lds	r10, 0x044F	; 0x80044f <dt>
     e86:	b0 90 50 04 	lds	r11, 0x0450	; 0x800450 <dt+0x1>
     e8a:	c0 90 51 04 	lds	r12, 0x0451	; 0x800451 <dt+0x2>
     e8e:	d0 90 52 04 	lds	r13, 0x0452	; 0x800452 <dt+0x3>
     e92:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <kalman_angle_roll>
     e96:	70 91 54 04 	lds	r23, 0x0454	; 0x800454 <kalman_angle_roll+0x1>
     e9a:	80 91 55 04 	lds	r24, 0x0455	; 0x800455 <kalman_angle_roll+0x2>
     e9e:	90 91 56 04 	lds	r25, 0x0456	; 0x800456 <kalman_angle_roll+0x3>
     ea2:	20 91 86 03 	lds	r18, 0x0386	; 0x800386 <kd_roll+0x3>
     ea6:	2f 93       	push	r18
     ea8:	20 91 85 03 	lds	r18, 0x0385	; 0x800385 <kd_roll+0x2>
     eac:	2f 93       	push	r18
     eae:	20 91 84 03 	lds	r18, 0x0384	; 0x800384 <kd_roll+0x1>
     eb2:	2f 93       	push	r18
     eb4:	20 91 83 03 	lds	r18, 0x0383	; 0x800383 <kd_roll>
     eb8:	2f 93       	push	r18
     eba:	20 91 8a 03 	lds	r18, 0x038A	; 0x80038a <ki_roll+0x3>
     ebe:	2f 93       	push	r18
     ec0:	20 91 89 03 	lds	r18, 0x0389	; 0x800389 <ki_roll+0x2>
     ec4:	2f 93       	push	r18
     ec6:	20 91 88 03 	lds	r18, 0x0388	; 0x800388 <ki_roll+0x1>
     eca:	2f 93       	push	r18
     ecc:	20 91 87 03 	lds	r18, 0x0387	; 0x800387 <ki_roll>
     ed0:	2f 93       	push	r18
     ed2:	20 91 8e 03 	lds	r18, 0x038E	; 0x80038e <kp_roll+0x3>
     ed6:	2f 93       	push	r18
     ed8:	20 91 8d 03 	lds	r18, 0x038D	; 0x80038d <kp_roll+0x2>
     edc:	2f 93       	push	r18
     ede:	20 91 8c 03 	lds	r18, 0x038C	; 0x80038c <kp_roll+0x1>
     ee2:	2f 93       	push	r18
     ee4:	20 91 8b 03 	lds	r18, 0x038B	; 0x80038b <kp_roll>
     ee8:	2f 93       	push	r18
     eea:	0f 2e       	mov	r0, r31
     eec:	f1 e3       	ldi	r31, 0x31	; 49
     eee:	ef 2e       	mov	r14, r31
     ef0:	f4 e0       	ldi	r31, 0x04	; 4
     ef2:	ff 2e       	mov	r15, r31
     ef4:	f0 2d       	mov	r31, r0
     ef6:	04 ec       	ldi	r16, 0xC4	; 196
     ef8:	13 e0       	ldi	r17, 0x03	; 3
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	a9 01       	movw	r20, r18
     f00:	6e d1       	rcall	.+732    	; 0x11de <Compute_PID>
     f02:	6d 87       	std	Y+13, r22	; 0x0d
     f04:	7e 87       	std	Y+14, r23	; 0x0e
     f06:	8f 87       	std	Y+15, r24	; 0x0f
     f08:	98 8b       	std	Y+16, r25	; 0x10
     f0a:	a0 90 4f 04 	lds	r10, 0x044F	; 0x80044f <dt>
     f0e:	b0 90 50 04 	lds	r11, 0x0450	; 0x800450 <dt+0x1>
     f12:	c0 90 51 04 	lds	r12, 0x0451	; 0x800451 <dt+0x2>
     f16:	d0 90 52 04 	lds	r13, 0x0452	; 0x800452 <dt+0x3>
     f1a:	60 91 35 04 	lds	r22, 0x0435	; 0x800435 <kalman_angle_pitch>
     f1e:	70 91 36 04 	lds	r23, 0x0436	; 0x800436 <kalman_angle_pitch+0x1>
     f22:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <kalman_angle_pitch+0x2>
     f26:	90 91 38 04 	lds	r25, 0x0438	; 0x800438 <kalman_angle_pitch+0x3>
     f2a:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <kd_pitch+0x3>
     f2e:	2f 93       	push	r18
     f30:	20 91 79 03 	lds	r18, 0x0379	; 0x800379 <kd_pitch+0x2>
     f34:	2f 93       	push	r18
     f36:	20 91 78 03 	lds	r18, 0x0378	; 0x800378 <kd_pitch+0x1>
     f3a:	2f 93       	push	r18
     f3c:	20 91 77 03 	lds	r18, 0x0377	; 0x800377 <kd_pitch>
     f40:	2f 93       	push	r18
     f42:	20 91 7e 03 	lds	r18, 0x037E	; 0x80037e <ki_pitch+0x3>
     f46:	2f 93       	push	r18
     f48:	20 91 7d 03 	lds	r18, 0x037D	; 0x80037d <ki_pitch+0x2>
     f4c:	2f 93       	push	r18
     f4e:	20 91 7c 03 	lds	r18, 0x037C	; 0x80037c <ki_pitch+0x1>
     f52:	2f 93       	push	r18
     f54:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <ki_pitch>
     f58:	2f 93       	push	r18
     f5a:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <kp_pitch+0x3>
     f5e:	2f 93       	push	r18
     f60:	20 91 81 03 	lds	r18, 0x0381	; 0x800381 <kp_pitch+0x2>
     f64:	2f 93       	push	r18
     f66:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <kp_pitch+0x1>
     f6a:	2f 93       	push	r18
     f6c:	20 91 7f 03 	lds	r18, 0x037F	; 0x80037f <kp_pitch>
     f70:	2f 93       	push	r18
     f72:	0f 2e       	mov	r0, r31
     f74:	f7 e4       	ldi	r31, 0x47	; 71
     f76:	ef 2e       	mov	r14, r31
     f78:	f4 e0       	ldi	r31, 0x04	; 4
     f7a:	ff 2e       	mov	r15, r31
     f7c:	f0 2d       	mov	r31, r0
     f7e:	00 ec       	ldi	r16, 0xC0	; 192
     f80:	13 e0       	ldi	r17, 0x03	; 3
     f82:	20 e0       	ldi	r18, 0x00	; 0
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	a9 01       	movw	r20, r18
     f88:	2a d1       	rcall	.+596    	; 0x11de <Compute_PID>
     f8a:	6b 01       	movw	r12, r22
     f8c:	7c 01       	movw	r14, r24
     f8e:	4d 85       	ldd	r20, Y+13	; 0x0d
     f90:	5e 85       	ldd	r21, Y+14	; 0x0e
     f92:	6f 85       	ldd	r22, Y+15	; 0x0f
     f94:	78 89       	ldd	r23, Y+16	; 0x10
     f96:	8f e9       	ldi	r24, 0x9F	; 159
     f98:	93 e0       	ldi	r25, 0x03	; 3
     f9a:	98 d3       	rcall	.+1840   	; 0x16cc <printSD>
     f9c:	b7 01       	movw	r22, r14
     f9e:	a6 01       	movw	r20, r12
     fa0:	8b ea       	ldi	r24, 0xAB	; 171
     fa2:	93 e0       	ldi	r25, 0x03	; 3
     fa4:	93 d3       	rcall	.+1830   	; 0x16cc <printSD>
     fa6:	8a e0       	ldi	r24, 0x0A	; 10
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	0e 94 c2 13 	call	0x2784	; 0x2784 <putchar>
     fae:	80 90 53 04 	lds	r8, 0x0453	; 0x800453 <kalman_angle_roll>
     fb2:	90 90 54 04 	lds	r9, 0x0454	; 0x800454 <kalman_angle_roll+0x1>
     fb6:	a0 90 55 04 	lds	r10, 0x0455	; 0x800455 <kalman_angle_roll+0x2>
     fba:	b0 90 56 04 	lds	r11, 0x0456	; 0x800456 <kalman_angle_roll+0x3>
     fbe:	c5 01       	movw	r24, r10
     fc0:	b4 01       	movw	r22, r8
     fc2:	d9 d4       	rcall	.+2482   	; 0x1976 <__fixsfsi>
     fc4:	9b 01       	movw	r18, r22
     fc6:	77 23       	and	r23, r23
     fc8:	24 f4       	brge	.+8      	; 0xfd2 <main+0x49e>
     fca:	22 27       	eor	r18, r18
     fcc:	33 27       	eor	r19, r19
     fce:	26 1b       	sub	r18, r22
     fd0:	37 0b       	sbc	r19, r23
     fd2:	79 01       	movw	r14, r18
     fd4:	b9 01       	movw	r22, r18
     fd6:	33 0f       	add	r19, r19
     fd8:	88 0b       	sbc	r24, r24
     fda:	99 0b       	sbc	r25, r25
     fdc:	ff d4       	rcall	.+2558   	; 0x19dc <__floatsisf>
     fde:	0f b6       	in	r0, 0x3f	; 63
     fe0:	f8 94       	cli
     fe2:	de bf       	out	0x3e, r29	; 62
     fe4:	0f be       	out	0x3f, r0	; 63
     fe6:	cd bf       	out	0x3d, r28	; 61
     fe8:	2c ee       	ldi	r18, 0xEC	; 236
     fea:	31 e5       	ldi	r19, 0x51	; 81
     fec:	48 e3       	ldi	r20, 0x38	; 56
     fee:	5e e3       	ldi	r21, 0x3E	; 62
     ff0:	56 d4       	rcall	.+2220   	; 0x189e <__cmpsf2>
     ff2:	18 16       	cp	r1, r24
     ff4:	24 f4       	brge	.+8      	; 0xffe <main+0x4ca>
     ff6:	3e e2       	ldi	r19, 0x2E	; 46
     ff8:	e3 16       	cp	r14, r19
     ffa:	f1 04       	cpc	r15, r1
     ffc:	2c f0       	brlt	.+10     	; 0x1008 <main+0x4d4>
     ffe:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <incr+0x1>
    1002:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <incr>
    1006:	26 ce       	rjmp	.-948    	; 0xc54 <main+0x120>
    1008:	2c ee       	ldi	r18, 0xEC	; 236
    100a:	31 e5       	ldi	r19, 0x51	; 81
    100c:	48 e3       	ldi	r20, 0x38	; 56
    100e:	5e e3       	ldi	r21, 0x3E	; 62
    1010:	c5 01       	movw	r24, r10
    1012:	b4 01       	movw	r22, r8
    1014:	b8 d5       	rcall	.+2928   	; 0x1b86 <__gesf2>
    1016:	18 16       	cp	r1, r24
    1018:	7c f4       	brge	.+30     	; 0x1038 <main+0x504>
    101a:	6d 85       	ldd	r22, Y+13	; 0x0d
    101c:	7e 85       	ldd	r23, Y+14	; 0x0e
    101e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1020:	98 89       	ldd	r25, Y+16	; 0x10
    1022:	a9 d4       	rcall	.+2386   	; 0x1976 <__fixsfsi>
    1024:	cb 01       	movw	r24, r22
    1026:	68 ee       	ldi	r22, 0xE8	; 232
    1028:	73 e0       	ldi	r23, 0x03	; 3
    102a:	0e 94 14 12 	call	0x2428	; 0x2428 <__divmodhi4>
    102e:	70 93 da 03 	sts	0x03DA, r23	; 0x8003da <incr+0x1>
    1032:	60 93 d9 03 	sts	0x03D9, r22	; 0x8003d9 <incr>
    1036:	0e ce       	rjmp	.-996    	; 0xc54 <main+0x120>
    1038:	6d 85       	ldd	r22, Y+13	; 0x0d
    103a:	7e 85       	ldd	r23, Y+14	; 0x0e
    103c:	8f 85       	ldd	r24, Y+15	; 0x0f
    103e:	98 89       	ldd	r25, Y+16	; 0x10
    1040:	9a d4       	rcall	.+2356   	; 0x1976 <__fixsfsi>
    1042:	88 27       	eor	r24, r24
    1044:	99 27       	eor	r25, r25
    1046:	86 1b       	sub	r24, r22
    1048:	97 0b       	sbc	r25, r23
    104a:	68 ee       	ldi	r22, 0xE8	; 232
    104c:	73 e0       	ldi	r23, 0x03	; 3
    104e:	0e 94 14 12 	call	0x2428	; 0x2428 <__divmodhi4>
    1052:	70 93 da 03 	sts	0x03DA, r23	; 0x8003da <incr+0x1>
    1056:	60 93 d9 03 	sts	0x03D9, r22	; 0x8003d9 <incr>
    105a:	fc cd       	rjmp	.-1032   	; 0xc54 <main+0x120>

0000105c <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
    105c:	cf 93       	push	r28
    105e:	df 93       	push	r29
    1060:	d8 2f       	mov	r29, r24
    1062:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
    1064:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
    1066:	32 d2       	rcall	.+1124   	; 0x14cc <i2c_start>
    1068:	8d 2f       	mov	r24, r29
	i2c_stop();
    106a:	86 d2       	rcall	.+1292   	; 0x1578 <i2c_write>
    106c:	8c 2f       	mov	r24, r28
}
    106e:	84 d2       	rcall	.+1288   	; 0x1578 <i2c_write>
    1070:	73 d2       	rcall	.+1254   	; 0x1558 <i2c_stop>
    1072:	df 91       	pop	r29
    1074:	cf 91       	pop	r28
    1076:	08 95       	ret

00001078 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
    1078:	af 92       	push	r10
    107a:	bf 92       	push	r11
    107c:	cf 92       	push	r12
    107e:	df 92       	push	r13
    1080:	ff 92       	push	r15
    1082:	0f 93       	push	r16
    1084:	1f 93       	push	r17
    1086:	cf 93       	push	r28
    1088:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
    108a:	66 23       	and	r22, r22
    108c:	89 f1       	breq	.+98     	; 0x10f0 <mpu6050_readBytes+0x78>
    108e:	c5 2f       	mov	r28, r21
    1090:	d4 2f       	mov	r29, r20
    1092:	f6 2e       	mov	r15, r22
    1094:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
    1096:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
    1098:	19 d2       	rcall	.+1074   	; 0x14cc <i2c_start>
    109a:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    109c:	6d d2       	rcall	.+1242   	; 0x1578 <i2c_write>
    109e:	85 e3       	ldi	r24, 0x35	; 53
    10a0:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    10a2:	f1 f7       	brne	.-4      	; 0x10a0 <mpu6050_readBytes+0x28>
    10a4:	00 00       	nop
    10a6:	81 ed       	ldi	r24, 0xD1	; 209
    10a8:	11 d2       	rcall	.+1058   	; 0x14cc <i2c_start>
    10aa:	0d 2f       	mov	r16, r29
    10ac:	1c 2f       	mov	r17, r28
    10ae:	cc 24       	eor	r12, r12
    10b0:	ca 94       	dec	r12
    10b2:	cf 0c       	add	r12, r15
    10b4:	d1 2c       	mov	r13, r1
    10b6:	ef ef       	ldi	r30, 0xFF	; 255
    10b8:	ce 1a       	sub	r12, r30
    10ba:	de 0a       	sbc	r13, r30
    10bc:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    10be:	d0 e0       	ldi	r29, 0x00	; 0
    10c0:	af 2c       	mov	r10, r15
    10c2:	b1 2c       	mov	r11, r1
    10c4:	f1 e0       	ldi	r31, 0x01	; 1
    10c6:	af 1a       	sub	r10, r31
    10c8:	b1 08       	sbc	r11, r1
    10ca:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
    10cc:	bd 06       	cpc	r11, r29
    10ce:	21 f4       	brne	.+8      	; 0x10d8 <mpu6050_readBytes+0x60>
    10d0:	8e d2       	rcall	.+1308   	; 0x15ee <i2c_readNak>
    10d2:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
    10d4:	80 83       	st	Z, r24
    10d6:	03 c0       	rjmp	.+6      	; 0x10de <mpu6050_readBytes+0x66>
    10d8:	70 d2       	rcall	.+1248   	; 0x15ba <i2c_readAck>
    10da:	f8 01       	movw	r30, r16
    10dc:	80 83       	st	Z, r24
    10de:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    10e0:	0f 5f       	subi	r16, 0xFF	; 255
    10e2:	1f 4f       	sbci	r17, 0xFF	; 255
    10e4:	cc 15       	cp	r28, r12
    10e6:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    10e8:	81 f7       	brne	.-32     	; 0x10ca <mpu6050_readBytes+0x52>
    10ea:	cf 2d       	mov	r28, r15
    10ec:	35 d2       	rcall	.+1130   	; 0x1558 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    10ee:	01 c0       	rjmp	.+2      	; 0x10f2 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    10f0:	c0 e0       	ldi	r28, 0x00	; 0
    10f2:	8c 2f       	mov	r24, r28
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	1f 91       	pop	r17
    10fa:	0f 91       	pop	r16
    10fc:	ff 90       	pop	r15
    10fe:	df 90       	pop	r13
    1100:	cf 90       	pop	r12
    1102:	bf 90       	pop	r11
    1104:	af 90       	pop	r10
    1106:	08 95       	ret

00001108 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    1108:	6f 92       	push	r6
    110a:	7f 92       	push	r7
    110c:	8f 92       	push	r8
    110e:	9f 92       	push	r9
    1110:	af 92       	push	r10
    1112:	bf 92       	push	r11
    1114:	cf 92       	push	r12
    1116:	df 92       	push	r13
    1118:	ef 92       	push	r14
    111a:	ff 92       	push	r15
    111c:	0f 93       	push	r16
    111e:	1f 93       	push	r17
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	cd b7       	in	r28, 0x3d	; 61
    1126:	de b7       	in	r29, 0x3e	; 62
    1128:	2e 97       	sbiw	r28, 0x0e	; 14
    112a:	0f b6       	in	r0, 0x3f	; 63
    112c:	f8 94       	cli
    112e:	de bf       	out	0x3e, r29	; 62
    1130:	0f be       	out	0x3f, r0	; 63
    1132:	cd bf       	out	0x3d, r28	; 61
    1134:	4c 01       	movw	r8, r24
    1136:	5b 01       	movw	r10, r22
    1138:	6a 01       	movw	r12, r20
    113a:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    113c:	ae 01       	movw	r20, r28
    113e:	4f 5f       	subi	r20, 0xFF	; 255
    1140:	5f 4f       	sbci	r21, 0xFF	; 255
    1142:	6e e0       	ldi	r22, 0x0E	; 14
    1144:	8b e3       	ldi	r24, 0x3B	; 59
    1146:	98 df       	rcall	.-208    	; 0x1078 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    1148:	89 81       	ldd	r24, Y+1	; 0x01
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	98 2f       	mov	r25, r24
    114e:	88 27       	eor	r24, r24
    1150:	2a 81       	ldd	r18, Y+2	; 0x02
    1152:	82 2b       	or	r24, r18
    1154:	f4 01       	movw	r30, r8
    1156:	91 83       	std	Z+1, r25	; 0x01
    1158:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    115a:	8b 81       	ldd	r24, Y+3	; 0x03
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	98 2f       	mov	r25, r24
    1160:	88 27       	eor	r24, r24
    1162:	2c 81       	ldd	r18, Y+4	; 0x04
    1164:	82 2b       	or	r24, r18
    1166:	f5 01       	movw	r30, r10
    1168:	91 83       	std	Z+1, r25	; 0x01
    116a:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    116c:	8d 81       	ldd	r24, Y+5	; 0x05
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	98 2f       	mov	r25, r24
    1172:	88 27       	eor	r24, r24
    1174:	2e 81       	ldd	r18, Y+6	; 0x06
    1176:	82 2b       	or	r24, r18
    1178:	f6 01       	movw	r30, r12
    117a:	91 83       	std	Z+1, r25	; 0x01
    117c:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    117e:	89 85       	ldd	r24, Y+9	; 0x09
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	98 2f       	mov	r25, r24
    1184:	88 27       	eor	r24, r24
    1186:	2a 85       	ldd	r18, Y+10	; 0x0a
    1188:	82 2b       	or	r24, r18
    118a:	f3 01       	movw	r30, r6
    118c:	91 83       	std	Z+1, r25	; 0x01
    118e:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    1190:	8b 85       	ldd	r24, Y+11	; 0x0b
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	98 2f       	mov	r25, r24
    1196:	88 27       	eor	r24, r24
    1198:	2c 85       	ldd	r18, Y+12	; 0x0c
    119a:	82 2b       	or	r24, r18
    119c:	f8 01       	movw	r30, r16
    119e:	91 83       	std	Z+1, r25	; 0x01
    11a0:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    11a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	98 2f       	mov	r25, r24
    11a8:	88 27       	eor	r24, r24
    11aa:	2e 85       	ldd	r18, Y+14	; 0x0e
    11ac:	82 2b       	or	r24, r18
    11ae:	f7 01       	movw	r30, r14
    11b0:	91 83       	std	Z+1, r25	; 0x01
    11b2:	80 83       	st	Z, r24
    11b4:	2e 96       	adiw	r28, 0x0e	; 14
    11b6:	0f b6       	in	r0, 0x3f	; 63
    11b8:	f8 94       	cli
    11ba:	de bf       	out	0x3e, r29	; 62
    11bc:	0f be       	out	0x3f, r0	; 63
    11be:	cd bf       	out	0x3d, r28	; 61
    11c0:	df 91       	pop	r29
    11c2:	cf 91       	pop	r28
    11c4:	1f 91       	pop	r17
    11c6:	0f 91       	pop	r16
    11c8:	ff 90       	pop	r15
    11ca:	ef 90       	pop	r14
    11cc:	df 90       	pop	r13
    11ce:	cf 90       	pop	r12
    11d0:	bf 90       	pop	r11
    11d2:	af 90       	pop	r10
    11d4:	9f 90       	pop	r9
    11d6:	8f 90       	pop	r8
    11d8:	7f 90       	pop	r7
    11da:	6f 90       	pop	r6
    11dc:	08 95       	ret

000011de <Compute_PID>:
 * Created: 9/24/2017 10:52:39 AM
 *  Author: rafja
 */ 
#include "PID.h"
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd)
{
    11de:	2f 92       	push	r2
    11e0:	3f 92       	push	r3
    11e2:	4f 92       	push	r4
    11e4:	5f 92       	push	r5
    11e6:	6f 92       	push	r6
    11e8:	7f 92       	push	r7
    11ea:	8f 92       	push	r8
    11ec:	9f 92       	push	r9
    11ee:	af 92       	push	r10
    11f0:	bf 92       	push	r11
    11f2:	cf 92       	push	r12
    11f4:	df 92       	push	r13
    11f6:	ef 92       	push	r14
    11f8:	ff 92       	push	r15
    11fa:	0f 93       	push	r16
    11fc:	1f 93       	push	r17
    11fe:	cf 93       	push	r28
    1200:	df 93       	push	r29
    1202:	00 d0       	rcall	.+0      	; 0x1204 <Compute_PID+0x26>
    1204:	1f 92       	push	r1
    1206:	cd b7       	in	r28, 0x3d	; 61
    1208:	de b7       	in	r29, 0x3e	; 62
	double error = angle-desired_angle;
    120a:	17 01       	movw	r2, r14
    120c:	81 d2       	rcall	.+1282   	; 0x1710 <__subsf3>
    120e:	69 83       	std	Y+1, r22	; 0x01
    1210:	7a 83       	std	Y+2, r23	; 0x02
    1212:	8b 83       	std	Y+3, r24	; 0x03
	double pid_p = kp*error;
    1214:	9c 83       	std	Y+4, r25	; 0x04
    1216:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1218:	3b 8d       	ldd	r19, Y+27	; 0x1b
    121a:	4c 8d       	ldd	r20, Y+28	; 0x1c
    121c:	5d 8d       	ldd	r21, Y+29	; 0x1d
    121e:	be d4       	rcall	.+2428   	; 0x1b9c <__mulsf3>
    1220:	2b 01       	movw	r4, r22
	if (abs(error)<3)
    1222:	3c 01       	movw	r6, r24
    1224:	69 81       	ldd	r22, Y+1	; 0x01
    1226:	7a 81       	ldd	r23, Y+2	; 0x02
    1228:	8b 81       	ldd	r24, Y+3	; 0x03
    122a:	9c 81       	ldd	r25, Y+4	; 0x04
    122c:	a4 d3       	rcall	.+1864   	; 0x1976 <__fixsfsi>
    122e:	6e 5f       	subi	r22, 0xFE	; 254
    1230:	7f 4f       	sbci	r23, 0xFF	; 255
    1232:	65 30       	cpi	r22, 0x05	; 5
    1234:	71 05       	cpc	r23, r1
	{
		*pid_i=*pid_i+(ki*error);	
    1236:	b0 f4       	brcc	.+44     	; 0x1264 <Compute_PID+0x86>
    1238:	2e 8d       	ldd	r18, Y+30	; 0x1e
    123a:	3f 8d       	ldd	r19, Y+31	; 0x1f
    123c:	48 a1       	ldd	r20, Y+32	; 0x20
    123e:	59 a1       	ldd	r21, Y+33	; 0x21
    1240:	69 81       	ldd	r22, Y+1	; 0x01
    1242:	7a 81       	ldd	r23, Y+2	; 0x02
    1244:	8b 81       	ldd	r24, Y+3	; 0x03
    1246:	9c 81       	ldd	r25, Y+4	; 0x04
    1248:	a9 d4       	rcall	.+2386   	; 0x1b9c <__mulsf3>
    124a:	9b 01       	movw	r18, r22
    124c:	ac 01       	movw	r20, r24
    124e:	d8 01       	movw	r26, r16
    1250:	6d 91       	ld	r22, X+
    1252:	7d 91       	ld	r23, X+
    1254:	8d 91       	ld	r24, X+
    1256:	9c 91       	ld	r25, X
    1258:	5c d2       	rcall	.+1208   	; 0x1712 <__addsf3>
    125a:	f8 01       	movw	r30, r16
    125c:	60 83       	st	Z, r22
    125e:	71 83       	std	Z+1, r23	; 0x01
    1260:	82 83       	std	Z+2, r24	; 0x02
	}
	double pid_d = kd*((error - *previous_error)/dt);
    1262:	93 83       	std	Z+3, r25	; 0x03
    1264:	d1 01       	movw	r26, r2
    1266:	2d 91       	ld	r18, X+
    1268:	3d 91       	ld	r19, X+
    126a:	4d 91       	ld	r20, X+
    126c:	5c 91       	ld	r21, X
    126e:	69 81       	ldd	r22, Y+1	; 0x01
    1270:	7a 81       	ldd	r23, Y+2	; 0x02
    1272:	8b 81       	ldd	r24, Y+3	; 0x03
    1274:	9c 81       	ldd	r25, Y+4	; 0x04
    1276:	4c d2       	rcall	.+1176   	; 0x1710 <__subsf3>
    1278:	a6 01       	movw	r20, r12
    127a:	95 01       	movw	r18, r10
    127c:	14 d3       	rcall	.+1576   	; 0x18a6 <__divsf3>
    127e:	2a a1       	ldd	r18, Y+34	; 0x22
    1280:	3b a1       	ldd	r19, Y+35	; 0x23
    1282:	4c a1       	ldd	r20, Y+36	; 0x24
    1284:	5d a1       	ldd	r21, Y+37	; 0x25
    1286:	8a d4       	rcall	.+2324   	; 0x1b9c <__mulsf3>
    1288:	4b 01       	movw	r8, r22
	*previous_error=error;
    128a:	5c 01       	movw	r10, r24
    128c:	89 81       	ldd	r24, Y+1	; 0x01
    128e:	9a 81       	ldd	r25, Y+2	; 0x02
    1290:	ab 81       	ldd	r26, Y+3	; 0x03
    1292:	bc 81       	ldd	r27, Y+4	; 0x04
    1294:	f1 01       	movw	r30, r2
    1296:	80 83       	st	Z, r24
    1298:	91 83       	std	Z+1, r25	; 0x01
	
	return pid_p + (*pid_i) + pid_d;
    129a:	a2 83       	std	Z+2, r26	; 0x02
    129c:	b3 83       	std	Z+3, r27	; 0x03
    129e:	d8 01       	movw	r26, r16
    12a0:	2d 91       	ld	r18, X+
    12a2:	3d 91       	ld	r19, X+
    12a4:	4d 91       	ld	r20, X+
    12a6:	5c 91       	ld	r21, X
    12a8:	c3 01       	movw	r24, r6
    12aa:	b2 01       	movw	r22, r4
    12ac:	32 d2       	rcall	.+1124   	; 0x1712 <__addsf3>
    12ae:	a5 01       	movw	r20, r10
    12b0:	94 01       	movw	r18, r8
    12b2:	2f d2       	rcall	.+1118   	; 0x1712 <__addsf3>
    12b4:	0f 90       	pop	r0
    12b6:	0f 90       	pop	r0
    12b8:	0f 90       	pop	r0
    12ba:	0f 90       	pop	r0
    12bc:	df 91       	pop	r29
    12be:	cf 91       	pop	r28
    12c0:	1f 91       	pop	r17
    12c2:	0f 91       	pop	r16
    12c4:	ff 90       	pop	r15
    12c6:	ef 90       	pop	r14
    12c8:	df 90       	pop	r13
    12ca:	cf 90       	pop	r12
    12cc:	bf 90       	pop	r11
    12ce:	af 90       	pop	r10
    12d0:	9f 90       	pop	r9
    12d2:	8f 90       	pop	r8
    12d4:	7f 90       	pop	r7
    12d6:	6f 90       	pop	r6
    12d8:	5f 90       	pop	r5
    12da:	4f 90       	pop	r4
    12dc:	3f 90       	pop	r3
    12de:	2f 90       	pop	r2
    12e0:	08 95       	ret

000012e2 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    12e2:	e1 ea       	ldi	r30, 0xA1	; 161
    12e4:	f0 e0       	ldi	r31, 0x00	; 0
    12e6:	80 81       	ld	r24, Z
    12e8:	81 60       	ori	r24, 0x01	; 1
    12ea:	80 83       	st	Z, r24
    12ec:	e0 ea       	ldi	r30, 0xA0	; 160
    12ee:	f0 e0       	ldi	r31, 0x00	; 0
    12f0:	80 81       	ld	r24, Z
    12f2:	81 60       	ori	r24, 0x01	; 1
    12f4:	80 83       	st	Z, r24
    12f6:	80 81       	ld	r24, Z
    12f8:	80 68       	ori	r24, 0x80	; 128
    12fa:	80 83       	st	Z, r24
    12fc:	80 81       	ld	r24, Z
    12fe:	80 62       	ori	r24, 0x20	; 32
    1300:	80 83       	st	Z, r24
    1302:	80 81       	ld	r24, Z
    1304:	88 60       	ori	r24, 0x08	; 8
    1306:	80 83       	st	Z, r24
    1308:	08 95       	ret

0000130a <setup_timer3>:
    130a:	e1 e9       	ldi	r30, 0x91	; 145
    130c:	f0 e0       	ldi	r31, 0x00	; 0
    130e:	80 81       	ld	r24, Z
    1310:	81 60       	ori	r24, 0x01	; 1
    1312:	80 83       	st	Z, r24
    1314:	e0 e9       	ldi	r30, 0x90	; 144
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	80 81       	ld	r24, Z
    131a:	81 60       	ori	r24, 0x01	; 1
    131c:	80 83       	st	Z, r24
    131e:	80 81       	ld	r24, Z
    1320:	80 68       	ori	r24, 0x80	; 128
    1322:	80 83       	st	Z, r24
    1324:	80 81       	ld	r24, Z
    1326:	80 62       	ori	r24, 0x20	; 32
    1328:	80 83       	st	Z, r24
    132a:	80 81       	ld	r24, Z
    132c:	88 60       	ori	r24, 0x08	; 8
    132e:	80 83       	st	Z, r24
    1330:	08 95       	ret

00001332 <setup_timer5>:
    1332:	e1 e2       	ldi	r30, 0x21	; 33
    1334:	f1 e0       	ldi	r31, 0x01	; 1
    1336:	80 81       	ld	r24, Z
    1338:	81 60       	ori	r24, 0x01	; 1
    133a:	80 83       	st	Z, r24
    133c:	80 81       	ld	r24, Z
    133e:	88 60       	ori	r24, 0x08	; 8
    1340:	80 83       	st	Z, r24
    1342:	08 95       	ret

00001344 <Enable_timer5_compare_interrupt>:
    1344:	e3 e7       	ldi	r30, 0x73	; 115
    1346:	f0 e0       	ldi	r31, 0x00	; 0
    1348:	80 81       	ld	r24, Z
    134a:	82 60       	ori	r24, 0x02	; 2
    134c:	80 83       	st	Z, r24
    134e:	08 95       	ret

00001350 <setup_timer1>:
    1350:	e1 e8       	ldi	r30, 0x81	; 129
    1352:	f0 e0       	ldi	r31, 0x00	; 0
    1354:	80 81       	ld	r24, Z
    1356:	81 60       	ori	r24, 0x01	; 1
    1358:	80 83       	st	Z, r24
    135a:	80 81       	ld	r24, Z
    135c:	88 60       	ori	r24, 0x08	; 8
    135e:	80 83       	st	Z, r24
    1360:	08 95       	ret

00001362 <setup_timer0>:
    1362:	85 b5       	in	r24, 0x25	; 37
    1364:	81 60       	ori	r24, 0x01	; 1
    1366:	85 bd       	out	0x25, r24	; 37
    1368:	85 b5       	in	r24, 0x25	; 37
    136a:	82 60       	ori	r24, 0x02	; 2
    136c:	85 bd       	out	0x25, r24	; 37
    136e:	08 95       	ret

00001370 <Enable_timer0_overflow_interrupt>:
    1370:	ee e6       	ldi	r30, 0x6E	; 110
    1372:	f0 e0       	ldi	r31, 0x00	; 0
    1374:	80 81       	ld	r24, Z
    1376:	81 60       	ori	r24, 0x01	; 1
    1378:	80 83       	st	Z, r24
    137a:	08 95       	ret

0000137c <micros>:
    137c:	3f b7       	in	r19, 0x3f	; 63
    137e:	f8 94       	cli
    1380:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <timer0_overflow_count>
    1384:	90 91 ce 03 	lds	r25, 0x03CE	; 0x8003ce <timer0_overflow_count+0x1>
    1388:	a0 91 cf 03 	lds	r26, 0x03CF	; 0x8003cf <timer0_overflow_count+0x2>
    138c:	b0 91 d0 03 	lds	r27, 0x03D0	; 0x8003d0 <timer0_overflow_count+0x3>
    1390:	26 b5       	in	r18, 0x26	; 38
    1392:	a8 9b       	sbis	0x15, 0	; 21
    1394:	05 c0       	rjmp	.+10     	; 0x13a0 <micros+0x24>
    1396:	2f 3f       	cpi	r18, 0xFF	; 255
    1398:	19 f0       	breq	.+6      	; 0x13a0 <micros+0x24>
    139a:	01 96       	adiw	r24, 0x01	; 1
    139c:	a1 1d       	adc	r26, r1
    139e:	b1 1d       	adc	r27, r1
    13a0:	3f bf       	out	0x3f, r19	; 63
    13a2:	ba 2f       	mov	r27, r26
    13a4:	a9 2f       	mov	r26, r25
    13a6:	98 2f       	mov	r25, r24
    13a8:	88 27       	eor	r24, r24
    13aa:	82 0f       	add	r24, r18
    13ac:	91 1d       	adc	r25, r1
    13ae:	a1 1d       	adc	r26, r1
    13b0:	b1 1d       	adc	r27, r1
    13b2:	bc 01       	movw	r22, r24
    13b4:	cd 01       	movw	r24, r26
    13b6:	66 0f       	add	r22, r22
    13b8:	77 1f       	adc	r23, r23
    13ba:	88 1f       	adc	r24, r24
    13bc:	99 1f       	adc	r25, r25
    13be:	66 0f       	add	r22, r22
    13c0:	77 1f       	adc	r23, r23
    13c2:	88 1f       	adc	r24, r24
    13c4:	99 1f       	adc	r25, r25
    13c6:	08 95       	ret

000013c8 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    13c8:	1f 92       	push	r1
    13ca:	0f 92       	push	r0
    13cc:	0f b6       	in	r0, 0x3f	; 63
    13ce:	0f 92       	push	r0
    13d0:	11 24       	eor	r1, r1
    13d2:	2f 93       	push	r18
    13d4:	3f 93       	push	r19
    13d6:	8f 93       	push	r24
    13d8:	9f 93       	push	r25
    13da:	af 93       	push	r26
    13dc:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    13de:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <timer0_millis>
    13e2:	90 91 ca 03 	lds	r25, 0x03CA	; 0x8003ca <timer0_millis+0x1>
    13e6:	a0 91 cb 03 	lds	r26, 0x03CB	; 0x8003cb <timer0_millis+0x2>
    13ea:	b0 91 cc 03 	lds	r27, 0x03CC	; 0x8003cc <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    13ee:	30 91 c8 03 	lds	r19, 0x03C8	; 0x8003c8 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    13f2:	23 e0       	ldi	r18, 0x03	; 3
    13f4:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    13f6:	2d 37       	cpi	r18, 0x7D	; 125
    13f8:	20 f4       	brcc	.+8      	; 0x1402 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    13fa:	01 96       	adiw	r24, 0x01	; 1
    13fc:	a1 1d       	adc	r26, r1
    13fe:	b1 1d       	adc	r27, r1
    1400:	05 c0       	rjmp	.+10     	; 0x140c <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    1402:	26 e8       	ldi	r18, 0x86	; 134
    1404:	23 0f       	add	r18, r19
		m += 1;
    1406:	02 96       	adiw	r24, 0x02	; 2
    1408:	a1 1d       	adc	r26, r1
    140a:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    140c:	20 93 c8 03 	sts	0x03C8, r18	; 0x8003c8 <timer0_fract>
	timer0_millis = m;
    1410:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <timer0_millis>
    1414:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <timer0_millis+0x1>
    1418:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <timer0_millis+0x2>
    141c:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <timer0_millis+0x3>
	timer0_overflow_count++;
    1420:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <timer0_overflow_count>
    1424:	90 91 ce 03 	lds	r25, 0x03CE	; 0x8003ce <timer0_overflow_count+0x1>
    1428:	a0 91 cf 03 	lds	r26, 0x03CF	; 0x8003cf <timer0_overflow_count+0x2>
    142c:	b0 91 d0 03 	lds	r27, 0x03D0	; 0x8003d0 <timer0_overflow_count+0x3>
    1430:	01 96       	adiw	r24, 0x01	; 1
    1432:	a1 1d       	adc	r26, r1
    1434:	b1 1d       	adc	r27, r1
    1436:	80 93 cd 03 	sts	0x03CD, r24	; 0x8003cd <timer0_overflow_count>
    143a:	90 93 ce 03 	sts	0x03CE, r25	; 0x8003ce <timer0_overflow_count+0x1>
    143e:	a0 93 cf 03 	sts	0x03CF, r26	; 0x8003cf <timer0_overflow_count+0x2>
    1442:	b0 93 d0 03 	sts	0x03D0, r27	; 0x8003d0 <timer0_overflow_count+0x3>
}
    1446:	bf 91       	pop	r27
    1448:	af 91       	pop	r26
    144a:	9f 91       	pop	r25
    144c:	8f 91       	pop	r24
    144e:	3f 91       	pop	r19
    1450:	2f 91       	pop	r18
    1452:	0f 90       	pop	r0
    1454:	0f be       	out	0x3f, r0	; 63
    1456:	0f 90       	pop	r0
    1458:	1f 90       	pop	r1
    145a:	18 95       	reti

0000145c <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    145c:	1f 92       	push	r1
    145e:	0f 92       	push	r0
    1460:	0f b6       	in	r0, 0x3f	; 63
    1462:	0f 92       	push	r0
    1464:	11 24       	eor	r1, r1
	//PWM_update();
}
    1466:	0f 90       	pop	r0
    1468:	0f be       	out	0x3f, r0	; 63
    146a:	0f 90       	pop	r0
    146c:	1f 90       	pop	r1
    146e:	18 95       	reti

00001470 <__vector_17>:
ISR(TIMER1_COMPA_vect)//motor update interrupt routine
{
    1470:	1f 92       	push	r1
    1472:	0f 92       	push	r0
    1474:	0f b6       	in	r0, 0x3f	; 63
    1476:	0f 92       	push	r0
    1478:	11 24       	eor	r1, r1
    147a:	0b b6       	in	r0, 0x3b	; 59
    147c:	0f 92       	push	r0
    147e:	2f 93       	push	r18
    1480:	3f 93       	push	r19
    1482:	4f 93       	push	r20
    1484:	5f 93       	push	r21
    1486:	6f 93       	push	r22
    1488:	7f 93       	push	r23
    148a:	8f 93       	push	r24
    148c:	9f 93       	push	r25
    148e:	af 93       	push	r26
    1490:	bf 93       	push	r27
    1492:	ef 93       	push	r30
    1494:	ff 93       	push	r31
	PWM_update_2();
    1496:	0e 94 2c 01 	call	0x258	; 0x258 <PWM_update_2>
    149a:	ff 91       	pop	r31
    149c:	ef 91       	pop	r30
    149e:	bf 91       	pop	r27
    14a0:	af 91       	pop	r26
    14a2:	9f 91       	pop	r25
    14a4:	8f 91       	pop	r24
    14a6:	7f 91       	pop	r23
    14a8:	6f 91       	pop	r22
    14aa:	5f 91       	pop	r21
    14ac:	4f 91       	pop	r20
    14ae:	3f 91       	pop	r19
    14b0:	2f 91       	pop	r18
    14b2:	0f 90       	pop	r0
    14b4:	0b be       	out	0x3b, r0	; 59
    14b6:	0f 90       	pop	r0
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	0f 90       	pop	r0
    14bc:	1f 90       	pop	r1
    14be:	18 95       	reti

000014c0 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    14c0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    14c4:	8c e0       	ldi	r24, 0x0C	; 12
    14c6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    14ca:	08 95       	ret

000014cc <i2c_start>:
    14cc:	94 ea       	ldi	r25, 0xA4	; 164
    14ce:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    14d2:	4f ef       	ldi	r20, 0xFF	; 255
    14d4:	50 e0       	ldi	r21, 0x00	; 0
    14d6:	60 e0       	ldi	r22, 0x00	; 0
    14d8:	70 e0       	ldi	r23, 0x00	; 0
    14da:	ec eb       	ldi	r30, 0xBC	; 188
    14dc:	f0 e0       	ldi	r31, 0x00	; 0
    14de:	90 81       	ld	r25, Z
    14e0:	99 23       	and	r25, r25
    14e2:	34 f0       	brlt	.+12     	; 0x14f0 <i2c_start+0x24>
    14e4:	41 50       	subi	r20, 0x01	; 1
    14e6:	51 09       	sbc	r21, r1
    14e8:	61 09       	sbc	r22, r1
    14ea:	71 09       	sbc	r23, r1
    14ec:	c0 f7       	brcc	.-16     	; 0x14de <i2c_start+0x12>
    14ee:	04 c0       	rjmp	.+8      	; 0x14f8 <i2c_start+0x2c>
    14f0:	45 2b       	or	r20, r21
    14f2:	46 2b       	or	r20, r22
    14f4:	47 2b       	or	r20, r23
    14f6:	41 f1       	breq	.+80     	; 0x1548 <i2c_start+0x7c>
    14f8:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    14fc:	98 7f       	andi	r25, 0xF8	; 248
    14fe:	98 30       	cpi	r25, 0x08	; 8
    1500:	11 f0       	breq	.+4      	; 0x1506 <i2c_start+0x3a>
    1502:	90 31       	cpi	r25, 0x10	; 16
    1504:	19 f5       	brne	.+70     	; 0x154c <i2c_start+0x80>
    1506:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    150a:	84 e8       	ldi	r24, 0x84	; 132
    150c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1510:	8f ef       	ldi	r24, 0xFF	; 255
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	a0 e0       	ldi	r26, 0x00	; 0
    1516:	b0 e0       	ldi	r27, 0x00	; 0
    1518:	ec eb       	ldi	r30, 0xBC	; 188
    151a:	f0 e0       	ldi	r31, 0x00	; 0
    151c:	20 81       	ld	r18, Z
    151e:	22 23       	and	r18, r18
    1520:	2c f0       	brlt	.+10     	; 0x152c <i2c_start+0x60>
    1522:	01 97       	sbiw	r24, 0x01	; 1
    1524:	a1 09       	sbc	r26, r1
    1526:	b1 09       	sbc	r27, r1
    1528:	c8 f7       	brcc	.-14     	; 0x151c <i2c_start+0x50>
    152a:	04 c0       	rjmp	.+8      	; 0x1534 <i2c_start+0x68>
    152c:	89 2b       	or	r24, r25
    152e:	8a 2b       	or	r24, r26
    1530:	8b 2b       	or	r24, r27
    1532:	71 f0       	breq	.+28     	; 0x1550 <i2c_start+0x84>
    1534:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1538:	98 7f       	andi	r25, 0xF8	; 248
    153a:	98 31       	cpi	r25, 0x18	; 24
    153c:	59 f0       	breq	.+22     	; 0x1554 <i2c_start+0x88>
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	90 34       	cpi	r25, 0x40	; 64
    1542:	49 f4       	brne	.+18     	; 0x1556 <i2c_start+0x8a>
    1544:	80 e0       	ldi	r24, 0x00	; 0
    1546:	08 95       	ret
    1548:	81 e0       	ldi	r24, 0x01	; 1
    154a:	08 95       	ret
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	08 95       	ret
    1550:	81 e0       	ldi	r24, 0x01	; 1
    1552:	08 95       	ret
    1554:	80 e0       	ldi	r24, 0x00	; 0
    1556:	08 95       	ret

00001558 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    1558:	84 e9       	ldi	r24, 0x94	; 148
    155a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    155e:	80 e0       	ldi	r24, 0x00	; 0
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	ec eb       	ldi	r30, 0xBC	; 188
    1564:	f0 e0       	ldi	r31, 0x00	; 0
    1566:	20 81       	ld	r18, Z
    1568:	24 ff       	sbrs	r18, 4
    156a:	05 c0       	rjmp	.+10     	; 0x1576 <i2c_stop+0x1e>
    156c:	01 96       	adiw	r24, 0x01	; 1
    156e:	81 15       	cp	r24, r1
    1570:	21 e0       	ldi	r18, 0x01	; 1
    1572:	92 07       	cpc	r25, r18
    1574:	c1 f7       	brne	.-16     	; 0x1566 <i2c_stop+0xe>
    1576:	08 95       	ret

00001578 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    1578:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    157c:	84 e8       	ldi	r24, 0x84	; 132
    157e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    1582:	8f ef       	ldi	r24, 0xFF	; 255
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	a0 e0       	ldi	r26, 0x00	; 0
    1588:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    158a:	ec eb       	ldi	r30, 0xBC	; 188
    158c:	f0 e0       	ldi	r31, 0x00	; 0
    158e:	20 81       	ld	r18, Z
    1590:	22 23       	and	r18, r18
    1592:	2c f0       	brlt	.+10     	; 0x159e <i2c_write+0x26>
    1594:	01 97       	sbiw	r24, 0x01	; 1
    1596:	a1 09       	sbc	r26, r1
    1598:	b1 09       	sbc	r27, r1
    159a:	c8 f7       	brcc	.-14     	; 0x158e <i2c_write+0x16>
    159c:	04 c0       	rjmp	.+8      	; 0x15a6 <i2c_write+0x2e>
	if(i2c_timer == 0)
    159e:	89 2b       	or	r24, r25
    15a0:	8a 2b       	or	r24, r26
    15a2:	8b 2b       	or	r24, r27
    15a4:	41 f0       	breq	.+16     	; 0x15b6 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    15a6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    15aa:	98 7f       	andi	r25, 0xF8	; 248
    15ac:	81 e0       	ldi	r24, 0x01	; 1
    15ae:	98 32       	cpi	r25, 0x28	; 40
    15b0:	19 f4       	brne	.+6      	; 0x15b8 <i2c_write+0x40>
    15b2:	80 e0       	ldi	r24, 0x00	; 0
    15b4:	08 95       	ret
    15b6:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    15b8:	08 95       	ret

000015ba <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    15ba:	84 ec       	ldi	r24, 0xC4	; 196
    15bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    15c0:	8f ef       	ldi	r24, 0xFF	; 255
    15c2:	90 e0       	ldi	r25, 0x00	; 0
    15c4:	a0 e0       	ldi	r26, 0x00	; 0
    15c6:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    15c8:	ec eb       	ldi	r30, 0xBC	; 188
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	20 81       	ld	r18, Z
    15ce:	22 23       	and	r18, r18
    15d0:	2c f0       	brlt	.+10     	; 0x15dc <i2c_readAck+0x22>
    15d2:	01 97       	sbiw	r24, 0x01	; 1
    15d4:	a1 09       	sbc	r26, r1
    15d6:	b1 09       	sbc	r27, r1
    15d8:	c8 f7       	brcc	.-14     	; 0x15cc <i2c_readAck+0x12>
    15da:	04 c0       	rjmp	.+8      	; 0x15e4 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    15dc:	89 2b       	or	r24, r25
    15de:	8a 2b       	or	r24, r26
    15e0:	8b 2b       	or	r24, r27
    15e2:	19 f0       	breq	.+6      	; 0x15ea <i2c_readAck+0x30>
		return 0;

    return TWDR;
    15e4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    15e8:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    15ea:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    15ec:	08 95       	ret

000015ee <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    15ee:	84 e8       	ldi	r24, 0x84	; 132
    15f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    15f4:	8f ef       	ldi	r24, 0xFF	; 255
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	a0 e0       	ldi	r26, 0x00	; 0
    15fa:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    15fc:	ec eb       	ldi	r30, 0xBC	; 188
    15fe:	f0 e0       	ldi	r31, 0x00	; 0
    1600:	20 81       	ld	r18, Z
    1602:	22 23       	and	r18, r18
    1604:	2c f0       	brlt	.+10     	; 0x1610 <i2c_readNak+0x22>
    1606:	01 97       	sbiw	r24, 0x01	; 1
    1608:	a1 09       	sbc	r26, r1
    160a:	b1 09       	sbc	r27, r1
    160c:	c8 f7       	brcc	.-14     	; 0x1600 <i2c_readNak+0x12>
    160e:	04 c0       	rjmp	.+8      	; 0x1618 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    1610:	89 2b       	or	r24, r25
    1612:	8a 2b       	or	r24, r26
    1614:	8b 2b       	or	r24, r27
    1616:	19 f0       	breq	.+6      	; 0x161e <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    1618:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    161c:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    161e:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    1620:	08 95       	ret

00001622 <USART_Init>:
{
	printf(c);
	//printf(" ");
	print16(&intToPrint);
	printf("  ");
}
    1622:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1626:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    162a:	88 e0       	ldi	r24, 0x08	; 8
    162c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    1630:	8e e0       	ldi	r24, 0x0E	; 14
    1632:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1636:	08 95       	ret

00001638 <uart_putchar>:
    1638:	cf 93       	push	r28
    163a:	c8 2f       	mov	r28, r24
    163c:	8a 30       	cpi	r24, 0x0A	; 10
    163e:	11 f4       	brne	.+4      	; 0x1644 <uart_putchar+0xc>
    1640:	8d e0       	ldi	r24, 0x0D	; 13
    1642:	fa df       	rcall	.-12     	; 0x1638 <uart_putchar>
    1644:	e0 ec       	ldi	r30, 0xC0	; 192
    1646:	f0 e0       	ldi	r31, 0x00	; 0
    1648:	80 81       	ld	r24, Z
    164a:	85 ff       	sbrs	r24, 5
    164c:	fd cf       	rjmp	.-6      	; 0x1648 <uart_putchar+0x10>
    164e:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1652:	80 e0       	ldi	r24, 0x00	; 0
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	cf 91       	pop	r28
    1658:	08 95       	ret

0000165a <printDouble>:
void printDouble(double *value)
{
    165a:	0f 93       	push	r16
    165c:	1f 93       	push	r17
    165e:	cf 93       	push	r28
    1660:	df 93       	push	r29
    1662:	cd b7       	in	r28, 0x3d	; 61
    1664:	de b7       	in	r29, 0x3e	; 62
    1666:	64 97       	sbiw	r28, 0x14	; 20
    1668:	0f b6       	in	r0, 0x3f	; 63
    166a:	f8 94       	cli
    166c:	de bf       	out	0x3e, r29	; 62
    166e:	0f be       	out	0x3f, r0	; 63
    1670:	cd bf       	out	0x3d, r28	; 61
    1672:	fc 01       	movw	r30, r24
	char c[20]={0};
    1674:	8e 01       	movw	r16, r28
    1676:	0f 5f       	subi	r16, 0xFF	; 255
    1678:	1f 4f       	sbci	r17, 0xFF	; 255
    167a:	84 e1       	ldi	r24, 0x14	; 20
    167c:	d8 01       	movw	r26, r16
    167e:	1d 92       	st	X+, r1
    1680:	8a 95       	dec	r24
    1682:	e9 f7       	brne	.-6      	; 0x167e <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    1684:	83 81       	ldd	r24, Z+3	; 0x03
    1686:	8f 93       	push	r24
    1688:	82 81       	ldd	r24, Z+2	; 0x02
    168a:	8f 93       	push	r24
    168c:	81 81       	ldd	r24, Z+1	; 0x01
    168e:	8f 93       	push	r24
    1690:	80 81       	ld	r24, Z
    1692:	8f 93       	push	r24
    1694:	88 eb       	ldi	r24, 0xB8	; 184
    1696:	93 e0       	ldi	r25, 0x03	; 3
    1698:	9f 93       	push	r25
    169a:	8f 93       	push	r24
    169c:	1f 93       	push	r17
    169e:	0f 93       	push	r16
    16a0:	0e 94 c7 13 	call	0x278e	; 0x278e <sprintf>
	printf(c);
    16a4:	1f 93       	push	r17
    16a6:	0f 93       	push	r16
    16a8:	0e 94 af 13 	call	0x275e	; 0x275e <printf>
}
    16ac:	0f b6       	in	r0, 0x3f	; 63
    16ae:	f8 94       	cli
    16b0:	de bf       	out	0x3e, r29	; 62
    16b2:	0f be       	out	0x3f, r0	; 63
    16b4:	cd bf       	out	0x3d, r28	; 61
    16b6:	64 96       	adiw	r28, 0x14	; 20
    16b8:	0f b6       	in	r0, 0x3f	; 63
    16ba:	f8 94       	cli
    16bc:	de bf       	out	0x3e, r29	; 62
    16be:	0f be       	out	0x3f, r0	; 63
    16c0:	cd bf       	out	0x3d, r28	; 61
    16c2:	df 91       	pop	r29
    16c4:	cf 91       	pop	r28
    16c6:	1f 91       	pop	r17
    16c8:	0f 91       	pop	r16
    16ca:	08 95       	ret

000016cc <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    16cc:	cf 93       	push	r28
    16ce:	df 93       	push	r29
    16d0:	00 d0       	rcall	.+0      	; 0x16d2 <printSD+0x6>
    16d2:	1f 92       	push	r1
    16d4:	cd b7       	in	r28, 0x3d	; 61
    16d6:	de b7       	in	r29, 0x3e	; 62
    16d8:	49 83       	std	Y+1, r20	; 0x01
    16da:	5a 83       	std	Y+2, r21	; 0x02
    16dc:	6b 83       	std	Y+3, r22	; 0x03
    16de:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    16e0:	9f 93       	push	r25
    16e2:	8f 93       	push	r24
    16e4:	0e 94 af 13 	call	0x275e	; 0x275e <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    16e8:	ce 01       	movw	r24, r28
    16ea:	01 96       	adiw	r24, 0x01	; 1
    16ec:	b6 df       	rcall	.-148    	; 0x165a <printDouble>
	printf("  ");
    16ee:	85 eb       	ldi	r24, 0xB5	; 181
    16f0:	93 e0       	ldi	r25, 0x03	; 3
    16f2:	9f 93       	push	r25
    16f4:	8f 93       	push	r24
    16f6:	0e 94 af 13 	call	0x275e	; 0x275e <printf>
    16fa:	0f 90       	pop	r0
    16fc:	0f 90       	pop	r0
    16fe:	0f 90       	pop	r0
    1700:	0f 90       	pop	r0
    1702:	0f 90       	pop	r0
    1704:	0f 90       	pop	r0
    1706:	0f 90       	pop	r0
    1708:	0f 90       	pop	r0
    170a:	df 91       	pop	r29
    170c:	cf 91       	pop	r28
    170e:	08 95       	ret

00001710 <__subsf3>:
    1710:	50 58       	subi	r21, 0x80	; 128

00001712 <__addsf3>:
    1712:	bb 27       	eor	r27, r27
    1714:	aa 27       	eor	r26, r26
    1716:	0e d0       	rcall	.+28     	; 0x1734 <__addsf3x>
    1718:	fc c1       	rjmp	.+1016   	; 0x1b12 <__fp_round>
    171a:	ed d1       	rcall	.+986    	; 0x1af6 <__fp_pscA>
    171c:	30 f0       	brcs	.+12     	; 0x172a <__addsf3+0x18>
    171e:	f2 d1       	rcall	.+996    	; 0x1b04 <__fp_pscB>
    1720:	20 f0       	brcs	.+8      	; 0x172a <__addsf3+0x18>
    1722:	31 f4       	brne	.+12     	; 0x1730 <__addsf3+0x1e>
    1724:	9f 3f       	cpi	r25, 0xFF	; 255
    1726:	11 f4       	brne	.+4      	; 0x172c <__addsf3+0x1a>
    1728:	1e f4       	brtc	.+6      	; 0x1730 <__addsf3+0x1e>
    172a:	bd c1       	rjmp	.+890    	; 0x1aa6 <__fp_nan>
    172c:	0e f4       	brtc	.+2      	; 0x1730 <__addsf3+0x1e>
    172e:	e0 95       	com	r30
    1730:	e7 fb       	bst	r30, 7
    1732:	b3 c1       	rjmp	.+870    	; 0x1a9a <__fp_inf>

00001734 <__addsf3x>:
    1734:	e9 2f       	mov	r30, r25
    1736:	fe d1       	rcall	.+1020   	; 0x1b34 <__fp_split3>
    1738:	80 f3       	brcs	.-32     	; 0x171a <__addsf3+0x8>
    173a:	ba 17       	cp	r27, r26
    173c:	62 07       	cpc	r22, r18
    173e:	73 07       	cpc	r23, r19
    1740:	84 07       	cpc	r24, r20
    1742:	95 07       	cpc	r25, r21
    1744:	18 f0       	brcs	.+6      	; 0x174c <__addsf3x+0x18>
    1746:	71 f4       	brne	.+28     	; 0x1764 <__addsf3x+0x30>
    1748:	9e f5       	brtc	.+102    	; 0x17b0 <__addsf3x+0x7c>
    174a:	16 c2       	rjmp	.+1068   	; 0x1b78 <__fp_zero>
    174c:	0e f4       	brtc	.+2      	; 0x1750 <__addsf3x+0x1c>
    174e:	e0 95       	com	r30
    1750:	0b 2e       	mov	r0, r27
    1752:	ba 2f       	mov	r27, r26
    1754:	a0 2d       	mov	r26, r0
    1756:	0b 01       	movw	r0, r22
    1758:	b9 01       	movw	r22, r18
    175a:	90 01       	movw	r18, r0
    175c:	0c 01       	movw	r0, r24
    175e:	ca 01       	movw	r24, r20
    1760:	a0 01       	movw	r20, r0
    1762:	11 24       	eor	r1, r1
    1764:	ff 27       	eor	r31, r31
    1766:	59 1b       	sub	r21, r25
    1768:	99 f0       	breq	.+38     	; 0x1790 <__addsf3x+0x5c>
    176a:	59 3f       	cpi	r21, 0xF9	; 249
    176c:	50 f4       	brcc	.+20     	; 0x1782 <__addsf3x+0x4e>
    176e:	50 3e       	cpi	r21, 0xE0	; 224
    1770:	68 f1       	brcs	.+90     	; 0x17cc <__addsf3x+0x98>
    1772:	1a 16       	cp	r1, r26
    1774:	f0 40       	sbci	r31, 0x00	; 0
    1776:	a2 2f       	mov	r26, r18
    1778:	23 2f       	mov	r18, r19
    177a:	34 2f       	mov	r19, r20
    177c:	44 27       	eor	r20, r20
    177e:	58 5f       	subi	r21, 0xF8	; 248
    1780:	f3 cf       	rjmp	.-26     	; 0x1768 <__addsf3x+0x34>
    1782:	46 95       	lsr	r20
    1784:	37 95       	ror	r19
    1786:	27 95       	ror	r18
    1788:	a7 95       	ror	r26
    178a:	f0 40       	sbci	r31, 0x00	; 0
    178c:	53 95       	inc	r21
    178e:	c9 f7       	brne	.-14     	; 0x1782 <__addsf3x+0x4e>
    1790:	7e f4       	brtc	.+30     	; 0x17b0 <__addsf3x+0x7c>
    1792:	1f 16       	cp	r1, r31
    1794:	ba 0b       	sbc	r27, r26
    1796:	62 0b       	sbc	r22, r18
    1798:	73 0b       	sbc	r23, r19
    179a:	84 0b       	sbc	r24, r20
    179c:	ba f0       	brmi	.+46     	; 0x17cc <__addsf3x+0x98>
    179e:	91 50       	subi	r25, 0x01	; 1
    17a0:	a1 f0       	breq	.+40     	; 0x17ca <__addsf3x+0x96>
    17a2:	ff 0f       	add	r31, r31
    17a4:	bb 1f       	adc	r27, r27
    17a6:	66 1f       	adc	r22, r22
    17a8:	77 1f       	adc	r23, r23
    17aa:	88 1f       	adc	r24, r24
    17ac:	c2 f7       	brpl	.-16     	; 0x179e <__addsf3x+0x6a>
    17ae:	0e c0       	rjmp	.+28     	; 0x17cc <__addsf3x+0x98>
    17b0:	ba 0f       	add	r27, r26
    17b2:	62 1f       	adc	r22, r18
    17b4:	73 1f       	adc	r23, r19
    17b6:	84 1f       	adc	r24, r20
    17b8:	48 f4       	brcc	.+18     	; 0x17cc <__addsf3x+0x98>
    17ba:	87 95       	ror	r24
    17bc:	77 95       	ror	r23
    17be:	67 95       	ror	r22
    17c0:	b7 95       	ror	r27
    17c2:	f7 95       	ror	r31
    17c4:	9e 3f       	cpi	r25, 0xFE	; 254
    17c6:	08 f0       	brcs	.+2      	; 0x17ca <__addsf3x+0x96>
    17c8:	b3 cf       	rjmp	.-154    	; 0x1730 <__addsf3+0x1e>
    17ca:	93 95       	inc	r25
    17cc:	88 0f       	add	r24, r24
    17ce:	08 f0       	brcs	.+2      	; 0x17d2 <__addsf3x+0x9e>
    17d0:	99 27       	eor	r25, r25
    17d2:	ee 0f       	add	r30, r30
    17d4:	97 95       	ror	r25
    17d6:	87 95       	ror	r24
    17d8:	08 95       	ret
    17da:	8d d1       	rcall	.+794    	; 0x1af6 <__fp_pscA>
    17dc:	58 f0       	brcs	.+22     	; 0x17f4 <__addsf3x+0xc0>
    17de:	80 e8       	ldi	r24, 0x80	; 128
    17e0:	91 e0       	ldi	r25, 0x01	; 1
    17e2:	09 f4       	brne	.+2      	; 0x17e6 <__addsf3x+0xb2>
    17e4:	9e ef       	ldi	r25, 0xFE	; 254
    17e6:	8e d1       	rcall	.+796    	; 0x1b04 <__fp_pscB>
    17e8:	28 f0       	brcs	.+10     	; 0x17f4 <__addsf3x+0xc0>
    17ea:	40 e8       	ldi	r20, 0x80	; 128
    17ec:	51 e0       	ldi	r21, 0x01	; 1
    17ee:	59 f4       	brne	.+22     	; 0x1806 <atan2+0xe>
    17f0:	5e ef       	ldi	r21, 0xFE	; 254
    17f2:	09 c0       	rjmp	.+18     	; 0x1806 <atan2+0xe>
    17f4:	58 c1       	rjmp	.+688    	; 0x1aa6 <__fp_nan>
    17f6:	c0 c1       	rjmp	.+896    	; 0x1b78 <__fp_zero>

000017f8 <atan2>:
    17f8:	e9 2f       	mov	r30, r25
    17fa:	e0 78       	andi	r30, 0x80	; 128
    17fc:	9b d1       	rcall	.+822    	; 0x1b34 <__fp_split3>
    17fe:	68 f3       	brcs	.-38     	; 0x17da <__addsf3x+0xa6>
    1800:	09 2e       	mov	r0, r25
    1802:	05 2a       	or	r0, r21
    1804:	c1 f3       	breq	.-16     	; 0x17f6 <__addsf3x+0xc2>
    1806:	26 17       	cp	r18, r22
    1808:	37 07       	cpc	r19, r23
    180a:	48 07       	cpc	r20, r24
    180c:	59 07       	cpc	r21, r25
    180e:	38 f0       	brcs	.+14     	; 0x181e <atan2+0x26>
    1810:	0e 2e       	mov	r0, r30
    1812:	07 f8       	bld	r0, 7
    1814:	e0 25       	eor	r30, r0
    1816:	69 f0       	breq	.+26     	; 0x1832 <atan2+0x3a>
    1818:	e0 25       	eor	r30, r0
    181a:	e0 64       	ori	r30, 0x40	; 64
    181c:	0a c0       	rjmp	.+20     	; 0x1832 <atan2+0x3a>
    181e:	ef 63       	ori	r30, 0x3F	; 63
    1820:	07 f8       	bld	r0, 7
    1822:	00 94       	com	r0
    1824:	07 fa       	bst	r0, 7
    1826:	db 01       	movw	r26, r22
    1828:	b9 01       	movw	r22, r18
    182a:	9d 01       	movw	r18, r26
    182c:	dc 01       	movw	r26, r24
    182e:	ca 01       	movw	r24, r20
    1830:	ad 01       	movw	r20, r26
    1832:	ef 93       	push	r30
    1834:	47 d0       	rcall	.+142    	; 0x18c4 <__divsf3_pse>
    1836:	6d d1       	rcall	.+730    	; 0x1b12 <__fp_round>
    1838:	0a d0       	rcall	.+20     	; 0x184e <atan>
    183a:	5f 91       	pop	r21
    183c:	55 23       	and	r21, r21
    183e:	31 f0       	breq	.+12     	; 0x184c <atan2+0x54>
    1840:	2b ed       	ldi	r18, 0xDB	; 219
    1842:	3f e0       	ldi	r19, 0x0F	; 15
    1844:	49 e4       	ldi	r20, 0x49	; 73
    1846:	50 fd       	sbrc	r21, 0
    1848:	49 ec       	ldi	r20, 0xC9	; 201
    184a:	63 cf       	rjmp	.-314    	; 0x1712 <__addsf3>
    184c:	08 95       	ret

0000184e <atan>:
    184e:	df 93       	push	r29
    1850:	dd 27       	eor	r29, r29
    1852:	b9 2f       	mov	r27, r25
    1854:	bf 77       	andi	r27, 0x7F	; 127
    1856:	40 e8       	ldi	r20, 0x80	; 128
    1858:	5f e3       	ldi	r21, 0x3F	; 63
    185a:	16 16       	cp	r1, r22
    185c:	17 06       	cpc	r1, r23
    185e:	48 07       	cpc	r20, r24
    1860:	5b 07       	cpc	r21, r27
    1862:	10 f4       	brcc	.+4      	; 0x1868 <atan+0x1a>
    1864:	d9 2f       	mov	r29, r25
    1866:	93 d1       	rcall	.+806    	; 0x1b8e <inverse>
    1868:	9f 93       	push	r25
    186a:	8f 93       	push	r24
    186c:	7f 93       	push	r23
    186e:	6f 93       	push	r22
    1870:	3a d2       	rcall	.+1140   	; 0x1ce6 <square>
    1872:	e4 ee       	ldi	r30, 0xE4	; 228
    1874:	f0 e0       	ldi	r31, 0x00	; 0
    1876:	1a d1       	rcall	.+564    	; 0x1aac <__fp_powser>
    1878:	4c d1       	rcall	.+664    	; 0x1b12 <__fp_round>
    187a:	2f 91       	pop	r18
    187c:	3f 91       	pop	r19
    187e:	4f 91       	pop	r20
    1880:	5f 91       	pop	r21
    1882:	98 d1       	rcall	.+816    	; 0x1bb4 <__mulsf3x>
    1884:	dd 23       	and	r29, r29
    1886:	49 f0       	breq	.+18     	; 0x189a <atan+0x4c>
    1888:	90 58       	subi	r25, 0x80	; 128
    188a:	a2 ea       	ldi	r26, 0xA2	; 162
    188c:	2a ed       	ldi	r18, 0xDA	; 218
    188e:	3f e0       	ldi	r19, 0x0F	; 15
    1890:	49 ec       	ldi	r20, 0xC9	; 201
    1892:	5f e3       	ldi	r21, 0x3F	; 63
    1894:	d0 78       	andi	r29, 0x80	; 128
    1896:	5d 27       	eor	r21, r29
    1898:	4d df       	rcall	.-358    	; 0x1734 <__addsf3x>
    189a:	df 91       	pop	r29
    189c:	3a c1       	rjmp	.+628    	; 0x1b12 <__fp_round>

0000189e <__cmpsf2>:
    189e:	d9 d0       	rcall	.+434    	; 0x1a52 <__fp_cmp>
    18a0:	08 f4       	brcc	.+2      	; 0x18a4 <__cmpsf2+0x6>
    18a2:	81 e0       	ldi	r24, 0x01	; 1
    18a4:	08 95       	ret

000018a6 <__divsf3>:
    18a6:	0c d0       	rcall	.+24     	; 0x18c0 <__divsf3x>
    18a8:	34 c1       	rjmp	.+616    	; 0x1b12 <__fp_round>
    18aa:	2c d1       	rcall	.+600    	; 0x1b04 <__fp_pscB>
    18ac:	40 f0       	brcs	.+16     	; 0x18be <__divsf3+0x18>
    18ae:	23 d1       	rcall	.+582    	; 0x1af6 <__fp_pscA>
    18b0:	30 f0       	brcs	.+12     	; 0x18be <__divsf3+0x18>
    18b2:	21 f4       	brne	.+8      	; 0x18bc <__divsf3+0x16>
    18b4:	5f 3f       	cpi	r21, 0xFF	; 255
    18b6:	19 f0       	breq	.+6      	; 0x18be <__divsf3+0x18>
    18b8:	f0 c0       	rjmp	.+480    	; 0x1a9a <__fp_inf>
    18ba:	51 11       	cpse	r21, r1
    18bc:	5e c1       	rjmp	.+700    	; 0x1b7a <__fp_szero>
    18be:	f3 c0       	rjmp	.+486    	; 0x1aa6 <__fp_nan>

000018c0 <__divsf3x>:
    18c0:	39 d1       	rcall	.+626    	; 0x1b34 <__fp_split3>
    18c2:	98 f3       	brcs	.-26     	; 0x18aa <__divsf3+0x4>

000018c4 <__divsf3_pse>:
    18c4:	99 23       	and	r25, r25
    18c6:	c9 f3       	breq	.-14     	; 0x18ba <__divsf3+0x14>
    18c8:	55 23       	and	r21, r21
    18ca:	b1 f3       	breq	.-20     	; 0x18b8 <__divsf3+0x12>
    18cc:	95 1b       	sub	r25, r21
    18ce:	55 0b       	sbc	r21, r21
    18d0:	bb 27       	eor	r27, r27
    18d2:	aa 27       	eor	r26, r26
    18d4:	62 17       	cp	r22, r18
    18d6:	73 07       	cpc	r23, r19
    18d8:	84 07       	cpc	r24, r20
    18da:	38 f0       	brcs	.+14     	; 0x18ea <__divsf3_pse+0x26>
    18dc:	9f 5f       	subi	r25, 0xFF	; 255
    18de:	5f 4f       	sbci	r21, 0xFF	; 255
    18e0:	22 0f       	add	r18, r18
    18e2:	33 1f       	adc	r19, r19
    18e4:	44 1f       	adc	r20, r20
    18e6:	aa 1f       	adc	r26, r26
    18e8:	a9 f3       	breq	.-22     	; 0x18d4 <__divsf3_pse+0x10>
    18ea:	33 d0       	rcall	.+102    	; 0x1952 <__divsf3_pse+0x8e>
    18ec:	0e 2e       	mov	r0, r30
    18ee:	3a f0       	brmi	.+14     	; 0x18fe <__divsf3_pse+0x3a>
    18f0:	e0 e8       	ldi	r30, 0x80	; 128
    18f2:	30 d0       	rcall	.+96     	; 0x1954 <__divsf3_pse+0x90>
    18f4:	91 50       	subi	r25, 0x01	; 1
    18f6:	50 40       	sbci	r21, 0x00	; 0
    18f8:	e6 95       	lsr	r30
    18fa:	00 1c       	adc	r0, r0
    18fc:	ca f7       	brpl	.-14     	; 0x18f0 <__divsf3_pse+0x2c>
    18fe:	29 d0       	rcall	.+82     	; 0x1952 <__divsf3_pse+0x8e>
    1900:	fe 2f       	mov	r31, r30
    1902:	27 d0       	rcall	.+78     	; 0x1952 <__divsf3_pse+0x8e>
    1904:	66 0f       	add	r22, r22
    1906:	77 1f       	adc	r23, r23
    1908:	88 1f       	adc	r24, r24
    190a:	bb 1f       	adc	r27, r27
    190c:	26 17       	cp	r18, r22
    190e:	37 07       	cpc	r19, r23
    1910:	48 07       	cpc	r20, r24
    1912:	ab 07       	cpc	r26, r27
    1914:	b0 e8       	ldi	r27, 0x80	; 128
    1916:	09 f0       	breq	.+2      	; 0x191a <__divsf3_pse+0x56>
    1918:	bb 0b       	sbc	r27, r27
    191a:	80 2d       	mov	r24, r0
    191c:	bf 01       	movw	r22, r30
    191e:	ff 27       	eor	r31, r31
    1920:	93 58       	subi	r25, 0x83	; 131
    1922:	5f 4f       	sbci	r21, 0xFF	; 255
    1924:	2a f0       	brmi	.+10     	; 0x1930 <__divsf3_pse+0x6c>
    1926:	9e 3f       	cpi	r25, 0xFE	; 254
    1928:	51 05       	cpc	r21, r1
    192a:	68 f0       	brcs	.+26     	; 0x1946 <__divsf3_pse+0x82>
    192c:	b6 c0       	rjmp	.+364    	; 0x1a9a <__fp_inf>
    192e:	25 c1       	rjmp	.+586    	; 0x1b7a <__fp_szero>
    1930:	5f 3f       	cpi	r21, 0xFF	; 255
    1932:	ec f3       	brlt	.-6      	; 0x192e <__divsf3_pse+0x6a>
    1934:	98 3e       	cpi	r25, 0xE8	; 232
    1936:	dc f3       	brlt	.-10     	; 0x192e <__divsf3_pse+0x6a>
    1938:	86 95       	lsr	r24
    193a:	77 95       	ror	r23
    193c:	67 95       	ror	r22
    193e:	b7 95       	ror	r27
    1940:	f7 95       	ror	r31
    1942:	9f 5f       	subi	r25, 0xFF	; 255
    1944:	c9 f7       	brne	.-14     	; 0x1938 <__divsf3_pse+0x74>
    1946:	88 0f       	add	r24, r24
    1948:	91 1d       	adc	r25, r1
    194a:	96 95       	lsr	r25
    194c:	87 95       	ror	r24
    194e:	97 f9       	bld	r25, 7
    1950:	08 95       	ret
    1952:	e1 e0       	ldi	r30, 0x01	; 1
    1954:	66 0f       	add	r22, r22
    1956:	77 1f       	adc	r23, r23
    1958:	88 1f       	adc	r24, r24
    195a:	bb 1f       	adc	r27, r27
    195c:	62 17       	cp	r22, r18
    195e:	73 07       	cpc	r23, r19
    1960:	84 07       	cpc	r24, r20
    1962:	ba 07       	cpc	r27, r26
    1964:	20 f0       	brcs	.+8      	; 0x196e <__divsf3_pse+0xaa>
    1966:	62 1b       	sub	r22, r18
    1968:	73 0b       	sbc	r23, r19
    196a:	84 0b       	sbc	r24, r20
    196c:	ba 0b       	sbc	r27, r26
    196e:	ee 1f       	adc	r30, r30
    1970:	88 f7       	brcc	.-30     	; 0x1954 <__divsf3_pse+0x90>
    1972:	e0 95       	com	r30
    1974:	08 95       	ret

00001976 <__fixsfsi>:
    1976:	04 d0       	rcall	.+8      	; 0x1980 <__fixunssfsi>
    1978:	68 94       	set
    197a:	b1 11       	cpse	r27, r1
    197c:	fe c0       	rjmp	.+508    	; 0x1b7a <__fp_szero>
    197e:	08 95       	ret

00001980 <__fixunssfsi>:
    1980:	e1 d0       	rcall	.+450    	; 0x1b44 <__fp_splitA>
    1982:	88 f0       	brcs	.+34     	; 0x19a6 <__fixunssfsi+0x26>
    1984:	9f 57       	subi	r25, 0x7F	; 127
    1986:	90 f0       	brcs	.+36     	; 0x19ac <__fixunssfsi+0x2c>
    1988:	b9 2f       	mov	r27, r25
    198a:	99 27       	eor	r25, r25
    198c:	b7 51       	subi	r27, 0x17	; 23
    198e:	a0 f0       	brcs	.+40     	; 0x19b8 <__fixunssfsi+0x38>
    1990:	d1 f0       	breq	.+52     	; 0x19c6 <__fixunssfsi+0x46>
    1992:	66 0f       	add	r22, r22
    1994:	77 1f       	adc	r23, r23
    1996:	88 1f       	adc	r24, r24
    1998:	99 1f       	adc	r25, r25
    199a:	1a f0       	brmi	.+6      	; 0x19a2 <__fixunssfsi+0x22>
    199c:	ba 95       	dec	r27
    199e:	c9 f7       	brne	.-14     	; 0x1992 <__fixunssfsi+0x12>
    19a0:	12 c0       	rjmp	.+36     	; 0x19c6 <__fixunssfsi+0x46>
    19a2:	b1 30       	cpi	r27, 0x01	; 1
    19a4:	81 f0       	breq	.+32     	; 0x19c6 <__fixunssfsi+0x46>
    19a6:	e8 d0       	rcall	.+464    	; 0x1b78 <__fp_zero>
    19a8:	b1 e0       	ldi	r27, 0x01	; 1
    19aa:	08 95       	ret
    19ac:	e5 c0       	rjmp	.+458    	; 0x1b78 <__fp_zero>
    19ae:	67 2f       	mov	r22, r23
    19b0:	78 2f       	mov	r23, r24
    19b2:	88 27       	eor	r24, r24
    19b4:	b8 5f       	subi	r27, 0xF8	; 248
    19b6:	39 f0       	breq	.+14     	; 0x19c6 <__fixunssfsi+0x46>
    19b8:	b9 3f       	cpi	r27, 0xF9	; 249
    19ba:	cc f3       	brlt	.-14     	; 0x19ae <__fixunssfsi+0x2e>
    19bc:	86 95       	lsr	r24
    19be:	77 95       	ror	r23
    19c0:	67 95       	ror	r22
    19c2:	b3 95       	inc	r27
    19c4:	d9 f7       	brne	.-10     	; 0x19bc <__fixunssfsi+0x3c>
    19c6:	3e f4       	brtc	.+14     	; 0x19d6 <__fixunssfsi+0x56>
    19c8:	90 95       	com	r25
    19ca:	80 95       	com	r24
    19cc:	70 95       	com	r23
    19ce:	61 95       	neg	r22
    19d0:	7f 4f       	sbci	r23, 0xFF	; 255
    19d2:	8f 4f       	sbci	r24, 0xFF	; 255
    19d4:	9f 4f       	sbci	r25, 0xFF	; 255
    19d6:	08 95       	ret

000019d8 <__floatunsisf>:
    19d8:	e8 94       	clt
    19da:	09 c0       	rjmp	.+18     	; 0x19ee <__floatsisf+0x12>

000019dc <__floatsisf>:
    19dc:	97 fb       	bst	r25, 7
    19de:	3e f4       	brtc	.+14     	; 0x19ee <__floatsisf+0x12>
    19e0:	90 95       	com	r25
    19e2:	80 95       	com	r24
    19e4:	70 95       	com	r23
    19e6:	61 95       	neg	r22
    19e8:	7f 4f       	sbci	r23, 0xFF	; 255
    19ea:	8f 4f       	sbci	r24, 0xFF	; 255
    19ec:	9f 4f       	sbci	r25, 0xFF	; 255
    19ee:	99 23       	and	r25, r25
    19f0:	a9 f0       	breq	.+42     	; 0x1a1c <__floatsisf+0x40>
    19f2:	f9 2f       	mov	r31, r25
    19f4:	96 e9       	ldi	r25, 0x96	; 150
    19f6:	bb 27       	eor	r27, r27
    19f8:	93 95       	inc	r25
    19fa:	f6 95       	lsr	r31
    19fc:	87 95       	ror	r24
    19fe:	77 95       	ror	r23
    1a00:	67 95       	ror	r22
    1a02:	b7 95       	ror	r27
    1a04:	f1 11       	cpse	r31, r1
    1a06:	f8 cf       	rjmp	.-16     	; 0x19f8 <__floatsisf+0x1c>
    1a08:	fa f4       	brpl	.+62     	; 0x1a48 <__floatsisf+0x6c>
    1a0a:	bb 0f       	add	r27, r27
    1a0c:	11 f4       	brne	.+4      	; 0x1a12 <__floatsisf+0x36>
    1a0e:	60 ff       	sbrs	r22, 0
    1a10:	1b c0       	rjmp	.+54     	; 0x1a48 <__floatsisf+0x6c>
    1a12:	6f 5f       	subi	r22, 0xFF	; 255
    1a14:	7f 4f       	sbci	r23, 0xFF	; 255
    1a16:	8f 4f       	sbci	r24, 0xFF	; 255
    1a18:	9f 4f       	sbci	r25, 0xFF	; 255
    1a1a:	16 c0       	rjmp	.+44     	; 0x1a48 <__floatsisf+0x6c>
    1a1c:	88 23       	and	r24, r24
    1a1e:	11 f0       	breq	.+4      	; 0x1a24 <__floatsisf+0x48>
    1a20:	96 e9       	ldi	r25, 0x96	; 150
    1a22:	11 c0       	rjmp	.+34     	; 0x1a46 <__floatsisf+0x6a>
    1a24:	77 23       	and	r23, r23
    1a26:	21 f0       	breq	.+8      	; 0x1a30 <__floatsisf+0x54>
    1a28:	9e e8       	ldi	r25, 0x8E	; 142
    1a2a:	87 2f       	mov	r24, r23
    1a2c:	76 2f       	mov	r23, r22
    1a2e:	05 c0       	rjmp	.+10     	; 0x1a3a <__floatsisf+0x5e>
    1a30:	66 23       	and	r22, r22
    1a32:	71 f0       	breq	.+28     	; 0x1a50 <__floatsisf+0x74>
    1a34:	96 e8       	ldi	r25, 0x86	; 134
    1a36:	86 2f       	mov	r24, r22
    1a38:	70 e0       	ldi	r23, 0x00	; 0
    1a3a:	60 e0       	ldi	r22, 0x00	; 0
    1a3c:	2a f0       	brmi	.+10     	; 0x1a48 <__floatsisf+0x6c>
    1a3e:	9a 95       	dec	r25
    1a40:	66 0f       	add	r22, r22
    1a42:	77 1f       	adc	r23, r23
    1a44:	88 1f       	adc	r24, r24
    1a46:	da f7       	brpl	.-10     	; 0x1a3e <__floatsisf+0x62>
    1a48:	88 0f       	add	r24, r24
    1a4a:	96 95       	lsr	r25
    1a4c:	87 95       	ror	r24
    1a4e:	97 f9       	bld	r25, 7
    1a50:	08 95       	ret

00001a52 <__fp_cmp>:
    1a52:	99 0f       	add	r25, r25
    1a54:	00 08       	sbc	r0, r0
    1a56:	55 0f       	add	r21, r21
    1a58:	aa 0b       	sbc	r26, r26
    1a5a:	e0 e8       	ldi	r30, 0x80	; 128
    1a5c:	fe ef       	ldi	r31, 0xFE	; 254
    1a5e:	16 16       	cp	r1, r22
    1a60:	17 06       	cpc	r1, r23
    1a62:	e8 07       	cpc	r30, r24
    1a64:	f9 07       	cpc	r31, r25
    1a66:	c0 f0       	brcs	.+48     	; 0x1a98 <__fp_cmp+0x46>
    1a68:	12 16       	cp	r1, r18
    1a6a:	13 06       	cpc	r1, r19
    1a6c:	e4 07       	cpc	r30, r20
    1a6e:	f5 07       	cpc	r31, r21
    1a70:	98 f0       	brcs	.+38     	; 0x1a98 <__fp_cmp+0x46>
    1a72:	62 1b       	sub	r22, r18
    1a74:	73 0b       	sbc	r23, r19
    1a76:	84 0b       	sbc	r24, r20
    1a78:	95 0b       	sbc	r25, r21
    1a7a:	39 f4       	brne	.+14     	; 0x1a8a <__fp_cmp+0x38>
    1a7c:	0a 26       	eor	r0, r26
    1a7e:	61 f0       	breq	.+24     	; 0x1a98 <__fp_cmp+0x46>
    1a80:	23 2b       	or	r18, r19
    1a82:	24 2b       	or	r18, r20
    1a84:	25 2b       	or	r18, r21
    1a86:	21 f4       	brne	.+8      	; 0x1a90 <__fp_cmp+0x3e>
    1a88:	08 95       	ret
    1a8a:	0a 26       	eor	r0, r26
    1a8c:	09 f4       	brne	.+2      	; 0x1a90 <__fp_cmp+0x3e>
    1a8e:	a1 40       	sbci	r26, 0x01	; 1
    1a90:	a6 95       	lsr	r26
    1a92:	8f ef       	ldi	r24, 0xFF	; 255
    1a94:	81 1d       	adc	r24, r1
    1a96:	81 1d       	adc	r24, r1
    1a98:	08 95       	ret

00001a9a <__fp_inf>:
    1a9a:	97 f9       	bld	r25, 7
    1a9c:	9f 67       	ori	r25, 0x7F	; 127
    1a9e:	80 e8       	ldi	r24, 0x80	; 128
    1aa0:	70 e0       	ldi	r23, 0x00	; 0
    1aa2:	60 e0       	ldi	r22, 0x00	; 0
    1aa4:	08 95       	ret

00001aa6 <__fp_nan>:
    1aa6:	9f ef       	ldi	r25, 0xFF	; 255
    1aa8:	80 ec       	ldi	r24, 0xC0	; 192
    1aaa:	08 95       	ret

00001aac <__fp_powser>:
    1aac:	df 93       	push	r29
    1aae:	cf 93       	push	r28
    1ab0:	1f 93       	push	r17
    1ab2:	0f 93       	push	r16
    1ab4:	ff 92       	push	r15
    1ab6:	ef 92       	push	r14
    1ab8:	df 92       	push	r13
    1aba:	7b 01       	movw	r14, r22
    1abc:	8c 01       	movw	r16, r24
    1abe:	68 94       	set
    1ac0:	05 c0       	rjmp	.+10     	; 0x1acc <__fp_powser+0x20>
    1ac2:	da 2e       	mov	r13, r26
    1ac4:	ef 01       	movw	r28, r30
    1ac6:	76 d0       	rcall	.+236    	; 0x1bb4 <__mulsf3x>
    1ac8:	fe 01       	movw	r30, r28
    1aca:	e8 94       	clt
    1acc:	a5 91       	lpm	r26, Z+
    1ace:	25 91       	lpm	r18, Z+
    1ad0:	35 91       	lpm	r19, Z+
    1ad2:	45 91       	lpm	r20, Z+
    1ad4:	55 91       	lpm	r21, Z+
    1ad6:	ae f3       	brts	.-22     	; 0x1ac2 <__fp_powser+0x16>
    1ad8:	ef 01       	movw	r28, r30
    1ada:	2c de       	rcall	.-936    	; 0x1734 <__addsf3x>
    1adc:	fe 01       	movw	r30, r28
    1ade:	97 01       	movw	r18, r14
    1ae0:	a8 01       	movw	r20, r16
    1ae2:	da 94       	dec	r13
    1ae4:	79 f7       	brne	.-34     	; 0x1ac4 <__fp_powser+0x18>
    1ae6:	df 90       	pop	r13
    1ae8:	ef 90       	pop	r14
    1aea:	ff 90       	pop	r15
    1aec:	0f 91       	pop	r16
    1aee:	1f 91       	pop	r17
    1af0:	cf 91       	pop	r28
    1af2:	df 91       	pop	r29
    1af4:	08 95       	ret

00001af6 <__fp_pscA>:
    1af6:	00 24       	eor	r0, r0
    1af8:	0a 94       	dec	r0
    1afa:	16 16       	cp	r1, r22
    1afc:	17 06       	cpc	r1, r23
    1afe:	18 06       	cpc	r1, r24
    1b00:	09 06       	cpc	r0, r25
    1b02:	08 95       	ret

00001b04 <__fp_pscB>:
    1b04:	00 24       	eor	r0, r0
    1b06:	0a 94       	dec	r0
    1b08:	12 16       	cp	r1, r18
    1b0a:	13 06       	cpc	r1, r19
    1b0c:	14 06       	cpc	r1, r20
    1b0e:	05 06       	cpc	r0, r21
    1b10:	08 95       	ret

00001b12 <__fp_round>:
    1b12:	09 2e       	mov	r0, r25
    1b14:	03 94       	inc	r0
    1b16:	00 0c       	add	r0, r0
    1b18:	11 f4       	brne	.+4      	; 0x1b1e <__fp_round+0xc>
    1b1a:	88 23       	and	r24, r24
    1b1c:	52 f0       	brmi	.+20     	; 0x1b32 <__fp_round+0x20>
    1b1e:	bb 0f       	add	r27, r27
    1b20:	40 f4       	brcc	.+16     	; 0x1b32 <__fp_round+0x20>
    1b22:	bf 2b       	or	r27, r31
    1b24:	11 f4       	brne	.+4      	; 0x1b2a <__fp_round+0x18>
    1b26:	60 ff       	sbrs	r22, 0
    1b28:	04 c0       	rjmp	.+8      	; 0x1b32 <__fp_round+0x20>
    1b2a:	6f 5f       	subi	r22, 0xFF	; 255
    1b2c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b2e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b30:	9f 4f       	sbci	r25, 0xFF	; 255
    1b32:	08 95       	ret

00001b34 <__fp_split3>:
    1b34:	57 fd       	sbrc	r21, 7
    1b36:	90 58       	subi	r25, 0x80	; 128
    1b38:	44 0f       	add	r20, r20
    1b3a:	55 1f       	adc	r21, r21
    1b3c:	59 f0       	breq	.+22     	; 0x1b54 <__fp_splitA+0x10>
    1b3e:	5f 3f       	cpi	r21, 0xFF	; 255
    1b40:	71 f0       	breq	.+28     	; 0x1b5e <__fp_splitA+0x1a>
    1b42:	47 95       	ror	r20

00001b44 <__fp_splitA>:
    1b44:	88 0f       	add	r24, r24
    1b46:	97 fb       	bst	r25, 7
    1b48:	99 1f       	adc	r25, r25
    1b4a:	61 f0       	breq	.+24     	; 0x1b64 <__fp_splitA+0x20>
    1b4c:	9f 3f       	cpi	r25, 0xFF	; 255
    1b4e:	79 f0       	breq	.+30     	; 0x1b6e <__fp_splitA+0x2a>
    1b50:	87 95       	ror	r24
    1b52:	08 95       	ret
    1b54:	12 16       	cp	r1, r18
    1b56:	13 06       	cpc	r1, r19
    1b58:	14 06       	cpc	r1, r20
    1b5a:	55 1f       	adc	r21, r21
    1b5c:	f2 cf       	rjmp	.-28     	; 0x1b42 <__fp_split3+0xe>
    1b5e:	46 95       	lsr	r20
    1b60:	f1 df       	rcall	.-30     	; 0x1b44 <__fp_splitA>
    1b62:	08 c0       	rjmp	.+16     	; 0x1b74 <__fp_splitA+0x30>
    1b64:	16 16       	cp	r1, r22
    1b66:	17 06       	cpc	r1, r23
    1b68:	18 06       	cpc	r1, r24
    1b6a:	99 1f       	adc	r25, r25
    1b6c:	f1 cf       	rjmp	.-30     	; 0x1b50 <__fp_splitA+0xc>
    1b6e:	86 95       	lsr	r24
    1b70:	71 05       	cpc	r23, r1
    1b72:	61 05       	cpc	r22, r1
    1b74:	08 94       	sec
    1b76:	08 95       	ret

00001b78 <__fp_zero>:
    1b78:	e8 94       	clt

00001b7a <__fp_szero>:
    1b7a:	bb 27       	eor	r27, r27
    1b7c:	66 27       	eor	r22, r22
    1b7e:	77 27       	eor	r23, r23
    1b80:	cb 01       	movw	r24, r22
    1b82:	97 f9       	bld	r25, 7
    1b84:	08 95       	ret

00001b86 <__gesf2>:
    1b86:	65 df       	rcall	.-310    	; 0x1a52 <__fp_cmp>
    1b88:	08 f4       	brcc	.+2      	; 0x1b8c <__gesf2+0x6>
    1b8a:	8f ef       	ldi	r24, 0xFF	; 255
    1b8c:	08 95       	ret

00001b8e <inverse>:
    1b8e:	9b 01       	movw	r18, r22
    1b90:	ac 01       	movw	r20, r24
    1b92:	60 e0       	ldi	r22, 0x00	; 0
    1b94:	70 e0       	ldi	r23, 0x00	; 0
    1b96:	80 e8       	ldi	r24, 0x80	; 128
    1b98:	9f e3       	ldi	r25, 0x3F	; 63
    1b9a:	85 ce       	rjmp	.-758    	; 0x18a6 <__divsf3>

00001b9c <__mulsf3>:
    1b9c:	0b d0       	rcall	.+22     	; 0x1bb4 <__mulsf3x>
    1b9e:	b9 cf       	rjmp	.-142    	; 0x1b12 <__fp_round>
    1ba0:	aa df       	rcall	.-172    	; 0x1af6 <__fp_pscA>
    1ba2:	28 f0       	brcs	.+10     	; 0x1bae <__mulsf3+0x12>
    1ba4:	af df       	rcall	.-162    	; 0x1b04 <__fp_pscB>
    1ba6:	18 f0       	brcs	.+6      	; 0x1bae <__mulsf3+0x12>
    1ba8:	95 23       	and	r25, r21
    1baa:	09 f0       	breq	.+2      	; 0x1bae <__mulsf3+0x12>
    1bac:	76 cf       	rjmp	.-276    	; 0x1a9a <__fp_inf>
    1bae:	7b cf       	rjmp	.-266    	; 0x1aa6 <__fp_nan>
    1bb0:	11 24       	eor	r1, r1
    1bb2:	e3 cf       	rjmp	.-58     	; 0x1b7a <__fp_szero>

00001bb4 <__mulsf3x>:
    1bb4:	bf df       	rcall	.-130    	; 0x1b34 <__fp_split3>
    1bb6:	a0 f3       	brcs	.-24     	; 0x1ba0 <__mulsf3+0x4>

00001bb8 <__mulsf3_pse>:
    1bb8:	95 9f       	mul	r25, r21
    1bba:	d1 f3       	breq	.-12     	; 0x1bb0 <__mulsf3+0x14>
    1bbc:	95 0f       	add	r25, r21
    1bbe:	50 e0       	ldi	r21, 0x00	; 0
    1bc0:	55 1f       	adc	r21, r21
    1bc2:	62 9f       	mul	r22, r18
    1bc4:	f0 01       	movw	r30, r0
    1bc6:	72 9f       	mul	r23, r18
    1bc8:	bb 27       	eor	r27, r27
    1bca:	f0 0d       	add	r31, r0
    1bcc:	b1 1d       	adc	r27, r1
    1bce:	63 9f       	mul	r22, r19
    1bd0:	aa 27       	eor	r26, r26
    1bd2:	f0 0d       	add	r31, r0
    1bd4:	b1 1d       	adc	r27, r1
    1bd6:	aa 1f       	adc	r26, r26
    1bd8:	64 9f       	mul	r22, r20
    1bda:	66 27       	eor	r22, r22
    1bdc:	b0 0d       	add	r27, r0
    1bde:	a1 1d       	adc	r26, r1
    1be0:	66 1f       	adc	r22, r22
    1be2:	82 9f       	mul	r24, r18
    1be4:	22 27       	eor	r18, r18
    1be6:	b0 0d       	add	r27, r0
    1be8:	a1 1d       	adc	r26, r1
    1bea:	62 1f       	adc	r22, r18
    1bec:	73 9f       	mul	r23, r19
    1bee:	b0 0d       	add	r27, r0
    1bf0:	a1 1d       	adc	r26, r1
    1bf2:	62 1f       	adc	r22, r18
    1bf4:	83 9f       	mul	r24, r19
    1bf6:	a0 0d       	add	r26, r0
    1bf8:	61 1d       	adc	r22, r1
    1bfa:	22 1f       	adc	r18, r18
    1bfc:	74 9f       	mul	r23, r20
    1bfe:	33 27       	eor	r19, r19
    1c00:	a0 0d       	add	r26, r0
    1c02:	61 1d       	adc	r22, r1
    1c04:	23 1f       	adc	r18, r19
    1c06:	84 9f       	mul	r24, r20
    1c08:	60 0d       	add	r22, r0
    1c0a:	21 1d       	adc	r18, r1
    1c0c:	82 2f       	mov	r24, r18
    1c0e:	76 2f       	mov	r23, r22
    1c10:	6a 2f       	mov	r22, r26
    1c12:	11 24       	eor	r1, r1
    1c14:	9f 57       	subi	r25, 0x7F	; 127
    1c16:	50 40       	sbci	r21, 0x00	; 0
    1c18:	8a f0       	brmi	.+34     	; 0x1c3c <__mulsf3_pse+0x84>
    1c1a:	e1 f0       	breq	.+56     	; 0x1c54 <__mulsf3_pse+0x9c>
    1c1c:	88 23       	and	r24, r24
    1c1e:	4a f0       	brmi	.+18     	; 0x1c32 <__mulsf3_pse+0x7a>
    1c20:	ee 0f       	add	r30, r30
    1c22:	ff 1f       	adc	r31, r31
    1c24:	bb 1f       	adc	r27, r27
    1c26:	66 1f       	adc	r22, r22
    1c28:	77 1f       	adc	r23, r23
    1c2a:	88 1f       	adc	r24, r24
    1c2c:	91 50       	subi	r25, 0x01	; 1
    1c2e:	50 40       	sbci	r21, 0x00	; 0
    1c30:	a9 f7       	brne	.-22     	; 0x1c1c <__mulsf3_pse+0x64>
    1c32:	9e 3f       	cpi	r25, 0xFE	; 254
    1c34:	51 05       	cpc	r21, r1
    1c36:	70 f0       	brcs	.+28     	; 0x1c54 <__mulsf3_pse+0x9c>
    1c38:	30 cf       	rjmp	.-416    	; 0x1a9a <__fp_inf>
    1c3a:	9f cf       	rjmp	.-194    	; 0x1b7a <__fp_szero>
    1c3c:	5f 3f       	cpi	r21, 0xFF	; 255
    1c3e:	ec f3       	brlt	.-6      	; 0x1c3a <__mulsf3_pse+0x82>
    1c40:	98 3e       	cpi	r25, 0xE8	; 232
    1c42:	dc f3       	brlt	.-10     	; 0x1c3a <__mulsf3_pse+0x82>
    1c44:	86 95       	lsr	r24
    1c46:	77 95       	ror	r23
    1c48:	67 95       	ror	r22
    1c4a:	b7 95       	ror	r27
    1c4c:	f7 95       	ror	r31
    1c4e:	e7 95       	ror	r30
    1c50:	9f 5f       	subi	r25, 0xFF	; 255
    1c52:	c1 f7       	brne	.-16     	; 0x1c44 <__mulsf3_pse+0x8c>
    1c54:	fe 2b       	or	r31, r30
    1c56:	88 0f       	add	r24, r24
    1c58:	91 1d       	adc	r25, r1
    1c5a:	96 95       	lsr	r25
    1c5c:	87 95       	ror	r24
    1c5e:	97 f9       	bld	r25, 7
    1c60:	08 95       	ret
    1c62:	11 f4       	brne	.+4      	; 0x1c68 <__mulsf3_pse+0xb0>
    1c64:	0e f4       	brtc	.+2      	; 0x1c68 <__mulsf3_pse+0xb0>
    1c66:	1f cf       	rjmp	.-450    	; 0x1aa6 <__fp_nan>
    1c68:	41 c0       	rjmp	.+130    	; 0x1cec <__fp_mpack>

00001c6a <sqrt>:
    1c6a:	6c df       	rcall	.-296    	; 0x1b44 <__fp_splitA>
    1c6c:	d0 f3       	brcs	.-12     	; 0x1c62 <__mulsf3_pse+0xaa>
    1c6e:	99 23       	and	r25, r25
    1c70:	d9 f3       	breq	.-10     	; 0x1c68 <__mulsf3_pse+0xb0>
    1c72:	ce f3       	brts	.-14     	; 0x1c66 <__mulsf3_pse+0xae>
    1c74:	9f 57       	subi	r25, 0x7F	; 127
    1c76:	55 0b       	sbc	r21, r21
    1c78:	87 ff       	sbrs	r24, 7
    1c7a:	46 d0       	rcall	.+140    	; 0x1d08 <__fp_norm2>
    1c7c:	00 24       	eor	r0, r0
    1c7e:	a0 e6       	ldi	r26, 0x60	; 96
    1c80:	40 ea       	ldi	r20, 0xA0	; 160
    1c82:	90 01       	movw	r18, r0
    1c84:	80 58       	subi	r24, 0x80	; 128
    1c86:	56 95       	lsr	r21
    1c88:	97 95       	ror	r25
    1c8a:	28 f4       	brcc	.+10     	; 0x1c96 <sqrt+0x2c>
    1c8c:	80 5c       	subi	r24, 0xC0	; 192
    1c8e:	66 0f       	add	r22, r22
    1c90:	77 1f       	adc	r23, r23
    1c92:	88 1f       	adc	r24, r24
    1c94:	20 f0       	brcs	.+8      	; 0x1c9e <sqrt+0x34>
    1c96:	26 17       	cp	r18, r22
    1c98:	37 07       	cpc	r19, r23
    1c9a:	48 07       	cpc	r20, r24
    1c9c:	30 f4       	brcc	.+12     	; 0x1caa <sqrt+0x40>
    1c9e:	62 1b       	sub	r22, r18
    1ca0:	73 0b       	sbc	r23, r19
    1ca2:	84 0b       	sbc	r24, r20
    1ca4:	20 29       	or	r18, r0
    1ca6:	31 29       	or	r19, r1
    1ca8:	4a 2b       	or	r20, r26
    1caa:	a6 95       	lsr	r26
    1cac:	17 94       	ror	r1
    1cae:	07 94       	ror	r0
    1cb0:	20 25       	eor	r18, r0
    1cb2:	31 25       	eor	r19, r1
    1cb4:	4a 27       	eor	r20, r26
    1cb6:	58 f7       	brcc	.-42     	; 0x1c8e <sqrt+0x24>
    1cb8:	66 0f       	add	r22, r22
    1cba:	77 1f       	adc	r23, r23
    1cbc:	88 1f       	adc	r24, r24
    1cbe:	20 f0       	brcs	.+8      	; 0x1cc8 <sqrt+0x5e>
    1cc0:	26 17       	cp	r18, r22
    1cc2:	37 07       	cpc	r19, r23
    1cc4:	48 07       	cpc	r20, r24
    1cc6:	30 f4       	brcc	.+12     	; 0x1cd4 <sqrt+0x6a>
    1cc8:	62 0b       	sbc	r22, r18
    1cca:	73 0b       	sbc	r23, r19
    1ccc:	84 0b       	sbc	r24, r20
    1cce:	20 0d       	add	r18, r0
    1cd0:	31 1d       	adc	r19, r1
    1cd2:	41 1d       	adc	r20, r1
    1cd4:	a0 95       	com	r26
    1cd6:	81 f7       	brne	.-32     	; 0x1cb8 <sqrt+0x4e>
    1cd8:	b9 01       	movw	r22, r18
    1cda:	84 2f       	mov	r24, r20
    1cdc:	91 58       	subi	r25, 0x81	; 129
    1cde:	88 0f       	add	r24, r24
    1ce0:	96 95       	lsr	r25
    1ce2:	87 95       	ror	r24
    1ce4:	08 95       	ret

00001ce6 <square>:
    1ce6:	9b 01       	movw	r18, r22
    1ce8:	ac 01       	movw	r20, r24
    1cea:	58 cf       	rjmp	.-336    	; 0x1b9c <__mulsf3>

00001cec <__fp_mpack>:
    1cec:	9f 3f       	cpi	r25, 0xFF	; 255
    1cee:	31 f0       	breq	.+12     	; 0x1cfc <__fp_mpack_finite+0xc>

00001cf0 <__fp_mpack_finite>:
    1cf0:	91 50       	subi	r25, 0x01	; 1
    1cf2:	20 f4       	brcc	.+8      	; 0x1cfc <__fp_mpack_finite+0xc>
    1cf4:	87 95       	ror	r24
    1cf6:	77 95       	ror	r23
    1cf8:	67 95       	ror	r22
    1cfa:	b7 95       	ror	r27
    1cfc:	88 0f       	add	r24, r24
    1cfe:	91 1d       	adc	r25, r1
    1d00:	96 95       	lsr	r25
    1d02:	87 95       	ror	r24
    1d04:	97 f9       	bld	r25, 7
    1d06:	08 95       	ret

00001d08 <__fp_norm2>:
    1d08:	91 50       	subi	r25, 0x01	; 1
    1d0a:	50 40       	sbci	r21, 0x00	; 0
    1d0c:	66 0f       	add	r22, r22
    1d0e:	77 1f       	adc	r23, r23
    1d10:	88 1f       	adc	r24, r24
    1d12:	d2 f7       	brpl	.-12     	; 0x1d08 <__fp_norm2>
    1d14:	08 95       	ret

00001d16 <vfprintf>:
    1d16:	2f 92       	push	r2
    1d18:	3f 92       	push	r3
    1d1a:	4f 92       	push	r4
    1d1c:	5f 92       	push	r5
    1d1e:	6f 92       	push	r6
    1d20:	7f 92       	push	r7
    1d22:	8f 92       	push	r8
    1d24:	9f 92       	push	r9
    1d26:	af 92       	push	r10
    1d28:	bf 92       	push	r11
    1d2a:	cf 92       	push	r12
    1d2c:	df 92       	push	r13
    1d2e:	ef 92       	push	r14
    1d30:	ff 92       	push	r15
    1d32:	0f 93       	push	r16
    1d34:	1f 93       	push	r17
    1d36:	cf 93       	push	r28
    1d38:	df 93       	push	r29
    1d3a:	cd b7       	in	r28, 0x3d	; 61
    1d3c:	de b7       	in	r29, 0x3e	; 62
    1d3e:	60 97       	sbiw	r28, 0x10	; 16
    1d40:	0f b6       	in	r0, 0x3f	; 63
    1d42:	f8 94       	cli
    1d44:	de bf       	out	0x3e, r29	; 62
    1d46:	0f be       	out	0x3f, r0	; 63
    1d48:	cd bf       	out	0x3d, r28	; 61
    1d4a:	7c 01       	movw	r14, r24
    1d4c:	1b 01       	movw	r2, r22
    1d4e:	6a 01       	movw	r12, r20
    1d50:	fc 01       	movw	r30, r24
    1d52:	17 82       	std	Z+7, r1	; 0x07
    1d54:	16 82       	std	Z+6, r1	; 0x06
    1d56:	83 81       	ldd	r24, Z+3	; 0x03
    1d58:	81 ff       	sbrs	r24, 1
    1d5a:	2a c3       	rjmp	.+1620   	; 0x23b0 <__stack+0x1b1>
    1d5c:	9e 01       	movw	r18, r28
    1d5e:	2f 5f       	subi	r18, 0xFF	; 255
    1d60:	3f 4f       	sbci	r19, 0xFF	; 255
    1d62:	39 01       	movw	r6, r18
    1d64:	f7 01       	movw	r30, r14
    1d66:	93 81       	ldd	r25, Z+3	; 0x03
    1d68:	f1 01       	movw	r30, r2
    1d6a:	93 fd       	sbrc	r25, 3
    1d6c:	85 91       	lpm	r24, Z+
    1d6e:	93 ff       	sbrs	r25, 3
    1d70:	81 91       	ld	r24, Z+
    1d72:	1f 01       	movw	r2, r30
    1d74:	88 23       	and	r24, r24
    1d76:	09 f4       	brne	.+2      	; 0x1d7a <vfprintf+0x64>
    1d78:	17 c3       	rjmp	.+1582   	; 0x23a8 <__stack+0x1a9>
    1d7a:	85 32       	cpi	r24, 0x25	; 37
    1d7c:	39 f4       	brne	.+14     	; 0x1d8c <vfprintf+0x76>
    1d7e:	93 fd       	sbrc	r25, 3
    1d80:	85 91       	lpm	r24, Z+
    1d82:	93 ff       	sbrs	r25, 3
    1d84:	81 91       	ld	r24, Z+
    1d86:	1f 01       	movw	r2, r30
    1d88:	85 32       	cpi	r24, 0x25	; 37
    1d8a:	31 f4       	brne	.+12     	; 0x1d98 <vfprintf+0x82>
    1d8c:	b7 01       	movw	r22, r14
    1d8e:	90 e0       	ldi	r25, 0x00	; 0
    1d90:	aa d4       	rcall	.+2388   	; 0x26e6 <fputc>
    1d92:	56 01       	movw	r10, r12
    1d94:	65 01       	movw	r12, r10
    1d96:	e6 cf       	rjmp	.-52     	; 0x1d64 <vfprintf+0x4e>
    1d98:	10 e0       	ldi	r17, 0x00	; 0
    1d9a:	51 2c       	mov	r5, r1
    1d9c:	91 2c       	mov	r9, r1
    1d9e:	ff e1       	ldi	r31, 0x1F	; 31
    1da0:	f9 15       	cp	r31, r9
    1da2:	d8 f0       	brcs	.+54     	; 0x1dda <vfprintf+0xc4>
    1da4:	8b 32       	cpi	r24, 0x2B	; 43
    1da6:	79 f0       	breq	.+30     	; 0x1dc6 <vfprintf+0xb0>
    1da8:	38 f4       	brcc	.+14     	; 0x1db8 <vfprintf+0xa2>
    1daa:	80 32       	cpi	r24, 0x20	; 32
    1dac:	79 f0       	breq	.+30     	; 0x1dcc <vfprintf+0xb6>
    1dae:	83 32       	cpi	r24, 0x23	; 35
    1db0:	a1 f4       	brne	.+40     	; 0x1dda <vfprintf+0xc4>
    1db2:	f9 2d       	mov	r31, r9
    1db4:	f0 61       	ori	r31, 0x10	; 16
    1db6:	2e c0       	rjmp	.+92     	; 0x1e14 <vfprintf+0xfe>
    1db8:	8d 32       	cpi	r24, 0x2D	; 45
    1dba:	61 f0       	breq	.+24     	; 0x1dd4 <vfprintf+0xbe>
    1dbc:	80 33       	cpi	r24, 0x30	; 48
    1dbe:	69 f4       	brne	.+26     	; 0x1dda <vfprintf+0xc4>
    1dc0:	29 2d       	mov	r18, r9
    1dc2:	21 60       	ori	r18, 0x01	; 1
    1dc4:	2d c0       	rjmp	.+90     	; 0x1e20 <vfprintf+0x10a>
    1dc6:	39 2d       	mov	r19, r9
    1dc8:	32 60       	ori	r19, 0x02	; 2
    1dca:	93 2e       	mov	r9, r19
    1dcc:	89 2d       	mov	r24, r9
    1dce:	84 60       	ori	r24, 0x04	; 4
    1dd0:	98 2e       	mov	r9, r24
    1dd2:	2a c0       	rjmp	.+84     	; 0x1e28 <vfprintf+0x112>
    1dd4:	e9 2d       	mov	r30, r9
    1dd6:	e8 60       	ori	r30, 0x08	; 8
    1dd8:	15 c0       	rjmp	.+42     	; 0x1e04 <vfprintf+0xee>
    1dda:	97 fc       	sbrc	r9, 7
    1ddc:	2d c0       	rjmp	.+90     	; 0x1e38 <vfprintf+0x122>
    1dde:	20 ed       	ldi	r18, 0xD0	; 208
    1de0:	28 0f       	add	r18, r24
    1de2:	2a 30       	cpi	r18, 0x0A	; 10
    1de4:	88 f4       	brcc	.+34     	; 0x1e08 <vfprintf+0xf2>
    1de6:	96 fe       	sbrs	r9, 6
    1de8:	06 c0       	rjmp	.+12     	; 0x1df6 <vfprintf+0xe0>
    1dea:	3a e0       	ldi	r19, 0x0A	; 10
    1dec:	13 9f       	mul	r17, r19
    1dee:	20 0d       	add	r18, r0
    1df0:	11 24       	eor	r1, r1
    1df2:	12 2f       	mov	r17, r18
    1df4:	19 c0       	rjmp	.+50     	; 0x1e28 <vfprintf+0x112>
    1df6:	8a e0       	ldi	r24, 0x0A	; 10
    1df8:	58 9e       	mul	r5, r24
    1dfa:	20 0d       	add	r18, r0
    1dfc:	11 24       	eor	r1, r1
    1dfe:	52 2e       	mov	r5, r18
    1e00:	e9 2d       	mov	r30, r9
    1e02:	e0 62       	ori	r30, 0x20	; 32
    1e04:	9e 2e       	mov	r9, r30
    1e06:	10 c0       	rjmp	.+32     	; 0x1e28 <vfprintf+0x112>
    1e08:	8e 32       	cpi	r24, 0x2E	; 46
    1e0a:	31 f4       	brne	.+12     	; 0x1e18 <vfprintf+0x102>
    1e0c:	96 fc       	sbrc	r9, 6
    1e0e:	cc c2       	rjmp	.+1432   	; 0x23a8 <__stack+0x1a9>
    1e10:	f9 2d       	mov	r31, r9
    1e12:	f0 64       	ori	r31, 0x40	; 64
    1e14:	9f 2e       	mov	r9, r31
    1e16:	08 c0       	rjmp	.+16     	; 0x1e28 <vfprintf+0x112>
    1e18:	8c 36       	cpi	r24, 0x6C	; 108
    1e1a:	21 f4       	brne	.+8      	; 0x1e24 <vfprintf+0x10e>
    1e1c:	29 2d       	mov	r18, r9
    1e1e:	20 68       	ori	r18, 0x80	; 128
    1e20:	92 2e       	mov	r9, r18
    1e22:	02 c0       	rjmp	.+4      	; 0x1e28 <vfprintf+0x112>
    1e24:	88 36       	cpi	r24, 0x68	; 104
    1e26:	41 f4       	brne	.+16     	; 0x1e38 <vfprintf+0x122>
    1e28:	f1 01       	movw	r30, r2
    1e2a:	93 fd       	sbrc	r25, 3
    1e2c:	85 91       	lpm	r24, Z+
    1e2e:	93 ff       	sbrs	r25, 3
    1e30:	81 91       	ld	r24, Z+
    1e32:	1f 01       	movw	r2, r30
    1e34:	81 11       	cpse	r24, r1
    1e36:	b3 cf       	rjmp	.-154    	; 0x1d9e <vfprintf+0x88>
    1e38:	9b eb       	ldi	r25, 0xBB	; 187
    1e3a:	98 0f       	add	r25, r24
    1e3c:	93 30       	cpi	r25, 0x03	; 3
    1e3e:	20 f4       	brcc	.+8      	; 0x1e48 <vfprintf+0x132>
    1e40:	99 2d       	mov	r25, r9
    1e42:	90 61       	ori	r25, 0x10	; 16
    1e44:	80 5e       	subi	r24, 0xE0	; 224
    1e46:	07 c0       	rjmp	.+14     	; 0x1e56 <vfprintf+0x140>
    1e48:	9b e9       	ldi	r25, 0x9B	; 155
    1e4a:	98 0f       	add	r25, r24
    1e4c:	93 30       	cpi	r25, 0x03	; 3
    1e4e:	08 f0       	brcs	.+2      	; 0x1e52 <vfprintf+0x13c>
    1e50:	59 c1       	rjmp	.+690    	; 0x2104 <vfprintf+0x3ee>
    1e52:	99 2d       	mov	r25, r9
    1e54:	9f 7e       	andi	r25, 0xEF	; 239
    1e56:	96 ff       	sbrs	r25, 6
    1e58:	16 e0       	ldi	r17, 0x06	; 6
    1e5a:	9f 73       	andi	r25, 0x3F	; 63
    1e5c:	99 2e       	mov	r9, r25
    1e5e:	85 36       	cpi	r24, 0x65	; 101
    1e60:	19 f4       	brne	.+6      	; 0x1e68 <vfprintf+0x152>
    1e62:	90 64       	ori	r25, 0x40	; 64
    1e64:	99 2e       	mov	r9, r25
    1e66:	08 c0       	rjmp	.+16     	; 0x1e78 <vfprintf+0x162>
    1e68:	86 36       	cpi	r24, 0x66	; 102
    1e6a:	21 f4       	brne	.+8      	; 0x1e74 <vfprintf+0x15e>
    1e6c:	39 2f       	mov	r19, r25
    1e6e:	30 68       	ori	r19, 0x80	; 128
    1e70:	93 2e       	mov	r9, r19
    1e72:	02 c0       	rjmp	.+4      	; 0x1e78 <vfprintf+0x162>
    1e74:	11 11       	cpse	r17, r1
    1e76:	11 50       	subi	r17, 0x01	; 1
    1e78:	97 fe       	sbrs	r9, 7
    1e7a:	07 c0       	rjmp	.+14     	; 0x1e8a <vfprintf+0x174>
    1e7c:	1c 33       	cpi	r17, 0x3C	; 60
    1e7e:	50 f4       	brcc	.+20     	; 0x1e94 <vfprintf+0x17e>
    1e80:	44 24       	eor	r4, r4
    1e82:	43 94       	inc	r4
    1e84:	41 0e       	add	r4, r17
    1e86:	27 e0       	ldi	r18, 0x07	; 7
    1e88:	0b c0       	rjmp	.+22     	; 0x1ea0 <vfprintf+0x18a>
    1e8a:	18 30       	cpi	r17, 0x08	; 8
    1e8c:	38 f0       	brcs	.+14     	; 0x1e9c <vfprintf+0x186>
    1e8e:	27 e0       	ldi	r18, 0x07	; 7
    1e90:	17 e0       	ldi	r17, 0x07	; 7
    1e92:	05 c0       	rjmp	.+10     	; 0x1e9e <vfprintf+0x188>
    1e94:	27 e0       	ldi	r18, 0x07	; 7
    1e96:	9c e3       	ldi	r25, 0x3C	; 60
    1e98:	49 2e       	mov	r4, r25
    1e9a:	02 c0       	rjmp	.+4      	; 0x1ea0 <vfprintf+0x18a>
    1e9c:	21 2f       	mov	r18, r17
    1e9e:	41 2c       	mov	r4, r1
    1ea0:	56 01       	movw	r10, r12
    1ea2:	84 e0       	ldi	r24, 0x04	; 4
    1ea4:	a8 0e       	add	r10, r24
    1ea6:	b1 1c       	adc	r11, r1
    1ea8:	f6 01       	movw	r30, r12
    1eaa:	60 81       	ld	r22, Z
    1eac:	71 81       	ldd	r23, Z+1	; 0x01
    1eae:	82 81       	ldd	r24, Z+2	; 0x02
    1eb0:	93 81       	ldd	r25, Z+3	; 0x03
    1eb2:	04 2d       	mov	r16, r4
    1eb4:	a3 01       	movw	r20, r6
    1eb6:	df d2       	rcall	.+1470   	; 0x2476 <__ftoa_engine>
    1eb8:	6c 01       	movw	r12, r24
    1eba:	f9 81       	ldd	r31, Y+1	; 0x01
    1ebc:	fc 87       	std	Y+12, r31	; 0x0c
    1ebe:	f0 ff       	sbrs	r31, 0
    1ec0:	02 c0       	rjmp	.+4      	; 0x1ec6 <vfprintf+0x1b0>
    1ec2:	f3 ff       	sbrs	r31, 3
    1ec4:	06 c0       	rjmp	.+12     	; 0x1ed2 <vfprintf+0x1bc>
    1ec6:	91 fc       	sbrc	r9, 1
    1ec8:	06 c0       	rjmp	.+12     	; 0x1ed6 <vfprintf+0x1c0>
    1eca:	92 fe       	sbrs	r9, 2
    1ecc:	06 c0       	rjmp	.+12     	; 0x1eda <vfprintf+0x1c4>
    1ece:	00 e2       	ldi	r16, 0x20	; 32
    1ed0:	05 c0       	rjmp	.+10     	; 0x1edc <vfprintf+0x1c6>
    1ed2:	0d e2       	ldi	r16, 0x2D	; 45
    1ed4:	03 c0       	rjmp	.+6      	; 0x1edc <vfprintf+0x1c6>
    1ed6:	0b e2       	ldi	r16, 0x2B	; 43
    1ed8:	01 c0       	rjmp	.+2      	; 0x1edc <vfprintf+0x1c6>
    1eda:	00 e0       	ldi	r16, 0x00	; 0
    1edc:	8c 85       	ldd	r24, Y+12	; 0x0c
    1ede:	8c 70       	andi	r24, 0x0C	; 12
    1ee0:	19 f0       	breq	.+6      	; 0x1ee8 <vfprintf+0x1d2>
    1ee2:	01 11       	cpse	r16, r1
    1ee4:	43 c2       	rjmp	.+1158   	; 0x236c <__stack+0x16d>
    1ee6:	80 c2       	rjmp	.+1280   	; 0x23e8 <__stack+0x1e9>
    1ee8:	97 fe       	sbrs	r9, 7
    1eea:	10 c0       	rjmp	.+32     	; 0x1f0c <vfprintf+0x1f6>
    1eec:	4c 0c       	add	r4, r12
    1eee:	fc 85       	ldd	r31, Y+12	; 0x0c
    1ef0:	f4 ff       	sbrs	r31, 4
    1ef2:	04 c0       	rjmp	.+8      	; 0x1efc <vfprintf+0x1e6>
    1ef4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ef6:	81 33       	cpi	r24, 0x31	; 49
    1ef8:	09 f4       	brne	.+2      	; 0x1efc <vfprintf+0x1e6>
    1efa:	4a 94       	dec	r4
    1efc:	14 14       	cp	r1, r4
    1efe:	74 f5       	brge	.+92     	; 0x1f5c <vfprintf+0x246>
    1f00:	28 e0       	ldi	r18, 0x08	; 8
    1f02:	24 15       	cp	r18, r4
    1f04:	78 f5       	brcc	.+94     	; 0x1f64 <vfprintf+0x24e>
    1f06:	88 e0       	ldi	r24, 0x08	; 8
    1f08:	48 2e       	mov	r4, r24
    1f0a:	2c c0       	rjmp	.+88     	; 0x1f64 <vfprintf+0x24e>
    1f0c:	96 fc       	sbrc	r9, 6
    1f0e:	2a c0       	rjmp	.+84     	; 0x1f64 <vfprintf+0x24e>
    1f10:	81 2f       	mov	r24, r17
    1f12:	90 e0       	ldi	r25, 0x00	; 0
    1f14:	8c 15       	cp	r24, r12
    1f16:	9d 05       	cpc	r25, r13
    1f18:	9c f0       	brlt	.+38     	; 0x1f40 <vfprintf+0x22a>
    1f1a:	3c ef       	ldi	r19, 0xFC	; 252
    1f1c:	c3 16       	cp	r12, r19
    1f1e:	3f ef       	ldi	r19, 0xFF	; 255
    1f20:	d3 06       	cpc	r13, r19
    1f22:	74 f0       	brlt	.+28     	; 0x1f40 <vfprintf+0x22a>
    1f24:	89 2d       	mov	r24, r9
    1f26:	80 68       	ori	r24, 0x80	; 128
    1f28:	98 2e       	mov	r9, r24
    1f2a:	0a c0       	rjmp	.+20     	; 0x1f40 <vfprintf+0x22a>
    1f2c:	e2 e0       	ldi	r30, 0x02	; 2
    1f2e:	f0 e0       	ldi	r31, 0x00	; 0
    1f30:	ec 0f       	add	r30, r28
    1f32:	fd 1f       	adc	r31, r29
    1f34:	e1 0f       	add	r30, r17
    1f36:	f1 1d       	adc	r31, r1
    1f38:	80 81       	ld	r24, Z
    1f3a:	80 33       	cpi	r24, 0x30	; 48
    1f3c:	19 f4       	brne	.+6      	; 0x1f44 <vfprintf+0x22e>
    1f3e:	11 50       	subi	r17, 0x01	; 1
    1f40:	11 11       	cpse	r17, r1
    1f42:	f4 cf       	rjmp	.-24     	; 0x1f2c <vfprintf+0x216>
    1f44:	97 fe       	sbrs	r9, 7
    1f46:	0e c0       	rjmp	.+28     	; 0x1f64 <vfprintf+0x24e>
    1f48:	44 24       	eor	r4, r4
    1f4a:	43 94       	inc	r4
    1f4c:	41 0e       	add	r4, r17
    1f4e:	81 2f       	mov	r24, r17
    1f50:	90 e0       	ldi	r25, 0x00	; 0
    1f52:	c8 16       	cp	r12, r24
    1f54:	d9 06       	cpc	r13, r25
    1f56:	2c f4       	brge	.+10     	; 0x1f62 <vfprintf+0x24c>
    1f58:	1c 19       	sub	r17, r12
    1f5a:	04 c0       	rjmp	.+8      	; 0x1f64 <vfprintf+0x24e>
    1f5c:	44 24       	eor	r4, r4
    1f5e:	43 94       	inc	r4
    1f60:	01 c0       	rjmp	.+2      	; 0x1f64 <vfprintf+0x24e>
    1f62:	10 e0       	ldi	r17, 0x00	; 0
    1f64:	97 fe       	sbrs	r9, 7
    1f66:	06 c0       	rjmp	.+12     	; 0x1f74 <vfprintf+0x25e>
    1f68:	1c 14       	cp	r1, r12
    1f6a:	1d 04       	cpc	r1, r13
    1f6c:	34 f4       	brge	.+12     	; 0x1f7a <vfprintf+0x264>
    1f6e:	c6 01       	movw	r24, r12
    1f70:	01 96       	adiw	r24, 0x01	; 1
    1f72:	05 c0       	rjmp	.+10     	; 0x1f7e <vfprintf+0x268>
    1f74:	85 e0       	ldi	r24, 0x05	; 5
    1f76:	90 e0       	ldi	r25, 0x00	; 0
    1f78:	02 c0       	rjmp	.+4      	; 0x1f7e <vfprintf+0x268>
    1f7a:	81 e0       	ldi	r24, 0x01	; 1
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	01 11       	cpse	r16, r1
    1f80:	01 96       	adiw	r24, 0x01	; 1
    1f82:	11 23       	and	r17, r17
    1f84:	31 f0       	breq	.+12     	; 0x1f92 <vfprintf+0x27c>
    1f86:	21 2f       	mov	r18, r17
    1f88:	30 e0       	ldi	r19, 0x00	; 0
    1f8a:	2f 5f       	subi	r18, 0xFF	; 255
    1f8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f8e:	82 0f       	add	r24, r18
    1f90:	93 1f       	adc	r25, r19
    1f92:	25 2d       	mov	r18, r5
    1f94:	30 e0       	ldi	r19, 0x00	; 0
    1f96:	82 17       	cp	r24, r18
    1f98:	93 07       	cpc	r25, r19
    1f9a:	14 f4       	brge	.+4      	; 0x1fa0 <vfprintf+0x28a>
    1f9c:	58 1a       	sub	r5, r24
    1f9e:	01 c0       	rjmp	.+2      	; 0x1fa2 <vfprintf+0x28c>
    1fa0:	51 2c       	mov	r5, r1
    1fa2:	89 2d       	mov	r24, r9
    1fa4:	89 70       	andi	r24, 0x09	; 9
    1fa6:	41 f4       	brne	.+16     	; 0x1fb8 <vfprintf+0x2a2>
    1fa8:	55 20       	and	r5, r5
    1faa:	31 f0       	breq	.+12     	; 0x1fb8 <vfprintf+0x2a2>
    1fac:	b7 01       	movw	r22, r14
    1fae:	80 e2       	ldi	r24, 0x20	; 32
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	99 d3       	rcall	.+1842   	; 0x26e6 <fputc>
    1fb4:	5a 94       	dec	r5
    1fb6:	f8 cf       	rjmp	.-16     	; 0x1fa8 <vfprintf+0x292>
    1fb8:	00 23       	and	r16, r16
    1fba:	21 f0       	breq	.+8      	; 0x1fc4 <vfprintf+0x2ae>
    1fbc:	b7 01       	movw	r22, r14
    1fbe:	80 2f       	mov	r24, r16
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	91 d3       	rcall	.+1826   	; 0x26e6 <fputc>
    1fc4:	93 fc       	sbrc	r9, 3
    1fc6:	08 c0       	rjmp	.+16     	; 0x1fd8 <vfprintf+0x2c2>
    1fc8:	55 20       	and	r5, r5
    1fca:	31 f0       	breq	.+12     	; 0x1fd8 <vfprintf+0x2c2>
    1fcc:	b7 01       	movw	r22, r14
    1fce:	80 e3       	ldi	r24, 0x30	; 48
    1fd0:	90 e0       	ldi	r25, 0x00	; 0
    1fd2:	89 d3       	rcall	.+1810   	; 0x26e6 <fputc>
    1fd4:	5a 94       	dec	r5
    1fd6:	f8 cf       	rjmp	.-16     	; 0x1fc8 <vfprintf+0x2b2>
    1fd8:	97 fe       	sbrs	r9, 7
    1fda:	4a c0       	rjmp	.+148    	; 0x2070 <vfprintf+0x35a>
    1fdc:	46 01       	movw	r8, r12
    1fde:	d7 fe       	sbrs	r13, 7
    1fe0:	02 c0       	rjmp	.+4      	; 0x1fe6 <vfprintf+0x2d0>
    1fe2:	81 2c       	mov	r8, r1
    1fe4:	91 2c       	mov	r9, r1
    1fe6:	c6 01       	movw	r24, r12
    1fe8:	88 19       	sub	r24, r8
    1fea:	99 09       	sbc	r25, r9
    1fec:	f3 01       	movw	r30, r6
    1fee:	e8 0f       	add	r30, r24
    1ff0:	f9 1f       	adc	r31, r25
    1ff2:	fe 87       	std	Y+14, r31	; 0x0e
    1ff4:	ed 87       	std	Y+13, r30	; 0x0d
    1ff6:	96 01       	movw	r18, r12
    1ff8:	24 19       	sub	r18, r4
    1ffa:	31 09       	sbc	r19, r1
    1ffc:	38 8b       	std	Y+16, r19	; 0x10
    1ffe:	2f 87       	std	Y+15, r18	; 0x0f
    2000:	01 2f       	mov	r16, r17
    2002:	10 e0       	ldi	r17, 0x00	; 0
    2004:	11 95       	neg	r17
    2006:	01 95       	neg	r16
    2008:	11 09       	sbc	r17, r1
    200a:	3f ef       	ldi	r19, 0xFF	; 255
    200c:	83 16       	cp	r8, r19
    200e:	93 06       	cpc	r9, r19
    2010:	21 f4       	brne	.+8      	; 0x201a <vfprintf+0x304>
    2012:	b7 01       	movw	r22, r14
    2014:	8e e2       	ldi	r24, 0x2E	; 46
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	66 d3       	rcall	.+1740   	; 0x26e6 <fputc>
    201a:	c8 14       	cp	r12, r8
    201c:	d9 04       	cpc	r13, r9
    201e:	4c f0       	brlt	.+18     	; 0x2032 <vfprintf+0x31c>
    2020:	8f 85       	ldd	r24, Y+15	; 0x0f
    2022:	98 89       	ldd	r25, Y+16	; 0x10
    2024:	88 15       	cp	r24, r8
    2026:	99 05       	cpc	r25, r9
    2028:	24 f4       	brge	.+8      	; 0x2032 <vfprintf+0x31c>
    202a:	ed 85       	ldd	r30, Y+13	; 0x0d
    202c:	fe 85       	ldd	r31, Y+14	; 0x0e
    202e:	81 81       	ldd	r24, Z+1	; 0x01
    2030:	01 c0       	rjmp	.+2      	; 0x2034 <vfprintf+0x31e>
    2032:	80 e3       	ldi	r24, 0x30	; 48
    2034:	f1 e0       	ldi	r31, 0x01	; 1
    2036:	8f 1a       	sub	r8, r31
    2038:	91 08       	sbc	r9, r1
    203a:	2d 85       	ldd	r18, Y+13	; 0x0d
    203c:	3e 85       	ldd	r19, Y+14	; 0x0e
    203e:	2f 5f       	subi	r18, 0xFF	; 255
    2040:	3f 4f       	sbci	r19, 0xFF	; 255
    2042:	3e 87       	std	Y+14, r19	; 0x0e
    2044:	2d 87       	std	Y+13, r18	; 0x0d
    2046:	80 16       	cp	r8, r16
    2048:	91 06       	cpc	r9, r17
    204a:	24 f0       	brlt	.+8      	; 0x2054 <vfprintf+0x33e>
    204c:	b7 01       	movw	r22, r14
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	4a d3       	rcall	.+1684   	; 0x26e6 <fputc>
    2052:	db cf       	rjmp	.-74     	; 0x200a <vfprintf+0x2f4>
    2054:	c8 14       	cp	r12, r8
    2056:	d9 04       	cpc	r13, r9
    2058:	41 f4       	brne	.+16     	; 0x206a <vfprintf+0x354>
    205a:	9a 81       	ldd	r25, Y+2	; 0x02
    205c:	96 33       	cpi	r25, 0x36	; 54
    205e:	20 f4       	brcc	.+8      	; 0x2068 <vfprintf+0x352>
    2060:	95 33       	cpi	r25, 0x35	; 53
    2062:	19 f4       	brne	.+6      	; 0x206a <vfprintf+0x354>
    2064:	3c 85       	ldd	r19, Y+12	; 0x0c
    2066:	34 ff       	sbrs	r19, 4
    2068:	81 e3       	ldi	r24, 0x31	; 49
    206a:	b7 01       	movw	r22, r14
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	48 c0       	rjmp	.+144    	; 0x2100 <vfprintf+0x3ea>
    2070:	8a 81       	ldd	r24, Y+2	; 0x02
    2072:	81 33       	cpi	r24, 0x31	; 49
    2074:	19 f0       	breq	.+6      	; 0x207c <vfprintf+0x366>
    2076:	9c 85       	ldd	r25, Y+12	; 0x0c
    2078:	9f 7e       	andi	r25, 0xEF	; 239
    207a:	9c 87       	std	Y+12, r25	; 0x0c
    207c:	b7 01       	movw	r22, r14
    207e:	90 e0       	ldi	r25, 0x00	; 0
    2080:	32 d3       	rcall	.+1636   	; 0x26e6 <fputc>
    2082:	11 11       	cpse	r17, r1
    2084:	05 c0       	rjmp	.+10     	; 0x2090 <vfprintf+0x37a>
    2086:	94 fc       	sbrc	r9, 4
    2088:	16 c0       	rjmp	.+44     	; 0x20b6 <vfprintf+0x3a0>
    208a:	85 e6       	ldi	r24, 0x65	; 101
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	15 c0       	rjmp	.+42     	; 0x20ba <vfprintf+0x3a4>
    2090:	b7 01       	movw	r22, r14
    2092:	8e e2       	ldi	r24, 0x2E	; 46
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	27 d3       	rcall	.+1614   	; 0x26e6 <fputc>
    2098:	1e 5f       	subi	r17, 0xFE	; 254
    209a:	82 e0       	ldi	r24, 0x02	; 2
    209c:	01 e0       	ldi	r16, 0x01	; 1
    209e:	08 0f       	add	r16, r24
    20a0:	f3 01       	movw	r30, r6
    20a2:	e8 0f       	add	r30, r24
    20a4:	f1 1d       	adc	r31, r1
    20a6:	80 81       	ld	r24, Z
    20a8:	b7 01       	movw	r22, r14
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	1c d3       	rcall	.+1592   	; 0x26e6 <fputc>
    20ae:	80 2f       	mov	r24, r16
    20b0:	01 13       	cpse	r16, r17
    20b2:	f4 cf       	rjmp	.-24     	; 0x209c <vfprintf+0x386>
    20b4:	e8 cf       	rjmp	.-48     	; 0x2086 <vfprintf+0x370>
    20b6:	85 e4       	ldi	r24, 0x45	; 69
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	b7 01       	movw	r22, r14
    20bc:	14 d3       	rcall	.+1576   	; 0x26e6 <fputc>
    20be:	d7 fc       	sbrc	r13, 7
    20c0:	06 c0       	rjmp	.+12     	; 0x20ce <vfprintf+0x3b8>
    20c2:	c1 14       	cp	r12, r1
    20c4:	d1 04       	cpc	r13, r1
    20c6:	41 f4       	brne	.+16     	; 0x20d8 <vfprintf+0x3c2>
    20c8:	ec 85       	ldd	r30, Y+12	; 0x0c
    20ca:	e4 ff       	sbrs	r30, 4
    20cc:	05 c0       	rjmp	.+10     	; 0x20d8 <vfprintf+0x3c2>
    20ce:	d1 94       	neg	r13
    20d0:	c1 94       	neg	r12
    20d2:	d1 08       	sbc	r13, r1
    20d4:	8d e2       	ldi	r24, 0x2D	; 45
    20d6:	01 c0       	rjmp	.+2      	; 0x20da <vfprintf+0x3c4>
    20d8:	8b e2       	ldi	r24, 0x2B	; 43
    20da:	b7 01       	movw	r22, r14
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	03 d3       	rcall	.+1542   	; 0x26e6 <fputc>
    20e0:	80 e3       	ldi	r24, 0x30	; 48
    20e2:	2a e0       	ldi	r18, 0x0A	; 10
    20e4:	c2 16       	cp	r12, r18
    20e6:	d1 04       	cpc	r13, r1
    20e8:	2c f0       	brlt	.+10     	; 0x20f4 <vfprintf+0x3de>
    20ea:	8f 5f       	subi	r24, 0xFF	; 255
    20ec:	fa e0       	ldi	r31, 0x0A	; 10
    20ee:	cf 1a       	sub	r12, r31
    20f0:	d1 08       	sbc	r13, r1
    20f2:	f7 cf       	rjmp	.-18     	; 0x20e2 <vfprintf+0x3cc>
    20f4:	b7 01       	movw	r22, r14
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	f6 d2       	rcall	.+1516   	; 0x26e6 <fputc>
    20fa:	b7 01       	movw	r22, r14
    20fc:	c6 01       	movw	r24, r12
    20fe:	c0 96       	adiw	r24, 0x30	; 48
    2100:	f2 d2       	rcall	.+1508   	; 0x26e6 <fputc>
    2102:	49 c1       	rjmp	.+658    	; 0x2396 <__stack+0x197>
    2104:	83 36       	cpi	r24, 0x63	; 99
    2106:	31 f0       	breq	.+12     	; 0x2114 <vfprintf+0x3fe>
    2108:	83 37       	cpi	r24, 0x73	; 115
    210a:	79 f0       	breq	.+30     	; 0x212a <vfprintf+0x414>
    210c:	83 35       	cpi	r24, 0x53	; 83
    210e:	09 f0       	breq	.+2      	; 0x2112 <vfprintf+0x3fc>
    2110:	52 c0       	rjmp	.+164    	; 0x21b6 <vfprintf+0x4a0>
    2112:	1f c0       	rjmp	.+62     	; 0x2152 <vfprintf+0x43c>
    2114:	56 01       	movw	r10, r12
    2116:	32 e0       	ldi	r19, 0x02	; 2
    2118:	a3 0e       	add	r10, r19
    211a:	b1 1c       	adc	r11, r1
    211c:	f6 01       	movw	r30, r12
    211e:	80 81       	ld	r24, Z
    2120:	89 83       	std	Y+1, r24	; 0x01
    2122:	01 e0       	ldi	r16, 0x01	; 1
    2124:	10 e0       	ldi	r17, 0x00	; 0
    2126:	63 01       	movw	r12, r6
    2128:	11 c0       	rjmp	.+34     	; 0x214c <vfprintf+0x436>
    212a:	56 01       	movw	r10, r12
    212c:	f2 e0       	ldi	r31, 0x02	; 2
    212e:	af 0e       	add	r10, r31
    2130:	b1 1c       	adc	r11, r1
    2132:	f6 01       	movw	r30, r12
    2134:	c0 80       	ld	r12, Z
    2136:	d1 80       	ldd	r13, Z+1	; 0x01
    2138:	96 fe       	sbrs	r9, 6
    213a:	03 c0       	rjmp	.+6      	; 0x2142 <vfprintf+0x42c>
    213c:	61 2f       	mov	r22, r17
    213e:	70 e0       	ldi	r23, 0x00	; 0
    2140:	02 c0       	rjmp	.+4      	; 0x2146 <vfprintf+0x430>
    2142:	6f ef       	ldi	r22, 0xFF	; 255
    2144:	7f ef       	ldi	r23, 0xFF	; 255
    2146:	c6 01       	movw	r24, r12
    2148:	79 d2       	rcall	.+1266   	; 0x263c <strnlen>
    214a:	8c 01       	movw	r16, r24
    214c:	f9 2d       	mov	r31, r9
    214e:	ff 77       	andi	r31, 0x7F	; 127
    2150:	13 c0       	rjmp	.+38     	; 0x2178 <vfprintf+0x462>
    2152:	56 01       	movw	r10, r12
    2154:	22 e0       	ldi	r18, 0x02	; 2
    2156:	a2 0e       	add	r10, r18
    2158:	b1 1c       	adc	r11, r1
    215a:	f6 01       	movw	r30, r12
    215c:	c0 80       	ld	r12, Z
    215e:	d1 80       	ldd	r13, Z+1	; 0x01
    2160:	96 fe       	sbrs	r9, 6
    2162:	03 c0       	rjmp	.+6      	; 0x216a <vfprintf+0x454>
    2164:	61 2f       	mov	r22, r17
    2166:	70 e0       	ldi	r23, 0x00	; 0
    2168:	02 c0       	rjmp	.+4      	; 0x216e <vfprintf+0x458>
    216a:	6f ef       	ldi	r22, 0xFF	; 255
    216c:	7f ef       	ldi	r23, 0xFF	; 255
    216e:	c6 01       	movw	r24, r12
    2170:	5a d2       	rcall	.+1204   	; 0x2626 <strnlen_P>
    2172:	8c 01       	movw	r16, r24
    2174:	f9 2d       	mov	r31, r9
    2176:	f0 68       	ori	r31, 0x80	; 128
    2178:	9f 2e       	mov	r9, r31
    217a:	f3 fd       	sbrc	r31, 3
    217c:	18 c0       	rjmp	.+48     	; 0x21ae <vfprintf+0x498>
    217e:	85 2d       	mov	r24, r5
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	08 17       	cp	r16, r24
    2184:	19 07       	cpc	r17, r25
    2186:	98 f4       	brcc	.+38     	; 0x21ae <vfprintf+0x498>
    2188:	b7 01       	movw	r22, r14
    218a:	80 e2       	ldi	r24, 0x20	; 32
    218c:	90 e0       	ldi	r25, 0x00	; 0
    218e:	ab d2       	rcall	.+1366   	; 0x26e6 <fputc>
    2190:	5a 94       	dec	r5
    2192:	f5 cf       	rjmp	.-22     	; 0x217e <vfprintf+0x468>
    2194:	f6 01       	movw	r30, r12
    2196:	97 fc       	sbrc	r9, 7
    2198:	85 91       	lpm	r24, Z+
    219a:	97 fe       	sbrs	r9, 7
    219c:	81 91       	ld	r24, Z+
    219e:	6f 01       	movw	r12, r30
    21a0:	b7 01       	movw	r22, r14
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	a0 d2       	rcall	.+1344   	; 0x26e6 <fputc>
    21a6:	51 10       	cpse	r5, r1
    21a8:	5a 94       	dec	r5
    21aa:	01 50       	subi	r16, 0x01	; 1
    21ac:	11 09       	sbc	r17, r1
    21ae:	01 15       	cp	r16, r1
    21b0:	11 05       	cpc	r17, r1
    21b2:	81 f7       	brne	.-32     	; 0x2194 <vfprintf+0x47e>
    21b4:	f0 c0       	rjmp	.+480    	; 0x2396 <__stack+0x197>
    21b6:	84 36       	cpi	r24, 0x64	; 100
    21b8:	11 f0       	breq	.+4      	; 0x21be <vfprintf+0x4a8>
    21ba:	89 36       	cpi	r24, 0x69	; 105
    21bc:	59 f5       	brne	.+86     	; 0x2214 <__stack+0x15>
    21be:	56 01       	movw	r10, r12
    21c0:	97 fe       	sbrs	r9, 7
    21c2:	09 c0       	rjmp	.+18     	; 0x21d6 <vfprintf+0x4c0>
    21c4:	24 e0       	ldi	r18, 0x04	; 4
    21c6:	a2 0e       	add	r10, r18
    21c8:	b1 1c       	adc	r11, r1
    21ca:	f6 01       	movw	r30, r12
    21cc:	60 81       	ld	r22, Z
    21ce:	71 81       	ldd	r23, Z+1	; 0x01
    21d0:	82 81       	ldd	r24, Z+2	; 0x02
    21d2:	93 81       	ldd	r25, Z+3	; 0x03
    21d4:	0a c0       	rjmp	.+20     	; 0x21ea <vfprintf+0x4d4>
    21d6:	f2 e0       	ldi	r31, 0x02	; 2
    21d8:	af 0e       	add	r10, r31
    21da:	b1 1c       	adc	r11, r1
    21dc:	f6 01       	movw	r30, r12
    21de:	60 81       	ld	r22, Z
    21e0:	71 81       	ldd	r23, Z+1	; 0x01
    21e2:	07 2e       	mov	r0, r23
    21e4:	00 0c       	add	r0, r0
    21e6:	88 0b       	sbc	r24, r24
    21e8:	99 0b       	sbc	r25, r25
    21ea:	f9 2d       	mov	r31, r9
    21ec:	ff 76       	andi	r31, 0x6F	; 111
    21ee:	9f 2e       	mov	r9, r31
    21f0:	97 ff       	sbrs	r25, 7
    21f2:	09 c0       	rjmp	.+18     	; 0x2206 <__stack+0x7>
    21f4:	90 95       	com	r25
    21f6:	80 95       	com	r24
    21f8:	70 95       	com	r23
    21fa:	61 95       	neg	r22
    21fc:	7f 4f       	sbci	r23, 0xFF	; 255
    21fe:	8f 4f       	sbci	r24, 0xFF	; 255
    2200:	9f 4f       	sbci	r25, 0xFF	; 255
    2202:	f0 68       	ori	r31, 0x80	; 128
    2204:	9f 2e       	mov	r9, r31
    2206:	2a e0       	ldi	r18, 0x0A	; 10
    2208:	30 e0       	ldi	r19, 0x00	; 0
    220a:	a3 01       	movw	r20, r6
    220c:	ee d2       	rcall	.+1500   	; 0x27ea <__ultoa_invert>
    220e:	c8 2e       	mov	r12, r24
    2210:	c6 18       	sub	r12, r6
    2212:	3e c0       	rjmp	.+124    	; 0x2290 <__stack+0x91>
    2214:	09 2d       	mov	r16, r9
    2216:	85 37       	cpi	r24, 0x75	; 117
    2218:	21 f4       	brne	.+8      	; 0x2222 <__stack+0x23>
    221a:	0f 7e       	andi	r16, 0xEF	; 239
    221c:	2a e0       	ldi	r18, 0x0A	; 10
    221e:	30 e0       	ldi	r19, 0x00	; 0
    2220:	1d c0       	rjmp	.+58     	; 0x225c <__stack+0x5d>
    2222:	09 7f       	andi	r16, 0xF9	; 249
    2224:	8f 36       	cpi	r24, 0x6F	; 111
    2226:	91 f0       	breq	.+36     	; 0x224c <__stack+0x4d>
    2228:	18 f4       	brcc	.+6      	; 0x2230 <__stack+0x31>
    222a:	88 35       	cpi	r24, 0x58	; 88
    222c:	59 f0       	breq	.+22     	; 0x2244 <__stack+0x45>
    222e:	bc c0       	rjmp	.+376    	; 0x23a8 <__stack+0x1a9>
    2230:	80 37       	cpi	r24, 0x70	; 112
    2232:	19 f0       	breq	.+6      	; 0x223a <__stack+0x3b>
    2234:	88 37       	cpi	r24, 0x78	; 120
    2236:	11 f0       	breq	.+4      	; 0x223c <__stack+0x3d>
    2238:	b7 c0       	rjmp	.+366    	; 0x23a8 <__stack+0x1a9>
    223a:	00 61       	ori	r16, 0x10	; 16
    223c:	04 ff       	sbrs	r16, 4
    223e:	09 c0       	rjmp	.+18     	; 0x2252 <__stack+0x53>
    2240:	04 60       	ori	r16, 0x04	; 4
    2242:	07 c0       	rjmp	.+14     	; 0x2252 <__stack+0x53>
    2244:	94 fe       	sbrs	r9, 4
    2246:	08 c0       	rjmp	.+16     	; 0x2258 <__stack+0x59>
    2248:	06 60       	ori	r16, 0x06	; 6
    224a:	06 c0       	rjmp	.+12     	; 0x2258 <__stack+0x59>
    224c:	28 e0       	ldi	r18, 0x08	; 8
    224e:	30 e0       	ldi	r19, 0x00	; 0
    2250:	05 c0       	rjmp	.+10     	; 0x225c <__stack+0x5d>
    2252:	20 e1       	ldi	r18, 0x10	; 16
    2254:	30 e0       	ldi	r19, 0x00	; 0
    2256:	02 c0       	rjmp	.+4      	; 0x225c <__stack+0x5d>
    2258:	20 e1       	ldi	r18, 0x10	; 16
    225a:	32 e0       	ldi	r19, 0x02	; 2
    225c:	56 01       	movw	r10, r12
    225e:	07 ff       	sbrs	r16, 7
    2260:	09 c0       	rjmp	.+18     	; 0x2274 <__stack+0x75>
    2262:	84 e0       	ldi	r24, 0x04	; 4
    2264:	a8 0e       	add	r10, r24
    2266:	b1 1c       	adc	r11, r1
    2268:	f6 01       	movw	r30, r12
    226a:	60 81       	ld	r22, Z
    226c:	71 81       	ldd	r23, Z+1	; 0x01
    226e:	82 81       	ldd	r24, Z+2	; 0x02
    2270:	93 81       	ldd	r25, Z+3	; 0x03
    2272:	08 c0       	rjmp	.+16     	; 0x2284 <__stack+0x85>
    2274:	f2 e0       	ldi	r31, 0x02	; 2
    2276:	af 0e       	add	r10, r31
    2278:	b1 1c       	adc	r11, r1
    227a:	f6 01       	movw	r30, r12
    227c:	60 81       	ld	r22, Z
    227e:	71 81       	ldd	r23, Z+1	; 0x01
    2280:	80 e0       	ldi	r24, 0x00	; 0
    2282:	90 e0       	ldi	r25, 0x00	; 0
    2284:	a3 01       	movw	r20, r6
    2286:	b1 d2       	rcall	.+1378   	; 0x27ea <__ultoa_invert>
    2288:	c8 2e       	mov	r12, r24
    228a:	c6 18       	sub	r12, r6
    228c:	0f 77       	andi	r16, 0x7F	; 127
    228e:	90 2e       	mov	r9, r16
    2290:	96 fe       	sbrs	r9, 6
    2292:	0b c0       	rjmp	.+22     	; 0x22aa <__stack+0xab>
    2294:	09 2d       	mov	r16, r9
    2296:	0e 7f       	andi	r16, 0xFE	; 254
    2298:	c1 16       	cp	r12, r17
    229a:	50 f4       	brcc	.+20     	; 0x22b0 <__stack+0xb1>
    229c:	94 fe       	sbrs	r9, 4
    229e:	0a c0       	rjmp	.+20     	; 0x22b4 <__stack+0xb5>
    22a0:	92 fc       	sbrc	r9, 2
    22a2:	08 c0       	rjmp	.+16     	; 0x22b4 <__stack+0xb5>
    22a4:	09 2d       	mov	r16, r9
    22a6:	0e 7e       	andi	r16, 0xEE	; 238
    22a8:	05 c0       	rjmp	.+10     	; 0x22b4 <__stack+0xb5>
    22aa:	dc 2c       	mov	r13, r12
    22ac:	09 2d       	mov	r16, r9
    22ae:	03 c0       	rjmp	.+6      	; 0x22b6 <__stack+0xb7>
    22b0:	dc 2c       	mov	r13, r12
    22b2:	01 c0       	rjmp	.+2      	; 0x22b6 <__stack+0xb7>
    22b4:	d1 2e       	mov	r13, r17
    22b6:	04 ff       	sbrs	r16, 4
    22b8:	0d c0       	rjmp	.+26     	; 0x22d4 <__stack+0xd5>
    22ba:	fe 01       	movw	r30, r28
    22bc:	ec 0d       	add	r30, r12
    22be:	f1 1d       	adc	r31, r1
    22c0:	80 81       	ld	r24, Z
    22c2:	80 33       	cpi	r24, 0x30	; 48
    22c4:	11 f4       	brne	.+4      	; 0x22ca <__stack+0xcb>
    22c6:	09 7e       	andi	r16, 0xE9	; 233
    22c8:	09 c0       	rjmp	.+18     	; 0x22dc <__stack+0xdd>
    22ca:	02 ff       	sbrs	r16, 2
    22cc:	06 c0       	rjmp	.+12     	; 0x22da <__stack+0xdb>
    22ce:	d3 94       	inc	r13
    22d0:	d3 94       	inc	r13
    22d2:	04 c0       	rjmp	.+8      	; 0x22dc <__stack+0xdd>
    22d4:	80 2f       	mov	r24, r16
    22d6:	86 78       	andi	r24, 0x86	; 134
    22d8:	09 f0       	breq	.+2      	; 0x22dc <__stack+0xdd>
    22da:	d3 94       	inc	r13
    22dc:	03 fd       	sbrc	r16, 3
    22de:	10 c0       	rjmp	.+32     	; 0x2300 <__stack+0x101>
    22e0:	00 ff       	sbrs	r16, 0
    22e2:	06 c0       	rjmp	.+12     	; 0x22f0 <__stack+0xf1>
    22e4:	1c 2d       	mov	r17, r12
    22e6:	d5 14       	cp	r13, r5
    22e8:	78 f4       	brcc	.+30     	; 0x2308 <__stack+0x109>
    22ea:	15 0d       	add	r17, r5
    22ec:	1d 19       	sub	r17, r13
    22ee:	0c c0       	rjmp	.+24     	; 0x2308 <__stack+0x109>
    22f0:	d5 14       	cp	r13, r5
    22f2:	50 f4       	brcc	.+20     	; 0x2308 <__stack+0x109>
    22f4:	b7 01       	movw	r22, r14
    22f6:	80 e2       	ldi	r24, 0x20	; 32
    22f8:	90 e0       	ldi	r25, 0x00	; 0
    22fa:	f5 d1       	rcall	.+1002   	; 0x26e6 <fputc>
    22fc:	d3 94       	inc	r13
    22fe:	f8 cf       	rjmp	.-16     	; 0x22f0 <__stack+0xf1>
    2300:	d5 14       	cp	r13, r5
    2302:	10 f4       	brcc	.+4      	; 0x2308 <__stack+0x109>
    2304:	5d 18       	sub	r5, r13
    2306:	01 c0       	rjmp	.+2      	; 0x230a <__stack+0x10b>
    2308:	51 2c       	mov	r5, r1
    230a:	04 ff       	sbrs	r16, 4
    230c:	0f c0       	rjmp	.+30     	; 0x232c <__stack+0x12d>
    230e:	b7 01       	movw	r22, r14
    2310:	80 e3       	ldi	r24, 0x30	; 48
    2312:	90 e0       	ldi	r25, 0x00	; 0
    2314:	e8 d1       	rcall	.+976    	; 0x26e6 <fputc>
    2316:	02 ff       	sbrs	r16, 2
    2318:	16 c0       	rjmp	.+44     	; 0x2346 <__stack+0x147>
    231a:	01 fd       	sbrc	r16, 1
    231c:	03 c0       	rjmp	.+6      	; 0x2324 <__stack+0x125>
    231e:	88 e7       	ldi	r24, 0x78	; 120
    2320:	90 e0       	ldi	r25, 0x00	; 0
    2322:	02 c0       	rjmp	.+4      	; 0x2328 <__stack+0x129>
    2324:	88 e5       	ldi	r24, 0x58	; 88
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	b7 01       	movw	r22, r14
    232a:	0c c0       	rjmp	.+24     	; 0x2344 <__stack+0x145>
    232c:	80 2f       	mov	r24, r16
    232e:	86 78       	andi	r24, 0x86	; 134
    2330:	51 f0       	breq	.+20     	; 0x2346 <__stack+0x147>
    2332:	01 ff       	sbrs	r16, 1
    2334:	02 c0       	rjmp	.+4      	; 0x233a <__stack+0x13b>
    2336:	8b e2       	ldi	r24, 0x2B	; 43
    2338:	01 c0       	rjmp	.+2      	; 0x233c <__stack+0x13d>
    233a:	80 e2       	ldi	r24, 0x20	; 32
    233c:	07 fd       	sbrc	r16, 7
    233e:	8d e2       	ldi	r24, 0x2D	; 45
    2340:	b7 01       	movw	r22, r14
    2342:	90 e0       	ldi	r25, 0x00	; 0
    2344:	d0 d1       	rcall	.+928    	; 0x26e6 <fputc>
    2346:	c1 16       	cp	r12, r17
    2348:	30 f4       	brcc	.+12     	; 0x2356 <__stack+0x157>
    234a:	b7 01       	movw	r22, r14
    234c:	80 e3       	ldi	r24, 0x30	; 48
    234e:	90 e0       	ldi	r25, 0x00	; 0
    2350:	ca d1       	rcall	.+916    	; 0x26e6 <fputc>
    2352:	11 50       	subi	r17, 0x01	; 1
    2354:	f8 cf       	rjmp	.-16     	; 0x2346 <__stack+0x147>
    2356:	ca 94       	dec	r12
    2358:	f3 01       	movw	r30, r6
    235a:	ec 0d       	add	r30, r12
    235c:	f1 1d       	adc	r31, r1
    235e:	80 81       	ld	r24, Z
    2360:	b7 01       	movw	r22, r14
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	c0 d1       	rcall	.+896    	; 0x26e6 <fputc>
    2366:	c1 10       	cpse	r12, r1
    2368:	f6 cf       	rjmp	.-20     	; 0x2356 <__stack+0x157>
    236a:	15 c0       	rjmp	.+42     	; 0x2396 <__stack+0x197>
    236c:	f4 e0       	ldi	r31, 0x04	; 4
    236e:	f5 15       	cp	r31, r5
    2370:	50 f5       	brcc	.+84     	; 0x23c6 <__stack+0x1c7>
    2372:	84 e0       	ldi	r24, 0x04	; 4
    2374:	58 1a       	sub	r5, r24
    2376:	93 fe       	sbrs	r9, 3
    2378:	1e c0       	rjmp	.+60     	; 0x23b6 <__stack+0x1b7>
    237a:	01 11       	cpse	r16, r1
    237c:	25 c0       	rjmp	.+74     	; 0x23c8 <__stack+0x1c9>
    237e:	2c 85       	ldd	r18, Y+12	; 0x0c
    2380:	23 ff       	sbrs	r18, 3
    2382:	27 c0       	rjmp	.+78     	; 0x23d2 <__stack+0x1d3>
    2384:	02 e1       	ldi	r16, 0x12	; 18
    2386:	11 e0       	ldi	r17, 0x01	; 1
    2388:	39 2d       	mov	r19, r9
    238a:	30 71       	andi	r19, 0x10	; 16
    238c:	93 2e       	mov	r9, r19
    238e:	f8 01       	movw	r30, r16
    2390:	84 91       	lpm	r24, Z
    2392:	81 11       	cpse	r24, r1
    2394:	21 c0       	rjmp	.+66     	; 0x23d8 <__stack+0x1d9>
    2396:	55 20       	and	r5, r5
    2398:	09 f4       	brne	.+2      	; 0x239c <__stack+0x19d>
    239a:	fc cc       	rjmp	.-1544   	; 0x1d94 <vfprintf+0x7e>
    239c:	b7 01       	movw	r22, r14
    239e:	80 e2       	ldi	r24, 0x20	; 32
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	a1 d1       	rcall	.+834    	; 0x26e6 <fputc>
    23a4:	5a 94       	dec	r5
    23a6:	f7 cf       	rjmp	.-18     	; 0x2396 <__stack+0x197>
    23a8:	f7 01       	movw	r30, r14
    23aa:	86 81       	ldd	r24, Z+6	; 0x06
    23ac:	97 81       	ldd	r25, Z+7	; 0x07
    23ae:	23 c0       	rjmp	.+70     	; 0x23f6 <__stack+0x1f7>
    23b0:	8f ef       	ldi	r24, 0xFF	; 255
    23b2:	9f ef       	ldi	r25, 0xFF	; 255
    23b4:	20 c0       	rjmp	.+64     	; 0x23f6 <__stack+0x1f7>
    23b6:	b7 01       	movw	r22, r14
    23b8:	80 e2       	ldi	r24, 0x20	; 32
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	94 d1       	rcall	.+808    	; 0x26e6 <fputc>
    23be:	5a 94       	dec	r5
    23c0:	51 10       	cpse	r5, r1
    23c2:	f9 cf       	rjmp	.-14     	; 0x23b6 <__stack+0x1b7>
    23c4:	da cf       	rjmp	.-76     	; 0x237a <__stack+0x17b>
    23c6:	51 2c       	mov	r5, r1
    23c8:	b7 01       	movw	r22, r14
    23ca:	80 2f       	mov	r24, r16
    23cc:	90 e0       	ldi	r25, 0x00	; 0
    23ce:	8b d1       	rcall	.+790    	; 0x26e6 <fputc>
    23d0:	d6 cf       	rjmp	.-84     	; 0x237e <__stack+0x17f>
    23d2:	06 e1       	ldi	r16, 0x16	; 22
    23d4:	11 e0       	ldi	r17, 0x01	; 1
    23d6:	d8 cf       	rjmp	.-80     	; 0x2388 <__stack+0x189>
    23d8:	91 10       	cpse	r9, r1
    23da:	80 52       	subi	r24, 0x20	; 32
    23dc:	b7 01       	movw	r22, r14
    23de:	90 e0       	ldi	r25, 0x00	; 0
    23e0:	82 d1       	rcall	.+772    	; 0x26e6 <fputc>
    23e2:	0f 5f       	subi	r16, 0xFF	; 255
    23e4:	1f 4f       	sbci	r17, 0xFF	; 255
    23e6:	d3 cf       	rjmp	.-90     	; 0x238e <__stack+0x18f>
    23e8:	23 e0       	ldi	r18, 0x03	; 3
    23ea:	25 15       	cp	r18, r5
    23ec:	10 f4       	brcc	.+4      	; 0x23f2 <__stack+0x1f3>
    23ee:	83 e0       	ldi	r24, 0x03	; 3
    23f0:	c1 cf       	rjmp	.-126    	; 0x2374 <__stack+0x175>
    23f2:	51 2c       	mov	r5, r1
    23f4:	c4 cf       	rjmp	.-120    	; 0x237e <__stack+0x17f>
    23f6:	60 96       	adiw	r28, 0x10	; 16
    23f8:	0f b6       	in	r0, 0x3f	; 63
    23fa:	f8 94       	cli
    23fc:	de bf       	out	0x3e, r29	; 62
    23fe:	0f be       	out	0x3f, r0	; 63
    2400:	cd bf       	out	0x3d, r28	; 61
    2402:	df 91       	pop	r29
    2404:	cf 91       	pop	r28
    2406:	1f 91       	pop	r17
    2408:	0f 91       	pop	r16
    240a:	ff 90       	pop	r15
    240c:	ef 90       	pop	r14
    240e:	df 90       	pop	r13
    2410:	cf 90       	pop	r12
    2412:	bf 90       	pop	r11
    2414:	af 90       	pop	r10
    2416:	9f 90       	pop	r9
    2418:	8f 90       	pop	r8
    241a:	7f 90       	pop	r7
    241c:	6f 90       	pop	r6
    241e:	5f 90       	pop	r5
    2420:	4f 90       	pop	r4
    2422:	3f 90       	pop	r3
    2424:	2f 90       	pop	r2
    2426:	08 95       	ret

00002428 <__divmodhi4>:
    2428:	97 fb       	bst	r25, 7
    242a:	07 2e       	mov	r0, r23
    242c:	16 f4       	brtc	.+4      	; 0x2432 <__divmodhi4+0xa>
    242e:	00 94       	com	r0
    2430:	06 d0       	rcall	.+12     	; 0x243e <__divmodhi4_neg1>
    2432:	77 fd       	sbrc	r23, 7
    2434:	08 d0       	rcall	.+16     	; 0x2446 <__divmodhi4_neg2>
    2436:	0b d0       	rcall	.+22     	; 0x244e <__udivmodhi4>
    2438:	07 fc       	sbrc	r0, 7
    243a:	05 d0       	rcall	.+10     	; 0x2446 <__divmodhi4_neg2>
    243c:	3e f4       	brtc	.+14     	; 0x244c <__divmodhi4_exit>

0000243e <__divmodhi4_neg1>:
    243e:	90 95       	com	r25
    2440:	81 95       	neg	r24
    2442:	9f 4f       	sbci	r25, 0xFF	; 255
    2444:	08 95       	ret

00002446 <__divmodhi4_neg2>:
    2446:	70 95       	com	r23
    2448:	61 95       	neg	r22
    244a:	7f 4f       	sbci	r23, 0xFF	; 255

0000244c <__divmodhi4_exit>:
    244c:	08 95       	ret

0000244e <__udivmodhi4>:
    244e:	aa 1b       	sub	r26, r26
    2450:	bb 1b       	sub	r27, r27
    2452:	51 e1       	ldi	r21, 0x11	; 17
    2454:	07 c0       	rjmp	.+14     	; 0x2464 <__udivmodhi4_ep>

00002456 <__udivmodhi4_loop>:
    2456:	aa 1f       	adc	r26, r26
    2458:	bb 1f       	adc	r27, r27
    245a:	a6 17       	cp	r26, r22
    245c:	b7 07       	cpc	r27, r23
    245e:	10 f0       	brcs	.+4      	; 0x2464 <__udivmodhi4_ep>
    2460:	a6 1b       	sub	r26, r22
    2462:	b7 0b       	sbc	r27, r23

00002464 <__udivmodhi4_ep>:
    2464:	88 1f       	adc	r24, r24
    2466:	99 1f       	adc	r25, r25
    2468:	5a 95       	dec	r21
    246a:	a9 f7       	brne	.-22     	; 0x2456 <__udivmodhi4_loop>
    246c:	80 95       	com	r24
    246e:	90 95       	com	r25
    2470:	bc 01       	movw	r22, r24
    2472:	cd 01       	movw	r24, r26
    2474:	08 95       	ret

00002476 <__ftoa_engine>:
    2476:	28 30       	cpi	r18, 0x08	; 8
    2478:	08 f0       	brcs	.+2      	; 0x247c <__ftoa_engine+0x6>
    247a:	27 e0       	ldi	r18, 0x07	; 7
    247c:	33 27       	eor	r19, r19
    247e:	da 01       	movw	r26, r20
    2480:	99 0f       	add	r25, r25
    2482:	31 1d       	adc	r19, r1
    2484:	87 fd       	sbrc	r24, 7
    2486:	91 60       	ori	r25, 0x01	; 1
    2488:	00 96       	adiw	r24, 0x00	; 0
    248a:	61 05       	cpc	r22, r1
    248c:	71 05       	cpc	r23, r1
    248e:	39 f4       	brne	.+14     	; 0x249e <__ftoa_engine+0x28>
    2490:	32 60       	ori	r19, 0x02	; 2
    2492:	2e 5f       	subi	r18, 0xFE	; 254
    2494:	3d 93       	st	X+, r19
    2496:	30 e3       	ldi	r19, 0x30	; 48
    2498:	2a 95       	dec	r18
    249a:	e1 f7       	brne	.-8      	; 0x2494 <__ftoa_engine+0x1e>
    249c:	08 95       	ret
    249e:	9f 3f       	cpi	r25, 0xFF	; 255
    24a0:	30 f0       	brcs	.+12     	; 0x24ae <__ftoa_engine+0x38>
    24a2:	80 38       	cpi	r24, 0x80	; 128
    24a4:	71 05       	cpc	r23, r1
    24a6:	61 05       	cpc	r22, r1
    24a8:	09 f0       	breq	.+2      	; 0x24ac <__ftoa_engine+0x36>
    24aa:	3c 5f       	subi	r19, 0xFC	; 252
    24ac:	3c 5f       	subi	r19, 0xFC	; 252
    24ae:	3d 93       	st	X+, r19
    24b0:	91 30       	cpi	r25, 0x01	; 1
    24b2:	08 f0       	brcs	.+2      	; 0x24b6 <__ftoa_engine+0x40>
    24b4:	80 68       	ori	r24, 0x80	; 128
    24b6:	91 1d       	adc	r25, r1
    24b8:	df 93       	push	r29
    24ba:	cf 93       	push	r28
    24bc:	1f 93       	push	r17
    24be:	0f 93       	push	r16
    24c0:	ff 92       	push	r15
    24c2:	ef 92       	push	r14
    24c4:	19 2f       	mov	r17, r25
    24c6:	98 7f       	andi	r25, 0xF8	; 248
    24c8:	96 95       	lsr	r25
    24ca:	e9 2f       	mov	r30, r25
    24cc:	96 95       	lsr	r25
    24ce:	96 95       	lsr	r25
    24d0:	e9 0f       	add	r30, r25
    24d2:	ff 27       	eor	r31, r31
    24d4:	ec 58       	subi	r30, 0x8C	; 140
    24d6:	fe 4f       	sbci	r31, 0xFE	; 254
    24d8:	99 27       	eor	r25, r25
    24da:	33 27       	eor	r19, r19
    24dc:	ee 24       	eor	r14, r14
    24de:	ff 24       	eor	r15, r15
    24e0:	a7 01       	movw	r20, r14
    24e2:	e7 01       	movw	r28, r14
    24e4:	05 90       	lpm	r0, Z+
    24e6:	08 94       	sec
    24e8:	07 94       	ror	r0
    24ea:	28 f4       	brcc	.+10     	; 0x24f6 <__ftoa_engine+0x80>
    24ec:	36 0f       	add	r19, r22
    24ee:	e7 1e       	adc	r14, r23
    24f0:	f8 1e       	adc	r15, r24
    24f2:	49 1f       	adc	r20, r25
    24f4:	51 1d       	adc	r21, r1
    24f6:	66 0f       	add	r22, r22
    24f8:	77 1f       	adc	r23, r23
    24fa:	88 1f       	adc	r24, r24
    24fc:	99 1f       	adc	r25, r25
    24fe:	06 94       	lsr	r0
    2500:	a1 f7       	brne	.-24     	; 0x24ea <__ftoa_engine+0x74>
    2502:	05 90       	lpm	r0, Z+
    2504:	07 94       	ror	r0
    2506:	28 f4       	brcc	.+10     	; 0x2512 <__ftoa_engine+0x9c>
    2508:	e7 0e       	add	r14, r23
    250a:	f8 1e       	adc	r15, r24
    250c:	49 1f       	adc	r20, r25
    250e:	56 1f       	adc	r21, r22
    2510:	c1 1d       	adc	r28, r1
    2512:	77 0f       	add	r23, r23
    2514:	88 1f       	adc	r24, r24
    2516:	99 1f       	adc	r25, r25
    2518:	66 1f       	adc	r22, r22
    251a:	06 94       	lsr	r0
    251c:	a1 f7       	brne	.-24     	; 0x2506 <__ftoa_engine+0x90>
    251e:	05 90       	lpm	r0, Z+
    2520:	07 94       	ror	r0
    2522:	28 f4       	brcc	.+10     	; 0x252e <__ftoa_engine+0xb8>
    2524:	f8 0e       	add	r15, r24
    2526:	49 1f       	adc	r20, r25
    2528:	56 1f       	adc	r21, r22
    252a:	c7 1f       	adc	r28, r23
    252c:	d1 1d       	adc	r29, r1
    252e:	88 0f       	add	r24, r24
    2530:	99 1f       	adc	r25, r25
    2532:	66 1f       	adc	r22, r22
    2534:	77 1f       	adc	r23, r23
    2536:	06 94       	lsr	r0
    2538:	a1 f7       	brne	.-24     	; 0x2522 <__ftoa_engine+0xac>
    253a:	05 90       	lpm	r0, Z+
    253c:	07 94       	ror	r0
    253e:	20 f4       	brcc	.+8      	; 0x2548 <__ftoa_engine+0xd2>
    2540:	49 0f       	add	r20, r25
    2542:	56 1f       	adc	r21, r22
    2544:	c7 1f       	adc	r28, r23
    2546:	d8 1f       	adc	r29, r24
    2548:	99 0f       	add	r25, r25
    254a:	66 1f       	adc	r22, r22
    254c:	77 1f       	adc	r23, r23
    254e:	88 1f       	adc	r24, r24
    2550:	06 94       	lsr	r0
    2552:	a9 f7       	brne	.-22     	; 0x253e <__ftoa_engine+0xc8>
    2554:	84 91       	lpm	r24, Z
    2556:	10 95       	com	r17
    2558:	17 70       	andi	r17, 0x07	; 7
    255a:	41 f0       	breq	.+16     	; 0x256c <__ftoa_engine+0xf6>
    255c:	d6 95       	lsr	r29
    255e:	c7 95       	ror	r28
    2560:	57 95       	ror	r21
    2562:	47 95       	ror	r20
    2564:	f7 94       	ror	r15
    2566:	e7 94       	ror	r14
    2568:	1a 95       	dec	r17
    256a:	c1 f7       	brne	.-16     	; 0x255c <__ftoa_engine+0xe6>
    256c:	ea e1       	ldi	r30, 0x1A	; 26
    256e:	f1 e0       	ldi	r31, 0x01	; 1
    2570:	68 94       	set
    2572:	15 90       	lpm	r1, Z+
    2574:	15 91       	lpm	r17, Z+
    2576:	35 91       	lpm	r19, Z+
    2578:	65 91       	lpm	r22, Z+
    257a:	95 91       	lpm	r25, Z+
    257c:	05 90       	lpm	r0, Z+
    257e:	7f e2       	ldi	r23, 0x2F	; 47
    2580:	73 95       	inc	r23
    2582:	e1 18       	sub	r14, r1
    2584:	f1 0a       	sbc	r15, r17
    2586:	43 0b       	sbc	r20, r19
    2588:	56 0b       	sbc	r21, r22
    258a:	c9 0b       	sbc	r28, r25
    258c:	d0 09       	sbc	r29, r0
    258e:	c0 f7       	brcc	.-16     	; 0x2580 <__ftoa_engine+0x10a>
    2590:	e1 0c       	add	r14, r1
    2592:	f1 1e       	adc	r15, r17
    2594:	43 1f       	adc	r20, r19
    2596:	56 1f       	adc	r21, r22
    2598:	c9 1f       	adc	r28, r25
    259a:	d0 1d       	adc	r29, r0
    259c:	7e f4       	brtc	.+30     	; 0x25bc <__ftoa_engine+0x146>
    259e:	70 33       	cpi	r23, 0x30	; 48
    25a0:	11 f4       	brne	.+4      	; 0x25a6 <__ftoa_engine+0x130>
    25a2:	8a 95       	dec	r24
    25a4:	e6 cf       	rjmp	.-52     	; 0x2572 <__ftoa_engine+0xfc>
    25a6:	e8 94       	clt
    25a8:	01 50       	subi	r16, 0x01	; 1
    25aa:	30 f0       	brcs	.+12     	; 0x25b8 <__ftoa_engine+0x142>
    25ac:	08 0f       	add	r16, r24
    25ae:	0a f4       	brpl	.+2      	; 0x25b2 <__ftoa_engine+0x13c>
    25b0:	00 27       	eor	r16, r16
    25b2:	02 17       	cp	r16, r18
    25b4:	08 f4       	brcc	.+2      	; 0x25b8 <__ftoa_engine+0x142>
    25b6:	20 2f       	mov	r18, r16
    25b8:	23 95       	inc	r18
    25ba:	02 2f       	mov	r16, r18
    25bc:	7a 33       	cpi	r23, 0x3A	; 58
    25be:	28 f0       	brcs	.+10     	; 0x25ca <__ftoa_engine+0x154>
    25c0:	79 e3       	ldi	r23, 0x39	; 57
    25c2:	7d 93       	st	X+, r23
    25c4:	2a 95       	dec	r18
    25c6:	e9 f7       	brne	.-6      	; 0x25c2 <__ftoa_engine+0x14c>
    25c8:	10 c0       	rjmp	.+32     	; 0x25ea <__ftoa_engine+0x174>
    25ca:	7d 93       	st	X+, r23
    25cc:	2a 95       	dec	r18
    25ce:	89 f6       	brne	.-94     	; 0x2572 <__ftoa_engine+0xfc>
    25d0:	06 94       	lsr	r0
    25d2:	97 95       	ror	r25
    25d4:	67 95       	ror	r22
    25d6:	37 95       	ror	r19
    25d8:	17 95       	ror	r17
    25da:	17 94       	ror	r1
    25dc:	e1 18       	sub	r14, r1
    25de:	f1 0a       	sbc	r15, r17
    25e0:	43 0b       	sbc	r20, r19
    25e2:	56 0b       	sbc	r21, r22
    25e4:	c9 0b       	sbc	r28, r25
    25e6:	d0 09       	sbc	r29, r0
    25e8:	98 f0       	brcs	.+38     	; 0x2610 <__ftoa_engine+0x19a>
    25ea:	23 95       	inc	r18
    25ec:	7e 91       	ld	r23, -X
    25ee:	73 95       	inc	r23
    25f0:	7a 33       	cpi	r23, 0x3A	; 58
    25f2:	08 f0       	brcs	.+2      	; 0x25f6 <__ftoa_engine+0x180>
    25f4:	70 e3       	ldi	r23, 0x30	; 48
    25f6:	7c 93       	st	X, r23
    25f8:	20 13       	cpse	r18, r16
    25fa:	b8 f7       	brcc	.-18     	; 0x25ea <__ftoa_engine+0x174>
    25fc:	7e 91       	ld	r23, -X
    25fe:	70 61       	ori	r23, 0x10	; 16
    2600:	7d 93       	st	X+, r23
    2602:	30 f0       	brcs	.+12     	; 0x2610 <__ftoa_engine+0x19a>
    2604:	83 95       	inc	r24
    2606:	71 e3       	ldi	r23, 0x31	; 49
    2608:	7d 93       	st	X+, r23
    260a:	70 e3       	ldi	r23, 0x30	; 48
    260c:	2a 95       	dec	r18
    260e:	e1 f7       	brne	.-8      	; 0x2608 <__ftoa_engine+0x192>
    2610:	11 24       	eor	r1, r1
    2612:	ef 90       	pop	r14
    2614:	ff 90       	pop	r15
    2616:	0f 91       	pop	r16
    2618:	1f 91       	pop	r17
    261a:	cf 91       	pop	r28
    261c:	df 91       	pop	r29
    261e:	99 27       	eor	r25, r25
    2620:	87 fd       	sbrc	r24, 7
    2622:	90 95       	com	r25
    2624:	08 95       	ret

00002626 <strnlen_P>:
    2626:	fc 01       	movw	r30, r24
    2628:	05 90       	lpm	r0, Z+
    262a:	61 50       	subi	r22, 0x01	; 1
    262c:	70 40       	sbci	r23, 0x00	; 0
    262e:	01 10       	cpse	r0, r1
    2630:	d8 f7       	brcc	.-10     	; 0x2628 <strnlen_P+0x2>
    2632:	80 95       	com	r24
    2634:	90 95       	com	r25
    2636:	8e 0f       	add	r24, r30
    2638:	9f 1f       	adc	r25, r31
    263a:	08 95       	ret

0000263c <strnlen>:
    263c:	fc 01       	movw	r30, r24
    263e:	61 50       	subi	r22, 0x01	; 1
    2640:	70 40       	sbci	r23, 0x00	; 0
    2642:	01 90       	ld	r0, Z+
    2644:	01 10       	cpse	r0, r1
    2646:	d8 f7       	brcc	.-10     	; 0x263e <strnlen+0x2>
    2648:	80 95       	com	r24
    264a:	90 95       	com	r25
    264c:	8e 0f       	add	r24, r30
    264e:	9f 1f       	adc	r25, r31
    2650:	08 95       	ret

00002652 <fdevopen>:
    2652:	0f 93       	push	r16
    2654:	1f 93       	push	r17
    2656:	cf 93       	push	r28
    2658:	df 93       	push	r29
    265a:	00 97       	sbiw	r24, 0x00	; 0
    265c:	31 f4       	brne	.+12     	; 0x266a <fdevopen+0x18>
    265e:	61 15       	cp	r22, r1
    2660:	71 05       	cpc	r23, r1
    2662:	19 f4       	brne	.+6      	; 0x266a <fdevopen+0x18>
    2664:	80 e0       	ldi	r24, 0x00	; 0
    2666:	90 e0       	ldi	r25, 0x00	; 0
    2668:	39 c0       	rjmp	.+114    	; 0x26dc <fdevopen+0x8a>
    266a:	8b 01       	movw	r16, r22
    266c:	ec 01       	movw	r28, r24
    266e:	6e e0       	ldi	r22, 0x0E	; 14
    2670:	70 e0       	ldi	r23, 0x00	; 0
    2672:	81 e0       	ldi	r24, 0x01	; 1
    2674:	90 e0       	ldi	r25, 0x00	; 0
    2676:	17 d1       	rcall	.+558    	; 0x28a6 <calloc>
    2678:	fc 01       	movw	r30, r24
    267a:	89 2b       	or	r24, r25
    267c:	99 f3       	breq	.-26     	; 0x2664 <fdevopen+0x12>
    267e:	80 e8       	ldi	r24, 0x80	; 128
    2680:	83 83       	std	Z+3, r24	; 0x03
    2682:	01 15       	cp	r16, r1
    2684:	11 05       	cpc	r17, r1
    2686:	71 f0       	breq	.+28     	; 0x26a4 <fdevopen+0x52>
    2688:	13 87       	std	Z+11, r17	; 0x0b
    268a:	02 87       	std	Z+10, r16	; 0x0a
    268c:	81 e8       	ldi	r24, 0x81	; 129
    268e:	83 83       	std	Z+3, r24	; 0x03
    2690:	80 91 57 04 	lds	r24, 0x0457	; 0x800457 <__iob>
    2694:	90 91 58 04 	lds	r25, 0x0458	; 0x800458 <__iob+0x1>
    2698:	89 2b       	or	r24, r25
    269a:	21 f4       	brne	.+8      	; 0x26a4 <fdevopen+0x52>
    269c:	f0 93 58 04 	sts	0x0458, r31	; 0x800458 <__iob+0x1>
    26a0:	e0 93 57 04 	sts	0x0457, r30	; 0x800457 <__iob>
    26a4:	20 97       	sbiw	r28, 0x00	; 0
    26a6:	c9 f0       	breq	.+50     	; 0x26da <fdevopen+0x88>
    26a8:	d1 87       	std	Z+9, r29	; 0x09
    26aa:	c0 87       	std	Z+8, r28	; 0x08
    26ac:	83 81       	ldd	r24, Z+3	; 0x03
    26ae:	82 60       	ori	r24, 0x02	; 2
    26b0:	83 83       	std	Z+3, r24	; 0x03
    26b2:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <__iob+0x2>
    26b6:	90 91 5a 04 	lds	r25, 0x045A	; 0x80045a <__iob+0x3>
    26ba:	89 2b       	or	r24, r25
    26bc:	71 f4       	brne	.+28     	; 0x26da <fdevopen+0x88>
    26be:	f0 93 5a 04 	sts	0x045A, r31	; 0x80045a <__iob+0x3>
    26c2:	e0 93 59 04 	sts	0x0459, r30	; 0x800459 <__iob+0x2>
    26c6:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <__iob+0x4>
    26ca:	90 91 5c 04 	lds	r25, 0x045C	; 0x80045c <__iob+0x5>
    26ce:	89 2b       	or	r24, r25
    26d0:	21 f4       	brne	.+8      	; 0x26da <fdevopen+0x88>
    26d2:	f0 93 5c 04 	sts	0x045C, r31	; 0x80045c <__iob+0x5>
    26d6:	e0 93 5b 04 	sts	0x045B, r30	; 0x80045b <__iob+0x4>
    26da:	cf 01       	movw	r24, r30
    26dc:	df 91       	pop	r29
    26de:	cf 91       	pop	r28
    26e0:	1f 91       	pop	r17
    26e2:	0f 91       	pop	r16
    26e4:	08 95       	ret

000026e6 <fputc>:
    26e6:	0f 93       	push	r16
    26e8:	1f 93       	push	r17
    26ea:	cf 93       	push	r28
    26ec:	df 93       	push	r29
    26ee:	fb 01       	movw	r30, r22
    26f0:	23 81       	ldd	r18, Z+3	; 0x03
    26f2:	21 fd       	sbrc	r18, 1
    26f4:	03 c0       	rjmp	.+6      	; 0x26fc <fputc+0x16>
    26f6:	8f ef       	ldi	r24, 0xFF	; 255
    26f8:	9f ef       	ldi	r25, 0xFF	; 255
    26fa:	2c c0       	rjmp	.+88     	; 0x2754 <fputc+0x6e>
    26fc:	22 ff       	sbrs	r18, 2
    26fe:	16 c0       	rjmp	.+44     	; 0x272c <fputc+0x46>
    2700:	46 81       	ldd	r20, Z+6	; 0x06
    2702:	57 81       	ldd	r21, Z+7	; 0x07
    2704:	24 81       	ldd	r18, Z+4	; 0x04
    2706:	35 81       	ldd	r19, Z+5	; 0x05
    2708:	42 17       	cp	r20, r18
    270a:	53 07       	cpc	r21, r19
    270c:	44 f4       	brge	.+16     	; 0x271e <fputc+0x38>
    270e:	a0 81       	ld	r26, Z
    2710:	b1 81       	ldd	r27, Z+1	; 0x01
    2712:	9d 01       	movw	r18, r26
    2714:	2f 5f       	subi	r18, 0xFF	; 255
    2716:	3f 4f       	sbci	r19, 0xFF	; 255
    2718:	31 83       	std	Z+1, r19	; 0x01
    271a:	20 83       	st	Z, r18
    271c:	8c 93       	st	X, r24
    271e:	26 81       	ldd	r18, Z+6	; 0x06
    2720:	37 81       	ldd	r19, Z+7	; 0x07
    2722:	2f 5f       	subi	r18, 0xFF	; 255
    2724:	3f 4f       	sbci	r19, 0xFF	; 255
    2726:	37 83       	std	Z+7, r19	; 0x07
    2728:	26 83       	std	Z+6, r18	; 0x06
    272a:	14 c0       	rjmp	.+40     	; 0x2754 <fputc+0x6e>
    272c:	8b 01       	movw	r16, r22
    272e:	ec 01       	movw	r28, r24
    2730:	fb 01       	movw	r30, r22
    2732:	00 84       	ldd	r0, Z+8	; 0x08
    2734:	f1 85       	ldd	r31, Z+9	; 0x09
    2736:	e0 2d       	mov	r30, r0
    2738:	19 95       	eicall
    273a:	89 2b       	or	r24, r25
    273c:	e1 f6       	brne	.-72     	; 0x26f6 <fputc+0x10>
    273e:	d8 01       	movw	r26, r16
    2740:	16 96       	adiw	r26, 0x06	; 6
    2742:	8d 91       	ld	r24, X+
    2744:	9c 91       	ld	r25, X
    2746:	17 97       	sbiw	r26, 0x07	; 7
    2748:	01 96       	adiw	r24, 0x01	; 1
    274a:	17 96       	adiw	r26, 0x07	; 7
    274c:	9c 93       	st	X, r25
    274e:	8e 93       	st	-X, r24
    2750:	16 97       	sbiw	r26, 0x06	; 6
    2752:	ce 01       	movw	r24, r28
    2754:	df 91       	pop	r29
    2756:	cf 91       	pop	r28
    2758:	1f 91       	pop	r17
    275a:	0f 91       	pop	r16
    275c:	08 95       	ret

0000275e <printf>:
    275e:	cf 93       	push	r28
    2760:	df 93       	push	r29
    2762:	cd b7       	in	r28, 0x3d	; 61
    2764:	de b7       	in	r29, 0x3e	; 62
    2766:	ae 01       	movw	r20, r28
    2768:	4a 5f       	subi	r20, 0xFA	; 250
    276a:	5f 4f       	sbci	r21, 0xFF	; 255
    276c:	fa 01       	movw	r30, r20
    276e:	61 91       	ld	r22, Z+
    2770:	71 91       	ld	r23, Z+
    2772:	af 01       	movw	r20, r30
    2774:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <__iob+0x2>
    2778:	90 91 5a 04 	lds	r25, 0x045A	; 0x80045a <__iob+0x3>
    277c:	cc da       	rcall	.-2664   	; 0x1d16 <vfprintf>
    277e:	df 91       	pop	r29
    2780:	cf 91       	pop	r28
    2782:	08 95       	ret

00002784 <putchar>:
    2784:	60 91 59 04 	lds	r22, 0x0459	; 0x800459 <__iob+0x2>
    2788:	70 91 5a 04 	lds	r23, 0x045A	; 0x80045a <__iob+0x3>
    278c:	ac cf       	rjmp	.-168    	; 0x26e6 <fputc>

0000278e <sprintf>:
    278e:	0f 93       	push	r16
    2790:	1f 93       	push	r17
    2792:	cf 93       	push	r28
    2794:	df 93       	push	r29
    2796:	cd b7       	in	r28, 0x3d	; 61
    2798:	de b7       	in	r29, 0x3e	; 62
    279a:	2e 97       	sbiw	r28, 0x0e	; 14
    279c:	0f b6       	in	r0, 0x3f	; 63
    279e:	f8 94       	cli
    27a0:	de bf       	out	0x3e, r29	; 62
    27a2:	0f be       	out	0x3f, r0	; 63
    27a4:	cd bf       	out	0x3d, r28	; 61
    27a6:	0e 89       	ldd	r16, Y+22	; 0x16
    27a8:	1f 89       	ldd	r17, Y+23	; 0x17
    27aa:	86 e0       	ldi	r24, 0x06	; 6
    27ac:	8c 83       	std	Y+4, r24	; 0x04
    27ae:	1a 83       	std	Y+2, r17	; 0x02
    27b0:	09 83       	std	Y+1, r16	; 0x01
    27b2:	8f ef       	ldi	r24, 0xFF	; 255
    27b4:	9f e7       	ldi	r25, 0x7F	; 127
    27b6:	9e 83       	std	Y+6, r25	; 0x06
    27b8:	8d 83       	std	Y+5, r24	; 0x05
    27ba:	ae 01       	movw	r20, r28
    27bc:	46 5e       	subi	r20, 0xE6	; 230
    27be:	5f 4f       	sbci	r21, 0xFF	; 255
    27c0:	68 8d       	ldd	r22, Y+24	; 0x18
    27c2:	79 8d       	ldd	r23, Y+25	; 0x19
    27c4:	ce 01       	movw	r24, r28
    27c6:	01 96       	adiw	r24, 0x01	; 1
    27c8:	a6 da       	rcall	.-2740   	; 0x1d16 <vfprintf>
    27ca:	ef 81       	ldd	r30, Y+7	; 0x07
    27cc:	f8 85       	ldd	r31, Y+8	; 0x08
    27ce:	e0 0f       	add	r30, r16
    27d0:	f1 1f       	adc	r31, r17
    27d2:	10 82       	st	Z, r1
    27d4:	2e 96       	adiw	r28, 0x0e	; 14
    27d6:	0f b6       	in	r0, 0x3f	; 63
    27d8:	f8 94       	cli
    27da:	de bf       	out	0x3e, r29	; 62
    27dc:	0f be       	out	0x3f, r0	; 63
    27de:	cd bf       	out	0x3d, r28	; 61
    27e0:	df 91       	pop	r29
    27e2:	cf 91       	pop	r28
    27e4:	1f 91       	pop	r17
    27e6:	0f 91       	pop	r16
    27e8:	08 95       	ret

000027ea <__ultoa_invert>:
    27ea:	fa 01       	movw	r30, r20
    27ec:	aa 27       	eor	r26, r26
    27ee:	28 30       	cpi	r18, 0x08	; 8
    27f0:	51 f1       	breq	.+84     	; 0x2846 <__ultoa_invert+0x5c>
    27f2:	20 31       	cpi	r18, 0x10	; 16
    27f4:	81 f1       	breq	.+96     	; 0x2856 <__ultoa_invert+0x6c>
    27f6:	e8 94       	clt
    27f8:	6f 93       	push	r22
    27fa:	6e 7f       	andi	r22, 0xFE	; 254
    27fc:	6e 5f       	subi	r22, 0xFE	; 254
    27fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2800:	8f 4f       	sbci	r24, 0xFF	; 255
    2802:	9f 4f       	sbci	r25, 0xFF	; 255
    2804:	af 4f       	sbci	r26, 0xFF	; 255
    2806:	b1 e0       	ldi	r27, 0x01	; 1
    2808:	3e d0       	rcall	.+124    	; 0x2886 <__ultoa_invert+0x9c>
    280a:	b4 e0       	ldi	r27, 0x04	; 4
    280c:	3c d0       	rcall	.+120    	; 0x2886 <__ultoa_invert+0x9c>
    280e:	67 0f       	add	r22, r23
    2810:	78 1f       	adc	r23, r24
    2812:	89 1f       	adc	r24, r25
    2814:	9a 1f       	adc	r25, r26
    2816:	a1 1d       	adc	r26, r1
    2818:	68 0f       	add	r22, r24
    281a:	79 1f       	adc	r23, r25
    281c:	8a 1f       	adc	r24, r26
    281e:	91 1d       	adc	r25, r1
    2820:	a1 1d       	adc	r26, r1
    2822:	6a 0f       	add	r22, r26
    2824:	71 1d       	adc	r23, r1
    2826:	81 1d       	adc	r24, r1
    2828:	91 1d       	adc	r25, r1
    282a:	a1 1d       	adc	r26, r1
    282c:	20 d0       	rcall	.+64     	; 0x286e <__ultoa_invert+0x84>
    282e:	09 f4       	brne	.+2      	; 0x2832 <__ultoa_invert+0x48>
    2830:	68 94       	set
    2832:	3f 91       	pop	r19
    2834:	2a e0       	ldi	r18, 0x0A	; 10
    2836:	26 9f       	mul	r18, r22
    2838:	11 24       	eor	r1, r1
    283a:	30 19       	sub	r19, r0
    283c:	30 5d       	subi	r19, 0xD0	; 208
    283e:	31 93       	st	Z+, r19
    2840:	de f6       	brtc	.-74     	; 0x27f8 <__ultoa_invert+0xe>
    2842:	cf 01       	movw	r24, r30
    2844:	08 95       	ret
    2846:	46 2f       	mov	r20, r22
    2848:	47 70       	andi	r20, 0x07	; 7
    284a:	40 5d       	subi	r20, 0xD0	; 208
    284c:	41 93       	st	Z+, r20
    284e:	b3 e0       	ldi	r27, 0x03	; 3
    2850:	0f d0       	rcall	.+30     	; 0x2870 <__ultoa_invert+0x86>
    2852:	c9 f7       	brne	.-14     	; 0x2846 <__ultoa_invert+0x5c>
    2854:	f6 cf       	rjmp	.-20     	; 0x2842 <__ultoa_invert+0x58>
    2856:	46 2f       	mov	r20, r22
    2858:	4f 70       	andi	r20, 0x0F	; 15
    285a:	40 5d       	subi	r20, 0xD0	; 208
    285c:	4a 33       	cpi	r20, 0x3A	; 58
    285e:	18 f0       	brcs	.+6      	; 0x2866 <__ultoa_invert+0x7c>
    2860:	49 5d       	subi	r20, 0xD9	; 217
    2862:	31 fd       	sbrc	r19, 1
    2864:	40 52       	subi	r20, 0x20	; 32
    2866:	41 93       	st	Z+, r20
    2868:	02 d0       	rcall	.+4      	; 0x286e <__ultoa_invert+0x84>
    286a:	a9 f7       	brne	.-22     	; 0x2856 <__ultoa_invert+0x6c>
    286c:	ea cf       	rjmp	.-44     	; 0x2842 <__ultoa_invert+0x58>
    286e:	b4 e0       	ldi	r27, 0x04	; 4
    2870:	a6 95       	lsr	r26
    2872:	97 95       	ror	r25
    2874:	87 95       	ror	r24
    2876:	77 95       	ror	r23
    2878:	67 95       	ror	r22
    287a:	ba 95       	dec	r27
    287c:	c9 f7       	brne	.-14     	; 0x2870 <__ultoa_invert+0x86>
    287e:	00 97       	sbiw	r24, 0x00	; 0
    2880:	61 05       	cpc	r22, r1
    2882:	71 05       	cpc	r23, r1
    2884:	08 95       	ret
    2886:	9b 01       	movw	r18, r22
    2888:	ac 01       	movw	r20, r24
    288a:	0a 2e       	mov	r0, r26
    288c:	06 94       	lsr	r0
    288e:	57 95       	ror	r21
    2890:	47 95       	ror	r20
    2892:	37 95       	ror	r19
    2894:	27 95       	ror	r18
    2896:	ba 95       	dec	r27
    2898:	c9 f7       	brne	.-14     	; 0x288c <__ultoa_invert+0xa2>
    289a:	62 0f       	add	r22, r18
    289c:	73 1f       	adc	r23, r19
    289e:	84 1f       	adc	r24, r20
    28a0:	95 1f       	adc	r25, r21
    28a2:	a0 1d       	adc	r26, r0
    28a4:	08 95       	ret

000028a6 <calloc>:
    28a6:	0f 93       	push	r16
    28a8:	1f 93       	push	r17
    28aa:	cf 93       	push	r28
    28ac:	df 93       	push	r29
    28ae:	86 9f       	mul	r24, r22
    28b0:	80 01       	movw	r16, r0
    28b2:	87 9f       	mul	r24, r23
    28b4:	10 0d       	add	r17, r0
    28b6:	96 9f       	mul	r25, r22
    28b8:	10 0d       	add	r17, r0
    28ba:	11 24       	eor	r1, r1
    28bc:	c8 01       	movw	r24, r16
    28be:	0d d0       	rcall	.+26     	; 0x28da <malloc>
    28c0:	ec 01       	movw	r28, r24
    28c2:	00 97       	sbiw	r24, 0x00	; 0
    28c4:	21 f0       	breq	.+8      	; 0x28ce <calloc+0x28>
    28c6:	a8 01       	movw	r20, r16
    28c8:	60 e0       	ldi	r22, 0x00	; 0
    28ca:	70 e0       	ldi	r23, 0x00	; 0
    28cc:	27 d1       	rcall	.+590    	; 0x2b1c <memset>
    28ce:	ce 01       	movw	r24, r28
    28d0:	df 91       	pop	r29
    28d2:	cf 91       	pop	r28
    28d4:	1f 91       	pop	r17
    28d6:	0f 91       	pop	r16
    28d8:	08 95       	ret

000028da <malloc>:
    28da:	0f 93       	push	r16
    28dc:	1f 93       	push	r17
    28de:	cf 93       	push	r28
    28e0:	df 93       	push	r29
    28e2:	82 30       	cpi	r24, 0x02	; 2
    28e4:	91 05       	cpc	r25, r1
    28e6:	10 f4       	brcc	.+4      	; 0x28ec <malloc+0x12>
    28e8:	82 e0       	ldi	r24, 0x02	; 2
    28ea:	90 e0       	ldi	r25, 0x00	; 0
    28ec:	e0 91 5f 04 	lds	r30, 0x045F	; 0x80045f <__flp>
    28f0:	f0 91 60 04 	lds	r31, 0x0460	; 0x800460 <__flp+0x1>
    28f4:	20 e0       	ldi	r18, 0x00	; 0
    28f6:	30 e0       	ldi	r19, 0x00	; 0
    28f8:	a0 e0       	ldi	r26, 0x00	; 0
    28fa:	b0 e0       	ldi	r27, 0x00	; 0
    28fc:	30 97       	sbiw	r30, 0x00	; 0
    28fe:	19 f1       	breq	.+70     	; 0x2946 <malloc+0x6c>
    2900:	40 81       	ld	r20, Z
    2902:	51 81       	ldd	r21, Z+1	; 0x01
    2904:	02 81       	ldd	r16, Z+2	; 0x02
    2906:	13 81       	ldd	r17, Z+3	; 0x03
    2908:	48 17       	cp	r20, r24
    290a:	59 07       	cpc	r21, r25
    290c:	c8 f0       	brcs	.+50     	; 0x2940 <malloc+0x66>
    290e:	84 17       	cp	r24, r20
    2910:	95 07       	cpc	r25, r21
    2912:	69 f4       	brne	.+26     	; 0x292e <malloc+0x54>
    2914:	10 97       	sbiw	r26, 0x00	; 0
    2916:	31 f0       	breq	.+12     	; 0x2924 <malloc+0x4a>
    2918:	12 96       	adiw	r26, 0x02	; 2
    291a:	0c 93       	st	X, r16
    291c:	12 97       	sbiw	r26, 0x02	; 2
    291e:	13 96       	adiw	r26, 0x03	; 3
    2920:	1c 93       	st	X, r17
    2922:	27 c0       	rjmp	.+78     	; 0x2972 <malloc+0x98>
    2924:	00 93 5f 04 	sts	0x045F, r16	; 0x80045f <__flp>
    2928:	10 93 60 04 	sts	0x0460, r17	; 0x800460 <__flp+0x1>
    292c:	22 c0       	rjmp	.+68     	; 0x2972 <malloc+0x98>
    292e:	21 15       	cp	r18, r1
    2930:	31 05       	cpc	r19, r1
    2932:	19 f0       	breq	.+6      	; 0x293a <malloc+0x60>
    2934:	42 17       	cp	r20, r18
    2936:	53 07       	cpc	r21, r19
    2938:	18 f4       	brcc	.+6      	; 0x2940 <malloc+0x66>
    293a:	9a 01       	movw	r18, r20
    293c:	bd 01       	movw	r22, r26
    293e:	ef 01       	movw	r28, r30
    2940:	df 01       	movw	r26, r30
    2942:	f8 01       	movw	r30, r16
    2944:	db cf       	rjmp	.-74     	; 0x28fc <malloc+0x22>
    2946:	21 15       	cp	r18, r1
    2948:	31 05       	cpc	r19, r1
    294a:	f9 f0       	breq	.+62     	; 0x298a <malloc+0xb0>
    294c:	28 1b       	sub	r18, r24
    294e:	39 0b       	sbc	r19, r25
    2950:	24 30       	cpi	r18, 0x04	; 4
    2952:	31 05       	cpc	r19, r1
    2954:	80 f4       	brcc	.+32     	; 0x2976 <malloc+0x9c>
    2956:	8a 81       	ldd	r24, Y+2	; 0x02
    2958:	9b 81       	ldd	r25, Y+3	; 0x03
    295a:	61 15       	cp	r22, r1
    295c:	71 05       	cpc	r23, r1
    295e:	21 f0       	breq	.+8      	; 0x2968 <malloc+0x8e>
    2960:	fb 01       	movw	r30, r22
    2962:	93 83       	std	Z+3, r25	; 0x03
    2964:	82 83       	std	Z+2, r24	; 0x02
    2966:	04 c0       	rjmp	.+8      	; 0x2970 <malloc+0x96>
    2968:	90 93 60 04 	sts	0x0460, r25	; 0x800460 <__flp+0x1>
    296c:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <__flp>
    2970:	fe 01       	movw	r30, r28
    2972:	32 96       	adiw	r30, 0x02	; 2
    2974:	44 c0       	rjmp	.+136    	; 0x29fe <malloc+0x124>
    2976:	fe 01       	movw	r30, r28
    2978:	e2 0f       	add	r30, r18
    297a:	f3 1f       	adc	r31, r19
    297c:	81 93       	st	Z+, r24
    297e:	91 93       	st	Z+, r25
    2980:	22 50       	subi	r18, 0x02	; 2
    2982:	31 09       	sbc	r19, r1
    2984:	39 83       	std	Y+1, r19	; 0x01
    2986:	28 83       	st	Y, r18
    2988:	3a c0       	rjmp	.+116    	; 0x29fe <malloc+0x124>
    298a:	20 91 5d 04 	lds	r18, 0x045D	; 0x80045d <__brkval>
    298e:	30 91 5e 04 	lds	r19, 0x045E	; 0x80045e <__brkval+0x1>
    2992:	23 2b       	or	r18, r19
    2994:	41 f4       	brne	.+16     	; 0x29a6 <malloc+0xcc>
    2996:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    299a:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    299e:	30 93 5e 04 	sts	0x045E, r19	; 0x80045e <__brkval+0x1>
    29a2:	20 93 5d 04 	sts	0x045D, r18	; 0x80045d <__brkval>
    29a6:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    29aa:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    29ae:	21 15       	cp	r18, r1
    29b0:	31 05       	cpc	r19, r1
    29b2:	41 f4       	brne	.+16     	; 0x29c4 <malloc+0xea>
    29b4:	2d b7       	in	r18, 0x3d	; 61
    29b6:	3e b7       	in	r19, 0x3e	; 62
    29b8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    29bc:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    29c0:	24 1b       	sub	r18, r20
    29c2:	35 0b       	sbc	r19, r21
    29c4:	e0 91 5d 04 	lds	r30, 0x045D	; 0x80045d <__brkval>
    29c8:	f0 91 5e 04 	lds	r31, 0x045E	; 0x80045e <__brkval+0x1>
    29cc:	e2 17       	cp	r30, r18
    29ce:	f3 07       	cpc	r31, r19
    29d0:	a0 f4       	brcc	.+40     	; 0x29fa <malloc+0x120>
    29d2:	2e 1b       	sub	r18, r30
    29d4:	3f 0b       	sbc	r19, r31
    29d6:	28 17       	cp	r18, r24
    29d8:	39 07       	cpc	r19, r25
    29da:	78 f0       	brcs	.+30     	; 0x29fa <malloc+0x120>
    29dc:	ac 01       	movw	r20, r24
    29de:	4e 5f       	subi	r20, 0xFE	; 254
    29e0:	5f 4f       	sbci	r21, 0xFF	; 255
    29e2:	24 17       	cp	r18, r20
    29e4:	35 07       	cpc	r19, r21
    29e6:	48 f0       	brcs	.+18     	; 0x29fa <malloc+0x120>
    29e8:	4e 0f       	add	r20, r30
    29ea:	5f 1f       	adc	r21, r31
    29ec:	50 93 5e 04 	sts	0x045E, r21	; 0x80045e <__brkval+0x1>
    29f0:	40 93 5d 04 	sts	0x045D, r20	; 0x80045d <__brkval>
    29f4:	81 93       	st	Z+, r24
    29f6:	91 93       	st	Z+, r25
    29f8:	02 c0       	rjmp	.+4      	; 0x29fe <malloc+0x124>
    29fa:	e0 e0       	ldi	r30, 0x00	; 0
    29fc:	f0 e0       	ldi	r31, 0x00	; 0
    29fe:	cf 01       	movw	r24, r30
    2a00:	df 91       	pop	r29
    2a02:	cf 91       	pop	r28
    2a04:	1f 91       	pop	r17
    2a06:	0f 91       	pop	r16
    2a08:	08 95       	ret

00002a0a <free>:
    2a0a:	cf 93       	push	r28
    2a0c:	df 93       	push	r29
    2a0e:	00 97       	sbiw	r24, 0x00	; 0
    2a10:	09 f4       	brne	.+2      	; 0x2a14 <free+0xa>
    2a12:	81 c0       	rjmp	.+258    	; 0x2b16 <free+0x10c>
    2a14:	fc 01       	movw	r30, r24
    2a16:	32 97       	sbiw	r30, 0x02	; 2
    2a18:	13 82       	std	Z+3, r1	; 0x03
    2a1a:	12 82       	std	Z+2, r1	; 0x02
    2a1c:	a0 91 5f 04 	lds	r26, 0x045F	; 0x80045f <__flp>
    2a20:	b0 91 60 04 	lds	r27, 0x0460	; 0x800460 <__flp+0x1>
    2a24:	10 97       	sbiw	r26, 0x00	; 0
    2a26:	81 f4       	brne	.+32     	; 0x2a48 <free+0x3e>
    2a28:	20 81       	ld	r18, Z
    2a2a:	31 81       	ldd	r19, Z+1	; 0x01
    2a2c:	82 0f       	add	r24, r18
    2a2e:	93 1f       	adc	r25, r19
    2a30:	20 91 5d 04 	lds	r18, 0x045D	; 0x80045d <__brkval>
    2a34:	30 91 5e 04 	lds	r19, 0x045E	; 0x80045e <__brkval+0x1>
    2a38:	28 17       	cp	r18, r24
    2a3a:	39 07       	cpc	r19, r25
    2a3c:	51 f5       	brne	.+84     	; 0x2a92 <free+0x88>
    2a3e:	f0 93 5e 04 	sts	0x045E, r31	; 0x80045e <__brkval+0x1>
    2a42:	e0 93 5d 04 	sts	0x045D, r30	; 0x80045d <__brkval>
    2a46:	67 c0       	rjmp	.+206    	; 0x2b16 <free+0x10c>
    2a48:	ed 01       	movw	r28, r26
    2a4a:	20 e0       	ldi	r18, 0x00	; 0
    2a4c:	30 e0       	ldi	r19, 0x00	; 0
    2a4e:	ce 17       	cp	r28, r30
    2a50:	df 07       	cpc	r29, r31
    2a52:	40 f4       	brcc	.+16     	; 0x2a64 <free+0x5a>
    2a54:	4a 81       	ldd	r20, Y+2	; 0x02
    2a56:	5b 81       	ldd	r21, Y+3	; 0x03
    2a58:	9e 01       	movw	r18, r28
    2a5a:	41 15       	cp	r20, r1
    2a5c:	51 05       	cpc	r21, r1
    2a5e:	f1 f0       	breq	.+60     	; 0x2a9c <free+0x92>
    2a60:	ea 01       	movw	r28, r20
    2a62:	f5 cf       	rjmp	.-22     	; 0x2a4e <free+0x44>
    2a64:	d3 83       	std	Z+3, r29	; 0x03
    2a66:	c2 83       	std	Z+2, r28	; 0x02
    2a68:	40 81       	ld	r20, Z
    2a6a:	51 81       	ldd	r21, Z+1	; 0x01
    2a6c:	84 0f       	add	r24, r20
    2a6e:	95 1f       	adc	r25, r21
    2a70:	c8 17       	cp	r28, r24
    2a72:	d9 07       	cpc	r29, r25
    2a74:	59 f4       	brne	.+22     	; 0x2a8c <free+0x82>
    2a76:	88 81       	ld	r24, Y
    2a78:	99 81       	ldd	r25, Y+1	; 0x01
    2a7a:	84 0f       	add	r24, r20
    2a7c:	95 1f       	adc	r25, r21
    2a7e:	02 96       	adiw	r24, 0x02	; 2
    2a80:	91 83       	std	Z+1, r25	; 0x01
    2a82:	80 83       	st	Z, r24
    2a84:	8a 81       	ldd	r24, Y+2	; 0x02
    2a86:	9b 81       	ldd	r25, Y+3	; 0x03
    2a88:	93 83       	std	Z+3, r25	; 0x03
    2a8a:	82 83       	std	Z+2, r24	; 0x02
    2a8c:	21 15       	cp	r18, r1
    2a8e:	31 05       	cpc	r19, r1
    2a90:	29 f4       	brne	.+10     	; 0x2a9c <free+0x92>
    2a92:	f0 93 60 04 	sts	0x0460, r31	; 0x800460 <__flp+0x1>
    2a96:	e0 93 5f 04 	sts	0x045F, r30	; 0x80045f <__flp>
    2a9a:	3d c0       	rjmp	.+122    	; 0x2b16 <free+0x10c>
    2a9c:	e9 01       	movw	r28, r18
    2a9e:	fb 83       	std	Y+3, r31	; 0x03
    2aa0:	ea 83       	std	Y+2, r30	; 0x02
    2aa2:	49 91       	ld	r20, Y+
    2aa4:	59 91       	ld	r21, Y+
    2aa6:	c4 0f       	add	r28, r20
    2aa8:	d5 1f       	adc	r29, r21
    2aaa:	ec 17       	cp	r30, r28
    2aac:	fd 07       	cpc	r31, r29
    2aae:	61 f4       	brne	.+24     	; 0x2ac8 <free+0xbe>
    2ab0:	80 81       	ld	r24, Z
    2ab2:	91 81       	ldd	r25, Z+1	; 0x01
    2ab4:	84 0f       	add	r24, r20
    2ab6:	95 1f       	adc	r25, r21
    2ab8:	02 96       	adiw	r24, 0x02	; 2
    2aba:	e9 01       	movw	r28, r18
    2abc:	99 83       	std	Y+1, r25	; 0x01
    2abe:	88 83       	st	Y, r24
    2ac0:	82 81       	ldd	r24, Z+2	; 0x02
    2ac2:	93 81       	ldd	r25, Z+3	; 0x03
    2ac4:	9b 83       	std	Y+3, r25	; 0x03
    2ac6:	8a 83       	std	Y+2, r24	; 0x02
    2ac8:	e0 e0       	ldi	r30, 0x00	; 0
    2aca:	f0 e0       	ldi	r31, 0x00	; 0
    2acc:	12 96       	adiw	r26, 0x02	; 2
    2ace:	8d 91       	ld	r24, X+
    2ad0:	9c 91       	ld	r25, X
    2ad2:	13 97       	sbiw	r26, 0x03	; 3
    2ad4:	00 97       	sbiw	r24, 0x00	; 0
    2ad6:	19 f0       	breq	.+6      	; 0x2ade <free+0xd4>
    2ad8:	fd 01       	movw	r30, r26
    2ada:	dc 01       	movw	r26, r24
    2adc:	f7 cf       	rjmp	.-18     	; 0x2acc <free+0xc2>
    2ade:	8d 91       	ld	r24, X+
    2ae0:	9c 91       	ld	r25, X
    2ae2:	11 97       	sbiw	r26, 0x01	; 1
    2ae4:	9d 01       	movw	r18, r26
    2ae6:	2e 5f       	subi	r18, 0xFE	; 254
    2ae8:	3f 4f       	sbci	r19, 0xFF	; 255
    2aea:	82 0f       	add	r24, r18
    2aec:	93 1f       	adc	r25, r19
    2aee:	20 91 5d 04 	lds	r18, 0x045D	; 0x80045d <__brkval>
    2af2:	30 91 5e 04 	lds	r19, 0x045E	; 0x80045e <__brkval+0x1>
    2af6:	28 17       	cp	r18, r24
    2af8:	39 07       	cpc	r19, r25
    2afa:	69 f4       	brne	.+26     	; 0x2b16 <free+0x10c>
    2afc:	30 97       	sbiw	r30, 0x00	; 0
    2afe:	29 f4       	brne	.+10     	; 0x2b0a <free+0x100>
    2b00:	10 92 60 04 	sts	0x0460, r1	; 0x800460 <__flp+0x1>
    2b04:	10 92 5f 04 	sts	0x045F, r1	; 0x80045f <__flp>
    2b08:	02 c0       	rjmp	.+4      	; 0x2b0e <free+0x104>
    2b0a:	13 82       	std	Z+3, r1	; 0x03
    2b0c:	12 82       	std	Z+2, r1	; 0x02
    2b0e:	b0 93 5e 04 	sts	0x045E, r27	; 0x80045e <__brkval+0x1>
    2b12:	a0 93 5d 04 	sts	0x045D, r26	; 0x80045d <__brkval>
    2b16:	df 91       	pop	r29
    2b18:	cf 91       	pop	r28
    2b1a:	08 95       	ret

00002b1c <memset>:
    2b1c:	dc 01       	movw	r26, r24
    2b1e:	01 c0       	rjmp	.+2      	; 0x2b22 <memset+0x6>
    2b20:	6d 93       	st	X+, r22
    2b22:	41 50       	subi	r20, 0x01	; 1
    2b24:	50 40       	sbci	r21, 0x00	; 0
    2b26:	e0 f7       	brcc	.-8      	; 0x2b20 <memset+0x4>
    2b28:	08 95       	ret

00002b2a <_exit>:
    2b2a:	f8 94       	cli

00002b2c <__stop_program>:
    2b2c:	ff cf       	rjmp	.-2      	; 0x2b2c <__stop_program>
