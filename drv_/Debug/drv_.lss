
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001fa  00800200  00001f96  0000202a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f96  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000027  008003fa  008003fa  00002224  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002224  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002280  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  000022c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028f9  00000000  00000000  00002490  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013c3  00000000  00000000  00004d89  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012c1  00000000  00000000  0000614c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005d4  00000000  00000000  00007410  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b7e  00000000  00000000  000079e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001af3  00000000  00000000  00008562  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  0000a055  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	9e c0       	rjmp	.+316    	; 0x13e <__ctors_end>
       2:	00 00       	nop
       4:	bc c0       	rjmp	.+376    	; 0x17e <__bad_interrupt>
       6:	00 00       	nop
       8:	ba c0       	rjmp	.+372    	; 0x17e <__bad_interrupt>
       a:	00 00       	nop
       c:	b8 c0       	rjmp	.+368    	; 0x17e <__bad_interrupt>
       e:	00 00       	nop
      10:	b6 c0       	rjmp	.+364    	; 0x17e <__bad_interrupt>
      12:	00 00       	nop
      14:	b4 c0       	rjmp	.+360    	; 0x17e <__bad_interrupt>
      16:	00 00       	nop
      18:	b2 c0       	rjmp	.+356    	; 0x17e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b0 c0       	rjmp	.+352    	; 0x17e <__bad_interrupt>
      1e:	00 00       	nop
      20:	ae c0       	rjmp	.+348    	; 0x17e <__bad_interrupt>
      22:	00 00       	nop
      24:	ac c0       	rjmp	.+344    	; 0x17e <__bad_interrupt>
      26:	00 00       	nop
      28:	aa c0       	rjmp	.+340    	; 0x17e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	a8 c0       	rjmp	.+336    	; 0x17e <__bad_interrupt>
      2e:	00 00       	nop
      30:	a6 c0       	rjmp	.+332    	; 0x17e <__bad_interrupt>
      32:	00 00       	nop
      34:	a4 c0       	rjmp	.+328    	; 0x17e <__bad_interrupt>
      36:	00 00       	nop
      38:	a2 c0       	rjmp	.+324    	; 0x17e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a0 c0       	rjmp	.+320    	; 0x17e <__bad_interrupt>
      3e:	00 00       	nop
      40:	9e c0       	rjmp	.+316    	; 0x17e <__bad_interrupt>
      42:	00 00       	nop
      44:	9c c0       	rjmp	.+312    	; 0x17e <__bad_interrupt>
      46:	00 00       	nop
      48:	9a c0       	rjmp	.+308    	; 0x17e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	98 c0       	rjmp	.+304    	; 0x17e <__bad_interrupt>
      4e:	00 00       	nop
      50:	96 c0       	rjmp	.+300    	; 0x17e <__bad_interrupt>
      52:	00 00       	nop
      54:	94 c0       	rjmp	.+296    	; 0x17e <__bad_interrupt>
      56:	00 00       	nop
      58:	92 c0       	rjmp	.+292    	; 0x17e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ae c0       	rjmp	.+348    	; 0x1ba <__vector_23>
      5e:	00 00       	nop
      60:	8e c0       	rjmp	.+284    	; 0x17e <__bad_interrupt>
      62:	00 00       	nop
      64:	8c c0       	rjmp	.+280    	; 0x17e <__bad_interrupt>
      66:	00 00       	nop
      68:	8a c0       	rjmp	.+276    	; 0x17e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	88 c0       	rjmp	.+272    	; 0x17e <__bad_interrupt>
      6e:	00 00       	nop
      70:	86 c0       	rjmp	.+268    	; 0x17e <__bad_interrupt>
      72:	00 00       	nop
      74:	84 c0       	rjmp	.+264    	; 0x17e <__bad_interrupt>
      76:	00 00       	nop
      78:	82 c0       	rjmp	.+260    	; 0x17e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	80 c0       	rjmp	.+256    	; 0x17e <__bad_interrupt>
      7e:	00 00       	nop
      80:	7e c0       	rjmp	.+252    	; 0x17e <__bad_interrupt>
      82:	00 00       	nop
      84:	7c c0       	rjmp	.+248    	; 0x17e <__bad_interrupt>
      86:	00 00       	nop
      88:	7a c0       	rjmp	.+244    	; 0x17e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	78 c0       	rjmp	.+240    	; 0x17e <__bad_interrupt>
      8e:	00 00       	nop
      90:	76 c0       	rjmp	.+236    	; 0x17e <__bad_interrupt>
      92:	00 00       	nop
      94:	74 c0       	rjmp	.+232    	; 0x17e <__bad_interrupt>
      96:	00 00       	nop
      98:	72 c0       	rjmp	.+228    	; 0x17e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	70 c0       	rjmp	.+224    	; 0x17e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	6e c0       	rjmp	.+220    	; 0x17e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	6c c0       	rjmp	.+216    	; 0x17e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	6a c0       	rjmp	.+212    	; 0x17e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	68 c0       	rjmp	.+208    	; 0x17e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	66 c0       	rjmp	.+204    	; 0x17e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	64 c0       	rjmp	.+200    	; 0x17e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	62 c0       	rjmp	.+196    	; 0x17e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	70 c1       	rjmp	.+736    	; 0x39e <__vector_47>
      be:	00 00       	nop
      c0:	5e c0       	rjmp	.+188    	; 0x17e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	5c c0       	rjmp	.+184    	; 0x17e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	5a c0       	rjmp	.+180    	; 0x17e <__bad_interrupt>
      ca:	00 00       	nop
      cc:	58 c0       	rjmp	.+176    	; 0x17e <__bad_interrupt>
      ce:	00 00       	nop
      d0:	56 c0       	rjmp	.+172    	; 0x17e <__bad_interrupt>
      d2:	00 00       	nop
      d4:	54 c0       	rjmp	.+168    	; 0x17e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	52 c0       	rjmp	.+164    	; 0x17e <__bad_interrupt>
      da:	00 00       	nop
      dc:	50 c0       	rjmp	.+160    	; 0x17e <__bad_interrupt>
      de:	00 00       	nop
      e0:	4e c0       	rjmp	.+156    	; 0x17e <__bad_interrupt>
      e2:	00 00       	nop
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	07 2c       	mov	r0, r7
      fa:	7a a5       	ldd	r23, Y+42	; 0x2a
      fc:	ba 6c       	ori	r27, 0xCA	; 202
      fe:	c5 90       	lpm	r12, Z+
     100:	da 3b       	cpi	r29, 0xBA	; 186
     102:	93 65       	ori	r25, 0x53	; 83
     104:	fc 8b       	std	Y+20, r31	; 0x14
     106:	bc 53       	subi	r27, 0x3C	; 60
     108:	f8 10       	cpse	r15, r8
     10a:	fd 3c       	cpi	r31, 0xCD	; 205
     10c:	56 92       	lac	Z, r5
     10e:	83 4d       	sbci	r24, 0xD3	; 211
     110:	bd 87       	std	Y+13, r27	; 0x0d
     112:	9d 3a       	cpi	r25, 0xAD	; 173
     114:	b6 3d       	cpi	r27, 0xD6	; 214
     116:	cb c9       	rjmp	.-3178   	; 0xfffff4ae <__eeprom_end+0xff7ef4ae>
     118:	bf 5b       	subi	r27, 0xBF	; 191
     11a:	be 73       	andi	r27, 0x3E	; 62
     11c:	da 0f       	add	r29, r26
     11e:	c9 3f       	cpi	r28, 0xF9	; 249
     120:	05 a8       	ldd	r0, Z+53	; 0x35
     122:	4c cd       	rjmp	.-1384   	; 0xfffffbbc <__eeprom_end+0xff7efbbc>
     124:	b2 d4       	rcall	.+2404   	; 0xa8a <mpu6050_calibrate_gyro+0x90>
     126:	4e b9       	out	0x0e, r20	; 14
     128:	38 36       	cpi	r19, 0x68	; 104
     12a:	a9 02       	muls	r26, r25
     12c:	0c 50       	subi	r16, 0x0C	; 12
     12e:	b9 91       	ld	r27, Y+
     130:	86 88       	ldd	r8, Z+22	; 0x16
     132:	08 3c       	cpi	r16, 0xC8	; 200
     134:	a6 aa       	std	Z+54, r10	; 0x36
     136:	aa 2a       	or	r10, r26
     138:	be 00       	.word	0x00be	; ????
     13a:	00 00       	nop
     13c:	80 3f       	cpi	r24, 0xF0	; 240

0000013e <__ctors_end>:
     13e:	11 24       	eor	r1, r1
     140:	1f be       	out	0x3f, r1	; 63
     142:	cf ef       	ldi	r28, 0xFF	; 255
     144:	d1 e2       	ldi	r29, 0x21	; 33
     146:	de bf       	out	0x3e, r29	; 62
     148:	cd bf       	out	0x3d, r28	; 61
     14a:	00 e0       	ldi	r16, 0x00	; 0
     14c:	0c bf       	out	0x3c, r16	; 60

0000014e <__do_copy_data>:
     14e:	13 e0       	ldi	r17, 0x03	; 3
     150:	a0 e0       	ldi	r26, 0x00	; 0
     152:	b2 e0       	ldi	r27, 0x02	; 2
     154:	e6 e9       	ldi	r30, 0x96	; 150
     156:	ff e1       	ldi	r31, 0x1F	; 31
     158:	00 e0       	ldi	r16, 0x00	; 0
     15a:	0b bf       	out	0x3b, r16	; 59
     15c:	02 c0       	rjmp	.+4      	; 0x162 <__do_copy_data+0x14>
     15e:	07 90       	elpm	r0, Z+
     160:	0d 92       	st	X+, r0
     162:	aa 3f       	cpi	r26, 0xFA	; 250
     164:	b1 07       	cpc	r27, r17
     166:	d9 f7       	brne	.-10     	; 0x15e <__do_copy_data+0x10>

00000168 <__do_clear_bss>:
     168:	24 e0       	ldi	r18, 0x04	; 4
     16a:	aa ef       	ldi	r26, 0xFA	; 250
     16c:	b3 e0       	ldi	r27, 0x03	; 3
     16e:	01 c0       	rjmp	.+2      	; 0x172 <.do_clear_bss_start>

00000170 <.do_clear_bss_loop>:
     170:	1d 92       	st	X+, r1

00000172 <.do_clear_bss_start>:
     172:	a1 32       	cpi	r26, 0x21	; 33
     174:	b2 07       	cpc	r27, r18
     176:	e1 f7       	brne	.-8      	; 0x170 <.do_clear_bss_loop>
     178:	60 d1       	rcall	.+704    	; 0x43a <main>
     17a:	0c 94 c9 0f 	jmp	0x1f92	; 0x1f92 <_exit>

0000017e <__bad_interrupt>:
     17e:	40 cf       	rjmp	.-384    	; 0x0 <__vectors>

00000180 <init_gpio>:
	*/
	//DDRB|=(1<<PB5);//LED13
	//sbi(DDRB,4);//digital 10
	//sbi(DDRB,5);//digital 11
	//sbi(DDRB,6);//digital 12
	sbi(DDRH,3);//digital 6 OC4A
     180:	e1 e0       	ldi	r30, 0x01	; 1
     182:	f1 e0       	ldi	r31, 0x01	; 1
     184:	80 81       	ld	r24, Z
     186:	88 60       	ori	r24, 0x08	; 8
     188:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     18a:	80 81       	ld	r24, Z
     18c:	80 61       	ori	r24, 0x10	; 16
     18e:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     190:	80 81       	ld	r24, Z
     192:	80 62       	ori	r24, 0x20	; 32
     194:	80 83       	st	Z, r24
     196:	08 95       	ret

00000198 <uart_putchar>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
     198:	cf 93       	push	r28
     19a:	c8 2f       	mov	r28, r24
     19c:	8a 30       	cpi	r24, 0x0A	; 10
     19e:	11 f4       	brne	.+4      	; 0x1a4 <uart_putchar+0xc>
     1a0:	8d e0       	ldi	r24, 0x0D	; 13
     1a2:	fa df       	rcall	.-12     	; 0x198 <uart_putchar>
     1a4:	e0 ec       	ldi	r30, 0xC0	; 192
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	85 ff       	sbrs	r24, 5
     1ac:	fd cf       	rjmp	.-6      	; 0x1a8 <uart_putchar+0x10>
     1ae:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <__vector_23>:
     1ba:	1f 92       	push	r1
     1bc:	0f 92       	push	r0
     1be:	0f b6       	in	r0, 0x3f	; 63
     1c0:	0f 92       	push	r0
     1c2:	11 24       	eor	r1, r1
     1c4:	2f 93       	push	r18
     1c6:	3f 93       	push	r19
     1c8:	8f 93       	push	r24
     1ca:	9f 93       	push	r25
     1cc:	af 93       	push	r26
     1ce:	bf 93       	push	r27
     1d0:	80 91 fd 03 	lds	r24, 0x03FD	; 0x8003fd <timer0_millis>
     1d4:	90 91 fe 03 	lds	r25, 0x03FE	; 0x8003fe <timer0_millis+0x1>
     1d8:	a0 91 ff 03 	lds	r26, 0x03FF	; 0x8003ff <timer0_millis+0x2>
     1dc:	b0 91 00 04 	lds	r27, 0x0400	; 0x800400 <timer0_millis+0x3>
     1e0:	30 91 fc 03 	lds	r19, 0x03FC	; 0x8003fc <timer0_fract>
     1e4:	23 e0       	ldi	r18, 0x03	; 3
     1e6:	23 0f       	add	r18, r19
     1e8:	2d 37       	cpi	r18, 0x7D	; 125
     1ea:	20 f4       	brcc	.+8      	; 0x1f4 <__vector_23+0x3a>
     1ec:	01 96       	adiw	r24, 0x01	; 1
     1ee:	a1 1d       	adc	r26, r1
     1f0:	b1 1d       	adc	r27, r1
     1f2:	05 c0       	rjmp	.+10     	; 0x1fe <__vector_23+0x44>
     1f4:	26 e8       	ldi	r18, 0x86	; 134
     1f6:	23 0f       	add	r18, r19
     1f8:	02 96       	adiw	r24, 0x02	; 2
     1fa:	a1 1d       	adc	r26, r1
     1fc:	b1 1d       	adc	r27, r1
     1fe:	20 93 fc 03 	sts	0x03FC, r18	; 0x8003fc <timer0_fract>
     202:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <timer0_millis>
     206:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <timer0_millis+0x1>
     20a:	a0 93 ff 03 	sts	0x03FF, r26	; 0x8003ff <timer0_millis+0x2>
     20e:	b0 93 00 04 	sts	0x0400, r27	; 0x800400 <timer0_millis+0x3>
     212:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <timer0_overflow_count>
     216:	90 91 02 04 	lds	r25, 0x0402	; 0x800402 <timer0_overflow_count+0x1>
     21a:	a0 91 03 04 	lds	r26, 0x0403	; 0x800403 <timer0_overflow_count+0x2>
     21e:	b0 91 04 04 	lds	r27, 0x0404	; 0x800404 <timer0_overflow_count+0x3>
     222:	01 96       	adiw	r24, 0x01	; 1
     224:	a1 1d       	adc	r26, r1
     226:	b1 1d       	adc	r27, r1
     228:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <timer0_overflow_count>
     22c:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <timer0_overflow_count+0x1>
     230:	a0 93 03 04 	sts	0x0403, r26	; 0x800403 <timer0_overflow_count+0x2>
     234:	b0 93 04 04 	sts	0x0404, r27	; 0x800404 <timer0_overflow_count+0x3>
     238:	bf 91       	pop	r27
     23a:	af 91       	pop	r26
     23c:	9f 91       	pop	r25
     23e:	8f 91       	pop	r24
     240:	3f 91       	pop	r19
     242:	2f 91       	pop	r18
     244:	0f 90       	pop	r0
     246:	0f be       	out	0x3f, r0	; 63
     248:	0f 90       	pop	r0
     24a:	1f 90       	pop	r1
     24c:	18 95       	reti

0000024e <micros>:
     24e:	3f b7       	in	r19, 0x3f	; 63
     250:	f8 94       	cli
     252:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <timer0_overflow_count>
     256:	90 91 02 04 	lds	r25, 0x0402	; 0x800402 <timer0_overflow_count+0x1>
     25a:	a0 91 03 04 	lds	r26, 0x0403	; 0x800403 <timer0_overflow_count+0x2>
     25e:	b0 91 04 04 	lds	r27, 0x0404	; 0x800404 <timer0_overflow_count+0x3>
     262:	26 b5       	in	r18, 0x26	; 38
     264:	a8 9b       	sbis	0x15, 0	; 21
     266:	05 c0       	rjmp	.+10     	; 0x272 <micros+0x24>
     268:	2f 3f       	cpi	r18, 0xFF	; 255
     26a:	19 f0       	breq	.+6      	; 0x272 <micros+0x24>
     26c:	01 96       	adiw	r24, 0x01	; 1
     26e:	a1 1d       	adc	r26, r1
     270:	b1 1d       	adc	r27, r1
     272:	3f bf       	out	0x3f, r19	; 63
     274:	ba 2f       	mov	r27, r26
     276:	a9 2f       	mov	r26, r25
     278:	98 2f       	mov	r25, r24
     27a:	88 27       	eor	r24, r24
     27c:	82 0f       	add	r24, r18
     27e:	91 1d       	adc	r25, r1
     280:	a1 1d       	adc	r26, r1
     282:	b1 1d       	adc	r27, r1
     284:	bc 01       	movw	r22, r24
     286:	cd 01       	movw	r24, r26
     288:	66 0f       	add	r22, r22
     28a:	77 1f       	adc	r23, r23
     28c:	88 1f       	adc	r24, r24
     28e:	99 1f       	adc	r25, r25
     290:	66 0f       	add	r22, r22
     292:	77 1f       	adc	r23, r23
     294:	88 1f       	adc	r24, r24
     296:	99 1f       	adc	r25, r25
     298:	08 95       	ret

0000029a <PWM_update>:
{
	PWM_update();
}
void PWM_update()//motor pwm update 
{
	U_PWM=pwmSin[U_step];
     29a:	e0 91 fa 03 	lds	r30, 0x03FA	; 0x8003fa <__data_end>
     29e:	f0 91 fb 03 	lds	r31, 0x03FB	; 0x8003fb <__data_end+0x1>
     2a2:	ea 5f       	subi	r30, 0xFA	; 250
     2a4:	fd 4f       	sbci	r31, 0xFD	; 253
     2a6:	80 81       	ld	r24, Z
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2ae:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     2b2:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step>
     2b6:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step+0x1>
     2ba:	ea 5f       	subi	r30, 0xFA	; 250
     2bc:	fd 4f       	sbci	r31, 0xFD	; 253
     2be:	80 81       	ld	r24, Z
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     2c6:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     2ca:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step>
     2ce:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step+0x1>
     2d2:	ea 5f       	subi	r30, 0xFA	; 250
     2d4:	fd 4f       	sbci	r31, 0xFD	; 253
     2d6:	80 81       	ld	r24, Z
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     2de:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     2e2:	60 91 77 03 	lds	r22, 0x0377	; 0x800377 <incr>
     2e6:	70 91 78 03 	lds	r23, 0x0378	; 0x800378 <incr+0x1>
     2ea:	40 91 fa 03 	lds	r20, 0x03FA	; 0x8003fa <__data_end>
     2ee:	50 91 fb 03 	lds	r21, 0x03FB	; 0x8003fb <__data_end+0x1>
     2f2:	46 0f       	add	r20, r22
     2f4:	57 1f       	adc	r21, r23
     2f6:	50 93 fb 03 	sts	0x03FB, r21	; 0x8003fb <__data_end+0x1>
     2fa:	40 93 fa 03 	sts	0x03FA, r20	; 0x8003fa <__data_end>
	V_step=V_step+incr;
     2fe:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     302:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     306:	26 0f       	add	r18, r22
     308:	37 1f       	adc	r19, r23
     30a:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     30e:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	W_step=W_step+incr;
     312:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     316:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     31a:	86 0f       	add	r24, r22
     31c:	97 1f       	adc	r25, r23
     31e:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     322:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	if(U_step > SINE_TABLE_SZ)  
     326:	49 36       	cpi	r20, 0x69	; 105
     328:	61 e0       	ldi	r22, 0x01	; 1
     32a:	56 07       	cpc	r21, r22
     32c:	2c f0       	brlt	.+10     	; 0x338 <PWM_update+0x9e>
		U_step = 0;
     32e:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <__data_end+0x1>
     332:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <__data_end>
     336:	08 c0       	rjmp	.+16     	; 0x348 <PWM_update+0xae>
	if(U_step < 0)  
     338:	55 23       	and	r21, r21
     33a:	34 f4       	brge	.+12     	; 0x348 <PWM_update+0xae>
		U_step = SINE_TABLE_SZ;
     33c:	48 e6       	ldi	r20, 0x68	; 104
     33e:	51 e0       	ldi	r21, 0x01	; 1
     340:	50 93 fb 03 	sts	0x03FB, r21	; 0x8003fb <__data_end+0x1>
     344:	40 93 fa 03 	sts	0x03FA, r20	; 0x8003fa <__data_end>
	
	if(V_step > SINE_TABLE_SZ)  
     348:	29 36       	cpi	r18, 0x69	; 105
     34a:	41 e0       	ldi	r20, 0x01	; 1
     34c:	34 07       	cpc	r19, r20
     34e:	2c f0       	brlt	.+10     	; 0x35a <PWM_update+0xc0>
		V_step = 0;
     350:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step+0x1>
     354:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step>
     358:	08 c0       	rjmp	.+16     	; 0x36a <PWM_update+0xd0>
	if(V_step < 0)  
     35a:	33 23       	and	r19, r19
     35c:	34 f4       	brge	.+12     	; 0x36a <PWM_update+0xd0>
		V_step = SINE_TABLE_SZ;
     35e:	28 e6       	ldi	r18, 0x68	; 104
     360:	31 e0       	ldi	r19, 0x01	; 1
     362:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     366:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	
	if(W_step > SINE_TABLE_SZ)  
     36a:	89 36       	cpi	r24, 0x69	; 105
     36c:	61 e0       	ldi	r22, 0x01	; 1
     36e:	96 07       	cpc	r25, r22
     370:	2c f0       	brlt	.+10     	; 0x37c <PWM_update+0xe2>
		W_step = 0;
     372:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step+0x1>
     376:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step>
     37a:	08 c0       	rjmp	.+16     	; 0x38c <PWM_update+0xf2>
	if(W_step < 0) 
     37c:	99 23       	and	r25, r25
     37e:	34 f4       	brge	.+12     	; 0x38c <PWM_update+0xf2>
		W_step = SINE_TABLE_SZ;
     380:	88 e6       	ldi	r24, 0x68	; 104
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     388:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     38c:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <pwm_delay>
     390:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <pwm_delay+0x1>
     394:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     398:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     39c:	08 95       	ret

0000039e <__vector_47>:
	SREG = oldSREG;

	return m;
}
ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
     39e:	1f 92       	push	r1
     3a0:	0f 92       	push	r0
     3a2:	0f b6       	in	r0, 0x3f	; 63
     3a4:	0f 92       	push	r0
     3a6:	11 24       	eor	r1, r1
     3a8:	0b b6       	in	r0, 0x3b	; 59
     3aa:	0f 92       	push	r0
     3ac:	2f 93       	push	r18
     3ae:	3f 93       	push	r19
     3b0:	4f 93       	push	r20
     3b2:	5f 93       	push	r21
     3b4:	6f 93       	push	r22
     3b6:	7f 93       	push	r23
     3b8:	8f 93       	push	r24
     3ba:	9f 93       	push	r25
     3bc:	af 93       	push	r26
     3be:	bf 93       	push	r27
     3c0:	ef 93       	push	r30
	PWM_update();
     3c2:	ff 93       	push	r31
}
     3c4:	6a df       	rcall	.-300    	; 0x29a <PWM_update>
     3c6:	ff 91       	pop	r31
     3c8:	ef 91       	pop	r30
     3ca:	bf 91       	pop	r27
     3cc:	af 91       	pop	r26
     3ce:	9f 91       	pop	r25
     3d0:	8f 91       	pop	r24
     3d2:	7f 91       	pop	r23
     3d4:	6f 91       	pop	r22
     3d6:	5f 91       	pop	r21
     3d8:	4f 91       	pop	r20
     3da:	3f 91       	pop	r19
     3dc:	2f 91       	pop	r18
     3de:	0f 90       	pop	r0
     3e0:	0b be       	out	0x3b, r0	; 59
     3e2:	0f 90       	pop	r0
     3e4:	0f be       	out	0x3f, r0	; 63
     3e6:	0f 90       	pop	r0
     3e8:	1f 90       	pop	r1
     3ea:	18 95       	reti

000003ec <print16>:
	OCR5A=pwm_delay;
}
void print16(int16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	cd b7       	in	r28, 0x3d	; 61
     3f6:	de b7       	in	r29, 0x3e	; 62
     3f8:	2a 97       	sbiw	r28, 0x0a	; 10
     3fa:	0f b6       	in	r0, 0x3f	; 63
     3fc:	f8 94       	cli
     3fe:	de bf       	out	0x3e, r29	; 62
     400:	0f be       	out	0x3f, r0	; 63
     402:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     404:	4a e0       	ldi	r20, 0x0A	; 10
     406:	8e 01       	movw	r16, r28
     408:	0f 5f       	subi	r16, 0xFF	; 255
     40a:	1f 4f       	sbci	r17, 0xFF	; 255
     40c:	b8 01       	movw	r22, r16
     40e:	fc 01       	movw	r30, r24
     410:	80 81       	ld	r24, Z
     412:	91 81       	ldd	r25, Z+1	; 0x01
     414:	0e 94 15 0b 	call	0x162a	; 0x162a <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     418:	1f 93       	push	r17
     41a:	0f 93       	push	r16
     41c:	0e 94 82 0b 	call	0x1704	; 0x1704 <printf>
	//printf("\n");
}
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	2a 96       	adiw	r28, 0x0a	; 10
     426:	0f b6       	in	r0, 0x3f	; 63
     428:	f8 94       	cli
     42a:	de bf       	out	0x3e, r29	; 62
     42c:	0f be       	out	0x3f, r0	; 63
     42e:	cd bf       	out	0x3d, r28	; 61
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	1f 91       	pop	r17
     436:	0f 91       	pop	r16
     438:	08 95       	ret

0000043a <main>:
#endif
//uint8_t pwmSin[] = {128, 132, 136, 140, 143, 147, 151, 155, 159, 162, 166, 170, 174, 178, 181, 185, 189, 192, 196, 200, 203, 207, 211, 214, 218, 221, 225, 228, 232, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 248, 249, 250, 250, 251, 252, 252, 253, 253, 253, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 253, 253, 253, 252, 252, 251, 250, 250, 249, 248, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 248, 249, 250, 250, 251, 252, 252, 253, 253, 253, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 253, 253, 253, 252, 252, 251, 250, 250, 249, 248, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 235, 232, 228, 225, 221, 218, 214, 211, 207, 203, 200, 196, 192, 189, 185, 181, 178, 174, 170, 166, 162, 159, 155, 151, 147, 143, 140, 136, 132, 128, 124, 120, 116, 113, 109, 105, 101, 97, 94, 90, 86, 82, 78, 75, 71, 67, 64, 60, 56, 53, 49, 45, 42, 38, 35, 31, 28, 24, 21, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 8, 7, 6, 6, 5, 4, 4, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 8, 7, 6, 6, 5, 4, 4, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 24, 28, 31, 35, 38, 42, 45, 49, 53, 56, 60, 64, 67, 71, 75, 78, 82, 86, 90, 94, 97, 101, 105, 109, 113, 116, 120, 124};

/*-----------------------------------start of main----------------------------------*/
int main(void)
{				
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
     43e:	cd b7       	in	r28, 0x3d	; 61
     440:	de b7       	in	r29, 0x3e	; 62
     442:	e2 97       	sbiw	r28, 0x32	; 50
     444:	0f b6       	in	r0, 0x3f	; 63
     446:	f8 94       	cli
     448:	de bf       	out	0x3e, r29	; 62
     44a:	0f be       	out	0x3f, r0	; 63
     44c:	cd bf       	out	0x3d, r28	; 61
		
	cli();
	init_gpio();
		#ifdef GYRO
			i2c_init();
     44e:	f8 94       	cli
		#endif
	USART_Init(MY_UBRR);
     450:	97 de       	rcall	.-722    	; 0x180 <init_gpio>
     452:	a9 d4       	rcall	.+2386   	; 0xda6 <i2c_init>
     454:	80 e1       	ldi	r24, 0x10	; 16
	uart_str = fdevopen(uart_putchar, NULL);	
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	57 d5       	rcall	.+2734   	; 0xf08 <USART_Init>
     45a:	60 e0       	ldi	r22, 0x00	; 0
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	8c ec       	ldi	r24, 0xCC	; 204
     460:	90 e0       	ldi	r25, 0x00	; 0
	setup_timer0();
	Enable_timer0_overflow_interrupt();//micros
     462:	0e 94 38 0b 	call	0x1670	; 0x1670 <fdevopen>
	setup_timer4();//pwm
     466:	90 93 06 04 	sts	0x0406, r25	; 0x800406 <uart_str+0x1>
	setup_timer5();
     46a:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <uart_str>
	Enable_timer5_compare_interrupt();//motor
     46e:	8e d4       	rcall	.+2332   	; 0xd8c <setup_timer0>
     470:	94 d4       	rcall	.+2344   	; 0xd9a <Enable_timer0_overflow_interrupt>
	OCR5A=4000;
     472:	69 d4       	rcall	.+2258   	; 0xd46 <setup_timer4>
     474:	7c d4       	rcall	.+2296   	; 0xd6e <setup_timer5>
     476:	84 d4       	rcall	.+2312   	; 0xd80 <Enable_timer5_compare_interrupt>
     478:	80 ea       	ldi	r24, 0xA0	; 160
     47a:	9f e0       	ldi	r25, 0x0F	; 15
     47c:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
		double acc_total_vector=0;
		double angle_pitch_acc=0;
		double angle_roll_acc=0;
		bool set_gyro_angles=false;
			#ifdef CALIBERATED_DATA
				int32_t gyroX_calib_=0;
     480:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     484:	1d 86       	std	Y+13, r1	; 0x0d
				int32_t gyroY_calib_=0;
     486:	1e 86       	std	Y+14, r1	; 0x0e
     488:	1f 86       	std	Y+15, r1	; 0x0f
     48a:	18 8a       	std	Y+16, r1	; 0x10
     48c:	19 8a       	std	Y+17, r1	; 0x11
				int32_t gyroZ_calib_=0;
     48e:	1a 8a       	std	Y+18, r1	; 0x12
     490:	1b 8a       	std	Y+19, r1	; 0x13
     492:	1c 8a       	std	Y+20, r1	; 0x14
				int32_t accelY_calib_=0;
				int32_t accelZ_calib_=0;				
				//uint16_t gyroX_angle_calib=0; 
				uint16_t gyroY_angle_calib=0; 
				//uint16_t gyroZ_angle_calib=0; 				
				mpu6050_calibrate_gyro(&gyroX_calib_,&gyroY_calib_,&gyroZ_calib_);
     494:	1d 8a       	std	Y+21, r1	; 0x15
     496:	1e 8a       	std	Y+22, r1	; 0x16
     498:	1f 8a       	std	Y+23, r1	; 0x17
     49a:	18 8e       	std	Y+24, r1	; 0x18
     49c:	ae 01       	movw	r20, r28
     49e:	4b 5e       	subi	r20, 0xEB	; 235
     4a0:	5f 4f       	sbci	r21, 0xFF	; 255
     4a2:	be 01       	movw	r22, r28
     4a4:	6f 5e       	subi	r22, 0xEF	; 239
				int16_t gyroX_calib=gyroX_calib_;
     4a6:	7f 4f       	sbci	r23, 0xFF	; 255
     4a8:	ce 01       	movw	r24, r28
				int16_t gyroY_calib=gyroY_calib_;
     4aa:	0d 96       	adiw	r24, 0x0d	; 13
     4ac:	a6 d2       	rcall	.+1356   	; 0x9fa <mpu6050_calibrate_gyro>
				int16_t gyroZ_calib=gyroZ_calib_;
     4ae:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b0:	3e 84       	ldd	r3, Y+14	; 0x0e
				int16_t accelX_calib=accelX_calib_;
				int16_t accelY_calib=accelY_calib_;
				int16_t accelZ_calib=accelZ_calib_;				
				//mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     4b2:	29 89       	ldd	r18, Y+17	; 0x11
     4b4:	3a 89       	ldd	r19, Y+18	; 0x12
     4b6:	38 ab       	std	Y+48, r19	; 0x30
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     4b8:	2f a7       	std	Y+47, r18	; 0x2f
     4ba:	8d 89       	ldd	r24, Y+21	; 0x15
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     4bc:	9e 89       	ldd	r25, Y+22	; 0x16
     4be:	9a ab       	std	Y+50, r25	; 0x32
     4c0:	89 ab       	std	Y+49, r24	; 0x31
     4c2:	67 e0       	ldi	r22, 0x07	; 7
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     4c4:	89 e1       	ldi	r24, 0x19	; 25
     4c6:	78 d3       	rcall	.+1776   	; 0xbb8 <mpu6050_writeByte>
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	8a e1       	ldi	r24, 0x1A	; 26
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     4cc:	75 d3       	rcall	.+1770   	; 0xbb8 <mpu6050_writeByte>
     4ce:	68 e0       	ldi	r22, 0x08	; 8
     4d0:	8b e1       	ldi	r24, 0x1B	; 27
     4d2:	72 d3       	rcall	.+1764   	; 0xbb8 <mpu6050_writeByte>
		getSinTable(SINE_TABLE_SZ,pwmSin,sinScale);
		printf("U_step_predefine="); print16ln(&U_step);
		printf("  V_step_predefine="); print16ln(&V_step);
		printf("  W_step_predefine="); print16ln(&W_step);  
	#endif 
	USART_Transmit(0xfe); 
     4d4:	60 e1       	ldi	r22, 0x10	; 16
     4d6:	8c e1       	ldi	r24, 0x1C	; 28
     4d8:	6f d3       	rcall	.+1758   	; 0xbb8 <mpu6050_writeByte>
	sei();
     4da:	61 e0       	ldi	r22, 0x01	; 1
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
		double angle_roll=0;
     4dc:	8b e6       	ldi	r24, 0x6B	; 107
     4de:	6c d3       	rcall	.+1752   	; 0xbb8 <mpu6050_writeByte>
     4e0:	8e ef       	ldi	r24, 0xFE	; 254
     4e2:	1d d5       	rcall	.+2618   	; 0xf1e <USART_Transmit>
		int16_t gyro_y;
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
     4e4:	78 94       	sei
     4e6:	1f 8e       	std	Y+31, r1	; 0x1f
     4e8:	18 a2       	std	Y+32, r1	; 0x20
     4ea:	19 a2       	std	Y+33, r1	; 0x21
	USART_Transmit(0xfe); 
	sei();
    while (1) /*---------------------------while(1)---------------------------------*/
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     4ec:	1a a2       	std	Y+34, r1	; 0x22
     4ee:	1b a2       	std	Y+35, r1	; 0x23
     4f0:	1c a2       	std	Y+36, r1	; 0x24
     4f2:	1d a2       	std	Y+37, r1	; 0x25
     4f4:	1e a2       	std	Y+38, r1	; 0x26
     4f6:	9e 01       	movw	r18, r28
     4f8:	2b 5f       	subi	r18, 0xFB	; 251
     4fa:	3f 4f       	sbci	r19, 0xFF	; 255
     4fc:	79 01       	movw	r14, r18
     4fe:	8e 01       	movw	r16, r28
     500:	0d 5f       	subi	r16, 0xFD	; 253
     502:	1f 4f       	sbci	r17, 0xFF	; 255
     504:	24 50       	subi	r18, 0x04	; 4
     506:	31 09       	sbc	r19, r1
     508:	ae 01       	movw	r20, r28
     50a:	45 5f       	subi	r20, 0xF5	; 245
     50c:	5f 4f       	sbci	r21, 0xFF	; 255
     50e:	be 01       	movw	r22, r28
		#ifdef GYRO
			#ifdef CALIBERATED_DATA
				accX;
				accY;
				accZ;
				grX;
     510:	67 5f       	subi	r22, 0xF7	; 247
     512:	7f 4f       	sbci	r23, 0xFF	; 255
     514:	ce 01       	movw	r24, r28
     516:	07 96       	adiw	r24, 0x07	; 7
     518:	ab d3       	rcall	.+1878   	; 0xc70 <mpu6050_getRawData>
				grY;
     51a:	89 81       	ldd	r24, Y+1	; 0x01
     51c:	9a 81       	ldd	r25, Y+2	; 0x02
     51e:	82 19       	sub	r24, r2
     520:	93 09       	sbc	r25, r3
     522:	9a 83       	std	Y+2, r25	; 0x02
				grZ;
     524:	89 83       	std	Y+1, r24	; 0x01
     526:	8b 81       	ldd	r24, Y+3	; 0x03
     528:	9c 81       	ldd	r25, Y+4	; 0x04
     52a:	2f a5       	ldd	r18, Y+47	; 0x2f
     52c:	38 a9       	ldd	r19, Y+48	; 0x30
     52e:	82 1b       	sub	r24, r18
     530:	93 0b       	sbc	r25, r19
			printf("  ");
			printf("\n");
			/*--------end------*/			
		#else
			
			double dt = (double)((micros() - timer1));
     532:	9c 83       	std	Y+4, r25	; 0x04
     534:	8b 83       	std	Y+3, r24	; 0x03
     536:	8d 81       	ldd	r24, Y+5	; 0x05
     538:	9e 81       	ldd	r25, Y+6	; 0x06
     53a:	29 a9       	ldd	r18, Y+49	; 0x31
     53c:	3a a9       	ldd	r19, Y+50	; 0x32
     53e:	82 1b       	sub	r24, r18
     540:	93 0b       	sbc	r25, r19
			timer1=micros();
     542:	9e 83       	std	Y+6, r25	; 0x06
     544:	8d 83       	std	Y+5, r24	; 0x05
     546:	83 de       	rcall	.-762    	; 0x24e <micros>
     548:	64 19       	sub	r22, r4
			//double hz=1000000/dt;
			double pop=1/(65.5*1000000/dt);
     54a:	75 09       	sbc	r23, r5
     54c:	86 09       	sbc	r24, r6
     54e:	97 09       	sbc	r25, r7
     550:	07 d6       	rcall	.+3086   	; 0x1160 <__floatunsisf>
     552:	6b 01       	movw	r12, r22
     554:	7c 01       	movw	r14, r24
     556:	7b de       	rcall	.-778    	; 0x24e <micros>
     558:	2b 01       	movw	r4, r22
     55a:	3c 01       	movw	r6, r24
     55c:	a7 01       	movw	r20, r14
     55e:	96 01       	movw	r18, r12
     560:	68 ed       	ldi	r22, 0xD8	; 216
     562:	7c ed       	ldi	r23, 0xDC	; 220
     564:	89 e7       	ldi	r24, 0x79	; 121
     566:	9c e4       	ldi	r25, 0x4C	; 76
     568:	62 d5       	rcall	.+2756   	; 0x102e <__divsf3>
			//if(loop_bool)
			//{
			//	gyroYrate-=tpel;
			//	loop_bool=false;
			//}
			if (!loop_bool)
     56a:	9b 01       	movw	r18, r22
     56c:	ac 01       	movw	r20, r24
     56e:	60 e0       	ldi	r22, 0x00	; 0
     570:	70 e0       	ldi	r23, 0x00	; 0
     572:	80 e8       	ldi	r24, 0x80	; 128
			{
				angle_pitch += gyroXrate; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     574:	9f e3       	ldi	r25, 0x3F	; 63
     576:	5b d5       	rcall	.+2742   	; 0x102e <__divsf3>
     578:	6b 01       	movw	r12, r22
     57a:	7c 01       	movw	r14, r24
     57c:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <loop_bool>
     580:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <loop_bool+0x1>
     584:	89 2b       	or	r24, r25
     586:	59 f5       	brne	.+86     	; 0x5de <main+0x1a4>
     588:	69 81       	ldd	r22, Y+1	; 0x01
     58a:	7a 81       	ldd	r23, Y+2	; 0x02
     58c:	07 2e       	mov	r0, r23
     58e:	00 0c       	add	r0, r0
     590:	88 0b       	sbc	r24, r24
     592:	99 0b       	sbc	r25, r25
     594:	e7 d5       	rcall	.+3022   	; 0x1164 <__floatsisf>
     596:	a7 01       	movw	r20, r14
     598:	96 01       	movw	r18, r12
     59a:	e9 d6       	rcall	.+3538   	; 0x136e <__mulsf3>
     59c:	9b 01       	movw	r18, r22
				angle_roll += gyroYrate;  //Calculate the traveled roll angle and add this to the angle_roll variable			
     59e:	ac 01       	movw	r20, r24
     5a0:	6b a1       	ldd	r22, Y+35	; 0x23
     5a2:	7c a1       	ldd	r23, Y+36	; 0x24
     5a4:	8d a1       	ldd	r24, Y+37	; 0x25
     5a6:	9e a1       	ldd	r25, Y+38	; 0x26
     5a8:	c3 d4       	rcall	.+2438   	; 0xf30 <__addsf3>
     5aa:	6b a3       	std	Y+35, r22	; 0x23
     5ac:	7c a3       	std	Y+36, r23	; 0x24
     5ae:	8d a3       	std	Y+37, r24	; 0x25
     5b0:	9e a3       	std	Y+38, r25	; 0x26
     5b2:	6b 81       	ldd	r22, Y+3	; 0x03
     5b4:	7c 81       	ldd	r23, Y+4	; 0x04
     5b6:	07 2e       	mov	r0, r23
     5b8:	00 0c       	add	r0, r0
     5ba:	88 0b       	sbc	r24, r24
     5bc:	99 0b       	sbc	r25, r25
     5be:	d2 d5       	rcall	.+2980   	; 0x1164 <__floatsisf>
     5c0:	a7 01       	movw	r20, r14
     5c2:	96 01       	movw	r18, r12
     5c4:	d4 d6       	rcall	.+3496   	; 0x136e <__mulsf3>
     5c6:	9b 01       	movw	r18, r22
			}
			else
			{
				loop_bool=false;
     5c8:	ac 01       	movw	r20, r24
     5ca:	6f 8d       	ldd	r22, Y+31	; 0x1f
     5cc:	78 a1       	ldd	r23, Y+32	; 0x20
     5ce:	89 a1       	ldd	r24, Y+33	; 0x21
			}					
					//0.000001066 = 0.0000611 * (3.142(PI) / 180degr) The Arduino sin function is in radians
			pop*=(3.142/180);	
			angle_pitch += angle_roll * sin(gyro_z * pop);               //If the IMU has yawed transfer the roll angle to the pitch angel
     5d0:	9a a1       	ldd	r25, Y+34	; 0x22
     5d2:	ae d4       	rcall	.+2396   	; 0xf30 <__addsf3>
     5d4:	6f 8f       	std	Y+31, r22	; 0x1f
     5d6:	78 a3       	std	Y+32, r23	; 0x20
     5d8:	89 a3       	std	Y+33, r24	; 0x21
     5da:	9a a3       	std	Y+34, r25	; 0x22
     5dc:	04 c0       	rjmp	.+8      	; 0x5e6 <main+0x1ac>
     5de:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <loop_bool+0x1>
     5e2:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <loop_bool>
     5e6:	6d 81       	ldd	r22, Y+5	; 0x05
     5e8:	7e 81       	ldd	r23, Y+6	; 0x06
     5ea:	07 2e       	mov	r0, r23
     5ec:	00 0c       	add	r0, r0
     5ee:	88 0b       	sbc	r24, r24
     5f0:	99 0b       	sbc	r25, r25
     5f2:	b8 d5       	rcall	.+2928   	; 0x1164 <__floatsisf>
     5f4:	4b 01       	movw	r8, r22
     5f6:	5c 01       	movw	r10, r24
     5f8:	24 ef       	ldi	r18, 0xF4	; 244
     5fa:	3e ef       	ldi	r19, 0xFE	; 254
     5fc:	4e e8       	ldi	r20, 0x8E	; 142
     5fe:	5c e3       	ldi	r21, 0x3C	; 60
     600:	c7 01       	movw	r24, r14
     602:	b6 01       	movw	r22, r12
     604:	b4 d6       	rcall	.+3432   	; 0x136e <__mulsf3>
     606:	9b 01       	movw	r18, r22
     608:	ac 01       	movw	r20, r24
     60a:	c5 01       	movw	r24, r10
     60c:	b4 01       	movw	r22, r8
     60e:	af d6       	rcall	.+3422   	; 0x136e <__mulsf3>
     610:	11 d7       	rcall	.+3618   	; 0x1434 <sin>
     612:	6b 01       	movw	r12, r22
     614:	7c 01       	movw	r14, r24
     616:	9b 01       	movw	r18, r22
     618:	ac 01       	movw	r20, r24
     61a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     61c:	78 a1       	ldd	r23, Y+32	; 0x20
     61e:	89 a1       	ldd	r24, Y+33	; 0x21
     620:	9a a1       	ldd	r25, Y+34	; 0x22
			angle_roll -= angle_pitch * sin(gyro_z * pop);               //If the IMU has yawed transfer the pitch angle to the roll angel
     622:	a5 d6       	rcall	.+3402   	; 0x136e <__mulsf3>
     624:	9b 01       	movw	r18, r22
     626:	ac 01       	movw	r20, r24
     628:	6b a1       	ldd	r22, Y+35	; 0x23
     62a:	7c a1       	ldd	r23, Y+36	; 0x24
     62c:	8d a1       	ldd	r24, Y+37	; 0x25
     62e:	9e a1       	ldd	r25, Y+38	; 0x26
     630:	7f d4       	rcall	.+2302   	; 0xf30 <__addsf3>
     632:	6b a3       	std	Y+35, r22	; 0x23
     634:	7c a3       	std	Y+36, r23	; 0x24
     636:	8d a3       	std	Y+37, r24	; 0x25
     638:	9e a3       	std	Y+38, r25	; 0x26
     63a:	9b 01       	movw	r18, r22
     63c:	ac 01       	movw	r20, r24
     63e:	c7 01       	movw	r24, r14
     640:	b6 01       	movw	r22, r12
			
			double temporar_accel_x=accel_x/100;
     642:	95 d6       	rcall	.+3370   	; 0x136e <__mulsf3>
     644:	9b 01       	movw	r18, r22
     646:	ac 01       	movw	r20, r24
     648:	6f 8d       	ldd	r22, Y+31	; 0x1f
     64a:	78 a1       	ldd	r23, Y+32	; 0x20
     64c:	89 a1       	ldd	r24, Y+33	; 0x21
     64e:	9a a1       	ldd	r25, Y+34	; 0x22
     650:	6e d4       	rcall	.+2268   	; 0xf2e <__subsf3>
     652:	6f 8f       	std	Y+31, r22	; 0x1f
     654:	78 a3       	std	Y+32, r23	; 0x20
     656:	89 a3       	std	Y+33, r24	; 0x21
     658:	9a a3       	std	Y+34, r25	; 0x22
     65a:	0f 81       	ldd	r16, Y+7	; 0x07
			double temporar_accel_y=accel_y/100;
     65c:	18 85       	ldd	r17, Y+8	; 0x08
     65e:	c8 01       	movw	r24, r16
     660:	64 e6       	ldi	r22, 0x64	; 100
     662:	70 e0       	ldi	r23, 0x00	; 0
     664:	7d d7       	rcall	.+3834   	; 0x1560 <__divmodhi4>
     666:	07 2e       	mov	r0, r23
     668:	00 0c       	add	r0, r0
     66a:	88 0b       	sbc	r24, r24
     66c:	99 0b       	sbc	r25, r25
     66e:	7a d5       	rcall	.+2804   	; 0x1164 <__floatsisf>
     670:	4b 01       	movw	r8, r22
     672:	5c 01       	movw	r10, r24
     674:	89 85       	ldd	r24, Y+9	; 0x09
     676:	9a 85       	ldd	r25, Y+10	; 0x0a
			double temporar_accel_z=accel_z/100;
     678:	64 e6       	ldi	r22, 0x64	; 100
     67a:	70 e0       	ldi	r23, 0x00	; 0
     67c:	71 d7       	rcall	.+3810   	; 0x1560 <__divmodhi4>
     67e:	07 2e       	mov	r0, r23
     680:	00 0c       	add	r0, r0
     682:	88 0b       	sbc	r24, r24
     684:	99 0b       	sbc	r25, r25
     686:	6e d5       	rcall	.+2780   	; 0x1164 <__floatsisf>
     688:	6f a3       	std	Y+39, r22	; 0x27
     68a:	78 a7       	std	Y+40, r23	; 0x28
     68c:	89 a7       	std	Y+41, r24	; 0x29
     68e:	9a a7       	std	Y+42, r25	; 0x2a
     690:	8b 85       	ldd	r24, Y+11	; 0x0b
			
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
     692:	9c 85       	ldd	r25, Y+12	; 0x0c
     694:	64 e6       	ldi	r22, 0x64	; 100
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	63 d7       	rcall	.+3782   	; 0x1560 <__divmodhi4>
     69a:	07 2e       	mov	r0, r23
     69c:	00 0c       	add	r0, r0
     69e:	88 0b       	sbc	r24, r24
     6a0:	99 0b       	sbc	r25, r25
     6a2:	60 d5       	rcall	.+2752   	; 0x1164 <__floatsisf>
     6a4:	6b 01       	movw	r12, r22
     6a6:	7c 01       	movw	r14, r24
     6a8:	a5 01       	movw	r20, r10
     6aa:	94 01       	movw	r18, r8
     6ac:	c5 01       	movw	r24, r10
     6ae:	b4 01       	movw	r22, r8
     6b0:	5e d6       	rcall	.+3260   	; 0x136e <__mulsf3>
     6b2:	6b a7       	std	Y+43, r22	; 0x2b
     6b4:	7c a7       	std	Y+44, r23	; 0x2c
     6b6:	8d a7       	std	Y+45, r24	; 0x2d
     6b8:	9e a7       	std	Y+46, r25	; 0x2e
     6ba:	2f a1       	ldd	r18, Y+39	; 0x27
     6bc:	38 a5       	ldd	r19, Y+40	; 0x28
     6be:	49 a5       	ldd	r20, Y+41	; 0x29
     6c0:	5a a5       	ldd	r21, Y+42	; 0x2a
     6c2:	ca 01       	movw	r24, r20
     6c4:	b9 01       	movw	r22, r18
     6c6:	53 d6       	rcall	.+3238   	; 0x136e <__mulsf3>
     6c8:	9b 01       	movw	r18, r22
     6ca:	ac 01       	movw	r20, r24
     6cc:	6b a5       	ldd	r22, Y+43	; 0x2b
     6ce:	7c a5       	ldd	r23, Y+44	; 0x2c
     6d0:	8d a5       	ldd	r24, Y+45	; 0x2d
     6d2:	9e a5       	ldd	r25, Y+46	; 0x2e
     6d4:	2d d4       	rcall	.+2138   	; 0xf30 <__addsf3>
     6d6:	6b a7       	std	Y+43, r22	; 0x2b
     6d8:	7c a7       	std	Y+44, r23	; 0x2c
     6da:	8d a7       	std	Y+45, r24	; 0x2d
     6dc:	9e a7       	std	Y+46, r25	; 0x2e
     6de:	a5 01       	movw	r20, r10
     6e0:	94 01       	movw	r18, r8
     6e2:	c5 01       	movw	r24, r10
     6e4:	b4 01       	movw	r22, r8
     6e6:	43 d6       	rcall	.+3206   	; 0x136e <__mulsf3>
     6e8:	4b 01       	movw	r8, r22
     6ea:	5c 01       	movw	r10, r24
     6ec:	2f a1       	ldd	r18, Y+39	; 0x27
     6ee:	38 a5       	ldd	r19, Y+40	; 0x28
     6f0:	49 a5       	ldd	r20, Y+41	; 0x29
     6f2:	5a a5       	ldd	r21, Y+42	; 0x2a
     6f4:	ca 01       	movw	r24, r20
     6f6:	b9 01       	movw	r22, r18
     6f8:	3a d6       	rcall	.+3188   	; 0x136e <__mulsf3>
     6fa:	9b 01       	movw	r18, r22
     6fc:	ac 01       	movw	r20, r24
     6fe:	c5 01       	movw	r24, r10
					//57.296 = 1 / (3.142 / 180) The Arduino asin function is in radians
			acc_total_vector*=100;
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     700:	b4 01       	movw	r22, r8
     702:	16 d4       	rcall	.+2092   	; 0xf30 <__addsf3>
     704:	4b 01       	movw	r8, r22
     706:	5c 01       	movw	r10, r24
     708:	a7 01       	movw	r20, r14
     70a:	96 01       	movw	r18, r12
     70c:	c7 01       	movw	r24, r14
     70e:	b6 01       	movw	r22, r12
     710:	2e d6       	rcall	.+3164   	; 0x136e <__mulsf3>
     712:	9b 01       	movw	r18, r22
     714:	ac 01       	movw	r20, r24
     716:	c5 01       	movw	r24, r10
     718:	b4 01       	movw	r22, r8
     71a:	0a d4       	rcall	.+2068   	; 0xf30 <__addsf3>
     71c:	95 d6       	rcall	.+3370   	; 0x1448 <sqrt>
     71e:	6b 01       	movw	r12, r22
     720:	7c 01       	movw	r14, r24
     722:	b8 01       	movw	r22, r16
     724:	11 0f       	add	r17, r17
     726:	88 0b       	sbc	r24, r24
     728:	99 0b       	sbc	r25, r25
     72a:	1c d5       	rcall	.+2616   	; 0x1164 <__floatsisf>
					
			uint16_t reg=angle_pitch;
     72c:	4b 01       	movw	r8, r22
     72e:	5c 01       	movw	r10, r24
     730:	20 e0       	ldi	r18, 0x00	; 0
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	48 ec       	ldi	r20, 0xC8	; 200
     736:	52 e4       	ldi	r21, 0x42	; 66
     738:	c7 01       	movw	r24, r14
			printf(" ");
     73a:	b6 01       	movw	r22, r12
     73c:	18 d6       	rcall	.+3120   	; 0x136e <__mulsf3>
     73e:	9b 01       	movw	r18, r22
			printf("gyroX_angle= ");
     740:	ac 01       	movw	r20, r24
     742:	c5 01       	movw	r24, r10
     744:	b4 01       	movw	r22, r8
     746:	73 d4       	rcall	.+2278   	; 0x102e <__divsf3>
			print16(&reg);
     748:	57 d4       	rcall	.+2222   	; 0xff8 <asin>
     74a:	6b 01       	movw	r12, r22
			reg=angle_roll;
     74c:	7c 01       	movw	r14, r24
     74e:	6b a1       	ldd	r22, Y+35	; 0x23
     750:	7c a1       	ldd	r23, Y+36	; 0x24
     752:	8d a1       	ldd	r24, Y+37	; 0x25
     754:	9e a1       	ldd	r25, Y+38	; 0x26
     756:	d8 d4       	rcall	.+2480   	; 0x1108 <__fixunssfsi>
     758:	7e 8f       	std	Y+30, r23	; 0x1e
			printf(" ");
     75a:	6d 8f       	std	Y+29, r22	; 0x1d
     75c:	80 e2       	ldi	r24, 0x20	; 32
     75e:	90 e0       	ldi	r25, 0x00	; 0
			printf("gyroY_angle= ");
     760:	e4 d7       	rcall	.+4040   	; 0x172a <putchar>
     762:	89 e7       	ldi	r24, 0x79	; 121
     764:	93 e0       	ldi	r25, 0x03	; 3
     766:	9f 93       	push	r25
			print16(&reg);
     768:	8f 93       	push	r24
     76a:	cc d7       	rcall	.+3992   	; 0x1704 <printf>
     76c:	ce 01       	movw	r24, r28
     76e:	4d 96       	adiw	r24, 0x1d	; 29
			
			double xff=angle_roll_acc;
			double final_angleY=(angle_roll*0.996)+(xff*0.004);
     770:	3d de       	rcall	.-902    	; 0x3ec <print16>
     772:	6f 8d       	ldd	r22, Y+31	; 0x1f
     774:	78 a1       	ldd	r23, Y+32	; 0x20
     776:	89 a1       	ldd	r24, Y+33	; 0x21
     778:	9a a1       	ldd	r25, Y+34	; 0x22
     77a:	c6 d4       	rcall	.+2444   	; 0x1108 <__fixunssfsi>
     77c:	7e 8f       	std	Y+30, r23	; 0x1e
     77e:	6d 8f       	std	Y+29, r22	; 0x1d
     780:	80 e2       	ldi	r24, 0x20	; 32
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	d2 d7       	rcall	.+4004   	; 0x172a <putchar>
     786:	87 e8       	ldi	r24, 0x87	; 135
     788:	93 e0       	ldi	r25, 0x03	; 3
     78a:	9f 93       	push	r25
     78c:	8f 93       	push	r24
     78e:	ba d7       	rcall	.+3956   	; 0x1704 <printf>
     790:	ce 01       	movw	r24, r28
     792:	4d 96       	adiw	r24, 0x1d	; 29
     794:	2b de       	rcall	.-938    	; 0x3ec <print16>
     796:	2b e1       	ldi	r18, 0x1B	; 27
     798:	3f e2       	ldi	r19, 0x2F	; 47
     79a:	45 e6       	ldi	r20, 0x65	; 101
     79c:	52 ec       	ldi	r21, 0xC2	; 194
     79e:	c7 01       	movw	r24, r14
     7a0:	b6 01       	movw	r22, r12
     7a2:	e5 d5       	rcall	.+3018   	; 0x136e <__mulsf3>
     7a4:	2f e6       	ldi	r18, 0x6F	; 111
     7a6:	32 e1       	ldi	r19, 0x12	; 18
     7a8:	43 e8       	ldi	r20, 0x83	; 131
     7aa:	5b e3       	ldi	r21, 0x3B	; 59
     7ac:	e0 d5       	rcall	.+3008   	; 0x136e <__mulsf3>
     7ae:	6b 01       	movw	r12, r22
			reg=final_angleY;
     7b0:	7c 01       	movw	r14, r24
     7b2:	2b ed       	ldi	r18, 0xDB	; 219
     7b4:	39 ef       	ldi	r19, 0xF9	; 249
     7b6:	4e e7       	ldi	r20, 0x7E	; 126
			printf(" ");	
     7b8:	5f e3       	ldi	r21, 0x3F	; 63
     7ba:	6f 8d       	ldd	r22, Y+31	; 0x1f
     7bc:	78 a1       	ldd	r23, Y+32	; 0x20
     7be:	89 a1       	ldd	r24, Y+33	; 0x21
			printf("final_angleY= ");
     7c0:	9a a1       	ldd	r25, Y+34	; 0x22
     7c2:	d5 d5       	rcall	.+2986   	; 0x136e <__mulsf3>
     7c4:	9b 01       	movw	r18, r22
     7c6:	ac 01       	movw	r20, r24
     7c8:	c7 01       	movw	r24, r14
			print16(&reg);
     7ca:	b6 01       	movw	r22, r12
     7cc:	b1 d3       	rcall	.+1890   	; 0xf30 <__addsf3>
     7ce:	6b 01       	movw	r12, r22
     7d0:	7c 01       	movw	r14, r24
						
			#ifdef DRV8313
				uint16_t reg_print=final_angleY;
				int absoulute_y=abs(final_angleY);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     7d2:	9a d4       	rcall	.+2356   	; 0x1108 <__fixunssfsi>
     7d4:	7e 8f       	std	Y+30, r23	; 0x1e
     7d6:	6d 8f       	std	Y+29, r22	; 0x1d
     7d8:	80 e2       	ldi	r24, 0x20	; 32
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	a6 d7       	rcall	.+3916   	; 0x172a <putchar>
     7de:	85 e9       	ldi	r24, 0x95	; 149
     7e0:	93 e0       	ldi	r25, 0x03	; 3
     7e2:	9f 93       	push	r25
     7e4:	8f 93       	push	r24
     7e6:	8e d7       	rcall	.+3868   	; 0x1704 <printf>
     7e8:	ce 01       	movw	r24, r28
     7ea:	4d 96       	adiw	r24, 0x1d	; 29
     7ec:	ff dd       	rcall	.-1026   	; 0x3ec <print16>
     7ee:	c7 01       	movw	r24, r14
     7f0:	b6 01       	movw	r22, r12
     7f2:	85 d4       	rcall	.+2314   	; 0x10fe <__fixsfsi>
     7f4:	fb 01       	movw	r30, r22
     7f6:	ff 23       	and	r31, r31
     7f8:	24 f4       	brge	.+8      	; 0x802 <main+0x3c8>
     7fa:	ee 27       	eor	r30, r30
				if (local_motor_delay>2000)
     7fc:	ff 27       	eor	r31, r31
     7fe:	e6 1b       	sub	r30, r22
     800:	f7 0b       	sbc	r31, r23
     802:	44 ef       	ldi	r20, 0xF4	; 244
     804:	51 e0       	ldi	r21, 0x01	; 1
     806:	e4 9f       	mul	r30, r20
     808:	90 01       	movw	r18, r0
     80a:	e5 9f       	mul	r30, r21
     80c:	30 0d       	add	r19, r0
				{
					pwm_delay=local_motor_delay;
     80e:	f4 9f       	mul	r31, r20
     810:	30 0d       	add	r19, r0
     812:	11 24       	eor	r1, r1
				}
				uint16_t reg_ = local_motor_delay;
     814:	8f ed       	ldi	r24, 0xDF	; 223
				printf("  ");
     816:	9f e7       	ldi	r25, 0x7F	; 127
     818:	82 1b       	sub	r24, r18
     81a:	93 0b       	sbc	r25, r19
     81c:	0f 90       	pop	r0
     81e:	0f 90       	pop	r0
     820:	0f 90       	pop	r0
				printf("ocr= ");
     822:	0f 90       	pop	r0
     824:	0f 90       	pop	r0
     826:	0f 90       	pop	r0
     828:	81 3d       	cpi	r24, 0xD1	; 209
     82a:	37 e0       	ldi	r19, 0x07	; 7
				print16(&reg_);
     82c:	93 07       	cpc	r25, r19
     82e:	20 f0       	brcs	.+8      	; 0x838 <main+0x3fe>
     830:	90 93 76 03 	sts	0x0376, r25	; 0x800376 <pwm_delay+0x1>
				if (final_angleY>=-0.8 && final_angleY<=0.8  || final_angleY >90)
     834:	80 93 75 03 	sts	0x0375, r24	; 0x800375 <pwm_delay>
     838:	9c 8f       	std	Y+28, r25	; 0x1c
     83a:	8b 8f       	std	Y+27, r24	; 0x1b
     83c:	84 ea       	ldi	r24, 0xA4	; 164
     83e:	93 e0       	ldi	r25, 0x03	; 3
     840:	9f 93       	push	r25
     842:	8f 93       	push	r24
     844:	5f d7       	rcall	.+3774   	; 0x1704 <printf>
     846:	87 ea       	ldi	r24, 0xA7	; 167
     848:	93 e0       	ldi	r25, 0x03	; 3
     84a:	9f 93       	push	r25
     84c:	8f 93       	push	r24
     84e:	5a d7       	rcall	.+3764   	; 0x1704 <printf>
     850:	ce 01       	movw	r24, r28
     852:	4b 96       	adiw	r24, 0x1b	; 27
     854:	cb dd       	rcall	.-1130   	; 0x3ec <print16>
     856:	0f 90       	pop	r0
     858:	0f 90       	pop	r0
     85a:	0f 90       	pop	r0
     85c:	0f 90       	pop	r0
     85e:	2d ec       	ldi	r18, 0xCD	; 205
     860:	3c ec       	ldi	r19, 0xCC	; 204
     862:	4c e4       	ldi	r20, 0x4C	; 76
     864:	5f eb       	ldi	r21, 0xBF	; 191
     866:	c7 01       	movw	r24, r14
     868:	b6 01       	movw	r22, r12
     86a:	7d d5       	rcall	.+2810   	; 0x1366 <__gesf2>
     86c:	88 23       	and	r24, r24
     86e:	4c f0       	brlt	.+18     	; 0x882 <main+0x448>
     870:	2d ec       	ldi	r18, 0xCD	; 205
				{
					incr=0;
     872:	3c ec       	ldi	r19, 0xCC	; 204
     874:	4c e4       	ldi	r20, 0x4C	; 76
					printf("\n");	
     876:	5f e3       	ldi	r21, 0x3F	; 63
     878:	c7 01       	movw	r24, r14
     87a:	b6 01       	movw	r22, r12
     87c:	d4 d3       	rcall	.+1960   	; 0x1026 <__cmpsf2>
				}
				else 
					if (final_angleY>0.8)
     87e:	18 16       	cp	r1, r24
     880:	4c f4       	brge	.+18     	; 0x894 <main+0x45a>
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	44 eb       	ldi	r20, 0xB4	; 180
     888:	52 e4       	ldi	r21, 0x42	; 66
     88a:	c7 01       	movw	r24, r14
     88c:	b6 01       	movw	r22, r12
     88e:	6b d5       	rcall	.+2774   	; 0x1366 <__gesf2>
     890:	18 16       	cp	r1, r24
					{
						cli();
     892:	44 f4       	brge	.+16     	; 0x8a4 <main+0x46a>
						incr=1;
     894:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <incr+0x1>
     898:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <incr>
     89c:	8a e0       	ldi	r24, 0x0A	; 10
     89e:	90 e0       	ldi	r25, 0x00	; 0
						printf(" ");
     8a0:	44 d7       	rcall	.+3720   	; 0x172a <putchar>
     8a2:	29 ce       	rjmp	.-942    	; 0x4f6 <main+0xbc>
     8a4:	2d ec       	ldi	r18, 0xCD	; 205
     8a6:	3c ec       	ldi	r19, 0xCC	; 204
						uint16_t val=pwmSin[U_step];
     8a8:	4c e4       	ldi	r20, 0x4C	; 76
     8aa:	5f e3       	ldi	r21, 0x3F	; 63
     8ac:	c7 01       	movw	r24, r14
     8ae:	b6 01       	movw	r22, r12
     8b0:	5a d5       	rcall	.+2740   	; 0x1366 <__gesf2>
     8b2:	18 16       	cp	r1, r24
     8b4:	e4 f4       	brge	.+56     	; 0x8ee <main+0x4b4>
     8b6:	f8 94       	cli
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
						print16(&val);
     8bc:	90 93 78 03 	sts	0x0378, r25	; 0x800378 <incr+0x1>
     8c0:	80 93 77 03 	sts	0x0377, r24	; 0x800377 <incr>
						printf(" yes\n");
     8c4:	80 e2       	ldi	r24, 0x20	; 32
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	30 d7       	rcall	.+3680   	; 0x172a <putchar>
     8ca:	e0 91 fa 03 	lds	r30, 0x03FA	; 0x8003fa <__data_end>
						
						sei();
     8ce:	f0 91 fb 03 	lds	r31, 0x03FB	; 0x8003fb <__data_end+0x1>
					}
					else
					{	cli();
						incr=-1;
     8d2:	ea 5f       	subi	r30, 0xFA	; 250
     8d4:	fd 4f       	sbci	r31, 0xFD	; 253
     8d6:	80 81       	ld	r24, Z
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	9a 8f       	std	Y+26, r25	; 0x1a
     8dc:	89 8f       	std	Y+25, r24	; 0x19
						printf(" ");
     8de:	ce 01       	movw	r24, r28
     8e0:	49 96       	adiw	r24, 0x19	; 25
     8e2:	84 dd       	rcall	.-1272   	; 0x3ec <print16>
     8e4:	8d ea       	ldi	r24, 0xAD	; 173
						uint16_t val=pwmSin[U_step];
     8e6:	93 e0       	ldi	r25, 0x03	; 3
     8e8:	25 d7       	rcall	.+3658   	; 0x1734 <puts>
     8ea:	78 94       	sei
     8ec:	04 ce       	rjmp	.-1016   	; 0x4f6 <main+0xbc>
     8ee:	f8 94       	cli
     8f0:	8f ef       	ldi	r24, 0xFF	; 255
     8f2:	9f ef       	ldi	r25, 0xFF	; 255
     8f4:	90 93 78 03 	sts	0x0378, r25	; 0x800378 <incr+0x1>
     8f8:	80 93 77 03 	sts	0x0377, r24	; 0x800377 <incr>
						print16(&val);
     8fc:	80 e2       	ldi	r24, 0x20	; 32
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	14 d7       	rcall	.+3624   	; 0x172a <putchar>
						printf(" no\n");
     902:	e0 91 fa 03 	lds	r30, 0x03FA	; 0x8003fa <__data_end>
     906:	f0 91 fb 03 	lds	r31, 0x03FB	; 0x8003fb <__data_end+0x1>
						sei();
     90a:	ea 5f       	subi	r30, 0xFA	; 250
			//	 set_gyro_angles = true;                                            //Set the IMU started flag
			//}
			
			#endif //PRINT_RAW_DATA			
		#endif //GYRO
	}
     90c:	fd 4f       	sbci	r31, 0xFD	; 253
     90e:	80 81       	ld	r24, Z
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	9a 8f       	std	Y+26, r25	; 0x1a
     914:	89 8f       	std	Y+25, r24	; 0x19
     916:	ce 01       	movw	r24, r28
     918:	49 96       	adiw	r24, 0x19	; 25
     91a:	68 dd       	rcall	.-1328   	; 0x3ec <print16>
     91c:	82 eb       	ldi	r24, 0xB2	; 178
     91e:	93 e0       	ldi	r25, 0x03	; 3
     920:	09 d7       	rcall	.+3602   	; 0x1734 <puts>
     922:	78 94       	sei
     924:	e8 cd       	rjmp	.-1072   	; 0x4f6 <main+0xbc>

00000926 <print16ln>:
}

void print16ln(int16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     926:	0f 93       	push	r16
     928:	1f 93       	push	r17
     92a:	cf 93       	push	r28
     92c:	df 93       	push	r29
     92e:	cd b7       	in	r28, 0x3d	; 61
     930:	de b7       	in	r29, 0x3e	; 62
     932:	2a 97       	sbiw	r28, 0x0a	; 10
     934:	0f b6       	in	r0, 0x3f	; 63
     936:	f8 94       	cli
     938:	de bf       	out	0x3e, r29	; 62
     93a:	0f be       	out	0x3f, r0	; 63
     93c:	cd bf       	out	0x3d, r28	; 61
     93e:	4a e0       	ldi	r20, 0x0A	; 10
     940:	8e 01       	movw	r16, r28
     942:	0f 5f       	subi	r16, 0xFF	; 255
     944:	1f 4f       	sbci	r17, 0xFF	; 255
     946:	b8 01       	movw	r22, r16
     948:	fc 01       	movw	r30, r24
     94a:	80 81       	ld	r24, Z
     94c:	91 81       	ldd	r25, Z+1	; 0x01
     94e:	6d d6       	rcall	.+3290   	; 0x162a <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     950:	1f 93       	push	r17
     952:	0f 93       	push	r16
	printf("\n");
     954:	d7 d6       	rcall	.+3502   	; 0x1704 <printf>
     956:	8a e0       	ldi	r24, 0x0A	; 10
     958:	90 e0       	ldi	r25, 0x00	; 0
}
     95a:	e7 d6       	rcall	.+3534   	; 0x172a <putchar>
     95c:	0f 90       	pop	r0
     95e:	0f 90       	pop	r0
     960:	2a 96       	adiw	r28, 0x0a	; 10
     962:	0f b6       	in	r0, 0x3f	; 63
     964:	f8 94       	cli
     966:	de bf       	out	0x3e, r29	; 62
     968:	0f be       	out	0x3f, r0	; 63
     96a:	cd bf       	out	0x3d, r28	; 61
     96c:	df 91       	pop	r29
     96e:	cf 91       	pop	r28
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	08 95       	ret

00000976 <mpu6050_readByte>:
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     976:	cf 93       	push	r28
     978:	c8 2f       	mov	r28, r24
     97a:	80 ed       	ldi	r24, 0xD0	; 208
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	19 d2       	rcall	.+1074   	; 0xdb2 <i2c_start>
     980:	8c 2f       	mov	r24, r28
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	6c d2       	rcall	.+1240   	; 0xe5e <i2c_write>
     986:	5b d2       	rcall	.+1206   	; 0xe3e <i2c_stop>
     988:	81 ed       	ldi	r24, 0xD1	; 209
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	12 d2       	rcall	.+1060   	; 0xdb2 <i2c_start>
     98e:	a2 d2       	rcall	.+1348   	; 0xed4 <i2c_readNak>
     990:	c8 2f       	mov	r28, r24
     992:	55 d2       	rcall	.+1194   	; 0xe3e <i2c_stop>
     994:	8c 2f       	mov	r24, r28
     996:	cf 91       	pop	r28
     998:	08 95       	ret

0000099a <mpu6050_read_gyroX>:
     99a:	cf 93       	push	r28
     99c:	df 93       	push	r29
     99e:	83 e4       	ldi	r24, 0x43	; 67
     9a0:	ea df       	rcall	.-44     	; 0x976 <mpu6050_readByte>
     9a2:	c8 2f       	mov	r28, r24
     9a4:	d0 e0       	ldi	r29, 0x00	; 0
     9a6:	dc 2f       	mov	r29, r28
     9a8:	cc 27       	eor	r28, r28
     9aa:	84 e4       	ldi	r24, 0x44	; 68
     9ac:	e4 df       	rcall	.-56     	; 0x976 <mpu6050_readByte>
     9ae:	9e 01       	movw	r18, r28
     9b0:	28 2b       	or	r18, r24
     9b2:	c9 01       	movw	r24, r18
     9b4:	df 91       	pop	r29
     9b6:	cf 91       	pop	r28
     9b8:	08 95       	ret

000009ba <mpu6050_read_gyroY>:
     9ba:	cf 93       	push	r28
     9bc:	df 93       	push	r29
     9be:	85 e4       	ldi	r24, 0x45	; 69
     9c0:	da df       	rcall	.-76     	; 0x976 <mpu6050_readByte>
     9c2:	c8 2f       	mov	r28, r24
     9c4:	d0 e0       	ldi	r29, 0x00	; 0
     9c6:	dc 2f       	mov	r29, r28
     9c8:	cc 27       	eor	r28, r28
     9ca:	86 e4       	ldi	r24, 0x46	; 70
     9cc:	d4 df       	rcall	.-88     	; 0x976 <mpu6050_readByte>
     9ce:	9e 01       	movw	r18, r28
     9d0:	28 2b       	or	r18, r24
     9d2:	c9 01       	movw	r24, r18
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	08 95       	ret

000009da <mpu6050_read_gyroZ>:
     9da:	cf 93       	push	r28
     9dc:	df 93       	push	r29
     9de:	87 e4       	ldi	r24, 0x47	; 71
     9e0:	ca df       	rcall	.-108    	; 0x976 <mpu6050_readByte>
     9e2:	c8 2f       	mov	r28, r24
     9e4:	d0 e0       	ldi	r29, 0x00	; 0
     9e6:	dc 2f       	mov	r29, r28
     9e8:	cc 27       	eor	r28, r28
     9ea:	88 e4       	ldi	r24, 0x48	; 72
     9ec:	c4 df       	rcall	.-120    	; 0x976 <mpu6050_readByte>
     9ee:	9e 01       	movw	r18, r28
     9f0:	28 2b       	or	r18, r24
     9f2:	c9 01       	movw	r24, r18
     9f4:	df 91       	pop	r29
     9f6:	cf 91       	pop	r28
     9f8:	08 95       	ret

000009fa <mpu6050_calibrate_gyro>:
     9fa:	cf 92       	push	r12
     9fc:	df 92       	push	r13
     9fe:	ef 92       	push	r14
     a00:	ff 92       	push	r15
     a02:	0f 93       	push	r16
     a04:	1f 93       	push	r17
     a06:	cf 93       	push	r28
     a08:	df 93       	push	r29
     a0a:	6c 01       	movw	r12, r24
     a0c:	7b 01       	movw	r14, r22
     a0e:	8a 01       	movw	r16, r20
     a10:	86 eb       	ldi	r24, 0xB6	; 182
     a12:	93 e0       	ldi	r25, 0x03	; 3
     a14:	8f d6       	rcall	.+3358   	; 0x1734 <puts>
     a16:	c8 ec       	ldi	r28, 0xC8	; 200
     a18:	d0 e0       	ldi	r29, 0x00	; 0
     a1a:	bf df       	rcall	.-130    	; 0x99a <mpu6050_read_gyroX>
     a1c:	f6 01       	movw	r30, r12
     a1e:	40 81       	ld	r20, Z
     a20:	51 81       	ldd	r21, Z+1	; 0x01
     a22:	62 81       	ldd	r22, Z+2	; 0x02
     a24:	73 81       	ldd	r23, Z+3	; 0x03
     a26:	48 0f       	add	r20, r24
     a28:	59 1f       	adc	r21, r25
     a2a:	61 1d       	adc	r22, r1
     a2c:	71 1d       	adc	r23, r1
     a2e:	40 83       	st	Z, r20
     a30:	51 83       	std	Z+1, r21	; 0x01
     a32:	62 83       	std	Z+2, r22	; 0x02
     a34:	73 83       	std	Z+3, r23	; 0x03
     a36:	c1 df       	rcall	.-126    	; 0x9ba <mpu6050_read_gyroY>
     a38:	f7 01       	movw	r30, r14
     a3a:	40 81       	ld	r20, Z
     a3c:	51 81       	ldd	r21, Z+1	; 0x01
     a3e:	62 81       	ldd	r22, Z+2	; 0x02
     a40:	73 81       	ldd	r23, Z+3	; 0x03
     a42:	48 0f       	add	r20, r24
     a44:	59 1f       	adc	r21, r25
     a46:	61 1d       	adc	r22, r1
     a48:	71 1d       	adc	r23, r1
     a4a:	40 83       	st	Z, r20
     a4c:	51 83       	std	Z+1, r21	; 0x01
     a4e:	62 83       	std	Z+2, r22	; 0x02
     a50:	73 83       	std	Z+3, r23	; 0x03
     a52:	c3 df       	rcall	.-122    	; 0x9da <mpu6050_read_gyroZ>
     a54:	f8 01       	movw	r30, r16
     a56:	40 81       	ld	r20, Z
     a58:	51 81       	ldd	r21, Z+1	; 0x01
     a5a:	62 81       	ldd	r22, Z+2	; 0x02
     a5c:	73 81       	ldd	r23, Z+3	; 0x03
     a5e:	48 0f       	add	r20, r24
     a60:	59 1f       	adc	r21, r25
     a62:	61 1d       	adc	r22, r1
     a64:	71 1d       	adc	r23, r1
     a66:	40 83       	st	Z, r20
     a68:	51 83       	std	Z+1, r21	; 0x01
     a6a:	62 83       	std	Z+2, r22	; 0x02
     a6c:	73 83       	std	Z+3, r23	; 0x03
     a6e:	8f e3       	ldi	r24, 0x3F	; 63
     a70:	9f e1       	ldi	r25, 0x1F	; 31
     a72:	01 97       	sbiw	r24, 0x01	; 1
     a74:	f1 f7       	brne	.-4      	; 0xa72 <mpu6050_calibrate_gyro+0x78>
     a76:	00 c0       	rjmp	.+0      	; 0xa78 <mpu6050_calibrate_gyro+0x7e>
     a78:	00 00       	nop
     a7a:	21 97       	sbiw	r28, 0x01	; 1
     a7c:	71 f6       	brne	.-100    	; 0xa1a <mpu6050_calibrate_gyro+0x20>
     a7e:	f6 01       	movw	r30, r12
     a80:	60 81       	ld	r22, Z
     a82:	71 81       	ldd	r23, Z+1	; 0x01
     a84:	82 81       	ldd	r24, Z+2	; 0x02
     a86:	93 81       	ldd	r25, Z+3	; 0x03
     a88:	99 23       	and	r25, r25
     a8a:	ac f4       	brge	.+42     	; 0xab6 <mpu6050_calibrate_gyro+0xbc>
     a8c:	9b 01       	movw	r18, r22
     a8e:	77 23       	and	r23, r23
     a90:	24 f4       	brge	.+8      	; 0xa9a <mpu6050_calibrate_gyro+0xa0>
     a92:	22 27       	eor	r18, r18
     a94:	33 27       	eor	r19, r19
     a96:	26 1b       	sub	r18, r22
     a98:	37 0b       	sbc	r19, r23
     a9a:	c9 01       	movw	r24, r18
     a9c:	68 ec       	ldi	r22, 0xC8	; 200
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	5f d5       	rcall	.+2750   	; 0x1560 <__divmodhi4>
     aa2:	cb 01       	movw	r24, r22
     aa4:	77 0f       	add	r23, r23
     aa6:	aa 0b       	sbc	r26, r26
     aa8:	bb 0b       	sbc	r27, r27
     aaa:	f6 01       	movw	r30, r12
     aac:	80 83       	st	Z, r24
     aae:	91 83       	std	Z+1, r25	; 0x01
     ab0:	a2 83       	std	Z+2, r26	; 0x02
     ab2:	b3 83       	std	Z+3, r27	; 0x03
     ab4:	0a c0       	rjmp	.+20     	; 0xaca <mpu6050_calibrate_gyro+0xd0>
     ab6:	28 ec       	ldi	r18, 0xC8	; 200
     ab8:	30 e0       	ldi	r19, 0x00	; 0
     aba:	40 e0       	ldi	r20, 0x00	; 0
     abc:	50 e0       	ldi	r21, 0x00	; 0
     abe:	63 d5       	rcall	.+2758   	; 0x1586 <__divmodsi4>
     ac0:	f6 01       	movw	r30, r12
     ac2:	20 83       	st	Z, r18
     ac4:	31 83       	std	Z+1, r19	; 0x01
     ac6:	42 83       	std	Z+2, r20	; 0x02
     ac8:	53 83       	std	Z+3, r21	; 0x03
     aca:	f7 01       	movw	r30, r14
     acc:	60 81       	ld	r22, Z
     ace:	71 81       	ldd	r23, Z+1	; 0x01
     ad0:	82 81       	ldd	r24, Z+2	; 0x02
     ad2:	93 81       	ldd	r25, Z+3	; 0x03
     ad4:	99 23       	and	r25, r25
     ad6:	ac f4       	brge	.+42     	; 0xb02 <mpu6050_calibrate_gyro+0x108>
     ad8:	9b 01       	movw	r18, r22
     ada:	77 23       	and	r23, r23
     adc:	24 f4       	brge	.+8      	; 0xae6 <mpu6050_calibrate_gyro+0xec>
     ade:	22 27       	eor	r18, r18
     ae0:	33 27       	eor	r19, r19
     ae2:	26 1b       	sub	r18, r22
     ae4:	37 0b       	sbc	r19, r23
     ae6:	c9 01       	movw	r24, r18
     ae8:	68 ec       	ldi	r22, 0xC8	; 200
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	39 d5       	rcall	.+2674   	; 0x1560 <__divmodhi4>
     aee:	cb 01       	movw	r24, r22
     af0:	77 0f       	add	r23, r23
     af2:	aa 0b       	sbc	r26, r26
     af4:	bb 0b       	sbc	r27, r27
     af6:	f7 01       	movw	r30, r14
     af8:	80 83       	st	Z, r24
     afa:	91 83       	std	Z+1, r25	; 0x01
     afc:	a2 83       	std	Z+2, r26	; 0x02
     afe:	b3 83       	std	Z+3, r27	; 0x03
     b00:	0a c0       	rjmp	.+20     	; 0xb16 <mpu6050_calibrate_gyro+0x11c>
     b02:	28 ec       	ldi	r18, 0xC8	; 200
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 e0       	ldi	r20, 0x00	; 0
     b08:	50 e0       	ldi	r21, 0x00	; 0
     b0a:	3d d5       	rcall	.+2682   	; 0x1586 <__divmodsi4>
     b0c:	f7 01       	movw	r30, r14
     b0e:	20 83       	st	Z, r18
     b10:	31 83       	std	Z+1, r19	; 0x01
     b12:	42 83       	std	Z+2, r20	; 0x02
     b14:	53 83       	std	Z+3, r21	; 0x03
     b16:	f8 01       	movw	r30, r16
     b18:	60 81       	ld	r22, Z
     b1a:	71 81       	ldd	r23, Z+1	; 0x01
     b1c:	82 81       	ldd	r24, Z+2	; 0x02
     b1e:	93 81       	ldd	r25, Z+3	; 0x03
     b20:	99 23       	and	r25, r25
     b22:	ac f4       	brge	.+42     	; 0xb4e <mpu6050_calibrate_gyro+0x154>
     b24:	9b 01       	movw	r18, r22
     b26:	77 23       	and	r23, r23
     b28:	24 f4       	brge	.+8      	; 0xb32 <mpu6050_calibrate_gyro+0x138>
     b2a:	22 27       	eor	r18, r18
     b2c:	33 27       	eor	r19, r19
     b2e:	26 1b       	sub	r18, r22
     b30:	37 0b       	sbc	r19, r23
     b32:	c9 01       	movw	r24, r18
     b34:	68 ec       	ldi	r22, 0xC8	; 200
     b36:	70 e0       	ldi	r23, 0x00	; 0
     b38:	13 d5       	rcall	.+2598   	; 0x1560 <__divmodhi4>
     b3a:	cb 01       	movw	r24, r22
     b3c:	77 0f       	add	r23, r23
     b3e:	aa 0b       	sbc	r26, r26
     b40:	bb 0b       	sbc	r27, r27
     b42:	f8 01       	movw	r30, r16
     b44:	80 83       	st	Z, r24
     b46:	91 83       	std	Z+1, r25	; 0x01
     b48:	a2 83       	std	Z+2, r26	; 0x02
     b4a:	b3 83       	std	Z+3, r27	; 0x03
     b4c:	0a c0       	rjmp	.+20     	; 0xb62 <mpu6050_calibrate_gyro+0x168>
     b4e:	28 ec       	ldi	r18, 0xC8	; 200
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	17 d5       	rcall	.+2606   	; 0x1586 <__divmodsi4>
     b58:	f8 01       	movw	r30, r16
     b5a:	20 83       	st	Z, r18
     b5c:	31 83       	std	Z+1, r19	; 0x01
     b5e:	42 83       	std	Z+2, r20	; 0x02
     b60:	53 83       	std	Z+3, r21	; 0x03
     b62:	8c ec       	ldi	r24, 0xCC	; 204
     b64:	93 e0       	ldi	r25, 0x03	; 3
     b66:	9f 93       	push	r25
     b68:	8f 93       	push	r24
     b6a:	cc d5       	rcall	.+2968   	; 0x1704 <printf>
     b6c:	c6 01       	movw	r24, r12
     b6e:	3e dc       	rcall	.-1924   	; 0x3ec <print16>
     b70:	c4 ea       	ldi	r28, 0xA4	; 164
     b72:	d3 e0       	ldi	r29, 0x03	; 3
     b74:	df 93       	push	r29
     b76:	cf 93       	push	r28
     b78:	c5 d5       	rcall	.+2954   	; 0x1704 <printf>
     b7a:	c7 01       	movw	r24, r14
     b7c:	37 dc       	rcall	.-1938   	; 0x3ec <print16>
     b7e:	df 93       	push	r29
     b80:	cf 93       	push	r28
     b82:	c0 d5       	rcall	.+2944   	; 0x1704 <printf>
     b84:	c8 01       	movw	r24, r16
     b86:	cf de       	rcall	.-610    	; 0x926 <print16ln>
     b88:	ef ef       	ldi	r30, 0xFF	; 255
     b8a:	f3 ed       	ldi	r31, 0xD3	; 211
     b8c:	20 e3       	ldi	r18, 0x30	; 48
     b8e:	e1 50       	subi	r30, 0x01	; 1
     b90:	f0 40       	sbci	r31, 0x00	; 0
     b92:	20 40       	sbci	r18, 0x00	; 0
     b94:	e1 f7       	brne	.-8      	; 0xb8e <mpu6050_calibrate_gyro+0x194>
     b96:	00 c0       	rjmp	.+0      	; 0xb98 <mpu6050_calibrate_gyro+0x19e>
     b98:	00 00       	nop
     b9a:	0f 90       	pop	r0
     b9c:	0f 90       	pop	r0
     b9e:	0f 90       	pop	r0
     ba0:	0f 90       	pop	r0
     ba2:	0f 90       	pop	r0
     ba4:	0f 90       	pop	r0
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	1f 91       	pop	r17
     bac:	0f 91       	pop	r16
     bae:	ff 90       	pop	r15
     bb0:	ef 90       	pop	r14
     bb2:	df 90       	pop	r13
     bb4:	cf 90       	pop	r12
     bb6:	08 95       	ret

00000bb8 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	d8 2f       	mov	r29, r24
     bbe:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     bc0:	80 ed       	ldi	r24, 0xD0	; 208
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	f6 d0       	rcall	.+492    	; 0xdb2 <i2c_start>
	i2c_write(wereToWrite);
     bc6:	8d 2f       	mov	r24, r29
     bc8:	90 e0       	ldi	r25, 0x00	; 0
	i2c_write(byteToWrite);
     bca:	49 d1       	rcall	.+658    	; 0xe5e <i2c_write>
     bcc:	8c 2f       	mov	r24, r28
	i2c_stop();
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	46 d1       	rcall	.+652    	; 0xe5e <i2c_write>
}
     bd2:	35 d1       	rcall	.+618    	; 0xe3e <i2c_stop>
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	08 95       	ret

00000bda <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     bda:	af 92       	push	r10
     bdc:	bf 92       	push	r11
     bde:	cf 92       	push	r12
     be0:	df 92       	push	r13
     be2:	ff 92       	push	r15
     be4:	0f 93       	push	r16
     be6:	1f 93       	push	r17
     be8:	cf 93       	push	r28
     bea:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     bec:	66 23       	and	r22, r22
     bee:	a1 f1       	breq	.+104    	; 0xc58 <mpu6050_readBytes+0x7e>
     bf0:	c5 2f       	mov	r28, r21
     bf2:	d4 2f       	mov	r29, r20
     bf4:	f6 2e       	mov	r15, r22
     bf6:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     bf8:	80 ed       	ldi	r24, 0xD0	; 208
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	da d0       	rcall	.+436    	; 0xdb2 <i2c_start>
		i2c_write(regAddr);
     bfe:	81 2f       	mov	r24, r17
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	2d d1       	rcall	.+602    	; 0xe5e <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c04:	85 e3       	ldi	r24, 0x35	; 53
     c06:	8a 95       	dec	r24
     c08:	f1 f7       	brne	.-4      	; 0xc06 <mpu6050_readBytes+0x2c>
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     c0a:	00 00       	nop
     c0c:	81 ed       	ldi	r24, 0xD1	; 209
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	d0 d0       	rcall	.+416    	; 0xdb2 <i2c_start>
     c12:	0d 2f       	mov	r16, r29
     c14:	1c 2f       	mov	r17, r28
     c16:	cc 24       	eor	r12, r12
     c18:	ca 94       	dec	r12
     c1a:	cf 0c       	add	r12, r15
     c1c:	d1 2c       	mov	r13, r1
     c1e:	ef ef       	ldi	r30, 0xFF	; 255
     c20:	ce 1a       	sub	r12, r30
     c22:	de 0a       	sbc	r13, r30
     c24:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     c26:	d0 e0       	ldi	r29, 0x00	; 0
     c28:	af 2c       	mov	r10, r15
     c2a:	b1 2c       	mov	r11, r1
     c2c:	f1 e0       	ldi	r31, 0x01	; 1
     c2e:	af 1a       	sub	r10, r31
     c30:	b1 08       	sbc	r11, r1
     c32:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     c34:	bd 06       	cpc	r11, r29
     c36:	21 f4       	brne	.+8      	; 0xc40 <mpu6050_readBytes+0x66>
     c38:	4d d1       	rcall	.+666    	; 0xed4 <i2c_readNak>
     c3a:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     c3c:	80 83       	st	Z, r24
     c3e:	03 c0       	rjmp	.+6      	; 0xc46 <mpu6050_readBytes+0x6c>
     c40:	2f d1       	rcall	.+606    	; 0xea0 <i2c_readAck>
     c42:	f8 01       	movw	r30, r16
     c44:	80 83       	st	Z, r24
     c46:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     c48:	0f 5f       	subi	r16, 0xFF	; 255
     c4a:	1f 4f       	sbci	r17, 0xFF	; 255
     c4c:	cc 15       	cp	r28, r12
     c4e:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     c50:	81 f7       	brne	.-32     	; 0xc32 <mpu6050_readBytes+0x58>
     c52:	cf 2d       	mov	r28, r15
     c54:	f4 d0       	rcall	.+488    	; 0xe3e <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     c56:	01 c0       	rjmp	.+2      	; 0xc5a <mpu6050_readBytes+0x80>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     c58:	c0 e0       	ldi	r28, 0x00	; 0
     c5a:	8c 2f       	mov	r24, r28
     c5c:	df 91       	pop	r29
     c5e:	cf 91       	pop	r28
     c60:	1f 91       	pop	r17
     c62:	0f 91       	pop	r16
     c64:	ff 90       	pop	r15
     c66:	df 90       	pop	r13
     c68:	cf 90       	pop	r12
     c6a:	bf 90       	pop	r11
     c6c:	af 90       	pop	r10
     c6e:	08 95       	ret

00000c70 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     c70:	6f 92       	push	r6
     c72:	7f 92       	push	r7
     c74:	8f 92       	push	r8
     c76:	9f 92       	push	r9
     c78:	af 92       	push	r10
     c7a:	bf 92       	push	r11
     c7c:	cf 92       	push	r12
     c7e:	df 92       	push	r13
     c80:	ef 92       	push	r14
     c82:	ff 92       	push	r15
     c84:	0f 93       	push	r16
     c86:	1f 93       	push	r17
     c88:	cf 93       	push	r28
     c8a:	df 93       	push	r29
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
     c90:	2e 97       	sbiw	r28, 0x0e	; 14
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	f8 94       	cli
     c96:	de bf       	out	0x3e, r29	; 62
     c98:	0f be       	out	0x3f, r0	; 63
     c9a:	cd bf       	out	0x3d, r28	; 61
     c9c:	4c 01       	movw	r8, r24
     c9e:	5b 01       	movw	r10, r22
     ca0:	6a 01       	movw	r12, r20
     ca2:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     ca4:	ae 01       	movw	r20, r28
     ca6:	4f 5f       	subi	r20, 0xFF	; 255
     ca8:	5f 4f       	sbci	r21, 0xFF	; 255
     caa:	6e e0       	ldi	r22, 0x0E	; 14
     cac:	8b e3       	ldi	r24, 0x3B	; 59
     cae:	95 df       	rcall	.-214    	; 0xbda <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     cb0:	89 81       	ldd	r24, Y+1	; 0x01
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	98 2f       	mov	r25, r24
     cb6:	88 27       	eor	r24, r24
     cb8:	2a 81       	ldd	r18, Y+2	; 0x02
     cba:	82 2b       	or	r24, r18
     cbc:	f4 01       	movw	r30, r8
     cbe:	91 83       	std	Z+1, r25	; 0x01
     cc0:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     cc2:	8b 81       	ldd	r24, Y+3	; 0x03
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	98 2f       	mov	r25, r24
     cc8:	88 27       	eor	r24, r24
     cca:	2c 81       	ldd	r18, Y+4	; 0x04
     ccc:	82 2b       	or	r24, r18
     cce:	f5 01       	movw	r30, r10
     cd0:	91 83       	std	Z+1, r25	; 0x01
     cd2:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     cd4:	8d 81       	ldd	r24, Y+5	; 0x05
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	98 2f       	mov	r25, r24
     cda:	88 27       	eor	r24, r24
     cdc:	2e 81       	ldd	r18, Y+6	; 0x06
     cde:	82 2b       	or	r24, r18
     ce0:	f6 01       	movw	r30, r12
     ce2:	91 83       	std	Z+1, r25	; 0x01
     ce4:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     ce6:	89 85       	ldd	r24, Y+9	; 0x09
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	98 2f       	mov	r25, r24
     cec:	88 27       	eor	r24, r24
     cee:	2a 85       	ldd	r18, Y+10	; 0x0a
     cf0:	82 2b       	or	r24, r18
     cf2:	f3 01       	movw	r30, r6
     cf4:	91 83       	std	Z+1, r25	; 0x01
     cf6:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     cf8:	8b 85       	ldd	r24, Y+11	; 0x0b
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	98 2f       	mov	r25, r24
     cfe:	88 27       	eor	r24, r24
     d00:	2c 85       	ldd	r18, Y+12	; 0x0c
     d02:	82 2b       	or	r24, r18
     d04:	f8 01       	movw	r30, r16
     d06:	91 83       	std	Z+1, r25	; 0x01
     d08:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     d0a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	98 2f       	mov	r25, r24
     d10:	88 27       	eor	r24, r24
     d12:	2e 85       	ldd	r18, Y+14	; 0x0e
     d14:	82 2b       	or	r24, r18
     d16:	f7 01       	movw	r30, r14
     d18:	91 83       	std	Z+1, r25	; 0x01
     d1a:	80 83       	st	Z, r24
     d1c:	2e 96       	adiw	r28, 0x0e	; 14
     d1e:	0f b6       	in	r0, 0x3f	; 63
     d20:	f8 94       	cli
     d22:	de bf       	out	0x3e, r29	; 62
     d24:	0f be       	out	0x3f, r0	; 63
     d26:	cd bf       	out	0x3d, r28	; 61
     d28:	df 91       	pop	r29
     d2a:	cf 91       	pop	r28
     d2c:	1f 91       	pop	r17
     d2e:	0f 91       	pop	r16
     d30:	ff 90       	pop	r15
     d32:	ef 90       	pop	r14
     d34:	df 90       	pop	r13
     d36:	cf 90       	pop	r12
     d38:	bf 90       	pop	r11
     d3a:	af 90       	pop	r10
     d3c:	9f 90       	pop	r9
     d3e:	8f 90       	pop	r8
     d40:	7f 90       	pop	r7
     d42:	6f 90       	pop	r6
     d44:	08 95       	ret

00000d46 <setup_timer4>:

#define clockCyclesPerMicrosecond () ( F_CPU / 1000000L )

/*-----------Timter 1-----------*/
void setup_timer4(void){
    sbi (TCCR4B, CS40);//prescakaer 256
     d46:	e1 ea       	ldi	r30, 0xA1	; 161
     d48:	f0 e0       	ldi	r31, 0x00	; 0
     d4a:	80 81       	ld	r24, Z
     d4c:	81 60       	ori	r24, 0x01	; 1
     d4e:	80 83       	st	Z, r24
    sbi (TCCR4A, WGM40);//8 bit phase correct PWM
     d50:	e0 ea       	ldi	r30, 0xA0	; 160
     d52:	f0 e0       	ldi	r31, 0x00	; 0
     d54:	80 81       	ld	r24, Z
     d56:	81 60       	ori	r24, 0x01	; 1
     d58:	80 83       	st	Z, r24
	
	//sbi (TCCR4A,COM4A0);
	sbi (TCCR4A,COM4A1);
     d5a:	80 81       	ld	r24, Z
     d5c:	80 68       	ori	r24, 0x80	; 128
     d5e:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4B0);
	sbi (TCCR4A,COM4B1);
     d60:	80 81       	ld	r24, Z
     d62:	80 62       	ori	r24, 0x20	; 32
     d64:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4C0);
	sbi (TCCR4A,COM4C1);
     d66:	80 81       	ld	r24, Z
     d68:	88 60       	ori	r24, 0x08	; 8
     d6a:	80 83       	st	Z, r24
     d6c:	08 95       	ret

00000d6e <setup_timer5>:
}


/*-----------Timter 5-----------*/
void setup_timer5(void){
	sbi (TCCR5B, CS50);//only this 8
     d6e:	e1 e2       	ldi	r30, 0x21	; 33
     d70:	f1 e0       	ldi	r31, 0x01	; 1
     d72:	80 81       	ld	r24, Z
     d74:	81 60       	ori	r24, 0x01	; 1
     d76:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR5B, WGM52);//OCR4A compare interrupt
     d78:	80 81       	ld	r24, Z
     d7a:	88 60       	ori	r24, 0x08	; 8
     d7c:	80 83       	st	Z, r24
     d7e:	08 95       	ret

00000d80 <Enable_timer5_compare_interrupt>:
	
}
void Enable_timer5_compare_interrupt(){
	sbi (TIMSK5, OCIE5A);
     d80:	e3 e7       	ldi	r30, 0x73	; 115
     d82:	f0 e0       	ldi	r31, 0x00	; 0
     d84:	80 81       	ld	r24, Z
     d86:	82 60       	ori	r24, 0x02	; 2
     d88:	80 83       	st	Z, r24
     d8a:	08 95       	ret

00000d8c <setup_timer0>:
}
/*-----------Timter 2-----------*/
void setup_timer0(void){
	sbi(TCCR0B,CS00);
     d8c:	85 b5       	in	r24, 0x25	; 37
     d8e:	81 60       	ori	r24, 0x01	; 1
     d90:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B,CS01);;//prescaler 64 , 250khz timer
     d92:	85 b5       	in	r24, 0x25	; 37
     d94:	82 60       	ori	r24, 0x02	; 2
     d96:	85 bd       	out	0x25, r24	; 37
     d98:	08 95       	ret

00000d9a <Enable_timer0_overflow_interrupt>:
}
void Enable_timer0_overflow_interrupt(){
	sbi(TIMSK0,TOIE0);
     d9a:	ee e6       	ldi	r30, 0x6E	; 110
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	81 60       	ori	r24, 0x01	; 1
     da2:	80 83       	st	Z, r24
     da4:	08 95       	ret

00000da6 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     da6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     daa:	8c e0       	ldi	r24, 0x0C	; 12
     dac:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     db0:	08 95       	ret

00000db2 <i2c_start>:
     db2:	94 ea       	ldi	r25, 0xA4	; 164
     db4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     db8:	4f ef       	ldi	r20, 0xFF	; 255
     dba:	50 e0       	ldi	r21, 0x00	; 0
     dbc:	60 e0       	ldi	r22, 0x00	; 0
     dbe:	70 e0       	ldi	r23, 0x00	; 0
     dc0:	ec eb       	ldi	r30, 0xBC	; 188
     dc2:	f0 e0       	ldi	r31, 0x00	; 0
     dc4:	90 81       	ld	r25, Z
     dc6:	99 23       	and	r25, r25
     dc8:	34 f0       	brlt	.+12     	; 0xdd6 <i2c_start+0x24>
     dca:	41 50       	subi	r20, 0x01	; 1
     dcc:	51 09       	sbc	r21, r1
     dce:	61 09       	sbc	r22, r1
     dd0:	71 09       	sbc	r23, r1
     dd2:	c0 f7       	brcc	.-16     	; 0xdc4 <i2c_start+0x12>
     dd4:	04 c0       	rjmp	.+8      	; 0xdde <i2c_start+0x2c>
     dd6:	45 2b       	or	r20, r21
     dd8:	46 2b       	or	r20, r22
     dda:	47 2b       	or	r20, r23
     ddc:	41 f1       	breq	.+80     	; 0xe2e <i2c_start+0x7c>
     dde:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     de2:	98 7f       	andi	r25, 0xF8	; 248
     de4:	98 30       	cpi	r25, 0x08	; 8
     de6:	11 f0       	breq	.+4      	; 0xdec <i2c_start+0x3a>
     de8:	90 31       	cpi	r25, 0x10	; 16
     dea:	19 f5       	brne	.+70     	; 0xe32 <i2c_start+0x80>
     dec:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     df0:	84 e8       	ldi	r24, 0x84	; 132
     df2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     df6:	8f ef       	ldi	r24, 0xFF	; 255
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	a0 e0       	ldi	r26, 0x00	; 0
     dfc:	b0 e0       	ldi	r27, 0x00	; 0
     dfe:	ec eb       	ldi	r30, 0xBC	; 188
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	20 81       	ld	r18, Z
     e04:	22 23       	and	r18, r18
     e06:	2c f0       	brlt	.+10     	; 0xe12 <i2c_start+0x60>
     e08:	01 97       	sbiw	r24, 0x01	; 1
     e0a:	a1 09       	sbc	r26, r1
     e0c:	b1 09       	sbc	r27, r1
     e0e:	c8 f7       	brcc	.-14     	; 0xe02 <i2c_start+0x50>
     e10:	04 c0       	rjmp	.+8      	; 0xe1a <i2c_start+0x68>
     e12:	89 2b       	or	r24, r25
     e14:	8a 2b       	or	r24, r26
     e16:	8b 2b       	or	r24, r27
     e18:	71 f0       	breq	.+28     	; 0xe36 <i2c_start+0x84>
     e1a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     e1e:	98 7f       	andi	r25, 0xF8	; 248
     e20:	98 31       	cpi	r25, 0x18	; 24
     e22:	59 f0       	breq	.+22     	; 0xe3a <i2c_start+0x88>
     e24:	81 e0       	ldi	r24, 0x01	; 1
     e26:	90 34       	cpi	r25, 0x40	; 64
     e28:	49 f4       	brne	.+18     	; 0xe3c <i2c_start+0x8a>
     e2a:	80 e0       	ldi	r24, 0x00	; 0
     e2c:	08 95       	ret
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	08 95       	ret
     e32:	81 e0       	ldi	r24, 0x01	; 1
     e34:	08 95       	ret
     e36:	81 e0       	ldi	r24, 0x01	; 1
     e38:	08 95       	ret
     e3a:	80 e0       	ldi	r24, 0x00	; 0
     e3c:	08 95       	ret

00000e3e <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     e3e:	84 e9       	ldi	r24, 0x94	; 148
     e40:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     e44:	80 e0       	ldi	r24, 0x00	; 0
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	ec eb       	ldi	r30, 0xBC	; 188
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	20 81       	ld	r18, Z
     e4e:	24 ff       	sbrs	r18, 4
     e50:	05 c0       	rjmp	.+10     	; 0xe5c <i2c_stop+0x1e>
     e52:	01 96       	adiw	r24, 0x01	; 1
     e54:	81 15       	cp	r24, r1
     e56:	21 e0       	ldi	r18, 0x01	; 1
     e58:	92 07       	cpc	r25, r18
     e5a:	c1 f7       	brne	.-16     	; 0xe4c <i2c_stop+0xe>
     e5c:	08 95       	ret

00000e5e <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     e5e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     e62:	84 e8       	ldi	r24, 0x84	; 132
     e64:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     e68:	8f ef       	ldi	r24, 0xFF	; 255
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	a0 e0       	ldi	r26, 0x00	; 0
     e6e:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     e70:	ec eb       	ldi	r30, 0xBC	; 188
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	20 81       	ld	r18, Z
     e76:	22 23       	and	r18, r18
     e78:	2c f0       	brlt	.+10     	; 0xe84 <i2c_write+0x26>
     e7a:	01 97       	sbiw	r24, 0x01	; 1
     e7c:	a1 09       	sbc	r26, r1
     e7e:	b1 09       	sbc	r27, r1
     e80:	c8 f7       	brcc	.-14     	; 0xe74 <i2c_write+0x16>
     e82:	04 c0       	rjmp	.+8      	; 0xe8c <i2c_write+0x2e>
	if(i2c_timer == 0)
     e84:	89 2b       	or	r24, r25
     e86:	8a 2b       	or	r24, r26
     e88:	8b 2b       	or	r24, r27
     e8a:	41 f0       	breq	.+16     	; 0xe9c <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     e8c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     e90:	98 7f       	andi	r25, 0xF8	; 248
     e92:	81 e0       	ldi	r24, 0x01	; 1
     e94:	98 32       	cpi	r25, 0x28	; 40
     e96:	19 f4       	brne	.+6      	; 0xe9e <i2c_write+0x40>
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	08 95       	ret
     e9c:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     e9e:	08 95       	ret

00000ea0 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     ea0:	84 ec       	ldi	r24, 0xC4	; 196
     ea2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     ea6:	8f ef       	ldi	r24, 0xFF	; 255
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	a0 e0       	ldi	r26, 0x00	; 0
     eac:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     eae:	ec eb       	ldi	r30, 0xBC	; 188
     eb0:	f0 e0       	ldi	r31, 0x00	; 0
     eb2:	20 81       	ld	r18, Z
     eb4:	22 23       	and	r18, r18
     eb6:	2c f0       	brlt	.+10     	; 0xec2 <i2c_readAck+0x22>
     eb8:	01 97       	sbiw	r24, 0x01	; 1
     eba:	a1 09       	sbc	r26, r1
     ebc:	b1 09       	sbc	r27, r1
     ebe:	c8 f7       	brcc	.-14     	; 0xeb2 <i2c_readAck+0x12>
     ec0:	04 c0       	rjmp	.+8      	; 0xeca <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     ec2:	89 2b       	or	r24, r25
     ec4:	8a 2b       	or	r24, r26
     ec6:	8b 2b       	or	r24, r27
     ec8:	19 f0       	breq	.+6      	; 0xed0 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     eca:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     ece:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     ed0:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     ed2:	08 95       	ret

00000ed4 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     ed4:	84 e8       	ldi	r24, 0x84	; 132
     ed6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     eda:	8f ef       	ldi	r24, 0xFF	; 255
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a0 e0       	ldi	r26, 0x00	; 0
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     ee2:	ec eb       	ldi	r30, 0xBC	; 188
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	20 81       	ld	r18, Z
     ee8:	22 23       	and	r18, r18
     eea:	2c f0       	brlt	.+10     	; 0xef6 <i2c_readNak+0x22>
     eec:	01 97       	sbiw	r24, 0x01	; 1
     eee:	a1 09       	sbc	r26, r1
     ef0:	b1 09       	sbc	r27, r1
     ef2:	c8 f7       	brcc	.-14     	; 0xee6 <i2c_readNak+0x12>
     ef4:	04 c0       	rjmp	.+8      	; 0xefe <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     ef6:	89 2b       	or	r24, r25
     ef8:	8a 2b       	or	r24, r26
     efa:	8b 2b       	or	r24, r27
     efc:	19 f0       	breq	.+6      	; 0xf04 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     efe:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     f02:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     f04:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     f06:	08 95       	ret

00000f08 <USART_Init>:
#include <avr/io.h>
#include <stdio.h>
void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     f08:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)ubrr;
     f0c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	UCSR0B = (1<<TXEN0);// | (1<<TXCIE0);
     f10:	88 e0       	ldi	r24, 0x08	; 8
     f12:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);//2 stop bit 8 bit
     f16:	8e e0       	ldi	r24, 0x0E	; 14
     f18:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     f1c:	08 95       	ret

00000f1e <USART_Transmit>:


void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
     f1e:	e0 ec       	ldi	r30, 0xC0	; 192
     f20:	f0 e0       	ldi	r31, 0x00	; 0
     f22:	90 81       	ld	r25, Z
     f24:	95 ff       	sbrs	r25, 5
     f26:	fd cf       	rjmp	.-6      	; 0xf22 <USART_Transmit+0x4>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     f28:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     f2c:	08 95       	ret

00000f2e <__subsf3>:
     f2e:	50 58       	subi	r21, 0x80	; 128

00000f30 <__addsf3>:
     f30:	bb 27       	eor	r27, r27
     f32:	aa 27       	eor	r26, r26
     f34:	0e d0       	rcall	.+28     	; 0xf52 <__addsf3x>
     f36:	dd c1       	rjmp	.+954    	; 0x12f2 <__fp_round>
     f38:	ce d1       	rcall	.+924    	; 0x12d6 <__fp_pscA>
     f3a:	30 f0       	brcs	.+12     	; 0xf48 <__addsf3+0x18>
     f3c:	d3 d1       	rcall	.+934    	; 0x12e4 <__fp_pscB>
     f3e:	20 f0       	brcs	.+8      	; 0xf48 <__addsf3+0x18>
     f40:	31 f4       	brne	.+12     	; 0xf4e <__addsf3+0x1e>
     f42:	9f 3f       	cpi	r25, 0xFF	; 255
     f44:	11 f4       	brne	.+4      	; 0xf4a <__addsf3+0x1a>
     f46:	1e f4       	brtc	.+6      	; 0xf4e <__addsf3+0x1e>
     f48:	8d c1       	rjmp	.+794    	; 0x1264 <__fp_nan>
     f4a:	0e f4       	brtc	.+2      	; 0xf4e <__addsf3+0x1e>
     f4c:	e0 95       	com	r30
     f4e:	e7 fb       	bst	r30, 7
     f50:	83 c1       	rjmp	.+774    	; 0x1258 <__fp_inf>

00000f52 <__addsf3x>:
     f52:	e9 2f       	mov	r30, r25
     f54:	df d1       	rcall	.+958    	; 0x1314 <__fp_split3>
     f56:	80 f3       	brcs	.-32     	; 0xf38 <__addsf3+0x8>
     f58:	ba 17       	cp	r27, r26
     f5a:	62 07       	cpc	r22, r18
     f5c:	73 07       	cpc	r23, r19
     f5e:	84 07       	cpc	r24, r20
     f60:	95 07       	cpc	r25, r21
     f62:	18 f0       	brcs	.+6      	; 0xf6a <__addsf3x+0x18>
     f64:	71 f4       	brne	.+28     	; 0xf82 <__addsf3x+0x30>
     f66:	9e f5       	brtc	.+102    	; 0xfce <__addsf3x+0x7c>
     f68:	f7 c1       	rjmp	.+1006   	; 0x1358 <__fp_zero>
     f6a:	0e f4       	brtc	.+2      	; 0xf6e <__addsf3x+0x1c>
     f6c:	e0 95       	com	r30
     f6e:	0b 2e       	mov	r0, r27
     f70:	ba 2f       	mov	r27, r26
     f72:	a0 2d       	mov	r26, r0
     f74:	0b 01       	movw	r0, r22
     f76:	b9 01       	movw	r22, r18
     f78:	90 01       	movw	r18, r0
     f7a:	0c 01       	movw	r0, r24
     f7c:	ca 01       	movw	r24, r20
     f7e:	a0 01       	movw	r20, r0
     f80:	11 24       	eor	r1, r1
     f82:	ff 27       	eor	r31, r31
     f84:	59 1b       	sub	r21, r25
     f86:	99 f0       	breq	.+38     	; 0xfae <__addsf3x+0x5c>
     f88:	59 3f       	cpi	r21, 0xF9	; 249
     f8a:	50 f4       	brcc	.+20     	; 0xfa0 <__addsf3x+0x4e>
     f8c:	50 3e       	cpi	r21, 0xE0	; 224
     f8e:	68 f1       	brcs	.+90     	; 0xfea <__addsf3x+0x98>
     f90:	1a 16       	cp	r1, r26
     f92:	f0 40       	sbci	r31, 0x00	; 0
     f94:	a2 2f       	mov	r26, r18
     f96:	23 2f       	mov	r18, r19
     f98:	34 2f       	mov	r19, r20
     f9a:	44 27       	eor	r20, r20
     f9c:	58 5f       	subi	r21, 0xF8	; 248
     f9e:	f3 cf       	rjmp	.-26     	; 0xf86 <__addsf3x+0x34>
     fa0:	46 95       	lsr	r20
     fa2:	37 95       	ror	r19
     fa4:	27 95       	ror	r18
     fa6:	a7 95       	ror	r26
     fa8:	f0 40       	sbci	r31, 0x00	; 0
     faa:	53 95       	inc	r21
     fac:	c9 f7       	brne	.-14     	; 0xfa0 <__addsf3x+0x4e>
     fae:	7e f4       	brtc	.+30     	; 0xfce <__addsf3x+0x7c>
     fb0:	1f 16       	cp	r1, r31
     fb2:	ba 0b       	sbc	r27, r26
     fb4:	62 0b       	sbc	r22, r18
     fb6:	73 0b       	sbc	r23, r19
     fb8:	84 0b       	sbc	r24, r20
     fba:	ba f0       	brmi	.+46     	; 0xfea <__addsf3x+0x98>
     fbc:	91 50       	subi	r25, 0x01	; 1
     fbe:	a1 f0       	breq	.+40     	; 0xfe8 <__addsf3x+0x96>
     fc0:	ff 0f       	add	r31, r31
     fc2:	bb 1f       	adc	r27, r27
     fc4:	66 1f       	adc	r22, r22
     fc6:	77 1f       	adc	r23, r23
     fc8:	88 1f       	adc	r24, r24
     fca:	c2 f7       	brpl	.-16     	; 0xfbc <__addsf3x+0x6a>
     fcc:	0e c0       	rjmp	.+28     	; 0xfea <__addsf3x+0x98>
     fce:	ba 0f       	add	r27, r26
     fd0:	62 1f       	adc	r22, r18
     fd2:	73 1f       	adc	r23, r19
     fd4:	84 1f       	adc	r24, r20
     fd6:	48 f4       	brcc	.+18     	; 0xfea <__addsf3x+0x98>
     fd8:	87 95       	ror	r24
     fda:	77 95       	ror	r23
     fdc:	67 95       	ror	r22
     fde:	b7 95       	ror	r27
     fe0:	f7 95       	ror	r31
     fe2:	9e 3f       	cpi	r25, 0xFE	; 254
     fe4:	08 f0       	brcs	.+2      	; 0xfe8 <__addsf3x+0x96>
     fe6:	b3 cf       	rjmp	.-154    	; 0xf4e <__addsf3+0x1e>
     fe8:	93 95       	inc	r25
     fea:	88 0f       	add	r24, r24
     fec:	08 f0       	brcs	.+2      	; 0xff0 <__addsf3x+0x9e>
     fee:	99 27       	eor	r25, r25
     ff0:	ee 0f       	add	r30, r30
     ff2:	97 95       	ror	r25
     ff4:	87 95       	ror	r24
     ff6:	08 95       	ret

00000ff8 <asin>:
     ff8:	9f 93       	push	r25
     ffa:	9f 77       	andi	r25, 0x7F	; 127
     ffc:	ee e3       	ldi	r30, 0x3E	; 62
     ffe:	89 37       	cpi	r24, 0x79	; 121
    1000:	9e 07       	cpc	r25, r30
    1002:	20 f4       	brcc	.+8      	; 0x100c <asin+0x14>
    1004:	e4 ee       	ldi	r30, 0xE4	; 228
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	55 d1       	rcall	.+682    	; 0x12b4 <__fp_powsodd>
    100a:	09 c0       	rjmp	.+18     	; 0x101e <asin+0x26>
    100c:	e6 d0       	rcall	.+460    	; 0x11da <__fp_arccos>
    100e:	90 58       	subi	r25, 0x80	; 128
    1010:	a2 ea       	ldi	r26, 0xA2	; 162
    1012:	2a ed       	ldi	r18, 0xDA	; 218
    1014:	3f e0       	ldi	r19, 0x0F	; 15
    1016:	49 ec       	ldi	r20, 0xC9	; 201
    1018:	5f e3       	ldi	r21, 0x3F	; 63
    101a:	9b df       	rcall	.-202    	; 0xf52 <__addsf3x>
    101c:	6a d1       	rcall	.+724    	; 0x12f2 <__fp_round>
    101e:	0f 90       	pop	r0
    1020:	07 fc       	sbrc	r0, 7
    1022:	90 58       	subi	r25, 0x80	; 128
    1024:	08 95       	ret

00001026 <__cmpsf2>:
    1026:	f4 d0       	rcall	.+488    	; 0x1210 <__fp_cmp>
    1028:	08 f4       	brcc	.+2      	; 0x102c <__cmpsf2+0x6>
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	08 95       	ret

0000102e <__divsf3>:
    102e:	0c d0       	rcall	.+24     	; 0x1048 <__divsf3x>
    1030:	60 c1       	rjmp	.+704    	; 0x12f2 <__fp_round>
    1032:	58 d1       	rcall	.+688    	; 0x12e4 <__fp_pscB>
    1034:	40 f0       	brcs	.+16     	; 0x1046 <__divsf3+0x18>
    1036:	4f d1       	rcall	.+670    	; 0x12d6 <__fp_pscA>
    1038:	30 f0       	brcs	.+12     	; 0x1046 <__divsf3+0x18>
    103a:	21 f4       	brne	.+8      	; 0x1044 <__divsf3+0x16>
    103c:	5f 3f       	cpi	r21, 0xFF	; 255
    103e:	19 f0       	breq	.+6      	; 0x1046 <__divsf3+0x18>
    1040:	0b c1       	rjmp	.+534    	; 0x1258 <__fp_inf>
    1042:	51 11       	cpse	r21, r1
    1044:	8a c1       	rjmp	.+788    	; 0x135a <__fp_szero>
    1046:	0e c1       	rjmp	.+540    	; 0x1264 <__fp_nan>

00001048 <__divsf3x>:
    1048:	65 d1       	rcall	.+714    	; 0x1314 <__fp_split3>
    104a:	98 f3       	brcs	.-26     	; 0x1032 <__divsf3+0x4>

0000104c <__divsf3_pse>:
    104c:	99 23       	and	r25, r25
    104e:	c9 f3       	breq	.-14     	; 0x1042 <__divsf3+0x14>
    1050:	55 23       	and	r21, r21
    1052:	b1 f3       	breq	.-20     	; 0x1040 <__divsf3+0x12>
    1054:	95 1b       	sub	r25, r21
    1056:	55 0b       	sbc	r21, r21
    1058:	bb 27       	eor	r27, r27
    105a:	aa 27       	eor	r26, r26
    105c:	62 17       	cp	r22, r18
    105e:	73 07       	cpc	r23, r19
    1060:	84 07       	cpc	r24, r20
    1062:	38 f0       	brcs	.+14     	; 0x1072 <__divsf3_pse+0x26>
    1064:	9f 5f       	subi	r25, 0xFF	; 255
    1066:	5f 4f       	sbci	r21, 0xFF	; 255
    1068:	22 0f       	add	r18, r18
    106a:	33 1f       	adc	r19, r19
    106c:	44 1f       	adc	r20, r20
    106e:	aa 1f       	adc	r26, r26
    1070:	a9 f3       	breq	.-22     	; 0x105c <__divsf3_pse+0x10>
    1072:	33 d0       	rcall	.+102    	; 0x10da <__divsf3_pse+0x8e>
    1074:	0e 2e       	mov	r0, r30
    1076:	3a f0       	brmi	.+14     	; 0x1086 <__divsf3_pse+0x3a>
    1078:	e0 e8       	ldi	r30, 0x80	; 128
    107a:	30 d0       	rcall	.+96     	; 0x10dc <__divsf3_pse+0x90>
    107c:	91 50       	subi	r25, 0x01	; 1
    107e:	50 40       	sbci	r21, 0x00	; 0
    1080:	e6 95       	lsr	r30
    1082:	00 1c       	adc	r0, r0
    1084:	ca f7       	brpl	.-14     	; 0x1078 <__divsf3_pse+0x2c>
    1086:	29 d0       	rcall	.+82     	; 0x10da <__divsf3_pse+0x8e>
    1088:	fe 2f       	mov	r31, r30
    108a:	27 d0       	rcall	.+78     	; 0x10da <__divsf3_pse+0x8e>
    108c:	66 0f       	add	r22, r22
    108e:	77 1f       	adc	r23, r23
    1090:	88 1f       	adc	r24, r24
    1092:	bb 1f       	adc	r27, r27
    1094:	26 17       	cp	r18, r22
    1096:	37 07       	cpc	r19, r23
    1098:	48 07       	cpc	r20, r24
    109a:	ab 07       	cpc	r26, r27
    109c:	b0 e8       	ldi	r27, 0x80	; 128
    109e:	09 f0       	breq	.+2      	; 0x10a2 <__divsf3_pse+0x56>
    10a0:	bb 0b       	sbc	r27, r27
    10a2:	80 2d       	mov	r24, r0
    10a4:	bf 01       	movw	r22, r30
    10a6:	ff 27       	eor	r31, r31
    10a8:	93 58       	subi	r25, 0x83	; 131
    10aa:	5f 4f       	sbci	r21, 0xFF	; 255
    10ac:	2a f0       	brmi	.+10     	; 0x10b8 <__divsf3_pse+0x6c>
    10ae:	9e 3f       	cpi	r25, 0xFE	; 254
    10b0:	51 05       	cpc	r21, r1
    10b2:	68 f0       	brcs	.+26     	; 0x10ce <__divsf3_pse+0x82>
    10b4:	d1 c0       	rjmp	.+418    	; 0x1258 <__fp_inf>
    10b6:	51 c1       	rjmp	.+674    	; 0x135a <__fp_szero>
    10b8:	5f 3f       	cpi	r21, 0xFF	; 255
    10ba:	ec f3       	brlt	.-6      	; 0x10b6 <__divsf3_pse+0x6a>
    10bc:	98 3e       	cpi	r25, 0xE8	; 232
    10be:	dc f3       	brlt	.-10     	; 0x10b6 <__divsf3_pse+0x6a>
    10c0:	86 95       	lsr	r24
    10c2:	77 95       	ror	r23
    10c4:	67 95       	ror	r22
    10c6:	b7 95       	ror	r27
    10c8:	f7 95       	ror	r31
    10ca:	9f 5f       	subi	r25, 0xFF	; 255
    10cc:	c9 f7       	brne	.-14     	; 0x10c0 <__divsf3_pse+0x74>
    10ce:	88 0f       	add	r24, r24
    10d0:	91 1d       	adc	r25, r1
    10d2:	96 95       	lsr	r25
    10d4:	87 95       	ror	r24
    10d6:	97 f9       	bld	r25, 7
    10d8:	08 95       	ret
    10da:	e1 e0       	ldi	r30, 0x01	; 1
    10dc:	66 0f       	add	r22, r22
    10de:	77 1f       	adc	r23, r23
    10e0:	88 1f       	adc	r24, r24
    10e2:	bb 1f       	adc	r27, r27
    10e4:	62 17       	cp	r22, r18
    10e6:	73 07       	cpc	r23, r19
    10e8:	84 07       	cpc	r24, r20
    10ea:	ba 07       	cpc	r27, r26
    10ec:	20 f0       	brcs	.+8      	; 0x10f6 <__divsf3_pse+0xaa>
    10ee:	62 1b       	sub	r22, r18
    10f0:	73 0b       	sbc	r23, r19
    10f2:	84 0b       	sbc	r24, r20
    10f4:	ba 0b       	sbc	r27, r26
    10f6:	ee 1f       	adc	r30, r30
    10f8:	88 f7       	brcc	.-30     	; 0x10dc <__divsf3_pse+0x90>
    10fa:	e0 95       	com	r30
    10fc:	08 95       	ret

000010fe <__fixsfsi>:
    10fe:	04 d0       	rcall	.+8      	; 0x1108 <__fixunssfsi>
    1100:	68 94       	set
    1102:	b1 11       	cpse	r27, r1
    1104:	2a c1       	rjmp	.+596    	; 0x135a <__fp_szero>
    1106:	08 95       	ret

00001108 <__fixunssfsi>:
    1108:	0d d1       	rcall	.+538    	; 0x1324 <__fp_splitA>
    110a:	88 f0       	brcs	.+34     	; 0x112e <__fixunssfsi+0x26>
    110c:	9f 57       	subi	r25, 0x7F	; 127
    110e:	90 f0       	brcs	.+36     	; 0x1134 <__fixunssfsi+0x2c>
    1110:	b9 2f       	mov	r27, r25
    1112:	99 27       	eor	r25, r25
    1114:	b7 51       	subi	r27, 0x17	; 23
    1116:	a0 f0       	brcs	.+40     	; 0x1140 <__fixunssfsi+0x38>
    1118:	d1 f0       	breq	.+52     	; 0x114e <__fixunssfsi+0x46>
    111a:	66 0f       	add	r22, r22
    111c:	77 1f       	adc	r23, r23
    111e:	88 1f       	adc	r24, r24
    1120:	99 1f       	adc	r25, r25
    1122:	1a f0       	brmi	.+6      	; 0x112a <__fixunssfsi+0x22>
    1124:	ba 95       	dec	r27
    1126:	c9 f7       	brne	.-14     	; 0x111a <__fixunssfsi+0x12>
    1128:	12 c0       	rjmp	.+36     	; 0x114e <__fixunssfsi+0x46>
    112a:	b1 30       	cpi	r27, 0x01	; 1
    112c:	81 f0       	breq	.+32     	; 0x114e <__fixunssfsi+0x46>
    112e:	14 d1       	rcall	.+552    	; 0x1358 <__fp_zero>
    1130:	b1 e0       	ldi	r27, 0x01	; 1
    1132:	08 95       	ret
    1134:	11 c1       	rjmp	.+546    	; 0x1358 <__fp_zero>
    1136:	67 2f       	mov	r22, r23
    1138:	78 2f       	mov	r23, r24
    113a:	88 27       	eor	r24, r24
    113c:	b8 5f       	subi	r27, 0xF8	; 248
    113e:	39 f0       	breq	.+14     	; 0x114e <__fixunssfsi+0x46>
    1140:	b9 3f       	cpi	r27, 0xF9	; 249
    1142:	cc f3       	brlt	.-14     	; 0x1136 <__fixunssfsi+0x2e>
    1144:	86 95       	lsr	r24
    1146:	77 95       	ror	r23
    1148:	67 95       	ror	r22
    114a:	b3 95       	inc	r27
    114c:	d9 f7       	brne	.-10     	; 0x1144 <__fixunssfsi+0x3c>
    114e:	3e f4       	brtc	.+14     	; 0x115e <__fixunssfsi+0x56>
    1150:	90 95       	com	r25
    1152:	80 95       	com	r24
    1154:	70 95       	com	r23
    1156:	61 95       	neg	r22
    1158:	7f 4f       	sbci	r23, 0xFF	; 255
    115a:	8f 4f       	sbci	r24, 0xFF	; 255
    115c:	9f 4f       	sbci	r25, 0xFF	; 255
    115e:	08 95       	ret

00001160 <__floatunsisf>:
    1160:	e8 94       	clt
    1162:	09 c0       	rjmp	.+18     	; 0x1176 <__floatsisf+0x12>

00001164 <__floatsisf>:
    1164:	97 fb       	bst	r25, 7
    1166:	3e f4       	brtc	.+14     	; 0x1176 <__floatsisf+0x12>
    1168:	90 95       	com	r25
    116a:	80 95       	com	r24
    116c:	70 95       	com	r23
    116e:	61 95       	neg	r22
    1170:	7f 4f       	sbci	r23, 0xFF	; 255
    1172:	8f 4f       	sbci	r24, 0xFF	; 255
    1174:	9f 4f       	sbci	r25, 0xFF	; 255
    1176:	99 23       	and	r25, r25
    1178:	a9 f0       	breq	.+42     	; 0x11a4 <__floatsisf+0x40>
    117a:	f9 2f       	mov	r31, r25
    117c:	96 e9       	ldi	r25, 0x96	; 150
    117e:	bb 27       	eor	r27, r27
    1180:	93 95       	inc	r25
    1182:	f6 95       	lsr	r31
    1184:	87 95       	ror	r24
    1186:	77 95       	ror	r23
    1188:	67 95       	ror	r22
    118a:	b7 95       	ror	r27
    118c:	f1 11       	cpse	r31, r1
    118e:	f8 cf       	rjmp	.-16     	; 0x1180 <__floatsisf+0x1c>
    1190:	fa f4       	brpl	.+62     	; 0x11d0 <__floatsisf+0x6c>
    1192:	bb 0f       	add	r27, r27
    1194:	11 f4       	brne	.+4      	; 0x119a <__floatsisf+0x36>
    1196:	60 ff       	sbrs	r22, 0
    1198:	1b c0       	rjmp	.+54     	; 0x11d0 <__floatsisf+0x6c>
    119a:	6f 5f       	subi	r22, 0xFF	; 255
    119c:	7f 4f       	sbci	r23, 0xFF	; 255
    119e:	8f 4f       	sbci	r24, 0xFF	; 255
    11a0:	9f 4f       	sbci	r25, 0xFF	; 255
    11a2:	16 c0       	rjmp	.+44     	; 0x11d0 <__floatsisf+0x6c>
    11a4:	88 23       	and	r24, r24
    11a6:	11 f0       	breq	.+4      	; 0x11ac <__floatsisf+0x48>
    11a8:	96 e9       	ldi	r25, 0x96	; 150
    11aa:	11 c0       	rjmp	.+34     	; 0x11ce <__floatsisf+0x6a>
    11ac:	77 23       	and	r23, r23
    11ae:	21 f0       	breq	.+8      	; 0x11b8 <__floatsisf+0x54>
    11b0:	9e e8       	ldi	r25, 0x8E	; 142
    11b2:	87 2f       	mov	r24, r23
    11b4:	76 2f       	mov	r23, r22
    11b6:	05 c0       	rjmp	.+10     	; 0x11c2 <__floatsisf+0x5e>
    11b8:	66 23       	and	r22, r22
    11ba:	71 f0       	breq	.+28     	; 0x11d8 <__floatsisf+0x74>
    11bc:	96 e8       	ldi	r25, 0x86	; 134
    11be:	86 2f       	mov	r24, r22
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	60 e0       	ldi	r22, 0x00	; 0
    11c4:	2a f0       	brmi	.+10     	; 0x11d0 <__floatsisf+0x6c>
    11c6:	9a 95       	dec	r25
    11c8:	66 0f       	add	r22, r22
    11ca:	77 1f       	adc	r23, r23
    11cc:	88 1f       	adc	r24, r24
    11ce:	da f7       	brpl	.-10     	; 0x11c6 <__floatsisf+0x62>
    11d0:	88 0f       	add	r24, r24
    11d2:	96 95       	lsr	r25
    11d4:	87 95       	ror	r24
    11d6:	97 f9       	bld	r25, 7
    11d8:	08 95       	ret

000011da <__fp_arccos>:
    11da:	df 93       	push	r29
    11dc:	cf 93       	push	r28
    11de:	1f 93       	push	r17
    11e0:	0f 93       	push	r16
    11e2:	8b 01       	movw	r16, r22
    11e4:	ec 01       	movw	r28, r24
    11e6:	e8 ef       	ldi	r30, 0xF8	; 248
    11e8:	f0 e0       	ldi	r31, 0x00	; 0
    11ea:	3f d0       	rcall	.+126    	; 0x126a <__fp_powser>
    11ec:	82 d0       	rcall	.+260    	; 0x12f2 <__fp_round>
    11ee:	98 01       	movw	r18, r16
    11f0:	ae 01       	movw	r20, r28
    11f2:	8b 01       	movw	r16, r22
    11f4:	ec 01       	movw	r28, r24
    11f6:	60 e0       	ldi	r22, 0x00	; 0
    11f8:	70 e0       	ldi	r23, 0x00	; 0
    11fa:	80 e8       	ldi	r24, 0x80	; 128
    11fc:	9f e3       	ldi	r25, 0x3F	; 63
    11fe:	97 de       	rcall	.-722    	; 0xf2e <__subsf3>
    1200:	23 d1       	rcall	.+582    	; 0x1448 <sqrt>
    1202:	98 01       	movw	r18, r16
    1204:	ae 01       	movw	r20, r28
    1206:	0f 91       	pop	r16
    1208:	1f 91       	pop	r17
    120a:	cf 91       	pop	r28
    120c:	df 91       	pop	r29
    120e:	bb c0       	rjmp	.+374    	; 0x1386 <__mulsf3x>

00001210 <__fp_cmp>:
    1210:	99 0f       	add	r25, r25
    1212:	00 08       	sbc	r0, r0
    1214:	55 0f       	add	r21, r21
    1216:	aa 0b       	sbc	r26, r26
    1218:	e0 e8       	ldi	r30, 0x80	; 128
    121a:	fe ef       	ldi	r31, 0xFE	; 254
    121c:	16 16       	cp	r1, r22
    121e:	17 06       	cpc	r1, r23
    1220:	e8 07       	cpc	r30, r24
    1222:	f9 07       	cpc	r31, r25
    1224:	c0 f0       	brcs	.+48     	; 0x1256 <__fp_cmp+0x46>
    1226:	12 16       	cp	r1, r18
    1228:	13 06       	cpc	r1, r19
    122a:	e4 07       	cpc	r30, r20
    122c:	f5 07       	cpc	r31, r21
    122e:	98 f0       	brcs	.+38     	; 0x1256 <__fp_cmp+0x46>
    1230:	62 1b       	sub	r22, r18
    1232:	73 0b       	sbc	r23, r19
    1234:	84 0b       	sbc	r24, r20
    1236:	95 0b       	sbc	r25, r21
    1238:	39 f4       	brne	.+14     	; 0x1248 <__fp_cmp+0x38>
    123a:	0a 26       	eor	r0, r26
    123c:	61 f0       	breq	.+24     	; 0x1256 <__fp_cmp+0x46>
    123e:	23 2b       	or	r18, r19
    1240:	24 2b       	or	r18, r20
    1242:	25 2b       	or	r18, r21
    1244:	21 f4       	brne	.+8      	; 0x124e <__fp_cmp+0x3e>
    1246:	08 95       	ret
    1248:	0a 26       	eor	r0, r26
    124a:	09 f4       	brne	.+2      	; 0x124e <__fp_cmp+0x3e>
    124c:	a1 40       	sbci	r26, 0x01	; 1
    124e:	a6 95       	lsr	r26
    1250:	8f ef       	ldi	r24, 0xFF	; 255
    1252:	81 1d       	adc	r24, r1
    1254:	81 1d       	adc	r24, r1
    1256:	08 95       	ret

00001258 <__fp_inf>:
    1258:	97 f9       	bld	r25, 7
    125a:	9f 67       	ori	r25, 0x7F	; 127
    125c:	80 e8       	ldi	r24, 0x80	; 128
    125e:	70 e0       	ldi	r23, 0x00	; 0
    1260:	60 e0       	ldi	r22, 0x00	; 0
    1262:	08 95       	ret

00001264 <__fp_nan>:
    1264:	9f ef       	ldi	r25, 0xFF	; 255
    1266:	80 ec       	ldi	r24, 0xC0	; 192
    1268:	08 95       	ret

0000126a <__fp_powser>:
    126a:	df 93       	push	r29
    126c:	cf 93       	push	r28
    126e:	1f 93       	push	r17
    1270:	0f 93       	push	r16
    1272:	ff 92       	push	r15
    1274:	ef 92       	push	r14
    1276:	df 92       	push	r13
    1278:	7b 01       	movw	r14, r22
    127a:	8c 01       	movw	r16, r24
    127c:	68 94       	set
    127e:	05 c0       	rjmp	.+10     	; 0x128a <__fp_powser+0x20>
    1280:	da 2e       	mov	r13, r26
    1282:	ef 01       	movw	r28, r30
    1284:	80 d0       	rcall	.+256    	; 0x1386 <__mulsf3x>
    1286:	fe 01       	movw	r30, r28
    1288:	e8 94       	clt
    128a:	a5 91       	lpm	r26, Z+
    128c:	25 91       	lpm	r18, Z+
    128e:	35 91       	lpm	r19, Z+
    1290:	45 91       	lpm	r20, Z+
    1292:	55 91       	lpm	r21, Z+
    1294:	ae f3       	brts	.-22     	; 0x1280 <__fp_powser+0x16>
    1296:	ef 01       	movw	r28, r30
    1298:	5c de       	rcall	.-840    	; 0xf52 <__addsf3x>
    129a:	fe 01       	movw	r30, r28
    129c:	97 01       	movw	r18, r14
    129e:	a8 01       	movw	r20, r16
    12a0:	da 94       	dec	r13
    12a2:	79 f7       	brne	.-34     	; 0x1282 <__fp_powser+0x18>
    12a4:	df 90       	pop	r13
    12a6:	ef 90       	pop	r14
    12a8:	ff 90       	pop	r15
    12aa:	0f 91       	pop	r16
    12ac:	1f 91       	pop	r17
    12ae:	cf 91       	pop	r28
    12b0:	df 91       	pop	r29
    12b2:	08 95       	ret

000012b4 <__fp_powsodd>:
    12b4:	9f 93       	push	r25
    12b6:	8f 93       	push	r24
    12b8:	7f 93       	push	r23
    12ba:	6f 93       	push	r22
    12bc:	ff 93       	push	r31
    12be:	ef 93       	push	r30
    12c0:	9b 01       	movw	r18, r22
    12c2:	ac 01       	movw	r20, r24
    12c4:	54 d0       	rcall	.+168    	; 0x136e <__mulsf3>
    12c6:	ef 91       	pop	r30
    12c8:	ff 91       	pop	r31
    12ca:	cf df       	rcall	.-98     	; 0x126a <__fp_powser>
    12cc:	2f 91       	pop	r18
    12ce:	3f 91       	pop	r19
    12d0:	4f 91       	pop	r20
    12d2:	5f 91       	pop	r21
    12d4:	4c c0       	rjmp	.+152    	; 0x136e <__mulsf3>

000012d6 <__fp_pscA>:
    12d6:	00 24       	eor	r0, r0
    12d8:	0a 94       	dec	r0
    12da:	16 16       	cp	r1, r22
    12dc:	17 06       	cpc	r1, r23
    12de:	18 06       	cpc	r1, r24
    12e0:	09 06       	cpc	r0, r25
    12e2:	08 95       	ret

000012e4 <__fp_pscB>:
    12e4:	00 24       	eor	r0, r0
    12e6:	0a 94       	dec	r0
    12e8:	12 16       	cp	r1, r18
    12ea:	13 06       	cpc	r1, r19
    12ec:	14 06       	cpc	r1, r20
    12ee:	05 06       	cpc	r0, r21
    12f0:	08 95       	ret

000012f2 <__fp_round>:
    12f2:	09 2e       	mov	r0, r25
    12f4:	03 94       	inc	r0
    12f6:	00 0c       	add	r0, r0
    12f8:	11 f4       	brne	.+4      	; 0x12fe <__fp_round+0xc>
    12fa:	88 23       	and	r24, r24
    12fc:	52 f0       	brmi	.+20     	; 0x1312 <__fp_round+0x20>
    12fe:	bb 0f       	add	r27, r27
    1300:	40 f4       	brcc	.+16     	; 0x1312 <__fp_round+0x20>
    1302:	bf 2b       	or	r27, r31
    1304:	11 f4       	brne	.+4      	; 0x130a <__fp_round+0x18>
    1306:	60 ff       	sbrs	r22, 0
    1308:	04 c0       	rjmp	.+8      	; 0x1312 <__fp_round+0x20>
    130a:	6f 5f       	subi	r22, 0xFF	; 255
    130c:	7f 4f       	sbci	r23, 0xFF	; 255
    130e:	8f 4f       	sbci	r24, 0xFF	; 255
    1310:	9f 4f       	sbci	r25, 0xFF	; 255
    1312:	08 95       	ret

00001314 <__fp_split3>:
    1314:	57 fd       	sbrc	r21, 7
    1316:	90 58       	subi	r25, 0x80	; 128
    1318:	44 0f       	add	r20, r20
    131a:	55 1f       	adc	r21, r21
    131c:	59 f0       	breq	.+22     	; 0x1334 <__fp_splitA+0x10>
    131e:	5f 3f       	cpi	r21, 0xFF	; 255
    1320:	71 f0       	breq	.+28     	; 0x133e <__fp_splitA+0x1a>
    1322:	47 95       	ror	r20

00001324 <__fp_splitA>:
    1324:	88 0f       	add	r24, r24
    1326:	97 fb       	bst	r25, 7
    1328:	99 1f       	adc	r25, r25
    132a:	61 f0       	breq	.+24     	; 0x1344 <__fp_splitA+0x20>
    132c:	9f 3f       	cpi	r25, 0xFF	; 255
    132e:	79 f0       	breq	.+30     	; 0x134e <__fp_splitA+0x2a>
    1330:	87 95       	ror	r24
    1332:	08 95       	ret
    1334:	12 16       	cp	r1, r18
    1336:	13 06       	cpc	r1, r19
    1338:	14 06       	cpc	r1, r20
    133a:	55 1f       	adc	r21, r21
    133c:	f2 cf       	rjmp	.-28     	; 0x1322 <__fp_split3+0xe>
    133e:	46 95       	lsr	r20
    1340:	f1 df       	rcall	.-30     	; 0x1324 <__fp_splitA>
    1342:	08 c0       	rjmp	.+16     	; 0x1354 <__fp_splitA+0x30>
    1344:	16 16       	cp	r1, r22
    1346:	17 06       	cpc	r1, r23
    1348:	18 06       	cpc	r1, r24
    134a:	99 1f       	adc	r25, r25
    134c:	f1 cf       	rjmp	.-30     	; 0x1330 <__fp_splitA+0xc>
    134e:	86 95       	lsr	r24
    1350:	71 05       	cpc	r23, r1
    1352:	61 05       	cpc	r22, r1
    1354:	08 94       	sec
    1356:	08 95       	ret

00001358 <__fp_zero>:
    1358:	e8 94       	clt

0000135a <__fp_szero>:
    135a:	bb 27       	eor	r27, r27
    135c:	66 27       	eor	r22, r22
    135e:	77 27       	eor	r23, r23
    1360:	cb 01       	movw	r24, r22
    1362:	97 f9       	bld	r25, 7
    1364:	08 95       	ret

00001366 <__gesf2>:
    1366:	54 df       	rcall	.-344    	; 0x1210 <__fp_cmp>
    1368:	08 f4       	brcc	.+2      	; 0x136c <__gesf2+0x6>
    136a:	8f ef       	ldi	r24, 0xFF	; 255
    136c:	08 95       	ret

0000136e <__mulsf3>:
    136e:	0b d0       	rcall	.+22     	; 0x1386 <__mulsf3x>
    1370:	c0 cf       	rjmp	.-128    	; 0x12f2 <__fp_round>
    1372:	b1 df       	rcall	.-158    	; 0x12d6 <__fp_pscA>
    1374:	28 f0       	brcs	.+10     	; 0x1380 <__mulsf3+0x12>
    1376:	b6 df       	rcall	.-148    	; 0x12e4 <__fp_pscB>
    1378:	18 f0       	brcs	.+6      	; 0x1380 <__mulsf3+0x12>
    137a:	95 23       	and	r25, r21
    137c:	09 f0       	breq	.+2      	; 0x1380 <__mulsf3+0x12>
    137e:	6c cf       	rjmp	.-296    	; 0x1258 <__fp_inf>
    1380:	71 cf       	rjmp	.-286    	; 0x1264 <__fp_nan>
    1382:	11 24       	eor	r1, r1
    1384:	ea cf       	rjmp	.-44     	; 0x135a <__fp_szero>

00001386 <__mulsf3x>:
    1386:	c6 df       	rcall	.-116    	; 0x1314 <__fp_split3>
    1388:	a0 f3       	brcs	.-24     	; 0x1372 <__mulsf3+0x4>

0000138a <__mulsf3_pse>:
    138a:	95 9f       	mul	r25, r21
    138c:	d1 f3       	breq	.-12     	; 0x1382 <__mulsf3+0x14>
    138e:	95 0f       	add	r25, r21
    1390:	50 e0       	ldi	r21, 0x00	; 0
    1392:	55 1f       	adc	r21, r21
    1394:	62 9f       	mul	r22, r18
    1396:	f0 01       	movw	r30, r0
    1398:	72 9f       	mul	r23, r18
    139a:	bb 27       	eor	r27, r27
    139c:	f0 0d       	add	r31, r0
    139e:	b1 1d       	adc	r27, r1
    13a0:	63 9f       	mul	r22, r19
    13a2:	aa 27       	eor	r26, r26
    13a4:	f0 0d       	add	r31, r0
    13a6:	b1 1d       	adc	r27, r1
    13a8:	aa 1f       	adc	r26, r26
    13aa:	64 9f       	mul	r22, r20
    13ac:	66 27       	eor	r22, r22
    13ae:	b0 0d       	add	r27, r0
    13b0:	a1 1d       	adc	r26, r1
    13b2:	66 1f       	adc	r22, r22
    13b4:	82 9f       	mul	r24, r18
    13b6:	22 27       	eor	r18, r18
    13b8:	b0 0d       	add	r27, r0
    13ba:	a1 1d       	adc	r26, r1
    13bc:	62 1f       	adc	r22, r18
    13be:	73 9f       	mul	r23, r19
    13c0:	b0 0d       	add	r27, r0
    13c2:	a1 1d       	adc	r26, r1
    13c4:	62 1f       	adc	r22, r18
    13c6:	83 9f       	mul	r24, r19
    13c8:	a0 0d       	add	r26, r0
    13ca:	61 1d       	adc	r22, r1
    13cc:	22 1f       	adc	r18, r18
    13ce:	74 9f       	mul	r23, r20
    13d0:	33 27       	eor	r19, r19
    13d2:	a0 0d       	add	r26, r0
    13d4:	61 1d       	adc	r22, r1
    13d6:	23 1f       	adc	r18, r19
    13d8:	84 9f       	mul	r24, r20
    13da:	60 0d       	add	r22, r0
    13dc:	21 1d       	adc	r18, r1
    13de:	82 2f       	mov	r24, r18
    13e0:	76 2f       	mov	r23, r22
    13e2:	6a 2f       	mov	r22, r26
    13e4:	11 24       	eor	r1, r1
    13e6:	9f 57       	subi	r25, 0x7F	; 127
    13e8:	50 40       	sbci	r21, 0x00	; 0
    13ea:	8a f0       	brmi	.+34     	; 0x140e <__mulsf3_pse+0x84>
    13ec:	e1 f0       	breq	.+56     	; 0x1426 <__mulsf3_pse+0x9c>
    13ee:	88 23       	and	r24, r24
    13f0:	4a f0       	brmi	.+18     	; 0x1404 <__mulsf3_pse+0x7a>
    13f2:	ee 0f       	add	r30, r30
    13f4:	ff 1f       	adc	r31, r31
    13f6:	bb 1f       	adc	r27, r27
    13f8:	66 1f       	adc	r22, r22
    13fa:	77 1f       	adc	r23, r23
    13fc:	88 1f       	adc	r24, r24
    13fe:	91 50       	subi	r25, 0x01	; 1
    1400:	50 40       	sbci	r21, 0x00	; 0
    1402:	a9 f7       	brne	.-22     	; 0x13ee <__mulsf3_pse+0x64>
    1404:	9e 3f       	cpi	r25, 0xFE	; 254
    1406:	51 05       	cpc	r21, r1
    1408:	70 f0       	brcs	.+28     	; 0x1426 <__mulsf3_pse+0x9c>
    140a:	26 cf       	rjmp	.-436    	; 0x1258 <__fp_inf>
    140c:	a6 cf       	rjmp	.-180    	; 0x135a <__fp_szero>
    140e:	5f 3f       	cpi	r21, 0xFF	; 255
    1410:	ec f3       	brlt	.-6      	; 0x140c <__mulsf3_pse+0x82>
    1412:	98 3e       	cpi	r25, 0xE8	; 232
    1414:	dc f3       	brlt	.-10     	; 0x140c <__mulsf3_pse+0x82>
    1416:	86 95       	lsr	r24
    1418:	77 95       	ror	r23
    141a:	67 95       	ror	r22
    141c:	b7 95       	ror	r27
    141e:	f7 95       	ror	r31
    1420:	e7 95       	ror	r30
    1422:	9f 5f       	subi	r25, 0xFF	; 255
    1424:	c1 f7       	brne	.-16     	; 0x1416 <__mulsf3_pse+0x8c>
    1426:	fe 2b       	or	r31, r30
    1428:	88 0f       	add	r24, r24
    142a:	91 1d       	adc	r25, r1
    142c:	96 95       	lsr	r25
    142e:	87 95       	ror	r24
    1430:	97 f9       	bld	r25, 7
    1432:	08 95       	ret

00001434 <sin>:
    1434:	9f 93       	push	r25
    1436:	5c d0       	rcall	.+184    	; 0x14f0 <__fp_rempio2>
    1438:	0f 90       	pop	r0
    143a:	07 fc       	sbrc	r0, 7
    143c:	ee 5f       	subi	r30, 0xFE	; 254
    143e:	7f c0       	rjmp	.+254    	; 0x153e <__fp_sinus>
    1440:	11 f4       	brne	.+4      	; 0x1446 <sin+0x12>
    1442:	0e f4       	brtc	.+2      	; 0x1446 <sin+0x12>
    1444:	0f cf       	rjmp	.-482    	; 0x1264 <__fp_nan>
    1446:	3e c0       	rjmp	.+124    	; 0x14c4 <__fp_mpack>

00001448 <sqrt>:
    1448:	6d df       	rcall	.-294    	; 0x1324 <__fp_splitA>
    144a:	d0 f3       	brcs	.-12     	; 0x1440 <sin+0xc>
    144c:	99 23       	and	r25, r25
    144e:	d9 f3       	breq	.-10     	; 0x1446 <sin+0x12>
    1450:	ce f3       	brts	.-14     	; 0x1444 <sin+0x10>
    1452:	9f 57       	subi	r25, 0x7F	; 127
    1454:	55 0b       	sbc	r21, r21
    1456:	87 ff       	sbrs	r24, 7
    1458:	43 d0       	rcall	.+134    	; 0x14e0 <__fp_norm2>
    145a:	00 24       	eor	r0, r0
    145c:	a0 e6       	ldi	r26, 0x60	; 96
    145e:	40 ea       	ldi	r20, 0xA0	; 160
    1460:	90 01       	movw	r18, r0
    1462:	80 58       	subi	r24, 0x80	; 128
    1464:	56 95       	lsr	r21
    1466:	97 95       	ror	r25
    1468:	28 f4       	brcc	.+10     	; 0x1474 <sqrt+0x2c>
    146a:	80 5c       	subi	r24, 0xC0	; 192
    146c:	66 0f       	add	r22, r22
    146e:	77 1f       	adc	r23, r23
    1470:	88 1f       	adc	r24, r24
    1472:	20 f0       	brcs	.+8      	; 0x147c <sqrt+0x34>
    1474:	26 17       	cp	r18, r22
    1476:	37 07       	cpc	r19, r23
    1478:	48 07       	cpc	r20, r24
    147a:	30 f4       	brcc	.+12     	; 0x1488 <sqrt+0x40>
    147c:	62 1b       	sub	r22, r18
    147e:	73 0b       	sbc	r23, r19
    1480:	84 0b       	sbc	r24, r20
    1482:	20 29       	or	r18, r0
    1484:	31 29       	or	r19, r1
    1486:	4a 2b       	or	r20, r26
    1488:	a6 95       	lsr	r26
    148a:	17 94       	ror	r1
    148c:	07 94       	ror	r0
    148e:	20 25       	eor	r18, r0
    1490:	31 25       	eor	r19, r1
    1492:	4a 27       	eor	r20, r26
    1494:	58 f7       	brcc	.-42     	; 0x146c <sqrt+0x24>
    1496:	66 0f       	add	r22, r22
    1498:	77 1f       	adc	r23, r23
    149a:	88 1f       	adc	r24, r24
    149c:	20 f0       	brcs	.+8      	; 0x14a6 <sqrt+0x5e>
    149e:	26 17       	cp	r18, r22
    14a0:	37 07       	cpc	r19, r23
    14a2:	48 07       	cpc	r20, r24
    14a4:	30 f4       	brcc	.+12     	; 0x14b2 <sqrt+0x6a>
    14a6:	62 0b       	sbc	r22, r18
    14a8:	73 0b       	sbc	r23, r19
    14aa:	84 0b       	sbc	r24, r20
    14ac:	20 0d       	add	r18, r0
    14ae:	31 1d       	adc	r19, r1
    14b0:	41 1d       	adc	r20, r1
    14b2:	a0 95       	com	r26
    14b4:	81 f7       	brne	.-32     	; 0x1496 <sqrt+0x4e>
    14b6:	b9 01       	movw	r22, r18
    14b8:	84 2f       	mov	r24, r20
    14ba:	91 58       	subi	r25, 0x81	; 129
    14bc:	88 0f       	add	r24, r24
    14be:	96 95       	lsr	r25
    14c0:	87 95       	ror	r24
    14c2:	08 95       	ret

000014c4 <__fp_mpack>:
    14c4:	9f 3f       	cpi	r25, 0xFF	; 255
    14c6:	31 f0       	breq	.+12     	; 0x14d4 <__fp_mpack_finite+0xc>

000014c8 <__fp_mpack_finite>:
    14c8:	91 50       	subi	r25, 0x01	; 1
    14ca:	20 f4       	brcc	.+8      	; 0x14d4 <__fp_mpack_finite+0xc>
    14cc:	87 95       	ror	r24
    14ce:	77 95       	ror	r23
    14d0:	67 95       	ror	r22
    14d2:	b7 95       	ror	r27
    14d4:	88 0f       	add	r24, r24
    14d6:	91 1d       	adc	r25, r1
    14d8:	96 95       	lsr	r25
    14da:	87 95       	ror	r24
    14dc:	97 f9       	bld	r25, 7
    14de:	08 95       	ret

000014e0 <__fp_norm2>:
    14e0:	91 50       	subi	r25, 0x01	; 1
    14e2:	50 40       	sbci	r21, 0x00	; 0
    14e4:	66 0f       	add	r22, r22
    14e6:	77 1f       	adc	r23, r23
    14e8:	88 1f       	adc	r24, r24
    14ea:	d2 f7       	brpl	.-12     	; 0x14e0 <__fp_norm2>
    14ec:	08 95       	ret
    14ee:	ba ce       	rjmp	.-652    	; 0x1264 <__fp_nan>

000014f0 <__fp_rempio2>:
    14f0:	19 df       	rcall	.-462    	; 0x1324 <__fp_splitA>
    14f2:	e8 f3       	brcs	.-6      	; 0x14ee <__fp_norm2+0xe>
    14f4:	e8 94       	clt
    14f6:	e0 e0       	ldi	r30, 0x00	; 0
    14f8:	bb 27       	eor	r27, r27
    14fa:	9f 57       	subi	r25, 0x7F	; 127
    14fc:	f0 f0       	brcs	.+60     	; 0x153a <__fp_rempio2+0x4a>
    14fe:	2a ed       	ldi	r18, 0xDA	; 218
    1500:	3f e0       	ldi	r19, 0x0F	; 15
    1502:	49 ec       	ldi	r20, 0xC9	; 201
    1504:	06 c0       	rjmp	.+12     	; 0x1512 <__fp_rempio2+0x22>
    1506:	ee 0f       	add	r30, r30
    1508:	bb 0f       	add	r27, r27
    150a:	66 1f       	adc	r22, r22
    150c:	77 1f       	adc	r23, r23
    150e:	88 1f       	adc	r24, r24
    1510:	28 f0       	brcs	.+10     	; 0x151c <__fp_rempio2+0x2c>
    1512:	b2 3a       	cpi	r27, 0xA2	; 162
    1514:	62 07       	cpc	r22, r18
    1516:	73 07       	cpc	r23, r19
    1518:	84 07       	cpc	r24, r20
    151a:	28 f0       	brcs	.+10     	; 0x1526 <__fp_rempio2+0x36>
    151c:	b2 5a       	subi	r27, 0xA2	; 162
    151e:	62 0b       	sbc	r22, r18
    1520:	73 0b       	sbc	r23, r19
    1522:	84 0b       	sbc	r24, r20
    1524:	e3 95       	inc	r30
    1526:	9a 95       	dec	r25
    1528:	72 f7       	brpl	.-36     	; 0x1506 <__fp_rempio2+0x16>
    152a:	80 38       	cpi	r24, 0x80	; 128
    152c:	30 f4       	brcc	.+12     	; 0x153a <__fp_rempio2+0x4a>
    152e:	9a 95       	dec	r25
    1530:	bb 0f       	add	r27, r27
    1532:	66 1f       	adc	r22, r22
    1534:	77 1f       	adc	r23, r23
    1536:	88 1f       	adc	r24, r24
    1538:	d2 f7       	brpl	.-12     	; 0x152e <__fp_rempio2+0x3e>
    153a:	90 48       	sbci	r25, 0x80	; 128
    153c:	c5 cf       	rjmp	.-118    	; 0x14c8 <__fp_mpack_finite>

0000153e <__fp_sinus>:
    153e:	ef 93       	push	r30
    1540:	e0 ff       	sbrs	r30, 0
    1542:	06 c0       	rjmp	.+12     	; 0x1550 <__fp_sinus+0x12>
    1544:	a2 ea       	ldi	r26, 0xA2	; 162
    1546:	2a ed       	ldi	r18, 0xDA	; 218
    1548:	3f e0       	ldi	r19, 0x0F	; 15
    154a:	49 ec       	ldi	r20, 0xC9	; 201
    154c:	5f eb       	ldi	r21, 0xBF	; 191
    154e:	01 dd       	rcall	.-1534   	; 0xf52 <__addsf3x>
    1550:	d0 de       	rcall	.-608    	; 0x12f2 <__fp_round>
    1552:	0f 90       	pop	r0
    1554:	03 94       	inc	r0
    1556:	01 fc       	sbrc	r0, 1
    1558:	90 58       	subi	r25, 0x80	; 128
    155a:	e0 e2       	ldi	r30, 0x20	; 32
    155c:	f1 e0       	ldi	r31, 0x01	; 1
    155e:	aa ce       	rjmp	.-684    	; 0x12b4 <__fp_powsodd>

00001560 <__divmodhi4>:
    1560:	97 fb       	bst	r25, 7
    1562:	07 2e       	mov	r0, r23
    1564:	16 f4       	brtc	.+4      	; 0x156a <__divmodhi4+0xa>
    1566:	00 94       	com	r0
    1568:	06 d0       	rcall	.+12     	; 0x1576 <__divmodhi4_neg1>
    156a:	77 fd       	sbrc	r23, 7
    156c:	08 d0       	rcall	.+16     	; 0x157e <__divmodhi4_neg2>
    156e:	27 d0       	rcall	.+78     	; 0x15be <__udivmodhi4>
    1570:	07 fc       	sbrc	r0, 7
    1572:	05 d0       	rcall	.+10     	; 0x157e <__divmodhi4_neg2>
    1574:	3e f4       	brtc	.+14     	; 0x1584 <__divmodhi4_exit>

00001576 <__divmodhi4_neg1>:
    1576:	90 95       	com	r25
    1578:	81 95       	neg	r24
    157a:	9f 4f       	sbci	r25, 0xFF	; 255
    157c:	08 95       	ret

0000157e <__divmodhi4_neg2>:
    157e:	70 95       	com	r23
    1580:	61 95       	neg	r22
    1582:	7f 4f       	sbci	r23, 0xFF	; 255

00001584 <__divmodhi4_exit>:
    1584:	08 95       	ret

00001586 <__divmodsi4>:
    1586:	05 2e       	mov	r0, r21
    1588:	97 fb       	bst	r25, 7
    158a:	16 f4       	brtc	.+4      	; 0x1590 <__divmodsi4+0xa>
    158c:	00 94       	com	r0
    158e:	0f d0       	rcall	.+30     	; 0x15ae <__negsi2>
    1590:	57 fd       	sbrc	r21, 7
    1592:	05 d0       	rcall	.+10     	; 0x159e <__divmodsi4_neg2>
    1594:	28 d0       	rcall	.+80     	; 0x15e6 <__udivmodsi4>
    1596:	07 fc       	sbrc	r0, 7
    1598:	02 d0       	rcall	.+4      	; 0x159e <__divmodsi4_neg2>
    159a:	46 f4       	brtc	.+16     	; 0x15ac <__divmodsi4_exit>
    159c:	08 c0       	rjmp	.+16     	; 0x15ae <__negsi2>

0000159e <__divmodsi4_neg2>:
    159e:	50 95       	com	r21
    15a0:	40 95       	com	r20
    15a2:	30 95       	com	r19
    15a4:	21 95       	neg	r18
    15a6:	3f 4f       	sbci	r19, 0xFF	; 255
    15a8:	4f 4f       	sbci	r20, 0xFF	; 255
    15aa:	5f 4f       	sbci	r21, 0xFF	; 255

000015ac <__divmodsi4_exit>:
    15ac:	08 95       	ret

000015ae <__negsi2>:
    15ae:	90 95       	com	r25
    15b0:	80 95       	com	r24
    15b2:	70 95       	com	r23
    15b4:	61 95       	neg	r22
    15b6:	7f 4f       	sbci	r23, 0xFF	; 255
    15b8:	8f 4f       	sbci	r24, 0xFF	; 255
    15ba:	9f 4f       	sbci	r25, 0xFF	; 255
    15bc:	08 95       	ret

000015be <__udivmodhi4>:
    15be:	aa 1b       	sub	r26, r26
    15c0:	bb 1b       	sub	r27, r27
    15c2:	51 e1       	ldi	r21, 0x11	; 17
    15c4:	07 c0       	rjmp	.+14     	; 0x15d4 <__udivmodhi4_ep>

000015c6 <__udivmodhi4_loop>:
    15c6:	aa 1f       	adc	r26, r26
    15c8:	bb 1f       	adc	r27, r27
    15ca:	a6 17       	cp	r26, r22
    15cc:	b7 07       	cpc	r27, r23
    15ce:	10 f0       	brcs	.+4      	; 0x15d4 <__udivmodhi4_ep>
    15d0:	a6 1b       	sub	r26, r22
    15d2:	b7 0b       	sbc	r27, r23

000015d4 <__udivmodhi4_ep>:
    15d4:	88 1f       	adc	r24, r24
    15d6:	99 1f       	adc	r25, r25
    15d8:	5a 95       	dec	r21
    15da:	a9 f7       	brne	.-22     	; 0x15c6 <__udivmodhi4_loop>
    15dc:	80 95       	com	r24
    15de:	90 95       	com	r25
    15e0:	bc 01       	movw	r22, r24
    15e2:	cd 01       	movw	r24, r26
    15e4:	08 95       	ret

000015e6 <__udivmodsi4>:
    15e6:	a1 e2       	ldi	r26, 0x21	; 33
    15e8:	1a 2e       	mov	r1, r26
    15ea:	aa 1b       	sub	r26, r26
    15ec:	bb 1b       	sub	r27, r27
    15ee:	fd 01       	movw	r30, r26
    15f0:	0d c0       	rjmp	.+26     	; 0x160c <__udivmodsi4_ep>

000015f2 <__udivmodsi4_loop>:
    15f2:	aa 1f       	adc	r26, r26
    15f4:	bb 1f       	adc	r27, r27
    15f6:	ee 1f       	adc	r30, r30
    15f8:	ff 1f       	adc	r31, r31
    15fa:	a2 17       	cp	r26, r18
    15fc:	b3 07       	cpc	r27, r19
    15fe:	e4 07       	cpc	r30, r20
    1600:	f5 07       	cpc	r31, r21
    1602:	20 f0       	brcs	.+8      	; 0x160c <__udivmodsi4_ep>
    1604:	a2 1b       	sub	r26, r18
    1606:	b3 0b       	sbc	r27, r19
    1608:	e4 0b       	sbc	r30, r20
    160a:	f5 0b       	sbc	r31, r21

0000160c <__udivmodsi4_ep>:
    160c:	66 1f       	adc	r22, r22
    160e:	77 1f       	adc	r23, r23
    1610:	88 1f       	adc	r24, r24
    1612:	99 1f       	adc	r25, r25
    1614:	1a 94       	dec	r1
    1616:	69 f7       	brne	.-38     	; 0x15f2 <__udivmodsi4_loop>
    1618:	60 95       	com	r22
    161a:	70 95       	com	r23
    161c:	80 95       	com	r24
    161e:	90 95       	com	r25
    1620:	9b 01       	movw	r18, r22
    1622:	ac 01       	movw	r20, r24
    1624:	bd 01       	movw	r22, r26
    1626:	cf 01       	movw	r24, r30
    1628:	08 95       	ret

0000162a <__itoa_ncheck>:
    162a:	bb 27       	eor	r27, r27
    162c:	4a 30       	cpi	r20, 0x0A	; 10
    162e:	31 f4       	brne	.+12     	; 0x163c <__itoa_ncheck+0x12>
    1630:	99 23       	and	r25, r25
    1632:	22 f4       	brpl	.+8      	; 0x163c <__itoa_ncheck+0x12>
    1634:	bd e2       	ldi	r27, 0x2D	; 45
    1636:	90 95       	com	r25
    1638:	81 95       	neg	r24
    163a:	9f 4f       	sbci	r25, 0xFF	; 255
    163c:	01 c0       	rjmp	.+2      	; 0x1640 <__utoa_common>

0000163e <__utoa_ncheck>:
    163e:	bb 27       	eor	r27, r27

00001640 <__utoa_common>:
    1640:	fb 01       	movw	r30, r22
    1642:	55 27       	eor	r21, r21
    1644:	aa 27       	eor	r26, r26
    1646:	88 0f       	add	r24, r24
    1648:	99 1f       	adc	r25, r25
    164a:	aa 1f       	adc	r26, r26
    164c:	a4 17       	cp	r26, r20
    164e:	10 f0       	brcs	.+4      	; 0x1654 <__utoa_common+0x14>
    1650:	a4 1b       	sub	r26, r20
    1652:	83 95       	inc	r24
    1654:	50 51       	subi	r21, 0x10	; 16
    1656:	b9 f7       	brne	.-18     	; 0x1646 <__utoa_common+0x6>
    1658:	a0 5d       	subi	r26, 0xD0	; 208
    165a:	aa 33       	cpi	r26, 0x3A	; 58
    165c:	08 f0       	brcs	.+2      	; 0x1660 <__utoa_common+0x20>
    165e:	a9 5d       	subi	r26, 0xD9	; 217
    1660:	a1 93       	st	Z+, r26
    1662:	00 97       	sbiw	r24, 0x00	; 0
    1664:	79 f7       	brne	.-34     	; 0x1644 <__utoa_common+0x4>
    1666:	b1 11       	cpse	r27, r1
    1668:	b1 93       	st	Z+, r27
    166a:	11 92       	st	Z+, r1
    166c:	cb 01       	movw	r24, r22
    166e:	e7 c3       	rjmp	.+1998   	; 0x1e3e <strrev>

00001670 <fdevopen>:
    1670:	0f 93       	push	r16
    1672:	1f 93       	push	r17
    1674:	cf 93       	push	r28
    1676:	df 93       	push	r29
    1678:	00 97       	sbiw	r24, 0x00	; 0
    167a:	31 f4       	brne	.+12     	; 0x1688 <fdevopen+0x18>
    167c:	61 15       	cp	r22, r1
    167e:	71 05       	cpc	r23, r1
    1680:	19 f4       	brne	.+6      	; 0x1688 <fdevopen+0x18>
    1682:	80 e0       	ldi	r24, 0x00	; 0
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	39 c0       	rjmp	.+114    	; 0x16fa <fdevopen+0x8a>
    1688:	8b 01       	movw	r16, r22
    168a:	ec 01       	movw	r28, r24
    168c:	6e e0       	ldi	r22, 0x0E	; 14
    168e:	70 e0       	ldi	r23, 0x00	; 0
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	7c d2       	rcall	.+1272   	; 0x1b8e <calloc>
    1696:	fc 01       	movw	r30, r24
    1698:	89 2b       	or	r24, r25
    169a:	99 f3       	breq	.-26     	; 0x1682 <fdevopen+0x12>
    169c:	80 e8       	ldi	r24, 0x80	; 128
    169e:	83 83       	std	Z+3, r24	; 0x03
    16a0:	01 15       	cp	r16, r1
    16a2:	11 05       	cpc	r17, r1
    16a4:	71 f0       	breq	.+28     	; 0x16c2 <fdevopen+0x52>
    16a6:	13 87       	std	Z+11, r17	; 0x0b
    16a8:	02 87       	std	Z+10, r16	; 0x0a
    16aa:	81 e8       	ldi	r24, 0x81	; 129
    16ac:	83 83       	std	Z+3, r24	; 0x03
    16ae:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <__iob>
    16b2:	90 91 18 04 	lds	r25, 0x0418	; 0x800418 <__iob+0x1>
    16b6:	89 2b       	or	r24, r25
    16b8:	21 f4       	brne	.+8      	; 0x16c2 <fdevopen+0x52>
    16ba:	f0 93 18 04 	sts	0x0418, r31	; 0x800418 <__iob+0x1>
    16be:	e0 93 17 04 	sts	0x0417, r30	; 0x800417 <__iob>
    16c2:	20 97       	sbiw	r28, 0x00	; 0
    16c4:	c9 f0       	breq	.+50     	; 0x16f8 <fdevopen+0x88>
    16c6:	d1 87       	std	Z+9, r29	; 0x09
    16c8:	c0 87       	std	Z+8, r28	; 0x08
    16ca:	83 81       	ldd	r24, Z+3	; 0x03
    16cc:	82 60       	ori	r24, 0x02	; 2
    16ce:	83 83       	std	Z+3, r24	; 0x03
    16d0:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <__iob+0x2>
    16d4:	90 91 1a 04 	lds	r25, 0x041A	; 0x80041a <__iob+0x3>
    16d8:	89 2b       	or	r24, r25
    16da:	71 f4       	brne	.+28     	; 0x16f8 <fdevopen+0x88>
    16dc:	f0 93 1a 04 	sts	0x041A, r31	; 0x80041a <__iob+0x3>
    16e0:	e0 93 19 04 	sts	0x0419, r30	; 0x800419 <__iob+0x2>
    16e4:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <__iob+0x4>
    16e8:	90 91 1c 04 	lds	r25, 0x041C	; 0x80041c <__iob+0x5>
    16ec:	89 2b       	or	r24, r25
    16ee:	21 f4       	brne	.+8      	; 0x16f8 <fdevopen+0x88>
    16f0:	f0 93 1c 04 	sts	0x041C, r31	; 0x80041c <__iob+0x5>
    16f4:	e0 93 1b 04 	sts	0x041B, r30	; 0x80041b <__iob+0x4>
    16f8:	cf 01       	movw	r24, r30
    16fa:	df 91       	pop	r29
    16fc:	cf 91       	pop	r28
    16fe:	1f 91       	pop	r17
    1700:	0f 91       	pop	r16
    1702:	08 95       	ret

00001704 <printf>:
    1704:	cf 93       	push	r28
    1706:	df 93       	push	r29
    1708:	cd b7       	in	r28, 0x3d	; 61
    170a:	de b7       	in	r29, 0x3e	; 62
    170c:	ae 01       	movw	r20, r28
    170e:	4a 5f       	subi	r20, 0xFA	; 250
    1710:	5f 4f       	sbci	r21, 0xFF	; 255
    1712:	fa 01       	movw	r30, r20
    1714:	61 91       	ld	r22, Z+
    1716:	71 91       	ld	r23, Z+
    1718:	af 01       	movw	r20, r30
    171a:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <__iob+0x2>
    171e:	90 91 1a 04 	lds	r25, 0x041A	; 0x80041a <__iob+0x3>
    1722:	38 d0       	rcall	.+112    	; 0x1794 <vfprintf>
    1724:	df 91       	pop	r29
    1726:	cf 91       	pop	r28
    1728:	08 95       	ret

0000172a <putchar>:
    172a:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <__iob+0x2>
    172e:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <__iob+0x3>
    1732:	95 c3       	rjmp	.+1834   	; 0x1e5e <fputc>

00001734 <puts>:
    1734:	0f 93       	push	r16
    1736:	1f 93       	push	r17
    1738:	cf 93       	push	r28
    173a:	df 93       	push	r29
    173c:	e0 91 19 04 	lds	r30, 0x0419	; 0x800419 <__iob+0x2>
    1740:	f0 91 1a 04 	lds	r31, 0x041A	; 0x80041a <__iob+0x3>
    1744:	23 81       	ldd	r18, Z+3	; 0x03
    1746:	21 ff       	sbrs	r18, 1
    1748:	1b c0       	rjmp	.+54     	; 0x1780 <puts+0x4c>
    174a:	8c 01       	movw	r16, r24
    174c:	d0 e0       	ldi	r29, 0x00	; 0
    174e:	c0 e0       	ldi	r28, 0x00	; 0
    1750:	f8 01       	movw	r30, r16
    1752:	81 91       	ld	r24, Z+
    1754:	8f 01       	movw	r16, r30
    1756:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <__iob+0x2>
    175a:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <__iob+0x3>
    175e:	db 01       	movw	r26, r22
    1760:	18 96       	adiw	r26, 0x08	; 8
    1762:	ed 91       	ld	r30, X+
    1764:	fc 91       	ld	r31, X
    1766:	19 97       	sbiw	r26, 0x09	; 9
    1768:	88 23       	and	r24, r24
    176a:	31 f0       	breq	.+12     	; 0x1778 <puts+0x44>
    176c:	19 95       	eicall
    176e:	89 2b       	or	r24, r25
    1770:	79 f3       	breq	.-34     	; 0x1750 <puts+0x1c>
    1772:	df ef       	ldi	r29, 0xFF	; 255
    1774:	cf ef       	ldi	r28, 0xFF	; 255
    1776:	ec cf       	rjmp	.-40     	; 0x1750 <puts+0x1c>
    1778:	8a e0       	ldi	r24, 0x0A	; 10
    177a:	19 95       	eicall
    177c:	89 2b       	or	r24, r25
    177e:	19 f0       	breq	.+6      	; 0x1786 <puts+0x52>
    1780:	8f ef       	ldi	r24, 0xFF	; 255
    1782:	9f ef       	ldi	r25, 0xFF	; 255
    1784:	02 c0       	rjmp	.+4      	; 0x178a <puts+0x56>
    1786:	8d 2f       	mov	r24, r29
    1788:	9c 2f       	mov	r25, r28
    178a:	df 91       	pop	r29
    178c:	cf 91       	pop	r28
    178e:	1f 91       	pop	r17
    1790:	0f 91       	pop	r16
    1792:	08 95       	ret

00001794 <vfprintf>:
    1794:	2f 92       	push	r2
    1796:	3f 92       	push	r3
    1798:	4f 92       	push	r4
    179a:	5f 92       	push	r5
    179c:	6f 92       	push	r6
    179e:	7f 92       	push	r7
    17a0:	8f 92       	push	r8
    17a2:	9f 92       	push	r9
    17a4:	af 92       	push	r10
    17a6:	bf 92       	push	r11
    17a8:	cf 92       	push	r12
    17aa:	df 92       	push	r13
    17ac:	ef 92       	push	r14
    17ae:	ff 92       	push	r15
    17b0:	0f 93       	push	r16
    17b2:	1f 93       	push	r17
    17b4:	cf 93       	push	r28
    17b6:	df 93       	push	r29
    17b8:	cd b7       	in	r28, 0x3d	; 61
    17ba:	de b7       	in	r29, 0x3e	; 62
    17bc:	2b 97       	sbiw	r28, 0x0b	; 11
    17be:	0f b6       	in	r0, 0x3f	; 63
    17c0:	f8 94       	cli
    17c2:	de bf       	out	0x3e, r29	; 62
    17c4:	0f be       	out	0x3f, r0	; 63
    17c6:	cd bf       	out	0x3d, r28	; 61
    17c8:	6c 01       	movw	r12, r24
    17ca:	7b 01       	movw	r14, r22
    17cc:	8a 01       	movw	r16, r20
    17ce:	fc 01       	movw	r30, r24
    17d0:	17 82       	std	Z+7, r1	; 0x07
    17d2:	16 82       	std	Z+6, r1	; 0x06
    17d4:	83 81       	ldd	r24, Z+3	; 0x03
    17d6:	81 ff       	sbrs	r24, 1
    17d8:	bf c1       	rjmp	.+894    	; 0x1b58 <vfprintf+0x3c4>
    17da:	ce 01       	movw	r24, r28
    17dc:	01 96       	adiw	r24, 0x01	; 1
    17de:	3c 01       	movw	r6, r24
    17e0:	f6 01       	movw	r30, r12
    17e2:	93 81       	ldd	r25, Z+3	; 0x03
    17e4:	f7 01       	movw	r30, r14
    17e6:	93 fd       	sbrc	r25, 3
    17e8:	85 91       	lpm	r24, Z+
    17ea:	93 ff       	sbrs	r25, 3
    17ec:	81 91       	ld	r24, Z+
    17ee:	7f 01       	movw	r14, r30
    17f0:	88 23       	and	r24, r24
    17f2:	09 f4       	brne	.+2      	; 0x17f6 <vfprintf+0x62>
    17f4:	ad c1       	rjmp	.+858    	; 0x1b50 <vfprintf+0x3bc>
    17f6:	85 32       	cpi	r24, 0x25	; 37
    17f8:	39 f4       	brne	.+14     	; 0x1808 <vfprintf+0x74>
    17fa:	93 fd       	sbrc	r25, 3
    17fc:	85 91       	lpm	r24, Z+
    17fe:	93 ff       	sbrs	r25, 3
    1800:	81 91       	ld	r24, Z+
    1802:	7f 01       	movw	r14, r30
    1804:	85 32       	cpi	r24, 0x25	; 37
    1806:	21 f4       	brne	.+8      	; 0x1810 <vfprintf+0x7c>
    1808:	b6 01       	movw	r22, r12
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	28 d3       	rcall	.+1616   	; 0x1e5e <fputc>
    180e:	e8 cf       	rjmp	.-48     	; 0x17e0 <vfprintf+0x4c>
    1810:	91 2c       	mov	r9, r1
    1812:	21 2c       	mov	r2, r1
    1814:	31 2c       	mov	r3, r1
    1816:	ff e1       	ldi	r31, 0x1F	; 31
    1818:	f3 15       	cp	r31, r3
    181a:	d8 f0       	brcs	.+54     	; 0x1852 <vfprintf+0xbe>
    181c:	8b 32       	cpi	r24, 0x2B	; 43
    181e:	79 f0       	breq	.+30     	; 0x183e <vfprintf+0xaa>
    1820:	38 f4       	brcc	.+14     	; 0x1830 <vfprintf+0x9c>
    1822:	80 32       	cpi	r24, 0x20	; 32
    1824:	79 f0       	breq	.+30     	; 0x1844 <vfprintf+0xb0>
    1826:	83 32       	cpi	r24, 0x23	; 35
    1828:	a1 f4       	brne	.+40     	; 0x1852 <vfprintf+0xbe>
    182a:	23 2d       	mov	r18, r3
    182c:	20 61       	ori	r18, 0x10	; 16
    182e:	1d c0       	rjmp	.+58     	; 0x186a <vfprintf+0xd6>
    1830:	8d 32       	cpi	r24, 0x2D	; 45
    1832:	61 f0       	breq	.+24     	; 0x184c <vfprintf+0xb8>
    1834:	80 33       	cpi	r24, 0x30	; 48
    1836:	69 f4       	brne	.+26     	; 0x1852 <vfprintf+0xbe>
    1838:	23 2d       	mov	r18, r3
    183a:	21 60       	ori	r18, 0x01	; 1
    183c:	16 c0       	rjmp	.+44     	; 0x186a <vfprintf+0xd6>
    183e:	83 2d       	mov	r24, r3
    1840:	82 60       	ori	r24, 0x02	; 2
    1842:	38 2e       	mov	r3, r24
    1844:	e3 2d       	mov	r30, r3
    1846:	e4 60       	ori	r30, 0x04	; 4
    1848:	3e 2e       	mov	r3, r30
    184a:	2a c0       	rjmp	.+84     	; 0x18a0 <vfprintf+0x10c>
    184c:	f3 2d       	mov	r31, r3
    184e:	f8 60       	ori	r31, 0x08	; 8
    1850:	1d c0       	rjmp	.+58     	; 0x188c <vfprintf+0xf8>
    1852:	37 fc       	sbrc	r3, 7
    1854:	2d c0       	rjmp	.+90     	; 0x18b0 <vfprintf+0x11c>
    1856:	20 ed       	ldi	r18, 0xD0	; 208
    1858:	28 0f       	add	r18, r24
    185a:	2a 30       	cpi	r18, 0x0A	; 10
    185c:	40 f0       	brcs	.+16     	; 0x186e <vfprintf+0xda>
    185e:	8e 32       	cpi	r24, 0x2E	; 46
    1860:	b9 f4       	brne	.+46     	; 0x1890 <vfprintf+0xfc>
    1862:	36 fc       	sbrc	r3, 6
    1864:	75 c1       	rjmp	.+746    	; 0x1b50 <vfprintf+0x3bc>
    1866:	23 2d       	mov	r18, r3
    1868:	20 64       	ori	r18, 0x40	; 64
    186a:	32 2e       	mov	r3, r18
    186c:	19 c0       	rjmp	.+50     	; 0x18a0 <vfprintf+0x10c>
    186e:	36 fe       	sbrs	r3, 6
    1870:	06 c0       	rjmp	.+12     	; 0x187e <vfprintf+0xea>
    1872:	8a e0       	ldi	r24, 0x0A	; 10
    1874:	98 9e       	mul	r9, r24
    1876:	20 0d       	add	r18, r0
    1878:	11 24       	eor	r1, r1
    187a:	92 2e       	mov	r9, r18
    187c:	11 c0       	rjmp	.+34     	; 0x18a0 <vfprintf+0x10c>
    187e:	ea e0       	ldi	r30, 0x0A	; 10
    1880:	2e 9e       	mul	r2, r30
    1882:	20 0d       	add	r18, r0
    1884:	11 24       	eor	r1, r1
    1886:	22 2e       	mov	r2, r18
    1888:	f3 2d       	mov	r31, r3
    188a:	f0 62       	ori	r31, 0x20	; 32
    188c:	3f 2e       	mov	r3, r31
    188e:	08 c0       	rjmp	.+16     	; 0x18a0 <vfprintf+0x10c>
    1890:	8c 36       	cpi	r24, 0x6C	; 108
    1892:	21 f4       	brne	.+8      	; 0x189c <vfprintf+0x108>
    1894:	83 2d       	mov	r24, r3
    1896:	80 68       	ori	r24, 0x80	; 128
    1898:	38 2e       	mov	r3, r24
    189a:	02 c0       	rjmp	.+4      	; 0x18a0 <vfprintf+0x10c>
    189c:	88 36       	cpi	r24, 0x68	; 104
    189e:	41 f4       	brne	.+16     	; 0x18b0 <vfprintf+0x11c>
    18a0:	f7 01       	movw	r30, r14
    18a2:	93 fd       	sbrc	r25, 3
    18a4:	85 91       	lpm	r24, Z+
    18a6:	93 ff       	sbrs	r25, 3
    18a8:	81 91       	ld	r24, Z+
    18aa:	7f 01       	movw	r14, r30
    18ac:	81 11       	cpse	r24, r1
    18ae:	b3 cf       	rjmp	.-154    	; 0x1816 <vfprintf+0x82>
    18b0:	98 2f       	mov	r25, r24
    18b2:	9f 7d       	andi	r25, 0xDF	; 223
    18b4:	95 54       	subi	r25, 0x45	; 69
    18b6:	93 30       	cpi	r25, 0x03	; 3
    18b8:	28 f4       	brcc	.+10     	; 0x18c4 <vfprintf+0x130>
    18ba:	0c 5f       	subi	r16, 0xFC	; 252
    18bc:	1f 4f       	sbci	r17, 0xFF	; 255
    18be:	9f e3       	ldi	r25, 0x3F	; 63
    18c0:	99 83       	std	Y+1, r25	; 0x01
    18c2:	0d c0       	rjmp	.+26     	; 0x18de <vfprintf+0x14a>
    18c4:	83 36       	cpi	r24, 0x63	; 99
    18c6:	31 f0       	breq	.+12     	; 0x18d4 <vfprintf+0x140>
    18c8:	83 37       	cpi	r24, 0x73	; 115
    18ca:	71 f0       	breq	.+28     	; 0x18e8 <vfprintf+0x154>
    18cc:	83 35       	cpi	r24, 0x53	; 83
    18ce:	09 f0       	breq	.+2      	; 0x18d2 <vfprintf+0x13e>
    18d0:	55 c0       	rjmp	.+170    	; 0x197c <vfprintf+0x1e8>
    18d2:	20 c0       	rjmp	.+64     	; 0x1914 <vfprintf+0x180>
    18d4:	f8 01       	movw	r30, r16
    18d6:	80 81       	ld	r24, Z
    18d8:	89 83       	std	Y+1, r24	; 0x01
    18da:	0e 5f       	subi	r16, 0xFE	; 254
    18dc:	1f 4f       	sbci	r17, 0xFF	; 255
    18de:	88 24       	eor	r8, r8
    18e0:	83 94       	inc	r8
    18e2:	91 2c       	mov	r9, r1
    18e4:	53 01       	movw	r10, r6
    18e6:	12 c0       	rjmp	.+36     	; 0x190c <vfprintf+0x178>
    18e8:	28 01       	movw	r4, r16
    18ea:	f2 e0       	ldi	r31, 0x02	; 2
    18ec:	4f 0e       	add	r4, r31
    18ee:	51 1c       	adc	r5, r1
    18f0:	f8 01       	movw	r30, r16
    18f2:	a0 80       	ld	r10, Z
    18f4:	b1 80       	ldd	r11, Z+1	; 0x01
    18f6:	36 fe       	sbrs	r3, 6
    18f8:	03 c0       	rjmp	.+6      	; 0x1900 <vfprintf+0x16c>
    18fa:	69 2d       	mov	r22, r9
    18fc:	70 e0       	ldi	r23, 0x00	; 0
    18fe:	02 c0       	rjmp	.+4      	; 0x1904 <vfprintf+0x170>
    1900:	6f ef       	ldi	r22, 0xFF	; 255
    1902:	7f ef       	ldi	r23, 0xFF	; 255
    1904:	c5 01       	movw	r24, r10
    1906:	90 d2       	rcall	.+1312   	; 0x1e28 <strnlen>
    1908:	4c 01       	movw	r8, r24
    190a:	82 01       	movw	r16, r4
    190c:	f3 2d       	mov	r31, r3
    190e:	ff 77       	andi	r31, 0x7F	; 127
    1910:	3f 2e       	mov	r3, r31
    1912:	15 c0       	rjmp	.+42     	; 0x193e <vfprintf+0x1aa>
    1914:	28 01       	movw	r4, r16
    1916:	22 e0       	ldi	r18, 0x02	; 2
    1918:	42 0e       	add	r4, r18
    191a:	51 1c       	adc	r5, r1
    191c:	f8 01       	movw	r30, r16
    191e:	a0 80       	ld	r10, Z
    1920:	b1 80       	ldd	r11, Z+1	; 0x01
    1922:	36 fe       	sbrs	r3, 6
    1924:	03 c0       	rjmp	.+6      	; 0x192c <vfprintf+0x198>
    1926:	69 2d       	mov	r22, r9
    1928:	70 e0       	ldi	r23, 0x00	; 0
    192a:	02 c0       	rjmp	.+4      	; 0x1930 <vfprintf+0x19c>
    192c:	6f ef       	ldi	r22, 0xFF	; 255
    192e:	7f ef       	ldi	r23, 0xFF	; 255
    1930:	c5 01       	movw	r24, r10
    1932:	68 d2       	rcall	.+1232   	; 0x1e04 <strnlen_P>
    1934:	4c 01       	movw	r8, r24
    1936:	f3 2d       	mov	r31, r3
    1938:	f0 68       	ori	r31, 0x80	; 128
    193a:	3f 2e       	mov	r3, r31
    193c:	82 01       	movw	r16, r4
    193e:	33 fc       	sbrc	r3, 3
    1940:	19 c0       	rjmp	.+50     	; 0x1974 <vfprintf+0x1e0>
    1942:	82 2d       	mov	r24, r2
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	88 16       	cp	r8, r24
    1948:	99 06       	cpc	r9, r25
    194a:	a0 f4       	brcc	.+40     	; 0x1974 <vfprintf+0x1e0>
    194c:	b6 01       	movw	r22, r12
    194e:	80 e2       	ldi	r24, 0x20	; 32
    1950:	90 e0       	ldi	r25, 0x00	; 0
    1952:	85 d2       	rcall	.+1290   	; 0x1e5e <fputc>
    1954:	2a 94       	dec	r2
    1956:	f5 cf       	rjmp	.-22     	; 0x1942 <vfprintf+0x1ae>
    1958:	f5 01       	movw	r30, r10
    195a:	37 fc       	sbrc	r3, 7
    195c:	85 91       	lpm	r24, Z+
    195e:	37 fe       	sbrs	r3, 7
    1960:	81 91       	ld	r24, Z+
    1962:	5f 01       	movw	r10, r30
    1964:	b6 01       	movw	r22, r12
    1966:	90 e0       	ldi	r25, 0x00	; 0
    1968:	7a d2       	rcall	.+1268   	; 0x1e5e <fputc>
    196a:	21 10       	cpse	r2, r1
    196c:	2a 94       	dec	r2
    196e:	21 e0       	ldi	r18, 0x01	; 1
    1970:	82 1a       	sub	r8, r18
    1972:	91 08       	sbc	r9, r1
    1974:	81 14       	cp	r8, r1
    1976:	91 04       	cpc	r9, r1
    1978:	79 f7       	brne	.-34     	; 0x1958 <vfprintf+0x1c4>
    197a:	e1 c0       	rjmp	.+450    	; 0x1b3e <vfprintf+0x3aa>
    197c:	84 36       	cpi	r24, 0x64	; 100
    197e:	11 f0       	breq	.+4      	; 0x1984 <vfprintf+0x1f0>
    1980:	89 36       	cpi	r24, 0x69	; 105
    1982:	39 f5       	brne	.+78     	; 0x19d2 <vfprintf+0x23e>
    1984:	f8 01       	movw	r30, r16
    1986:	37 fe       	sbrs	r3, 7
    1988:	07 c0       	rjmp	.+14     	; 0x1998 <vfprintf+0x204>
    198a:	60 81       	ld	r22, Z
    198c:	71 81       	ldd	r23, Z+1	; 0x01
    198e:	82 81       	ldd	r24, Z+2	; 0x02
    1990:	93 81       	ldd	r25, Z+3	; 0x03
    1992:	0c 5f       	subi	r16, 0xFC	; 252
    1994:	1f 4f       	sbci	r17, 0xFF	; 255
    1996:	08 c0       	rjmp	.+16     	; 0x19a8 <vfprintf+0x214>
    1998:	60 81       	ld	r22, Z
    199a:	71 81       	ldd	r23, Z+1	; 0x01
    199c:	07 2e       	mov	r0, r23
    199e:	00 0c       	add	r0, r0
    19a0:	88 0b       	sbc	r24, r24
    19a2:	99 0b       	sbc	r25, r25
    19a4:	0e 5f       	subi	r16, 0xFE	; 254
    19a6:	1f 4f       	sbci	r17, 0xFF	; 255
    19a8:	f3 2d       	mov	r31, r3
    19aa:	ff 76       	andi	r31, 0x6F	; 111
    19ac:	3f 2e       	mov	r3, r31
    19ae:	97 ff       	sbrs	r25, 7
    19b0:	09 c0       	rjmp	.+18     	; 0x19c4 <vfprintf+0x230>
    19b2:	90 95       	com	r25
    19b4:	80 95       	com	r24
    19b6:	70 95       	com	r23
    19b8:	61 95       	neg	r22
    19ba:	7f 4f       	sbci	r23, 0xFF	; 255
    19bc:	8f 4f       	sbci	r24, 0xFF	; 255
    19be:	9f 4f       	sbci	r25, 0xFF	; 255
    19c0:	f0 68       	ori	r31, 0x80	; 128
    19c2:	3f 2e       	mov	r3, r31
    19c4:	2a e0       	ldi	r18, 0x0A	; 10
    19c6:	30 e0       	ldi	r19, 0x00	; 0
    19c8:	a3 01       	movw	r20, r6
    19ca:	85 d2       	rcall	.+1290   	; 0x1ed6 <__ultoa_invert>
    19cc:	88 2e       	mov	r8, r24
    19ce:	86 18       	sub	r8, r6
    19d0:	44 c0       	rjmp	.+136    	; 0x1a5a <vfprintf+0x2c6>
    19d2:	85 37       	cpi	r24, 0x75	; 117
    19d4:	31 f4       	brne	.+12     	; 0x19e2 <vfprintf+0x24e>
    19d6:	23 2d       	mov	r18, r3
    19d8:	2f 7e       	andi	r18, 0xEF	; 239
    19da:	b2 2e       	mov	r11, r18
    19dc:	2a e0       	ldi	r18, 0x0A	; 10
    19de:	30 e0       	ldi	r19, 0x00	; 0
    19e0:	25 c0       	rjmp	.+74     	; 0x1a2c <vfprintf+0x298>
    19e2:	93 2d       	mov	r25, r3
    19e4:	99 7f       	andi	r25, 0xF9	; 249
    19e6:	b9 2e       	mov	r11, r25
    19e8:	8f 36       	cpi	r24, 0x6F	; 111
    19ea:	c1 f0       	breq	.+48     	; 0x1a1c <vfprintf+0x288>
    19ec:	18 f4       	brcc	.+6      	; 0x19f4 <vfprintf+0x260>
    19ee:	88 35       	cpi	r24, 0x58	; 88
    19f0:	79 f0       	breq	.+30     	; 0x1a10 <vfprintf+0x27c>
    19f2:	ae c0       	rjmp	.+348    	; 0x1b50 <vfprintf+0x3bc>
    19f4:	80 37       	cpi	r24, 0x70	; 112
    19f6:	19 f0       	breq	.+6      	; 0x19fe <vfprintf+0x26a>
    19f8:	88 37       	cpi	r24, 0x78	; 120
    19fa:	21 f0       	breq	.+8      	; 0x1a04 <vfprintf+0x270>
    19fc:	a9 c0       	rjmp	.+338    	; 0x1b50 <vfprintf+0x3bc>
    19fe:	e9 2f       	mov	r30, r25
    1a00:	e0 61       	ori	r30, 0x10	; 16
    1a02:	be 2e       	mov	r11, r30
    1a04:	b4 fe       	sbrs	r11, 4
    1a06:	0d c0       	rjmp	.+26     	; 0x1a22 <vfprintf+0x28e>
    1a08:	fb 2d       	mov	r31, r11
    1a0a:	f4 60       	ori	r31, 0x04	; 4
    1a0c:	bf 2e       	mov	r11, r31
    1a0e:	09 c0       	rjmp	.+18     	; 0x1a22 <vfprintf+0x28e>
    1a10:	34 fe       	sbrs	r3, 4
    1a12:	0a c0       	rjmp	.+20     	; 0x1a28 <vfprintf+0x294>
    1a14:	29 2f       	mov	r18, r25
    1a16:	26 60       	ori	r18, 0x06	; 6
    1a18:	b2 2e       	mov	r11, r18
    1a1a:	06 c0       	rjmp	.+12     	; 0x1a28 <vfprintf+0x294>
    1a1c:	28 e0       	ldi	r18, 0x08	; 8
    1a1e:	30 e0       	ldi	r19, 0x00	; 0
    1a20:	05 c0       	rjmp	.+10     	; 0x1a2c <vfprintf+0x298>
    1a22:	20 e1       	ldi	r18, 0x10	; 16
    1a24:	30 e0       	ldi	r19, 0x00	; 0
    1a26:	02 c0       	rjmp	.+4      	; 0x1a2c <vfprintf+0x298>
    1a28:	20 e1       	ldi	r18, 0x10	; 16
    1a2a:	32 e0       	ldi	r19, 0x02	; 2
    1a2c:	f8 01       	movw	r30, r16
    1a2e:	b7 fe       	sbrs	r11, 7
    1a30:	07 c0       	rjmp	.+14     	; 0x1a40 <vfprintf+0x2ac>
    1a32:	60 81       	ld	r22, Z
    1a34:	71 81       	ldd	r23, Z+1	; 0x01
    1a36:	82 81       	ldd	r24, Z+2	; 0x02
    1a38:	93 81       	ldd	r25, Z+3	; 0x03
    1a3a:	0c 5f       	subi	r16, 0xFC	; 252
    1a3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a3e:	06 c0       	rjmp	.+12     	; 0x1a4c <vfprintf+0x2b8>
    1a40:	60 81       	ld	r22, Z
    1a42:	71 81       	ldd	r23, Z+1	; 0x01
    1a44:	80 e0       	ldi	r24, 0x00	; 0
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	0e 5f       	subi	r16, 0xFE	; 254
    1a4a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a4c:	a3 01       	movw	r20, r6
    1a4e:	43 d2       	rcall	.+1158   	; 0x1ed6 <__ultoa_invert>
    1a50:	88 2e       	mov	r8, r24
    1a52:	86 18       	sub	r8, r6
    1a54:	fb 2d       	mov	r31, r11
    1a56:	ff 77       	andi	r31, 0x7F	; 127
    1a58:	3f 2e       	mov	r3, r31
    1a5a:	36 fe       	sbrs	r3, 6
    1a5c:	0d c0       	rjmp	.+26     	; 0x1a78 <vfprintf+0x2e4>
    1a5e:	23 2d       	mov	r18, r3
    1a60:	2e 7f       	andi	r18, 0xFE	; 254
    1a62:	a2 2e       	mov	r10, r18
    1a64:	89 14       	cp	r8, r9
    1a66:	58 f4       	brcc	.+22     	; 0x1a7e <vfprintf+0x2ea>
    1a68:	34 fe       	sbrs	r3, 4
    1a6a:	0b c0       	rjmp	.+22     	; 0x1a82 <vfprintf+0x2ee>
    1a6c:	32 fc       	sbrc	r3, 2
    1a6e:	09 c0       	rjmp	.+18     	; 0x1a82 <vfprintf+0x2ee>
    1a70:	83 2d       	mov	r24, r3
    1a72:	8e 7e       	andi	r24, 0xEE	; 238
    1a74:	a8 2e       	mov	r10, r24
    1a76:	05 c0       	rjmp	.+10     	; 0x1a82 <vfprintf+0x2ee>
    1a78:	b8 2c       	mov	r11, r8
    1a7a:	a3 2c       	mov	r10, r3
    1a7c:	03 c0       	rjmp	.+6      	; 0x1a84 <vfprintf+0x2f0>
    1a7e:	b8 2c       	mov	r11, r8
    1a80:	01 c0       	rjmp	.+2      	; 0x1a84 <vfprintf+0x2f0>
    1a82:	b9 2c       	mov	r11, r9
    1a84:	a4 fe       	sbrs	r10, 4
    1a86:	0f c0       	rjmp	.+30     	; 0x1aa6 <vfprintf+0x312>
    1a88:	fe 01       	movw	r30, r28
    1a8a:	e8 0d       	add	r30, r8
    1a8c:	f1 1d       	adc	r31, r1
    1a8e:	80 81       	ld	r24, Z
    1a90:	80 33       	cpi	r24, 0x30	; 48
    1a92:	21 f4       	brne	.+8      	; 0x1a9c <vfprintf+0x308>
    1a94:	9a 2d       	mov	r25, r10
    1a96:	99 7e       	andi	r25, 0xE9	; 233
    1a98:	a9 2e       	mov	r10, r25
    1a9a:	09 c0       	rjmp	.+18     	; 0x1aae <vfprintf+0x31a>
    1a9c:	a2 fe       	sbrs	r10, 2
    1a9e:	06 c0       	rjmp	.+12     	; 0x1aac <vfprintf+0x318>
    1aa0:	b3 94       	inc	r11
    1aa2:	b3 94       	inc	r11
    1aa4:	04 c0       	rjmp	.+8      	; 0x1aae <vfprintf+0x31a>
    1aa6:	8a 2d       	mov	r24, r10
    1aa8:	86 78       	andi	r24, 0x86	; 134
    1aaa:	09 f0       	breq	.+2      	; 0x1aae <vfprintf+0x31a>
    1aac:	b3 94       	inc	r11
    1aae:	a3 fc       	sbrc	r10, 3
    1ab0:	10 c0       	rjmp	.+32     	; 0x1ad2 <vfprintf+0x33e>
    1ab2:	a0 fe       	sbrs	r10, 0
    1ab4:	06 c0       	rjmp	.+12     	; 0x1ac2 <vfprintf+0x32e>
    1ab6:	b2 14       	cp	r11, r2
    1ab8:	80 f4       	brcc	.+32     	; 0x1ada <vfprintf+0x346>
    1aba:	28 0c       	add	r2, r8
    1abc:	92 2c       	mov	r9, r2
    1abe:	9b 18       	sub	r9, r11
    1ac0:	0d c0       	rjmp	.+26     	; 0x1adc <vfprintf+0x348>
    1ac2:	b2 14       	cp	r11, r2
    1ac4:	58 f4       	brcc	.+22     	; 0x1adc <vfprintf+0x348>
    1ac6:	b6 01       	movw	r22, r12
    1ac8:	80 e2       	ldi	r24, 0x20	; 32
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	c8 d1       	rcall	.+912    	; 0x1e5e <fputc>
    1ace:	b3 94       	inc	r11
    1ad0:	f8 cf       	rjmp	.-16     	; 0x1ac2 <vfprintf+0x32e>
    1ad2:	b2 14       	cp	r11, r2
    1ad4:	18 f4       	brcc	.+6      	; 0x1adc <vfprintf+0x348>
    1ad6:	2b 18       	sub	r2, r11
    1ad8:	02 c0       	rjmp	.+4      	; 0x1ade <vfprintf+0x34a>
    1ada:	98 2c       	mov	r9, r8
    1adc:	21 2c       	mov	r2, r1
    1ade:	a4 fe       	sbrs	r10, 4
    1ae0:	0f c0       	rjmp	.+30     	; 0x1b00 <vfprintf+0x36c>
    1ae2:	b6 01       	movw	r22, r12
    1ae4:	80 e3       	ldi	r24, 0x30	; 48
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	ba d1       	rcall	.+884    	; 0x1e5e <fputc>
    1aea:	a2 fe       	sbrs	r10, 2
    1aec:	16 c0       	rjmp	.+44     	; 0x1b1a <vfprintf+0x386>
    1aee:	a1 fc       	sbrc	r10, 1
    1af0:	03 c0       	rjmp	.+6      	; 0x1af8 <vfprintf+0x364>
    1af2:	88 e7       	ldi	r24, 0x78	; 120
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	02 c0       	rjmp	.+4      	; 0x1afc <vfprintf+0x368>
    1af8:	88 e5       	ldi	r24, 0x58	; 88
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	b6 01       	movw	r22, r12
    1afe:	0c c0       	rjmp	.+24     	; 0x1b18 <vfprintf+0x384>
    1b00:	8a 2d       	mov	r24, r10
    1b02:	86 78       	andi	r24, 0x86	; 134
    1b04:	51 f0       	breq	.+20     	; 0x1b1a <vfprintf+0x386>
    1b06:	a1 fe       	sbrs	r10, 1
    1b08:	02 c0       	rjmp	.+4      	; 0x1b0e <vfprintf+0x37a>
    1b0a:	8b e2       	ldi	r24, 0x2B	; 43
    1b0c:	01 c0       	rjmp	.+2      	; 0x1b10 <vfprintf+0x37c>
    1b0e:	80 e2       	ldi	r24, 0x20	; 32
    1b10:	a7 fc       	sbrc	r10, 7
    1b12:	8d e2       	ldi	r24, 0x2D	; 45
    1b14:	b6 01       	movw	r22, r12
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	a2 d1       	rcall	.+836    	; 0x1e5e <fputc>
    1b1a:	89 14       	cp	r8, r9
    1b1c:	30 f4       	brcc	.+12     	; 0x1b2a <vfprintf+0x396>
    1b1e:	b6 01       	movw	r22, r12
    1b20:	80 e3       	ldi	r24, 0x30	; 48
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	9c d1       	rcall	.+824    	; 0x1e5e <fputc>
    1b26:	9a 94       	dec	r9
    1b28:	f8 cf       	rjmp	.-16     	; 0x1b1a <vfprintf+0x386>
    1b2a:	8a 94       	dec	r8
    1b2c:	f3 01       	movw	r30, r6
    1b2e:	e8 0d       	add	r30, r8
    1b30:	f1 1d       	adc	r31, r1
    1b32:	80 81       	ld	r24, Z
    1b34:	b6 01       	movw	r22, r12
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	92 d1       	rcall	.+804    	; 0x1e5e <fputc>
    1b3a:	81 10       	cpse	r8, r1
    1b3c:	f6 cf       	rjmp	.-20     	; 0x1b2a <vfprintf+0x396>
    1b3e:	22 20       	and	r2, r2
    1b40:	09 f4       	brne	.+2      	; 0x1b44 <vfprintf+0x3b0>
    1b42:	4e ce       	rjmp	.-868    	; 0x17e0 <vfprintf+0x4c>
    1b44:	b6 01       	movw	r22, r12
    1b46:	80 e2       	ldi	r24, 0x20	; 32
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	89 d1       	rcall	.+786    	; 0x1e5e <fputc>
    1b4c:	2a 94       	dec	r2
    1b4e:	f7 cf       	rjmp	.-18     	; 0x1b3e <vfprintf+0x3aa>
    1b50:	f6 01       	movw	r30, r12
    1b52:	86 81       	ldd	r24, Z+6	; 0x06
    1b54:	97 81       	ldd	r25, Z+7	; 0x07
    1b56:	02 c0       	rjmp	.+4      	; 0x1b5c <vfprintf+0x3c8>
    1b58:	8f ef       	ldi	r24, 0xFF	; 255
    1b5a:	9f ef       	ldi	r25, 0xFF	; 255
    1b5c:	2b 96       	adiw	r28, 0x0b	; 11
    1b5e:	0f b6       	in	r0, 0x3f	; 63
    1b60:	f8 94       	cli
    1b62:	de bf       	out	0x3e, r29	; 62
    1b64:	0f be       	out	0x3f, r0	; 63
    1b66:	cd bf       	out	0x3d, r28	; 61
    1b68:	df 91       	pop	r29
    1b6a:	cf 91       	pop	r28
    1b6c:	1f 91       	pop	r17
    1b6e:	0f 91       	pop	r16
    1b70:	ff 90       	pop	r15
    1b72:	ef 90       	pop	r14
    1b74:	df 90       	pop	r13
    1b76:	cf 90       	pop	r12
    1b78:	bf 90       	pop	r11
    1b7a:	af 90       	pop	r10
    1b7c:	9f 90       	pop	r9
    1b7e:	8f 90       	pop	r8
    1b80:	7f 90       	pop	r7
    1b82:	6f 90       	pop	r6
    1b84:	5f 90       	pop	r5
    1b86:	4f 90       	pop	r4
    1b88:	3f 90       	pop	r3
    1b8a:	2f 90       	pop	r2
    1b8c:	08 95       	ret

00001b8e <calloc>:
    1b8e:	0f 93       	push	r16
    1b90:	1f 93       	push	r17
    1b92:	cf 93       	push	r28
    1b94:	df 93       	push	r29
    1b96:	86 9f       	mul	r24, r22
    1b98:	80 01       	movw	r16, r0
    1b9a:	87 9f       	mul	r24, r23
    1b9c:	10 0d       	add	r17, r0
    1b9e:	96 9f       	mul	r25, r22
    1ba0:	10 0d       	add	r17, r0
    1ba2:	11 24       	eor	r1, r1
    1ba4:	c8 01       	movw	r24, r16
    1ba6:	0d d0       	rcall	.+26     	; 0x1bc2 <malloc>
    1ba8:	ec 01       	movw	r28, r24
    1baa:	00 97       	sbiw	r24, 0x00	; 0
    1bac:	21 f0       	breq	.+8      	; 0x1bb6 <calloc+0x28>
    1bae:	a8 01       	movw	r20, r16
    1bb0:	60 e0       	ldi	r22, 0x00	; 0
    1bb2:	70 e0       	ldi	r23, 0x00	; 0
    1bb4:	32 d1       	rcall	.+612    	; 0x1e1a <memset>
    1bb6:	ce 01       	movw	r24, r28
    1bb8:	df 91       	pop	r29
    1bba:	cf 91       	pop	r28
    1bbc:	1f 91       	pop	r17
    1bbe:	0f 91       	pop	r16
    1bc0:	08 95       	ret

00001bc2 <malloc>:
    1bc2:	0f 93       	push	r16
    1bc4:	1f 93       	push	r17
    1bc6:	cf 93       	push	r28
    1bc8:	df 93       	push	r29
    1bca:	82 30       	cpi	r24, 0x02	; 2
    1bcc:	91 05       	cpc	r25, r1
    1bce:	10 f4       	brcc	.+4      	; 0x1bd4 <malloc+0x12>
    1bd0:	82 e0       	ldi	r24, 0x02	; 2
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	e0 91 1f 04 	lds	r30, 0x041F	; 0x80041f <__flp>
    1bd8:	f0 91 20 04 	lds	r31, 0x0420	; 0x800420 <__flp+0x1>
    1bdc:	20 e0       	ldi	r18, 0x00	; 0
    1bde:	30 e0       	ldi	r19, 0x00	; 0
    1be0:	a0 e0       	ldi	r26, 0x00	; 0
    1be2:	b0 e0       	ldi	r27, 0x00	; 0
    1be4:	30 97       	sbiw	r30, 0x00	; 0
    1be6:	19 f1       	breq	.+70     	; 0x1c2e <malloc+0x6c>
    1be8:	40 81       	ld	r20, Z
    1bea:	51 81       	ldd	r21, Z+1	; 0x01
    1bec:	02 81       	ldd	r16, Z+2	; 0x02
    1bee:	13 81       	ldd	r17, Z+3	; 0x03
    1bf0:	48 17       	cp	r20, r24
    1bf2:	59 07       	cpc	r21, r25
    1bf4:	c8 f0       	brcs	.+50     	; 0x1c28 <malloc+0x66>
    1bf6:	84 17       	cp	r24, r20
    1bf8:	95 07       	cpc	r25, r21
    1bfa:	69 f4       	brne	.+26     	; 0x1c16 <malloc+0x54>
    1bfc:	10 97       	sbiw	r26, 0x00	; 0
    1bfe:	31 f0       	breq	.+12     	; 0x1c0c <malloc+0x4a>
    1c00:	12 96       	adiw	r26, 0x02	; 2
    1c02:	0c 93       	st	X, r16
    1c04:	12 97       	sbiw	r26, 0x02	; 2
    1c06:	13 96       	adiw	r26, 0x03	; 3
    1c08:	1c 93       	st	X, r17
    1c0a:	27 c0       	rjmp	.+78     	; 0x1c5a <malloc+0x98>
    1c0c:	00 93 1f 04 	sts	0x041F, r16	; 0x80041f <__flp>
    1c10:	10 93 20 04 	sts	0x0420, r17	; 0x800420 <__flp+0x1>
    1c14:	22 c0       	rjmp	.+68     	; 0x1c5a <malloc+0x98>
    1c16:	21 15       	cp	r18, r1
    1c18:	31 05       	cpc	r19, r1
    1c1a:	19 f0       	breq	.+6      	; 0x1c22 <malloc+0x60>
    1c1c:	42 17       	cp	r20, r18
    1c1e:	53 07       	cpc	r21, r19
    1c20:	18 f4       	brcc	.+6      	; 0x1c28 <malloc+0x66>
    1c22:	9a 01       	movw	r18, r20
    1c24:	bd 01       	movw	r22, r26
    1c26:	ef 01       	movw	r28, r30
    1c28:	df 01       	movw	r26, r30
    1c2a:	f8 01       	movw	r30, r16
    1c2c:	db cf       	rjmp	.-74     	; 0x1be4 <malloc+0x22>
    1c2e:	21 15       	cp	r18, r1
    1c30:	31 05       	cpc	r19, r1
    1c32:	f9 f0       	breq	.+62     	; 0x1c72 <malloc+0xb0>
    1c34:	28 1b       	sub	r18, r24
    1c36:	39 0b       	sbc	r19, r25
    1c38:	24 30       	cpi	r18, 0x04	; 4
    1c3a:	31 05       	cpc	r19, r1
    1c3c:	80 f4       	brcc	.+32     	; 0x1c5e <malloc+0x9c>
    1c3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c40:	9b 81       	ldd	r25, Y+3	; 0x03
    1c42:	61 15       	cp	r22, r1
    1c44:	71 05       	cpc	r23, r1
    1c46:	21 f0       	breq	.+8      	; 0x1c50 <malloc+0x8e>
    1c48:	fb 01       	movw	r30, r22
    1c4a:	93 83       	std	Z+3, r25	; 0x03
    1c4c:	82 83       	std	Z+2, r24	; 0x02
    1c4e:	04 c0       	rjmp	.+8      	; 0x1c58 <malloc+0x96>
    1c50:	90 93 20 04 	sts	0x0420, r25	; 0x800420 <__flp+0x1>
    1c54:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <__flp>
    1c58:	fe 01       	movw	r30, r28
    1c5a:	32 96       	adiw	r30, 0x02	; 2
    1c5c:	44 c0       	rjmp	.+136    	; 0x1ce6 <malloc+0x124>
    1c5e:	fe 01       	movw	r30, r28
    1c60:	e2 0f       	add	r30, r18
    1c62:	f3 1f       	adc	r31, r19
    1c64:	81 93       	st	Z+, r24
    1c66:	91 93       	st	Z+, r25
    1c68:	22 50       	subi	r18, 0x02	; 2
    1c6a:	31 09       	sbc	r19, r1
    1c6c:	39 83       	std	Y+1, r19	; 0x01
    1c6e:	28 83       	st	Y, r18
    1c70:	3a c0       	rjmp	.+116    	; 0x1ce6 <malloc+0x124>
    1c72:	20 91 1d 04 	lds	r18, 0x041D	; 0x80041d <__brkval>
    1c76:	30 91 1e 04 	lds	r19, 0x041E	; 0x80041e <__brkval+0x1>
    1c7a:	23 2b       	or	r18, r19
    1c7c:	41 f4       	brne	.+16     	; 0x1c8e <malloc+0xcc>
    1c7e:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1c82:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    1c86:	30 93 1e 04 	sts	0x041E, r19	; 0x80041e <__brkval+0x1>
    1c8a:	20 93 1d 04 	sts	0x041D, r18	; 0x80041d <__brkval>
    1c8e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1c92:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    1c96:	21 15       	cp	r18, r1
    1c98:	31 05       	cpc	r19, r1
    1c9a:	41 f4       	brne	.+16     	; 0x1cac <malloc+0xea>
    1c9c:	2d b7       	in	r18, 0x3d	; 61
    1c9e:	3e b7       	in	r19, 0x3e	; 62
    1ca0:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1ca4:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    1ca8:	24 1b       	sub	r18, r20
    1caa:	35 0b       	sbc	r19, r21
    1cac:	e0 91 1d 04 	lds	r30, 0x041D	; 0x80041d <__brkval>
    1cb0:	f0 91 1e 04 	lds	r31, 0x041E	; 0x80041e <__brkval+0x1>
    1cb4:	e2 17       	cp	r30, r18
    1cb6:	f3 07       	cpc	r31, r19
    1cb8:	a0 f4       	brcc	.+40     	; 0x1ce2 <malloc+0x120>
    1cba:	2e 1b       	sub	r18, r30
    1cbc:	3f 0b       	sbc	r19, r31
    1cbe:	28 17       	cp	r18, r24
    1cc0:	39 07       	cpc	r19, r25
    1cc2:	78 f0       	brcs	.+30     	; 0x1ce2 <malloc+0x120>
    1cc4:	ac 01       	movw	r20, r24
    1cc6:	4e 5f       	subi	r20, 0xFE	; 254
    1cc8:	5f 4f       	sbci	r21, 0xFF	; 255
    1cca:	24 17       	cp	r18, r20
    1ccc:	35 07       	cpc	r19, r21
    1cce:	48 f0       	brcs	.+18     	; 0x1ce2 <malloc+0x120>
    1cd0:	4e 0f       	add	r20, r30
    1cd2:	5f 1f       	adc	r21, r31
    1cd4:	50 93 1e 04 	sts	0x041E, r21	; 0x80041e <__brkval+0x1>
    1cd8:	40 93 1d 04 	sts	0x041D, r20	; 0x80041d <__brkval>
    1cdc:	81 93       	st	Z+, r24
    1cde:	91 93       	st	Z+, r25
    1ce0:	02 c0       	rjmp	.+4      	; 0x1ce6 <malloc+0x124>
    1ce2:	e0 e0       	ldi	r30, 0x00	; 0
    1ce4:	f0 e0       	ldi	r31, 0x00	; 0
    1ce6:	cf 01       	movw	r24, r30
    1ce8:	df 91       	pop	r29
    1cea:	cf 91       	pop	r28
    1cec:	1f 91       	pop	r17
    1cee:	0f 91       	pop	r16
    1cf0:	08 95       	ret

00001cf2 <free>:
    1cf2:	cf 93       	push	r28
    1cf4:	df 93       	push	r29
    1cf6:	00 97       	sbiw	r24, 0x00	; 0
    1cf8:	09 f4       	brne	.+2      	; 0x1cfc <free+0xa>
    1cfa:	81 c0       	rjmp	.+258    	; 0x1dfe <free+0x10c>
    1cfc:	fc 01       	movw	r30, r24
    1cfe:	32 97       	sbiw	r30, 0x02	; 2
    1d00:	13 82       	std	Z+3, r1	; 0x03
    1d02:	12 82       	std	Z+2, r1	; 0x02
    1d04:	a0 91 1f 04 	lds	r26, 0x041F	; 0x80041f <__flp>
    1d08:	b0 91 20 04 	lds	r27, 0x0420	; 0x800420 <__flp+0x1>
    1d0c:	10 97       	sbiw	r26, 0x00	; 0
    1d0e:	81 f4       	brne	.+32     	; 0x1d30 <free+0x3e>
    1d10:	20 81       	ld	r18, Z
    1d12:	31 81       	ldd	r19, Z+1	; 0x01
    1d14:	82 0f       	add	r24, r18
    1d16:	93 1f       	adc	r25, r19
    1d18:	20 91 1d 04 	lds	r18, 0x041D	; 0x80041d <__brkval>
    1d1c:	30 91 1e 04 	lds	r19, 0x041E	; 0x80041e <__brkval+0x1>
    1d20:	28 17       	cp	r18, r24
    1d22:	39 07       	cpc	r19, r25
    1d24:	51 f5       	brne	.+84     	; 0x1d7a <free+0x88>
    1d26:	f0 93 1e 04 	sts	0x041E, r31	; 0x80041e <__brkval+0x1>
    1d2a:	e0 93 1d 04 	sts	0x041D, r30	; 0x80041d <__brkval>
    1d2e:	67 c0       	rjmp	.+206    	; 0x1dfe <free+0x10c>
    1d30:	ed 01       	movw	r28, r26
    1d32:	20 e0       	ldi	r18, 0x00	; 0
    1d34:	30 e0       	ldi	r19, 0x00	; 0
    1d36:	ce 17       	cp	r28, r30
    1d38:	df 07       	cpc	r29, r31
    1d3a:	40 f4       	brcc	.+16     	; 0x1d4c <free+0x5a>
    1d3c:	4a 81       	ldd	r20, Y+2	; 0x02
    1d3e:	5b 81       	ldd	r21, Y+3	; 0x03
    1d40:	9e 01       	movw	r18, r28
    1d42:	41 15       	cp	r20, r1
    1d44:	51 05       	cpc	r21, r1
    1d46:	f1 f0       	breq	.+60     	; 0x1d84 <free+0x92>
    1d48:	ea 01       	movw	r28, r20
    1d4a:	f5 cf       	rjmp	.-22     	; 0x1d36 <free+0x44>
    1d4c:	d3 83       	std	Z+3, r29	; 0x03
    1d4e:	c2 83       	std	Z+2, r28	; 0x02
    1d50:	40 81       	ld	r20, Z
    1d52:	51 81       	ldd	r21, Z+1	; 0x01
    1d54:	84 0f       	add	r24, r20
    1d56:	95 1f       	adc	r25, r21
    1d58:	c8 17       	cp	r28, r24
    1d5a:	d9 07       	cpc	r29, r25
    1d5c:	59 f4       	brne	.+22     	; 0x1d74 <free+0x82>
    1d5e:	88 81       	ld	r24, Y
    1d60:	99 81       	ldd	r25, Y+1	; 0x01
    1d62:	84 0f       	add	r24, r20
    1d64:	95 1f       	adc	r25, r21
    1d66:	02 96       	adiw	r24, 0x02	; 2
    1d68:	91 83       	std	Z+1, r25	; 0x01
    1d6a:	80 83       	st	Z, r24
    1d6c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d6e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d70:	93 83       	std	Z+3, r25	; 0x03
    1d72:	82 83       	std	Z+2, r24	; 0x02
    1d74:	21 15       	cp	r18, r1
    1d76:	31 05       	cpc	r19, r1
    1d78:	29 f4       	brne	.+10     	; 0x1d84 <free+0x92>
    1d7a:	f0 93 20 04 	sts	0x0420, r31	; 0x800420 <__flp+0x1>
    1d7e:	e0 93 1f 04 	sts	0x041F, r30	; 0x80041f <__flp>
    1d82:	3d c0       	rjmp	.+122    	; 0x1dfe <free+0x10c>
    1d84:	e9 01       	movw	r28, r18
    1d86:	fb 83       	std	Y+3, r31	; 0x03
    1d88:	ea 83       	std	Y+2, r30	; 0x02
    1d8a:	49 91       	ld	r20, Y+
    1d8c:	59 91       	ld	r21, Y+
    1d8e:	c4 0f       	add	r28, r20
    1d90:	d5 1f       	adc	r29, r21
    1d92:	ec 17       	cp	r30, r28
    1d94:	fd 07       	cpc	r31, r29
    1d96:	61 f4       	brne	.+24     	; 0x1db0 <free+0xbe>
    1d98:	80 81       	ld	r24, Z
    1d9a:	91 81       	ldd	r25, Z+1	; 0x01
    1d9c:	84 0f       	add	r24, r20
    1d9e:	95 1f       	adc	r25, r21
    1da0:	02 96       	adiw	r24, 0x02	; 2
    1da2:	e9 01       	movw	r28, r18
    1da4:	99 83       	std	Y+1, r25	; 0x01
    1da6:	88 83       	st	Y, r24
    1da8:	82 81       	ldd	r24, Z+2	; 0x02
    1daa:	93 81       	ldd	r25, Z+3	; 0x03
    1dac:	9b 83       	std	Y+3, r25	; 0x03
    1dae:	8a 83       	std	Y+2, r24	; 0x02
    1db0:	e0 e0       	ldi	r30, 0x00	; 0
    1db2:	f0 e0       	ldi	r31, 0x00	; 0
    1db4:	12 96       	adiw	r26, 0x02	; 2
    1db6:	8d 91       	ld	r24, X+
    1db8:	9c 91       	ld	r25, X
    1dba:	13 97       	sbiw	r26, 0x03	; 3
    1dbc:	00 97       	sbiw	r24, 0x00	; 0
    1dbe:	19 f0       	breq	.+6      	; 0x1dc6 <free+0xd4>
    1dc0:	fd 01       	movw	r30, r26
    1dc2:	dc 01       	movw	r26, r24
    1dc4:	f7 cf       	rjmp	.-18     	; 0x1db4 <free+0xc2>
    1dc6:	8d 91       	ld	r24, X+
    1dc8:	9c 91       	ld	r25, X
    1dca:	11 97       	sbiw	r26, 0x01	; 1
    1dcc:	9d 01       	movw	r18, r26
    1dce:	2e 5f       	subi	r18, 0xFE	; 254
    1dd0:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd2:	82 0f       	add	r24, r18
    1dd4:	93 1f       	adc	r25, r19
    1dd6:	20 91 1d 04 	lds	r18, 0x041D	; 0x80041d <__brkval>
    1dda:	30 91 1e 04 	lds	r19, 0x041E	; 0x80041e <__brkval+0x1>
    1dde:	28 17       	cp	r18, r24
    1de0:	39 07       	cpc	r19, r25
    1de2:	69 f4       	brne	.+26     	; 0x1dfe <free+0x10c>
    1de4:	30 97       	sbiw	r30, 0x00	; 0
    1de6:	29 f4       	brne	.+10     	; 0x1df2 <free+0x100>
    1de8:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <__flp+0x1>
    1dec:	10 92 1f 04 	sts	0x041F, r1	; 0x80041f <__flp>
    1df0:	02 c0       	rjmp	.+4      	; 0x1df6 <free+0x104>
    1df2:	13 82       	std	Z+3, r1	; 0x03
    1df4:	12 82       	std	Z+2, r1	; 0x02
    1df6:	b0 93 1e 04 	sts	0x041E, r27	; 0x80041e <__brkval+0x1>
    1dfa:	a0 93 1d 04 	sts	0x041D, r26	; 0x80041d <__brkval>
    1dfe:	df 91       	pop	r29
    1e00:	cf 91       	pop	r28
    1e02:	08 95       	ret

00001e04 <strnlen_P>:
    1e04:	fc 01       	movw	r30, r24
    1e06:	05 90       	lpm	r0, Z+
    1e08:	61 50       	subi	r22, 0x01	; 1
    1e0a:	70 40       	sbci	r23, 0x00	; 0
    1e0c:	01 10       	cpse	r0, r1
    1e0e:	d8 f7       	brcc	.-10     	; 0x1e06 <strnlen_P+0x2>
    1e10:	80 95       	com	r24
    1e12:	90 95       	com	r25
    1e14:	8e 0f       	add	r24, r30
    1e16:	9f 1f       	adc	r25, r31
    1e18:	08 95       	ret

00001e1a <memset>:
    1e1a:	dc 01       	movw	r26, r24
    1e1c:	01 c0       	rjmp	.+2      	; 0x1e20 <memset+0x6>
    1e1e:	6d 93       	st	X+, r22
    1e20:	41 50       	subi	r20, 0x01	; 1
    1e22:	50 40       	sbci	r21, 0x00	; 0
    1e24:	e0 f7       	brcc	.-8      	; 0x1e1e <memset+0x4>
    1e26:	08 95       	ret

00001e28 <strnlen>:
    1e28:	fc 01       	movw	r30, r24
    1e2a:	61 50       	subi	r22, 0x01	; 1
    1e2c:	70 40       	sbci	r23, 0x00	; 0
    1e2e:	01 90       	ld	r0, Z+
    1e30:	01 10       	cpse	r0, r1
    1e32:	d8 f7       	brcc	.-10     	; 0x1e2a <strnlen+0x2>
    1e34:	80 95       	com	r24
    1e36:	90 95       	com	r25
    1e38:	8e 0f       	add	r24, r30
    1e3a:	9f 1f       	adc	r25, r31
    1e3c:	08 95       	ret

00001e3e <strrev>:
    1e3e:	dc 01       	movw	r26, r24
    1e40:	fc 01       	movw	r30, r24
    1e42:	67 2f       	mov	r22, r23
    1e44:	71 91       	ld	r23, Z+
    1e46:	77 23       	and	r23, r23
    1e48:	e1 f7       	brne	.-8      	; 0x1e42 <strrev+0x4>
    1e4a:	32 97       	sbiw	r30, 0x02	; 2
    1e4c:	04 c0       	rjmp	.+8      	; 0x1e56 <strrev+0x18>
    1e4e:	7c 91       	ld	r23, X
    1e50:	6d 93       	st	X+, r22
    1e52:	70 83       	st	Z, r23
    1e54:	62 91       	ld	r22, -Z
    1e56:	ae 17       	cp	r26, r30
    1e58:	bf 07       	cpc	r27, r31
    1e5a:	c8 f3       	brcs	.-14     	; 0x1e4e <strrev+0x10>
    1e5c:	08 95       	ret

00001e5e <fputc>:
    1e5e:	0f 93       	push	r16
    1e60:	1f 93       	push	r17
    1e62:	cf 93       	push	r28
    1e64:	df 93       	push	r29
    1e66:	fb 01       	movw	r30, r22
    1e68:	23 81       	ldd	r18, Z+3	; 0x03
    1e6a:	21 fd       	sbrc	r18, 1
    1e6c:	03 c0       	rjmp	.+6      	; 0x1e74 <fputc+0x16>
    1e6e:	8f ef       	ldi	r24, 0xFF	; 255
    1e70:	9f ef       	ldi	r25, 0xFF	; 255
    1e72:	2c c0       	rjmp	.+88     	; 0x1ecc <fputc+0x6e>
    1e74:	22 ff       	sbrs	r18, 2
    1e76:	16 c0       	rjmp	.+44     	; 0x1ea4 <fputc+0x46>
    1e78:	46 81       	ldd	r20, Z+6	; 0x06
    1e7a:	57 81       	ldd	r21, Z+7	; 0x07
    1e7c:	24 81       	ldd	r18, Z+4	; 0x04
    1e7e:	35 81       	ldd	r19, Z+5	; 0x05
    1e80:	42 17       	cp	r20, r18
    1e82:	53 07       	cpc	r21, r19
    1e84:	44 f4       	brge	.+16     	; 0x1e96 <fputc+0x38>
    1e86:	a0 81       	ld	r26, Z
    1e88:	b1 81       	ldd	r27, Z+1	; 0x01
    1e8a:	9d 01       	movw	r18, r26
    1e8c:	2f 5f       	subi	r18, 0xFF	; 255
    1e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    1e90:	31 83       	std	Z+1, r19	; 0x01
    1e92:	20 83       	st	Z, r18
    1e94:	8c 93       	st	X, r24
    1e96:	26 81       	ldd	r18, Z+6	; 0x06
    1e98:	37 81       	ldd	r19, Z+7	; 0x07
    1e9a:	2f 5f       	subi	r18, 0xFF	; 255
    1e9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e9e:	37 83       	std	Z+7, r19	; 0x07
    1ea0:	26 83       	std	Z+6, r18	; 0x06
    1ea2:	14 c0       	rjmp	.+40     	; 0x1ecc <fputc+0x6e>
    1ea4:	8b 01       	movw	r16, r22
    1ea6:	ec 01       	movw	r28, r24
    1ea8:	fb 01       	movw	r30, r22
    1eaa:	00 84       	ldd	r0, Z+8	; 0x08
    1eac:	f1 85       	ldd	r31, Z+9	; 0x09
    1eae:	e0 2d       	mov	r30, r0
    1eb0:	19 95       	eicall
    1eb2:	89 2b       	or	r24, r25
    1eb4:	e1 f6       	brne	.-72     	; 0x1e6e <fputc+0x10>
    1eb6:	d8 01       	movw	r26, r16
    1eb8:	16 96       	adiw	r26, 0x06	; 6
    1eba:	8d 91       	ld	r24, X+
    1ebc:	9c 91       	ld	r25, X
    1ebe:	17 97       	sbiw	r26, 0x07	; 7
    1ec0:	01 96       	adiw	r24, 0x01	; 1
    1ec2:	17 96       	adiw	r26, 0x07	; 7
    1ec4:	9c 93       	st	X, r25
    1ec6:	8e 93       	st	-X, r24
    1ec8:	16 97       	sbiw	r26, 0x06	; 6
    1eca:	ce 01       	movw	r24, r28
    1ecc:	df 91       	pop	r29
    1ece:	cf 91       	pop	r28
    1ed0:	1f 91       	pop	r17
    1ed2:	0f 91       	pop	r16
    1ed4:	08 95       	ret

00001ed6 <__ultoa_invert>:
    1ed6:	fa 01       	movw	r30, r20
    1ed8:	aa 27       	eor	r26, r26
    1eda:	28 30       	cpi	r18, 0x08	; 8
    1edc:	51 f1       	breq	.+84     	; 0x1f32 <__ultoa_invert+0x5c>
    1ede:	20 31       	cpi	r18, 0x10	; 16
    1ee0:	81 f1       	breq	.+96     	; 0x1f42 <__ultoa_invert+0x6c>
    1ee2:	e8 94       	clt
    1ee4:	6f 93       	push	r22
    1ee6:	6e 7f       	andi	r22, 0xFE	; 254
    1ee8:	6e 5f       	subi	r22, 0xFE	; 254
    1eea:	7f 4f       	sbci	r23, 0xFF	; 255
    1eec:	8f 4f       	sbci	r24, 0xFF	; 255
    1eee:	9f 4f       	sbci	r25, 0xFF	; 255
    1ef0:	af 4f       	sbci	r26, 0xFF	; 255
    1ef2:	b1 e0       	ldi	r27, 0x01	; 1
    1ef4:	3e d0       	rcall	.+124    	; 0x1f72 <__ultoa_invert+0x9c>
    1ef6:	b4 e0       	ldi	r27, 0x04	; 4
    1ef8:	3c d0       	rcall	.+120    	; 0x1f72 <__ultoa_invert+0x9c>
    1efa:	67 0f       	add	r22, r23
    1efc:	78 1f       	adc	r23, r24
    1efe:	89 1f       	adc	r24, r25
    1f00:	9a 1f       	adc	r25, r26
    1f02:	a1 1d       	adc	r26, r1
    1f04:	68 0f       	add	r22, r24
    1f06:	79 1f       	adc	r23, r25
    1f08:	8a 1f       	adc	r24, r26
    1f0a:	91 1d       	adc	r25, r1
    1f0c:	a1 1d       	adc	r26, r1
    1f0e:	6a 0f       	add	r22, r26
    1f10:	71 1d       	adc	r23, r1
    1f12:	81 1d       	adc	r24, r1
    1f14:	91 1d       	adc	r25, r1
    1f16:	a1 1d       	adc	r26, r1
    1f18:	20 d0       	rcall	.+64     	; 0x1f5a <__ultoa_invert+0x84>
    1f1a:	09 f4       	brne	.+2      	; 0x1f1e <__ultoa_invert+0x48>
    1f1c:	68 94       	set
    1f1e:	3f 91       	pop	r19
    1f20:	2a e0       	ldi	r18, 0x0A	; 10
    1f22:	26 9f       	mul	r18, r22
    1f24:	11 24       	eor	r1, r1
    1f26:	30 19       	sub	r19, r0
    1f28:	30 5d       	subi	r19, 0xD0	; 208
    1f2a:	31 93       	st	Z+, r19
    1f2c:	de f6       	brtc	.-74     	; 0x1ee4 <__ultoa_invert+0xe>
    1f2e:	cf 01       	movw	r24, r30
    1f30:	08 95       	ret
    1f32:	46 2f       	mov	r20, r22
    1f34:	47 70       	andi	r20, 0x07	; 7
    1f36:	40 5d       	subi	r20, 0xD0	; 208
    1f38:	41 93       	st	Z+, r20
    1f3a:	b3 e0       	ldi	r27, 0x03	; 3
    1f3c:	0f d0       	rcall	.+30     	; 0x1f5c <__ultoa_invert+0x86>
    1f3e:	c9 f7       	brne	.-14     	; 0x1f32 <__ultoa_invert+0x5c>
    1f40:	f6 cf       	rjmp	.-20     	; 0x1f2e <__ultoa_invert+0x58>
    1f42:	46 2f       	mov	r20, r22
    1f44:	4f 70       	andi	r20, 0x0F	; 15
    1f46:	40 5d       	subi	r20, 0xD0	; 208
    1f48:	4a 33       	cpi	r20, 0x3A	; 58
    1f4a:	18 f0       	brcs	.+6      	; 0x1f52 <__ultoa_invert+0x7c>
    1f4c:	49 5d       	subi	r20, 0xD9	; 217
    1f4e:	31 fd       	sbrc	r19, 1
    1f50:	40 52       	subi	r20, 0x20	; 32
    1f52:	41 93       	st	Z+, r20
    1f54:	02 d0       	rcall	.+4      	; 0x1f5a <__ultoa_invert+0x84>
    1f56:	a9 f7       	brne	.-22     	; 0x1f42 <__ultoa_invert+0x6c>
    1f58:	ea cf       	rjmp	.-44     	; 0x1f2e <__ultoa_invert+0x58>
    1f5a:	b4 e0       	ldi	r27, 0x04	; 4
    1f5c:	a6 95       	lsr	r26
    1f5e:	97 95       	ror	r25
    1f60:	87 95       	ror	r24
    1f62:	77 95       	ror	r23
    1f64:	67 95       	ror	r22
    1f66:	ba 95       	dec	r27
    1f68:	c9 f7       	brne	.-14     	; 0x1f5c <__ultoa_invert+0x86>
    1f6a:	00 97       	sbiw	r24, 0x00	; 0
    1f6c:	61 05       	cpc	r22, r1
    1f6e:	71 05       	cpc	r23, r1
    1f70:	08 95       	ret
    1f72:	9b 01       	movw	r18, r22
    1f74:	ac 01       	movw	r20, r24
    1f76:	0a 2e       	mov	r0, r26
    1f78:	06 94       	lsr	r0
    1f7a:	57 95       	ror	r21
    1f7c:	47 95       	ror	r20
    1f7e:	37 95       	ror	r19
    1f80:	27 95       	ror	r18
    1f82:	ba 95       	dec	r27
    1f84:	c9 f7       	brne	.-14     	; 0x1f78 <__ultoa_invert+0xa2>
    1f86:	62 0f       	add	r22, r18
    1f88:	73 1f       	adc	r23, r19
    1f8a:	84 1f       	adc	r24, r20
    1f8c:	95 1f       	adc	r25, r21
    1f8e:	a0 1d       	adc	r26, r0
    1f90:	08 95       	ret

00001f92 <_exit>:
    1f92:	f8 94       	cli

00001f94 <__stop_program>:
    1f94:	ff cf       	rjmp	.-2      	; 0x1f94 <__stop_program>
