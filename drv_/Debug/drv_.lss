
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017c  00800200  0000270e  000027a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000270e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006b  0080037c  0080037c  0000291e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000291e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000297c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  000029bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002f98  00000000  00000000  00002c04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000017ec  00000000  00000000  00005b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013ae  00000000  00000000  00007388  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006f4  00000000  00000000  00008738  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bca  00000000  00000000  00008e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d51  00000000  00000000  000099f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  0000b747  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	36 c1       	rjmp	.+620    	; 0x26e <__ctors_end>
       2:	00 00       	nop
       4:	54 c1       	rjmp	.+680    	; 0x2ae <__bad_interrupt>
       6:	00 00       	nop
       8:	52 c1       	rjmp	.+676    	; 0x2ae <__bad_interrupt>
       a:	00 00       	nop
       c:	50 c1       	rjmp	.+672    	; 0x2ae <__bad_interrupt>
       e:	00 00       	nop
      10:	4e c1       	rjmp	.+668    	; 0x2ae <__bad_interrupt>
      12:	00 00       	nop
      14:	4c c1       	rjmp	.+664    	; 0x2ae <__bad_interrupt>
      16:	00 00       	nop
      18:	4a c1       	rjmp	.+660    	; 0x2ae <__bad_interrupt>
      1a:	00 00       	nop
      1c:	48 c1       	rjmp	.+656    	; 0x2ae <__bad_interrupt>
      1e:	00 00       	nop
      20:	46 c1       	rjmp	.+652    	; 0x2ae <__bad_interrupt>
      22:	00 00       	nop
      24:	44 c1       	rjmp	.+648    	; 0x2ae <__bad_interrupt>
      26:	00 00       	nop
      28:	42 c1       	rjmp	.+644    	; 0x2ae <__bad_interrupt>
      2a:	00 00       	nop
      2c:	40 c1       	rjmp	.+640    	; 0x2ae <__bad_interrupt>
      2e:	00 00       	nop
      30:	3e c1       	rjmp	.+636    	; 0x2ae <__bad_interrupt>
      32:	00 00       	nop
      34:	3c c1       	rjmp	.+632    	; 0x2ae <__bad_interrupt>
      36:	00 00       	nop
      38:	3a c1       	rjmp	.+628    	; 0x2ae <__bad_interrupt>
      3a:	00 00       	nop
      3c:	38 c1       	rjmp	.+624    	; 0x2ae <__bad_interrupt>
      3e:	00 00       	nop
      40:	36 c1       	rjmp	.+620    	; 0x2ae <__bad_interrupt>
      42:	00 00       	nop
      44:	34 c1       	rjmp	.+616    	; 0x2ae <__bad_interrupt>
      46:	00 00       	nop
      48:	32 c1       	rjmp	.+612    	; 0x2ae <__bad_interrupt>
      4a:	00 00       	nop
      4c:	30 c1       	rjmp	.+608    	; 0x2ae <__bad_interrupt>
      4e:	00 00       	nop
      50:	2e c1       	rjmp	.+604    	; 0x2ae <__bad_interrupt>
      52:	00 00       	nop
      54:	2c c1       	rjmp	.+600    	; 0x2ae <__bad_interrupt>
      56:	00 00       	nop
      58:	2a c1       	rjmp	.+596    	; 0x2ae <__bad_interrupt>
      5a:	00 00       	nop
      5c:	26 c7       	rjmp	.+3660   	; 0xeaa <__vector_23>
      5e:	00 00       	nop
      60:	26 c1       	rjmp	.+588    	; 0x2ae <__bad_interrupt>
      62:	00 00       	nop
      64:	24 c1       	rjmp	.+584    	; 0x2ae <__bad_interrupt>
      66:	00 00       	nop
      68:	22 c1       	rjmp	.+580    	; 0x2ae <__bad_interrupt>
      6a:	00 00       	nop
      6c:	20 c1       	rjmp	.+576    	; 0x2ae <__bad_interrupt>
      6e:	00 00       	nop
      70:	1e c1       	rjmp	.+572    	; 0x2ae <__bad_interrupt>
      72:	00 00       	nop
      74:	1c c1       	rjmp	.+568    	; 0x2ae <__bad_interrupt>
      76:	00 00       	nop
      78:	1a c1       	rjmp	.+564    	; 0x2ae <__bad_interrupt>
      7a:	00 00       	nop
      7c:	18 c1       	rjmp	.+560    	; 0x2ae <__bad_interrupt>
      7e:	00 00       	nop
      80:	16 c1       	rjmp	.+556    	; 0x2ae <__bad_interrupt>
      82:	00 00       	nop
      84:	14 c1       	rjmp	.+552    	; 0x2ae <__bad_interrupt>
      86:	00 00       	nop
      88:	12 c1       	rjmp	.+548    	; 0x2ae <__bad_interrupt>
      8a:	00 00       	nop
      8c:	10 c1       	rjmp	.+544    	; 0x2ae <__bad_interrupt>
      8e:	00 00       	nop
      90:	0e c1       	rjmp	.+540    	; 0x2ae <__bad_interrupt>
      92:	00 00       	nop
      94:	0c c1       	rjmp	.+536    	; 0x2ae <__bad_interrupt>
      96:	00 00       	nop
      98:	0a c1       	rjmp	.+532    	; 0x2ae <__bad_interrupt>
      9a:	00 00       	nop
      9c:	08 c1       	rjmp	.+528    	; 0x2ae <__bad_interrupt>
      9e:	00 00       	nop
      a0:	06 c1       	rjmp	.+524    	; 0x2ae <__bad_interrupt>
      a2:	00 00       	nop
      a4:	04 c1       	rjmp	.+520    	; 0x2ae <__bad_interrupt>
      a6:	00 00       	nop
      a8:	02 c1       	rjmp	.+516    	; 0x2ae <__bad_interrupt>
      aa:	00 00       	nop
      ac:	00 c1       	rjmp	.+512    	; 0x2ae <__bad_interrupt>
      ae:	00 00       	nop
      b0:	fe c0       	rjmp	.+508    	; 0x2ae <__bad_interrupt>
      b2:	00 00       	nop
      b4:	fc c0       	rjmp	.+504    	; 0x2ae <__bad_interrupt>
      b6:	00 00       	nop
      b8:	fa c0       	rjmp	.+500    	; 0x2ae <__bad_interrupt>
      ba:	00 00       	nop
      bc:	40 c7       	rjmp	.+3712   	; 0xf3e <__vector_47>
      be:	00 00       	nop
      c0:	f6 c0       	rjmp	.+492    	; 0x2ae <__bad_interrupt>
      c2:	00 00       	nop
      c4:	f4 c0       	rjmp	.+488    	; 0x2ae <__bad_interrupt>
      c6:	00 00       	nop
      c8:	f2 c0       	rjmp	.+484    	; 0x2ae <__bad_interrupt>
      ca:	00 00       	nop
      cc:	f0 c0       	rjmp	.+480    	; 0x2ae <__bad_interrupt>
      ce:	00 00       	nop
      d0:	ee c0       	rjmp	.+476    	; 0x2ae <__bad_interrupt>
      d2:	00 00       	nop
      d4:	ec c0       	rjmp	.+472    	; 0x2ae <__bad_interrupt>
      d6:	00 00       	nop
      d8:	ea c0       	rjmp	.+468    	; 0x2ae <__bad_interrupt>
      da:	00 00       	nop
      dc:	e8 c0       	rjmp	.+464    	; 0x2ae <__bad_interrupt>
      de:	00 00       	nop
      e0:	e6 c0       	rjmp	.+460    	; 0x2ae <__bad_interrupt>
      e2:	00 00       	nop
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	08 4a       	sbci	r16, 0xA8	; 168
      fa:	d7 3b       	cpi	r29, 0xB7	; 183
      fc:	3b ce       	rjmp	.-906    	; 0xfffffd74 <__eeprom_end+0xff7efd74>
      fe:	01 6e       	ori	r16, 0xE1	; 225
     100:	84 bc       	out	0x24, r8	; 36
     102:	bf fd       	.word	0xfdbf	; ????
     104:	c1 2f       	mov	r28, r17
     106:	3d 6c       	ori	r19, 0xCD	; 205
     108:	74 31       	cpi	r23, 0x14	; 20
     10a:	9a bd       	out	0x2a, r25	; 42
     10c:	56 83       	std	Z+6, r21	; 0x06
     10e:	3d da       	rcall	.-2950   	; 0xfffff58a <__eeprom_end+0xff7ef58a>
     110:	3d 00       	.word	0x003d	; ????
     112:	c7 7f       	andi	r28, 0xF7	; 247
     114:	11 be       	out	0x31, r1	; 49
     116:	d9 e4       	ldi	r29, 0x49	; 73
     118:	bb 4c       	sbci	r27, 0xCB	; 203
     11a:	3e 91       	ld	r19, -X
     11c:	6b aa       	std	Y+51, r6	; 0x33
     11e:	aa be       	out	0x3a, r10	; 58
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	3f 07       	cpc	r19, r31
     126:	2c 7a       	andi	r18, 0xAC	; 172
     128:	a5 ba       	out	0x15, r10	; 21
     12a:	6c c5       	rjmp	.+2776   	; 0xc04 <main+0x480>
     12c:	90 da       	rcall	.-2784   	; 0xfffff64e <__eeprom_end+0xff7ef64e>
     12e:	3b 93       	.word	0x933b	; ????
     130:	65 fc       	sbrc	r6, 5
     132:	8b bc       	out	0x2b, r8	; 43
     134:	53 f8       	bld	r5, 3
     136:	10 fd       	sbrc	r17, 0
     138:	3c 56       	subi	r19, 0x6C	; 108
     13a:	92 83       	std	Z+2, r25	; 0x02
     13c:	4d bd       	out	0x2d, r20	; 45
     13e:	87 9d       	mul	r24, r7
     140:	3a b6       	in	r3, 0x3a	; 58
     142:	3d cb       	rjmp	.-2438   	; 0xfffff7be <__eeprom_end+0xff7ef7be>
     144:	c9 bf       	out	0x39, r28	; 57
     146:	5b be       	out	0x3b, r5	; 59
     148:	73 da       	rcall	.-2842   	; 0xfffff630 <__eeprom_end+0xff7ef630>
     14a:	0f c9       	rjmp	.-3554   	; 0xfffff36a <__eeprom_end+0xff7ef36a>
     14c:	3f 05       	cpc	r19, r15
     14e:	a8 4c       	sbci	r26, 0xC8	; 200
     150:	cd b2       	in	r12, 0x1d	; 29
     152:	d4 4e       	sbci	r29, 0xE4	; 228
     154:	b9 38       	cpi	r27, 0x89	; 137
     156:	36 a9       	ldd	r19, Z+54	; 0x36
     158:	02 0c       	add	r0, r2
     15a:	50 b9       	out	0x00, r21	; 0
     15c:	91 86       	std	Z+9, r9	; 0x09
     15e:	88 08       	sbc	r8, r8
     160:	3c a6       	std	Y+44, r3	; 0x2c
     162:	aa aa       	std	Y+50, r10	; 0x32
     164:	2a be       	out	0x3a, r2	; 58
     166:	00 00       	nop
     168:	00 80       	ld	r0, Z
     16a:	3f 00       	.word	0x003f	; ????

0000016c <__trampolines_end>:
     16c:	6e 61       	ori	r22, 0x1E	; 30
     16e:	6e 00       	.word	0x006e	; ????

00000170 <__c.2240>:
     170:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     180:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     190:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     1a0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     1b0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1c0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1d0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1e0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     1f0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     200:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     210:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     220:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     230:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     240:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     250:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     260:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000026e <__ctors_end>:
     26e:	11 24       	eor	r1, r1
     270:	1f be       	out	0x3f, r1	; 63
     272:	cf ef       	ldi	r28, 0xFF	; 255
     274:	d1 e2       	ldi	r29, 0x21	; 33
     276:	de bf       	out	0x3e, r29	; 62
     278:	cd bf       	out	0x3d, r28	; 61
     27a:	00 e0       	ldi	r16, 0x00	; 0
     27c:	0c bf       	out	0x3c, r16	; 60

0000027e <__do_copy_data>:
     27e:	13 e0       	ldi	r17, 0x03	; 3
     280:	a0 e0       	ldi	r26, 0x00	; 0
     282:	b2 e0       	ldi	r27, 0x02	; 2
     284:	ee e0       	ldi	r30, 0x0E	; 14
     286:	f7 e2       	ldi	r31, 0x27	; 39
     288:	00 e0       	ldi	r16, 0x00	; 0
     28a:	0b bf       	out	0x3b, r16	; 59
     28c:	02 c0       	rjmp	.+4      	; 0x292 <__do_copy_data+0x14>
     28e:	07 90       	elpm	r0, Z+
     290:	0d 92       	st	X+, r0
     292:	ac 37       	cpi	r26, 0x7C	; 124
     294:	b1 07       	cpc	r27, r17
     296:	d9 f7       	brne	.-10     	; 0x28e <__do_copy_data+0x10>

00000298 <__do_clear_bss>:
     298:	23 e0       	ldi	r18, 0x03	; 3
     29a:	ac e7       	ldi	r26, 0x7C	; 124
     29c:	b3 e0       	ldi	r27, 0x03	; 3
     29e:	01 c0       	rjmp	.+2      	; 0x2a2 <.do_clear_bss_start>

000002a0 <.do_clear_bss_loop>:
     2a0:	1d 92       	st	X+, r1

000002a2 <.do_clear_bss_start>:
     2a2:	a7 3e       	cpi	r26, 0xE7	; 231
     2a4:	b2 07       	cpc	r27, r18
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <.do_clear_bss_loop>
     2a8:	6d d2       	rcall	.+1242   	; 0x784 <main>
     2aa:	0c 94 85 13 	jmp	0x270a	; 0x270a <_exit>

000002ae <__bad_interrupt>:
     2ae:	a8 ce       	rjmp	.-688    	; 0x0 <__vectors>

000002b0 <init_gpio>:
{
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     2b0:	e1 e0       	ldi	r30, 0x01	; 1
     2b2:	f1 e0       	ldi	r31, 0x01	; 1
     2b4:	80 81       	ld	r24, Z
     2b6:	88 60       	ori	r24, 0x08	; 8
     2b8:	80 83       	st	Z, r24
     2ba:	80 81       	ld	r24, Z
     2bc:	80 61       	ori	r24, 0x10	; 16
     2be:	80 83       	st	Z, r24
     2c0:	80 81       	ld	r24, Z
     2c2:	80 62       	ori	r24, 0x20	; 32
     2c4:	80 83       	st	Z, r24
     2c6:	08 95       	ret

000002c8 <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     2c8:	e0 91 7c 03 	lds	r30, 0x037C	; 0x80037c <__data_end>
     2cc:	f0 91 7d 03 	lds	r31, 0x037D	; 0x80037d <__data_end+0x1>
     2d0:	ea 5f       	subi	r30, 0xFA	; 250
     2d2:	fd 4f       	sbci	r31, 0xFD	; 253
     2d4:	80 81       	ld	r24, Z
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2dc:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     2e0:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step>
     2e4:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step+0x1>
     2e8:	ea 5f       	subi	r30, 0xFA	; 250
     2ea:	fd 4f       	sbci	r31, 0xFD	; 253
     2ec:	80 81       	ld	r24, Z
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     2f4:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     2f8:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step>
     2fc:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step+0x1>
     300:	ea 5f       	subi	r30, 0xFA	; 250
     302:	fd 4f       	sbci	r31, 0xFD	; 253
     304:	80 81       	ld	r24, Z
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     30c:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     310:	60 91 8b 03 	lds	r22, 0x038B	; 0x80038b <incr>
     314:	70 91 8c 03 	lds	r23, 0x038C	; 0x80038c <incr+0x1>
     318:	40 91 7c 03 	lds	r20, 0x037C	; 0x80037c <__data_end>
     31c:	50 91 7d 03 	lds	r21, 0x037D	; 0x80037d <__data_end+0x1>
     320:	46 0f       	add	r20, r22
     322:	57 1f       	adc	r21, r23
     324:	50 93 7d 03 	sts	0x037D, r21	; 0x80037d <__data_end+0x1>
     328:	40 93 7c 03 	sts	0x037C, r20	; 0x80037c <__data_end>
	V_step=V_step+incr;
     32c:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     330:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     334:	26 0f       	add	r18, r22
     336:	37 1f       	adc	r19, r23
     338:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     33c:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	W_step=W_step+incr;
     340:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     344:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     348:	86 0f       	add	r24, r22
     34a:	97 1f       	adc	r25, r23
     34c:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     350:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	if(U_step > SINE_TABLE_SZ)
     354:	49 36       	cpi	r20, 0x69	; 105
     356:	51 40       	sbci	r21, 0x01	; 1
     358:	2c f0       	brlt	.+10     	; 0x364 <PWM_update+0x9c>
	U_step = 0;
     35a:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <__data_end+0x1>
     35e:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <__data_end>
     362:	0c c0       	rjmp	.+24     	; 0x37c <PWM_update+0xb4>
	if(U_step < 0)
     364:	40 91 7c 03 	lds	r20, 0x037C	; 0x80037c <__data_end>
     368:	50 91 7d 03 	lds	r21, 0x037D	; 0x80037d <__data_end+0x1>
     36c:	55 23       	and	r21, r21
     36e:	34 f4       	brge	.+12     	; 0x37c <PWM_update+0xb4>
	U_step = SINE_TABLE_SZ;
     370:	48 e6       	ldi	r20, 0x68	; 104
     372:	51 e0       	ldi	r21, 0x01	; 1
     374:	50 93 7d 03 	sts	0x037D, r21	; 0x80037d <__data_end+0x1>
     378:	40 93 7c 03 	sts	0x037C, r20	; 0x80037c <__data_end>
	
	if(V_step > SINE_TABLE_SZ)
     37c:	29 36       	cpi	r18, 0x69	; 105
     37e:	31 40       	sbci	r19, 0x01	; 1
     380:	2c f0       	brlt	.+10     	; 0x38c <PWM_update+0xc4>
	V_step = 0;
     382:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step+0x1>
     386:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step>
     38a:	0c c0       	rjmp	.+24     	; 0x3a4 <PWM_update+0xdc>
	if(V_step < 0)
     38c:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     390:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     394:	33 23       	and	r19, r19
     396:	34 f4       	brge	.+12     	; 0x3a4 <PWM_update+0xdc>
	V_step = SINE_TABLE_SZ;
     398:	28 e6       	ldi	r18, 0x68	; 104
     39a:	31 e0       	ldi	r19, 0x01	; 1
     39c:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     3a0:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     3a4:	89 36       	cpi	r24, 0x69	; 105
     3a6:	91 40       	sbci	r25, 0x01	; 1
     3a8:	2c f0       	brlt	.+10     	; 0x3b4 <PWM_update+0xec>
	W_step = 0;
     3aa:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step+0x1>
     3ae:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step>
     3b2:	0c c0       	rjmp	.+24     	; 0x3cc <PWM_update+0x104>
	if(W_step < 0)
     3b4:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     3b8:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     3bc:	99 23       	and	r25, r25
     3be:	34 f4       	brge	.+12     	; 0x3cc <PWM_update+0x104>
	W_step = SINE_TABLE_SZ;
     3c0:	88 e6       	ldi	r24, 0x68	; 104
     3c2:	91 e0       	ldi	r25, 0x01	; 1
     3c4:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     3c8:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     3cc:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <pwm_delay>
     3d0:	90 91 88 03 	lds	r25, 0x0388	; 0x800388 <pwm_delay+0x1>
     3d4:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     3d8:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     3dc:	08 95       	ret

000003de <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     3de:	4f 92       	push	r4
     3e0:	5f 92       	push	r5
     3e2:	6f 92       	push	r6
     3e4:	7f 92       	push	r7
     3e6:	8f 92       	push	r8
     3e8:	9f 92       	push	r9
     3ea:	af 92       	push	r10
     3ec:	bf 92       	push	r11
     3ee:	cf 92       	push	r12
     3f0:	df 92       	push	r13
     3f2:	ef 92       	push	r14
     3f4:	ff 92       	push	r15
     3f6:	0f 93       	push	r16
     3f8:	1f 93       	push	r17
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	6c 97       	sbiw	r28, 0x1c	; 28
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	f8 94       	cli
     408:	de bf       	out	0x3e, r29	; 62
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	cd bf       	out	0x3d, r28	; 61
     40e:	69 8b       	std	Y+17, r22	; 0x11
     410:	7a 8b       	std	Y+18, r23	; 0x12
     412:	8b 8b       	std	Y+19, r24	; 0x13
     414:	9c 8b       	std	Y+20, r25	; 0x14
     416:	ca 01       	movw	r24, r20
     418:	b9 01       	movw	r22, r18
     41a:	e9 82       	std	Y+1, r14	; 0x01
     41c:	fa 82       	std	Y+2, r15	; 0x02
     41e:	0b 83       	std	Y+3, r16	; 0x03
     420:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     422:	c0 90 99 03 	lds	r12, 0x0399	; 0x800399 <bias>
     426:	d0 90 9a 03 	lds	r13, 0x039A	; 0x80039a <bias+0x1>
     42a:	e0 90 9b 03 	lds	r14, 0x039B	; 0x80039b <bias+0x2>
     42e:	f0 90 9c 03 	lds	r15, 0x039C	; 0x80039c <bias+0x3>
     432:	a7 01       	movw	r20, r14
     434:	96 01       	movw	r18, r12
     436:	d2 d6       	rcall	.+3492   	; 0x11dc <__subsf3>
     438:	60 93 91 03 	sts	0x0391, r22	; 0x800391 <rate>
     43c:	70 93 92 03 	sts	0x0392, r23	; 0x800392 <rate+0x1>
     440:	80 93 93 03 	sts	0x0393, r24	; 0x800393 <rate+0x2>
     444:	90 93 94 03 	sts	0x0394, r25	; 0x800394 <rate+0x3>
	angle += dt * rate;
     448:	29 81       	ldd	r18, Y+1	; 0x01
     44a:	3a 81       	ldd	r19, Y+2	; 0x02
     44c:	4b 81       	ldd	r20, Y+3	; 0x03
     44e:	5c 81       	ldd	r21, Y+4	; 0x04
     450:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     454:	20 91 a1 03 	lds	r18, 0x03A1	; 0x8003a1 <angle>
     458:	30 91 a2 03 	lds	r19, 0x03A2	; 0x8003a2 <angle+0x1>
     45c:	40 91 a3 03 	lds	r20, 0x03A3	; 0x8003a3 <angle+0x2>
     460:	50 91 a4 03 	lds	r21, 0x03A4	; 0x8003a4 <angle+0x3>
     464:	bc d6       	rcall	.+3448   	; 0x11de <__addsf3>
     466:	6d 8b       	std	Y+21, r22	; 0x15
     468:	7e 8b       	std	Y+22, r23	; 0x16
     46a:	8f 8b       	std	Y+23, r24	; 0x17
     46c:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     46e:	05 ea       	ldi	r16, 0xA5	; 165
     470:	13 e0       	ldi	r17, 0x03	; 3
     472:	d8 01       	movw	r26, r16
     474:	1c 96       	adiw	r26, 0x0c	; 12
     476:	8d 90       	ld	r8, X+
     478:	9d 90       	ld	r9, X+
     47a:	ad 90       	ld	r10, X+
     47c:	bc 90       	ld	r11, X
     47e:	1f 97       	sbiw	r26, 0x0f	; 15
     480:	29 81       	ldd	r18, Y+1	; 0x01
     482:	3a 81       	ldd	r19, Y+2	; 0x02
     484:	4b 81       	ldd	r20, Y+3	; 0x03
     486:	5c 81       	ldd	r21, Y+4	; 0x04
     488:	c5 01       	movw	r24, r10
     48a:	b4 01       	movw	r22, r8
     48c:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     490:	6d 83       	std	Y+5, r22	; 0x05
     492:	7e 83       	std	Y+6, r23	; 0x06
     494:	8f 83       	std	Y+7, r24	; 0x07
     496:	98 87       	std	Y+8, r25	; 0x08
     498:	f8 01       	movw	r30, r16
     49a:	44 80       	ldd	r4, Z+4	; 0x04
     49c:	55 80       	ldd	r5, Z+5	; 0x05
     49e:	66 80       	ldd	r6, Z+6	; 0x06
     4a0:	77 80       	ldd	r7, Z+7	; 0x07
     4a2:	80 85       	ldd	r24, Z+8	; 0x08
     4a4:	91 85       	ldd	r25, Z+9	; 0x09
     4a6:	a2 85       	ldd	r26, Z+10	; 0x0a
     4a8:	b3 85       	ldd	r27, Z+11	; 0x0b
     4aa:	8d 87       	std	Y+13, r24	; 0x0d
     4ac:	9e 87       	std	Y+14, r25	; 0x0e
     4ae:	af 87       	std	Y+15, r26	; 0x0f
     4b0:	b8 8b       	std	Y+16, r27	; 0x10
     4b2:	a3 01       	movw	r20, r6
     4b4:	92 01       	movw	r18, r4
     4b6:	6d 81       	ldd	r22, Y+5	; 0x05
     4b8:	7e 81       	ldd	r23, Y+6	; 0x06
     4ba:	8f 81       	ldd	r24, Y+7	; 0x07
     4bc:	98 85       	ldd	r25, Y+8	; 0x08
     4be:	8e d6       	rcall	.+3356   	; 0x11dc <__subsf3>
     4c0:	2d 85       	ldd	r18, Y+13	; 0x0d
     4c2:	3e 85       	ldd	r19, Y+14	; 0x0e
     4c4:	4f 85       	ldd	r20, Y+15	; 0x0f
     4c6:	58 89       	ldd	r21, Y+16	; 0x10
     4c8:	89 d6       	rcall	.+3346   	; 0x11dc <__subsf3>
     4ca:	20 91 95 03 	lds	r18, 0x0395	; 0x800395 <Q_angle>
     4ce:	30 91 96 03 	lds	r19, 0x0396	; 0x800396 <Q_angle+0x1>
     4d2:	40 91 97 03 	lds	r20, 0x0397	; 0x800397 <Q_angle+0x2>
     4d6:	50 91 98 03 	lds	r21, 0x0398	; 0x800398 <Q_angle+0x3>
     4da:	81 d6       	rcall	.+3330   	; 0x11de <__addsf3>
     4dc:	29 81       	ldd	r18, Y+1	; 0x01
     4de:	3a 81       	ldd	r19, Y+2	; 0x02
     4e0:	4b 81       	ldd	r20, Y+3	; 0x03
     4e2:	5c 81       	ldd	r21, Y+4	; 0x04
     4e4:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     4e8:	f8 01       	movw	r30, r16
     4ea:	20 81       	ld	r18, Z
     4ec:	31 81       	ldd	r19, Z+1	; 0x01
     4ee:	42 81       	ldd	r20, Z+2	; 0x02
     4f0:	53 81       	ldd	r21, Z+3	; 0x03
     4f2:	75 d6       	rcall	.+3306   	; 0x11de <__addsf3>
     4f4:	69 87       	std	Y+9, r22	; 0x09
     4f6:	7a 87       	std	Y+10, r23	; 0x0a
     4f8:	8b 87       	std	Y+11, r24	; 0x0b
     4fa:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     4fc:	2d 81       	ldd	r18, Y+5	; 0x05
     4fe:	3e 81       	ldd	r19, Y+6	; 0x06
     500:	4f 81       	ldd	r20, Y+7	; 0x07
     502:	58 85       	ldd	r21, Y+8	; 0x08
     504:	c3 01       	movw	r24, r6
     506:	b2 01       	movw	r22, r4
     508:	69 d6       	rcall	.+3282   	; 0x11dc <__subsf3>
     50a:	2b 01       	movw	r4, r22
     50c:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     50e:	2d 81       	ldd	r18, Y+5	; 0x05
     510:	3e 81       	ldd	r19, Y+6	; 0x06
     512:	4f 81       	ldd	r20, Y+7	; 0x07
     514:	58 85       	ldd	r21, Y+8	; 0x08
     516:	6d 85       	ldd	r22, Y+13	; 0x0d
     518:	7e 85       	ldd	r23, Y+14	; 0x0e
     51a:	8f 85       	ldd	r24, Y+15	; 0x0f
     51c:	98 89       	ldd	r25, Y+16	; 0x10
     51e:	5e d6       	rcall	.+3260   	; 0x11dc <__subsf3>
     520:	6d 87       	std	Y+13, r22	; 0x0d
     522:	7e 87       	std	Y+14, r23	; 0x0e
     524:	8f 87       	std	Y+15, r24	; 0x0f
     526:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     528:	20 91 8d 03 	lds	r18, 0x038D	; 0x80038d <Q_bias>
     52c:	30 91 8e 03 	lds	r19, 0x038E	; 0x80038e <Q_bias+0x1>
     530:	40 91 8f 03 	lds	r20, 0x038F	; 0x80038f <Q_bias+0x2>
     534:	50 91 90 03 	lds	r21, 0x0390	; 0x800390 <Q_bias+0x3>
     538:	69 81       	ldd	r22, Y+1	; 0x01
     53a:	7a 81       	ldd	r23, Y+2	; 0x02
     53c:	8b 81       	ldd	r24, Y+3	; 0x03
     53e:	9c 81       	ldd	r25, Y+4	; 0x04
     540:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     544:	9b 01       	movw	r18, r22
     546:	ac 01       	movw	r20, r24
     548:	c5 01       	movw	r24, r10
     54a:	b4 01       	movw	r22, r8
     54c:	48 d6       	rcall	.+3216   	; 0x11de <__addsf3>
     54e:	69 8f       	std	Y+25, r22	; 0x19
     550:	7a 8f       	std	Y+26, r23	; 0x1a
     552:	8b 8f       	std	Y+27, r24	; 0x1b
     554:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     556:	20 91 9d 03 	lds	r18, 0x039D	; 0x80039d <R_measure>
     55a:	30 91 9e 03 	lds	r19, 0x039E	; 0x80039e <R_measure+0x1>
     55e:	40 91 9f 03 	lds	r20, 0x039F	; 0x80039f <R_measure+0x2>
     562:	50 91 a0 03 	lds	r21, 0x03A0	; 0x8003a0 <R_measure+0x3>
     566:	69 85       	ldd	r22, Y+9	; 0x09
     568:	7a 85       	ldd	r23, Y+10	; 0x0a
     56a:	8b 85       	ldd	r24, Y+11	; 0x0b
     56c:	9c 85       	ldd	r25, Y+12	; 0x0c
     56e:	37 d6       	rcall	.+3182   	; 0x11de <__addsf3>
     570:	4b 01       	movw	r8, r22
     572:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     574:	9b 01       	movw	r18, r22
     576:	ac 01       	movw	r20, r24
     578:	69 85       	ldd	r22, Y+9	; 0x09
     57a:	7a 85       	ldd	r23, Y+10	; 0x0a
     57c:	8b 85       	ldd	r24, Y+11	; 0x0b
     57e:	9c 85       	ldd	r25, Y+12	; 0x0c
     580:	0f d7       	rcall	.+3614   	; 0x13a0 <__divsf3>
     582:	69 83       	std	Y+1, r22	; 0x01
     584:	7a 83       	std	Y+2, r23	; 0x02
     586:	8b 83       	std	Y+3, r24	; 0x03
     588:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     58a:	a5 01       	movw	r20, r10
     58c:	94 01       	movw	r18, r8
     58e:	6d 85       	ldd	r22, Y+13	; 0x0d
     590:	7e 85       	ldd	r23, Y+14	; 0x0e
     592:	8f 85       	ldd	r24, Y+15	; 0x0f
     594:	98 89       	ldd	r25, Y+16	; 0x10
     596:	04 d7       	rcall	.+3592   	; 0x13a0 <__divsf3>
     598:	6d 83       	std	Y+5, r22	; 0x05
     59a:	7e 83       	std	Y+6, r23	; 0x06
     59c:	8f 83       	std	Y+7, r24	; 0x07
     59e:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     5a0:	2d 89       	ldd	r18, Y+21	; 0x15
     5a2:	3e 89       	ldd	r19, Y+22	; 0x16
     5a4:	4f 89       	ldd	r20, Y+23	; 0x17
     5a6:	58 8d       	ldd	r21, Y+24	; 0x18
     5a8:	69 89       	ldd	r22, Y+17	; 0x11
     5aa:	7a 89       	ldd	r23, Y+18	; 0x12
     5ac:	8b 89       	ldd	r24, Y+19	; 0x13
     5ae:	9c 89       	ldd	r25, Y+20	; 0x14
     5b0:	15 d6       	rcall	.+3114   	; 0x11dc <__subsf3>
     5b2:	69 8b       	std	Y+17, r22	; 0x11
     5b4:	7a 8b       	std	Y+18, r23	; 0x12
     5b6:	8b 8b       	std	Y+19, r24	; 0x13
     5b8:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     5ba:	9b 01       	movw	r18, r22
     5bc:	ac 01       	movw	r20, r24
     5be:	69 81       	ldd	r22, Y+1	; 0x01
     5c0:	7a 81       	ldd	r23, Y+2	; 0x02
     5c2:	8b 81       	ldd	r24, Y+3	; 0x03
     5c4:	9c 81       	ldd	r25, Y+4	; 0x04
     5c6:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     5ca:	9b 01       	movw	r18, r22
     5cc:	ac 01       	movw	r20, r24
     5ce:	6d 89       	ldd	r22, Y+21	; 0x15
     5d0:	7e 89       	ldd	r23, Y+22	; 0x16
     5d2:	8f 89       	ldd	r24, Y+23	; 0x17
     5d4:	98 8d       	ldd	r25, Y+24	; 0x18
     5d6:	03 d6       	rcall	.+3078   	; 0x11de <__addsf3>
     5d8:	4b 01       	movw	r8, r22
     5da:	5c 01       	movw	r10, r24
     5dc:	60 93 a1 03 	sts	0x03A1, r22	; 0x8003a1 <angle>
     5e0:	70 93 a2 03 	sts	0x03A2, r23	; 0x8003a2 <angle+0x1>
     5e4:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <angle+0x2>
     5e8:	90 93 a4 03 	sts	0x03A4, r25	; 0x8003a4 <angle+0x3>
	bias += K[1] * y;
     5ec:	29 89       	ldd	r18, Y+17	; 0x11
     5ee:	3a 89       	ldd	r19, Y+18	; 0x12
     5f0:	4b 89       	ldd	r20, Y+19	; 0x13
     5f2:	5c 89       	ldd	r21, Y+20	; 0x14
     5f4:	6d 81       	ldd	r22, Y+5	; 0x05
     5f6:	7e 81       	ldd	r23, Y+6	; 0x06
     5f8:	8f 81       	ldd	r24, Y+7	; 0x07
     5fa:	98 85       	ldd	r25, Y+8	; 0x08
     5fc:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     600:	9b 01       	movw	r18, r22
     602:	ac 01       	movw	r20, r24
     604:	c7 01       	movw	r24, r14
     606:	b6 01       	movw	r22, r12
     608:	ea d5       	rcall	.+3028   	; 0x11de <__addsf3>
     60a:	60 93 99 03 	sts	0x0399, r22	; 0x800399 <bias>
     60e:	70 93 9a 03 	sts	0x039A, r23	; 0x80039a <bias+0x1>
     612:	80 93 9b 03 	sts	0x039B, r24	; 0x80039b <bias+0x2>
     616:	90 93 9c 03 	sts	0x039C, r25	; 0x80039c <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     61a:	29 81       	ldd	r18, Y+1	; 0x01
     61c:	3a 81       	ldd	r19, Y+2	; 0x02
     61e:	4b 81       	ldd	r20, Y+3	; 0x03
     620:	5c 81       	ldd	r21, Y+4	; 0x04
     622:	69 85       	ldd	r22, Y+9	; 0x09
     624:	7a 85       	ldd	r23, Y+10	; 0x0a
     626:	8b 85       	ldd	r24, Y+11	; 0x0b
     628:	9c 85       	ldd	r25, Y+12	; 0x0c
     62a:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     62e:	9b 01       	movw	r18, r22
     630:	ac 01       	movw	r20, r24
     632:	69 85       	ldd	r22, Y+9	; 0x09
     634:	7a 85       	ldd	r23, Y+10	; 0x0a
     636:	8b 85       	ldd	r24, Y+11	; 0x0b
     638:	9c 85       	ldd	r25, Y+12	; 0x0c
     63a:	d0 d5       	rcall	.+2976   	; 0x11dc <__subsf3>
     63c:	d8 01       	movw	r26, r16
     63e:	6d 93       	st	X+, r22
     640:	7d 93       	st	X+, r23
     642:	8d 93       	st	X+, r24
     644:	9c 93       	st	X, r25
     646:	13 97       	sbiw	r26, 0x03	; 3
	P[0][1] -= K[0] * P01_temp;
     648:	29 81       	ldd	r18, Y+1	; 0x01
     64a:	3a 81       	ldd	r19, Y+2	; 0x02
     64c:	4b 81       	ldd	r20, Y+3	; 0x03
     64e:	5c 81       	ldd	r21, Y+4	; 0x04
     650:	c3 01       	movw	r24, r6
     652:	b2 01       	movw	r22, r4
     654:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     658:	9b 01       	movw	r18, r22
     65a:	ac 01       	movw	r20, r24
     65c:	c3 01       	movw	r24, r6
     65e:	b2 01       	movw	r22, r4
     660:	bd d5       	rcall	.+2938   	; 0x11dc <__subsf3>
     662:	f8 01       	movw	r30, r16
     664:	64 83       	std	Z+4, r22	; 0x04
     666:	75 83       	std	Z+5, r23	; 0x05
     668:	86 83       	std	Z+6, r24	; 0x06
     66a:	97 83       	std	Z+7, r25	; 0x07
	P[1][0] -= K[1] * P00_temp;
     66c:	2d 81       	ldd	r18, Y+5	; 0x05
     66e:	3e 81       	ldd	r19, Y+6	; 0x06
     670:	4f 81       	ldd	r20, Y+7	; 0x07
     672:	58 85       	ldd	r21, Y+8	; 0x08
     674:	69 85       	ldd	r22, Y+9	; 0x09
     676:	7a 85       	ldd	r23, Y+10	; 0x0a
     678:	8b 85       	ldd	r24, Y+11	; 0x0b
     67a:	9c 85       	ldd	r25, Y+12	; 0x0c
     67c:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     680:	9b 01       	movw	r18, r22
     682:	ac 01       	movw	r20, r24
     684:	6d 85       	ldd	r22, Y+13	; 0x0d
     686:	7e 85       	ldd	r23, Y+14	; 0x0e
     688:	8f 85       	ldd	r24, Y+15	; 0x0f
     68a:	98 89       	ldd	r25, Y+16	; 0x10
     68c:	a7 d5       	rcall	.+2894   	; 0x11dc <__subsf3>
     68e:	d8 01       	movw	r26, r16
     690:	18 96       	adiw	r26, 0x08	; 8
     692:	6d 93       	st	X+, r22
     694:	7d 93       	st	X+, r23
     696:	8d 93       	st	X+, r24
     698:	9c 93       	st	X, r25
     69a:	1b 97       	sbiw	r26, 0x0b	; 11
	P[1][1] -= K[1] * P01_temp;
     69c:	2d 81       	ldd	r18, Y+5	; 0x05
     69e:	3e 81       	ldd	r19, Y+6	; 0x06
     6a0:	4f 81       	ldd	r20, Y+7	; 0x07
     6a2:	58 85       	ldd	r21, Y+8	; 0x08
     6a4:	c3 01       	movw	r24, r6
     6a6:	b2 01       	movw	r22, r4
     6a8:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__mulsf3>
     6ac:	9b 01       	movw	r18, r22
     6ae:	ac 01       	movw	r20, r24
     6b0:	69 8d       	ldd	r22, Y+25	; 0x19
     6b2:	7a 8d       	ldd	r23, Y+26	; 0x1a
     6b4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     6b6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6b8:	91 d5       	rcall	.+2850   	; 0x11dc <__subsf3>
     6ba:	f8 01       	movw	r30, r16
     6bc:	64 87       	std	Z+12, r22	; 0x0c
     6be:	75 87       	std	Z+13, r23	; 0x0d
     6c0:	86 87       	std	Z+14, r24	; 0x0e
     6c2:	97 87       	std	Z+15, r25	; 0x0f

	return angle;
};
     6c4:	c5 01       	movw	r24, r10
     6c6:	b4 01       	movw	r22, r8
     6c8:	6c 96       	adiw	r28, 0x1c	; 28
     6ca:	0f b6       	in	r0, 0x3f	; 63
     6cc:	f8 94       	cli
     6ce:	de bf       	out	0x3e, r29	; 62
     6d0:	0f be       	out	0x3f, r0	; 63
     6d2:	cd bf       	out	0x3d, r28	; 61
     6d4:	df 91       	pop	r29
     6d6:	cf 91       	pop	r28
     6d8:	1f 91       	pop	r17
     6da:	0f 91       	pop	r16
     6dc:	ff 90       	pop	r15
     6de:	ef 90       	pop	r14
     6e0:	df 90       	pop	r13
     6e2:	cf 90       	pop	r12
     6e4:	bf 90       	pop	r11
     6e6:	af 90       	pop	r10
     6e8:	9f 90       	pop	r9
     6ea:	8f 90       	pop	r8
     6ec:	7f 90       	pop	r7
     6ee:	6f 90       	pop	r6
     6f0:	5f 90       	pop	r5
     6f2:	4f 90       	pop	r4
     6f4:	08 95       	ret

000006f6 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle = 0.001f;
     6f6:	8f e6       	ldi	r24, 0x6F	; 111
     6f8:	92 e1       	ldi	r25, 0x12	; 18
     6fa:	a3 e8       	ldi	r26, 0x83	; 131
     6fc:	ba e3       	ldi	r27, 0x3A	; 58
     6fe:	80 93 95 03 	sts	0x0395, r24	; 0x800395 <Q_angle>
     702:	90 93 96 03 	sts	0x0396, r25	; 0x800396 <Q_angle+0x1>
     706:	a0 93 97 03 	sts	0x0397, r26	; 0x800397 <Q_angle+0x2>
     70a:	b0 93 98 03 	sts	0x0398, r27	; 0x800398 <Q_angle+0x3>
	Q_bias = 0.003f;
     70e:	86 ea       	ldi	r24, 0xA6	; 166
     710:	9b e9       	ldi	r25, 0x9B	; 155
     712:	a4 e4       	ldi	r26, 0x44	; 68
     714:	bb e3       	ldi	r27, 0x3B	; 59
     716:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <Q_bias>
     71a:	90 93 8e 03 	sts	0x038E, r25	; 0x80038e <Q_bias+0x1>
     71e:	a0 93 8f 03 	sts	0x038F, r26	; 0x80038f <Q_bias+0x2>
     722:	b0 93 90 03 	sts	0x0390, r27	; 0x800390 <Q_bias+0x3>
	R_measure = 0.03f;
     726:	8f e8       	ldi	r24, 0x8F	; 143
     728:	92 ec       	ldi	r25, 0xC2	; 194
     72a:	a5 ef       	ldi	r26, 0xF5	; 245
     72c:	bc e3       	ldi	r27, 0x3C	; 60
     72e:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <R_measure>
     732:	90 93 9e 03 	sts	0x039E, r25	; 0x80039e <R_measure+0x1>
     736:	a0 93 9f 03 	sts	0x039F, r26	; 0x80039f <R_measure+0x2>
     73a:	b0 93 a0 03 	sts	0x03A0, r27	; 0x8003a0 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     73e:	10 92 a1 03 	sts	0x03A1, r1	; 0x8003a1 <angle>
     742:	10 92 a2 03 	sts	0x03A2, r1	; 0x8003a2 <angle+0x1>
     746:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <angle+0x2>
     74a:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <angle+0x3>
	bias = 0.0f; // Reset bias
     74e:	10 92 99 03 	sts	0x0399, r1	; 0x800399 <bias>
     752:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <bias+0x1>
     756:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <bias+0x2>
     75a:	10 92 9c 03 	sts	0x039C, r1	; 0x80039c <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     75e:	e5 ea       	ldi	r30, 0xA5	; 165
     760:	f3 e0       	ldi	r31, 0x03	; 3
     762:	10 82       	st	Z, r1
     764:	11 82       	std	Z+1, r1	; 0x01
     766:	12 82       	std	Z+2, r1	; 0x02
     768:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     76a:	14 82       	std	Z+4, r1	; 0x04
     76c:	15 82       	std	Z+5, r1	; 0x05
     76e:	16 82       	std	Z+6, r1	; 0x06
     770:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     772:	10 86       	std	Z+8, r1	; 0x08
     774:	11 86       	std	Z+9, r1	; 0x09
     776:	12 86       	std	Z+10, r1	; 0x0a
     778:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     77a:	14 86       	std	Z+12, r1	; 0x0c
     77c:	15 86       	std	Z+13, r1	; 0x0d
     77e:	16 86       	std	Z+14, r1	; 0x0e
     780:	17 86       	std	Z+15, r1	; 0x0f
     782:	08 95       	ret

00000784 <main>:
#include <time.h>
uint8_t buffer[14];
bool loop_bool=true;
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	cd b7       	in	r28, 0x3d	; 61
     78a:	de b7       	in	r29, 0x3e	; 62
     78c:	a4 97       	sbiw	r28, 0x24	; 36
     78e:	0f b6       	in	r0, 0x3f	; 63
     790:	f8 94       	cli
     792:	de bf       	out	0x3e, r29	; 62
     794:	0f be       	out	0x3f, r0	; 63
     796:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     798:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <__data_end+0x1>
     79c:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <__data_end>
	V_step=V_step_predefine;
     7a0:	88 e7       	ldi	r24, 0x78	; 120
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	90 93 72 03 	sts	0x0372, r25	; 0x800372 <V_step+0x1>
     7a8:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <V_step>
	W_step=W_step_predefine;
     7ac:	80 ef       	ldi	r24, 0xF0	; 240
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     7b4:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	incr=-1;
     7b8:	8f ef       	ldi	r24, 0xFF	; 255
     7ba:	9f ef       	ldi	r25, 0xFF	; 255
     7bc:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <incr+0x1>
     7c0:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <incr>
	pwm_delay=2000;
     7c4:	80 ed       	ldi	r24, 0xD0	; 208
     7c6:	97 e0       	ldi	r25, 0x07	; 7
     7c8:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <pwm_delay+0x1>
     7cc:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <pwm_delay>
	cli();
     7d0:	f8 94       	cli
	init_gpio();
     7d2:	6e dd       	rcall	.-1316   	; 0x2b0 <init_gpio>
		#ifdef GYRO
			i2c_init();
     7d4:	db d3       	rcall	.+1974   	; 0xf8c <i2c_init>
		#endif
	USART_Init(MY_UBRR);
     7d6:	8c e0       	ldi	r24, 0x0C	; 12
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	89 d4       	rcall	.+2322   	; 0x10ee <USART_Init>
	uart_str = fdevopen(uart_putchar, NULL);
     7dc:	60 e0       	ldi	r22, 0x00	; 0
     7de:	70 e0       	ldi	r23, 0x00	; 0
     7e0:	82 e8       	ldi	r24, 0x82	; 130
     7e2:	98 e0       	ldi	r25, 0x08	; 8
     7e4:	0e 94 10 11 	call	0x2220	; 0x2220 <fdevopen>
     7e8:	90 93 b6 03 	sts	0x03B6, r25	; 0x8003b6 <uart_str+0x1>
     7ec:	80 93 b5 03 	sts	0x03B5, r24	; 0x8003b5 <uart_str>
	setup_timer0();
     7f0:	29 d3       	rcall	.+1618   	; 0xe44 <setup_timer0>
	Enable_timer0_overflow_interrupt();//micros
     7f2:	2f d3       	rcall	.+1630   	; 0xe52 <Enable_timer0_overflow_interrupt>
	setup_timer4();//pwm
     7f4:	04 d3       	rcall	.+1544   	; 0xdfe <setup_timer4>
	setup_timer5();
     7f6:	17 d3       	rcall	.+1582   	; 0xe26 <setup_timer5>
	Enable_timer5_compare_interrupt();//motor
     7f8:	1f d3       	rcall	.+1598   	; 0xe38 <Enable_timer5_compare_interrupt>
	OCR5A=4000;
     7fa:	80 ea       	ldi	r24, 0xA0	; 160
     7fc:	9f e0       	ldi	r25, 0x0F	; 15
     7fe:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     802:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
	unsigned long timer1=micros();
     806:	2b d3       	rcall	.+1622   	; 0xe5e <micros>
     808:	2b 01       	movw	r4, r22
     80a:	3c 01       	movw	r6, r24
				int16_t gyroZ_calib=gyro_offset_z;
				int16_t accelX_calib=accel_offset_x;
				int16_t accelY_calib=accel_offset_y;
				int16_t accelZ_calib=accel_offset_z;
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     80c:	67 e0       	ldi	r22, 0x07	; 7
     80e:	89 e1       	ldi	r24, 0x19	; 25
     810:	35 d2       	rcall	.+1130   	; 0xc7c <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     812:	60 e0       	ldi	r22, 0x00	; 0
     814:	8a e1       	ldi	r24, 0x1A	; 26
     816:	32 d2       	rcall	.+1124   	; 0xc7c <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     818:	68 e0       	ldi	r22, 0x08	; 8
     81a:	8b e1       	ldi	r24, 0x1B	; 27
     81c:	2f d2       	rcall	.+1118   	; 0xc7c <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     81e:	60 e1       	ldi	r22, 0x10	; 16
     820:	8c e1       	ldi	r24, 0x1C	; 28
     822:	2c d2       	rcall	.+1112   	; 0xc7c <mpu6050_writeByte>
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     824:	61 e0       	ldi	r22, 0x01	; 1
     826:	8b e6       	ldi	r24, 0x6B	; 107
     828:	29 d2       	rcall	.+1106   	; 0xc7c <mpu6050_writeByte>
		double gyroXangle;
		double gyroYangle;
		double compAngleX;
		double compAngleY;
	#endif  
	Kalman_init();
     82a:	65 df       	rcall	.-310    	; 0x6f6 <Kalman_init>
	double angle_roll_kalman=0;
	double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
     82c:	6b 85       	ldd	r22, Y+11	; 0x0b
     82e:	7c 85       	ldd	r23, Y+12	; 0x0c
     830:	07 2e       	mov	r0, r23
     832:	00 0c       	add	r0, r0
     834:	88 0b       	sbc	r24, r24
     836:	99 0b       	sbc	r25, r25
     838:	4e d6       	rcall	.+3228   	; 0x14d6 <__floatsisf>
     83a:	6b 01       	movw	r12, r22
     83c:	7c 01       	movw	r14, r24
     83e:	89 85       	ldd	r24, Y+9	; 0x09
     840:	9a 85       	ldd	r25, Y+10	; 0x0a
     842:	bc 01       	movw	r22, r24
     844:	99 0f       	add	r25, r25
     846:	88 0b       	sbc	r24, r24
     848:	99 0b       	sbc	r25, r25
     84a:	45 d6       	rcall	.+3210   	; 0x14d6 <__floatsisf>
     84c:	a7 01       	movw	r20, r14
     84e:	96 01       	movw	r18, r12
     850:	50 d5       	rcall	.+2720   	; 0x12f2 <atan2>
     852:	25 e3       	ldi	r18, 0x35	; 53
     854:	3a ef       	ldi	r19, 0xFA	; 250
     856:	4e e8       	ldi	r20, 0x8E	; 142
     858:	5c e3       	ldi	r21, 0x3C	; 60
     85a:	49 d7       	rcall	.+3730   	; 0x16ee <__mulsf3>
	angle=roll;//set starting angle
     85c:	60 93 a1 03 	sts	0x03A1, r22	; 0x8003a1 <angle>
     860:	70 93 a2 03 	sts	0x03A2, r23	; 0x8003a2 <angle+0x1>
     864:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <angle+0x2>
     868:	90 93 a4 03 	sts	0x03A4, r25	; 0x8003a4 <angle+0x3>
	sei();
     86c:	78 94       	sei
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
		double angle_roll=0;
     86e:	19 8a       	std	Y+17, r1	; 0x11
     870:	1a 8a       	std	Y+18, r1	; 0x12
     872:	1b 8a       	std	Y+19, r1	; 0x13
     874:	1c 8a       	std	Y+20, r1	; 0x14
		int16_t gyro_y;
		int16_t gyro_z;
		int16_t accel_x;
		int16_t accel_y;
		int16_t accel_z;
		double angle_pitch=0;
     876:	1d 8a       	std	Y+21, r1	; 0x15
     878:	1e 8a       	std	Y+22, r1	; 0x16
     87a:	1f 8a       	std	Y+23, r1	; 0x17
     87c:	18 8e       	std	Y+24, r1	; 0x18
			printSD("",final_angleY);
			printf("\n");		
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     87e:	0f 2e       	mov	r0, r31
     880:	ff ed       	ldi	r31, 0xDF	; 223
     882:	2f 2e       	mov	r2, r31
     884:	ff e7       	ldi	r31, 0x7F	; 127
     886:	3f 2e       	mov	r3, r31
     888:	f0 2d       	mov	r31, r0
	angle=roll;//set starting angle
	sei();
    while (1) /*---------------------------while(1)---------------------------------*/
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     88a:	ce 01       	movw	r24, r28
     88c:	05 96       	adiw	r24, 0x05	; 5
     88e:	7c 01       	movw	r14, r24
     890:	8e 01       	movw	r16, r28
     892:	0d 5f       	subi	r16, 0xFD	; 253
     894:	1f 4f       	sbci	r17, 0xFF	; 255
     896:	9e 01       	movw	r18, r28
     898:	2f 5f       	subi	r18, 0xFF	; 255
     89a:	3f 4f       	sbci	r19, 0xFF	; 255
     89c:	ae 01       	movw	r20, r28
     89e:	45 5f       	subi	r20, 0xF5	; 245
     8a0:	5f 4f       	sbci	r21, 0xFF	; 255
     8a2:	be 01       	movw	r22, r28
     8a4:	67 5f       	subi	r22, 0xF7	; 247
     8a6:	7f 4f       	sbci	r23, 0xFF	; 255
     8a8:	02 96       	adiw	r24, 0x02	; 2
     8aa:	3e d2       	rcall	.+1148   	; 0xd28 <mpu6050_getRawData>
			accel_x-=accelX_calib;
     8ac:	8f 81       	ldd	r24, Y+7	; 0x07
     8ae:	98 85       	ldd	r25, Y+8	; 0x08
     8b0:	86 5d       	subi	r24, 0xD6	; 214
     8b2:	9e 4f       	sbci	r25, 0xFE	; 254
     8b4:	98 87       	std	Y+8, r25	; 0x08
     8b6:	8f 83       	std	Y+7, r24	; 0x07
			accel_y-=accelY_calib;
     8b8:	89 85       	ldd	r24, Y+9	; 0x09
     8ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     8bc:	82 52       	subi	r24, 0x22	; 34
     8be:	95 4f       	sbci	r25, 0xF5	; 245
     8c0:	9a 87       	std	Y+10, r25	; 0x0a
     8c2:	89 87       	std	Y+9, r24	; 0x09
			accel_z-=accelZ_calib;
     8c4:	8b 85       	ldd	r24, Y+11	; 0x0b
     8c6:	9c 85       	ldd	r25, Y+12	; 0x0c
     8c8:	86 55       	subi	r24, 0x56	; 86
     8ca:	98 40       	sbci	r25, 0x08	; 8
     8cc:	9c 87       	std	Y+12, r25	; 0x0c
     8ce:	8b 87       	std	Y+11, r24	; 0x0b
			gyro_x-=gyroX_calib;
     8d0:	89 81       	ldd	r24, Y+1	; 0x01
     8d2:	9a 81       	ldd	r25, Y+2	; 0x02
     8d4:	84 59       	subi	r24, 0x94	; 148
     8d6:	9f 4f       	sbci	r25, 0xFF	; 255
     8d8:	9a 83       	std	Y+2, r25	; 0x02
     8da:	89 83       	std	Y+1, r24	; 0x01
			gyro_y-=gyroY_calib;
     8dc:	8b 81       	ldd	r24, Y+3	; 0x03
     8de:	9c 81       	ldd	r25, Y+4	; 0x04
     8e0:	80 52       	subi	r24, 0x20	; 32
     8e2:	9f 4f       	sbci	r25, 0xFF	; 255
     8e4:	9c 83       	std	Y+4, r25	; 0x04
     8e6:	8b 83       	std	Y+3, r24	; 0x03
			gyro_z-=gyroZ_calib;
     8e8:	8d 81       	ldd	r24, Y+5	; 0x05
     8ea:	9e 81       	ldd	r25, Y+6	; 0x06
     8ec:	8f 58       	subi	r24, 0x8F	; 143
     8ee:	9d 4f       	sbci	r25, 0xFD	; 253
     8f0:	9e 83       	std	Y+6, r25	; 0x06
     8f2:	8d 83       	std	Y+5, r24	; 0x05
			printSI("ay=",accel_y);
			printSI("az=",accel_z);
			printf("\n");
			/*--------end------*/			
		#else
			double dt = ((double)(micros() - timer1))/1000000;
     8f4:	b4 d2       	rcall	.+1384   	; 0xe5e <micros>
     8f6:	64 19       	sub	r22, r4
     8f8:	75 09       	sbc	r23, r5
     8fa:	86 09       	sbc	r24, r6
     8fc:	97 09       	sbc	r25, r7
     8fe:	e9 d5       	rcall	.+3026   	; 0x14d2 <__floatunsisf>
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	34 e2       	ldi	r19, 0x24	; 36
     904:	44 e7       	ldi	r20, 0x74	; 116
     906:	59 e4       	ldi	r21, 0x49	; 73
     908:	4b d5       	rcall	.+2710   	; 0x13a0 <__divsf3>
     90a:	69 8f       	std	Y+25, r22	; 0x19
     90c:	7a 8f       	std	Y+26, r23	; 0x1a
     90e:	8b 8f       	std	Y+27, r24	; 0x1b
     910:	9c 8f       	std	Y+28, r25	; 0x1c
			timer1=micros();
     912:	a5 d2       	rcall	.+1354   	; 0xe5e <micros>
     914:	2b 01       	movw	r4, r22
     916:	3c 01       	movw	r6, r24
			double gyroXrate = gyro_x/65.5;// deg/s 
     918:	69 81       	ldd	r22, Y+1	; 0x01
     91a:	7a 81       	ldd	r23, Y+2	; 0x02
     91c:	07 2e       	mov	r0, r23
     91e:	00 0c       	add	r0, r0
     920:	88 0b       	sbc	r24, r24
     922:	99 0b       	sbc	r25, r25
     924:	d8 d5       	rcall	.+2992   	; 0x14d6 <__floatsisf>
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	43 e8       	ldi	r20, 0x83	; 131
     92c:	52 e4       	ldi	r21, 0x42	; 66
     92e:	38 d5       	rcall	.+2672   	; 0x13a0 <__divsf3>
     930:	69 a3       	std	Y+33, r22	; 0x21
     932:	7a a3       	std	Y+34, r23	; 0x22
     934:	8b a3       	std	Y+35, r24	; 0x23
     936:	9c a3       	std	Y+36, r25	; 0x24
			double gyroYrate = gyro_y/65.5;// deg/s
     938:	0b 81       	ldd	r16, Y+3	; 0x03
     93a:	1c 81       	ldd	r17, Y+4	; 0x04
			if (!loop_bool) {
     93c:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <loop_bool>
     940:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <loop_bool+0x1>
     944:	89 2b       	or	r24, r25
     946:	79 f5       	brne	.+94     	; 0x9a6 <main+0x222>
				angle_pitch += gyroXrate*dt; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     948:	29 8d       	ldd	r18, Y+25	; 0x19
     94a:	3a 8d       	ldd	r19, Y+26	; 0x1a
     94c:	4b 8d       	ldd	r20, Y+27	; 0x1b
     94e:	5c 8d       	ldd	r21, Y+28	; 0x1c
     950:	69 a1       	ldd	r22, Y+33	; 0x21
     952:	7a a1       	ldd	r23, Y+34	; 0x22
     954:	8b a1       	ldd	r24, Y+35	; 0x23
     956:	9c a1       	ldd	r25, Y+36	; 0x24
     958:	ca d6       	rcall	.+3476   	; 0x16ee <__mulsf3>
     95a:	9b 01       	movw	r18, r22
     95c:	ac 01       	movw	r20, r24
     95e:	6d 89       	ldd	r22, Y+21	; 0x15
     960:	7e 89       	ldd	r23, Y+22	; 0x16
     962:	8f 89       	ldd	r24, Y+23	; 0x17
     964:	98 8d       	ldd	r25, Y+24	; 0x18
     966:	3b d4       	rcall	.+2166   	; 0x11de <__addsf3>
     968:	6d 8b       	std	Y+21, r22	; 0x15
     96a:	7e 8b       	std	Y+22, r23	; 0x16
     96c:	8f 8b       	std	Y+23, r24	; 0x17
     96e:	98 8f       	std	Y+24, r25	; 0x18
			/*--------end------*/			
		#else
			double dt = ((double)(micros() - timer1))/1000000;
			timer1=micros();
			double gyroXrate = gyro_x/65.5;// deg/s 
			double gyroYrate = gyro_y/65.5;// deg/s
     970:	b8 01       	movw	r22, r16
     972:	11 0f       	add	r17, r17
     974:	88 0b       	sbc	r24, r24
     976:	99 0b       	sbc	r25, r25
     978:	ae d5       	rcall	.+2908   	; 0x14d6 <__floatsisf>
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	43 e8       	ldi	r20, 0x83	; 131
     980:	52 e4       	ldi	r21, 0x42	; 66
     982:	0e d5       	rcall	.+2588   	; 0x13a0 <__divsf3>
			if (!loop_bool) {
				angle_pitch += gyroXrate*dt; //Calculate the traveled pitch angle and add this to the angle_pitch variable
				angle_roll += gyroYrate*dt;  //Calculate the traveled roll angle and add this to the angle_roll variable			
     984:	29 8d       	ldd	r18, Y+25	; 0x19
     986:	3a 8d       	ldd	r19, Y+26	; 0x1a
     988:	4b 8d       	ldd	r20, Y+27	; 0x1b
     98a:	5c 8d       	ldd	r21, Y+28	; 0x1c
     98c:	b0 d6       	rcall	.+3424   	; 0x16ee <__mulsf3>
     98e:	9b 01       	movw	r18, r22
     990:	ac 01       	movw	r20, r24
     992:	69 89       	ldd	r22, Y+17	; 0x11
     994:	7a 89       	ldd	r23, Y+18	; 0x12
     996:	8b 89       	ldd	r24, Y+19	; 0x13
     998:	9c 89       	ldd	r25, Y+20	; 0x14
     99a:	21 d4       	rcall	.+2114   	; 0x11de <__addsf3>
     99c:	69 8b       	std	Y+17, r22	; 0x11
     99e:	7a 8b       	std	Y+18, r23	; 0x12
     9a0:	8b 8b       	std	Y+19, r24	; 0x13
     9a2:	9c 8b       	std	Y+20, r25	; 0x14
     9a4:	04 c0       	rjmp	.+8      	; 0x9ae <main+0x22a>
			}
			else loop_bool=false;	
     9a6:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <loop_bool+0x1>
     9aa:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <loop_bool>
			angle_pitch += angle_roll * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the roll angle to the pitch angel
     9ae:	6d 81       	ldd	r22, Y+5	; 0x05
     9b0:	7e 81       	ldd	r23, Y+6	; 0x06
     9b2:	07 2e       	mov	r0, r23
     9b4:	00 0c       	add	r0, r0
     9b6:	88 0b       	sbc	r24, r24
     9b8:	99 0b       	sbc	r25, r25
     9ba:	8d d5       	rcall	.+2842   	; 0x14d6 <__floatsisf>
     9bc:	6b 01       	movw	r12, r22
     9be:	7c 01       	movw	r14, r24
     9c0:	20 e0       	ldi	r18, 0x00	; 0
     9c2:	30 e0       	ldi	r19, 0x00	; 0
     9c4:	43 e8       	ldi	r20, 0x83	; 131
     9c6:	52 e4       	ldi	r21, 0x42	; 66
     9c8:	69 8d       	ldd	r22, Y+25	; 0x19
     9ca:	7a 8d       	ldd	r23, Y+26	; 0x1a
     9cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     9ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
     9d0:	e7 d4       	rcall	.+2510   	; 0x13a0 <__divsf3>
     9d2:	2b ed       	ldi	r18, 0xDB	; 219
     9d4:	3f e0       	ldi	r19, 0x0F	; 15
     9d6:	49 e4       	ldi	r20, 0x49	; 73
     9d8:	50 e4       	ldi	r21, 0x40	; 64
     9da:	89 d6       	rcall	.+3346   	; 0x16ee <__mulsf3>
     9dc:	20 e0       	ldi	r18, 0x00	; 0
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	44 e3       	ldi	r20, 0x34	; 52
     9e2:	53 e4       	ldi	r21, 0x43	; 67
     9e4:	dd d4       	rcall	.+2490   	; 0x13a0 <__divsf3>
     9e6:	9b 01       	movw	r18, r22
     9e8:	ac 01       	movw	r20, r24
     9ea:	c7 01       	movw	r24, r14
     9ec:	b6 01       	movw	r22, r12
     9ee:	7f d6       	rcall	.+3326   	; 0x16ee <__mulsf3>
     9f0:	e1 d6       	rcall	.+3522   	; 0x17b4 <sin>
     9f2:	6b 01       	movw	r12, r22
     9f4:	7c 01       	movw	r14, r24
     9f6:	29 89       	ldd	r18, Y+17	; 0x11
     9f8:	3a 89       	ldd	r19, Y+18	; 0x12
     9fa:	4b 89       	ldd	r20, Y+19	; 0x13
     9fc:	5c 89       	ldd	r21, Y+20	; 0x14
     9fe:	77 d6       	rcall	.+3310   	; 0x16ee <__mulsf3>
     a00:	9b 01       	movw	r18, r22
     a02:	ac 01       	movw	r20, r24
     a04:	6d 89       	ldd	r22, Y+21	; 0x15
     a06:	7e 89       	ldd	r23, Y+22	; 0x16
     a08:	8f 89       	ldd	r24, Y+23	; 0x17
     a0a:	98 8d       	ldd	r25, Y+24	; 0x18
     a0c:	e8 d3       	rcall	.+2000   	; 0x11de <__addsf3>
     a0e:	6d 8b       	std	Y+21, r22	; 0x15
     a10:	7e 8b       	std	Y+22, r23	; 0x16
     a12:	8f 8b       	std	Y+23, r24	; 0x17
     a14:	98 8f       	std	Y+24, r25	; 0x18
			angle_roll -= angle_pitch * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the pitch angle to the roll angel
     a16:	9b 01       	movw	r18, r22
     a18:	ac 01       	movw	r20, r24
     a1a:	c7 01       	movw	r24, r14
     a1c:	b6 01       	movw	r22, r12
     a1e:	67 d6       	rcall	.+3278   	; 0x16ee <__mulsf3>
     a20:	9b 01       	movw	r18, r22
     a22:	ac 01       	movw	r20, r24
     a24:	69 89       	ldd	r22, Y+17	; 0x11
     a26:	7a 89       	ldd	r23, Y+18	; 0x12
     a28:	8b 89       	ldd	r24, Y+19	; 0x13
     a2a:	9c 89       	ldd	r25, Y+20	; 0x14
     a2c:	d7 d3       	rcall	.+1966   	; 0x11dc <__subsf3>
     a2e:	69 8b       	std	Y+17, r22	; 0x11
     a30:	7a 8b       	std	Y+18, r23	; 0x12
     a32:	8b 8b       	std	Y+19, r24	; 0x13
     a34:	9c 8b       	std	Y+20, r25	; 0x14
			
			double temporar_accel_x=accel_x/100;
     a36:	0f 81       	ldd	r16, Y+7	; 0x07
     a38:	18 85       	ldd	r17, Y+8	; 0x08
     a3a:	c8 01       	movw	r24, r16
     a3c:	64 e6       	ldi	r22, 0x64	; 100
     a3e:	70 e0       	ldi	r23, 0x00	; 0
     a40:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     a44:	07 2e       	mov	r0, r23
     a46:	00 0c       	add	r0, r0
     a48:	88 0b       	sbc	r24, r24
     a4a:	99 0b       	sbc	r25, r25
     a4c:	44 d5       	rcall	.+2696   	; 0x14d6 <__floatsisf>
     a4e:	6d 87       	std	Y+13, r22	; 0x0d
     a50:	7e 87       	std	Y+14, r23	; 0x0e
     a52:	8f 87       	std	Y+15, r24	; 0x0f
     a54:	98 8b       	std	Y+16, r25	; 0x10
			double temporar_accel_y=accel_y/100;
     a56:	89 85       	ldd	r24, Y+9	; 0x09
     a58:	9a 85       	ldd	r25, Y+10	; 0x0a
     a5a:	64 e6       	ldi	r22, 0x64	; 100
     a5c:	70 e0       	ldi	r23, 0x00	; 0
     a5e:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     a62:	07 2e       	mov	r0, r23
     a64:	00 0c       	add	r0, r0
     a66:	88 0b       	sbc	r24, r24
     a68:	99 0b       	sbc	r25, r25
     a6a:	35 d5       	rcall	.+2666   	; 0x14d6 <__floatsisf>
     a6c:	4b 01       	movw	r8, r22
     a6e:	5c 01       	movw	r10, r24
			double temporar_accel_z=accel_z/100;	
     a70:	8b 85       	ldd	r24, Y+11	; 0x0b
     a72:	9c 85       	ldd	r25, Y+12	; 0x0c
     a74:	64 e6       	ldi	r22, 0x64	; 100
     a76:	70 e0       	ldi	r23, 0x00	; 0
     a78:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     a7c:	07 2e       	mov	r0, r23
     a7e:	00 0c       	add	r0, r0
     a80:	88 0b       	sbc	r24, r24
     a82:	99 0b       	sbc	r25, r25
     a84:	28 d5       	rcall	.+2640   	; 0x14d6 <__floatsisf>
     a86:	6b 01       	movw	r12, r22
     a88:	7c 01       	movw	r14, r24
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
     a8a:	2d 85       	ldd	r18, Y+13	; 0x0d
     a8c:	3e 85       	ldd	r19, Y+14	; 0x0e
     a8e:	4f 85       	ldd	r20, Y+15	; 0x0f
     a90:	58 89       	ldd	r21, Y+16	; 0x10
     a92:	ca 01       	movw	r24, r20
     a94:	b9 01       	movw	r22, r18
     a96:	2b d6       	rcall	.+3158   	; 0x16ee <__mulsf3>
     a98:	6d 8f       	std	Y+29, r22	; 0x1d
     a9a:	7e 8f       	std	Y+30, r23	; 0x1e
     a9c:	8f 8f       	std	Y+31, r24	; 0x1f
     a9e:	98 a3       	std	Y+32, r25	; 0x20
     aa0:	a5 01       	movw	r20, r10
     aa2:	94 01       	movw	r18, r8
     aa4:	c5 01       	movw	r24, r10
     aa6:	b4 01       	movw	r22, r8
     aa8:	22 d6       	rcall	.+3140   	; 0x16ee <__mulsf3>
     aaa:	9b 01       	movw	r18, r22
     aac:	ac 01       	movw	r20, r24
     aae:	6d 8d       	ldd	r22, Y+29	; 0x1d
     ab0:	7e 8d       	ldd	r23, Y+30	; 0x1e
     ab2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     ab4:	98 a1       	ldd	r25, Y+32	; 0x20
     ab6:	93 d3       	rcall	.+1830   	; 0x11de <__addsf3>
     ab8:	6d 8f       	std	Y+29, r22	; 0x1d
     aba:	7e 8f       	std	Y+30, r23	; 0x1e
     abc:	8f 8f       	std	Y+31, r24	; 0x1f
     abe:	98 a3       	std	Y+32, r25	; 0x20
     ac0:	2d 85       	ldd	r18, Y+13	; 0x0d
     ac2:	3e 85       	ldd	r19, Y+14	; 0x0e
     ac4:	4f 85       	ldd	r20, Y+15	; 0x0f
     ac6:	58 89       	ldd	r21, Y+16	; 0x10
     ac8:	ca 01       	movw	r24, r20
     aca:	b9 01       	movw	r22, r18
     acc:	10 d6       	rcall	.+3104   	; 0x16ee <__mulsf3>
     ace:	6d 87       	std	Y+13, r22	; 0x0d
     ad0:	7e 87       	std	Y+14, r23	; 0x0e
     ad2:	8f 87       	std	Y+15, r24	; 0x0f
     ad4:	98 8b       	std	Y+16, r25	; 0x10
     ad6:	a5 01       	movw	r20, r10
     ad8:	94 01       	movw	r18, r8
     ada:	c5 01       	movw	r24, r10
     adc:	b4 01       	movw	r22, r8
     ade:	07 d6       	rcall	.+3086   	; 0x16ee <__mulsf3>
     ae0:	9b 01       	movw	r18, r22
     ae2:	ac 01       	movw	r20, r24
     ae4:	6d 85       	ldd	r22, Y+13	; 0x0d
     ae6:	7e 85       	ldd	r23, Y+14	; 0x0e
     ae8:	8f 85       	ldd	r24, Y+15	; 0x0f
     aea:	98 89       	ldd	r25, Y+16	; 0x10
     aec:	78 d3       	rcall	.+1776   	; 0x11de <__addsf3>
     aee:	4b 01       	movw	r8, r22
     af0:	5c 01       	movw	r10, r24
     af2:	a7 01       	movw	r20, r14
     af4:	96 01       	movw	r18, r12
     af6:	c7 01       	movw	r24, r14
     af8:	b6 01       	movw	r22, r12
     afa:	f9 d5       	rcall	.+3058   	; 0x16ee <__mulsf3>
     afc:	9b 01       	movw	r18, r22
     afe:	ac 01       	movw	r20, r24
     b00:	c5 01       	movw	r24, r10
     b02:	b4 01       	movw	r22, r8
     b04:	6c d3       	rcall	.+1752   	; 0x11de <__addsf3>
     b06:	60 d6       	rcall	.+3264   	; 0x17c8 <sqrt>
     b08:	4b 01       	movw	r8, r22
     b0a:	5c 01       	movw	r10, r24
			acc_total_vector*=100;
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     b0c:	b8 01       	movw	r22, r16
     b0e:	11 0f       	add	r17, r17
     b10:	88 0b       	sbc	r24, r24
     b12:	99 0b       	sbc	r25, r25
     b14:	e0 d4       	rcall	.+2496   	; 0x14d6 <__floatsisf>
     b16:	6b 01       	movw	r12, r22
     b18:	7c 01       	movw	r14, r24
			
			double temporar_accel_x=accel_x/100;
			double temporar_accel_y=accel_y/100;
			double temporar_accel_z=accel_z/100;	
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
			acc_total_vector*=100;
     b1a:	20 e0       	ldi	r18, 0x00	; 0
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	48 ec       	ldi	r20, 0xC8	; 200
     b20:	52 e4       	ldi	r21, 0x42	; 66
     b22:	c5 01       	movw	r24, r10
     b24:	b4 01       	movw	r22, r8
     b26:	e3 d5       	rcall	.+3014   	; 0x16ee <__mulsf3>
     b28:	9b 01       	movw	r18, r22
     b2a:	ac 01       	movw	r20, r24
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     b2c:	c7 01       	movw	r24, r14
     b2e:	b6 01       	movw	r22, r12
     b30:	37 d4       	rcall	.+2158   	; 0x13a0 <__divsf3>
     b32:	b9 d3       	rcall	.+1906   	; 0x12a6 <asin>
     b34:	4b 01       	movw	r8, r22
     b36:	5c 01       	movw	r10, r24
				
			//kalman
			double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
			double pitch = atan(-accel_x / sqrt(accel_y * accel_y + accel_z * accel_z)) * RAD_TO_DEG;
			//angle=roll;
			float kalman_angle=getAngle(angle_roll,gyroXrate,dt);
     b38:	e9 8c       	ldd	r14, Y+25	; 0x19
     b3a:	fa 8c       	ldd	r15, Y+26	; 0x1a
     b3c:	0b 8d       	ldd	r16, Y+27	; 0x1b
     b3e:	1c 8d       	ldd	r17, Y+28	; 0x1c
     b40:	29 a1       	ldd	r18, Y+33	; 0x21
     b42:	3a a1       	ldd	r19, Y+34	; 0x22
     b44:	4b a1       	ldd	r20, Y+35	; 0x23
     b46:	5c a1       	ldd	r21, Y+36	; 0x24
     b48:	69 89       	ldd	r22, Y+17	; 0x11
     b4a:	7a 89       	ldd	r23, Y+18	; 0x12
     b4c:	8b 89       	ldd	r24, Y+19	; 0x13
     b4e:	9c 89       	ldd	r25, Y+20	; 0x14
     b50:	46 dc       	rcall	.-1908   	; 0x3de <getAngle>
     b52:	6b 01       	movw	r12, r22
     b54:	7c 01       	movw	r14, r24
			
			printSD("",kalman_angle);
     b56:	ab 01       	movw	r20, r22
     b58:	bc 01       	movw	r22, r24
     b5a:	87 e7       	ldi	r24, 0x77	; 119
     b5c:	93 e0       	ldi	r25, 0x03	; 3
     b5e:	1c d3       	rcall	.+1592   	; 0x1198 <printSD>
			printSD("",angle_roll);
     b60:	49 89       	ldd	r20, Y+17	; 0x11
     b62:	5a 89       	ldd	r21, Y+18	; 0x12
     b64:	6b 89       	ldd	r22, Y+19	; 0x13
     b66:	7c 89       	ldd	r23, Y+20	; 0x14
     b68:	87 e7       	ldi	r24, 0x77	; 119
     b6a:	93 e0       	ldi	r25, 0x03	; 3
     b6c:	15 d3       	rcall	.+1578   	; 0x1198 <printSD>
				
			
			double final_angleY=(angle_roll*0.996)+(angle_roll_acc*0.004);
     b6e:	2b ed       	ldi	r18, 0xDB	; 219
     b70:	39 ef       	ldi	r19, 0xF9	; 249
     b72:	4e e7       	ldi	r20, 0x7E	; 126
     b74:	5f e3       	ldi	r21, 0x3F	; 63
     b76:	69 89       	ldd	r22, Y+17	; 0x11
     b78:	7a 89       	ldd	r23, Y+18	; 0x12
     b7a:	8b 89       	ldd	r24, Y+19	; 0x13
     b7c:	9c 89       	ldd	r25, Y+20	; 0x14
     b7e:	b7 d5       	rcall	.+2926   	; 0x16ee <__mulsf3>
     b80:	6d 87       	std	Y+13, r22	; 0x0d
     b82:	7e 87       	std	Y+14, r23	; 0x0e
     b84:	8f 87       	std	Y+15, r24	; 0x0f
     b86:	98 8b       	std	Y+16, r25	; 0x10
			double temporar_accel_y=accel_y/100;
			double temporar_accel_z=accel_z/100;	
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
			acc_total_vector*=100;
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     b88:	2b e1       	ldi	r18, 0x1B	; 27
     b8a:	3f e2       	ldi	r19, 0x2F	; 47
     b8c:	45 e6       	ldi	r20, 0x65	; 101
     b8e:	52 ec       	ldi	r21, 0xC2	; 194
     b90:	c5 01       	movw	r24, r10
     b92:	b4 01       	movw	r22, r8
     b94:	ac d5       	rcall	.+2904   	; 0x16ee <__mulsf3>
			
			printSD("",kalman_angle);
			printSD("",angle_roll);
				
			
			double final_angleY=(angle_roll*0.996)+(angle_roll_acc*0.004);
     b96:	2f e6       	ldi	r18, 0x6F	; 111
     b98:	32 e1       	ldi	r19, 0x12	; 18
     b9a:	43 e8       	ldi	r20, 0x83	; 131
     b9c:	5b e3       	ldi	r21, 0x3B	; 59
     b9e:	a7 d5       	rcall	.+2894   	; 0x16ee <__mulsf3>
     ba0:	9b 01       	movw	r18, r22
     ba2:	ac 01       	movw	r20, r24
     ba4:	6d 85       	ldd	r22, Y+13	; 0x0d
     ba6:	7e 85       	ldd	r23, Y+14	; 0x0e
     ba8:	8f 85       	ldd	r24, Y+15	; 0x0f
     baa:	98 89       	ldd	r25, Y+16	; 0x10
     bac:	18 d3       	rcall	.+1584   	; 0x11de <__addsf3>
     bae:	4b 01       	movw	r8, r22
     bb0:	5c 01       	movw	r10, r24
			printSD("",final_angleY);
     bb2:	ab 01       	movw	r20, r22
     bb4:	bc 01       	movw	r22, r24
     bb6:	87 e7       	ldi	r24, 0x77	; 119
     bb8:	93 e0       	ldi	r25, 0x03	; 3
     bba:	ee d2       	rcall	.+1500   	; 0x1198 <printSD>
			printf("\n");		
     bbc:	8a e0       	ldi	r24, 0x0A	; 10
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e 94 a5 11 	call	0x234a	; 0x234a <putchar>
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
     bc4:	c7 01       	movw	r24, r14
     bc6:	b6 01       	movw	r22, r12
     bc8:	53 d4       	rcall	.+2214   	; 0x1470 <__fixsfsi>
     bca:	ab 01       	movw	r20, r22
     bcc:	77 23       	and	r23, r23
     bce:	24 f4       	brge	.+8      	; 0xbd8 <main+0x454>
     bd0:	44 27       	eor	r20, r20
     bd2:	55 27       	eor	r21, r21
     bd4:	46 1b       	sub	r20, r22
     bd6:	57 0b       	sbc	r21, r23
     bd8:	ba 01       	movw	r22, r20
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     bda:	84 ef       	ldi	r24, 0xF4	; 244
     bdc:	91 e0       	ldi	r25, 0x01	; 1
     bde:	48 9f       	mul	r20, r24
     be0:	90 01       	movw	r18, r0
     be2:	49 9f       	mul	r20, r25
     be4:	30 0d       	add	r19, r0
     be6:	58 9f       	mul	r21, r24
     be8:	30 0d       	add	r19, r0
     bea:	11 24       	eor	r1, r1
     bec:	c1 01       	movw	r24, r2
     bee:	82 1b       	sub	r24, r18
     bf0:	93 0b       	sbc	r25, r19
				if (local_motor_delay>2000)
     bf2:	81 3d       	cpi	r24, 0xD1	; 209
     bf4:	27 e0       	ldi	r18, 0x07	; 7
     bf6:	92 07       	cpc	r25, r18
     bf8:	20 f0       	brcs	.+8      	; 0xc02 <main+0x47e>
				{
					pwm_delay=local_motor_delay;
     bfa:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <pwm_delay+0x1>
     bfe:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <pwm_delay>
				}
				int16_t reg_ = local_motor_delay;
				//printSI("ocr=",reg_);
				if ((absoulute_y<=0.8) || (final_angleY >90))
     c02:	07 2e       	mov	r0, r23
     c04:	00 0c       	add	r0, r0
     c06:	88 0b       	sbc	r24, r24
     c08:	99 0b       	sbc	r25, r25
     c0a:	65 d4       	rcall	.+2250   	; 0x14d6 <__floatsisf>
     c0c:	2d ec       	ldi	r18, 0xCD	; 205
     c0e:	3c ec       	ldi	r19, 0xCC	; 204
     c10:	4c e4       	ldi	r20, 0x4C	; 76
     c12:	5f e3       	ldi	r21, 0x3F	; 63
     c14:	c1 d3       	rcall	.+1922   	; 0x1398 <__cmpsf2>
     c16:	18 16       	cp	r1, r24
     c18:	4c f4       	brge	.+18     	; 0xc2c <main+0x4a8>
     c1a:	20 e0       	ldi	r18, 0x00	; 0
     c1c:	30 e0       	ldi	r19, 0x00	; 0
     c1e:	44 eb       	ldi	r20, 0xB4	; 180
     c20:	52 e4       	ldi	r21, 0x42	; 66
     c22:	c5 01       	movw	r24, r10
     c24:	b4 01       	movw	r22, r8
     c26:	58 d5       	rcall	.+2736   	; 0x16d8 <__gesf2>
     c28:	18 16       	cp	r1, r24
     c2a:	2c f4       	brge	.+10     	; 0xc36 <main+0x4b2>
				{
					incr=0;
     c2c:	10 92 8c 03 	sts	0x038C, r1	; 0x80038c <incr+0x1>
     c30:	10 92 8b 03 	sts	0x038B, r1	; 0x80038b <incr>
     c34:	2a ce       	rjmp	.-940    	; 0x88a <main+0x106>
					//printf("\n");	
				}
				else 
					if (final_angleY>0.8)
     c36:	2d ec       	ldi	r18, 0xCD	; 205
     c38:	3c ec       	ldi	r19, 0xCC	; 204
     c3a:	4c e4       	ldi	r20, 0x4C	; 76
     c3c:	5f e3       	ldi	r21, 0x3F	; 63
     c3e:	c5 01       	movw	r24, r10
     c40:	b4 01       	movw	r22, r8
     c42:	4a d5       	rcall	.+2708   	; 0x16d8 <__gesf2>
     c44:	18 16       	cp	r1, r24
     c46:	6c f4       	brge	.+26     	; 0xc62 <main+0x4de>
					{
						cli();
     c48:	f8 94       	cli
						incr=1;
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <incr+0x1>
     c52:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <incr>
						printf(" ");
     c56:	80 e2       	ldi	r24, 0x20	; 32
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	0e 94 a5 11 	call	0x234a	; 0x234a <putchar>
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" yes\n");					
						sei();
     c5e:	78 94       	sei
     c60:	14 ce       	rjmp	.-984    	; 0x88a <main+0x106>
					}
					else
					{	cli();
     c62:	f8 94       	cli
						incr=-1;
     c64:	8f ef       	ldi	r24, 0xFF	; 255
     c66:	9f ef       	ldi	r25, 0xFF	; 255
     c68:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <incr+0x1>
     c6c:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <incr>
						printf(" ");
     c70:	80 e2       	ldi	r24, 0x20	; 32
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	0e 94 a5 11 	call	0x234a	; 0x234a <putchar>
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" no\n");
						sei();
     c78:	78 94       	sei
     c7a:	07 ce       	rjmp	.-1010   	; 0x88a <main+0x106>

00000c7c <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     c7c:	cf 93       	push	r28
     c7e:	df 93       	push	r29
     c80:	d8 2f       	mov	r29, r24
     c82:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     c84:	80 ed       	ldi	r24, 0xD0	; 208
     c86:	88 d1       	rcall	.+784    	; 0xf98 <i2c_start>
	i2c_write(wereToWrite);
     c88:	8d 2f       	mov	r24, r29
     c8a:	dc d1       	rcall	.+952    	; 0x1044 <i2c_write>
	i2c_write(byteToWrite);
     c8c:	8c 2f       	mov	r24, r28
     c8e:	da d1       	rcall	.+948    	; 0x1044 <i2c_write>
	i2c_stop();
     c90:	c9 d1       	rcall	.+914    	; 0x1024 <i2c_stop>
}
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	08 95       	ret

00000c98 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     c98:	af 92       	push	r10
     c9a:	bf 92       	push	r11
     c9c:	df 92       	push	r13
     c9e:	ef 92       	push	r14
     ca0:	ff 92       	push	r15
     ca2:	0f 93       	push	r16
     ca4:	1f 93       	push	r17
     ca6:	cf 93       	push	r28
     ca8:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     caa:	66 23       	and	r22, r22
     cac:	89 f1       	breq	.+98     	; 0xd10 <mpu6050_readBytes+0x78>
     cae:	c5 2f       	mov	r28, r21
     cb0:	d4 2f       	mov	r29, r20
     cb2:	d6 2e       	mov	r13, r22
     cb4:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     cb6:	80 ed       	ldi	r24, 0xD0	; 208
     cb8:	6f d1       	rcall	.+734    	; 0xf98 <i2c_start>
		i2c_write(regAddr);
     cba:	81 2f       	mov	r24, r17
     cbc:	c3 d1       	rcall	.+902    	; 0x1044 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cbe:	85 e3       	ldi	r24, 0x35	; 53
     cc0:	8a 95       	dec	r24
     cc2:	f1 f7       	brne	.-4      	; 0xcc0 <mpu6050_readBytes+0x28>
     cc4:	00 00       	nop
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     cc6:	81 ed       	ldi	r24, 0xD1	; 209
     cc8:	67 d1       	rcall	.+718    	; 0xf98 <i2c_start>
     cca:	0d 2f       	mov	r16, r29
     ccc:	1c 2f       	mov	r17, r28
     cce:	ee 24       	eor	r14, r14
     cd0:	ea 94       	dec	r14
     cd2:	ed 0c       	add	r14, r13
     cd4:	f1 2c       	mov	r15, r1
     cd6:	ef ef       	ldi	r30, 0xFF	; 255
     cd8:	ee 1a       	sub	r14, r30
     cda:	fe 0a       	sbc	r15, r30
     cdc:	c0 e0       	ldi	r28, 0x00	; 0
     cde:	d0 e0       	ldi	r29, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     ce0:	ad 2c       	mov	r10, r13
     ce2:	b1 2c       	mov	r11, r1
     ce4:	f1 e0       	ldi	r31, 0x01	; 1
     ce6:	af 1a       	sub	r10, r31
     ce8:	b1 08       	sbc	r11, r1
     cea:	ca 15       	cp	r28, r10
     cec:	db 05       	cpc	r29, r11
     cee:	21 f4       	brne	.+8      	; 0xcf8 <mpu6050_readBytes+0x60>
			data[i] = i2c_readNak();
     cf0:	e4 d1       	rcall	.+968    	; 0x10ba <i2c_readNak>
     cf2:	f8 01       	movw	r30, r16
     cf4:	80 83       	st	Z, r24
     cf6:	03 c0       	rjmp	.+6      	; 0xcfe <mpu6050_readBytes+0x66>
			else
			data[i] = i2c_readAck();
     cf8:	c6 d1       	rcall	.+908    	; 0x1086 <i2c_readAck>
     cfa:	f8 01       	movw	r30, r16
     cfc:	80 83       	st	Z, r24
     cfe:	21 96       	adiw	r28, 0x01	; 1
     d00:	0f 5f       	subi	r16, 0xFF	; 255
     d02:	1f 4f       	sbci	r17, 0xFF	; 255
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     d04:	ce 15       	cp	r28, r14
     d06:	df 05       	cpc	r29, r15
     d08:	81 f7       	brne	.-32     	; 0xcea <mpu6050_readBytes+0x52>
     d0a:	cd 2d       	mov	r28, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     d0c:	8b d1       	rcall	.+790    	; 0x1024 <i2c_stop>
     d0e:	01 c0       	rjmp	.+2      	; 0xd12 <mpu6050_readBytes+0x7a>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     d10:	c0 e0       	ldi	r28, 0x00	; 0
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     d12:	8c 2f       	mov	r24, r28
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	1f 91       	pop	r17
     d1a:	0f 91       	pop	r16
     d1c:	ff 90       	pop	r15
     d1e:	ef 90       	pop	r14
     d20:	df 90       	pop	r13
     d22:	bf 90       	pop	r11
     d24:	af 90       	pop	r10
     d26:	08 95       	ret

00000d28 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     d28:	6f 92       	push	r6
     d2a:	7f 92       	push	r7
     d2c:	8f 92       	push	r8
     d2e:	9f 92       	push	r9
     d30:	af 92       	push	r10
     d32:	bf 92       	push	r11
     d34:	cf 92       	push	r12
     d36:	df 92       	push	r13
     d38:	ef 92       	push	r14
     d3a:	ff 92       	push	r15
     d3c:	0f 93       	push	r16
     d3e:	1f 93       	push	r17
     d40:	cf 93       	push	r28
     d42:	df 93       	push	r29
     d44:	cd b7       	in	r28, 0x3d	; 61
     d46:	de b7       	in	r29, 0x3e	; 62
     d48:	2e 97       	sbiw	r28, 0x0e	; 14
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	f8 94       	cli
     d4e:	de bf       	out	0x3e, r29	; 62
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	cd bf       	out	0x3d, r28	; 61
     d54:	4c 01       	movw	r8, r24
     d56:	5b 01       	movw	r10, r22
     d58:	6a 01       	movw	r12, r20
     d5a:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     d5c:	ae 01       	movw	r20, r28
     d5e:	4f 5f       	subi	r20, 0xFF	; 255
     d60:	5f 4f       	sbci	r21, 0xFF	; 255
     d62:	6e e0       	ldi	r22, 0x0E	; 14
     d64:	8b e3       	ldi	r24, 0x3B	; 59
     d66:	98 df       	rcall	.-208    	; 0xc98 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     d68:	89 81       	ldd	r24, Y+1	; 0x01
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	98 2f       	mov	r25, r24
     d6e:	88 27       	eor	r24, r24
     d70:	2a 81       	ldd	r18, Y+2	; 0x02
     d72:	82 2b       	or	r24, r18
     d74:	f4 01       	movw	r30, r8
     d76:	91 83       	std	Z+1, r25	; 0x01
     d78:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	98 2f       	mov	r25, r24
     d80:	88 27       	eor	r24, r24
     d82:	2c 81       	ldd	r18, Y+4	; 0x04
     d84:	82 2b       	or	r24, r18
     d86:	f5 01       	movw	r30, r10
     d88:	91 83       	std	Z+1, r25	; 0x01
     d8a:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     d8c:	8d 81       	ldd	r24, Y+5	; 0x05
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	98 2f       	mov	r25, r24
     d92:	88 27       	eor	r24, r24
     d94:	2e 81       	ldd	r18, Y+6	; 0x06
     d96:	82 2b       	or	r24, r18
     d98:	f6 01       	movw	r30, r12
     d9a:	91 83       	std	Z+1, r25	; 0x01
     d9c:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     d9e:	89 85       	ldd	r24, Y+9	; 0x09
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	98 2f       	mov	r25, r24
     da4:	88 27       	eor	r24, r24
     da6:	2a 85       	ldd	r18, Y+10	; 0x0a
     da8:	82 2b       	or	r24, r18
     daa:	f3 01       	movw	r30, r6
     dac:	91 83       	std	Z+1, r25	; 0x01
     dae:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     db0:	8b 85       	ldd	r24, Y+11	; 0x0b
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	98 2f       	mov	r25, r24
     db6:	88 27       	eor	r24, r24
     db8:	2c 85       	ldd	r18, Y+12	; 0x0c
     dba:	82 2b       	or	r24, r18
     dbc:	f8 01       	movw	r30, r16
     dbe:	91 83       	std	Z+1, r25	; 0x01
     dc0:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     dc2:	8d 85       	ldd	r24, Y+13	; 0x0d
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	98 2f       	mov	r25, r24
     dc8:	88 27       	eor	r24, r24
     dca:	2e 85       	ldd	r18, Y+14	; 0x0e
     dcc:	82 2b       	or	r24, r18
     dce:	f7 01       	movw	r30, r14
     dd0:	91 83       	std	Z+1, r25	; 0x01
     dd2:	80 83       	st	Z, r24
     dd4:	2e 96       	adiw	r28, 0x0e	; 14
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	f8 94       	cli
     dda:	de bf       	out	0x3e, r29	; 62
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	cd bf       	out	0x3d, r28	; 61
     de0:	df 91       	pop	r29
     de2:	cf 91       	pop	r28
     de4:	1f 91       	pop	r17
     de6:	0f 91       	pop	r16
     de8:	ff 90       	pop	r15
     dea:	ef 90       	pop	r14
     dec:	df 90       	pop	r13
     dee:	cf 90       	pop	r12
     df0:	bf 90       	pop	r11
     df2:	af 90       	pop	r10
     df4:	9f 90       	pop	r9
     df6:	8f 90       	pop	r8
     df8:	7f 90       	pop	r7
     dfa:	6f 90       	pop	r6
     dfc:	08 95       	ret

00000dfe <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
     dfe:	e1 ea       	ldi	r30, 0xA1	; 161
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	80 81       	ld	r24, Z
     e04:	81 60       	ori	r24, 0x01	; 1
     e06:	80 83       	st	Z, r24
     e08:	e0 ea       	ldi	r30, 0xA0	; 160
     e0a:	f0 e0       	ldi	r31, 0x00	; 0
     e0c:	80 81       	ld	r24, Z
     e0e:	81 60       	ori	r24, 0x01	; 1
     e10:	80 83       	st	Z, r24
     e12:	80 81       	ld	r24, Z
     e14:	80 68       	ori	r24, 0x80	; 128
     e16:	80 83       	st	Z, r24
     e18:	80 81       	ld	r24, Z
     e1a:	80 62       	ori	r24, 0x20	; 32
     e1c:	80 83       	st	Z, r24
     e1e:	80 81       	ld	r24, Z
     e20:	88 60       	ori	r24, 0x08	; 8
     e22:	80 83       	st	Z, r24
     e24:	08 95       	ret

00000e26 <setup_timer5>:
     e26:	e1 e2       	ldi	r30, 0x21	; 33
     e28:	f1 e0       	ldi	r31, 0x01	; 1
     e2a:	80 81       	ld	r24, Z
     e2c:	81 60       	ori	r24, 0x01	; 1
     e2e:	80 83       	st	Z, r24
     e30:	80 81       	ld	r24, Z
     e32:	88 60       	ori	r24, 0x08	; 8
     e34:	80 83       	st	Z, r24
     e36:	08 95       	ret

00000e38 <Enable_timer5_compare_interrupt>:
     e38:	e3 e7       	ldi	r30, 0x73	; 115
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	80 81       	ld	r24, Z
     e3e:	82 60       	ori	r24, 0x02	; 2
     e40:	80 83       	st	Z, r24
     e42:	08 95       	ret

00000e44 <setup_timer0>:
     e44:	85 b5       	in	r24, 0x25	; 37
     e46:	81 60       	ori	r24, 0x01	; 1
     e48:	85 bd       	out	0x25, r24	; 37
     e4a:	85 b5       	in	r24, 0x25	; 37
     e4c:	82 60       	ori	r24, 0x02	; 2
     e4e:	85 bd       	out	0x25, r24	; 37
     e50:	08 95       	ret

00000e52 <Enable_timer0_overflow_interrupt>:
     e52:	ee e6       	ldi	r30, 0x6E	; 110
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	80 81       	ld	r24, Z
     e58:	81 60       	ori	r24, 0x01	; 1
     e5a:	80 83       	st	Z, r24
     e5c:	08 95       	ret

00000e5e <micros>:
     e5e:	3f b7       	in	r19, 0x3f	; 63
     e60:	f8 94       	cli
     e62:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <timer0_overflow_count>
     e66:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <timer0_overflow_count+0x1>
     e6a:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <timer0_overflow_count+0x2>
     e6e:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <timer0_overflow_count+0x3>
     e72:	26 b5       	in	r18, 0x26	; 38
     e74:	a8 9b       	sbis	0x15, 0	; 21
     e76:	05 c0       	rjmp	.+10     	; 0xe82 <micros+0x24>
     e78:	2f 3f       	cpi	r18, 0xFF	; 255
     e7a:	19 f0       	breq	.+6      	; 0xe82 <micros+0x24>
     e7c:	01 96       	adiw	r24, 0x01	; 1
     e7e:	a1 1d       	adc	r26, r1
     e80:	b1 1d       	adc	r27, r1
     e82:	3f bf       	out	0x3f, r19	; 63
     e84:	ba 2f       	mov	r27, r26
     e86:	a9 2f       	mov	r26, r25
     e88:	98 2f       	mov	r25, r24
     e8a:	88 27       	eor	r24, r24
     e8c:	82 0f       	add	r24, r18
     e8e:	91 1d       	adc	r25, r1
     e90:	a1 1d       	adc	r26, r1
     e92:	b1 1d       	adc	r27, r1
     e94:	bc 01       	movw	r22, r24
     e96:	cd 01       	movw	r24, r26
     e98:	66 0f       	add	r22, r22
     e9a:	77 1f       	adc	r23, r23
     e9c:	88 1f       	adc	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	66 0f       	add	r22, r22
     ea2:	77 1f       	adc	r23, r23
     ea4:	88 1f       	adc	r24, r24
     ea6:	99 1f       	adc	r25, r25
     ea8:	08 95       	ret

00000eaa <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
     eaa:	1f 92       	push	r1
     eac:	0f 92       	push	r0
     eae:	0f b6       	in	r0, 0x3f	; 63
     eb0:	0f 92       	push	r0
     eb2:	11 24       	eor	r1, r1
     eb4:	2f 93       	push	r18
     eb6:	3f 93       	push	r19
     eb8:	8f 93       	push	r24
     eba:	9f 93       	push	r25
     ebc:	af 93       	push	r26
     ebe:	bf 93       	push	r27
	unsigned long m = timer0_millis;
     ec0:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <timer0_millis>
     ec4:	90 91 80 03 	lds	r25, 0x0380	; 0x800380 <timer0_millis+0x1>
     ec8:	a0 91 81 03 	lds	r26, 0x0381	; 0x800381 <timer0_millis+0x2>
     ecc:	b0 91 82 03 	lds	r27, 0x0382	; 0x800382 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
     ed0:	30 91 7e 03 	lds	r19, 0x037E	; 0x80037e <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
     ed4:	23 e0       	ldi	r18, 0x03	; 3
     ed6:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
     ed8:	2d 37       	cpi	r18, 0x7D	; 125
     eda:	20 f4       	brcc	.+8      	; 0xee4 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
     edc:	01 96       	adiw	r24, 0x01	; 1
     ede:	a1 1d       	adc	r26, r1
     ee0:	b1 1d       	adc	r27, r1
     ee2:	05 c0       	rjmp	.+10     	; 0xeee <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
     ee4:	26 e8       	ldi	r18, 0x86	; 134
     ee6:	23 0f       	add	r18, r19
		m += 1;
     ee8:	02 96       	adiw	r24, 0x02	; 2
     eea:	a1 1d       	adc	r26, r1
     eec:	b1 1d       	adc	r27, r1
	}


	timer0_fract = f;
     eee:	20 93 7e 03 	sts	0x037E, r18	; 0x80037e <timer0_fract>
	timer0_millis = m;
     ef2:	80 93 7f 03 	sts	0x037F, r24	; 0x80037f <timer0_millis>
     ef6:	90 93 80 03 	sts	0x0380, r25	; 0x800380 <timer0_millis+0x1>
     efa:	a0 93 81 03 	sts	0x0381, r26	; 0x800381 <timer0_millis+0x2>
     efe:	b0 93 82 03 	sts	0x0382, r27	; 0x800382 <timer0_millis+0x3>
	timer0_overflow_count++;
     f02:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <timer0_overflow_count>
     f06:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <timer0_overflow_count+0x1>
     f0a:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <timer0_overflow_count+0x2>
     f0e:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <timer0_overflow_count+0x3>
     f12:	01 96       	adiw	r24, 0x01	; 1
     f14:	a1 1d       	adc	r26, r1
     f16:	b1 1d       	adc	r27, r1
     f18:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <timer0_overflow_count>
     f1c:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <timer0_overflow_count+0x1>
     f20:	a0 93 85 03 	sts	0x0385, r26	; 0x800385 <timer0_overflow_count+0x2>
     f24:	b0 93 86 03 	sts	0x0386, r27	; 0x800386 <timer0_overflow_count+0x3>
}
     f28:	bf 91       	pop	r27
     f2a:	af 91       	pop	r26
     f2c:	9f 91       	pop	r25
     f2e:	8f 91       	pop	r24
     f30:	3f 91       	pop	r19
     f32:	2f 91       	pop	r18
     f34:	0f 90       	pop	r0
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	0f 90       	pop	r0
     f3a:	1f 90       	pop	r1
     f3c:	18 95       	reti

00000f3e <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
     f3e:	1f 92       	push	r1
     f40:	0f 92       	push	r0
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	0f 92       	push	r0
     f46:	11 24       	eor	r1, r1
     f48:	0b b6       	in	r0, 0x3b	; 59
     f4a:	0f 92       	push	r0
     f4c:	2f 93       	push	r18
     f4e:	3f 93       	push	r19
     f50:	4f 93       	push	r20
     f52:	5f 93       	push	r21
     f54:	6f 93       	push	r22
     f56:	7f 93       	push	r23
     f58:	8f 93       	push	r24
     f5a:	9f 93       	push	r25
     f5c:	af 93       	push	r26
     f5e:	bf 93       	push	r27
     f60:	ef 93       	push	r30
     f62:	ff 93       	push	r31
	PWM_update();
     f64:	b1 d9       	rcall	.-3230   	; 0x2c8 <PWM_update>
     f66:	ff 91       	pop	r31
     f68:	ef 91       	pop	r30
     f6a:	bf 91       	pop	r27
     f6c:	af 91       	pop	r26
     f6e:	9f 91       	pop	r25
     f70:	8f 91       	pop	r24
     f72:	7f 91       	pop	r23
     f74:	6f 91       	pop	r22
     f76:	5f 91       	pop	r21
     f78:	4f 91       	pop	r20
     f7a:	3f 91       	pop	r19
     f7c:	2f 91       	pop	r18
     f7e:	0f 90       	pop	r0
     f80:	0b be       	out	0x3b, r0	; 59
     f82:	0f 90       	pop	r0
     f84:	0f be       	out	0x3f, r0	; 63
     f86:	0f 90       	pop	r0
     f88:	1f 90       	pop	r1
     f8a:	18 95       	reti

00000f8c <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     f8c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     f90:	8c e0       	ldi	r24, 0x0C	; 12
     f92:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     f96:	08 95       	ret

00000f98 <i2c_start>:
     f98:	94 ea       	ldi	r25, 0xA4	; 164
     f9a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     f9e:	4f ef       	ldi	r20, 0xFF	; 255
     fa0:	50 e0       	ldi	r21, 0x00	; 0
     fa2:	60 e0       	ldi	r22, 0x00	; 0
     fa4:	70 e0       	ldi	r23, 0x00	; 0
     fa6:	ec eb       	ldi	r30, 0xBC	; 188
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	90 81       	ld	r25, Z
     fac:	99 23       	and	r25, r25
     fae:	34 f0       	brlt	.+12     	; 0xfbc <i2c_start+0x24>
     fb0:	41 50       	subi	r20, 0x01	; 1
     fb2:	51 09       	sbc	r21, r1
     fb4:	61 09       	sbc	r22, r1
     fb6:	71 09       	sbc	r23, r1
     fb8:	c0 f7       	brcc	.-16     	; 0xfaa <i2c_start+0x12>
     fba:	04 c0       	rjmp	.+8      	; 0xfc4 <i2c_start+0x2c>
     fbc:	45 2b       	or	r20, r21
     fbe:	46 2b       	or	r20, r22
     fc0:	47 2b       	or	r20, r23
     fc2:	41 f1       	breq	.+80     	; 0x1014 <i2c_start+0x7c>
     fc4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     fc8:	98 7f       	andi	r25, 0xF8	; 248
     fca:	98 30       	cpi	r25, 0x08	; 8
     fcc:	11 f0       	breq	.+4      	; 0xfd2 <i2c_start+0x3a>
     fce:	90 31       	cpi	r25, 0x10	; 16
     fd0:	19 f5       	brne	.+70     	; 0x1018 <i2c_start+0x80>
     fd2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     fd6:	84 e8       	ldi	r24, 0x84	; 132
     fd8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     fdc:	8f ef       	ldi	r24, 0xFF	; 255
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	a0 e0       	ldi	r26, 0x00	; 0
     fe2:	b0 e0       	ldi	r27, 0x00	; 0
     fe4:	ec eb       	ldi	r30, 0xBC	; 188
     fe6:	f0 e0       	ldi	r31, 0x00	; 0
     fe8:	20 81       	ld	r18, Z
     fea:	22 23       	and	r18, r18
     fec:	2c f0       	brlt	.+10     	; 0xff8 <i2c_start+0x60>
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	a1 09       	sbc	r26, r1
     ff2:	b1 09       	sbc	r27, r1
     ff4:	c8 f7       	brcc	.-14     	; 0xfe8 <i2c_start+0x50>
     ff6:	04 c0       	rjmp	.+8      	; 0x1000 <i2c_start+0x68>
     ff8:	89 2b       	or	r24, r25
     ffa:	8a 2b       	or	r24, r26
     ffc:	8b 2b       	or	r24, r27
     ffe:	71 f0       	breq	.+28     	; 0x101c <i2c_start+0x84>
    1000:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1004:	98 7f       	andi	r25, 0xF8	; 248
    1006:	98 31       	cpi	r25, 0x18	; 24
    1008:	59 f0       	breq	.+22     	; 0x1020 <i2c_start+0x88>
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	90 34       	cpi	r25, 0x40	; 64
    100e:	49 f4       	brne	.+18     	; 0x1022 <i2c_start+0x8a>
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	08 95       	ret
    1014:	81 e0       	ldi	r24, 0x01	; 1
    1016:	08 95       	ret
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	08 95       	ret
    101c:	81 e0       	ldi	r24, 0x01	; 1
    101e:	08 95       	ret
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	08 95       	ret

00001024 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    1024:	84 e9       	ldi	r24, 0x94	; 148
    1026:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    102a:	80 e0       	ldi	r24, 0x00	; 0
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	ec eb       	ldi	r30, 0xBC	; 188
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	20 81       	ld	r18, Z
    1034:	24 ff       	sbrs	r18, 4
    1036:	05 c0       	rjmp	.+10     	; 0x1042 <i2c_stop+0x1e>
    1038:	01 96       	adiw	r24, 0x01	; 1
    103a:	81 15       	cp	r24, r1
    103c:	21 e0       	ldi	r18, 0x01	; 1
    103e:	92 07       	cpc	r25, r18
    1040:	c1 f7       	brne	.-16     	; 0x1032 <i2c_stop+0xe>
    1042:	08 95       	ret

00001044 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    1044:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    1048:	84 e8       	ldi	r24, 0x84	; 132
    104a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    104e:	8f ef       	ldi	r24, 0xFF	; 255
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	a0 e0       	ldi	r26, 0x00	; 0
    1054:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1056:	ec eb       	ldi	r30, 0xBC	; 188
    1058:	f0 e0       	ldi	r31, 0x00	; 0
    105a:	20 81       	ld	r18, Z
    105c:	22 23       	and	r18, r18
    105e:	2c f0       	brlt	.+10     	; 0x106a <i2c_write+0x26>
    1060:	01 97       	sbiw	r24, 0x01	; 1
    1062:	a1 09       	sbc	r26, r1
    1064:	b1 09       	sbc	r27, r1
    1066:	c8 f7       	brcc	.-14     	; 0x105a <i2c_write+0x16>
    1068:	04 c0       	rjmp	.+8      	; 0x1072 <i2c_write+0x2e>
	if(i2c_timer == 0)
    106a:	89 2b       	or	r24, r25
    106c:	8a 2b       	or	r24, r26
    106e:	8b 2b       	or	r24, r27
    1070:	41 f0       	breq	.+16     	; 0x1082 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    1072:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1076:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	98 32       	cpi	r25, 0x28	; 40
    107c:	19 f4       	brne	.+6      	; 0x1084 <i2c_write+0x40>
    107e:	80 e0       	ldi	r24, 0x00	; 0
    1080:	08 95       	ret

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    1082:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    1084:	08 95       	ret

00001086 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    1086:	84 ec       	ldi	r24, 0xC4	; 196
    1088:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    108c:	8f ef       	ldi	r24, 0xFF	; 255
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	a0 e0       	ldi	r26, 0x00	; 0
    1092:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1094:	ec eb       	ldi	r30, 0xBC	; 188
    1096:	f0 e0       	ldi	r31, 0x00	; 0
    1098:	20 81       	ld	r18, Z
    109a:	22 23       	and	r18, r18
    109c:	2c f0       	brlt	.+10     	; 0x10a8 <i2c_readAck+0x22>
    109e:	01 97       	sbiw	r24, 0x01	; 1
    10a0:	a1 09       	sbc	r26, r1
    10a2:	b1 09       	sbc	r27, r1
    10a4:	c8 f7       	brcc	.-14     	; 0x1098 <i2c_readAck+0x12>
    10a6:	04 c0       	rjmp	.+8      	; 0x10b0 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    10a8:	89 2b       	or	r24, r25
    10aa:	8a 2b       	or	r24, r26
    10ac:	8b 2b       	or	r24, r27
    10ae:	19 f0       	breq	.+6      	; 0x10b6 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    10b0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    10b4:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    10b6:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    10b8:	08 95       	ret

000010ba <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    10ba:	84 e8       	ldi	r24, 0x84	; 132
    10bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    10c0:	8f ef       	ldi	r24, 0xFF	; 255
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	a0 e0       	ldi	r26, 0x00	; 0
    10c6:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    10c8:	ec eb       	ldi	r30, 0xBC	; 188
    10ca:	f0 e0       	ldi	r31, 0x00	; 0
    10cc:	20 81       	ld	r18, Z
    10ce:	22 23       	and	r18, r18
    10d0:	2c f0       	brlt	.+10     	; 0x10dc <i2c_readNak+0x22>
    10d2:	01 97       	sbiw	r24, 0x01	; 1
    10d4:	a1 09       	sbc	r26, r1
    10d6:	b1 09       	sbc	r27, r1
    10d8:	c8 f7       	brcc	.-14     	; 0x10cc <i2c_readNak+0x12>
    10da:	04 c0       	rjmp	.+8      	; 0x10e4 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    10dc:	89 2b       	or	r24, r25
    10de:	8a 2b       	or	r24, r26
    10e0:	8b 2b       	or	r24, r27
    10e2:	19 f0       	breq	.+6      	; 0x10ea <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    10e4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    10e8:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    10ea:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    10ec:	08 95       	ret

000010ee <USART_Init>:
{
	printf(c);
	//printf(" ");
	print16(&intToPrint);
	printf("  ");
}
    10ee:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    10f2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    10f6:	88 e0       	ldi	r24, 0x08	; 8
    10f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    10fc:	8e e0       	ldi	r24, 0x0E	; 14
    10fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1102:	08 95       	ret

00001104 <uart_putchar>:
    1104:	cf 93       	push	r28
    1106:	c8 2f       	mov	r28, r24
    1108:	8a 30       	cpi	r24, 0x0A	; 10
    110a:	11 f4       	brne	.+4      	; 0x1110 <uart_putchar+0xc>
    110c:	8d e0       	ldi	r24, 0x0D	; 13
    110e:	fa df       	rcall	.-12     	; 0x1104 <uart_putchar>
    1110:	e0 ec       	ldi	r30, 0xC0	; 192
    1112:	f0 e0       	ldi	r31, 0x00	; 0
    1114:	90 81       	ld	r25, Z
    1116:	95 ff       	sbrs	r25, 5
    1118:	fd cf       	rjmp	.-6      	; 0x1114 <uart_putchar+0x10>
    111a:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    111e:	80 e0       	ldi	r24, 0x00	; 0
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	cf 91       	pop	r28
    1124:	08 95       	ret

00001126 <printDouble>:
void printDouble(double *value)
{
    1126:	0f 93       	push	r16
    1128:	1f 93       	push	r17
    112a:	cf 93       	push	r28
    112c:	df 93       	push	r29
    112e:	cd b7       	in	r28, 0x3d	; 61
    1130:	de b7       	in	r29, 0x3e	; 62
    1132:	64 97       	sbiw	r28, 0x14	; 20
    1134:	0f b6       	in	r0, 0x3f	; 63
    1136:	f8 94       	cli
    1138:	de bf       	out	0x3e, r29	; 62
    113a:	0f be       	out	0x3f, r0	; 63
    113c:	cd bf       	out	0x3d, r28	; 61
    113e:	fc 01       	movw	r30, r24
	char c[20]={0};
    1140:	8e 01       	movw	r16, r28
    1142:	0f 5f       	subi	r16, 0xFF	; 255
    1144:	1f 4f       	sbci	r17, 0xFF	; 255
    1146:	84 e1       	ldi	r24, 0x14	; 20
    1148:	d8 01       	movw	r26, r16
    114a:	1d 92       	st	X+, r1
    114c:	8a 95       	dec	r24
    114e:	e9 f7       	brne	.-6      	; 0x114a <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    1150:	83 81       	ldd	r24, Z+3	; 0x03
    1152:	8f 93       	push	r24
    1154:	82 81       	ldd	r24, Z+2	; 0x02
    1156:	8f 93       	push	r24
    1158:	81 81       	ldd	r24, Z+1	; 0x01
    115a:	8f 93       	push	r24
    115c:	80 81       	ld	r24, Z
    115e:	8f 93       	push	r24
    1160:	88 e7       	ldi	r24, 0x78	; 120
    1162:	93 e0       	ldi	r25, 0x03	; 3
    1164:	9f 93       	push	r25
    1166:	8f 93       	push	r24
    1168:	1f 93       	push	r17
    116a:	0f 93       	push	r16
    116c:	0e 94 aa 11 	call	0x2354	; 0x2354 <sprintf>
	printf(c);
    1170:	1f 93       	push	r17
    1172:	0f 93       	push	r16
    1174:	0e 94 92 11 	call	0x2324	; 0x2324 <printf>
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	f8 94       	cli
    117c:	de bf       	out	0x3e, r29	; 62
    117e:	0f be       	out	0x3f, r0	; 63
    1180:	cd bf       	out	0x3d, r28	; 61
}
    1182:	64 96       	adiw	r28, 0x14	; 20
    1184:	0f b6       	in	r0, 0x3f	; 63
    1186:	f8 94       	cli
    1188:	de bf       	out	0x3e, r29	; 62
    118a:	0f be       	out	0x3f, r0	; 63
    118c:	cd bf       	out	0x3d, r28	; 61
    118e:	df 91       	pop	r29
    1190:	cf 91       	pop	r28
    1192:	1f 91       	pop	r17
    1194:	0f 91       	pop	r16
    1196:	08 95       	ret

00001198 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    1198:	cf 93       	push	r28
    119a:	df 93       	push	r29
    119c:	00 d0       	rcall	.+0      	; 0x119e <printSD+0x6>
    119e:	1f 92       	push	r1
    11a0:	cd b7       	in	r28, 0x3d	; 61
    11a2:	de b7       	in	r29, 0x3e	; 62
    11a4:	49 83       	std	Y+1, r20	; 0x01
    11a6:	5a 83       	std	Y+2, r21	; 0x02
    11a8:	6b 83       	std	Y+3, r22	; 0x03
    11aa:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    11ac:	9f 93       	push	r25
    11ae:	8f 93       	push	r24
    11b0:	0e 94 92 11 	call	0x2324	; 0x2324 <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    11b4:	ce 01       	movw	r24, r28
    11b6:	01 96       	adiw	r24, 0x01	; 1
    11b8:	b6 df       	rcall	.-148    	; 0x1126 <printDouble>
	printf("  ");
    11ba:	85 e7       	ldi	r24, 0x75	; 117
    11bc:	93 e0       	ldi	r25, 0x03	; 3
    11be:	9f 93       	push	r25
    11c0:	8f 93       	push	r24
    11c2:	0e 94 92 11 	call	0x2324	; 0x2324 <printf>
    11c6:	0f 90       	pop	r0
    11c8:	0f 90       	pop	r0
    11ca:	0f 90       	pop	r0
    11cc:	0f 90       	pop	r0
    11ce:	0f 90       	pop	r0
    11d0:	0f 90       	pop	r0
    11d2:	0f 90       	pop	r0
    11d4:	0f 90       	pop	r0
    11d6:	df 91       	pop	r29
    11d8:	cf 91       	pop	r28
    11da:	08 95       	ret

000011dc <__subsf3>:
    11dc:	50 58       	subi	r21, 0x80	; 128

000011de <__addsf3>:
    11de:	bb 27       	eor	r27, r27
    11e0:	aa 27       	eor	r26, r26
    11e2:	0e d0       	rcall	.+28     	; 0x1200 <__addsf3x>
    11e4:	3f c2       	rjmp	.+1150   	; 0x1664 <__fp_round>
    11e6:	30 d2       	rcall	.+1120   	; 0x1648 <__fp_pscA>
    11e8:	30 f0       	brcs	.+12     	; 0x11f6 <__addsf3+0x18>
    11ea:	35 d2       	rcall	.+1130   	; 0x1656 <__fp_pscB>
    11ec:	20 f0       	brcs	.+8      	; 0x11f6 <__addsf3+0x18>
    11ee:	31 f4       	brne	.+12     	; 0x11fc <__addsf3+0x1e>
    11f0:	9f 3f       	cpi	r25, 0xFF	; 255
    11f2:	11 f4       	brne	.+4      	; 0x11f8 <__addsf3+0x1a>
    11f4:	1e f4       	brtc	.+6      	; 0x11fc <__addsf3+0x1e>
    11f6:	ef c1       	rjmp	.+990    	; 0x15d6 <__fp_nan>
    11f8:	0e f4       	brtc	.+2      	; 0x11fc <__addsf3+0x1e>
    11fa:	e0 95       	com	r30
    11fc:	e7 fb       	bst	r30, 7
    11fe:	e5 c1       	rjmp	.+970    	; 0x15ca <__fp_inf>

00001200 <__addsf3x>:
    1200:	e9 2f       	mov	r30, r25
    1202:	41 d2       	rcall	.+1154   	; 0x1686 <__fp_split3>
    1204:	80 f3       	brcs	.-32     	; 0x11e6 <__addsf3+0x8>
    1206:	ba 17       	cp	r27, r26
    1208:	62 07       	cpc	r22, r18
    120a:	73 07       	cpc	r23, r19
    120c:	84 07       	cpc	r24, r20
    120e:	95 07       	cpc	r25, r21
    1210:	18 f0       	brcs	.+6      	; 0x1218 <__addsf3x+0x18>
    1212:	71 f4       	brne	.+28     	; 0x1230 <__addsf3x+0x30>
    1214:	9e f5       	brtc	.+102    	; 0x127c <__addsf3x+0x7c>
    1216:	59 c2       	rjmp	.+1202   	; 0x16ca <__fp_zero>
    1218:	0e f4       	brtc	.+2      	; 0x121c <__addsf3x+0x1c>
    121a:	e0 95       	com	r30
    121c:	0b 2e       	mov	r0, r27
    121e:	ba 2f       	mov	r27, r26
    1220:	a0 2d       	mov	r26, r0
    1222:	0b 01       	movw	r0, r22
    1224:	b9 01       	movw	r22, r18
    1226:	90 01       	movw	r18, r0
    1228:	0c 01       	movw	r0, r24
    122a:	ca 01       	movw	r24, r20
    122c:	a0 01       	movw	r20, r0
    122e:	11 24       	eor	r1, r1
    1230:	ff 27       	eor	r31, r31
    1232:	59 1b       	sub	r21, r25
    1234:	99 f0       	breq	.+38     	; 0x125c <__addsf3x+0x5c>
    1236:	59 3f       	cpi	r21, 0xF9	; 249
    1238:	50 f4       	brcc	.+20     	; 0x124e <__addsf3x+0x4e>
    123a:	50 3e       	cpi	r21, 0xE0	; 224
    123c:	68 f1       	brcs	.+90     	; 0x1298 <__addsf3x+0x98>
    123e:	1a 16       	cp	r1, r26
    1240:	f0 40       	sbci	r31, 0x00	; 0
    1242:	a2 2f       	mov	r26, r18
    1244:	23 2f       	mov	r18, r19
    1246:	34 2f       	mov	r19, r20
    1248:	44 27       	eor	r20, r20
    124a:	58 5f       	subi	r21, 0xF8	; 248
    124c:	f3 cf       	rjmp	.-26     	; 0x1234 <__addsf3x+0x34>
    124e:	46 95       	lsr	r20
    1250:	37 95       	ror	r19
    1252:	27 95       	ror	r18
    1254:	a7 95       	ror	r26
    1256:	f0 40       	sbci	r31, 0x00	; 0
    1258:	53 95       	inc	r21
    125a:	c9 f7       	brne	.-14     	; 0x124e <__addsf3x+0x4e>
    125c:	7e f4       	brtc	.+30     	; 0x127c <__addsf3x+0x7c>
    125e:	1f 16       	cp	r1, r31
    1260:	ba 0b       	sbc	r27, r26
    1262:	62 0b       	sbc	r22, r18
    1264:	73 0b       	sbc	r23, r19
    1266:	84 0b       	sbc	r24, r20
    1268:	ba f0       	brmi	.+46     	; 0x1298 <__addsf3x+0x98>
    126a:	91 50       	subi	r25, 0x01	; 1
    126c:	a1 f0       	breq	.+40     	; 0x1296 <__addsf3x+0x96>
    126e:	ff 0f       	add	r31, r31
    1270:	bb 1f       	adc	r27, r27
    1272:	66 1f       	adc	r22, r22
    1274:	77 1f       	adc	r23, r23
    1276:	88 1f       	adc	r24, r24
    1278:	c2 f7       	brpl	.-16     	; 0x126a <__addsf3x+0x6a>
    127a:	0e c0       	rjmp	.+28     	; 0x1298 <__addsf3x+0x98>
    127c:	ba 0f       	add	r27, r26
    127e:	62 1f       	adc	r22, r18
    1280:	73 1f       	adc	r23, r19
    1282:	84 1f       	adc	r24, r20
    1284:	48 f4       	brcc	.+18     	; 0x1298 <__addsf3x+0x98>
    1286:	87 95       	ror	r24
    1288:	77 95       	ror	r23
    128a:	67 95       	ror	r22
    128c:	b7 95       	ror	r27
    128e:	f7 95       	ror	r31
    1290:	9e 3f       	cpi	r25, 0xFE	; 254
    1292:	08 f0       	brcs	.+2      	; 0x1296 <__addsf3x+0x96>
    1294:	b3 cf       	rjmp	.-154    	; 0x11fc <__addsf3+0x1e>
    1296:	93 95       	inc	r25
    1298:	88 0f       	add	r24, r24
    129a:	08 f0       	brcs	.+2      	; 0x129e <__addsf3x+0x9e>
    129c:	99 27       	eor	r25, r25
    129e:	ee 0f       	add	r30, r30
    12a0:	97 95       	ror	r25
    12a2:	87 95       	ror	r24
    12a4:	08 95       	ret

000012a6 <asin>:
    12a6:	9f 93       	push	r25
    12a8:	9f 77       	andi	r25, 0x7F	; 127
    12aa:	ee e3       	ldi	r30, 0x3E	; 62
    12ac:	89 37       	cpi	r24, 0x79	; 121
    12ae:	9e 07       	cpc	r25, r30
    12b0:	20 f4       	brcc	.+8      	; 0x12ba <asin+0x14>
    12b2:	e4 ee       	ldi	r30, 0xE4	; 228
    12b4:	f0 e0       	ldi	r31, 0x00	; 0
    12b6:	b7 d1       	rcall	.+878    	; 0x1626 <__fp_powsodd>
    12b8:	09 c0       	rjmp	.+18     	; 0x12cc <asin+0x26>
    12ba:	48 d1       	rcall	.+656    	; 0x154c <__fp_arccos>
    12bc:	90 58       	subi	r25, 0x80	; 128
    12be:	a2 ea       	ldi	r26, 0xA2	; 162
    12c0:	2a ed       	ldi	r18, 0xDA	; 218
    12c2:	3f e0       	ldi	r19, 0x0F	; 15
    12c4:	49 ec       	ldi	r20, 0xC9	; 201
    12c6:	5f e3       	ldi	r21, 0x3F	; 63
    12c8:	9b df       	rcall	.-202    	; 0x1200 <__addsf3x>
    12ca:	cc d1       	rcall	.+920    	; 0x1664 <__fp_round>
    12cc:	0f 90       	pop	r0
    12ce:	07 fc       	sbrc	r0, 7
    12d0:	90 58       	subi	r25, 0x80	; 128
    12d2:	08 95       	ret
    12d4:	b9 d1       	rcall	.+882    	; 0x1648 <__fp_pscA>
    12d6:	58 f0       	brcs	.+22     	; 0x12ee <asin+0x48>
    12d8:	80 e8       	ldi	r24, 0x80	; 128
    12da:	91 e0       	ldi	r25, 0x01	; 1
    12dc:	09 f4       	brne	.+2      	; 0x12e0 <asin+0x3a>
    12de:	9e ef       	ldi	r25, 0xFE	; 254
    12e0:	ba d1       	rcall	.+884    	; 0x1656 <__fp_pscB>
    12e2:	28 f0       	brcs	.+10     	; 0x12ee <asin+0x48>
    12e4:	40 e8       	ldi	r20, 0x80	; 128
    12e6:	51 e0       	ldi	r21, 0x01	; 1
    12e8:	59 f4       	brne	.+22     	; 0x1300 <atan2+0xe>
    12ea:	5e ef       	ldi	r21, 0xFE	; 254
    12ec:	09 c0       	rjmp	.+18     	; 0x1300 <atan2+0xe>
    12ee:	73 c1       	rjmp	.+742    	; 0x15d6 <__fp_nan>
    12f0:	ec c1       	rjmp	.+984    	; 0x16ca <__fp_zero>

000012f2 <atan2>:
    12f2:	e9 2f       	mov	r30, r25
    12f4:	e0 78       	andi	r30, 0x80	; 128
    12f6:	c7 d1       	rcall	.+910    	; 0x1686 <__fp_split3>
    12f8:	68 f3       	brcs	.-38     	; 0x12d4 <asin+0x2e>
    12fa:	09 2e       	mov	r0, r25
    12fc:	05 2a       	or	r0, r21
    12fe:	c1 f3       	breq	.-16     	; 0x12f0 <asin+0x4a>
    1300:	26 17       	cp	r18, r22
    1302:	37 07       	cpc	r19, r23
    1304:	48 07       	cpc	r20, r24
    1306:	59 07       	cpc	r21, r25
    1308:	38 f0       	brcs	.+14     	; 0x1318 <atan2+0x26>
    130a:	0e 2e       	mov	r0, r30
    130c:	07 f8       	bld	r0, 7
    130e:	e0 25       	eor	r30, r0
    1310:	69 f0       	breq	.+26     	; 0x132c <atan2+0x3a>
    1312:	e0 25       	eor	r30, r0
    1314:	e0 64       	ori	r30, 0x40	; 64
    1316:	0a c0       	rjmp	.+20     	; 0x132c <atan2+0x3a>
    1318:	ef 63       	ori	r30, 0x3F	; 63
    131a:	07 f8       	bld	r0, 7
    131c:	00 94       	com	r0
    131e:	07 fa       	bst	r0, 7
    1320:	db 01       	movw	r26, r22
    1322:	b9 01       	movw	r22, r18
    1324:	9d 01       	movw	r18, r26
    1326:	dc 01       	movw	r26, r24
    1328:	ca 01       	movw	r24, r20
    132a:	ad 01       	movw	r20, r26
    132c:	ef 93       	push	r30
    132e:	47 d0       	rcall	.+142    	; 0x13be <__divsf3_pse>
    1330:	99 d1       	rcall	.+818    	; 0x1664 <__fp_round>
    1332:	0a d0       	rcall	.+20     	; 0x1348 <atan>
    1334:	5f 91       	pop	r21
    1336:	55 23       	and	r21, r21
    1338:	31 f0       	breq	.+12     	; 0x1346 <atan2+0x54>
    133a:	2b ed       	ldi	r18, 0xDB	; 219
    133c:	3f e0       	ldi	r19, 0x0F	; 15
    133e:	49 e4       	ldi	r20, 0x49	; 73
    1340:	50 fd       	sbrc	r21, 0
    1342:	49 ec       	ldi	r20, 0xC9	; 201
    1344:	4c cf       	rjmp	.-360    	; 0x11de <__addsf3>
    1346:	08 95       	ret

00001348 <atan>:
    1348:	df 93       	push	r29
    134a:	dd 27       	eor	r29, r29
    134c:	b9 2f       	mov	r27, r25
    134e:	bf 77       	andi	r27, 0x7F	; 127
    1350:	40 e8       	ldi	r20, 0x80	; 128
    1352:	5f e3       	ldi	r21, 0x3F	; 63
    1354:	16 16       	cp	r1, r22
    1356:	17 06       	cpc	r1, r23
    1358:	48 07       	cpc	r20, r24
    135a:	5b 07       	cpc	r21, r27
    135c:	10 f4       	brcc	.+4      	; 0x1362 <atan+0x1a>
    135e:	d9 2f       	mov	r29, r25
    1360:	bf d1       	rcall	.+894    	; 0x16e0 <inverse>
    1362:	9f 93       	push	r25
    1364:	8f 93       	push	r24
    1366:	7f 93       	push	r23
    1368:	6f 93       	push	r22
    136a:	6c d2       	rcall	.+1240   	; 0x1844 <square>
    136c:	e8 ef       	ldi	r30, 0xF8	; 248
    136e:	f0 e0       	ldi	r31, 0x00	; 0
    1370:	35 d1       	rcall	.+618    	; 0x15dc <__fp_powser>
    1372:	78 d1       	rcall	.+752    	; 0x1664 <__fp_round>
    1374:	2f 91       	pop	r18
    1376:	3f 91       	pop	r19
    1378:	4f 91       	pop	r20
    137a:	5f 91       	pop	r21
    137c:	c4 d1       	rcall	.+904    	; 0x1706 <__mulsf3x>
    137e:	dd 23       	and	r29, r29
    1380:	49 f0       	breq	.+18     	; 0x1394 <atan+0x4c>
    1382:	90 58       	subi	r25, 0x80	; 128
    1384:	a2 ea       	ldi	r26, 0xA2	; 162
    1386:	2a ed       	ldi	r18, 0xDA	; 218
    1388:	3f e0       	ldi	r19, 0x0F	; 15
    138a:	49 ec       	ldi	r20, 0xC9	; 201
    138c:	5f e3       	ldi	r21, 0x3F	; 63
    138e:	d0 78       	andi	r29, 0x80	; 128
    1390:	5d 27       	eor	r21, r29
    1392:	36 df       	rcall	.-404    	; 0x1200 <__addsf3x>
    1394:	df 91       	pop	r29
    1396:	66 c1       	rjmp	.+716    	; 0x1664 <__fp_round>

00001398 <__cmpsf2>:
    1398:	f4 d0       	rcall	.+488    	; 0x1582 <__fp_cmp>
    139a:	08 f4       	brcc	.+2      	; 0x139e <__cmpsf2+0x6>
    139c:	81 e0       	ldi	r24, 0x01	; 1
    139e:	08 95       	ret

000013a0 <__divsf3>:
    13a0:	0c d0       	rcall	.+24     	; 0x13ba <__divsf3x>
    13a2:	60 c1       	rjmp	.+704    	; 0x1664 <__fp_round>
    13a4:	58 d1       	rcall	.+688    	; 0x1656 <__fp_pscB>
    13a6:	40 f0       	brcs	.+16     	; 0x13b8 <__divsf3+0x18>
    13a8:	4f d1       	rcall	.+670    	; 0x1648 <__fp_pscA>
    13aa:	30 f0       	brcs	.+12     	; 0x13b8 <__divsf3+0x18>
    13ac:	21 f4       	brne	.+8      	; 0x13b6 <__divsf3+0x16>
    13ae:	5f 3f       	cpi	r21, 0xFF	; 255
    13b0:	19 f0       	breq	.+6      	; 0x13b8 <__divsf3+0x18>
    13b2:	0b c1       	rjmp	.+534    	; 0x15ca <__fp_inf>
    13b4:	51 11       	cpse	r21, r1
    13b6:	8a c1       	rjmp	.+788    	; 0x16cc <__fp_szero>
    13b8:	0e c1       	rjmp	.+540    	; 0x15d6 <__fp_nan>

000013ba <__divsf3x>:
    13ba:	65 d1       	rcall	.+714    	; 0x1686 <__fp_split3>
    13bc:	98 f3       	brcs	.-26     	; 0x13a4 <__divsf3+0x4>

000013be <__divsf3_pse>:
    13be:	99 23       	and	r25, r25
    13c0:	c9 f3       	breq	.-14     	; 0x13b4 <__divsf3+0x14>
    13c2:	55 23       	and	r21, r21
    13c4:	b1 f3       	breq	.-20     	; 0x13b2 <__divsf3+0x12>
    13c6:	95 1b       	sub	r25, r21
    13c8:	55 0b       	sbc	r21, r21
    13ca:	bb 27       	eor	r27, r27
    13cc:	aa 27       	eor	r26, r26
    13ce:	62 17       	cp	r22, r18
    13d0:	73 07       	cpc	r23, r19
    13d2:	84 07       	cpc	r24, r20
    13d4:	38 f0       	brcs	.+14     	; 0x13e4 <__divsf3_pse+0x26>
    13d6:	9f 5f       	subi	r25, 0xFF	; 255
    13d8:	5f 4f       	sbci	r21, 0xFF	; 255
    13da:	22 0f       	add	r18, r18
    13dc:	33 1f       	adc	r19, r19
    13de:	44 1f       	adc	r20, r20
    13e0:	aa 1f       	adc	r26, r26
    13e2:	a9 f3       	breq	.-22     	; 0x13ce <__divsf3_pse+0x10>
    13e4:	33 d0       	rcall	.+102    	; 0x144c <__divsf3_pse+0x8e>
    13e6:	0e 2e       	mov	r0, r30
    13e8:	3a f0       	brmi	.+14     	; 0x13f8 <__divsf3_pse+0x3a>
    13ea:	e0 e8       	ldi	r30, 0x80	; 128
    13ec:	30 d0       	rcall	.+96     	; 0x144e <__divsf3_pse+0x90>
    13ee:	91 50       	subi	r25, 0x01	; 1
    13f0:	50 40       	sbci	r21, 0x00	; 0
    13f2:	e6 95       	lsr	r30
    13f4:	00 1c       	adc	r0, r0
    13f6:	ca f7       	brpl	.-14     	; 0x13ea <__divsf3_pse+0x2c>
    13f8:	29 d0       	rcall	.+82     	; 0x144c <__divsf3_pse+0x8e>
    13fa:	fe 2f       	mov	r31, r30
    13fc:	27 d0       	rcall	.+78     	; 0x144c <__divsf3_pse+0x8e>
    13fe:	66 0f       	add	r22, r22
    1400:	77 1f       	adc	r23, r23
    1402:	88 1f       	adc	r24, r24
    1404:	bb 1f       	adc	r27, r27
    1406:	26 17       	cp	r18, r22
    1408:	37 07       	cpc	r19, r23
    140a:	48 07       	cpc	r20, r24
    140c:	ab 07       	cpc	r26, r27
    140e:	b0 e8       	ldi	r27, 0x80	; 128
    1410:	09 f0       	breq	.+2      	; 0x1414 <__divsf3_pse+0x56>
    1412:	bb 0b       	sbc	r27, r27
    1414:	80 2d       	mov	r24, r0
    1416:	bf 01       	movw	r22, r30
    1418:	ff 27       	eor	r31, r31
    141a:	93 58       	subi	r25, 0x83	; 131
    141c:	5f 4f       	sbci	r21, 0xFF	; 255
    141e:	2a f0       	brmi	.+10     	; 0x142a <__divsf3_pse+0x6c>
    1420:	9e 3f       	cpi	r25, 0xFE	; 254
    1422:	51 05       	cpc	r21, r1
    1424:	68 f0       	brcs	.+26     	; 0x1440 <__divsf3_pse+0x82>
    1426:	d1 c0       	rjmp	.+418    	; 0x15ca <__fp_inf>
    1428:	51 c1       	rjmp	.+674    	; 0x16cc <__fp_szero>
    142a:	5f 3f       	cpi	r21, 0xFF	; 255
    142c:	ec f3       	brlt	.-6      	; 0x1428 <__divsf3_pse+0x6a>
    142e:	98 3e       	cpi	r25, 0xE8	; 232
    1430:	dc f3       	brlt	.-10     	; 0x1428 <__divsf3_pse+0x6a>
    1432:	86 95       	lsr	r24
    1434:	77 95       	ror	r23
    1436:	67 95       	ror	r22
    1438:	b7 95       	ror	r27
    143a:	f7 95       	ror	r31
    143c:	9f 5f       	subi	r25, 0xFF	; 255
    143e:	c9 f7       	brne	.-14     	; 0x1432 <__divsf3_pse+0x74>
    1440:	88 0f       	add	r24, r24
    1442:	91 1d       	adc	r25, r1
    1444:	96 95       	lsr	r25
    1446:	87 95       	ror	r24
    1448:	97 f9       	bld	r25, 7
    144a:	08 95       	ret
    144c:	e1 e0       	ldi	r30, 0x01	; 1
    144e:	66 0f       	add	r22, r22
    1450:	77 1f       	adc	r23, r23
    1452:	88 1f       	adc	r24, r24
    1454:	bb 1f       	adc	r27, r27
    1456:	62 17       	cp	r22, r18
    1458:	73 07       	cpc	r23, r19
    145a:	84 07       	cpc	r24, r20
    145c:	ba 07       	cpc	r27, r26
    145e:	20 f0       	brcs	.+8      	; 0x1468 <__divsf3_pse+0xaa>
    1460:	62 1b       	sub	r22, r18
    1462:	73 0b       	sbc	r23, r19
    1464:	84 0b       	sbc	r24, r20
    1466:	ba 0b       	sbc	r27, r26
    1468:	ee 1f       	adc	r30, r30
    146a:	88 f7       	brcc	.-30     	; 0x144e <__divsf3_pse+0x90>
    146c:	e0 95       	com	r30
    146e:	08 95       	ret

00001470 <__fixsfsi>:
    1470:	04 d0       	rcall	.+8      	; 0x147a <__fixunssfsi>
    1472:	68 94       	set
    1474:	b1 11       	cpse	r27, r1
    1476:	2a c1       	rjmp	.+596    	; 0x16cc <__fp_szero>
    1478:	08 95       	ret

0000147a <__fixunssfsi>:
    147a:	0d d1       	rcall	.+538    	; 0x1696 <__fp_splitA>
    147c:	88 f0       	brcs	.+34     	; 0x14a0 <__fixunssfsi+0x26>
    147e:	9f 57       	subi	r25, 0x7F	; 127
    1480:	90 f0       	brcs	.+36     	; 0x14a6 <__fixunssfsi+0x2c>
    1482:	b9 2f       	mov	r27, r25
    1484:	99 27       	eor	r25, r25
    1486:	b7 51       	subi	r27, 0x17	; 23
    1488:	a0 f0       	brcs	.+40     	; 0x14b2 <__fixunssfsi+0x38>
    148a:	d1 f0       	breq	.+52     	; 0x14c0 <__fixunssfsi+0x46>
    148c:	66 0f       	add	r22, r22
    148e:	77 1f       	adc	r23, r23
    1490:	88 1f       	adc	r24, r24
    1492:	99 1f       	adc	r25, r25
    1494:	1a f0       	brmi	.+6      	; 0x149c <__fixunssfsi+0x22>
    1496:	ba 95       	dec	r27
    1498:	c9 f7       	brne	.-14     	; 0x148c <__fixunssfsi+0x12>
    149a:	12 c0       	rjmp	.+36     	; 0x14c0 <__fixunssfsi+0x46>
    149c:	b1 30       	cpi	r27, 0x01	; 1
    149e:	81 f0       	breq	.+32     	; 0x14c0 <__fixunssfsi+0x46>
    14a0:	14 d1       	rcall	.+552    	; 0x16ca <__fp_zero>
    14a2:	b1 e0       	ldi	r27, 0x01	; 1
    14a4:	08 95       	ret
    14a6:	11 c1       	rjmp	.+546    	; 0x16ca <__fp_zero>
    14a8:	67 2f       	mov	r22, r23
    14aa:	78 2f       	mov	r23, r24
    14ac:	88 27       	eor	r24, r24
    14ae:	b8 5f       	subi	r27, 0xF8	; 248
    14b0:	39 f0       	breq	.+14     	; 0x14c0 <__fixunssfsi+0x46>
    14b2:	b9 3f       	cpi	r27, 0xF9	; 249
    14b4:	cc f3       	brlt	.-14     	; 0x14a8 <__fixunssfsi+0x2e>
    14b6:	86 95       	lsr	r24
    14b8:	77 95       	ror	r23
    14ba:	67 95       	ror	r22
    14bc:	b3 95       	inc	r27
    14be:	d9 f7       	brne	.-10     	; 0x14b6 <__fixunssfsi+0x3c>
    14c0:	3e f4       	brtc	.+14     	; 0x14d0 <__fixunssfsi+0x56>
    14c2:	90 95       	com	r25
    14c4:	80 95       	com	r24
    14c6:	70 95       	com	r23
    14c8:	61 95       	neg	r22
    14ca:	7f 4f       	sbci	r23, 0xFF	; 255
    14cc:	8f 4f       	sbci	r24, 0xFF	; 255
    14ce:	9f 4f       	sbci	r25, 0xFF	; 255
    14d0:	08 95       	ret

000014d2 <__floatunsisf>:
    14d2:	e8 94       	clt
    14d4:	09 c0       	rjmp	.+18     	; 0x14e8 <__floatsisf+0x12>

000014d6 <__floatsisf>:
    14d6:	97 fb       	bst	r25, 7
    14d8:	3e f4       	brtc	.+14     	; 0x14e8 <__floatsisf+0x12>
    14da:	90 95       	com	r25
    14dc:	80 95       	com	r24
    14de:	70 95       	com	r23
    14e0:	61 95       	neg	r22
    14e2:	7f 4f       	sbci	r23, 0xFF	; 255
    14e4:	8f 4f       	sbci	r24, 0xFF	; 255
    14e6:	9f 4f       	sbci	r25, 0xFF	; 255
    14e8:	99 23       	and	r25, r25
    14ea:	a9 f0       	breq	.+42     	; 0x1516 <__floatsisf+0x40>
    14ec:	f9 2f       	mov	r31, r25
    14ee:	96 e9       	ldi	r25, 0x96	; 150
    14f0:	bb 27       	eor	r27, r27
    14f2:	93 95       	inc	r25
    14f4:	f6 95       	lsr	r31
    14f6:	87 95       	ror	r24
    14f8:	77 95       	ror	r23
    14fa:	67 95       	ror	r22
    14fc:	b7 95       	ror	r27
    14fe:	f1 11       	cpse	r31, r1
    1500:	f8 cf       	rjmp	.-16     	; 0x14f2 <__floatsisf+0x1c>
    1502:	fa f4       	brpl	.+62     	; 0x1542 <__floatsisf+0x6c>
    1504:	bb 0f       	add	r27, r27
    1506:	11 f4       	brne	.+4      	; 0x150c <__floatsisf+0x36>
    1508:	60 ff       	sbrs	r22, 0
    150a:	1b c0       	rjmp	.+54     	; 0x1542 <__floatsisf+0x6c>
    150c:	6f 5f       	subi	r22, 0xFF	; 255
    150e:	7f 4f       	sbci	r23, 0xFF	; 255
    1510:	8f 4f       	sbci	r24, 0xFF	; 255
    1512:	9f 4f       	sbci	r25, 0xFF	; 255
    1514:	16 c0       	rjmp	.+44     	; 0x1542 <__floatsisf+0x6c>
    1516:	88 23       	and	r24, r24
    1518:	11 f0       	breq	.+4      	; 0x151e <__floatsisf+0x48>
    151a:	96 e9       	ldi	r25, 0x96	; 150
    151c:	11 c0       	rjmp	.+34     	; 0x1540 <__floatsisf+0x6a>
    151e:	77 23       	and	r23, r23
    1520:	21 f0       	breq	.+8      	; 0x152a <__floatsisf+0x54>
    1522:	9e e8       	ldi	r25, 0x8E	; 142
    1524:	87 2f       	mov	r24, r23
    1526:	76 2f       	mov	r23, r22
    1528:	05 c0       	rjmp	.+10     	; 0x1534 <__floatsisf+0x5e>
    152a:	66 23       	and	r22, r22
    152c:	71 f0       	breq	.+28     	; 0x154a <__floatsisf+0x74>
    152e:	96 e8       	ldi	r25, 0x86	; 134
    1530:	86 2f       	mov	r24, r22
    1532:	70 e0       	ldi	r23, 0x00	; 0
    1534:	60 e0       	ldi	r22, 0x00	; 0
    1536:	2a f0       	brmi	.+10     	; 0x1542 <__floatsisf+0x6c>
    1538:	9a 95       	dec	r25
    153a:	66 0f       	add	r22, r22
    153c:	77 1f       	adc	r23, r23
    153e:	88 1f       	adc	r24, r24
    1540:	da f7       	brpl	.-10     	; 0x1538 <__floatsisf+0x62>
    1542:	88 0f       	add	r24, r24
    1544:	96 95       	lsr	r25
    1546:	87 95       	ror	r24
    1548:	97 f9       	bld	r25, 7
    154a:	08 95       	ret

0000154c <__fp_arccos>:
    154c:	df 93       	push	r29
    154e:	cf 93       	push	r28
    1550:	1f 93       	push	r17
    1552:	0f 93       	push	r16
    1554:	8b 01       	movw	r16, r22
    1556:	ec 01       	movw	r28, r24
    1558:	e5 e2       	ldi	r30, 0x25	; 37
    155a:	f1 e0       	ldi	r31, 0x01	; 1
    155c:	3f d0       	rcall	.+126    	; 0x15dc <__fp_powser>
    155e:	82 d0       	rcall	.+260    	; 0x1664 <__fp_round>
    1560:	98 01       	movw	r18, r16
    1562:	ae 01       	movw	r20, r28
    1564:	8b 01       	movw	r16, r22
    1566:	ec 01       	movw	r28, r24
    1568:	60 e0       	ldi	r22, 0x00	; 0
    156a:	70 e0       	ldi	r23, 0x00	; 0
    156c:	80 e8       	ldi	r24, 0x80	; 128
    156e:	9f e3       	ldi	r25, 0x3F	; 63
    1570:	35 de       	rcall	.-918    	; 0x11dc <__subsf3>
    1572:	2a d1       	rcall	.+596    	; 0x17c8 <sqrt>
    1574:	98 01       	movw	r18, r16
    1576:	ae 01       	movw	r20, r28
    1578:	0f 91       	pop	r16
    157a:	1f 91       	pop	r17
    157c:	cf 91       	pop	r28
    157e:	df 91       	pop	r29
    1580:	c2 c0       	rjmp	.+388    	; 0x1706 <__mulsf3x>

00001582 <__fp_cmp>:
    1582:	99 0f       	add	r25, r25
    1584:	00 08       	sbc	r0, r0
    1586:	55 0f       	add	r21, r21
    1588:	aa 0b       	sbc	r26, r26
    158a:	e0 e8       	ldi	r30, 0x80	; 128
    158c:	fe ef       	ldi	r31, 0xFE	; 254
    158e:	16 16       	cp	r1, r22
    1590:	17 06       	cpc	r1, r23
    1592:	e8 07       	cpc	r30, r24
    1594:	f9 07       	cpc	r31, r25
    1596:	c0 f0       	brcs	.+48     	; 0x15c8 <__fp_cmp+0x46>
    1598:	12 16       	cp	r1, r18
    159a:	13 06       	cpc	r1, r19
    159c:	e4 07       	cpc	r30, r20
    159e:	f5 07       	cpc	r31, r21
    15a0:	98 f0       	brcs	.+38     	; 0x15c8 <__fp_cmp+0x46>
    15a2:	62 1b       	sub	r22, r18
    15a4:	73 0b       	sbc	r23, r19
    15a6:	84 0b       	sbc	r24, r20
    15a8:	95 0b       	sbc	r25, r21
    15aa:	39 f4       	brne	.+14     	; 0x15ba <__fp_cmp+0x38>
    15ac:	0a 26       	eor	r0, r26
    15ae:	61 f0       	breq	.+24     	; 0x15c8 <__fp_cmp+0x46>
    15b0:	23 2b       	or	r18, r19
    15b2:	24 2b       	or	r18, r20
    15b4:	25 2b       	or	r18, r21
    15b6:	21 f4       	brne	.+8      	; 0x15c0 <__fp_cmp+0x3e>
    15b8:	08 95       	ret
    15ba:	0a 26       	eor	r0, r26
    15bc:	09 f4       	brne	.+2      	; 0x15c0 <__fp_cmp+0x3e>
    15be:	a1 40       	sbci	r26, 0x01	; 1
    15c0:	a6 95       	lsr	r26
    15c2:	8f ef       	ldi	r24, 0xFF	; 255
    15c4:	81 1d       	adc	r24, r1
    15c6:	81 1d       	adc	r24, r1
    15c8:	08 95       	ret

000015ca <__fp_inf>:
    15ca:	97 f9       	bld	r25, 7
    15cc:	9f 67       	ori	r25, 0x7F	; 127
    15ce:	80 e8       	ldi	r24, 0x80	; 128
    15d0:	70 e0       	ldi	r23, 0x00	; 0
    15d2:	60 e0       	ldi	r22, 0x00	; 0
    15d4:	08 95       	ret

000015d6 <__fp_nan>:
    15d6:	9f ef       	ldi	r25, 0xFF	; 255
    15d8:	80 ec       	ldi	r24, 0xC0	; 192
    15da:	08 95       	ret

000015dc <__fp_powser>:
    15dc:	df 93       	push	r29
    15de:	cf 93       	push	r28
    15e0:	1f 93       	push	r17
    15e2:	0f 93       	push	r16
    15e4:	ff 92       	push	r15
    15e6:	ef 92       	push	r14
    15e8:	df 92       	push	r13
    15ea:	7b 01       	movw	r14, r22
    15ec:	8c 01       	movw	r16, r24
    15ee:	68 94       	set
    15f0:	05 c0       	rjmp	.+10     	; 0x15fc <__fp_powser+0x20>
    15f2:	da 2e       	mov	r13, r26
    15f4:	ef 01       	movw	r28, r30
    15f6:	87 d0       	rcall	.+270    	; 0x1706 <__mulsf3x>
    15f8:	fe 01       	movw	r30, r28
    15fa:	e8 94       	clt
    15fc:	a5 91       	lpm	r26, Z+
    15fe:	25 91       	lpm	r18, Z+
    1600:	35 91       	lpm	r19, Z+
    1602:	45 91       	lpm	r20, Z+
    1604:	55 91       	lpm	r21, Z+
    1606:	ae f3       	brts	.-22     	; 0x15f2 <__fp_powser+0x16>
    1608:	ef 01       	movw	r28, r30
    160a:	fa dd       	rcall	.-1036   	; 0x1200 <__addsf3x>
    160c:	fe 01       	movw	r30, r28
    160e:	97 01       	movw	r18, r14
    1610:	a8 01       	movw	r20, r16
    1612:	da 94       	dec	r13
    1614:	79 f7       	brne	.-34     	; 0x15f4 <__fp_powser+0x18>
    1616:	df 90       	pop	r13
    1618:	ef 90       	pop	r14
    161a:	ff 90       	pop	r15
    161c:	0f 91       	pop	r16
    161e:	1f 91       	pop	r17
    1620:	cf 91       	pop	r28
    1622:	df 91       	pop	r29
    1624:	08 95       	ret

00001626 <__fp_powsodd>:
    1626:	9f 93       	push	r25
    1628:	8f 93       	push	r24
    162a:	7f 93       	push	r23
    162c:	6f 93       	push	r22
    162e:	ff 93       	push	r31
    1630:	ef 93       	push	r30
    1632:	9b 01       	movw	r18, r22
    1634:	ac 01       	movw	r20, r24
    1636:	5b d0       	rcall	.+182    	; 0x16ee <__mulsf3>
    1638:	ef 91       	pop	r30
    163a:	ff 91       	pop	r31
    163c:	cf df       	rcall	.-98     	; 0x15dc <__fp_powser>
    163e:	2f 91       	pop	r18
    1640:	3f 91       	pop	r19
    1642:	4f 91       	pop	r20
    1644:	5f 91       	pop	r21
    1646:	53 c0       	rjmp	.+166    	; 0x16ee <__mulsf3>

00001648 <__fp_pscA>:
    1648:	00 24       	eor	r0, r0
    164a:	0a 94       	dec	r0
    164c:	16 16       	cp	r1, r22
    164e:	17 06       	cpc	r1, r23
    1650:	18 06       	cpc	r1, r24
    1652:	09 06       	cpc	r0, r25
    1654:	08 95       	ret

00001656 <__fp_pscB>:
    1656:	00 24       	eor	r0, r0
    1658:	0a 94       	dec	r0
    165a:	12 16       	cp	r1, r18
    165c:	13 06       	cpc	r1, r19
    165e:	14 06       	cpc	r1, r20
    1660:	05 06       	cpc	r0, r21
    1662:	08 95       	ret

00001664 <__fp_round>:
    1664:	09 2e       	mov	r0, r25
    1666:	03 94       	inc	r0
    1668:	00 0c       	add	r0, r0
    166a:	11 f4       	brne	.+4      	; 0x1670 <__fp_round+0xc>
    166c:	88 23       	and	r24, r24
    166e:	52 f0       	brmi	.+20     	; 0x1684 <__fp_round+0x20>
    1670:	bb 0f       	add	r27, r27
    1672:	40 f4       	brcc	.+16     	; 0x1684 <__fp_round+0x20>
    1674:	bf 2b       	or	r27, r31
    1676:	11 f4       	brne	.+4      	; 0x167c <__fp_round+0x18>
    1678:	60 ff       	sbrs	r22, 0
    167a:	04 c0       	rjmp	.+8      	; 0x1684 <__fp_round+0x20>
    167c:	6f 5f       	subi	r22, 0xFF	; 255
    167e:	7f 4f       	sbci	r23, 0xFF	; 255
    1680:	8f 4f       	sbci	r24, 0xFF	; 255
    1682:	9f 4f       	sbci	r25, 0xFF	; 255
    1684:	08 95       	ret

00001686 <__fp_split3>:
    1686:	57 fd       	sbrc	r21, 7
    1688:	90 58       	subi	r25, 0x80	; 128
    168a:	44 0f       	add	r20, r20
    168c:	55 1f       	adc	r21, r21
    168e:	59 f0       	breq	.+22     	; 0x16a6 <__fp_splitA+0x10>
    1690:	5f 3f       	cpi	r21, 0xFF	; 255
    1692:	71 f0       	breq	.+28     	; 0x16b0 <__fp_splitA+0x1a>
    1694:	47 95       	ror	r20

00001696 <__fp_splitA>:
    1696:	88 0f       	add	r24, r24
    1698:	97 fb       	bst	r25, 7
    169a:	99 1f       	adc	r25, r25
    169c:	61 f0       	breq	.+24     	; 0x16b6 <__fp_splitA+0x20>
    169e:	9f 3f       	cpi	r25, 0xFF	; 255
    16a0:	79 f0       	breq	.+30     	; 0x16c0 <__fp_splitA+0x2a>
    16a2:	87 95       	ror	r24
    16a4:	08 95       	ret
    16a6:	12 16       	cp	r1, r18
    16a8:	13 06       	cpc	r1, r19
    16aa:	14 06       	cpc	r1, r20
    16ac:	55 1f       	adc	r21, r21
    16ae:	f2 cf       	rjmp	.-28     	; 0x1694 <__fp_split3+0xe>
    16b0:	46 95       	lsr	r20
    16b2:	f1 df       	rcall	.-30     	; 0x1696 <__fp_splitA>
    16b4:	08 c0       	rjmp	.+16     	; 0x16c6 <__fp_splitA+0x30>
    16b6:	16 16       	cp	r1, r22
    16b8:	17 06       	cpc	r1, r23
    16ba:	18 06       	cpc	r1, r24
    16bc:	99 1f       	adc	r25, r25
    16be:	f1 cf       	rjmp	.-30     	; 0x16a2 <__fp_splitA+0xc>
    16c0:	86 95       	lsr	r24
    16c2:	71 05       	cpc	r23, r1
    16c4:	61 05       	cpc	r22, r1
    16c6:	08 94       	sec
    16c8:	08 95       	ret

000016ca <__fp_zero>:
    16ca:	e8 94       	clt

000016cc <__fp_szero>:
    16cc:	bb 27       	eor	r27, r27
    16ce:	66 27       	eor	r22, r22
    16d0:	77 27       	eor	r23, r23
    16d2:	cb 01       	movw	r24, r22
    16d4:	97 f9       	bld	r25, 7
    16d6:	08 95       	ret

000016d8 <__gesf2>:
    16d8:	54 df       	rcall	.-344    	; 0x1582 <__fp_cmp>
    16da:	08 f4       	brcc	.+2      	; 0x16de <__gesf2+0x6>
    16dc:	8f ef       	ldi	r24, 0xFF	; 255
    16de:	08 95       	ret

000016e0 <inverse>:
    16e0:	9b 01       	movw	r18, r22
    16e2:	ac 01       	movw	r20, r24
    16e4:	60 e0       	ldi	r22, 0x00	; 0
    16e6:	70 e0       	ldi	r23, 0x00	; 0
    16e8:	80 e8       	ldi	r24, 0x80	; 128
    16ea:	9f e3       	ldi	r25, 0x3F	; 63
    16ec:	59 ce       	rjmp	.-846    	; 0x13a0 <__divsf3>

000016ee <__mulsf3>:
    16ee:	0b d0       	rcall	.+22     	; 0x1706 <__mulsf3x>
    16f0:	b9 cf       	rjmp	.-142    	; 0x1664 <__fp_round>
    16f2:	aa df       	rcall	.-172    	; 0x1648 <__fp_pscA>
    16f4:	28 f0       	brcs	.+10     	; 0x1700 <__mulsf3+0x12>
    16f6:	af df       	rcall	.-162    	; 0x1656 <__fp_pscB>
    16f8:	18 f0       	brcs	.+6      	; 0x1700 <__mulsf3+0x12>
    16fa:	95 23       	and	r25, r21
    16fc:	09 f0       	breq	.+2      	; 0x1700 <__mulsf3+0x12>
    16fe:	65 cf       	rjmp	.-310    	; 0x15ca <__fp_inf>
    1700:	6a cf       	rjmp	.-300    	; 0x15d6 <__fp_nan>
    1702:	11 24       	eor	r1, r1
    1704:	e3 cf       	rjmp	.-58     	; 0x16cc <__fp_szero>

00001706 <__mulsf3x>:
    1706:	bf df       	rcall	.-130    	; 0x1686 <__fp_split3>
    1708:	a0 f3       	brcs	.-24     	; 0x16f2 <__mulsf3+0x4>

0000170a <__mulsf3_pse>:
    170a:	95 9f       	mul	r25, r21
    170c:	d1 f3       	breq	.-12     	; 0x1702 <__mulsf3+0x14>
    170e:	95 0f       	add	r25, r21
    1710:	50 e0       	ldi	r21, 0x00	; 0
    1712:	55 1f       	adc	r21, r21
    1714:	62 9f       	mul	r22, r18
    1716:	f0 01       	movw	r30, r0
    1718:	72 9f       	mul	r23, r18
    171a:	bb 27       	eor	r27, r27
    171c:	f0 0d       	add	r31, r0
    171e:	b1 1d       	adc	r27, r1
    1720:	63 9f       	mul	r22, r19
    1722:	aa 27       	eor	r26, r26
    1724:	f0 0d       	add	r31, r0
    1726:	b1 1d       	adc	r27, r1
    1728:	aa 1f       	adc	r26, r26
    172a:	64 9f       	mul	r22, r20
    172c:	66 27       	eor	r22, r22
    172e:	b0 0d       	add	r27, r0
    1730:	a1 1d       	adc	r26, r1
    1732:	66 1f       	adc	r22, r22
    1734:	82 9f       	mul	r24, r18
    1736:	22 27       	eor	r18, r18
    1738:	b0 0d       	add	r27, r0
    173a:	a1 1d       	adc	r26, r1
    173c:	62 1f       	adc	r22, r18
    173e:	73 9f       	mul	r23, r19
    1740:	b0 0d       	add	r27, r0
    1742:	a1 1d       	adc	r26, r1
    1744:	62 1f       	adc	r22, r18
    1746:	83 9f       	mul	r24, r19
    1748:	a0 0d       	add	r26, r0
    174a:	61 1d       	adc	r22, r1
    174c:	22 1f       	adc	r18, r18
    174e:	74 9f       	mul	r23, r20
    1750:	33 27       	eor	r19, r19
    1752:	a0 0d       	add	r26, r0
    1754:	61 1d       	adc	r22, r1
    1756:	23 1f       	adc	r18, r19
    1758:	84 9f       	mul	r24, r20
    175a:	60 0d       	add	r22, r0
    175c:	21 1d       	adc	r18, r1
    175e:	82 2f       	mov	r24, r18
    1760:	76 2f       	mov	r23, r22
    1762:	6a 2f       	mov	r22, r26
    1764:	11 24       	eor	r1, r1
    1766:	9f 57       	subi	r25, 0x7F	; 127
    1768:	50 40       	sbci	r21, 0x00	; 0
    176a:	8a f0       	brmi	.+34     	; 0x178e <__mulsf3_pse+0x84>
    176c:	e1 f0       	breq	.+56     	; 0x17a6 <__mulsf3_pse+0x9c>
    176e:	88 23       	and	r24, r24
    1770:	4a f0       	brmi	.+18     	; 0x1784 <__mulsf3_pse+0x7a>
    1772:	ee 0f       	add	r30, r30
    1774:	ff 1f       	adc	r31, r31
    1776:	bb 1f       	adc	r27, r27
    1778:	66 1f       	adc	r22, r22
    177a:	77 1f       	adc	r23, r23
    177c:	88 1f       	adc	r24, r24
    177e:	91 50       	subi	r25, 0x01	; 1
    1780:	50 40       	sbci	r21, 0x00	; 0
    1782:	a9 f7       	brne	.-22     	; 0x176e <__mulsf3_pse+0x64>
    1784:	9e 3f       	cpi	r25, 0xFE	; 254
    1786:	51 05       	cpc	r21, r1
    1788:	70 f0       	brcs	.+28     	; 0x17a6 <__mulsf3_pse+0x9c>
    178a:	1f cf       	rjmp	.-450    	; 0x15ca <__fp_inf>
    178c:	9f cf       	rjmp	.-194    	; 0x16cc <__fp_szero>
    178e:	5f 3f       	cpi	r21, 0xFF	; 255
    1790:	ec f3       	brlt	.-6      	; 0x178c <__mulsf3_pse+0x82>
    1792:	98 3e       	cpi	r25, 0xE8	; 232
    1794:	dc f3       	brlt	.-10     	; 0x178c <__mulsf3_pse+0x82>
    1796:	86 95       	lsr	r24
    1798:	77 95       	ror	r23
    179a:	67 95       	ror	r22
    179c:	b7 95       	ror	r27
    179e:	f7 95       	ror	r31
    17a0:	e7 95       	ror	r30
    17a2:	9f 5f       	subi	r25, 0xFF	; 255
    17a4:	c1 f7       	brne	.-16     	; 0x1796 <__mulsf3_pse+0x8c>
    17a6:	fe 2b       	or	r31, r30
    17a8:	88 0f       	add	r24, r24
    17aa:	91 1d       	adc	r25, r1
    17ac:	96 95       	lsr	r25
    17ae:	87 95       	ror	r24
    17b0:	97 f9       	bld	r25, 7
    17b2:	08 95       	ret

000017b4 <sin>:
    17b4:	9f 93       	push	r25
    17b6:	5f d0       	rcall	.+190    	; 0x1876 <__fp_rempio2>
    17b8:	0f 90       	pop	r0
    17ba:	07 fc       	sbrc	r0, 7
    17bc:	ee 5f       	subi	r30, 0xFE	; 254
    17be:	82 c0       	rjmp	.+260    	; 0x18c4 <__fp_sinus>
    17c0:	11 f4       	brne	.+4      	; 0x17c6 <sin+0x12>
    17c2:	0e f4       	brtc	.+2      	; 0x17c6 <sin+0x12>
    17c4:	08 cf       	rjmp	.-496    	; 0x15d6 <__fp_nan>
    17c6:	41 c0       	rjmp	.+130    	; 0x184a <__fp_mpack>

000017c8 <sqrt>:
    17c8:	66 df       	rcall	.-308    	; 0x1696 <__fp_splitA>
    17ca:	d0 f3       	brcs	.-12     	; 0x17c0 <sin+0xc>
    17cc:	99 23       	and	r25, r25
    17ce:	d9 f3       	breq	.-10     	; 0x17c6 <sin+0x12>
    17d0:	ce f3       	brts	.-14     	; 0x17c4 <sin+0x10>
    17d2:	9f 57       	subi	r25, 0x7F	; 127
    17d4:	55 0b       	sbc	r21, r21
    17d6:	87 ff       	sbrs	r24, 7
    17d8:	46 d0       	rcall	.+140    	; 0x1866 <__fp_norm2>
    17da:	00 24       	eor	r0, r0
    17dc:	a0 e6       	ldi	r26, 0x60	; 96
    17de:	40 ea       	ldi	r20, 0xA0	; 160
    17e0:	90 01       	movw	r18, r0
    17e2:	80 58       	subi	r24, 0x80	; 128
    17e4:	56 95       	lsr	r21
    17e6:	97 95       	ror	r25
    17e8:	28 f4       	brcc	.+10     	; 0x17f4 <sqrt+0x2c>
    17ea:	80 5c       	subi	r24, 0xC0	; 192
    17ec:	66 0f       	add	r22, r22
    17ee:	77 1f       	adc	r23, r23
    17f0:	88 1f       	adc	r24, r24
    17f2:	20 f0       	brcs	.+8      	; 0x17fc <sqrt+0x34>
    17f4:	26 17       	cp	r18, r22
    17f6:	37 07       	cpc	r19, r23
    17f8:	48 07       	cpc	r20, r24
    17fa:	30 f4       	brcc	.+12     	; 0x1808 <sqrt+0x40>
    17fc:	62 1b       	sub	r22, r18
    17fe:	73 0b       	sbc	r23, r19
    1800:	84 0b       	sbc	r24, r20
    1802:	20 29       	or	r18, r0
    1804:	31 29       	or	r19, r1
    1806:	4a 2b       	or	r20, r26
    1808:	a6 95       	lsr	r26
    180a:	17 94       	ror	r1
    180c:	07 94       	ror	r0
    180e:	20 25       	eor	r18, r0
    1810:	31 25       	eor	r19, r1
    1812:	4a 27       	eor	r20, r26
    1814:	58 f7       	brcc	.-42     	; 0x17ec <sqrt+0x24>
    1816:	66 0f       	add	r22, r22
    1818:	77 1f       	adc	r23, r23
    181a:	88 1f       	adc	r24, r24
    181c:	20 f0       	brcs	.+8      	; 0x1826 <sqrt+0x5e>
    181e:	26 17       	cp	r18, r22
    1820:	37 07       	cpc	r19, r23
    1822:	48 07       	cpc	r20, r24
    1824:	30 f4       	brcc	.+12     	; 0x1832 <sqrt+0x6a>
    1826:	62 0b       	sbc	r22, r18
    1828:	73 0b       	sbc	r23, r19
    182a:	84 0b       	sbc	r24, r20
    182c:	20 0d       	add	r18, r0
    182e:	31 1d       	adc	r19, r1
    1830:	41 1d       	adc	r20, r1
    1832:	a0 95       	com	r26
    1834:	81 f7       	brne	.-32     	; 0x1816 <sqrt+0x4e>
    1836:	b9 01       	movw	r22, r18
    1838:	84 2f       	mov	r24, r20
    183a:	91 58       	subi	r25, 0x81	; 129
    183c:	88 0f       	add	r24, r24
    183e:	96 95       	lsr	r25
    1840:	87 95       	ror	r24
    1842:	08 95       	ret

00001844 <square>:
    1844:	9b 01       	movw	r18, r22
    1846:	ac 01       	movw	r20, r24
    1848:	52 cf       	rjmp	.-348    	; 0x16ee <__mulsf3>

0000184a <__fp_mpack>:
    184a:	9f 3f       	cpi	r25, 0xFF	; 255
    184c:	31 f0       	breq	.+12     	; 0x185a <__fp_mpack_finite+0xc>

0000184e <__fp_mpack_finite>:
    184e:	91 50       	subi	r25, 0x01	; 1
    1850:	20 f4       	brcc	.+8      	; 0x185a <__fp_mpack_finite+0xc>
    1852:	87 95       	ror	r24
    1854:	77 95       	ror	r23
    1856:	67 95       	ror	r22
    1858:	b7 95       	ror	r27
    185a:	88 0f       	add	r24, r24
    185c:	91 1d       	adc	r25, r1
    185e:	96 95       	lsr	r25
    1860:	87 95       	ror	r24
    1862:	97 f9       	bld	r25, 7
    1864:	08 95       	ret

00001866 <__fp_norm2>:
    1866:	91 50       	subi	r25, 0x01	; 1
    1868:	50 40       	sbci	r21, 0x00	; 0
    186a:	66 0f       	add	r22, r22
    186c:	77 1f       	adc	r23, r23
    186e:	88 1f       	adc	r24, r24
    1870:	d2 f7       	brpl	.-12     	; 0x1866 <__fp_norm2>
    1872:	08 95       	ret
    1874:	b0 ce       	rjmp	.-672    	; 0x15d6 <__fp_nan>

00001876 <__fp_rempio2>:
    1876:	0f df       	rcall	.-482    	; 0x1696 <__fp_splitA>
    1878:	e8 f3       	brcs	.-6      	; 0x1874 <__fp_norm2+0xe>
    187a:	e8 94       	clt
    187c:	e0 e0       	ldi	r30, 0x00	; 0
    187e:	bb 27       	eor	r27, r27
    1880:	9f 57       	subi	r25, 0x7F	; 127
    1882:	f0 f0       	brcs	.+60     	; 0x18c0 <__fp_rempio2+0x4a>
    1884:	2a ed       	ldi	r18, 0xDA	; 218
    1886:	3f e0       	ldi	r19, 0x0F	; 15
    1888:	49 ec       	ldi	r20, 0xC9	; 201
    188a:	06 c0       	rjmp	.+12     	; 0x1898 <__fp_rempio2+0x22>
    188c:	ee 0f       	add	r30, r30
    188e:	bb 0f       	add	r27, r27
    1890:	66 1f       	adc	r22, r22
    1892:	77 1f       	adc	r23, r23
    1894:	88 1f       	adc	r24, r24
    1896:	28 f0       	brcs	.+10     	; 0x18a2 <__fp_rempio2+0x2c>
    1898:	b2 3a       	cpi	r27, 0xA2	; 162
    189a:	62 07       	cpc	r22, r18
    189c:	73 07       	cpc	r23, r19
    189e:	84 07       	cpc	r24, r20
    18a0:	28 f0       	brcs	.+10     	; 0x18ac <__fp_rempio2+0x36>
    18a2:	b2 5a       	subi	r27, 0xA2	; 162
    18a4:	62 0b       	sbc	r22, r18
    18a6:	73 0b       	sbc	r23, r19
    18a8:	84 0b       	sbc	r24, r20
    18aa:	e3 95       	inc	r30
    18ac:	9a 95       	dec	r25
    18ae:	72 f7       	brpl	.-36     	; 0x188c <__fp_rempio2+0x16>
    18b0:	80 38       	cpi	r24, 0x80	; 128
    18b2:	30 f4       	brcc	.+12     	; 0x18c0 <__fp_rempio2+0x4a>
    18b4:	9a 95       	dec	r25
    18b6:	bb 0f       	add	r27, r27
    18b8:	66 1f       	adc	r22, r22
    18ba:	77 1f       	adc	r23, r23
    18bc:	88 1f       	adc	r24, r24
    18be:	d2 f7       	brpl	.-12     	; 0x18b4 <__fp_rempio2+0x3e>
    18c0:	90 48       	sbci	r25, 0x80	; 128
    18c2:	c5 cf       	rjmp	.-118    	; 0x184e <__fp_mpack_finite>

000018c4 <__fp_sinus>:
    18c4:	ef 93       	push	r30
    18c6:	e0 ff       	sbrs	r30, 0
    18c8:	06 c0       	rjmp	.+12     	; 0x18d6 <__fp_sinus+0x12>
    18ca:	a2 ea       	ldi	r26, 0xA2	; 162
    18cc:	2a ed       	ldi	r18, 0xDA	; 218
    18ce:	3f e0       	ldi	r19, 0x0F	; 15
    18d0:	49 ec       	ldi	r20, 0xC9	; 201
    18d2:	5f eb       	ldi	r21, 0xBF	; 191
    18d4:	95 dc       	rcall	.-1750   	; 0x1200 <__addsf3x>
    18d6:	c6 de       	rcall	.-628    	; 0x1664 <__fp_round>
    18d8:	0f 90       	pop	r0
    18da:	03 94       	inc	r0
    18dc:	01 fc       	sbrc	r0, 1
    18de:	90 58       	subi	r25, 0x80	; 128
    18e0:	ed e4       	ldi	r30, 0x4D	; 77
    18e2:	f1 e0       	ldi	r31, 0x01	; 1
    18e4:	a0 ce       	rjmp	.-704    	; 0x1626 <__fp_powsodd>

000018e6 <vfprintf>:
    18e6:	2f 92       	push	r2
    18e8:	3f 92       	push	r3
    18ea:	4f 92       	push	r4
    18ec:	5f 92       	push	r5
    18ee:	6f 92       	push	r6
    18f0:	7f 92       	push	r7
    18f2:	8f 92       	push	r8
    18f4:	9f 92       	push	r9
    18f6:	af 92       	push	r10
    18f8:	bf 92       	push	r11
    18fa:	cf 92       	push	r12
    18fc:	df 92       	push	r13
    18fe:	ef 92       	push	r14
    1900:	ff 92       	push	r15
    1902:	0f 93       	push	r16
    1904:	1f 93       	push	r17
    1906:	cf 93       	push	r28
    1908:	df 93       	push	r29
    190a:	cd b7       	in	r28, 0x3d	; 61
    190c:	de b7       	in	r29, 0x3e	; 62
    190e:	63 97       	sbiw	r28, 0x13	; 19
    1910:	0f b6       	in	r0, 0x3f	; 63
    1912:	f8 94       	cli
    1914:	de bf       	out	0x3e, r29	; 62
    1916:	0f be       	out	0x3f, r0	; 63
    1918:	cd bf       	out	0x3d, r28	; 61
    191a:	6c 01       	movw	r12, r24
    191c:	4b 01       	movw	r8, r22
    191e:	2a 01       	movw	r4, r20
    1920:	fc 01       	movw	r30, r24
    1922:	17 82       	std	Z+7, r1	; 0x07
    1924:	16 82       	std	Z+6, r1	; 0x06
    1926:	83 81       	ldd	r24, Z+3	; 0x03
    1928:	81 ff       	sbrs	r24, 1
    192a:	29 c3       	rjmp	.+1618   	; 0x1f7e <vfprintf+0x698>
    192c:	ae 01       	movw	r20, r28
    192e:	4f 5f       	subi	r20, 0xFF	; 255
    1930:	5f 4f       	sbci	r21, 0xFF	; 255
    1932:	3a 01       	movw	r6, r20
    1934:	f6 01       	movw	r30, r12
    1936:	93 81       	ldd	r25, Z+3	; 0x03
    1938:	f4 01       	movw	r30, r8
    193a:	93 fd       	sbrc	r25, 3
    193c:	85 91       	lpm	r24, Z+
    193e:	93 ff       	sbrs	r25, 3
    1940:	81 91       	ld	r24, Z+
    1942:	4f 01       	movw	r8, r30
    1944:	88 23       	and	r24, r24
    1946:	09 f4       	brne	.+2      	; 0x194a <vfprintf+0x64>
    1948:	16 c3       	rjmp	.+1580   	; 0x1f76 <vfprintf+0x690>
    194a:	85 32       	cpi	r24, 0x25	; 37
    194c:	39 f4       	brne	.+14     	; 0x195c <vfprintf+0x76>
    194e:	93 fd       	sbrc	r25, 3
    1950:	85 91       	lpm	r24, Z+
    1952:	93 ff       	sbrs	r25, 3
    1954:	81 91       	ld	r24, Z+
    1956:	4f 01       	movw	r8, r30
    1958:	85 32       	cpi	r24, 0x25	; 37
    195a:	31 f4       	brne	.+12     	; 0x1968 <vfprintf+0x82>
    195c:	b6 01       	movw	r22, r12
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	a9 d4       	rcall	.+2386   	; 0x22b4 <fputc>
    1962:	52 01       	movw	r10, r4
    1964:	25 01       	movw	r4, r10
    1966:	e6 cf       	rjmp	.-52     	; 0x1934 <vfprintf+0x4e>
    1968:	10 e0       	ldi	r17, 0x00	; 0
    196a:	f1 2c       	mov	r15, r1
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	20 32       	cpi	r18, 0x20	; 32
    1970:	a0 f4       	brcc	.+40     	; 0x199a <vfprintf+0xb4>
    1972:	8b 32       	cpi	r24, 0x2B	; 43
    1974:	69 f0       	breq	.+26     	; 0x1990 <vfprintf+0xaa>
    1976:	30 f4       	brcc	.+12     	; 0x1984 <vfprintf+0x9e>
    1978:	80 32       	cpi	r24, 0x20	; 32
    197a:	59 f0       	breq	.+22     	; 0x1992 <vfprintf+0xac>
    197c:	83 32       	cpi	r24, 0x23	; 35
    197e:	69 f4       	brne	.+26     	; 0x199a <vfprintf+0xb4>
    1980:	20 61       	ori	r18, 0x10	; 16
    1982:	2c c0       	rjmp	.+88     	; 0x19dc <vfprintf+0xf6>
    1984:	8d 32       	cpi	r24, 0x2D	; 45
    1986:	39 f0       	breq	.+14     	; 0x1996 <vfprintf+0xb0>
    1988:	80 33       	cpi	r24, 0x30	; 48
    198a:	39 f4       	brne	.+14     	; 0x199a <vfprintf+0xb4>
    198c:	21 60       	ori	r18, 0x01	; 1
    198e:	26 c0       	rjmp	.+76     	; 0x19dc <vfprintf+0xf6>
    1990:	22 60       	ori	r18, 0x02	; 2
    1992:	24 60       	ori	r18, 0x04	; 4
    1994:	23 c0       	rjmp	.+70     	; 0x19dc <vfprintf+0xf6>
    1996:	28 60       	ori	r18, 0x08	; 8
    1998:	21 c0       	rjmp	.+66     	; 0x19dc <vfprintf+0xf6>
    199a:	27 fd       	sbrc	r18, 7
    199c:	27 c0       	rjmp	.+78     	; 0x19ec <vfprintf+0x106>
    199e:	30 ed       	ldi	r19, 0xD0	; 208
    19a0:	38 0f       	add	r19, r24
    19a2:	3a 30       	cpi	r19, 0x0A	; 10
    19a4:	78 f4       	brcc	.+30     	; 0x19c4 <vfprintf+0xde>
    19a6:	26 ff       	sbrs	r18, 6
    19a8:	06 c0       	rjmp	.+12     	; 0x19b6 <vfprintf+0xd0>
    19aa:	fa e0       	ldi	r31, 0x0A	; 10
    19ac:	1f 9f       	mul	r17, r31
    19ae:	30 0d       	add	r19, r0
    19b0:	11 24       	eor	r1, r1
    19b2:	13 2f       	mov	r17, r19
    19b4:	13 c0       	rjmp	.+38     	; 0x19dc <vfprintf+0xf6>
    19b6:	4a e0       	ldi	r20, 0x0A	; 10
    19b8:	f4 9e       	mul	r15, r20
    19ba:	30 0d       	add	r19, r0
    19bc:	11 24       	eor	r1, r1
    19be:	f3 2e       	mov	r15, r19
    19c0:	20 62       	ori	r18, 0x20	; 32
    19c2:	0c c0       	rjmp	.+24     	; 0x19dc <vfprintf+0xf6>
    19c4:	8e 32       	cpi	r24, 0x2E	; 46
    19c6:	21 f4       	brne	.+8      	; 0x19d0 <vfprintf+0xea>
    19c8:	26 fd       	sbrc	r18, 6
    19ca:	d5 c2       	rjmp	.+1450   	; 0x1f76 <vfprintf+0x690>
    19cc:	20 64       	ori	r18, 0x40	; 64
    19ce:	06 c0       	rjmp	.+12     	; 0x19dc <vfprintf+0xf6>
    19d0:	8c 36       	cpi	r24, 0x6C	; 108
    19d2:	11 f4       	brne	.+4      	; 0x19d8 <vfprintf+0xf2>
    19d4:	20 68       	ori	r18, 0x80	; 128
    19d6:	02 c0       	rjmp	.+4      	; 0x19dc <vfprintf+0xf6>
    19d8:	88 36       	cpi	r24, 0x68	; 104
    19da:	41 f4       	brne	.+16     	; 0x19ec <vfprintf+0x106>
    19dc:	f4 01       	movw	r30, r8
    19de:	93 fd       	sbrc	r25, 3
    19e0:	85 91       	lpm	r24, Z+
    19e2:	93 ff       	sbrs	r25, 3
    19e4:	81 91       	ld	r24, Z+
    19e6:	4f 01       	movw	r8, r30
    19e8:	81 11       	cpse	r24, r1
    19ea:	c1 cf       	rjmp	.-126    	; 0x196e <vfprintf+0x88>
    19ec:	9b eb       	ldi	r25, 0xBB	; 187
    19ee:	98 0f       	add	r25, r24
    19f0:	93 30       	cpi	r25, 0x03	; 3
    19f2:	18 f4       	brcc	.+6      	; 0x19fa <vfprintf+0x114>
    19f4:	20 61       	ori	r18, 0x10	; 16
    19f6:	80 5e       	subi	r24, 0xE0	; 224
    19f8:	06 c0       	rjmp	.+12     	; 0x1a06 <vfprintf+0x120>
    19fa:	9b e9       	ldi	r25, 0x9B	; 155
    19fc:	98 0f       	add	r25, r24
    19fe:	93 30       	cpi	r25, 0x03	; 3
    1a00:	08 f0       	brcs	.+2      	; 0x1a04 <vfprintf+0x11e>
    1a02:	64 c1       	rjmp	.+712    	; 0x1ccc <vfprintf+0x3e6>
    1a04:	2f 7e       	andi	r18, 0xEF	; 239
    1a06:	26 ff       	sbrs	r18, 6
    1a08:	16 e0       	ldi	r17, 0x06	; 6
    1a0a:	2f 73       	andi	r18, 0x3F	; 63
    1a0c:	32 2e       	mov	r3, r18
    1a0e:	85 36       	cpi	r24, 0x65	; 101
    1a10:	19 f4       	brne	.+6      	; 0x1a18 <vfprintf+0x132>
    1a12:	20 64       	ori	r18, 0x40	; 64
    1a14:	32 2e       	mov	r3, r18
    1a16:	08 c0       	rjmp	.+16     	; 0x1a28 <vfprintf+0x142>
    1a18:	86 36       	cpi	r24, 0x66	; 102
    1a1a:	21 f4       	brne	.+8      	; 0x1a24 <vfprintf+0x13e>
    1a1c:	f2 2f       	mov	r31, r18
    1a1e:	f0 68       	ori	r31, 0x80	; 128
    1a20:	3f 2e       	mov	r3, r31
    1a22:	02 c0       	rjmp	.+4      	; 0x1a28 <vfprintf+0x142>
    1a24:	11 11       	cpse	r17, r1
    1a26:	11 50       	subi	r17, 0x01	; 1
    1a28:	37 fe       	sbrs	r3, 7
    1a2a:	07 c0       	rjmp	.+14     	; 0x1a3a <vfprintf+0x154>
    1a2c:	1c 33       	cpi	r17, 0x3C	; 60
    1a2e:	50 f4       	brcc	.+20     	; 0x1a44 <vfprintf+0x15e>
    1a30:	ee 24       	eor	r14, r14
    1a32:	e3 94       	inc	r14
    1a34:	e1 0e       	add	r14, r17
    1a36:	27 e0       	ldi	r18, 0x07	; 7
    1a38:	0b c0       	rjmp	.+22     	; 0x1a50 <vfprintf+0x16a>
    1a3a:	18 30       	cpi	r17, 0x08	; 8
    1a3c:	38 f0       	brcs	.+14     	; 0x1a4c <vfprintf+0x166>
    1a3e:	27 e0       	ldi	r18, 0x07	; 7
    1a40:	17 e0       	ldi	r17, 0x07	; 7
    1a42:	05 c0       	rjmp	.+10     	; 0x1a4e <vfprintf+0x168>
    1a44:	27 e0       	ldi	r18, 0x07	; 7
    1a46:	4c e3       	ldi	r20, 0x3C	; 60
    1a48:	e4 2e       	mov	r14, r20
    1a4a:	02 c0       	rjmp	.+4      	; 0x1a50 <vfprintf+0x16a>
    1a4c:	21 2f       	mov	r18, r17
    1a4e:	e1 2c       	mov	r14, r1
    1a50:	52 01       	movw	r10, r4
    1a52:	44 e0       	ldi	r20, 0x04	; 4
    1a54:	a4 0e       	add	r10, r20
    1a56:	b1 1c       	adc	r11, r1
    1a58:	f2 01       	movw	r30, r4
    1a5a:	60 81       	ld	r22, Z
    1a5c:	71 81       	ldd	r23, Z+1	; 0x01
    1a5e:	82 81       	ldd	r24, Z+2	; 0x02
    1a60:	93 81       	ldd	r25, Z+3	; 0x03
    1a62:	0e 2d       	mov	r16, r14
    1a64:	a3 01       	movw	r20, r6
    1a66:	ee d2       	rcall	.+1500   	; 0x2044 <__ftoa_engine>
    1a68:	2c 01       	movw	r4, r24
    1a6a:	09 81       	ldd	r16, Y+1	; 0x01
    1a6c:	00 ff       	sbrs	r16, 0
    1a6e:	02 c0       	rjmp	.+4      	; 0x1a74 <vfprintf+0x18e>
    1a70:	03 ff       	sbrs	r16, 3
    1a72:	07 c0       	rjmp	.+14     	; 0x1a82 <vfprintf+0x19c>
    1a74:	31 fc       	sbrc	r3, 1
    1a76:	08 c0       	rjmp	.+16     	; 0x1a88 <vfprintf+0x1a2>
    1a78:	32 fe       	sbrs	r3, 2
    1a7a:	09 c0       	rjmp	.+18     	; 0x1a8e <vfprintf+0x1a8>
    1a7c:	30 e2       	ldi	r19, 0x20	; 32
    1a7e:	23 2e       	mov	r2, r19
    1a80:	07 c0       	rjmp	.+14     	; 0x1a90 <vfprintf+0x1aa>
    1a82:	2d e2       	ldi	r18, 0x2D	; 45
    1a84:	22 2e       	mov	r2, r18
    1a86:	04 c0       	rjmp	.+8      	; 0x1a90 <vfprintf+0x1aa>
    1a88:	9b e2       	ldi	r25, 0x2B	; 43
    1a8a:	29 2e       	mov	r2, r25
    1a8c:	01 c0       	rjmp	.+2      	; 0x1a90 <vfprintf+0x1aa>
    1a8e:	21 2c       	mov	r2, r1
    1a90:	80 2f       	mov	r24, r16
    1a92:	8c 70       	andi	r24, 0x0C	; 12
    1a94:	19 f0       	breq	.+6      	; 0x1a9c <vfprintf+0x1b6>
    1a96:	21 10       	cpse	r2, r1
    1a98:	51 c2       	rjmp	.+1186   	; 0x1f3c <vfprintf+0x656>
    1a9a:	8d c2       	rjmp	.+1306   	; 0x1fb6 <vfprintf+0x6d0>
    1a9c:	37 fe       	sbrs	r3, 7
    1a9e:	0f c0       	rjmp	.+30     	; 0x1abe <vfprintf+0x1d8>
    1aa0:	e4 0c       	add	r14, r4
    1aa2:	04 ff       	sbrs	r16, 4
    1aa4:	04 c0       	rjmp	.+8      	; 0x1aae <vfprintf+0x1c8>
    1aa6:	8a 81       	ldd	r24, Y+2	; 0x02
    1aa8:	81 33       	cpi	r24, 0x31	; 49
    1aaa:	09 f4       	brne	.+2      	; 0x1aae <vfprintf+0x1c8>
    1aac:	ea 94       	dec	r14
    1aae:	1e 14       	cp	r1, r14
    1ab0:	74 f5       	brge	.+92     	; 0x1b0e <vfprintf+0x228>
    1ab2:	f8 e0       	ldi	r31, 0x08	; 8
    1ab4:	fe 15       	cp	r31, r14
    1ab6:	78 f5       	brcc	.+94     	; 0x1b16 <vfprintf+0x230>
    1ab8:	88 e0       	ldi	r24, 0x08	; 8
    1aba:	e8 2e       	mov	r14, r24
    1abc:	2c c0       	rjmp	.+88     	; 0x1b16 <vfprintf+0x230>
    1abe:	36 fc       	sbrc	r3, 6
    1ac0:	2a c0       	rjmp	.+84     	; 0x1b16 <vfprintf+0x230>
    1ac2:	81 2f       	mov	r24, r17
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	84 15       	cp	r24, r4
    1ac8:	95 05       	cpc	r25, r5
    1aca:	9c f0       	brlt	.+38     	; 0x1af2 <vfprintf+0x20c>
    1acc:	2c ef       	ldi	r18, 0xFC	; 252
    1ace:	42 16       	cp	r4, r18
    1ad0:	2f ef       	ldi	r18, 0xFF	; 255
    1ad2:	52 06       	cpc	r5, r18
    1ad4:	74 f0       	brlt	.+28     	; 0x1af2 <vfprintf+0x20c>
    1ad6:	43 2d       	mov	r20, r3
    1ad8:	40 68       	ori	r20, 0x80	; 128
    1ada:	34 2e       	mov	r3, r20
    1adc:	0a c0       	rjmp	.+20     	; 0x1af2 <vfprintf+0x20c>
    1ade:	e2 e0       	ldi	r30, 0x02	; 2
    1ae0:	f0 e0       	ldi	r31, 0x00	; 0
    1ae2:	ec 0f       	add	r30, r28
    1ae4:	fd 1f       	adc	r31, r29
    1ae6:	e1 0f       	add	r30, r17
    1ae8:	f1 1d       	adc	r31, r1
    1aea:	80 81       	ld	r24, Z
    1aec:	80 33       	cpi	r24, 0x30	; 48
    1aee:	19 f4       	brne	.+6      	; 0x1af6 <vfprintf+0x210>
    1af0:	11 50       	subi	r17, 0x01	; 1
    1af2:	11 11       	cpse	r17, r1
    1af4:	f4 cf       	rjmp	.-24     	; 0x1ade <vfprintf+0x1f8>
    1af6:	37 fe       	sbrs	r3, 7
    1af8:	0e c0       	rjmp	.+28     	; 0x1b16 <vfprintf+0x230>
    1afa:	ee 24       	eor	r14, r14
    1afc:	e3 94       	inc	r14
    1afe:	e1 0e       	add	r14, r17
    1b00:	81 2f       	mov	r24, r17
    1b02:	90 e0       	ldi	r25, 0x00	; 0
    1b04:	48 16       	cp	r4, r24
    1b06:	59 06       	cpc	r5, r25
    1b08:	2c f4       	brge	.+10     	; 0x1b14 <vfprintf+0x22e>
    1b0a:	14 19       	sub	r17, r4
    1b0c:	04 c0       	rjmp	.+8      	; 0x1b16 <vfprintf+0x230>
    1b0e:	ee 24       	eor	r14, r14
    1b10:	e3 94       	inc	r14
    1b12:	01 c0       	rjmp	.+2      	; 0x1b16 <vfprintf+0x230>
    1b14:	10 e0       	ldi	r17, 0x00	; 0
    1b16:	37 fe       	sbrs	r3, 7
    1b18:	06 c0       	rjmp	.+12     	; 0x1b26 <vfprintf+0x240>
    1b1a:	14 14       	cp	r1, r4
    1b1c:	15 04       	cpc	r1, r5
    1b1e:	34 f4       	brge	.+12     	; 0x1b2c <vfprintf+0x246>
    1b20:	c2 01       	movw	r24, r4
    1b22:	01 96       	adiw	r24, 0x01	; 1
    1b24:	05 c0       	rjmp	.+10     	; 0x1b30 <vfprintf+0x24a>
    1b26:	85 e0       	ldi	r24, 0x05	; 5
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	02 c0       	rjmp	.+4      	; 0x1b30 <vfprintf+0x24a>
    1b2c:	81 e0       	ldi	r24, 0x01	; 1
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	21 10       	cpse	r2, r1
    1b32:	01 96       	adiw	r24, 0x01	; 1
    1b34:	11 23       	and	r17, r17
    1b36:	31 f0       	breq	.+12     	; 0x1b44 <vfprintf+0x25e>
    1b38:	21 2f       	mov	r18, r17
    1b3a:	30 e0       	ldi	r19, 0x00	; 0
    1b3c:	2f 5f       	subi	r18, 0xFF	; 255
    1b3e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b40:	82 0f       	add	r24, r18
    1b42:	93 1f       	adc	r25, r19
    1b44:	2f 2d       	mov	r18, r15
    1b46:	30 e0       	ldi	r19, 0x00	; 0
    1b48:	82 17       	cp	r24, r18
    1b4a:	93 07       	cpc	r25, r19
    1b4c:	14 f4       	brge	.+4      	; 0x1b52 <vfprintf+0x26c>
    1b4e:	f8 1a       	sub	r15, r24
    1b50:	01 c0       	rjmp	.+2      	; 0x1b54 <vfprintf+0x26e>
    1b52:	f1 2c       	mov	r15, r1
    1b54:	83 2d       	mov	r24, r3
    1b56:	89 70       	andi	r24, 0x09	; 9
    1b58:	41 f4       	brne	.+16     	; 0x1b6a <vfprintf+0x284>
    1b5a:	ff 20       	and	r15, r15
    1b5c:	31 f0       	breq	.+12     	; 0x1b6a <vfprintf+0x284>
    1b5e:	b6 01       	movw	r22, r12
    1b60:	80 e2       	ldi	r24, 0x20	; 32
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	a7 d3       	rcall	.+1870   	; 0x22b4 <fputc>
    1b66:	fa 94       	dec	r15
    1b68:	f8 cf       	rjmp	.-16     	; 0x1b5a <vfprintf+0x274>
    1b6a:	22 20       	and	r2, r2
    1b6c:	21 f0       	breq	.+8      	; 0x1b76 <vfprintf+0x290>
    1b6e:	b6 01       	movw	r22, r12
    1b70:	82 2d       	mov	r24, r2
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	9f d3       	rcall	.+1854   	; 0x22b4 <fputc>
    1b76:	33 fc       	sbrc	r3, 3
    1b78:	08 c0       	rjmp	.+16     	; 0x1b8a <vfprintf+0x2a4>
    1b7a:	ff 20       	and	r15, r15
    1b7c:	31 f0       	breq	.+12     	; 0x1b8a <vfprintf+0x2a4>
    1b7e:	b6 01       	movw	r22, r12
    1b80:	80 e3       	ldi	r24, 0x30	; 48
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	97 d3       	rcall	.+1838   	; 0x22b4 <fputc>
    1b86:	fa 94       	dec	r15
    1b88:	f8 cf       	rjmp	.-16     	; 0x1b7a <vfprintf+0x294>
    1b8a:	37 fe       	sbrs	r3, 7
    1b8c:	58 c0       	rjmp	.+176    	; 0x1c3e <vfprintf+0x358>
    1b8e:	94 2d       	mov	r25, r4
    1b90:	85 2d       	mov	r24, r5
    1b92:	57 fe       	sbrs	r5, 7
    1b94:	02 c0       	rjmp	.+4      	; 0x1b9a <vfprintf+0x2b4>
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	80 e0       	ldi	r24, 0x00	; 0
    1b9a:	29 2e       	mov	r2, r25
    1b9c:	38 2e       	mov	r3, r24
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	a2 01       	movw	r20, r4
    1ba4:	4e 19       	sub	r20, r14
    1ba6:	51 09       	sbc	r21, r1
    1ba8:	5d 87       	std	Y+13, r21	; 0x0d
    1baa:	4c 87       	std	Y+12, r20	; 0x0c
    1bac:	a2 01       	movw	r20, r4
    1bae:	42 19       	sub	r20, r2
    1bb0:	53 09       	sbc	r21, r3
    1bb2:	5f 87       	std	Y+15, r21	; 0x0f
    1bb4:	4e 87       	std	Y+14, r20	; 0x0e
    1bb6:	61 2f       	mov	r22, r17
    1bb8:	70 e0       	ldi	r23, 0x00	; 0
    1bba:	44 27       	eor	r20, r20
    1bbc:	55 27       	eor	r21, r21
    1bbe:	46 1b       	sub	r20, r22
    1bc0:	57 0b       	sbc	r21, r23
    1bc2:	59 8b       	std	Y+17, r21	; 0x11
    1bc4:	48 8b       	std	Y+16, r20	; 0x10
    1bc6:	5f ef       	ldi	r21, 0xFF	; 255
    1bc8:	25 16       	cp	r2, r21
    1bca:	35 06       	cpc	r3, r21
    1bcc:	41 f4       	brne	.+16     	; 0x1bde <vfprintf+0x2f8>
    1bce:	b6 01       	movw	r22, r12
    1bd0:	8e e2       	ldi	r24, 0x2E	; 46
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	2a 8b       	std	Y+18, r18	; 0x12
    1bd6:	3b 8b       	std	Y+19, r19	; 0x13
    1bd8:	6d d3       	rcall	.+1754   	; 0x22b4 <fputc>
    1bda:	3b 89       	ldd	r19, Y+19	; 0x13
    1bdc:	2a 89       	ldd	r18, Y+18	; 0x12
    1bde:	42 14       	cp	r4, r2
    1be0:	53 04       	cpc	r5, r3
    1be2:	6c f0       	brlt	.+26     	; 0x1bfe <vfprintf+0x318>
    1be4:	4c 85       	ldd	r20, Y+12	; 0x0c
    1be6:	5d 85       	ldd	r21, Y+13	; 0x0d
    1be8:	42 15       	cp	r20, r2
    1bea:	53 05       	cpc	r21, r3
    1bec:	44 f4       	brge	.+16     	; 0x1bfe <vfprintf+0x318>
    1bee:	ee 85       	ldd	r30, Y+14	; 0x0e
    1bf0:	ff 85       	ldd	r31, Y+15	; 0x0f
    1bf2:	e2 0f       	add	r30, r18
    1bf4:	f3 1f       	adc	r31, r19
    1bf6:	e6 0d       	add	r30, r6
    1bf8:	f7 1d       	adc	r31, r7
    1bfa:	81 81       	ldd	r24, Z+1	; 0x01
    1bfc:	01 c0       	rjmp	.+2      	; 0x1c00 <vfprintf+0x31a>
    1bfe:	80 e3       	ldi	r24, 0x30	; 48
    1c00:	51 e0       	ldi	r21, 0x01	; 1
    1c02:	25 1a       	sub	r2, r21
    1c04:	31 08       	sbc	r3, r1
    1c06:	2f 5f       	subi	r18, 0xFF	; 255
    1c08:	3f 4f       	sbci	r19, 0xFF	; 255
    1c0a:	48 89       	ldd	r20, Y+16	; 0x10
    1c0c:	59 89       	ldd	r21, Y+17	; 0x11
    1c0e:	24 16       	cp	r2, r20
    1c10:	35 06       	cpc	r3, r21
    1c12:	44 f0       	brlt	.+16     	; 0x1c24 <vfprintf+0x33e>
    1c14:	b6 01       	movw	r22, r12
    1c16:	90 e0       	ldi	r25, 0x00	; 0
    1c18:	2a 8b       	std	Y+18, r18	; 0x12
    1c1a:	3b 8b       	std	Y+19, r19	; 0x13
    1c1c:	4b d3       	rcall	.+1686   	; 0x22b4 <fputc>
    1c1e:	2a 89       	ldd	r18, Y+18	; 0x12
    1c20:	3b 89       	ldd	r19, Y+19	; 0x13
    1c22:	d1 cf       	rjmp	.-94     	; 0x1bc6 <vfprintf+0x2e0>
    1c24:	24 14       	cp	r2, r4
    1c26:	35 04       	cpc	r3, r5
    1c28:	39 f4       	brne	.+14     	; 0x1c38 <vfprintf+0x352>
    1c2a:	9a 81       	ldd	r25, Y+2	; 0x02
    1c2c:	96 33       	cpi	r25, 0x36	; 54
    1c2e:	18 f4       	brcc	.+6      	; 0x1c36 <vfprintf+0x350>
    1c30:	95 33       	cpi	r25, 0x35	; 53
    1c32:	11 f4       	brne	.+4      	; 0x1c38 <vfprintf+0x352>
    1c34:	04 ff       	sbrs	r16, 4
    1c36:	81 e3       	ldi	r24, 0x31	; 49
    1c38:	b6 01       	movw	r22, r12
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	45 c0       	rjmp	.+138    	; 0x1cc8 <vfprintf+0x3e2>
    1c3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c40:	81 33       	cpi	r24, 0x31	; 49
    1c42:	09 f0       	breq	.+2      	; 0x1c46 <vfprintf+0x360>
    1c44:	0f 7e       	andi	r16, 0xEF	; 239
    1c46:	b6 01       	movw	r22, r12
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	34 d3       	rcall	.+1640   	; 0x22b4 <fputc>
    1c4c:	11 11       	cpse	r17, r1
    1c4e:	05 c0       	rjmp	.+10     	; 0x1c5a <vfprintf+0x374>
    1c50:	34 fc       	sbrc	r3, 4
    1c52:	16 c0       	rjmp	.+44     	; 0x1c80 <vfprintf+0x39a>
    1c54:	85 e6       	ldi	r24, 0x65	; 101
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	15 c0       	rjmp	.+42     	; 0x1c84 <vfprintf+0x39e>
    1c5a:	b6 01       	movw	r22, r12
    1c5c:	8e e2       	ldi	r24, 0x2E	; 46
    1c5e:	90 e0       	ldi	r25, 0x00	; 0
    1c60:	29 d3       	rcall	.+1618   	; 0x22b4 <fputc>
    1c62:	82 e0       	ldi	r24, 0x02	; 2
    1c64:	ee 24       	eor	r14, r14
    1c66:	e3 94       	inc	r14
    1c68:	e8 0e       	add	r14, r24
    1c6a:	f3 01       	movw	r30, r6
    1c6c:	e8 0f       	add	r30, r24
    1c6e:	f1 1d       	adc	r31, r1
    1c70:	80 81       	ld	r24, Z
    1c72:	b6 01       	movw	r22, r12
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	1e d3       	rcall	.+1596   	; 0x22b4 <fputc>
    1c78:	11 50       	subi	r17, 0x01	; 1
    1c7a:	8e 2d       	mov	r24, r14
    1c7c:	99 f7       	brne	.-26     	; 0x1c64 <vfprintf+0x37e>
    1c7e:	e8 cf       	rjmp	.-48     	; 0x1c50 <vfprintf+0x36a>
    1c80:	85 e4       	ldi	r24, 0x45	; 69
    1c82:	90 e0       	ldi	r25, 0x00	; 0
    1c84:	b6 01       	movw	r22, r12
    1c86:	16 d3       	rcall	.+1580   	; 0x22b4 <fputc>
    1c88:	57 fc       	sbrc	r5, 7
    1c8a:	05 c0       	rjmp	.+10     	; 0x1c96 <vfprintf+0x3b0>
    1c8c:	41 14       	cp	r4, r1
    1c8e:	51 04       	cpc	r5, r1
    1c90:	39 f4       	brne	.+14     	; 0x1ca0 <vfprintf+0x3ba>
    1c92:	04 ff       	sbrs	r16, 4
    1c94:	05 c0       	rjmp	.+10     	; 0x1ca0 <vfprintf+0x3ba>
    1c96:	51 94       	neg	r5
    1c98:	41 94       	neg	r4
    1c9a:	51 08       	sbc	r5, r1
    1c9c:	8d e2       	ldi	r24, 0x2D	; 45
    1c9e:	01 c0       	rjmp	.+2      	; 0x1ca2 <vfprintf+0x3bc>
    1ca0:	8b e2       	ldi	r24, 0x2B	; 43
    1ca2:	b6 01       	movw	r22, r12
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	06 d3       	rcall	.+1548   	; 0x22b4 <fputc>
    1ca8:	80 e3       	ldi	r24, 0x30	; 48
    1caa:	9a e0       	ldi	r25, 0x0A	; 10
    1cac:	49 16       	cp	r4, r25
    1cae:	51 04       	cpc	r5, r1
    1cb0:	2c f0       	brlt	.+10     	; 0x1cbc <vfprintf+0x3d6>
    1cb2:	8f 5f       	subi	r24, 0xFF	; 255
    1cb4:	5a e0       	ldi	r21, 0x0A	; 10
    1cb6:	45 1a       	sub	r4, r21
    1cb8:	51 08       	sbc	r5, r1
    1cba:	f7 cf       	rjmp	.-18     	; 0x1caa <vfprintf+0x3c4>
    1cbc:	b6 01       	movw	r22, r12
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	f9 d2       	rcall	.+1522   	; 0x22b4 <fputc>
    1cc2:	b6 01       	movw	r22, r12
    1cc4:	c2 01       	movw	r24, r4
    1cc6:	c0 96       	adiw	r24, 0x30	; 48
    1cc8:	f5 d2       	rcall	.+1514   	; 0x22b4 <fputc>
    1cca:	4c c1       	rjmp	.+664    	; 0x1f64 <vfprintf+0x67e>
    1ccc:	83 36       	cpi	r24, 0x63	; 99
    1cce:	31 f0       	breq	.+12     	; 0x1cdc <vfprintf+0x3f6>
    1cd0:	83 37       	cpi	r24, 0x73	; 115
    1cd2:	79 f0       	breq	.+30     	; 0x1cf2 <vfprintf+0x40c>
    1cd4:	83 35       	cpi	r24, 0x53	; 83
    1cd6:	09 f0       	breq	.+2      	; 0x1cda <vfprintf+0x3f4>
    1cd8:	54 c0       	rjmp	.+168    	; 0x1d82 <vfprintf+0x49c>
    1cda:	20 c0       	rjmp	.+64     	; 0x1d1c <vfprintf+0x436>
    1cdc:	52 01       	movw	r10, r4
    1cde:	e2 e0       	ldi	r30, 0x02	; 2
    1ce0:	ae 0e       	add	r10, r30
    1ce2:	b1 1c       	adc	r11, r1
    1ce4:	f2 01       	movw	r30, r4
    1ce6:	80 81       	ld	r24, Z
    1ce8:	89 83       	std	Y+1, r24	; 0x01
    1cea:	01 e0       	ldi	r16, 0x01	; 1
    1cec:	10 e0       	ldi	r17, 0x00	; 0
    1cee:	23 01       	movw	r4, r6
    1cf0:	13 c0       	rjmp	.+38     	; 0x1d18 <vfprintf+0x432>
    1cf2:	52 01       	movw	r10, r4
    1cf4:	f2 e0       	ldi	r31, 0x02	; 2
    1cf6:	af 0e       	add	r10, r31
    1cf8:	b1 1c       	adc	r11, r1
    1cfa:	f2 01       	movw	r30, r4
    1cfc:	40 80       	ld	r4, Z
    1cfe:	51 80       	ldd	r5, Z+1	; 0x01
    1d00:	26 ff       	sbrs	r18, 6
    1d02:	03 c0       	rjmp	.+6      	; 0x1d0a <vfprintf+0x424>
    1d04:	61 2f       	mov	r22, r17
    1d06:	70 e0       	ldi	r23, 0x00	; 0
    1d08:	02 c0       	rjmp	.+4      	; 0x1d0e <vfprintf+0x428>
    1d0a:	6f ef       	ldi	r22, 0xFF	; 255
    1d0c:	7f ef       	ldi	r23, 0xFF	; 255
    1d0e:	c2 01       	movw	r24, r4
    1d10:	2a 8b       	std	Y+18, r18	; 0x12
    1d12:	7b d2       	rcall	.+1270   	; 0x220a <strnlen>
    1d14:	8c 01       	movw	r16, r24
    1d16:	2a 89       	ldd	r18, Y+18	; 0x12
    1d18:	2f 77       	andi	r18, 0x7F	; 127
    1d1a:	14 c0       	rjmp	.+40     	; 0x1d44 <vfprintf+0x45e>
    1d1c:	52 01       	movw	r10, r4
    1d1e:	f2 e0       	ldi	r31, 0x02	; 2
    1d20:	af 0e       	add	r10, r31
    1d22:	b1 1c       	adc	r11, r1
    1d24:	f2 01       	movw	r30, r4
    1d26:	40 80       	ld	r4, Z
    1d28:	51 80       	ldd	r5, Z+1	; 0x01
    1d2a:	26 ff       	sbrs	r18, 6
    1d2c:	03 c0       	rjmp	.+6      	; 0x1d34 <vfprintf+0x44e>
    1d2e:	61 2f       	mov	r22, r17
    1d30:	70 e0       	ldi	r23, 0x00	; 0
    1d32:	02 c0       	rjmp	.+4      	; 0x1d38 <vfprintf+0x452>
    1d34:	6f ef       	ldi	r22, 0xFF	; 255
    1d36:	7f ef       	ldi	r23, 0xFF	; 255
    1d38:	c2 01       	movw	r24, r4
    1d3a:	2a 8b       	std	Y+18, r18	; 0x12
    1d3c:	5b d2       	rcall	.+1206   	; 0x21f4 <strnlen_P>
    1d3e:	8c 01       	movw	r16, r24
    1d40:	2a 89       	ldd	r18, Y+18	; 0x12
    1d42:	20 68       	ori	r18, 0x80	; 128
    1d44:	32 2e       	mov	r3, r18
    1d46:	23 fd       	sbrc	r18, 3
    1d48:	18 c0       	rjmp	.+48     	; 0x1d7a <vfprintf+0x494>
    1d4a:	8f 2d       	mov	r24, r15
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	08 17       	cp	r16, r24
    1d50:	19 07       	cpc	r17, r25
    1d52:	98 f4       	brcc	.+38     	; 0x1d7a <vfprintf+0x494>
    1d54:	b6 01       	movw	r22, r12
    1d56:	80 e2       	ldi	r24, 0x20	; 32
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	ac d2       	rcall	.+1368   	; 0x22b4 <fputc>
    1d5c:	fa 94       	dec	r15
    1d5e:	f5 cf       	rjmp	.-22     	; 0x1d4a <vfprintf+0x464>
    1d60:	f2 01       	movw	r30, r4
    1d62:	37 fc       	sbrc	r3, 7
    1d64:	85 91       	lpm	r24, Z+
    1d66:	37 fe       	sbrs	r3, 7
    1d68:	81 91       	ld	r24, Z+
    1d6a:	2f 01       	movw	r4, r30
    1d6c:	b6 01       	movw	r22, r12
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	a1 d2       	rcall	.+1346   	; 0x22b4 <fputc>
    1d72:	f1 10       	cpse	r15, r1
    1d74:	fa 94       	dec	r15
    1d76:	01 50       	subi	r16, 0x01	; 1
    1d78:	11 09       	sbc	r17, r1
    1d7a:	01 15       	cp	r16, r1
    1d7c:	11 05       	cpc	r17, r1
    1d7e:	81 f7       	brne	.-32     	; 0x1d60 <vfprintf+0x47a>
    1d80:	f1 c0       	rjmp	.+482    	; 0x1f64 <vfprintf+0x67e>
    1d82:	84 36       	cpi	r24, 0x64	; 100
    1d84:	11 f0       	breq	.+4      	; 0x1d8a <vfprintf+0x4a4>
    1d86:	89 36       	cpi	r24, 0x69	; 105
    1d88:	51 f5       	brne	.+84     	; 0x1dde <vfprintf+0x4f8>
    1d8a:	52 01       	movw	r10, r4
    1d8c:	27 ff       	sbrs	r18, 7
    1d8e:	09 c0       	rjmp	.+18     	; 0x1da2 <vfprintf+0x4bc>
    1d90:	f4 e0       	ldi	r31, 0x04	; 4
    1d92:	af 0e       	add	r10, r31
    1d94:	b1 1c       	adc	r11, r1
    1d96:	f2 01       	movw	r30, r4
    1d98:	60 81       	ld	r22, Z
    1d9a:	71 81       	ldd	r23, Z+1	; 0x01
    1d9c:	82 81       	ldd	r24, Z+2	; 0x02
    1d9e:	93 81       	ldd	r25, Z+3	; 0x03
    1da0:	0a c0       	rjmp	.+20     	; 0x1db6 <vfprintf+0x4d0>
    1da2:	f2 e0       	ldi	r31, 0x02	; 2
    1da4:	af 0e       	add	r10, r31
    1da6:	b1 1c       	adc	r11, r1
    1da8:	f2 01       	movw	r30, r4
    1daa:	60 81       	ld	r22, Z
    1dac:	71 81       	ldd	r23, Z+1	; 0x01
    1dae:	07 2e       	mov	r0, r23
    1db0:	00 0c       	add	r0, r0
    1db2:	88 0b       	sbc	r24, r24
    1db4:	99 0b       	sbc	r25, r25
    1db6:	2f 76       	andi	r18, 0x6F	; 111
    1db8:	32 2e       	mov	r3, r18
    1dba:	97 ff       	sbrs	r25, 7
    1dbc:	09 c0       	rjmp	.+18     	; 0x1dd0 <vfprintf+0x4ea>
    1dbe:	90 95       	com	r25
    1dc0:	80 95       	com	r24
    1dc2:	70 95       	com	r23
    1dc4:	61 95       	neg	r22
    1dc6:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc8:	8f 4f       	sbci	r24, 0xFF	; 255
    1dca:	9f 4f       	sbci	r25, 0xFF	; 255
    1dcc:	20 68       	ori	r18, 0x80	; 128
    1dce:	32 2e       	mov	r3, r18
    1dd0:	2a e0       	ldi	r18, 0x0A	; 10
    1dd2:	30 e0       	ldi	r19, 0x00	; 0
    1dd4:	a3 01       	movw	r20, r6
    1dd6:	ed d2       	rcall	.+1498   	; 0x23b2 <__ultoa_invert>
    1dd8:	e8 2e       	mov	r14, r24
    1dda:	e6 18       	sub	r14, r6
    1ddc:	3e c0       	rjmp	.+124    	; 0x1e5a <vfprintf+0x574>
    1dde:	02 2f       	mov	r16, r18
    1de0:	85 37       	cpi	r24, 0x75	; 117
    1de2:	21 f4       	brne	.+8      	; 0x1dec <vfprintf+0x506>
    1de4:	0f 7e       	andi	r16, 0xEF	; 239
    1de6:	2a e0       	ldi	r18, 0x0A	; 10
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	1d c0       	rjmp	.+58     	; 0x1e26 <vfprintf+0x540>
    1dec:	09 7f       	andi	r16, 0xF9	; 249
    1dee:	8f 36       	cpi	r24, 0x6F	; 111
    1df0:	91 f0       	breq	.+36     	; 0x1e16 <vfprintf+0x530>
    1df2:	18 f4       	brcc	.+6      	; 0x1dfa <vfprintf+0x514>
    1df4:	88 35       	cpi	r24, 0x58	; 88
    1df6:	59 f0       	breq	.+22     	; 0x1e0e <vfprintf+0x528>
    1df8:	be c0       	rjmp	.+380    	; 0x1f76 <vfprintf+0x690>
    1dfa:	80 37       	cpi	r24, 0x70	; 112
    1dfc:	19 f0       	breq	.+6      	; 0x1e04 <vfprintf+0x51e>
    1dfe:	88 37       	cpi	r24, 0x78	; 120
    1e00:	11 f0       	breq	.+4      	; 0x1e06 <vfprintf+0x520>
    1e02:	b9 c0       	rjmp	.+370    	; 0x1f76 <vfprintf+0x690>
    1e04:	00 61       	ori	r16, 0x10	; 16
    1e06:	04 ff       	sbrs	r16, 4
    1e08:	09 c0       	rjmp	.+18     	; 0x1e1c <vfprintf+0x536>
    1e0a:	04 60       	ori	r16, 0x04	; 4
    1e0c:	07 c0       	rjmp	.+14     	; 0x1e1c <vfprintf+0x536>
    1e0e:	24 ff       	sbrs	r18, 4
    1e10:	08 c0       	rjmp	.+16     	; 0x1e22 <vfprintf+0x53c>
    1e12:	06 60       	ori	r16, 0x06	; 6
    1e14:	06 c0       	rjmp	.+12     	; 0x1e22 <vfprintf+0x53c>
    1e16:	28 e0       	ldi	r18, 0x08	; 8
    1e18:	30 e0       	ldi	r19, 0x00	; 0
    1e1a:	05 c0       	rjmp	.+10     	; 0x1e26 <vfprintf+0x540>
    1e1c:	20 e1       	ldi	r18, 0x10	; 16
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	02 c0       	rjmp	.+4      	; 0x1e26 <vfprintf+0x540>
    1e22:	20 e1       	ldi	r18, 0x10	; 16
    1e24:	32 e0       	ldi	r19, 0x02	; 2
    1e26:	52 01       	movw	r10, r4
    1e28:	07 ff       	sbrs	r16, 7
    1e2a:	09 c0       	rjmp	.+18     	; 0x1e3e <vfprintf+0x558>
    1e2c:	f4 e0       	ldi	r31, 0x04	; 4
    1e2e:	af 0e       	add	r10, r31
    1e30:	b1 1c       	adc	r11, r1
    1e32:	f2 01       	movw	r30, r4
    1e34:	60 81       	ld	r22, Z
    1e36:	71 81       	ldd	r23, Z+1	; 0x01
    1e38:	82 81       	ldd	r24, Z+2	; 0x02
    1e3a:	93 81       	ldd	r25, Z+3	; 0x03
    1e3c:	08 c0       	rjmp	.+16     	; 0x1e4e <vfprintf+0x568>
    1e3e:	f2 e0       	ldi	r31, 0x02	; 2
    1e40:	af 0e       	add	r10, r31
    1e42:	b1 1c       	adc	r11, r1
    1e44:	f2 01       	movw	r30, r4
    1e46:	60 81       	ld	r22, Z
    1e48:	71 81       	ldd	r23, Z+1	; 0x01
    1e4a:	80 e0       	ldi	r24, 0x00	; 0
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	a3 01       	movw	r20, r6
    1e50:	b0 d2       	rcall	.+1376   	; 0x23b2 <__ultoa_invert>
    1e52:	e8 2e       	mov	r14, r24
    1e54:	e6 18       	sub	r14, r6
    1e56:	0f 77       	andi	r16, 0x7F	; 127
    1e58:	30 2e       	mov	r3, r16
    1e5a:	36 fe       	sbrs	r3, 6
    1e5c:	0b c0       	rjmp	.+22     	; 0x1e74 <vfprintf+0x58e>
    1e5e:	33 2d       	mov	r19, r3
    1e60:	3e 7f       	andi	r19, 0xFE	; 254
    1e62:	e1 16       	cp	r14, r17
    1e64:	50 f4       	brcc	.+20     	; 0x1e7a <vfprintf+0x594>
    1e66:	34 fe       	sbrs	r3, 4
    1e68:	0a c0       	rjmp	.+20     	; 0x1e7e <vfprintf+0x598>
    1e6a:	32 fc       	sbrc	r3, 2
    1e6c:	08 c0       	rjmp	.+16     	; 0x1e7e <vfprintf+0x598>
    1e6e:	33 2d       	mov	r19, r3
    1e70:	3e 7e       	andi	r19, 0xEE	; 238
    1e72:	05 c0       	rjmp	.+10     	; 0x1e7e <vfprintf+0x598>
    1e74:	0e 2d       	mov	r16, r14
    1e76:	33 2d       	mov	r19, r3
    1e78:	03 c0       	rjmp	.+6      	; 0x1e80 <vfprintf+0x59a>
    1e7a:	0e 2d       	mov	r16, r14
    1e7c:	01 c0       	rjmp	.+2      	; 0x1e80 <vfprintf+0x59a>
    1e7e:	01 2f       	mov	r16, r17
    1e80:	34 ff       	sbrs	r19, 4
    1e82:	0c c0       	rjmp	.+24     	; 0x1e9c <vfprintf+0x5b6>
    1e84:	fe 01       	movw	r30, r28
    1e86:	ee 0d       	add	r30, r14
    1e88:	f1 1d       	adc	r31, r1
    1e8a:	80 81       	ld	r24, Z
    1e8c:	80 33       	cpi	r24, 0x30	; 48
    1e8e:	11 f4       	brne	.+4      	; 0x1e94 <vfprintf+0x5ae>
    1e90:	39 7e       	andi	r19, 0xE9	; 233
    1e92:	08 c0       	rjmp	.+16     	; 0x1ea4 <vfprintf+0x5be>
    1e94:	32 ff       	sbrs	r19, 2
    1e96:	05 c0       	rjmp	.+10     	; 0x1ea2 <vfprintf+0x5bc>
    1e98:	0e 5f       	subi	r16, 0xFE	; 254
    1e9a:	04 c0       	rjmp	.+8      	; 0x1ea4 <vfprintf+0x5be>
    1e9c:	83 2f       	mov	r24, r19
    1e9e:	86 78       	andi	r24, 0x86	; 134
    1ea0:	09 f0       	breq	.+2      	; 0x1ea4 <vfprintf+0x5be>
    1ea2:	0f 5f       	subi	r16, 0xFF	; 255
    1ea4:	33 fd       	sbrc	r19, 3
    1ea6:	12 c0       	rjmp	.+36     	; 0x1ecc <vfprintf+0x5e6>
    1ea8:	30 ff       	sbrs	r19, 0
    1eaa:	06 c0       	rjmp	.+12     	; 0x1eb8 <vfprintf+0x5d2>
    1eac:	1e 2d       	mov	r17, r14
    1eae:	0f 15       	cp	r16, r15
    1eb0:	18 f4       	brcc	.+6      	; 0x1eb8 <vfprintf+0x5d2>
    1eb2:	1f 0d       	add	r17, r15
    1eb4:	10 1b       	sub	r17, r16
    1eb6:	0f 2d       	mov	r16, r15
    1eb8:	0f 15       	cp	r16, r15
    1eba:	60 f4       	brcc	.+24     	; 0x1ed4 <vfprintf+0x5ee>
    1ebc:	b6 01       	movw	r22, r12
    1ebe:	80 e2       	ldi	r24, 0x20	; 32
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	3b 8b       	std	Y+19, r19	; 0x13
    1ec4:	f7 d1       	rcall	.+1006   	; 0x22b4 <fputc>
    1ec6:	0f 5f       	subi	r16, 0xFF	; 255
    1ec8:	3b 89       	ldd	r19, Y+19	; 0x13
    1eca:	f6 cf       	rjmp	.-20     	; 0x1eb8 <vfprintf+0x5d2>
    1ecc:	0f 15       	cp	r16, r15
    1ece:	10 f4       	brcc	.+4      	; 0x1ed4 <vfprintf+0x5ee>
    1ed0:	f0 1a       	sub	r15, r16
    1ed2:	01 c0       	rjmp	.+2      	; 0x1ed6 <vfprintf+0x5f0>
    1ed4:	f1 2c       	mov	r15, r1
    1ed6:	34 ff       	sbrs	r19, 4
    1ed8:	11 c0       	rjmp	.+34     	; 0x1efc <vfprintf+0x616>
    1eda:	b6 01       	movw	r22, r12
    1edc:	80 e3       	ldi	r24, 0x30	; 48
    1ede:	90 e0       	ldi	r25, 0x00	; 0
    1ee0:	3b 8b       	std	Y+19, r19	; 0x13
    1ee2:	e8 d1       	rcall	.+976    	; 0x22b4 <fputc>
    1ee4:	3b 89       	ldd	r19, Y+19	; 0x13
    1ee6:	32 ff       	sbrs	r19, 2
    1ee8:	16 c0       	rjmp	.+44     	; 0x1f16 <vfprintf+0x630>
    1eea:	31 fd       	sbrc	r19, 1
    1eec:	03 c0       	rjmp	.+6      	; 0x1ef4 <vfprintf+0x60e>
    1eee:	88 e7       	ldi	r24, 0x78	; 120
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	02 c0       	rjmp	.+4      	; 0x1ef8 <vfprintf+0x612>
    1ef4:	88 e5       	ldi	r24, 0x58	; 88
    1ef6:	90 e0       	ldi	r25, 0x00	; 0
    1ef8:	b6 01       	movw	r22, r12
    1efa:	0c c0       	rjmp	.+24     	; 0x1f14 <vfprintf+0x62e>
    1efc:	83 2f       	mov	r24, r19
    1efe:	86 78       	andi	r24, 0x86	; 134
    1f00:	51 f0       	breq	.+20     	; 0x1f16 <vfprintf+0x630>
    1f02:	31 ff       	sbrs	r19, 1
    1f04:	02 c0       	rjmp	.+4      	; 0x1f0a <vfprintf+0x624>
    1f06:	8b e2       	ldi	r24, 0x2B	; 43
    1f08:	01 c0       	rjmp	.+2      	; 0x1f0c <vfprintf+0x626>
    1f0a:	80 e2       	ldi	r24, 0x20	; 32
    1f0c:	37 fd       	sbrc	r19, 7
    1f0e:	8d e2       	ldi	r24, 0x2D	; 45
    1f10:	b6 01       	movw	r22, r12
    1f12:	90 e0       	ldi	r25, 0x00	; 0
    1f14:	cf d1       	rcall	.+926    	; 0x22b4 <fputc>
    1f16:	e1 16       	cp	r14, r17
    1f18:	30 f4       	brcc	.+12     	; 0x1f26 <vfprintf+0x640>
    1f1a:	b6 01       	movw	r22, r12
    1f1c:	80 e3       	ldi	r24, 0x30	; 48
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	c9 d1       	rcall	.+914    	; 0x22b4 <fputc>
    1f22:	11 50       	subi	r17, 0x01	; 1
    1f24:	f8 cf       	rjmp	.-16     	; 0x1f16 <vfprintf+0x630>
    1f26:	ea 94       	dec	r14
    1f28:	f3 01       	movw	r30, r6
    1f2a:	ee 0d       	add	r30, r14
    1f2c:	f1 1d       	adc	r31, r1
    1f2e:	80 81       	ld	r24, Z
    1f30:	b6 01       	movw	r22, r12
    1f32:	90 e0       	ldi	r25, 0x00	; 0
    1f34:	bf d1       	rcall	.+894    	; 0x22b4 <fputc>
    1f36:	e1 10       	cpse	r14, r1
    1f38:	f6 cf       	rjmp	.-20     	; 0x1f26 <vfprintf+0x640>
    1f3a:	14 c0       	rjmp	.+40     	; 0x1f64 <vfprintf+0x67e>
    1f3c:	f4 e0       	ldi	r31, 0x04	; 4
    1f3e:	ff 15       	cp	r31, r15
    1f40:	48 f5       	brcc	.+82     	; 0x1f94 <vfprintf+0x6ae>
    1f42:	84 e0       	ldi	r24, 0x04	; 4
    1f44:	f8 1a       	sub	r15, r24
    1f46:	33 fe       	sbrs	r3, 3
    1f48:	1d c0       	rjmp	.+58     	; 0x1f84 <vfprintf+0x69e>
    1f4a:	21 10       	cpse	r2, r1
    1f4c:	24 c0       	rjmp	.+72     	; 0x1f96 <vfprintf+0x6b0>
    1f4e:	03 ff       	sbrs	r16, 3
    1f50:	27 c0       	rjmp	.+78     	; 0x1fa0 <vfprintf+0x6ba>
    1f52:	0c e6       	ldi	r16, 0x6C	; 108
    1f54:	11 e0       	ldi	r17, 0x01	; 1
    1f56:	f3 2d       	mov	r31, r3
    1f58:	f0 71       	andi	r31, 0x10	; 16
    1f5a:	3f 2e       	mov	r3, r31
    1f5c:	f8 01       	movw	r30, r16
    1f5e:	84 91       	lpm	r24, Z
    1f60:	81 11       	cpse	r24, r1
    1f62:	21 c0       	rjmp	.+66     	; 0x1fa6 <vfprintf+0x6c0>
    1f64:	ff 20       	and	r15, r15
    1f66:	09 f4       	brne	.+2      	; 0x1f6a <vfprintf+0x684>
    1f68:	fd cc       	rjmp	.-1542   	; 0x1964 <vfprintf+0x7e>
    1f6a:	b6 01       	movw	r22, r12
    1f6c:	80 e2       	ldi	r24, 0x20	; 32
    1f6e:	90 e0       	ldi	r25, 0x00	; 0
    1f70:	a1 d1       	rcall	.+834    	; 0x22b4 <fputc>
    1f72:	fa 94       	dec	r15
    1f74:	f7 cf       	rjmp	.-18     	; 0x1f64 <vfprintf+0x67e>
    1f76:	f6 01       	movw	r30, r12
    1f78:	86 81       	ldd	r24, Z+6	; 0x06
    1f7a:	97 81       	ldd	r25, Z+7	; 0x07
    1f7c:	23 c0       	rjmp	.+70     	; 0x1fc4 <vfprintf+0x6de>
    1f7e:	8f ef       	ldi	r24, 0xFF	; 255
    1f80:	9f ef       	ldi	r25, 0xFF	; 255
    1f82:	20 c0       	rjmp	.+64     	; 0x1fc4 <vfprintf+0x6de>
    1f84:	b6 01       	movw	r22, r12
    1f86:	80 e2       	ldi	r24, 0x20	; 32
    1f88:	90 e0       	ldi	r25, 0x00	; 0
    1f8a:	94 d1       	rcall	.+808    	; 0x22b4 <fputc>
    1f8c:	fa 94       	dec	r15
    1f8e:	f1 10       	cpse	r15, r1
    1f90:	f9 cf       	rjmp	.-14     	; 0x1f84 <vfprintf+0x69e>
    1f92:	db cf       	rjmp	.-74     	; 0x1f4a <vfprintf+0x664>
    1f94:	f1 2c       	mov	r15, r1
    1f96:	b6 01       	movw	r22, r12
    1f98:	82 2d       	mov	r24, r2
    1f9a:	90 e0       	ldi	r25, 0x00	; 0
    1f9c:	8b d1       	rcall	.+790    	; 0x22b4 <fputc>
    1f9e:	d7 cf       	rjmp	.-82     	; 0x1f4e <vfprintf+0x668>
    1fa0:	00 e7       	ldi	r16, 0x70	; 112
    1fa2:	11 e0       	ldi	r17, 0x01	; 1
    1fa4:	d8 cf       	rjmp	.-80     	; 0x1f56 <vfprintf+0x670>
    1fa6:	31 10       	cpse	r3, r1
    1fa8:	80 52       	subi	r24, 0x20	; 32
    1faa:	b6 01       	movw	r22, r12
    1fac:	90 e0       	ldi	r25, 0x00	; 0
    1fae:	82 d1       	rcall	.+772    	; 0x22b4 <fputc>
    1fb0:	0f 5f       	subi	r16, 0xFF	; 255
    1fb2:	1f 4f       	sbci	r17, 0xFF	; 255
    1fb4:	d3 cf       	rjmp	.-90     	; 0x1f5c <vfprintf+0x676>
    1fb6:	23 e0       	ldi	r18, 0x03	; 3
    1fb8:	2f 15       	cp	r18, r15
    1fba:	10 f4       	brcc	.+4      	; 0x1fc0 <vfprintf+0x6da>
    1fbc:	83 e0       	ldi	r24, 0x03	; 3
    1fbe:	c2 cf       	rjmp	.-124    	; 0x1f44 <vfprintf+0x65e>
    1fc0:	f1 2c       	mov	r15, r1
    1fc2:	c5 cf       	rjmp	.-118    	; 0x1f4e <vfprintf+0x668>
    1fc4:	63 96       	adiw	r28, 0x13	; 19
    1fc6:	0f b6       	in	r0, 0x3f	; 63
    1fc8:	f8 94       	cli
    1fca:	de bf       	out	0x3e, r29	; 62
    1fcc:	0f be       	out	0x3f, r0	; 63
    1fce:	cd bf       	out	0x3d, r28	; 61
    1fd0:	df 91       	pop	r29
    1fd2:	cf 91       	pop	r28
    1fd4:	1f 91       	pop	r17
    1fd6:	0f 91       	pop	r16
    1fd8:	ff 90       	pop	r15
    1fda:	ef 90       	pop	r14
    1fdc:	df 90       	pop	r13
    1fde:	cf 90       	pop	r12
    1fe0:	bf 90       	pop	r11
    1fe2:	af 90       	pop	r10
    1fe4:	9f 90       	pop	r9
    1fe6:	8f 90       	pop	r8
    1fe8:	7f 90       	pop	r7
    1fea:	6f 90       	pop	r6
    1fec:	5f 90       	pop	r5
    1fee:	4f 90       	pop	r4
    1ff0:	3f 90       	pop	r3
    1ff2:	2f 90       	pop	r2
    1ff4:	08 95       	ret

00001ff6 <__divmodhi4>:
    1ff6:	97 fb       	bst	r25, 7
    1ff8:	07 2e       	mov	r0, r23
    1ffa:	16 f4       	brtc	.+4      	; 0x2000 <__divmodhi4+0xa>
    1ffc:	00 94       	com	r0
    1ffe:	06 d0       	rcall	.+12     	; 0x200c <__divmodhi4_neg1>
    2000:	77 fd       	sbrc	r23, 7
    2002:	08 d0       	rcall	.+16     	; 0x2014 <__divmodhi4_neg2>
    2004:	0b d0       	rcall	.+22     	; 0x201c <__udivmodhi4>
    2006:	07 fc       	sbrc	r0, 7
    2008:	05 d0       	rcall	.+10     	; 0x2014 <__divmodhi4_neg2>
    200a:	3e f4       	brtc	.+14     	; 0x201a <__divmodhi4_exit>

0000200c <__divmodhi4_neg1>:
    200c:	90 95       	com	r25
    200e:	81 95       	neg	r24
    2010:	9f 4f       	sbci	r25, 0xFF	; 255
    2012:	08 95       	ret

00002014 <__divmodhi4_neg2>:
    2014:	70 95       	com	r23
    2016:	61 95       	neg	r22
    2018:	7f 4f       	sbci	r23, 0xFF	; 255

0000201a <__divmodhi4_exit>:
    201a:	08 95       	ret

0000201c <__udivmodhi4>:
    201c:	aa 1b       	sub	r26, r26
    201e:	bb 1b       	sub	r27, r27
    2020:	51 e1       	ldi	r21, 0x11	; 17
    2022:	07 c0       	rjmp	.+14     	; 0x2032 <__udivmodhi4_ep>

00002024 <__udivmodhi4_loop>:
    2024:	aa 1f       	adc	r26, r26
    2026:	bb 1f       	adc	r27, r27
    2028:	a6 17       	cp	r26, r22
    202a:	b7 07       	cpc	r27, r23
    202c:	10 f0       	brcs	.+4      	; 0x2032 <__udivmodhi4_ep>
    202e:	a6 1b       	sub	r26, r22
    2030:	b7 0b       	sbc	r27, r23

00002032 <__udivmodhi4_ep>:
    2032:	88 1f       	adc	r24, r24
    2034:	99 1f       	adc	r25, r25
    2036:	5a 95       	dec	r21
    2038:	a9 f7       	brne	.-22     	; 0x2024 <__udivmodhi4_loop>
    203a:	80 95       	com	r24
    203c:	90 95       	com	r25
    203e:	bc 01       	movw	r22, r24
    2040:	cd 01       	movw	r24, r26
    2042:	08 95       	ret

00002044 <__ftoa_engine>:
    2044:	28 30       	cpi	r18, 0x08	; 8
    2046:	08 f0       	brcs	.+2      	; 0x204a <__ftoa_engine+0x6>
    2048:	27 e0       	ldi	r18, 0x07	; 7
    204a:	33 27       	eor	r19, r19
    204c:	da 01       	movw	r26, r20
    204e:	99 0f       	add	r25, r25
    2050:	31 1d       	adc	r19, r1
    2052:	87 fd       	sbrc	r24, 7
    2054:	91 60       	ori	r25, 0x01	; 1
    2056:	00 96       	adiw	r24, 0x00	; 0
    2058:	61 05       	cpc	r22, r1
    205a:	71 05       	cpc	r23, r1
    205c:	39 f4       	brne	.+14     	; 0x206c <__ftoa_engine+0x28>
    205e:	32 60       	ori	r19, 0x02	; 2
    2060:	2e 5f       	subi	r18, 0xFE	; 254
    2062:	3d 93       	st	X+, r19
    2064:	30 e3       	ldi	r19, 0x30	; 48
    2066:	2a 95       	dec	r18
    2068:	e1 f7       	brne	.-8      	; 0x2062 <__ftoa_engine+0x1e>
    206a:	08 95       	ret
    206c:	9f 3f       	cpi	r25, 0xFF	; 255
    206e:	30 f0       	brcs	.+12     	; 0x207c <__ftoa_engine+0x38>
    2070:	80 38       	cpi	r24, 0x80	; 128
    2072:	71 05       	cpc	r23, r1
    2074:	61 05       	cpc	r22, r1
    2076:	09 f0       	breq	.+2      	; 0x207a <__ftoa_engine+0x36>
    2078:	3c 5f       	subi	r19, 0xFC	; 252
    207a:	3c 5f       	subi	r19, 0xFC	; 252
    207c:	3d 93       	st	X+, r19
    207e:	91 30       	cpi	r25, 0x01	; 1
    2080:	08 f0       	brcs	.+2      	; 0x2084 <__ftoa_engine+0x40>
    2082:	80 68       	ori	r24, 0x80	; 128
    2084:	91 1d       	adc	r25, r1
    2086:	df 93       	push	r29
    2088:	cf 93       	push	r28
    208a:	1f 93       	push	r17
    208c:	0f 93       	push	r16
    208e:	ff 92       	push	r15
    2090:	ef 92       	push	r14
    2092:	19 2f       	mov	r17, r25
    2094:	98 7f       	andi	r25, 0xF8	; 248
    2096:	96 95       	lsr	r25
    2098:	e9 2f       	mov	r30, r25
    209a:	96 95       	lsr	r25
    209c:	96 95       	lsr	r25
    209e:	e9 0f       	add	r30, r25
    20a0:	ff 27       	eor	r31, r31
    20a2:	e2 53       	subi	r30, 0x32	; 50
    20a4:	fe 4f       	sbci	r31, 0xFE	; 254
    20a6:	99 27       	eor	r25, r25
    20a8:	33 27       	eor	r19, r19
    20aa:	ee 24       	eor	r14, r14
    20ac:	ff 24       	eor	r15, r15
    20ae:	a7 01       	movw	r20, r14
    20b0:	e7 01       	movw	r28, r14
    20b2:	05 90       	lpm	r0, Z+
    20b4:	08 94       	sec
    20b6:	07 94       	ror	r0
    20b8:	28 f4       	brcc	.+10     	; 0x20c4 <__ftoa_engine+0x80>
    20ba:	36 0f       	add	r19, r22
    20bc:	e7 1e       	adc	r14, r23
    20be:	f8 1e       	adc	r15, r24
    20c0:	49 1f       	adc	r20, r25
    20c2:	51 1d       	adc	r21, r1
    20c4:	66 0f       	add	r22, r22
    20c6:	77 1f       	adc	r23, r23
    20c8:	88 1f       	adc	r24, r24
    20ca:	99 1f       	adc	r25, r25
    20cc:	06 94       	lsr	r0
    20ce:	a1 f7       	brne	.-24     	; 0x20b8 <__ftoa_engine+0x74>
    20d0:	05 90       	lpm	r0, Z+
    20d2:	07 94       	ror	r0
    20d4:	28 f4       	brcc	.+10     	; 0x20e0 <__ftoa_engine+0x9c>
    20d6:	e7 0e       	add	r14, r23
    20d8:	f8 1e       	adc	r15, r24
    20da:	49 1f       	adc	r20, r25
    20dc:	56 1f       	adc	r21, r22
    20de:	c1 1d       	adc	r28, r1
    20e0:	77 0f       	add	r23, r23
    20e2:	88 1f       	adc	r24, r24
    20e4:	99 1f       	adc	r25, r25
    20e6:	66 1f       	adc	r22, r22
    20e8:	06 94       	lsr	r0
    20ea:	a1 f7       	brne	.-24     	; 0x20d4 <__ftoa_engine+0x90>
    20ec:	05 90       	lpm	r0, Z+
    20ee:	07 94       	ror	r0
    20f0:	28 f4       	brcc	.+10     	; 0x20fc <__ftoa_engine+0xb8>
    20f2:	f8 0e       	add	r15, r24
    20f4:	49 1f       	adc	r20, r25
    20f6:	56 1f       	adc	r21, r22
    20f8:	c7 1f       	adc	r28, r23
    20fa:	d1 1d       	adc	r29, r1
    20fc:	88 0f       	add	r24, r24
    20fe:	99 1f       	adc	r25, r25
    2100:	66 1f       	adc	r22, r22
    2102:	77 1f       	adc	r23, r23
    2104:	06 94       	lsr	r0
    2106:	a1 f7       	brne	.-24     	; 0x20f0 <__ftoa_engine+0xac>
    2108:	05 90       	lpm	r0, Z+
    210a:	07 94       	ror	r0
    210c:	20 f4       	brcc	.+8      	; 0x2116 <__ftoa_engine+0xd2>
    210e:	49 0f       	add	r20, r25
    2110:	56 1f       	adc	r21, r22
    2112:	c7 1f       	adc	r28, r23
    2114:	d8 1f       	adc	r29, r24
    2116:	99 0f       	add	r25, r25
    2118:	66 1f       	adc	r22, r22
    211a:	77 1f       	adc	r23, r23
    211c:	88 1f       	adc	r24, r24
    211e:	06 94       	lsr	r0
    2120:	a9 f7       	brne	.-22     	; 0x210c <__ftoa_engine+0xc8>
    2122:	84 91       	lpm	r24, Z
    2124:	10 95       	com	r17
    2126:	17 70       	andi	r17, 0x07	; 7
    2128:	41 f0       	breq	.+16     	; 0x213a <__ftoa_engine+0xf6>
    212a:	d6 95       	lsr	r29
    212c:	c7 95       	ror	r28
    212e:	57 95       	ror	r21
    2130:	47 95       	ror	r20
    2132:	f7 94       	ror	r15
    2134:	e7 94       	ror	r14
    2136:	1a 95       	dec	r17
    2138:	c1 f7       	brne	.-16     	; 0x212a <__ftoa_engine+0xe6>
    213a:	e4 e7       	ldi	r30, 0x74	; 116
    213c:	f1 e0       	ldi	r31, 0x01	; 1
    213e:	68 94       	set
    2140:	15 90       	lpm	r1, Z+
    2142:	15 91       	lpm	r17, Z+
    2144:	35 91       	lpm	r19, Z+
    2146:	65 91       	lpm	r22, Z+
    2148:	95 91       	lpm	r25, Z+
    214a:	05 90       	lpm	r0, Z+
    214c:	7f e2       	ldi	r23, 0x2F	; 47
    214e:	73 95       	inc	r23
    2150:	e1 18       	sub	r14, r1
    2152:	f1 0a       	sbc	r15, r17
    2154:	43 0b       	sbc	r20, r19
    2156:	56 0b       	sbc	r21, r22
    2158:	c9 0b       	sbc	r28, r25
    215a:	d0 09       	sbc	r29, r0
    215c:	c0 f7       	brcc	.-16     	; 0x214e <__ftoa_engine+0x10a>
    215e:	e1 0c       	add	r14, r1
    2160:	f1 1e       	adc	r15, r17
    2162:	43 1f       	adc	r20, r19
    2164:	56 1f       	adc	r21, r22
    2166:	c9 1f       	adc	r28, r25
    2168:	d0 1d       	adc	r29, r0
    216a:	7e f4       	brtc	.+30     	; 0x218a <__ftoa_engine+0x146>
    216c:	70 33       	cpi	r23, 0x30	; 48
    216e:	11 f4       	brne	.+4      	; 0x2174 <__ftoa_engine+0x130>
    2170:	8a 95       	dec	r24
    2172:	e6 cf       	rjmp	.-52     	; 0x2140 <__ftoa_engine+0xfc>
    2174:	e8 94       	clt
    2176:	01 50       	subi	r16, 0x01	; 1
    2178:	30 f0       	brcs	.+12     	; 0x2186 <__ftoa_engine+0x142>
    217a:	08 0f       	add	r16, r24
    217c:	0a f4       	brpl	.+2      	; 0x2180 <__ftoa_engine+0x13c>
    217e:	00 27       	eor	r16, r16
    2180:	02 17       	cp	r16, r18
    2182:	08 f4       	brcc	.+2      	; 0x2186 <__ftoa_engine+0x142>
    2184:	20 2f       	mov	r18, r16
    2186:	23 95       	inc	r18
    2188:	02 2f       	mov	r16, r18
    218a:	7a 33       	cpi	r23, 0x3A	; 58
    218c:	28 f0       	brcs	.+10     	; 0x2198 <__ftoa_engine+0x154>
    218e:	79 e3       	ldi	r23, 0x39	; 57
    2190:	7d 93       	st	X+, r23
    2192:	2a 95       	dec	r18
    2194:	e9 f7       	brne	.-6      	; 0x2190 <__ftoa_engine+0x14c>
    2196:	10 c0       	rjmp	.+32     	; 0x21b8 <__ftoa_engine+0x174>
    2198:	7d 93       	st	X+, r23
    219a:	2a 95       	dec	r18
    219c:	89 f6       	brne	.-94     	; 0x2140 <__ftoa_engine+0xfc>
    219e:	06 94       	lsr	r0
    21a0:	97 95       	ror	r25
    21a2:	67 95       	ror	r22
    21a4:	37 95       	ror	r19
    21a6:	17 95       	ror	r17
    21a8:	17 94       	ror	r1
    21aa:	e1 18       	sub	r14, r1
    21ac:	f1 0a       	sbc	r15, r17
    21ae:	43 0b       	sbc	r20, r19
    21b0:	56 0b       	sbc	r21, r22
    21b2:	c9 0b       	sbc	r28, r25
    21b4:	d0 09       	sbc	r29, r0
    21b6:	98 f0       	brcs	.+38     	; 0x21de <__ftoa_engine+0x19a>
    21b8:	23 95       	inc	r18
    21ba:	7e 91       	ld	r23, -X
    21bc:	73 95       	inc	r23
    21be:	7a 33       	cpi	r23, 0x3A	; 58
    21c0:	08 f0       	brcs	.+2      	; 0x21c4 <__ftoa_engine+0x180>
    21c2:	70 e3       	ldi	r23, 0x30	; 48
    21c4:	7c 93       	st	X, r23
    21c6:	20 13       	cpse	r18, r16
    21c8:	b8 f7       	brcc	.-18     	; 0x21b8 <__ftoa_engine+0x174>
    21ca:	7e 91       	ld	r23, -X
    21cc:	70 61       	ori	r23, 0x10	; 16
    21ce:	7d 93       	st	X+, r23
    21d0:	30 f0       	brcs	.+12     	; 0x21de <__ftoa_engine+0x19a>
    21d2:	83 95       	inc	r24
    21d4:	71 e3       	ldi	r23, 0x31	; 49
    21d6:	7d 93       	st	X+, r23
    21d8:	70 e3       	ldi	r23, 0x30	; 48
    21da:	2a 95       	dec	r18
    21dc:	e1 f7       	brne	.-8      	; 0x21d6 <__ftoa_engine+0x192>
    21de:	11 24       	eor	r1, r1
    21e0:	ef 90       	pop	r14
    21e2:	ff 90       	pop	r15
    21e4:	0f 91       	pop	r16
    21e6:	1f 91       	pop	r17
    21e8:	cf 91       	pop	r28
    21ea:	df 91       	pop	r29
    21ec:	99 27       	eor	r25, r25
    21ee:	87 fd       	sbrc	r24, 7
    21f0:	90 95       	com	r25
    21f2:	08 95       	ret

000021f4 <strnlen_P>:
    21f4:	fc 01       	movw	r30, r24
    21f6:	05 90       	lpm	r0, Z+
    21f8:	61 50       	subi	r22, 0x01	; 1
    21fa:	70 40       	sbci	r23, 0x00	; 0
    21fc:	01 10       	cpse	r0, r1
    21fe:	d8 f7       	brcc	.-10     	; 0x21f6 <strnlen_P+0x2>
    2200:	80 95       	com	r24
    2202:	90 95       	com	r25
    2204:	8e 0f       	add	r24, r30
    2206:	9f 1f       	adc	r25, r31
    2208:	08 95       	ret

0000220a <strnlen>:
    220a:	fc 01       	movw	r30, r24
    220c:	61 50       	subi	r22, 0x01	; 1
    220e:	70 40       	sbci	r23, 0x00	; 0
    2210:	01 90       	ld	r0, Z+
    2212:	01 10       	cpse	r0, r1
    2214:	d8 f7       	brcc	.-10     	; 0x220c <strnlen+0x2>
    2216:	80 95       	com	r24
    2218:	90 95       	com	r25
    221a:	8e 0f       	add	r24, r30
    221c:	9f 1f       	adc	r25, r31
    221e:	08 95       	ret

00002220 <fdevopen>:
    2220:	0f 93       	push	r16
    2222:	1f 93       	push	r17
    2224:	cf 93       	push	r28
    2226:	df 93       	push	r29
    2228:	00 97       	sbiw	r24, 0x00	; 0
    222a:	31 f4       	brne	.+12     	; 0x2238 <fdevopen+0x18>
    222c:	61 15       	cp	r22, r1
    222e:	71 05       	cpc	r23, r1
    2230:	19 f4       	brne	.+6      	; 0x2238 <fdevopen+0x18>
    2232:	80 e0       	ldi	r24, 0x00	; 0
    2234:	90 e0       	ldi	r25, 0x00	; 0
    2236:	39 c0       	rjmp	.+114    	; 0x22aa <fdevopen+0x8a>
    2238:	8b 01       	movw	r16, r22
    223a:	ec 01       	movw	r28, r24
    223c:	6e e0       	ldi	r22, 0x0E	; 14
    223e:	70 e0       	ldi	r23, 0x00	; 0
    2240:	81 e0       	ldi	r24, 0x01	; 1
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	14 d1       	rcall	.+552    	; 0x246e <calloc>
    2246:	fc 01       	movw	r30, r24
    2248:	89 2b       	or	r24, r25
    224a:	99 f3       	breq	.-26     	; 0x2232 <fdevopen+0x12>
    224c:	80 e8       	ldi	r24, 0x80	; 128
    224e:	83 83       	std	Z+3, r24	; 0x03
    2250:	01 15       	cp	r16, r1
    2252:	11 05       	cpc	r17, r1
    2254:	71 f0       	breq	.+28     	; 0x2272 <fdevopen+0x52>
    2256:	13 87       	std	Z+11, r17	; 0x0b
    2258:	02 87       	std	Z+10, r16	; 0x0a
    225a:	81 e8       	ldi	r24, 0x81	; 129
    225c:	83 83       	std	Z+3, r24	; 0x03
    225e:	80 91 dd 03 	lds	r24, 0x03DD	; 0x8003dd <__iob>
    2262:	90 91 de 03 	lds	r25, 0x03DE	; 0x8003de <__iob+0x1>
    2266:	89 2b       	or	r24, r25
    2268:	21 f4       	brne	.+8      	; 0x2272 <fdevopen+0x52>
    226a:	f0 93 de 03 	sts	0x03DE, r31	; 0x8003de <__iob+0x1>
    226e:	e0 93 dd 03 	sts	0x03DD, r30	; 0x8003dd <__iob>
    2272:	20 97       	sbiw	r28, 0x00	; 0
    2274:	c9 f0       	breq	.+50     	; 0x22a8 <fdevopen+0x88>
    2276:	d1 87       	std	Z+9, r29	; 0x09
    2278:	c0 87       	std	Z+8, r28	; 0x08
    227a:	83 81       	ldd	r24, Z+3	; 0x03
    227c:	82 60       	ori	r24, 0x02	; 2
    227e:	83 83       	std	Z+3, r24	; 0x03
    2280:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    2284:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    2288:	89 2b       	or	r24, r25
    228a:	71 f4       	brne	.+28     	; 0x22a8 <fdevopen+0x88>
    228c:	f0 93 e0 03 	sts	0x03E0, r31	; 0x8003e0 <__iob+0x3>
    2290:	e0 93 df 03 	sts	0x03DF, r30	; 0x8003df <__iob+0x2>
    2294:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <__iob+0x4>
    2298:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <__iob+0x5>
    229c:	89 2b       	or	r24, r25
    229e:	21 f4       	brne	.+8      	; 0x22a8 <fdevopen+0x88>
    22a0:	f0 93 e2 03 	sts	0x03E2, r31	; 0x8003e2 <__iob+0x5>
    22a4:	e0 93 e1 03 	sts	0x03E1, r30	; 0x8003e1 <__iob+0x4>
    22a8:	cf 01       	movw	r24, r30
    22aa:	df 91       	pop	r29
    22ac:	cf 91       	pop	r28
    22ae:	1f 91       	pop	r17
    22b0:	0f 91       	pop	r16
    22b2:	08 95       	ret

000022b4 <fputc>:
    22b4:	0f 93       	push	r16
    22b6:	1f 93       	push	r17
    22b8:	cf 93       	push	r28
    22ba:	df 93       	push	r29
    22bc:	fb 01       	movw	r30, r22
    22be:	23 81       	ldd	r18, Z+3	; 0x03
    22c0:	21 fd       	sbrc	r18, 1
    22c2:	03 c0       	rjmp	.+6      	; 0x22ca <fputc+0x16>
    22c4:	8f ef       	ldi	r24, 0xFF	; 255
    22c6:	9f ef       	ldi	r25, 0xFF	; 255
    22c8:	28 c0       	rjmp	.+80     	; 0x231a <fputc+0x66>
    22ca:	22 ff       	sbrs	r18, 2
    22cc:	16 c0       	rjmp	.+44     	; 0x22fa <fputc+0x46>
    22ce:	46 81       	ldd	r20, Z+6	; 0x06
    22d0:	57 81       	ldd	r21, Z+7	; 0x07
    22d2:	24 81       	ldd	r18, Z+4	; 0x04
    22d4:	35 81       	ldd	r19, Z+5	; 0x05
    22d6:	42 17       	cp	r20, r18
    22d8:	53 07       	cpc	r21, r19
    22da:	44 f4       	brge	.+16     	; 0x22ec <fputc+0x38>
    22dc:	a0 81       	ld	r26, Z
    22de:	b1 81       	ldd	r27, Z+1	; 0x01
    22e0:	9d 01       	movw	r18, r26
    22e2:	2f 5f       	subi	r18, 0xFF	; 255
    22e4:	3f 4f       	sbci	r19, 0xFF	; 255
    22e6:	31 83       	std	Z+1, r19	; 0x01
    22e8:	20 83       	st	Z, r18
    22ea:	8c 93       	st	X, r24
    22ec:	26 81       	ldd	r18, Z+6	; 0x06
    22ee:	37 81       	ldd	r19, Z+7	; 0x07
    22f0:	2f 5f       	subi	r18, 0xFF	; 255
    22f2:	3f 4f       	sbci	r19, 0xFF	; 255
    22f4:	37 83       	std	Z+7, r19	; 0x07
    22f6:	26 83       	std	Z+6, r18	; 0x06
    22f8:	10 c0       	rjmp	.+32     	; 0x231a <fputc+0x66>
    22fa:	eb 01       	movw	r28, r22
    22fc:	09 2f       	mov	r16, r25
    22fe:	18 2f       	mov	r17, r24
    2300:	00 84       	ldd	r0, Z+8	; 0x08
    2302:	f1 85       	ldd	r31, Z+9	; 0x09
    2304:	e0 2d       	mov	r30, r0
    2306:	19 95       	eicall
    2308:	89 2b       	or	r24, r25
    230a:	e1 f6       	brne	.-72     	; 0x22c4 <fputc+0x10>
    230c:	8e 81       	ldd	r24, Y+6	; 0x06
    230e:	9f 81       	ldd	r25, Y+7	; 0x07
    2310:	01 96       	adiw	r24, 0x01	; 1
    2312:	9f 83       	std	Y+7, r25	; 0x07
    2314:	8e 83       	std	Y+6, r24	; 0x06
    2316:	81 2f       	mov	r24, r17
    2318:	90 2f       	mov	r25, r16
    231a:	df 91       	pop	r29
    231c:	cf 91       	pop	r28
    231e:	1f 91       	pop	r17
    2320:	0f 91       	pop	r16
    2322:	08 95       	ret

00002324 <printf>:
    2324:	cf 93       	push	r28
    2326:	df 93       	push	r29
    2328:	cd b7       	in	r28, 0x3d	; 61
    232a:	de b7       	in	r29, 0x3e	; 62
    232c:	ae 01       	movw	r20, r28
    232e:	4a 5f       	subi	r20, 0xFA	; 250
    2330:	5f 4f       	sbci	r21, 0xFF	; 255
    2332:	fa 01       	movw	r30, r20
    2334:	61 91       	ld	r22, Z+
    2336:	71 91       	ld	r23, Z+
    2338:	af 01       	movw	r20, r30
    233a:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    233e:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    2342:	d1 da       	rcall	.-2654   	; 0x18e6 <vfprintf>
    2344:	df 91       	pop	r29
    2346:	cf 91       	pop	r28
    2348:	08 95       	ret

0000234a <putchar>:
    234a:	60 91 df 03 	lds	r22, 0x03DF	; 0x8003df <__iob+0x2>
    234e:	70 91 e0 03 	lds	r23, 0x03E0	; 0x8003e0 <__iob+0x3>
    2352:	b0 cf       	rjmp	.-160    	; 0x22b4 <fputc>

00002354 <sprintf>:
    2354:	0f 93       	push	r16
    2356:	1f 93       	push	r17
    2358:	cf 93       	push	r28
    235a:	df 93       	push	r29
    235c:	cd b7       	in	r28, 0x3d	; 61
    235e:	de b7       	in	r29, 0x3e	; 62
    2360:	2e 97       	sbiw	r28, 0x0e	; 14
    2362:	0f b6       	in	r0, 0x3f	; 63
    2364:	f8 94       	cli
    2366:	de bf       	out	0x3e, r29	; 62
    2368:	0f be       	out	0x3f, r0	; 63
    236a:	cd bf       	out	0x3d, r28	; 61
    236c:	0e 89       	ldd	r16, Y+22	; 0x16
    236e:	1f 89       	ldd	r17, Y+23	; 0x17
    2370:	86 e0       	ldi	r24, 0x06	; 6
    2372:	8c 83       	std	Y+4, r24	; 0x04
    2374:	1a 83       	std	Y+2, r17	; 0x02
    2376:	09 83       	std	Y+1, r16	; 0x01
    2378:	8f ef       	ldi	r24, 0xFF	; 255
    237a:	9f e7       	ldi	r25, 0x7F	; 127
    237c:	9e 83       	std	Y+6, r25	; 0x06
    237e:	8d 83       	std	Y+5, r24	; 0x05
    2380:	ae 01       	movw	r20, r28
    2382:	46 5e       	subi	r20, 0xE6	; 230
    2384:	5f 4f       	sbci	r21, 0xFF	; 255
    2386:	68 8d       	ldd	r22, Y+24	; 0x18
    2388:	79 8d       	ldd	r23, Y+25	; 0x19
    238a:	ce 01       	movw	r24, r28
    238c:	01 96       	adiw	r24, 0x01	; 1
    238e:	ab da       	rcall	.-2730   	; 0x18e6 <vfprintf>
    2390:	2f 81       	ldd	r18, Y+7	; 0x07
    2392:	38 85       	ldd	r19, Y+8	; 0x08
    2394:	f8 01       	movw	r30, r16
    2396:	e2 0f       	add	r30, r18
    2398:	f3 1f       	adc	r31, r19
    239a:	10 82       	st	Z, r1
    239c:	2e 96       	adiw	r28, 0x0e	; 14
    239e:	0f b6       	in	r0, 0x3f	; 63
    23a0:	f8 94       	cli
    23a2:	de bf       	out	0x3e, r29	; 62
    23a4:	0f be       	out	0x3f, r0	; 63
    23a6:	cd bf       	out	0x3d, r28	; 61
    23a8:	df 91       	pop	r29
    23aa:	cf 91       	pop	r28
    23ac:	1f 91       	pop	r17
    23ae:	0f 91       	pop	r16
    23b0:	08 95       	ret

000023b2 <__ultoa_invert>:
    23b2:	fa 01       	movw	r30, r20
    23b4:	aa 27       	eor	r26, r26
    23b6:	28 30       	cpi	r18, 0x08	; 8
    23b8:	51 f1       	breq	.+84     	; 0x240e <__ultoa_invert+0x5c>
    23ba:	20 31       	cpi	r18, 0x10	; 16
    23bc:	81 f1       	breq	.+96     	; 0x241e <__ultoa_invert+0x6c>
    23be:	e8 94       	clt
    23c0:	6f 93       	push	r22
    23c2:	6e 7f       	andi	r22, 0xFE	; 254
    23c4:	6e 5f       	subi	r22, 0xFE	; 254
    23c6:	7f 4f       	sbci	r23, 0xFF	; 255
    23c8:	8f 4f       	sbci	r24, 0xFF	; 255
    23ca:	9f 4f       	sbci	r25, 0xFF	; 255
    23cc:	af 4f       	sbci	r26, 0xFF	; 255
    23ce:	b1 e0       	ldi	r27, 0x01	; 1
    23d0:	3e d0       	rcall	.+124    	; 0x244e <__ultoa_invert+0x9c>
    23d2:	b4 e0       	ldi	r27, 0x04	; 4
    23d4:	3c d0       	rcall	.+120    	; 0x244e <__ultoa_invert+0x9c>
    23d6:	67 0f       	add	r22, r23
    23d8:	78 1f       	adc	r23, r24
    23da:	89 1f       	adc	r24, r25
    23dc:	9a 1f       	adc	r25, r26
    23de:	a1 1d       	adc	r26, r1
    23e0:	68 0f       	add	r22, r24
    23e2:	79 1f       	adc	r23, r25
    23e4:	8a 1f       	adc	r24, r26
    23e6:	91 1d       	adc	r25, r1
    23e8:	a1 1d       	adc	r26, r1
    23ea:	6a 0f       	add	r22, r26
    23ec:	71 1d       	adc	r23, r1
    23ee:	81 1d       	adc	r24, r1
    23f0:	91 1d       	adc	r25, r1
    23f2:	a1 1d       	adc	r26, r1
    23f4:	20 d0       	rcall	.+64     	; 0x2436 <__ultoa_invert+0x84>
    23f6:	09 f4       	brne	.+2      	; 0x23fa <__ultoa_invert+0x48>
    23f8:	68 94       	set
    23fa:	3f 91       	pop	r19
    23fc:	2a e0       	ldi	r18, 0x0A	; 10
    23fe:	26 9f       	mul	r18, r22
    2400:	11 24       	eor	r1, r1
    2402:	30 19       	sub	r19, r0
    2404:	30 5d       	subi	r19, 0xD0	; 208
    2406:	31 93       	st	Z+, r19
    2408:	de f6       	brtc	.-74     	; 0x23c0 <__ultoa_invert+0xe>
    240a:	cf 01       	movw	r24, r30
    240c:	08 95       	ret
    240e:	46 2f       	mov	r20, r22
    2410:	47 70       	andi	r20, 0x07	; 7
    2412:	40 5d       	subi	r20, 0xD0	; 208
    2414:	41 93       	st	Z+, r20
    2416:	b3 e0       	ldi	r27, 0x03	; 3
    2418:	0f d0       	rcall	.+30     	; 0x2438 <__ultoa_invert+0x86>
    241a:	c9 f7       	brne	.-14     	; 0x240e <__ultoa_invert+0x5c>
    241c:	f6 cf       	rjmp	.-20     	; 0x240a <__ultoa_invert+0x58>
    241e:	46 2f       	mov	r20, r22
    2420:	4f 70       	andi	r20, 0x0F	; 15
    2422:	40 5d       	subi	r20, 0xD0	; 208
    2424:	4a 33       	cpi	r20, 0x3A	; 58
    2426:	18 f0       	brcs	.+6      	; 0x242e <__ultoa_invert+0x7c>
    2428:	49 5d       	subi	r20, 0xD9	; 217
    242a:	31 fd       	sbrc	r19, 1
    242c:	40 52       	subi	r20, 0x20	; 32
    242e:	41 93       	st	Z+, r20
    2430:	02 d0       	rcall	.+4      	; 0x2436 <__ultoa_invert+0x84>
    2432:	a9 f7       	brne	.-22     	; 0x241e <__ultoa_invert+0x6c>
    2434:	ea cf       	rjmp	.-44     	; 0x240a <__ultoa_invert+0x58>
    2436:	b4 e0       	ldi	r27, 0x04	; 4
    2438:	a6 95       	lsr	r26
    243a:	97 95       	ror	r25
    243c:	87 95       	ror	r24
    243e:	77 95       	ror	r23
    2440:	67 95       	ror	r22
    2442:	ba 95       	dec	r27
    2444:	c9 f7       	brne	.-14     	; 0x2438 <__ultoa_invert+0x86>
    2446:	00 97       	sbiw	r24, 0x00	; 0
    2448:	61 05       	cpc	r22, r1
    244a:	71 05       	cpc	r23, r1
    244c:	08 95       	ret
    244e:	9b 01       	movw	r18, r22
    2450:	ac 01       	movw	r20, r24
    2452:	0a 2e       	mov	r0, r26
    2454:	06 94       	lsr	r0
    2456:	57 95       	ror	r21
    2458:	47 95       	ror	r20
    245a:	37 95       	ror	r19
    245c:	27 95       	ror	r18
    245e:	ba 95       	dec	r27
    2460:	c9 f7       	brne	.-14     	; 0x2454 <__ultoa_invert+0xa2>
    2462:	62 0f       	add	r22, r18
    2464:	73 1f       	adc	r23, r19
    2466:	84 1f       	adc	r24, r20
    2468:	95 1f       	adc	r25, r21
    246a:	a0 1d       	adc	r26, r0
    246c:	08 95       	ret

0000246e <calloc>:
    246e:	0f 93       	push	r16
    2470:	1f 93       	push	r17
    2472:	cf 93       	push	r28
    2474:	df 93       	push	r29
    2476:	86 9f       	mul	r24, r22
    2478:	80 01       	movw	r16, r0
    247a:	87 9f       	mul	r24, r23
    247c:	10 0d       	add	r17, r0
    247e:	96 9f       	mul	r25, r22
    2480:	10 0d       	add	r17, r0
    2482:	11 24       	eor	r1, r1
    2484:	c8 01       	movw	r24, r16
    2486:	0d d0       	rcall	.+26     	; 0x24a2 <malloc>
    2488:	ec 01       	movw	r28, r24
    248a:	00 97       	sbiw	r24, 0x00	; 0
    248c:	21 f0       	breq	.+8      	; 0x2496 <calloc+0x28>
    248e:	a8 01       	movw	r20, r16
    2490:	60 e0       	ldi	r22, 0x00	; 0
    2492:	70 e0       	ldi	r23, 0x00	; 0
    2494:	33 d1       	rcall	.+614    	; 0x26fc <memset>
    2496:	ce 01       	movw	r24, r28
    2498:	df 91       	pop	r29
    249a:	cf 91       	pop	r28
    249c:	1f 91       	pop	r17
    249e:	0f 91       	pop	r16
    24a0:	08 95       	ret

000024a2 <malloc>:
    24a2:	cf 93       	push	r28
    24a4:	df 93       	push	r29
    24a6:	82 30       	cpi	r24, 0x02	; 2
    24a8:	91 05       	cpc	r25, r1
    24aa:	10 f4       	brcc	.+4      	; 0x24b0 <malloc+0xe>
    24ac:	82 e0       	ldi	r24, 0x02	; 2
    24ae:	90 e0       	ldi	r25, 0x00	; 0
    24b0:	e0 91 e5 03 	lds	r30, 0x03E5	; 0x8003e5 <__flp>
    24b4:	f0 91 e6 03 	lds	r31, 0x03E6	; 0x8003e6 <__flp+0x1>
    24b8:	20 e0       	ldi	r18, 0x00	; 0
    24ba:	30 e0       	ldi	r19, 0x00	; 0
    24bc:	c0 e0       	ldi	r28, 0x00	; 0
    24be:	d0 e0       	ldi	r29, 0x00	; 0
    24c0:	30 97       	sbiw	r30, 0x00	; 0
    24c2:	11 f1       	breq	.+68     	; 0x2508 <malloc+0x66>
    24c4:	40 81       	ld	r20, Z
    24c6:	51 81       	ldd	r21, Z+1	; 0x01
    24c8:	48 17       	cp	r20, r24
    24ca:	59 07       	cpc	r21, r25
    24cc:	c0 f0       	brcs	.+48     	; 0x24fe <malloc+0x5c>
    24ce:	48 17       	cp	r20, r24
    24d0:	59 07       	cpc	r21, r25
    24d2:	61 f4       	brne	.+24     	; 0x24ec <malloc+0x4a>
    24d4:	82 81       	ldd	r24, Z+2	; 0x02
    24d6:	93 81       	ldd	r25, Z+3	; 0x03
    24d8:	20 97       	sbiw	r28, 0x00	; 0
    24da:	19 f0       	breq	.+6      	; 0x24e2 <malloc+0x40>
    24dc:	9b 83       	std	Y+3, r25	; 0x03
    24de:	8a 83       	std	Y+2, r24	; 0x02
    24e0:	2b c0       	rjmp	.+86     	; 0x2538 <malloc+0x96>
    24e2:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <__flp+0x1>
    24e6:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <__flp>
    24ea:	26 c0       	rjmp	.+76     	; 0x2538 <malloc+0x96>
    24ec:	21 15       	cp	r18, r1
    24ee:	31 05       	cpc	r19, r1
    24f0:	19 f0       	breq	.+6      	; 0x24f8 <malloc+0x56>
    24f2:	42 17       	cp	r20, r18
    24f4:	53 07       	cpc	r21, r19
    24f6:	18 f4       	brcc	.+6      	; 0x24fe <malloc+0x5c>
    24f8:	9a 01       	movw	r18, r20
    24fa:	be 01       	movw	r22, r28
    24fc:	df 01       	movw	r26, r30
    24fe:	ef 01       	movw	r28, r30
    2500:	02 80       	ldd	r0, Z+2	; 0x02
    2502:	f3 81       	ldd	r31, Z+3	; 0x03
    2504:	e0 2d       	mov	r30, r0
    2506:	dc cf       	rjmp	.-72     	; 0x24c0 <malloc+0x1e>
    2508:	21 15       	cp	r18, r1
    250a:	31 05       	cpc	r19, r1
    250c:	09 f1       	breq	.+66     	; 0x2550 <malloc+0xae>
    250e:	28 1b       	sub	r18, r24
    2510:	39 0b       	sbc	r19, r25
    2512:	24 30       	cpi	r18, 0x04	; 4
    2514:	31 05       	cpc	r19, r1
    2516:	90 f4       	brcc	.+36     	; 0x253c <malloc+0x9a>
    2518:	12 96       	adiw	r26, 0x02	; 2
    251a:	8d 91       	ld	r24, X+
    251c:	9c 91       	ld	r25, X
    251e:	13 97       	sbiw	r26, 0x03	; 3
    2520:	61 15       	cp	r22, r1
    2522:	71 05       	cpc	r23, r1
    2524:	21 f0       	breq	.+8      	; 0x252e <malloc+0x8c>
    2526:	fb 01       	movw	r30, r22
    2528:	93 83       	std	Z+3, r25	; 0x03
    252a:	82 83       	std	Z+2, r24	; 0x02
    252c:	04 c0       	rjmp	.+8      	; 0x2536 <malloc+0x94>
    252e:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <__flp+0x1>
    2532:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <__flp>
    2536:	fd 01       	movw	r30, r26
    2538:	32 96       	adiw	r30, 0x02	; 2
    253a:	44 c0       	rjmp	.+136    	; 0x25c4 <malloc+0x122>
    253c:	fd 01       	movw	r30, r26
    253e:	e2 0f       	add	r30, r18
    2540:	f3 1f       	adc	r31, r19
    2542:	81 93       	st	Z+, r24
    2544:	91 93       	st	Z+, r25
    2546:	22 50       	subi	r18, 0x02	; 2
    2548:	31 09       	sbc	r19, r1
    254a:	2d 93       	st	X+, r18
    254c:	3c 93       	st	X, r19
    254e:	3a c0       	rjmp	.+116    	; 0x25c4 <malloc+0x122>
    2550:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    2554:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    2558:	23 2b       	or	r18, r19
    255a:	41 f4       	brne	.+16     	; 0x256c <malloc+0xca>
    255c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2560:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2564:	30 93 e4 03 	sts	0x03E4, r19	; 0x8003e4 <__brkval+0x1>
    2568:	20 93 e3 03 	sts	0x03E3, r18	; 0x8003e3 <__brkval>
    256c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2570:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2574:	21 15       	cp	r18, r1
    2576:	31 05       	cpc	r19, r1
    2578:	41 f4       	brne	.+16     	; 0x258a <malloc+0xe8>
    257a:	2d b7       	in	r18, 0x3d	; 61
    257c:	3e b7       	in	r19, 0x3e	; 62
    257e:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2582:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2586:	24 1b       	sub	r18, r20
    2588:	35 0b       	sbc	r19, r21
    258a:	e0 91 e3 03 	lds	r30, 0x03E3	; 0x8003e3 <__brkval>
    258e:	f0 91 e4 03 	lds	r31, 0x03E4	; 0x8003e4 <__brkval+0x1>
    2592:	e2 17       	cp	r30, r18
    2594:	f3 07       	cpc	r31, r19
    2596:	a0 f4       	brcc	.+40     	; 0x25c0 <malloc+0x11e>
    2598:	2e 1b       	sub	r18, r30
    259a:	3f 0b       	sbc	r19, r31
    259c:	28 17       	cp	r18, r24
    259e:	39 07       	cpc	r19, r25
    25a0:	78 f0       	brcs	.+30     	; 0x25c0 <malloc+0x11e>
    25a2:	ac 01       	movw	r20, r24
    25a4:	4e 5f       	subi	r20, 0xFE	; 254
    25a6:	5f 4f       	sbci	r21, 0xFF	; 255
    25a8:	24 17       	cp	r18, r20
    25aa:	35 07       	cpc	r19, r21
    25ac:	48 f0       	brcs	.+18     	; 0x25c0 <malloc+0x11e>
    25ae:	4e 0f       	add	r20, r30
    25b0:	5f 1f       	adc	r21, r31
    25b2:	50 93 e4 03 	sts	0x03E4, r21	; 0x8003e4 <__brkval+0x1>
    25b6:	40 93 e3 03 	sts	0x03E3, r20	; 0x8003e3 <__brkval>
    25ba:	81 93       	st	Z+, r24
    25bc:	91 93       	st	Z+, r25
    25be:	02 c0       	rjmp	.+4      	; 0x25c4 <malloc+0x122>
    25c0:	e0 e0       	ldi	r30, 0x00	; 0
    25c2:	f0 e0       	ldi	r31, 0x00	; 0
    25c4:	cf 01       	movw	r24, r30
    25c6:	df 91       	pop	r29
    25c8:	cf 91       	pop	r28
    25ca:	08 95       	ret

000025cc <free>:
    25cc:	0f 93       	push	r16
    25ce:	1f 93       	push	r17
    25d0:	cf 93       	push	r28
    25d2:	df 93       	push	r29
    25d4:	00 97       	sbiw	r24, 0x00	; 0
    25d6:	09 f4       	brne	.+2      	; 0x25da <free+0xe>
    25d8:	8c c0       	rjmp	.+280    	; 0x26f2 <free+0x126>
    25da:	fc 01       	movw	r30, r24
    25dc:	32 97       	sbiw	r30, 0x02	; 2
    25de:	13 82       	std	Z+3, r1	; 0x03
    25e0:	12 82       	std	Z+2, r1	; 0x02
    25e2:	00 91 e5 03 	lds	r16, 0x03E5	; 0x8003e5 <__flp>
    25e6:	10 91 e6 03 	lds	r17, 0x03E6	; 0x8003e6 <__flp+0x1>
    25ea:	01 15       	cp	r16, r1
    25ec:	11 05       	cpc	r17, r1
    25ee:	81 f4       	brne	.+32     	; 0x2610 <free+0x44>
    25f0:	20 81       	ld	r18, Z
    25f2:	31 81       	ldd	r19, Z+1	; 0x01
    25f4:	82 0f       	add	r24, r18
    25f6:	93 1f       	adc	r25, r19
    25f8:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    25fc:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    2600:	28 17       	cp	r18, r24
    2602:	39 07       	cpc	r19, r25
    2604:	79 f5       	brne	.+94     	; 0x2664 <free+0x98>
    2606:	f0 93 e4 03 	sts	0x03E4, r31	; 0x8003e4 <__brkval+0x1>
    260a:	e0 93 e3 03 	sts	0x03E3, r30	; 0x8003e3 <__brkval>
    260e:	71 c0       	rjmp	.+226    	; 0x26f2 <free+0x126>
    2610:	d8 01       	movw	r26, r16
    2612:	40 e0       	ldi	r20, 0x00	; 0
    2614:	50 e0       	ldi	r21, 0x00	; 0
    2616:	ae 17       	cp	r26, r30
    2618:	bf 07       	cpc	r27, r31
    261a:	50 f4       	brcc	.+20     	; 0x2630 <free+0x64>
    261c:	12 96       	adiw	r26, 0x02	; 2
    261e:	2d 91       	ld	r18, X+
    2620:	3c 91       	ld	r19, X
    2622:	13 97       	sbiw	r26, 0x03	; 3
    2624:	ad 01       	movw	r20, r26
    2626:	21 15       	cp	r18, r1
    2628:	31 05       	cpc	r19, r1
    262a:	09 f1       	breq	.+66     	; 0x266e <free+0xa2>
    262c:	d9 01       	movw	r26, r18
    262e:	f3 cf       	rjmp	.-26     	; 0x2616 <free+0x4a>
    2630:	9d 01       	movw	r18, r26
    2632:	da 01       	movw	r26, r20
    2634:	33 83       	std	Z+3, r19	; 0x03
    2636:	22 83       	std	Z+2, r18	; 0x02
    2638:	60 81       	ld	r22, Z
    263a:	71 81       	ldd	r23, Z+1	; 0x01
    263c:	86 0f       	add	r24, r22
    263e:	97 1f       	adc	r25, r23
    2640:	82 17       	cp	r24, r18
    2642:	93 07       	cpc	r25, r19
    2644:	69 f4       	brne	.+26     	; 0x2660 <free+0x94>
    2646:	ec 01       	movw	r28, r24
    2648:	28 81       	ld	r18, Y
    264a:	39 81       	ldd	r19, Y+1	; 0x01
    264c:	26 0f       	add	r18, r22
    264e:	37 1f       	adc	r19, r23
    2650:	2e 5f       	subi	r18, 0xFE	; 254
    2652:	3f 4f       	sbci	r19, 0xFF	; 255
    2654:	31 83       	std	Z+1, r19	; 0x01
    2656:	20 83       	st	Z, r18
    2658:	8a 81       	ldd	r24, Y+2	; 0x02
    265a:	9b 81       	ldd	r25, Y+3	; 0x03
    265c:	93 83       	std	Z+3, r25	; 0x03
    265e:	82 83       	std	Z+2, r24	; 0x02
    2660:	45 2b       	or	r20, r21
    2662:	29 f4       	brne	.+10     	; 0x266e <free+0xa2>
    2664:	f0 93 e6 03 	sts	0x03E6, r31	; 0x8003e6 <__flp+0x1>
    2668:	e0 93 e5 03 	sts	0x03E5, r30	; 0x8003e5 <__flp>
    266c:	42 c0       	rjmp	.+132    	; 0x26f2 <free+0x126>
    266e:	13 96       	adiw	r26, 0x03	; 3
    2670:	fc 93       	st	X, r31
    2672:	ee 93       	st	-X, r30
    2674:	12 97       	sbiw	r26, 0x02	; 2
    2676:	ed 01       	movw	r28, r26
    2678:	49 91       	ld	r20, Y+
    267a:	59 91       	ld	r21, Y+
    267c:	9e 01       	movw	r18, r28
    267e:	24 0f       	add	r18, r20
    2680:	35 1f       	adc	r19, r21
    2682:	e2 17       	cp	r30, r18
    2684:	f3 07       	cpc	r31, r19
    2686:	71 f4       	brne	.+28     	; 0x26a4 <free+0xd8>
    2688:	80 81       	ld	r24, Z
    268a:	91 81       	ldd	r25, Z+1	; 0x01
    268c:	84 0f       	add	r24, r20
    268e:	95 1f       	adc	r25, r21
    2690:	02 96       	adiw	r24, 0x02	; 2
    2692:	11 96       	adiw	r26, 0x01	; 1
    2694:	9c 93       	st	X, r25
    2696:	8e 93       	st	-X, r24
    2698:	82 81       	ldd	r24, Z+2	; 0x02
    269a:	93 81       	ldd	r25, Z+3	; 0x03
    269c:	13 96       	adiw	r26, 0x03	; 3
    269e:	9c 93       	st	X, r25
    26a0:	8e 93       	st	-X, r24
    26a2:	12 97       	sbiw	r26, 0x02	; 2
    26a4:	e0 e0       	ldi	r30, 0x00	; 0
    26a6:	f0 e0       	ldi	r31, 0x00	; 0
    26a8:	d8 01       	movw	r26, r16
    26aa:	12 96       	adiw	r26, 0x02	; 2
    26ac:	8d 91       	ld	r24, X+
    26ae:	9c 91       	ld	r25, X
    26b0:	13 97       	sbiw	r26, 0x03	; 3
    26b2:	00 97       	sbiw	r24, 0x00	; 0
    26b4:	19 f0       	breq	.+6      	; 0x26bc <free+0xf0>
    26b6:	f8 01       	movw	r30, r16
    26b8:	8c 01       	movw	r16, r24
    26ba:	f6 cf       	rjmp	.-20     	; 0x26a8 <free+0xdc>
    26bc:	8d 91       	ld	r24, X+
    26be:	9c 91       	ld	r25, X
    26c0:	98 01       	movw	r18, r16
    26c2:	2e 5f       	subi	r18, 0xFE	; 254
    26c4:	3f 4f       	sbci	r19, 0xFF	; 255
    26c6:	82 0f       	add	r24, r18
    26c8:	93 1f       	adc	r25, r19
    26ca:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    26ce:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    26d2:	28 17       	cp	r18, r24
    26d4:	39 07       	cpc	r19, r25
    26d6:	69 f4       	brne	.+26     	; 0x26f2 <free+0x126>
    26d8:	30 97       	sbiw	r30, 0x00	; 0
    26da:	29 f4       	brne	.+10     	; 0x26e6 <free+0x11a>
    26dc:	10 92 e6 03 	sts	0x03E6, r1	; 0x8003e6 <__flp+0x1>
    26e0:	10 92 e5 03 	sts	0x03E5, r1	; 0x8003e5 <__flp>
    26e4:	02 c0       	rjmp	.+4      	; 0x26ea <free+0x11e>
    26e6:	13 82       	std	Z+3, r1	; 0x03
    26e8:	12 82       	std	Z+2, r1	; 0x02
    26ea:	10 93 e4 03 	sts	0x03E4, r17	; 0x8003e4 <__brkval+0x1>
    26ee:	00 93 e3 03 	sts	0x03E3, r16	; 0x8003e3 <__brkval>
    26f2:	df 91       	pop	r29
    26f4:	cf 91       	pop	r28
    26f6:	1f 91       	pop	r17
    26f8:	0f 91       	pop	r16
    26fa:	08 95       	ret

000026fc <memset>:
    26fc:	dc 01       	movw	r26, r24
    26fe:	01 c0       	rjmp	.+2      	; 0x2702 <memset+0x6>
    2700:	6d 93       	st	X+, r22
    2702:	41 50       	subi	r20, 0x01	; 1
    2704:	50 40       	sbci	r21, 0x00	; 0
    2706:	e0 f7       	brcc	.-8      	; 0x2700 <memset+0x4>
    2708:	08 95       	ret

0000270a <_exit>:
    270a:	f8 94       	cli

0000270c <__stop_program>:
    270c:	ff cf       	rjmp	.-2      	; 0x270c <__stop_program>
