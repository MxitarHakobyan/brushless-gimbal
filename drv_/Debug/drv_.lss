
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017c  00800200  000025c2  00002656  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006b  0080037c  0080037c  000027d2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000027d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002830  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  00002870  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e10  00000000  00000000  00002ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000016ec  00000000  00000000  000058c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001536  00000000  00000000  00006fb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006f0  00000000  00000000  000084ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bc7  00000000  00000000  00008bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e68  00000000  00000000  000097a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  0000b60b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	27 c1       	rjmp	.+590    	; 0x250 <__ctors_end>
       2:	00 00       	nop
       4:	45 c1       	rjmp	.+650    	; 0x290 <__bad_interrupt>
       6:	00 00       	nop
       8:	43 c1       	rjmp	.+646    	; 0x290 <__bad_interrupt>
       a:	00 00       	nop
       c:	41 c1       	rjmp	.+642    	; 0x290 <__bad_interrupt>
       e:	00 00       	nop
      10:	3f c1       	rjmp	.+638    	; 0x290 <__bad_interrupt>
      12:	00 00       	nop
      14:	3d c1       	rjmp	.+634    	; 0x290 <__bad_interrupt>
      16:	00 00       	nop
      18:	3b c1       	rjmp	.+630    	; 0x290 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	39 c1       	rjmp	.+626    	; 0x290 <__bad_interrupt>
      1e:	00 00       	nop
      20:	37 c1       	rjmp	.+622    	; 0x290 <__bad_interrupt>
      22:	00 00       	nop
      24:	35 c1       	rjmp	.+618    	; 0x290 <__bad_interrupt>
      26:	00 00       	nop
      28:	33 c1       	rjmp	.+614    	; 0x290 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	31 c1       	rjmp	.+610    	; 0x290 <__bad_interrupt>
      2e:	00 00       	nop
      30:	2f c1       	rjmp	.+606    	; 0x290 <__bad_interrupt>
      32:	00 00       	nop
      34:	2d c1       	rjmp	.+602    	; 0x290 <__bad_interrupt>
      36:	00 00       	nop
      38:	2b c1       	rjmp	.+598    	; 0x290 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	29 c1       	rjmp	.+594    	; 0x290 <__bad_interrupt>
      3e:	00 00       	nop
      40:	27 c1       	rjmp	.+590    	; 0x290 <__bad_interrupt>
      42:	00 00       	nop
      44:	25 c1       	rjmp	.+586    	; 0x290 <__bad_interrupt>
      46:	00 00       	nop
      48:	23 c1       	rjmp	.+582    	; 0x290 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	21 c1       	rjmp	.+578    	; 0x290 <__bad_interrupt>
      4e:	00 00       	nop
      50:	1f c1       	rjmp	.+574    	; 0x290 <__bad_interrupt>
      52:	00 00       	nop
      54:	1d c1       	rjmp	.+570    	; 0x290 <__bad_interrupt>
      56:	00 00       	nop
      58:	1b c1       	rjmp	.+566    	; 0x290 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	c7 c6       	rjmp	.+3470   	; 0xdec <__vector_23>
      5e:	00 00       	nop
      60:	17 c1       	rjmp	.+558    	; 0x290 <__bad_interrupt>
      62:	00 00       	nop
      64:	15 c1       	rjmp	.+554    	; 0x290 <__bad_interrupt>
      66:	00 00       	nop
      68:	13 c1       	rjmp	.+550    	; 0x290 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	11 c1       	rjmp	.+546    	; 0x290 <__bad_interrupt>
      6e:	00 00       	nop
      70:	0f c1       	rjmp	.+542    	; 0x290 <__bad_interrupt>
      72:	00 00       	nop
      74:	0d c1       	rjmp	.+538    	; 0x290 <__bad_interrupt>
      76:	00 00       	nop
      78:	0b c1       	rjmp	.+534    	; 0x290 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	09 c1       	rjmp	.+530    	; 0x290 <__bad_interrupt>
      7e:	00 00       	nop
      80:	07 c1       	rjmp	.+526    	; 0x290 <__bad_interrupt>
      82:	00 00       	nop
      84:	05 c1       	rjmp	.+522    	; 0x290 <__bad_interrupt>
      86:	00 00       	nop
      88:	03 c1       	rjmp	.+518    	; 0x290 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	01 c1       	rjmp	.+514    	; 0x290 <__bad_interrupt>
      8e:	00 00       	nop
      90:	ff c0       	rjmp	.+510    	; 0x290 <__bad_interrupt>
      92:	00 00       	nop
      94:	fd c0       	rjmp	.+506    	; 0x290 <__bad_interrupt>
      96:	00 00       	nop
      98:	fb c0       	rjmp	.+502    	; 0x290 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	f9 c0       	rjmp	.+498    	; 0x290 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	f7 c0       	rjmp	.+494    	; 0x290 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	f5 c0       	rjmp	.+490    	; 0x290 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	f3 c0       	rjmp	.+486    	; 0x290 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	f1 c0       	rjmp	.+482    	; 0x290 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	ef c0       	rjmp	.+478    	; 0x290 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	ed c0       	rjmp	.+474    	; 0x290 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	eb c0       	rjmp	.+470    	; 0x290 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	e1 c6       	rjmp	.+3522   	; 0xe80 <__vector_47>
      be:	00 00       	nop
      c0:	e7 c0       	rjmp	.+462    	; 0x290 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	e5 c0       	rjmp	.+458    	; 0x290 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	e3 c0       	rjmp	.+454    	; 0x290 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	e1 c0       	rjmp	.+450    	; 0x290 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	df c0       	rjmp	.+446    	; 0x290 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	dd c0       	rjmp	.+442    	; 0x290 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	db c0       	rjmp	.+438    	; 0x290 <__bad_interrupt>
      da:	00 00       	nop
      dc:	d9 c0       	rjmp	.+434    	; 0x290 <__bad_interrupt>
      de:	00 00       	nop
      e0:	d7 c0       	rjmp	.+430    	; 0x290 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	08 4a       	sbci	r16, 0xA8	; 168
      fa:	d7 3b       	cpi	r29, 0xB7	; 183
      fc:	3b ce       	rjmp	.-906    	; 0xfffffd74 <__eeprom_end+0xff7efd74>
      fe:	01 6e       	ori	r16, 0xE1	; 225
     100:	84 bc       	out	0x24, r8	; 36
     102:	bf fd       	.word	0xfdbf	; ????
     104:	c1 2f       	mov	r28, r17
     106:	3d 6c       	ori	r19, 0xCD	; 205
     108:	74 31       	cpi	r23, 0x14	; 20
     10a:	9a bd       	out	0x2a, r25	; 42
     10c:	56 83       	std	Z+6, r21	; 0x06
     10e:	3d da       	rcall	.-2950   	; 0xfffff58a <__eeprom_end+0xff7ef58a>
     110:	3d 00       	.word	0x003d	; ????
     112:	c7 7f       	andi	r28, 0xF7	; 247
     114:	11 be       	out	0x31, r1	; 49
     116:	d9 e4       	ldi	r29, 0x49	; 73
     118:	bb 4c       	sbci	r27, 0xCB	; 203
     11a:	3e 91       	ld	r19, -X
     11c:	6b aa       	std	Y+51, r6	; 0x33
     11e:	aa be       	out	0x3a, r10	; 58
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	3f 07       	cpc	r19, r31
     126:	2c 7a       	andi	r18, 0xAC	; 172
     128:	a5 ba       	out	0x15, r10	; 21
     12a:	6c c5       	rjmp	.+2776   	; 0xc04 <mpu6050_readBytes+0x2a>
     12c:	90 da       	rcall	.-2784   	; 0xfffff64e <__eeprom_end+0xff7ef64e>
     12e:	3b 93       	.word	0x933b	; ????
     130:	65 fc       	sbrc	r6, 5
     132:	8b bc       	out	0x2b, r8	; 43
     134:	53 f8       	bld	r5, 3
     136:	10 fd       	sbrc	r17, 0
     138:	3c 56       	subi	r19, 0x6C	; 108
     13a:	92 83       	std	Z+2, r25	; 0x02
     13c:	4d bd       	out	0x2d, r20	; 45
     13e:	87 9d       	mul	r24, r7
     140:	3a b6       	in	r3, 0x3a	; 58
     142:	3d cb       	rjmp	.-2438   	; 0xfffff7be <__eeprom_end+0xff7ef7be>
     144:	c9 bf       	out	0x39, r28	; 57
     146:	5b be       	out	0x3b, r5	; 59
     148:	73 da       	rcall	.-2842   	; 0xfffff630 <__eeprom_end+0xff7ef630>
     14a:	0f c9       	rjmp	.-3554   	; 0xfffff36a <__eeprom_end+0xff7ef36a>
     14c:	3f 00       	.word	0x003f	; ????

0000014e <__trampolines_end>:
     14e:	6e 61       	ori	r22, 0x1E	; 30
     150:	6e 00       	.word	0x006e	; ????

00000152 <__c.2332>:
     152:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     162:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     172:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     182:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     192:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1a2:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1b2:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1c2:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     1d2:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1e2:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1f2:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     202:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     212:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     222:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     232:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     242:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000250 <__ctors_end>:
     250:	11 24       	eor	r1, r1
     252:	1f be       	out	0x3f, r1	; 63
     254:	cf ef       	ldi	r28, 0xFF	; 255
     256:	d1 e2       	ldi	r29, 0x21	; 33
     258:	de bf       	out	0x3e, r29	; 62
     25a:	cd bf       	out	0x3d, r28	; 61
     25c:	00 e0       	ldi	r16, 0x00	; 0
     25e:	0c bf       	out	0x3c, r16	; 60

00000260 <__do_copy_data>:
     260:	13 e0       	ldi	r17, 0x03	; 3
     262:	a0 e0       	ldi	r26, 0x00	; 0
     264:	b2 e0       	ldi	r27, 0x02	; 2
     266:	e2 ec       	ldi	r30, 0xC2	; 194
     268:	f5 e2       	ldi	r31, 0x25	; 37
     26a:	00 e0       	ldi	r16, 0x00	; 0
     26c:	0b bf       	out	0x3b, r16	; 59
     26e:	02 c0       	rjmp	.+4      	; 0x274 <__do_copy_data+0x14>
     270:	07 90       	elpm	r0, Z+
     272:	0d 92       	st	X+, r0
     274:	ac 37       	cpi	r26, 0x7C	; 124
     276:	b1 07       	cpc	r27, r17
     278:	d9 f7       	brne	.-10     	; 0x270 <__do_copy_data+0x10>

0000027a <__do_clear_bss>:
     27a:	23 e0       	ldi	r18, 0x03	; 3
     27c:	ac e7       	ldi	r26, 0x7C	; 124
     27e:	b3 e0       	ldi	r27, 0x03	; 3
     280:	01 c0       	rjmp	.+2      	; 0x284 <.do_clear_bss_start>

00000282 <.do_clear_bss_loop>:
     282:	1d 92       	st	X+, r1

00000284 <.do_clear_bss_start>:
     284:	a7 3e       	cpi	r26, 0xE7	; 231
     286:	b2 07       	cpc	r27, r18
     288:	e1 f7       	brne	.-8      	; 0x282 <.do_clear_bss_loop>
     28a:	6a d2       	rcall	.+1236   	; 0x760 <main>
     28c:	0c 94 df 12 	jmp	0x25be	; 0x25be <_exit>

00000290 <__bad_interrupt>:
     290:	b7 ce       	rjmp	.-658    	; 0x0 <__vectors>

00000292 <init_gpio>:
{
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     292:	e1 e0       	ldi	r30, 0x01	; 1
     294:	f1 e0       	ldi	r31, 0x01	; 1
     296:	80 81       	ld	r24, Z
     298:	88 60       	ori	r24, 0x08	; 8
     29a:	80 83       	st	Z, r24
     29c:	80 81       	ld	r24, Z
     29e:	80 61       	ori	r24, 0x10	; 16
     2a0:	80 83       	st	Z, r24
     2a2:	80 81       	ld	r24, Z
     2a4:	80 62       	ori	r24, 0x20	; 32
     2a6:	80 83       	st	Z, r24
     2a8:	08 95       	ret

000002aa <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     2aa:	e0 91 7c 03 	lds	r30, 0x037C	; 0x80037c <__data_end>
     2ae:	f0 91 7d 03 	lds	r31, 0x037D	; 0x80037d <__data_end+0x1>
     2b2:	ea 5f       	subi	r30, 0xFA	; 250
     2b4:	fd 4f       	sbci	r31, 0xFD	; 253
     2b6:	80 81       	ld	r24, Z
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2be:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     2c2:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step>
     2c6:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step+0x1>
     2ca:	ea 5f       	subi	r30, 0xFA	; 250
     2cc:	fd 4f       	sbci	r31, 0xFD	; 253
     2ce:	80 81       	ld	r24, Z
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     2d6:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     2da:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step>
     2de:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step+0x1>
     2e2:	ea 5f       	subi	r30, 0xFA	; 250
     2e4:	fd 4f       	sbci	r31, 0xFD	; 253
     2e6:	80 81       	ld	r24, Z
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     2ee:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     2f2:	60 91 8b 03 	lds	r22, 0x038B	; 0x80038b <incr>
     2f6:	70 91 8c 03 	lds	r23, 0x038C	; 0x80038c <incr+0x1>
     2fa:	40 91 7c 03 	lds	r20, 0x037C	; 0x80037c <__data_end>
     2fe:	50 91 7d 03 	lds	r21, 0x037D	; 0x80037d <__data_end+0x1>
     302:	46 0f       	add	r20, r22
     304:	57 1f       	adc	r21, r23
     306:	50 93 7d 03 	sts	0x037D, r21	; 0x80037d <__data_end+0x1>
     30a:	40 93 7c 03 	sts	0x037C, r20	; 0x80037c <__data_end>
	V_step=V_step+incr;
     30e:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step>
     312:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step+0x1>
     316:	26 0f       	add	r18, r22
     318:	37 1f       	adc	r19, r23
     31a:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     31e:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	W_step=W_step+incr;
     322:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step>
     326:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step+0x1>
     32a:	86 0f       	add	r24, r22
     32c:	97 1f       	adc	r25, r23
     32e:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     332:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	if(U_step > SINE_TABLE_SZ)
     336:	49 36       	cpi	r20, 0x69	; 105
     338:	61 e0       	ldi	r22, 0x01	; 1
     33a:	56 07       	cpc	r21, r22
     33c:	2c f0       	brlt	.+10     	; 0x348 <PWM_update+0x9e>
	U_step = 0;
     33e:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <__data_end+0x1>
     342:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <__data_end>
     346:	08 c0       	rjmp	.+16     	; 0x358 <PWM_update+0xae>
	if(U_step < 0)
     348:	55 23       	and	r21, r21
     34a:	34 f4       	brge	.+12     	; 0x358 <PWM_update+0xae>
	U_step = SINE_TABLE_SZ;
     34c:	48 e6       	ldi	r20, 0x68	; 104
     34e:	51 e0       	ldi	r21, 0x01	; 1
     350:	50 93 7d 03 	sts	0x037D, r21	; 0x80037d <__data_end+0x1>
     354:	40 93 7c 03 	sts	0x037C, r20	; 0x80037c <__data_end>
	
	if(V_step > SINE_TABLE_SZ)
     358:	29 36       	cpi	r18, 0x69	; 105
     35a:	41 e0       	ldi	r20, 0x01	; 1
     35c:	34 07       	cpc	r19, r20
     35e:	2c f0       	brlt	.+10     	; 0x36a <PWM_update+0xc0>
	V_step = 0;
     360:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step+0x1>
     364:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step>
     368:	08 c0       	rjmp	.+16     	; 0x37a <PWM_update+0xd0>
	if(V_step < 0)
     36a:	33 23       	and	r19, r19
     36c:	34 f4       	brge	.+12     	; 0x37a <PWM_update+0xd0>
	V_step = SINE_TABLE_SZ;
     36e:	28 e6       	ldi	r18, 0x68	; 104
     370:	31 e0       	ldi	r19, 0x01	; 1
     372:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step+0x1>
     376:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     37a:	89 36       	cpi	r24, 0x69	; 105
     37c:	61 e0       	ldi	r22, 0x01	; 1
     37e:	96 07       	cpc	r25, r22
     380:	2c f0       	brlt	.+10     	; 0x38c <PWM_update+0xe2>
	W_step = 0;
     382:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step+0x1>
     386:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step>
     38a:	08 c0       	rjmp	.+16     	; 0x39c <PWM_update+0xf2>
	if(W_step < 0)
     38c:	99 23       	and	r25, r25
     38e:	34 f4       	brge	.+12     	; 0x39c <PWM_update+0xf2>
	W_step = SINE_TABLE_SZ;
     390:	88 e6       	ldi	r24, 0x68	; 104
     392:	91 e0       	ldi	r25, 0x01	; 1
     394:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     398:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	//_delay_us(100);
	OCR5A=pwm_delay;
     39c:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <pwm_delay>
     3a0:	90 91 88 03 	lds	r25, 0x0388	; 0x800388 <pwm_delay+0x1>
     3a4:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     3a8:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     3ac:	08 95       	ret

000003ae <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     3ae:	4f 92       	push	r4
     3b0:	5f 92       	push	r5
     3b2:	6f 92       	push	r6
     3b4:	7f 92       	push	r7
     3b6:	8f 92       	push	r8
     3b8:	9f 92       	push	r9
     3ba:	af 92       	push	r10
     3bc:	bf 92       	push	r11
     3be:	cf 92       	push	r12
     3c0:	df 92       	push	r13
     3c2:	ef 92       	push	r14
     3c4:	ff 92       	push	r15
     3c6:	0f 93       	push	r16
     3c8:	1f 93       	push	r17
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	cd b7       	in	r28, 0x3d	; 61
     3d0:	de b7       	in	r29, 0x3e	; 62
     3d2:	6c 97       	sbiw	r28, 0x1c	; 28
     3d4:	0f b6       	in	r0, 0x3f	; 63
     3d6:	f8 94       	cli
     3d8:	de bf       	out	0x3e, r29	; 62
     3da:	0f be       	out	0x3f, r0	; 63
     3dc:	cd bf       	out	0x3d, r28	; 61
     3de:	69 8b       	std	Y+17, r22	; 0x11
     3e0:	7a 8b       	std	Y+18, r23	; 0x12
     3e2:	8b 8b       	std	Y+19, r24	; 0x13
     3e4:	9c 8b       	std	Y+20, r25	; 0x14
     3e6:	ca 01       	movw	r24, r20
     3e8:	b9 01       	movw	r22, r18
     3ea:	e9 82       	std	Y+1, r14	; 0x01
     3ec:	fa 82       	std	Y+2, r15	; 0x02
     3ee:	0b 83       	std	Y+3, r16	; 0x03
     3f0:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     3f2:	c0 90 99 03 	lds	r12, 0x0399	; 0x800399 <bias>
     3f6:	d0 90 9a 03 	lds	r13, 0x039A	; 0x80039a <bias+0x1>
     3fa:	e0 90 9b 03 	lds	r14, 0x039B	; 0x80039b <bias+0x2>
     3fe:	f0 90 9c 03 	lds	r15, 0x039C	; 0x80039c <bias+0x3>
     402:	a7 01       	movw	r20, r14
     404:	96 01       	movw	r18, r12
     406:	8b d6       	rcall	.+3350   	; 0x111e <__subsf3>
     408:	60 93 91 03 	sts	0x0391, r22	; 0x800391 <rate>
     40c:	70 93 92 03 	sts	0x0392, r23	; 0x800392 <rate+0x1>
     410:	80 93 93 03 	sts	0x0393, r24	; 0x800393 <rate+0x2>
     414:	90 93 94 03 	sts	0x0394, r25	; 0x800394 <rate+0x3>
	angle += dt * rate;
     418:	29 81       	ldd	r18, Y+1	; 0x01
     41a:	3a 81       	ldd	r19, Y+2	; 0x02
     41c:	4b 81       	ldd	r20, Y+3	; 0x03
     41e:	5c 81       	ldd	r21, Y+4	; 0x04
     420:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     424:	20 91 a1 03 	lds	r18, 0x03A1	; 0x8003a1 <angle>
     428:	30 91 a2 03 	lds	r19, 0x03A2	; 0x8003a2 <angle+0x1>
     42c:	40 91 a3 03 	lds	r20, 0x03A3	; 0x8003a3 <angle+0x2>
     430:	50 91 a4 03 	lds	r21, 0x03A4	; 0x8003a4 <angle+0x3>
     434:	75 d6       	rcall	.+3306   	; 0x1120 <__addsf3>
     436:	6d 8b       	std	Y+21, r22	; 0x15
     438:	7e 8b       	std	Y+22, r23	; 0x16
     43a:	8f 8b       	std	Y+23, r24	; 0x17
     43c:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     43e:	80 90 b1 03 	lds	r8, 0x03B1	; 0x8003b1 <P+0xc>
     442:	90 90 b2 03 	lds	r9, 0x03B2	; 0x8003b2 <P+0xd>
     446:	a0 90 b3 03 	lds	r10, 0x03B3	; 0x8003b3 <P+0xe>
     44a:	b0 90 b4 03 	lds	r11, 0x03B4	; 0x8003b4 <P+0xf>
     44e:	a5 01       	movw	r20, r10
     450:	94 01       	movw	r18, r8
     452:	69 81       	ldd	r22, Y+1	; 0x01
     454:	7a 81       	ldd	r23, Y+2	; 0x02
     456:	8b 81       	ldd	r24, Y+3	; 0x03
     458:	9c 81       	ldd	r25, Y+4	; 0x04
     45a:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     45e:	6d 83       	std	Y+5, r22	; 0x05
     460:	7e 83       	std	Y+6, r23	; 0x06
     462:	8f 83       	std	Y+7, r24	; 0x07
     464:	98 87       	std	Y+8, r25	; 0x08
     466:	40 90 a9 03 	lds	r4, 0x03A9	; 0x8003a9 <P+0x4>
     46a:	50 90 aa 03 	lds	r5, 0x03AA	; 0x8003aa <P+0x5>
     46e:	60 90 ab 03 	lds	r6, 0x03AB	; 0x8003ab <P+0x6>
     472:	70 90 ac 03 	lds	r7, 0x03AC	; 0x8003ac <P+0x7>
     476:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <P+0x8>
     47a:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <P+0x9>
     47e:	a0 91 af 03 	lds	r26, 0x03AF	; 0x8003af <P+0xa>
     482:	b0 91 b0 03 	lds	r27, 0x03B0	; 0x8003b0 <P+0xb>
     486:	8d 87       	std	Y+13, r24	; 0x0d
     488:	9e 87       	std	Y+14, r25	; 0x0e
     48a:	af 87       	std	Y+15, r26	; 0x0f
     48c:	b8 8b       	std	Y+16, r27	; 0x10
     48e:	a3 01       	movw	r20, r6
     490:	92 01       	movw	r18, r4
     492:	6d 81       	ldd	r22, Y+5	; 0x05
     494:	7e 81       	ldd	r23, Y+6	; 0x06
     496:	8f 81       	ldd	r24, Y+7	; 0x07
     498:	98 85       	ldd	r25, Y+8	; 0x08
     49a:	41 d6       	rcall	.+3202   	; 0x111e <__subsf3>
     49c:	2d 85       	ldd	r18, Y+13	; 0x0d
     49e:	3e 85       	ldd	r19, Y+14	; 0x0e
     4a0:	4f 85       	ldd	r20, Y+15	; 0x0f
     4a2:	58 89       	ldd	r21, Y+16	; 0x10
     4a4:	3c d6       	rcall	.+3192   	; 0x111e <__subsf3>
     4a6:	20 91 95 03 	lds	r18, 0x0395	; 0x800395 <Q_angle>
     4aa:	30 91 96 03 	lds	r19, 0x0396	; 0x800396 <Q_angle+0x1>
     4ae:	40 91 97 03 	lds	r20, 0x0397	; 0x800397 <Q_angle+0x2>
     4b2:	50 91 98 03 	lds	r21, 0x0398	; 0x800398 <Q_angle+0x3>
     4b6:	34 d6       	rcall	.+3176   	; 0x1120 <__addsf3>
     4b8:	29 81       	ldd	r18, Y+1	; 0x01
     4ba:	3a 81       	ldd	r19, Y+2	; 0x02
     4bc:	4b 81       	ldd	r20, Y+3	; 0x03
     4be:	5c 81       	ldd	r21, Y+4	; 0x04
     4c0:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     4c4:	a5 ea       	ldi	r26, 0xA5	; 165
     4c6:	b3 e0       	ldi	r27, 0x03	; 3
     4c8:	2d 91       	ld	r18, X+
     4ca:	3d 91       	ld	r19, X+
     4cc:	4d 91       	ld	r20, X+
     4ce:	5c 91       	ld	r21, X
     4d0:	27 d6       	rcall	.+3150   	; 0x1120 <__addsf3>
     4d2:	69 87       	std	Y+9, r22	; 0x09
     4d4:	7a 87       	std	Y+10, r23	; 0x0a
     4d6:	8b 87       	std	Y+11, r24	; 0x0b
	P[0][1] -= dt * P[1][1];
     4d8:	9c 87       	std	Y+12, r25	; 0x0c
     4da:	2d 81       	ldd	r18, Y+5	; 0x05
     4dc:	3e 81       	ldd	r19, Y+6	; 0x06
     4de:	4f 81       	ldd	r20, Y+7	; 0x07
     4e0:	58 85       	ldd	r21, Y+8	; 0x08
     4e2:	c3 01       	movw	r24, r6
     4e4:	b2 01       	movw	r22, r4
     4e6:	1b d6       	rcall	.+3126   	; 0x111e <__subsf3>
     4e8:	2b 01       	movw	r4, r22
	P[1][0] -= dt * P[1][1];
     4ea:	3c 01       	movw	r6, r24
     4ec:	2d 81       	ldd	r18, Y+5	; 0x05
     4ee:	3e 81       	ldd	r19, Y+6	; 0x06
     4f0:	4f 81       	ldd	r20, Y+7	; 0x07
     4f2:	58 85       	ldd	r21, Y+8	; 0x08
     4f4:	6d 85       	ldd	r22, Y+13	; 0x0d
     4f6:	7e 85       	ldd	r23, Y+14	; 0x0e
     4f8:	8f 85       	ldd	r24, Y+15	; 0x0f
     4fa:	98 89       	ldd	r25, Y+16	; 0x10
     4fc:	10 d6       	rcall	.+3104   	; 0x111e <__subsf3>
     4fe:	6d 87       	std	Y+13, r22	; 0x0d
     500:	7e 87       	std	Y+14, r23	; 0x0e
     502:	8f 87       	std	Y+15, r24	; 0x0f
	P[1][1] += Q_bias * dt;
     504:	98 8b       	std	Y+16, r25	; 0x10
     506:	20 91 8d 03 	lds	r18, 0x038D	; 0x80038d <Q_bias>
     50a:	30 91 8e 03 	lds	r19, 0x038E	; 0x80038e <Q_bias+0x1>
     50e:	40 91 8f 03 	lds	r20, 0x038F	; 0x80038f <Q_bias+0x2>
     512:	50 91 90 03 	lds	r21, 0x0390	; 0x800390 <Q_bias+0x3>
     516:	69 81       	ldd	r22, Y+1	; 0x01
     518:	7a 81       	ldd	r23, Y+2	; 0x02
     51a:	8b 81       	ldd	r24, Y+3	; 0x03
     51c:	9c 81       	ldd	r25, Y+4	; 0x04
     51e:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     522:	a5 01       	movw	r20, r10
     524:	94 01       	movw	r18, r8
     526:	fc d5       	rcall	.+3064   	; 0x1120 <__addsf3>
     528:	69 8f       	std	Y+25, r22	; 0x19
     52a:	7a 8f       	std	Y+26, r23	; 0x1a
     52c:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     52e:	9c 8f       	std	Y+28, r25	; 0x1c
     530:	20 91 9d 03 	lds	r18, 0x039D	; 0x80039d <R_measure>
     534:	30 91 9e 03 	lds	r19, 0x039E	; 0x80039e <R_measure+0x1>
     538:	40 91 9f 03 	lds	r20, 0x039F	; 0x80039f <R_measure+0x2>
     53c:	50 91 a0 03 	lds	r21, 0x03A0	; 0x8003a0 <R_measure+0x3>
     540:	69 85       	ldd	r22, Y+9	; 0x09
     542:	7a 85       	ldd	r23, Y+10	; 0x0a
     544:	8b 85       	ldd	r24, Y+11	; 0x0b
     546:	9c 85       	ldd	r25, Y+12	; 0x0c
     548:	eb d5       	rcall	.+3030   	; 0x1120 <__addsf3>
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     54a:	4b 01       	movw	r8, r22
     54c:	5c 01       	movw	r10, r24
     54e:	9b 01       	movw	r18, r22
     550:	ac 01       	movw	r20, r24
     552:	69 85       	ldd	r22, Y+9	; 0x09
     554:	7a 85       	ldd	r23, Y+10	; 0x0a
     556:	8b 85       	ldd	r24, Y+11	; 0x0b
     558:	9c 85       	ldd	r25, Y+12	; 0x0c
     55a:	c3 d6       	rcall	.+3462   	; 0x12e2 <__divsf3>
     55c:	69 83       	std	Y+1, r22	; 0x01
     55e:	7a 83       	std	Y+2, r23	; 0x02
	K[1] = P[1][0] / S;
     560:	8b 83       	std	Y+3, r24	; 0x03
     562:	9c 83       	std	Y+4, r25	; 0x04
     564:	a5 01       	movw	r20, r10
     566:	94 01       	movw	r18, r8
     568:	6d 85       	ldd	r22, Y+13	; 0x0d
     56a:	7e 85       	ldd	r23, Y+14	; 0x0e
     56c:	8f 85       	ldd	r24, Y+15	; 0x0f
     56e:	98 89       	ldd	r25, Y+16	; 0x10
     570:	b8 d6       	rcall	.+3440   	; 0x12e2 <__divsf3>
     572:	6d 83       	std	Y+5, r22	; 0x05
     574:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     576:	8f 83       	std	Y+7, r24	; 0x07
     578:	98 87       	std	Y+8, r25	; 0x08
     57a:	2d 89       	ldd	r18, Y+21	; 0x15
     57c:	3e 89       	ldd	r19, Y+22	; 0x16
     57e:	4f 89       	ldd	r20, Y+23	; 0x17
     580:	58 8d       	ldd	r21, Y+24	; 0x18
     582:	69 89       	ldd	r22, Y+17	; 0x11
     584:	7a 89       	ldd	r23, Y+18	; 0x12
     586:	8b 89       	ldd	r24, Y+19	; 0x13
     588:	9c 89       	ldd	r25, Y+20	; 0x14
     58a:	c9 d5       	rcall	.+2962   	; 0x111e <__subsf3>
     58c:	69 8b       	std	Y+17, r22	; 0x11
     58e:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle += K[0] * y;
     590:	8b 8b       	std	Y+19, r24	; 0x13
     592:	9c 8b       	std	Y+20, r25	; 0x14
     594:	9b 01       	movw	r18, r22
     596:	ac 01       	movw	r20, r24
     598:	69 81       	ldd	r22, Y+1	; 0x01
     59a:	7a 81       	ldd	r23, Y+2	; 0x02
     59c:	8b 81       	ldd	r24, Y+3	; 0x03
     59e:	9c 81       	ldd	r25, Y+4	; 0x04
     5a0:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     5a4:	2d 89       	ldd	r18, Y+21	; 0x15
     5a6:	3e 89       	ldd	r19, Y+22	; 0x16
     5a8:	4f 89       	ldd	r20, Y+23	; 0x17
     5aa:	58 8d       	ldd	r21, Y+24	; 0x18
     5ac:	b9 d5       	rcall	.+2930   	; 0x1120 <__addsf3>
     5ae:	4b 01       	movw	r8, r22
     5b0:	5c 01       	movw	r10, r24
     5b2:	60 93 a1 03 	sts	0x03A1, r22	; 0x8003a1 <angle>
     5b6:	70 93 a2 03 	sts	0x03A2, r23	; 0x8003a2 <angle+0x1>
     5ba:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <angle+0x2>
	bias += K[1] * y;
     5be:	90 93 a4 03 	sts	0x03A4, r25	; 0x8003a4 <angle+0x3>
     5c2:	29 89       	ldd	r18, Y+17	; 0x11
     5c4:	3a 89       	ldd	r19, Y+18	; 0x12
     5c6:	4b 89       	ldd	r20, Y+19	; 0x13
     5c8:	5c 89       	ldd	r21, Y+20	; 0x14
     5ca:	6d 81       	ldd	r22, Y+5	; 0x05
     5cc:	7e 81       	ldd	r23, Y+6	; 0x06
     5ce:	8f 81       	ldd	r24, Y+7	; 0x07
     5d0:	98 85       	ldd	r25, Y+8	; 0x08
     5d2:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     5d6:	a7 01       	movw	r20, r14
     5d8:	96 01       	movw	r18, r12
     5da:	a2 d5       	rcall	.+2884   	; 0x1120 <__addsf3>
     5dc:	60 93 99 03 	sts	0x0399, r22	; 0x800399 <bias>
     5e0:	70 93 9a 03 	sts	0x039A, r23	; 0x80039a <bias+0x1>
     5e4:	80 93 9b 03 	sts	0x039B, r24	; 0x80039b <bias+0x2>
     5e8:	90 93 9c 03 	sts	0x039C, r25	; 0x80039c <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     5ec:	29 81       	ldd	r18, Y+1	; 0x01
     5ee:	3a 81       	ldd	r19, Y+2	; 0x02
     5f0:	4b 81       	ldd	r20, Y+3	; 0x03
     5f2:	5c 81       	ldd	r21, Y+4	; 0x04
     5f4:	69 85       	ldd	r22, Y+9	; 0x09
     5f6:	7a 85       	ldd	r23, Y+10	; 0x0a
     5f8:	8b 85       	ldd	r24, Y+11	; 0x0b
     5fa:	9c 85       	ldd	r25, Y+12	; 0x0c
     5fc:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     600:	9b 01       	movw	r18, r22
     602:	ac 01       	movw	r20, r24
     604:	69 85       	ldd	r22, Y+9	; 0x09
     606:	7a 85       	ldd	r23, Y+10	; 0x0a
     608:	8b 85       	ldd	r24, Y+11	; 0x0b
     60a:	9c 85       	ldd	r25, Y+12	; 0x0c
     60c:	88 d5       	rcall	.+2832   	; 0x111e <__subsf3>
     60e:	e5 ea       	ldi	r30, 0xA5	; 165
     610:	f3 e0       	ldi	r31, 0x03	; 3
     612:	60 83       	st	Z, r22
     614:	71 83       	std	Z+1, r23	; 0x01
	P[0][1] -= K[0] * P01_temp;
     616:	82 83       	std	Z+2, r24	; 0x02
     618:	93 83       	std	Z+3, r25	; 0x03
     61a:	29 81       	ldd	r18, Y+1	; 0x01
     61c:	3a 81       	ldd	r19, Y+2	; 0x02
     61e:	4b 81       	ldd	r20, Y+3	; 0x03
     620:	5c 81       	ldd	r21, Y+4	; 0x04
     622:	c3 01       	movw	r24, r6
     624:	b2 01       	movw	r22, r4
     626:	0e 94 18 0b 	call	0x1630	; 0x1630 <__mulsf3>
     62a:	9b 01       	movw	r18, r22
     62c:	ac 01       	movw	r20, r24
     62e:	c3 01       	movw	r24, r6
     630:	b2 01       	movw	r22, r4
     632:	75 d5       	rcall	.+2794   	; 0x111e <__subsf3>
     634:	60 93 a9 03 	sts	0x03A9, r22	; 0x8003a9 <P+0x4>
     638:	70 93 aa 03 	sts	0x03AA, r23	; 0x8003aa <P+0x5>
     63c:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <P+0x6>
	P[1][0] -= K[1] * P00_temp;
     640:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <P+0x7>
     644:	2d 81       	ldd	r18, Y+5	; 0x05
     646:	3e 81       	ldd	r19, Y+6	; 0x06
     648:	4f 81       	ldd	r20, Y+7	; 0x07
     64a:	58 85       	ldd	r21, Y+8	; 0x08
     64c:	69 85       	ldd	r22, Y+9	; 0x09
     64e:	7a 85       	ldd	r23, Y+10	; 0x0a
     650:	8b 85       	ldd	r24, Y+11	; 0x0b
     652:	9c 85       	ldd	r25, Y+12	; 0x0c
     654:	ed d7       	rcall	.+4058   	; 0x1630 <__mulsf3>
     656:	9b 01       	movw	r18, r22
     658:	ac 01       	movw	r20, r24
     65a:	6d 85       	ldd	r22, Y+13	; 0x0d
     65c:	7e 85       	ldd	r23, Y+14	; 0x0e
     65e:	8f 85       	ldd	r24, Y+15	; 0x0f
     660:	98 89       	ldd	r25, Y+16	; 0x10
     662:	5d d5       	rcall	.+2746   	; 0x111e <__subsf3>
     664:	60 93 ad 03 	sts	0x03AD, r22	; 0x8003ad <P+0x8>
     668:	70 93 ae 03 	sts	0x03AE, r23	; 0x8003ae <P+0x9>
     66c:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <P+0xa>
	P[1][1] -= K[1] * P01_temp;
     670:	90 93 b0 03 	sts	0x03B0, r25	; 0x8003b0 <P+0xb>
     674:	2d 81       	ldd	r18, Y+5	; 0x05
     676:	3e 81       	ldd	r19, Y+6	; 0x06
     678:	4f 81       	ldd	r20, Y+7	; 0x07
     67a:	58 85       	ldd	r21, Y+8	; 0x08
     67c:	c3 01       	movw	r24, r6
     67e:	b2 01       	movw	r22, r4
     680:	d7 d7       	rcall	.+4014   	; 0x1630 <__mulsf3>
     682:	9b 01       	movw	r18, r22
     684:	ac 01       	movw	r20, r24
     686:	69 8d       	ldd	r22, Y+25	; 0x19
     688:	7a 8d       	ldd	r23, Y+26	; 0x1a
     68a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     68c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     68e:	47 d5       	rcall	.+2702   	; 0x111e <__subsf3>
     690:	60 93 b1 03 	sts	0x03B1, r22	; 0x8003b1 <P+0xc>
     694:	70 93 b2 03 	sts	0x03B2, r23	; 0x8003b2 <P+0xd>
     698:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <P+0xe>
     69c:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <P+0xf>

	return angle;
};
     6a0:	c5 01       	movw	r24, r10
     6a2:	b4 01       	movw	r22, r8
     6a4:	6c 96       	adiw	r28, 0x1c	; 28
     6a6:	0f b6       	in	r0, 0x3f	; 63
     6a8:	f8 94       	cli
     6aa:	de bf       	out	0x3e, r29	; 62
     6ac:	0f be       	out	0x3f, r0	; 63
     6ae:	cd bf       	out	0x3d, r28	; 61
     6b0:	df 91       	pop	r29
     6b2:	cf 91       	pop	r28
     6b4:	1f 91       	pop	r17
     6b6:	0f 91       	pop	r16
     6b8:	ff 90       	pop	r15
     6ba:	ef 90       	pop	r14
     6bc:	df 90       	pop	r13
     6be:	cf 90       	pop	r12
     6c0:	bf 90       	pop	r11
     6c2:	af 90       	pop	r10
     6c4:	9f 90       	pop	r9
     6c6:	8f 90       	pop	r8
     6c8:	7f 90       	pop	r7
     6ca:	6f 90       	pop	r6
     6cc:	5f 90       	pop	r5
     6ce:	4f 90       	pop	r4
     6d0:	08 95       	ret

000006d2 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle = 0.001f;
     6d2:	8f e6       	ldi	r24, 0x6F	; 111
     6d4:	92 e1       	ldi	r25, 0x12	; 18
     6d6:	a3 e8       	ldi	r26, 0x83	; 131
     6d8:	ba e3       	ldi	r27, 0x3A	; 58
     6da:	80 93 95 03 	sts	0x0395, r24	; 0x800395 <Q_angle>
     6de:	90 93 96 03 	sts	0x0396, r25	; 0x800396 <Q_angle+0x1>
     6e2:	a0 93 97 03 	sts	0x0397, r26	; 0x800397 <Q_angle+0x2>
     6e6:	b0 93 98 03 	sts	0x0398, r27	; 0x800398 <Q_angle+0x3>
	Q_bias = 0.003f;
     6ea:	86 ea       	ldi	r24, 0xA6	; 166
     6ec:	9b e9       	ldi	r25, 0x9B	; 155
     6ee:	a4 e4       	ldi	r26, 0x44	; 68
     6f0:	bb e3       	ldi	r27, 0x3B	; 59
     6f2:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <Q_bias>
     6f6:	90 93 8e 03 	sts	0x038E, r25	; 0x80038e <Q_bias+0x1>
     6fa:	a0 93 8f 03 	sts	0x038F, r26	; 0x80038f <Q_bias+0x2>
     6fe:	b0 93 90 03 	sts	0x0390, r27	; 0x800390 <Q_bias+0x3>
	R_measure = 0.03f;
     702:	8f e8       	ldi	r24, 0x8F	; 143
     704:	92 ec       	ldi	r25, 0xC2	; 194
     706:	a5 ef       	ldi	r26, 0xF5	; 245
     708:	bc e3       	ldi	r27, 0x3C	; 60
     70a:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <R_measure>
     70e:	90 93 9e 03 	sts	0x039E, r25	; 0x80039e <R_measure+0x1>
     712:	a0 93 9f 03 	sts	0x039F, r26	; 0x80039f <R_measure+0x2>
     716:	b0 93 a0 03 	sts	0x03A0, r27	; 0x8003a0 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     71a:	10 92 a1 03 	sts	0x03A1, r1	; 0x8003a1 <angle>
     71e:	10 92 a2 03 	sts	0x03A2, r1	; 0x8003a2 <angle+0x1>
     722:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <angle+0x2>
     726:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <angle+0x3>
	bias = 0.0f; // Reset bias
     72a:	10 92 99 03 	sts	0x0399, r1	; 0x800399 <bias>
     72e:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <bias+0x1>
     732:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <bias+0x2>
     736:	10 92 9c 03 	sts	0x039C, r1	; 0x80039c <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     73a:	e5 ea       	ldi	r30, 0xA5	; 165
     73c:	f3 e0       	ldi	r31, 0x03	; 3
     73e:	10 82       	st	Z, r1
     740:	11 82       	std	Z+1, r1	; 0x01
     742:	12 82       	std	Z+2, r1	; 0x02
     744:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     746:	14 82       	std	Z+4, r1	; 0x04
     748:	15 82       	std	Z+5, r1	; 0x05
     74a:	16 82       	std	Z+6, r1	; 0x06
     74c:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     74e:	10 86       	std	Z+8, r1	; 0x08
     750:	11 86       	std	Z+9, r1	; 0x09
     752:	12 86       	std	Z+10, r1	; 0x0a
     754:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     756:	14 86       	std	Z+12, r1	; 0x0c
     758:	15 86       	std	Z+13, r1	; 0x0d
     75a:	16 86       	std	Z+14, r1	; 0x0e
     75c:	17 86       	std	Z+15, r1	; 0x0f
     75e:	08 95       	ret

00000760 <main>:
#include <time.h>
uint8_t buffer[14];
bool loop_bool=true;
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     760:	cf 93       	push	r28
     762:	df 93       	push	r29
     764:	cd b7       	in	r28, 0x3d	; 61
     766:	de b7       	in	r29, 0x3e	; 62
     768:	a4 97       	sbiw	r28, 0x24	; 36
     76a:	0f b6       	in	r0, 0x3f	; 63
     76c:	f8 94       	cli
     76e:	de bf       	out	0x3e, r29	; 62
     770:	0f be       	out	0x3f, r0	; 63
     772:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     774:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <__data_end+0x1>
     778:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <__data_end>
	V_step=V_step_predefine;
     77c:	88 e7       	ldi	r24, 0x78	; 120
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	90 93 72 03 	sts	0x0372, r25	; 0x800372 <V_step+0x1>
     784:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <V_step>
	W_step=W_step_predefine;
     788:	80 ef       	ldi	r24, 0xF0	; 240
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step+0x1>
     790:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step>
	incr=-1;
     794:	8f ef       	ldi	r24, 0xFF	; 255
     796:	9f ef       	ldi	r25, 0xFF	; 255
     798:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <incr+0x1>
     79c:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <incr>
	pwm_delay=2000;
     7a0:	80 ed       	ldi	r24, 0xD0	; 208
     7a2:	97 e0       	ldi	r25, 0x07	; 7
     7a4:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <pwm_delay+0x1>
     7a8:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <pwm_delay>
	cli();
	init_gpio();
		#ifdef GYRO
			i2c_init();
     7ac:	f8 94       	cli
		#endif
	USART_Init(MY_UBRR);
     7ae:	71 dd       	rcall	.-1310   	; 0x292 <init_gpio>
     7b0:	8e d3       	rcall	.+1820   	; 0xece <i2c_init>
     7b2:	8c e0       	ldi	r24, 0x0C	; 12
	uart_str = fdevopen(uart_putchar, NULL);
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	3c d4       	rcall	.+2168   	; 0x1030 <USART_Init>
     7b8:	60 e0       	ldi	r22, 0x00	; 0
     7ba:	70 e0       	ldi	r23, 0x00	; 0
     7bc:	83 e2       	ldi	r24, 0x23	; 35
     7be:	98 e0       	ldi	r25, 0x08	; 8
	setup_timer0();
	Enable_timer0_overflow_interrupt();//micros
     7c0:	0e 94 73 10 	call	0x20e6	; 0x20e6 <fdevopen>
	setup_timer4();//pwm
     7c4:	90 93 b6 03 	sts	0x03B6, r25	; 0x8003b6 <uart_str+0x1>
	setup_timer5();
     7c8:	80 93 b5 03 	sts	0x03B5, r24	; 0x8003b5 <uart_str>
	Enable_timer5_compare_interrupt();//motor
	OCR5A=4000;
     7cc:	dc d2       	rcall	.+1464   	; 0xd86 <setup_timer0>
     7ce:	e2 d2       	rcall	.+1476   	; 0xd94 <Enable_timer0_overflow_interrupt>
     7d0:	b7 d2       	rcall	.+1390   	; 0xd40 <setup_timer4>
     7d2:	ca d2       	rcall	.+1428   	; 0xd68 <setup_timer5>
     7d4:	d2 d2       	rcall	.+1444   	; 0xd7a <Enable_timer5_compare_interrupt>
	unsigned long timer1=micros();
     7d6:	80 ea       	ldi	r24, 0xA0	; 160
     7d8:	9f e0       	ldi	r25, 0x0F	; 15
     7da:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
				int16_t gyroZ_calib=gyro_offset_z;
				int16_t accelX_calib=accel_offset_x;
				int16_t accelY_calib=accel_offset_y;
				int16_t accelZ_calib=accel_offset_z;
			#endif
		mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     7de:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     7e2:	de d2       	rcall	.+1468   	; 0xda0 <micros>
		mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     7e4:	69 a3       	std	Y+33, r22	; 0x21
     7e6:	7a a3       	std	Y+34, r23	; 0x22
		mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     7e8:	8b a3       	std	Y+35, r24	; 0x23
     7ea:	9c a3       	std	Y+36, r25	; 0x24
     7ec:	67 e0       	ldi	r22, 0x07	; 7
     7ee:	89 e1       	ldi	r24, 0x19	; 25
		mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     7f0:	e6 d1       	rcall	.+972    	; 0xbbe <mpu6050_writeByte>
     7f2:	60 e0       	ldi	r22, 0x00	; 0
     7f4:	8a e1       	ldi	r24, 0x1A	; 26
		mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     7f6:	e3 d1       	rcall	.+966    	; 0xbbe <mpu6050_writeByte>
     7f8:	68 e0       	ldi	r22, 0x08	; 8
     7fa:	8b e1       	ldi	r24, 0x1B	; 27
     7fc:	e0 d1       	rcall	.+960    	; 0xbbe <mpu6050_writeByte>
		double compAngleX;
		double compAngleY;
	#endif  
	
	
	Kalman_init();
     7fe:	60 e1       	ldi	r22, 0x10	; 16
	double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG; //calibration offset of angle by accelerometer data
     800:	8c e1       	ldi	r24, 0x1C	; 28
     802:	dd d1       	rcall	.+954    	; 0xbbe <mpu6050_writeByte>
     804:	61 e0       	ldi	r22, 0x01	; 1
     806:	8b e6       	ldi	r24, 0x6B	; 107
     808:	da d1       	rcall	.+948    	; 0xbbe <mpu6050_writeByte>
     80a:	63 df       	rcall	.-314    	; 0x6d2 <Kalman_init>
     80c:	6b 85       	ldd	r22, Y+11	; 0x0b
     80e:	7c 85       	ldd	r23, Y+12	; 0x0c
     810:	07 2e       	mov	r0, r23
     812:	00 0c       	add	r0, r0
     814:	88 0b       	sbc	r24, r24
     816:	99 0b       	sbc	r25, r25
     818:	ff d5       	rcall	.+3070   	; 0x1418 <__floatsisf>
     81a:	6b 01       	movw	r12, r22
     81c:	7c 01       	movw	r14, r24
     81e:	69 85       	ldd	r22, Y+9	; 0x09
     820:	7a 85       	ldd	r23, Y+10	; 0x0a
     822:	07 2e       	mov	r0, r23
     824:	00 0c       	add	r0, r0
     826:	88 0b       	sbc	r24, r24
     828:	99 0b       	sbc	r25, r25
     82a:	f6 d5       	rcall	.+3052   	; 0x1418 <__floatsisf>
     82c:	a7 01       	movw	r20, r14
     82e:	96 01       	movw	r18, r12
     830:	01 d5       	rcall	.+2562   	; 0x1234 <atan2>
     832:	21 ee       	ldi	r18, 0xE1	; 225
     834:	3e e2       	ldi	r19, 0x2E	; 46
     836:	45 e6       	ldi	r20, 0x65	; 101
     838:	52 e4       	ldi	r21, 0x42	; 66
	angle_roll=roll;
	angle=roll;//set starting angle
     83a:	fa d6       	rcall	.+3572   	; 0x1630 <__mulsf3>
     83c:	6d 8b       	std	Y+21, r22	; 0x15
     83e:	7e 8b       	std	Y+22, r23	; 0x16
     840:	8f 8b       	std	Y+23, r24	; 0x17
     842:	98 8f       	std	Y+24, r25	; 0x18
     844:	60 93 a1 03 	sts	0x03A1, r22	; 0x8003a1 <angle>
     848:	70 93 a2 03 	sts	0x03A2, r23	; 0x8003a2 <angle+0x1>
			printSD("",final_angleY);
			printf("\n");		
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     84c:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <angle+0x2>
     850:	90 93 a4 03 	sts	0x03A4, r25	; 0x8003a4 <angle+0x3>
     854:	78 94       	sei
	
	sei();
    while (1) /*---------------------------while(1)---------------------------------*/
    {
		#ifdef GYRO
    		mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     856:	0f 2e       	mov	r0, r31
     858:	ff ed       	ldi	r31, 0xDF	; 223
     85a:	6f 2e       	mov	r6, r31
     85c:	ff e7       	ldi	r31, 0x7F	; 127
     85e:	7f 2e       	mov	r7, r31
     860:	f0 2d       	mov	r31, r0
     862:	9e 01       	movw	r18, r28
     864:	2b 5f       	subi	r18, 0xFB	; 251
     866:	3f 4f       	sbci	r19, 0xFF	; 255
     868:	79 01       	movw	r14, r18
     86a:	8e 01       	movw	r16, r28
     86c:	0d 5f       	subi	r16, 0xFD	; 253
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	24 50       	subi	r18, 0x04	; 4
     872:	31 09       	sbc	r19, r1
     874:	ae 01       	movw	r20, r28
     876:	45 5f       	subi	r20, 0xF5	; 245
     878:	5f 4f       	sbci	r21, 0xFF	; 255
     87a:	be 01       	movw	r22, r28
			accel_x-=accelX_calib;
     87c:	67 5f       	subi	r22, 0xF7	; 247
     87e:	7f 4f       	sbci	r23, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	07 96       	adiw	r24, 0x07	; 7
     884:	f2 d1       	rcall	.+996    	; 0xc6a <mpu6050_getRawData>
     886:	8f 81       	ldd	r24, Y+7	; 0x07
			accel_y-=accelY_calib;
     888:	98 85       	ldd	r25, Y+8	; 0x08
     88a:	86 5d       	subi	r24, 0xD6	; 214
     88c:	9e 4f       	sbci	r25, 0xFE	; 254
     88e:	98 87       	std	Y+8, r25	; 0x08
     890:	8f 83       	std	Y+7, r24	; 0x07
     892:	89 85       	ldd	r24, Y+9	; 0x09
			accel_z-=accelZ_calib;
     894:	9a 85       	ldd	r25, Y+10	; 0x0a
     896:	82 52       	subi	r24, 0x22	; 34
     898:	95 4f       	sbci	r25, 0xF5	; 245
     89a:	9a 87       	std	Y+10, r25	; 0x0a
     89c:	89 87       	std	Y+9, r24	; 0x09
			gyro_x-=gyroX_calib;
     89e:	8b 85       	ldd	r24, Y+11	; 0x0b
     8a0:	9c 85       	ldd	r25, Y+12	; 0x0c
     8a2:	86 55       	subi	r24, 0x56	; 86
     8a4:	98 40       	sbci	r25, 0x08	; 8
     8a6:	9c 87       	std	Y+12, r25	; 0x0c
     8a8:	8b 87       	std	Y+11, r24	; 0x0b
			gyro_y-=gyroY_calib;
     8aa:	89 81       	ldd	r24, Y+1	; 0x01
     8ac:	9a 81       	ldd	r25, Y+2	; 0x02
     8ae:	84 59       	subi	r24, 0x94	; 148
     8b0:	9f 4f       	sbci	r25, 0xFF	; 255
			gyro_z-=gyroZ_calib;
     8b2:	9a 83       	std	Y+2, r25	; 0x02
     8b4:	89 83       	std	Y+1, r24	; 0x01
     8b6:	8b 81       	ldd	r24, Y+3	; 0x03
     8b8:	9c 81       	ldd	r25, Y+4	; 0x04
			printSI("ay=",accel_y);
			printSI("az=",accel_z);
			printf("\n");
			/*--------end------*/			
		#else
			double dt = ((double)(micros() - timer1))/1000000;
     8ba:	80 52       	subi	r24, 0x20	; 32
     8bc:	9f 4f       	sbci	r25, 0xFF	; 255
     8be:	9c 83       	std	Y+4, r25	; 0x04
     8c0:	8b 83       	std	Y+3, r24	; 0x03
     8c2:	8d 81       	ldd	r24, Y+5	; 0x05
     8c4:	9e 81       	ldd	r25, Y+6	; 0x06
     8c6:	8f 58       	subi	r24, 0x8F	; 143
     8c8:	9d 4f       	sbci	r25, 0xFD	; 253
     8ca:	9e 83       	std	Y+6, r25	; 0x06
     8cc:	8d 83       	std	Y+5, r24	; 0x05
     8ce:	68 d2       	rcall	.+1232   	; 0xda0 <micros>
     8d0:	29 a1       	ldd	r18, Y+33	; 0x21
     8d2:	3a a1       	ldd	r19, Y+34	; 0x22
     8d4:	4b a1       	ldd	r20, Y+35	; 0x23
     8d6:	5c a1       	ldd	r21, Y+36	; 0x24
     8d8:	62 1b       	sub	r22, r18
     8da:	73 0b       	sbc	r23, r19
     8dc:	84 0b       	sbc	r24, r20
     8de:	95 0b       	sbc	r25, r21
     8e0:	99 d5       	rcall	.+2866   	; 0x1414 <__floatunsisf>
			timer1=micros();
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	34 e2       	ldi	r19, 0x24	; 36
     8e6:	44 e7       	ldi	r20, 0x74	; 116
     8e8:	59 e4       	ldi	r21, 0x49	; 73
     8ea:	fb d4       	rcall	.+2550   	; 0x12e2 <__divsf3>
     8ec:	69 8f       	std	Y+25, r22	; 0x19
			double gyroXrate = gyro_x/65.5;// deg/s 
     8ee:	7a 8f       	std	Y+26, r23	; 0x1a
     8f0:	8b 8f       	std	Y+27, r24	; 0x1b
     8f2:	9c 8f       	std	Y+28, r25	; 0x1c
     8f4:	55 d2       	rcall	.+1194   	; 0xda0 <micros>
     8f6:	69 a3       	std	Y+33, r22	; 0x21
     8f8:	7a a3       	std	Y+34, r23	; 0x22
     8fa:	8b a3       	std	Y+35, r24	; 0x23
     8fc:	9c a3       	std	Y+36, r25	; 0x24
     8fe:	69 81       	ldd	r22, Y+1	; 0x01
     900:	7a 81       	ldd	r23, Y+2	; 0x02
     902:	07 2e       	mov	r0, r23
     904:	00 0c       	add	r0, r0
     906:	88 0b       	sbc	r24, r24
     908:	99 0b       	sbc	r25, r25
     90a:	86 d5       	rcall	.+2828   	; 0x1418 <__floatsisf>
     90c:	20 e0       	ldi	r18, 0x00	; 0
			double gyroYrate = gyro_y/65.5;// deg/s
			if (!loop_bool) {
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	43 e8       	ldi	r20, 0x83	; 131
     912:	52 e4       	ldi	r21, 0x42	; 66
     914:	e6 d4       	rcall	.+2508   	; 0x12e2 <__divsf3>
     916:	6d 8f       	std	Y+29, r22	; 0x1d
     918:	7e 8f       	std	Y+30, r23	; 0x1e
				angle_roll += gyroXrate*dt; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     91a:	8f 8f       	std	Y+31, r24	; 0x1f
     91c:	98 a3       	std	Y+32, r25	; 0x20
     91e:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <loop_bool>
     922:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <loop_bool+0x1>
     926:	89 2b       	or	r24, r25
     928:	a9 f4       	brne	.+42     	; 0x954 <main+0x1f4>
     92a:	2d 8d       	ldd	r18, Y+29	; 0x1d
     92c:	3e 8d       	ldd	r19, Y+30	; 0x1e
     92e:	4f 8d       	ldd	r20, Y+31	; 0x1f
     930:	58 a1       	ldd	r21, Y+32	; 0x20
     932:	69 8d       	ldd	r22, Y+25	; 0x19
     934:	7a 8d       	ldd	r23, Y+26	; 0x1a
     936:	8b 8d       	ldd	r24, Y+27	; 0x1b
     938:	9c 8d       	ldd	r25, Y+28	; 0x1c
     93a:	7a d6       	rcall	.+3316   	; 0x1630 <__mulsf3>
     93c:	9b 01       	movw	r18, r22
     93e:	ac 01       	movw	r20, r24
     940:	6d 89       	ldd	r22, Y+21	; 0x15
     942:	7e 89       	ldd	r23, Y+22	; 0x16
     944:	8f 89       	ldd	r24, Y+23	; 0x17
				angle_pitch += gyroYrate*dt;  //Calculate the traveled roll angle and add this to the angle_roll variable			
			}
			else loop_bool=false;	
     946:	98 8d       	ldd	r25, Y+24	; 0x18
     948:	eb d3       	rcall	.+2006   	; 0x1120 <__addsf3>
     94a:	6d 8b       	std	Y+21, r22	; 0x15
			//angle_pitch += angle_roll * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the roll angle to the pitch angel
			//angle_roll -= angle_pitch * sin(gyro_z * (dt/65.5*pi/180));               //If the IMU has yawed transfer the pitch angle to the roll angel
			
			double temporar_accel_x=accel_x/100;
     94c:	7e 8b       	std	Y+22, r23	; 0x16
     94e:	8f 8b       	std	Y+23, r24	; 0x17
     950:	98 8f       	std	Y+24, r25	; 0x18
     952:	04 c0       	rjmp	.+8      	; 0x95c <main+0x1fc>
     954:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <loop_bool+0x1>
     958:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <loop_bool>
     95c:	0f 81       	ldd	r16, Y+7	; 0x07
     95e:	18 85       	ldd	r17, Y+8	; 0x08
     960:	c8 01       	movw	r24, r16
     962:	64 e6       	ldi	r22, 0x64	; 100
     964:	70 e0       	ldi	r23, 0x00	; 0
     966:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <__divmodhi4>
     96a:	07 2e       	mov	r0, r23
			double temporar_accel_y=accel_y/100;
     96c:	00 0c       	add	r0, r0
     96e:	88 0b       	sbc	r24, r24
     970:	99 0b       	sbc	r25, r25
     972:	52 d5       	rcall	.+2724   	; 0x1418 <__floatsisf>
     974:	6d 87       	std	Y+13, r22	; 0x0d
     976:	7e 87       	std	Y+14, r23	; 0x0e
     978:	8f 87       	std	Y+15, r24	; 0x0f
     97a:	98 8b       	std	Y+16, r25	; 0x10
     97c:	49 84       	ldd	r4, Y+9	; 0x09
     97e:	5a 84       	ldd	r5, Y+10	; 0x0a
     980:	c2 01       	movw	r24, r4
     982:	64 e6       	ldi	r22, 0x64	; 100
     984:	70 e0       	ldi	r23, 0x00	; 0
			double temporar_accel_z=accel_z/100;	
     986:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <__divmodhi4>
     98a:	07 2e       	mov	r0, r23
     98c:	00 0c       	add	r0, r0
     98e:	88 0b       	sbc	r24, r24
     990:	99 0b       	sbc	r25, r25
     992:	42 d5       	rcall	.+2692   	; 0x1418 <__floatsisf>
     994:	4b 01       	movw	r8, r22
     996:	5c 01       	movw	r10, r24
     998:	2b 84       	ldd	r2, Y+11	; 0x0b
     99a:	3c 84       	ldd	r3, Y+12	; 0x0c
     99c:	c1 01       	movw	r24, r2
     99e:	64 e6       	ldi	r22, 0x64	; 100
     9a0:	70 e0       	ldi	r23, 0x00	; 0
			acc_total_vector = sqrt((temporar_accel_x*temporar_accel_x)+(temporar_accel_y*temporar_accel_y)+(temporar_accel_z*temporar_accel_z));  //Calculate the total accelerometer vector
     9a2:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <__divmodhi4>
     9a6:	07 2e       	mov	r0, r23
     9a8:	00 0c       	add	r0, r0
     9aa:	88 0b       	sbc	r24, r24
     9ac:	99 0b       	sbc	r25, r25
     9ae:	34 d5       	rcall	.+2664   	; 0x1418 <__floatsisf>
     9b0:	6b 01       	movw	r12, r22
     9b2:	7c 01       	movw	r14, r24
     9b4:	2d 85       	ldd	r18, Y+13	; 0x0d
     9b6:	3e 85       	ldd	r19, Y+14	; 0x0e
     9b8:	4f 85       	ldd	r20, Y+15	; 0x0f
     9ba:	58 89       	ldd	r21, Y+16	; 0x10
     9bc:	ca 01       	movw	r24, r20
     9be:	b9 01       	movw	r22, r18
     9c0:	37 d6       	rcall	.+3182   	; 0x1630 <__mulsf3>
     9c2:	69 8b       	std	Y+17, r22	; 0x11
     9c4:	7a 8b       	std	Y+18, r23	; 0x12
     9c6:	8b 8b       	std	Y+19, r24	; 0x13
     9c8:	9c 8b       	std	Y+20, r25	; 0x14
     9ca:	a5 01       	movw	r20, r10
     9cc:	94 01       	movw	r18, r8
     9ce:	c5 01       	movw	r24, r10
     9d0:	b4 01       	movw	r22, r8
     9d2:	2e d6       	rcall	.+3164   	; 0x1630 <__mulsf3>
     9d4:	9b 01       	movw	r18, r22
     9d6:	ac 01       	movw	r20, r24
     9d8:	69 89       	ldd	r22, Y+17	; 0x11
     9da:	7a 89       	ldd	r23, Y+18	; 0x12
     9dc:	8b 89       	ldd	r24, Y+19	; 0x13
     9de:	9c 89       	ldd	r25, Y+20	; 0x14
     9e0:	9f d3       	rcall	.+1854   	; 0x1120 <__addsf3>
     9e2:	69 8b       	std	Y+17, r22	; 0x11
     9e4:	7a 8b       	std	Y+18, r23	; 0x12
     9e6:	8b 8b       	std	Y+19, r24	; 0x13
     9e8:	9c 8b       	std	Y+20, r25	; 0x14
     9ea:	2d 85       	ldd	r18, Y+13	; 0x0d
     9ec:	3e 85       	ldd	r19, Y+14	; 0x0e
     9ee:	4f 85       	ldd	r20, Y+15	; 0x0f
     9f0:	58 89       	ldd	r21, Y+16	; 0x10
     9f2:	ca 01       	movw	r24, r20
     9f4:	b9 01       	movw	r22, r18
     9f6:	1c d6       	rcall	.+3128   	; 0x1630 <__mulsf3>
     9f8:	6d 87       	std	Y+13, r22	; 0x0d
     9fa:	7e 87       	std	Y+14, r23	; 0x0e
     9fc:	8f 87       	std	Y+15, r24	; 0x0f
     9fe:	98 8b       	std	Y+16, r25	; 0x10
     a00:	a5 01       	movw	r20, r10
     a02:	94 01       	movw	r18, r8
     a04:	c5 01       	movw	r24, r10
     a06:	b4 01       	movw	r22, r8
     a08:	13 d6       	rcall	.+3110   	; 0x1630 <__mulsf3>
     a0a:	9b 01       	movw	r18, r22
     a0c:	ac 01       	movw	r20, r24
     a0e:	6d 85       	ldd	r22, Y+13	; 0x0d
     a10:	7e 85       	ldd	r23, Y+14	; 0x0e
     a12:	8f 85       	ldd	r24, Y+15	; 0x0f
     a14:	98 89       	ldd	r25, Y+16	; 0x10
     a16:	84 d3       	rcall	.+1800   	; 0x1120 <__addsf3>
     a18:	4b 01       	movw	r8, r22
     a1a:	5c 01       	movw	r10, r24
			acc_total_vector*=100;
		    angle_pitch_acc = asin((double)accel_y/acc_total_vector)* 57.296;       //Calculate the pitch angle
			angle_roll_acc = asin((double)accel_x/acc_total_vector)* -57.296;       //Calculate the roll angle
     a1c:	a7 01       	movw	r20, r14
     a1e:	96 01       	movw	r18, r12
     a20:	c7 01       	movw	r24, r14
     a22:	b6 01       	movw	r22, r12
     a24:	05 d6       	rcall	.+3082   	; 0x1630 <__mulsf3>
     a26:	9b 01       	movw	r18, r22
     a28:	ac 01       	movw	r20, r24
     a2a:	c5 01       	movw	r24, r10
     a2c:	b4 01       	movw	r22, r8
     a2e:	78 d3       	rcall	.+1776   	; 0x1120 <__addsf3>
     a30:	66 d6       	rcall	.+3276   	; 0x16fe <sqrt>
     a32:	4b 01       	movw	r8, r22
     a34:	5c 01       	movw	r10, r24
     a36:	b8 01       	movw	r22, r16
     a38:	11 0f       	add	r17, r17
     a3a:	88 0b       	sbc	r24, r24
     a3c:	99 0b       	sbc	r25, r25
     a3e:	ec d4       	rcall	.+2520   	; 0x1418 <__floatsisf>
     a40:	6b 01       	movw	r12, r22
     a42:	7c 01       	movw	r14, r24
     a44:	20 e0       	ldi	r18, 0x00	; 0
     a46:	30 e0       	ldi	r19, 0x00	; 0
				
			//kalman
			//double roll  = atan2(accel_y, accel_z) * RAD_TO_DEG;
			//double pitch = atan(-accel_x / sqrt(accel_y * accel_y + accel_z * accel_z)) * RAD_TO_DEG;
			//angle=roll;
			double kalman_roll=atan2(accel_y, accel_z) * RAD_TO_DEG;
     a48:	48 ec       	ldi	r20, 0xC8	; 200
     a4a:	52 e4       	ldi	r21, 0x42	; 66
     a4c:	c5 01       	movw	r24, r10
     a4e:	b4 01       	movw	r22, r8
     a50:	ef d5       	rcall	.+3038   	; 0x1630 <__mulsf3>
     a52:	9b 01       	movw	r18, r22
     a54:	ac 01       	movw	r20, r24
     a56:	c7 01       	movw	r24, r14
     a58:	b6 01       	movw	r22, r12
     a5a:	43 d4       	rcall	.+2182   	; 0x12e2 <__divsf3>
     a5c:	c5 d3       	rcall	.+1930   	; 0x11e8 <asin>
     a5e:	4b 01       	movw	r8, r22
     a60:	5c 01       	movw	r10, r24
     a62:	b1 01       	movw	r22, r2
     a64:	33 0c       	add	r3, r3
     a66:	88 0b       	sbc	r24, r24
			
			float kalman_angle=getAngle(kalman_roll,gyroXrate,dt);
     a68:	99 0b       	sbc	r25, r25
     a6a:	d6 d4       	rcall	.+2476   	; 0x1418 <__floatsisf>
     a6c:	6b 01       	movw	r12, r22
     a6e:	7c 01       	movw	r14, r24
     a70:	b2 01       	movw	r22, r4
     a72:	55 0c       	add	r5, r5
     a74:	88 0b       	sbc	r24, r24
     a76:	99 0b       	sbc	r25, r25
     a78:	cf d4       	rcall	.+2462   	; 0x1418 <__floatsisf>
     a7a:	a7 01       	movw	r20, r14
     a7c:	96 01       	movw	r18, r12
     a7e:	da d3       	rcall	.+1972   	; 0x1234 <atan2>
     a80:	21 ee       	ldi	r18, 0xE1	; 225
     a82:	3e e2       	ldi	r19, 0x2E	; 46
     a84:	45 e6       	ldi	r20, 0x65	; 101
			
			printSD("",kalman_angle);
     a86:	52 e4       	ldi	r21, 0x42	; 66
     a88:	d3 d5       	rcall	.+2982   	; 0x1630 <__mulsf3>
     a8a:	e9 8c       	ldd	r14, Y+25	; 0x19
     a8c:	fa 8c       	ldd	r15, Y+26	; 0x1a
     a8e:	0b 8d       	ldd	r16, Y+27	; 0x1b
			printSD("",angle_roll);
     a90:	1c 8d       	ldd	r17, Y+28	; 0x1c
     a92:	2d 8d       	ldd	r18, Y+29	; 0x1d
     a94:	3e 8d       	ldd	r19, Y+30	; 0x1e
     a96:	4f 8d       	ldd	r20, Y+31	; 0x1f
     a98:	58 a1       	ldd	r21, Y+32	; 0x20
     a9a:	89 dc       	rcall	.-1774   	; 0x3ae <getAngle>
     a9c:	6b 01       	movw	r12, r22
     a9e:	7c 01       	movw	r14, r24
				
			
			double final_angleY=(angle_roll*0.996)+(angle_roll_acc*0.004);
     aa0:	ab 01       	movw	r20, r22
     aa2:	bc 01       	movw	r22, r24
     aa4:	87 e7       	ldi	r24, 0x77	; 119
     aa6:	93 e0       	ldi	r25, 0x03	; 3
     aa8:	18 d3       	rcall	.+1584   	; 0x10da <printSD>
     aaa:	4d 89       	ldd	r20, Y+21	; 0x15
     aac:	5e 89       	ldd	r21, Y+22	; 0x16
     aae:	6f 89       	ldd	r22, Y+23	; 0x17
     ab0:	78 8d       	ldd	r23, Y+24	; 0x18
     ab2:	87 e7       	ldi	r24, 0x77	; 119
     ab4:	93 e0       	ldi	r25, 0x03	; 3
     ab6:	11 d3       	rcall	.+1570   	; 0x10da <printSD>
     ab8:	2b e1       	ldi	r18, 0x1B	; 27
     aba:	3f e2       	ldi	r19, 0x2F	; 47
     abc:	45 e6       	ldi	r20, 0x65	; 101
     abe:	52 ec       	ldi	r21, 0xC2	; 194
     ac0:	c5 01       	movw	r24, r10
     ac2:	b4 01       	movw	r22, r8
     ac4:	b5 d5       	rcall	.+2922   	; 0x1630 <__mulsf3>
     ac6:	2f e6       	ldi	r18, 0x6F	; 111
     ac8:	32 e1       	ldi	r19, 0x12	; 18
     aca:	43 e8       	ldi	r20, 0x83	; 131
     acc:	5b e3       	ldi	r21, 0x3B	; 59
     ace:	b0 d5       	rcall	.+2912   	; 0x1630 <__mulsf3>
     ad0:	4b 01       	movw	r8, r22
     ad2:	5c 01       	movw	r10, r24
     ad4:	2b ed       	ldi	r18, 0xDB	; 219
     ad6:	39 ef       	ldi	r19, 0xF9	; 249
     ad8:	4e e7       	ldi	r20, 0x7E	; 126
     ada:	5f e3       	ldi	r21, 0x3F	; 63
     adc:	6d 89       	ldd	r22, Y+21	; 0x15
     ade:	7e 89       	ldd	r23, Y+22	; 0x16
			printSD("",final_angleY);
     ae0:	8f 89       	ldd	r24, Y+23	; 0x17
     ae2:	98 8d       	ldd	r25, Y+24	; 0x18
     ae4:	a5 d5       	rcall	.+2890   	; 0x1630 <__mulsf3>
     ae6:	9b 01       	movw	r18, r22
     ae8:	ac 01       	movw	r20, r24
			printf("\n");		
     aea:	c5 01       	movw	r24, r10
     aec:	b4 01       	movw	r22, r8
     aee:	18 d3       	rcall	.+1584   	; 0x1120 <__addsf3>
     af0:	4b 01       	movw	r8, r22
			#ifdef DRV8313
				int absoulute_y=abs(kalman_angle);
     af2:	5c 01       	movw	r10, r24
     af4:	ab 01       	movw	r20, r22
     af6:	bc 01       	movw	r22, r24
     af8:	87 e7       	ldi	r24, 0x77	; 119
     afa:	93 e0       	ldi	r25, 0x03	; 3
     afc:	ee d2       	rcall	.+1500   	; 0x10da <printSD>
     afe:	8a e0       	ldi	r24, 0x0A	; 10
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	0e 94 0c 11 	call	0x2218	; 0x2218 <putchar>
     b06:	c7 01       	movw	r24, r14
				uint16_t learing_rate=500;				
				uint16_t local_motor_delay=(32735-(absoulute_y*learing_rate));
     b08:	b6 01       	movw	r22, r12
     b0a:	53 d4       	rcall	.+2214   	; 0x13b2 <__fixsfsi>
     b0c:	ab 01       	movw	r20, r22
     b0e:	77 23       	and	r23, r23
     b10:	24 f4       	brge	.+8      	; 0xb1a <main+0x3ba>
     b12:	44 27       	eor	r20, r20
     b14:	55 27       	eor	r21, r21
     b16:	46 1b       	sub	r20, r22
     b18:	57 0b       	sbc	r21, r23
     b1a:	ba 01       	movw	r22, r20
     b1c:	84 ef       	ldi	r24, 0xF4	; 244
     b1e:	91 e0       	ldi	r25, 0x01	; 1
				if (local_motor_delay>2000)
     b20:	48 9f       	mul	r20, r24
     b22:	90 01       	movw	r18, r0
     b24:	49 9f       	mul	r20, r25
     b26:	30 0d       	add	r19, r0
				{
					pwm_delay=local_motor_delay;
     b28:	58 9f       	mul	r21, r24
     b2a:	30 0d       	add	r19, r0
     b2c:	11 24       	eor	r1, r1
     b2e:	c3 01       	movw	r24, r6
				}
				int16_t reg_ = local_motor_delay;
				//printSI("ocr=",reg_);
				if ((absoulute_y<=0.8) || (final_angleY >90))
     b30:	82 1b       	sub	r24, r18
     b32:	93 0b       	sbc	r25, r19
     b34:	81 3d       	cpi	r24, 0xD1	; 209
     b36:	a7 e0       	ldi	r26, 0x07	; 7
     b38:	9a 07       	cpc	r25, r26
     b3a:	20 f0       	brcs	.+8      	; 0xb44 <main+0x3e4>
     b3c:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <pwm_delay+0x1>
     b40:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <pwm_delay>
     b44:	07 2e       	mov	r0, r23
     b46:	00 0c       	add	r0, r0
     b48:	88 0b       	sbc	r24, r24
     b4a:	99 0b       	sbc	r25, r25
     b4c:	65 d4       	rcall	.+2250   	; 0x1418 <__floatsisf>
     b4e:	2d ec       	ldi	r18, 0xCD	; 205
     b50:	3c ec       	ldi	r19, 0xCC	; 204
     b52:	4c e4       	ldi	r20, 0x4C	; 76
     b54:	5f e3       	ldi	r21, 0x3F	; 63
     b56:	c1 d3       	rcall	.+1922   	; 0x12da <__cmpsf2>
     b58:	18 16       	cp	r1, r24
     b5a:	4c f4       	brge	.+18     	; 0xb6e <main+0x40e>
     b5c:	20 e0       	ldi	r18, 0x00	; 0
     b5e:	30 e0       	ldi	r19, 0x00	; 0
				{
					incr=0;
     b60:	44 eb       	ldi	r20, 0xB4	; 180
     b62:	52 e4       	ldi	r21, 0x42	; 66
     b64:	c5 01       	movw	r24, r10
     b66:	b4 01       	movw	r22, r8
     b68:	58 d5       	rcall	.+2736   	; 0x161a <__gesf2>
					//printf("\n");	
				}
				else 
					if (final_angleY>0.8)
     b6a:	18 16       	cp	r1, r24
     b6c:	2c f4       	brge	.+10     	; 0xb78 <main+0x418>
     b6e:	10 92 8c 03 	sts	0x038C, r1	; 0x80038c <incr+0x1>
     b72:	10 92 8b 03 	sts	0x038B, r1	; 0x80038b <incr>
     b76:	75 ce       	rjmp	.-790    	; 0x862 <main+0x102>
     b78:	2d ec       	ldi	r18, 0xCD	; 205
     b7a:	3c ec       	ldi	r19, 0xCC	; 204
     b7c:	4c e4       	ldi	r20, 0x4C	; 76
					{
						cli();
     b7e:	5f e3       	ldi	r21, 0x3F	; 63
						incr=1;
     b80:	c5 01       	movw	r24, r10
     b82:	b4 01       	movw	r22, r8
     b84:	4a d5       	rcall	.+2708   	; 0x161a <__gesf2>
     b86:	18 16       	cp	r1, r24
     b88:	6c f4       	brge	.+26     	; 0xba4 <main+0x444>
     b8a:	f8 94       	cli
						printf(" ");
     b8c:	21 e0       	ldi	r18, 0x01	; 1
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	30 93 8c 03 	sts	0x038C, r19	; 0x80038c <incr+0x1>
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" yes\n");					
						sei();
     b94:	20 93 8b 03 	sts	0x038B, r18	; 0x80038b <incr>
					}
					else
					{	cli();
     b98:	80 e2       	ldi	r24, 0x20	; 32
						incr=-1;
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	0e 94 0c 11 	call	0x2218	; 0x2218 <putchar>
     ba0:	78 94       	sei
     ba2:	5f ce       	rjmp	.-834    	; 0x862 <main+0x102>
     ba4:	f8 94       	cli
						printf(" ");
     ba6:	4f ef       	ldi	r20, 0xFF	; 255
     ba8:	5f ef       	ldi	r21, 0xFF	; 255
     baa:	50 93 8c 03 	sts	0x038C, r21	; 0x80038c <incr+0x1>
						int16_t val=pwmSin[U_step];
						//print16(&val);
						//printf(" no\n");
						sei();
     bae:	40 93 8b 03 	sts	0x038B, r20	; 0x80038b <incr>
     bb2:	80 e2       	ldi	r24, 0x20	; 32
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	0e 94 0c 11 	call	0x2218	; 0x2218 <putchar>
     bba:	78 94       	sei
     bbc:	52 ce       	rjmp	.-860    	; 0x862 <main+0x102>

00000bbe <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     bbe:	cf 93       	push	r28
     bc0:	df 93       	push	r29
     bc2:	d8 2f       	mov	r29, r24
     bc4:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     bc6:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
     bc8:	88 d1       	rcall	.+784    	; 0xeda <i2c_start>
     bca:	8d 2f       	mov	r24, r29
	i2c_stop();
     bcc:	dc d1       	rcall	.+952    	; 0xf86 <i2c_write>
     bce:	8c 2f       	mov	r24, r28
}
     bd0:	da d1       	rcall	.+948    	; 0xf86 <i2c_write>
     bd2:	c9 d1       	rcall	.+914    	; 0xf66 <i2c_stop>
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	08 95       	ret

00000bda <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     bda:	af 92       	push	r10
     bdc:	bf 92       	push	r11
     bde:	cf 92       	push	r12
     be0:	df 92       	push	r13
     be2:	ff 92       	push	r15
     be4:	0f 93       	push	r16
     be6:	1f 93       	push	r17
     be8:	cf 93       	push	r28
     bea:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     bec:	66 23       	and	r22, r22
     bee:	89 f1       	breq	.+98     	; 0xc52 <mpu6050_readBytes+0x78>
     bf0:	c5 2f       	mov	r28, r21
     bf2:	d4 2f       	mov	r29, r20
     bf4:	f6 2e       	mov	r15, r22
     bf6:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     bf8:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
     bfa:	6f d1       	rcall	.+734    	; 0xeda <i2c_start>
     bfc:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bfe:	c3 d1       	rcall	.+902    	; 0xf86 <i2c_write>
     c00:	85 e3       	ldi	r24, 0x35	; 53
     c02:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     c04:	f1 f7       	brne	.-4      	; 0xc02 <mpu6050_readBytes+0x28>
     c06:	00 00       	nop
     c08:	81 ed       	ldi	r24, 0xD1	; 209
     c0a:	67 d1       	rcall	.+718    	; 0xeda <i2c_start>
     c0c:	0d 2f       	mov	r16, r29
     c0e:	1c 2f       	mov	r17, r28
     c10:	cc 24       	eor	r12, r12
     c12:	ca 94       	dec	r12
     c14:	cf 0c       	add	r12, r15
     c16:	d1 2c       	mov	r13, r1
     c18:	ef ef       	ldi	r30, 0xFF	; 255
     c1a:	ce 1a       	sub	r12, r30
     c1c:	de 0a       	sbc	r13, r30
     c1e:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     c20:	d0 e0       	ldi	r29, 0x00	; 0
     c22:	af 2c       	mov	r10, r15
     c24:	b1 2c       	mov	r11, r1
     c26:	f1 e0       	ldi	r31, 0x01	; 1
     c28:	af 1a       	sub	r10, r31
     c2a:	b1 08       	sbc	r11, r1
     c2c:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     c2e:	bd 06       	cpc	r11, r29
     c30:	21 f4       	brne	.+8      	; 0xc3a <mpu6050_readBytes+0x60>
     c32:	e4 d1       	rcall	.+968    	; 0xffc <i2c_readNak>
     c34:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     c36:	80 83       	st	Z, r24
     c38:	03 c0       	rjmp	.+6      	; 0xc40 <mpu6050_readBytes+0x66>
     c3a:	c6 d1       	rcall	.+908    	; 0xfc8 <i2c_readAck>
     c3c:	f8 01       	movw	r30, r16
     c3e:	80 83       	st	Z, r24
     c40:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     c42:	0f 5f       	subi	r16, 0xFF	; 255
     c44:	1f 4f       	sbci	r17, 0xFF	; 255
     c46:	cc 15       	cp	r28, r12
     c48:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     c4a:	81 f7       	brne	.-32     	; 0xc2c <mpu6050_readBytes+0x52>
     c4c:	cf 2d       	mov	r28, r15
     c4e:	8b d1       	rcall	.+790    	; 0xf66 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     c50:	01 c0       	rjmp	.+2      	; 0xc54 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     c52:	c0 e0       	ldi	r28, 0x00	; 0
     c54:	8c 2f       	mov	r24, r28
     c56:	df 91       	pop	r29
     c58:	cf 91       	pop	r28
     c5a:	1f 91       	pop	r17
     c5c:	0f 91       	pop	r16
     c5e:	ff 90       	pop	r15
     c60:	df 90       	pop	r13
     c62:	cf 90       	pop	r12
     c64:	bf 90       	pop	r11
     c66:	af 90       	pop	r10
     c68:	08 95       	ret

00000c6a <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     c6a:	6f 92       	push	r6
     c6c:	7f 92       	push	r7
     c6e:	8f 92       	push	r8
     c70:	9f 92       	push	r9
     c72:	af 92       	push	r10
     c74:	bf 92       	push	r11
     c76:	cf 92       	push	r12
     c78:	df 92       	push	r13
     c7a:	ef 92       	push	r14
     c7c:	ff 92       	push	r15
     c7e:	0f 93       	push	r16
     c80:	1f 93       	push	r17
     c82:	cf 93       	push	r28
     c84:	df 93       	push	r29
     c86:	cd b7       	in	r28, 0x3d	; 61
     c88:	de b7       	in	r29, 0x3e	; 62
     c8a:	2e 97       	sbiw	r28, 0x0e	; 14
     c8c:	0f b6       	in	r0, 0x3f	; 63
     c8e:	f8 94       	cli
     c90:	de bf       	out	0x3e, r29	; 62
     c92:	0f be       	out	0x3f, r0	; 63
     c94:	cd bf       	out	0x3d, r28	; 61
     c96:	4c 01       	movw	r8, r24
     c98:	5b 01       	movw	r10, r22
     c9a:	6a 01       	movw	r12, r20
     c9c:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     c9e:	ae 01       	movw	r20, r28
     ca0:	4f 5f       	subi	r20, 0xFF	; 255
     ca2:	5f 4f       	sbci	r21, 0xFF	; 255
     ca4:	6e e0       	ldi	r22, 0x0E	; 14
     ca6:	8b e3       	ldi	r24, 0x3B	; 59
     ca8:	98 df       	rcall	.-208    	; 0xbda <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	98 2f       	mov	r25, r24
     cb0:	88 27       	eor	r24, r24
     cb2:	2a 81       	ldd	r18, Y+2	; 0x02
     cb4:	82 2b       	or	r24, r18
     cb6:	f4 01       	movw	r30, r8
     cb8:	91 83       	std	Z+1, r25	; 0x01
     cba:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     cbc:	8b 81       	ldd	r24, Y+3	; 0x03
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	98 2f       	mov	r25, r24
     cc2:	88 27       	eor	r24, r24
     cc4:	2c 81       	ldd	r18, Y+4	; 0x04
     cc6:	82 2b       	or	r24, r18
     cc8:	f5 01       	movw	r30, r10
     cca:	91 83       	std	Z+1, r25	; 0x01
     ccc:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     cce:	8d 81       	ldd	r24, Y+5	; 0x05
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	98 2f       	mov	r25, r24
     cd4:	88 27       	eor	r24, r24
     cd6:	2e 81       	ldd	r18, Y+6	; 0x06
     cd8:	82 2b       	or	r24, r18
     cda:	f6 01       	movw	r30, r12
     cdc:	91 83       	std	Z+1, r25	; 0x01
     cde:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     ce0:	89 85       	ldd	r24, Y+9	; 0x09
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	98 2f       	mov	r25, r24
     ce6:	88 27       	eor	r24, r24
     ce8:	2a 85       	ldd	r18, Y+10	; 0x0a
     cea:	82 2b       	or	r24, r18
     cec:	f3 01       	movw	r30, r6
     cee:	91 83       	std	Z+1, r25	; 0x01
     cf0:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     cf2:	8b 85       	ldd	r24, Y+11	; 0x0b
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	98 2f       	mov	r25, r24
     cf8:	88 27       	eor	r24, r24
     cfa:	2c 85       	ldd	r18, Y+12	; 0x0c
     cfc:	82 2b       	or	r24, r18
     cfe:	f8 01       	movw	r30, r16
     d00:	91 83       	std	Z+1, r25	; 0x01
     d02:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     d04:	8d 85       	ldd	r24, Y+13	; 0x0d
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	98 2f       	mov	r25, r24
     d0a:	88 27       	eor	r24, r24
     d0c:	2e 85       	ldd	r18, Y+14	; 0x0e
     d0e:	82 2b       	or	r24, r18
     d10:	f7 01       	movw	r30, r14
     d12:	91 83       	std	Z+1, r25	; 0x01
     d14:	80 83       	st	Z, r24
     d16:	2e 96       	adiw	r28, 0x0e	; 14
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	de bf       	out	0x3e, r29	; 62
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	cd bf       	out	0x3d, r28	; 61
     d22:	df 91       	pop	r29
     d24:	cf 91       	pop	r28
     d26:	1f 91       	pop	r17
     d28:	0f 91       	pop	r16
     d2a:	ff 90       	pop	r15
     d2c:	ef 90       	pop	r14
     d2e:	df 90       	pop	r13
     d30:	cf 90       	pop	r12
     d32:	bf 90       	pop	r11
     d34:	af 90       	pop	r10
     d36:	9f 90       	pop	r9
     d38:	8f 90       	pop	r8
     d3a:	7f 90       	pop	r7
     d3c:	6f 90       	pop	r6
     d3e:	08 95       	ret

00000d40 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
     d40:	e1 ea       	ldi	r30, 0xA1	; 161
     d42:	f0 e0       	ldi	r31, 0x00	; 0
     d44:	80 81       	ld	r24, Z
     d46:	81 60       	ori	r24, 0x01	; 1
     d48:	80 83       	st	Z, r24
     d4a:	e0 ea       	ldi	r30, 0xA0	; 160
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	81 60       	ori	r24, 0x01	; 1
     d52:	80 83       	st	Z, r24
     d54:	80 81       	ld	r24, Z
     d56:	80 68       	ori	r24, 0x80	; 128
     d58:	80 83       	st	Z, r24
     d5a:	80 81       	ld	r24, Z
     d5c:	80 62       	ori	r24, 0x20	; 32
     d5e:	80 83       	st	Z, r24
     d60:	80 81       	ld	r24, Z
     d62:	88 60       	ori	r24, 0x08	; 8
     d64:	80 83       	st	Z, r24
     d66:	08 95       	ret

00000d68 <setup_timer5>:
     d68:	e1 e2       	ldi	r30, 0x21	; 33
     d6a:	f1 e0       	ldi	r31, 0x01	; 1
     d6c:	80 81       	ld	r24, Z
     d6e:	81 60       	ori	r24, 0x01	; 1
     d70:	80 83       	st	Z, r24
     d72:	80 81       	ld	r24, Z
     d74:	88 60       	ori	r24, 0x08	; 8
     d76:	80 83       	st	Z, r24
     d78:	08 95       	ret

00000d7a <Enable_timer5_compare_interrupt>:
     d7a:	e3 e7       	ldi	r30, 0x73	; 115
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	80 81       	ld	r24, Z
     d80:	82 60       	ori	r24, 0x02	; 2
     d82:	80 83       	st	Z, r24
     d84:	08 95       	ret

00000d86 <setup_timer0>:
     d86:	85 b5       	in	r24, 0x25	; 37
     d88:	81 60       	ori	r24, 0x01	; 1
     d8a:	85 bd       	out	0x25, r24	; 37
     d8c:	85 b5       	in	r24, 0x25	; 37
     d8e:	82 60       	ori	r24, 0x02	; 2
     d90:	85 bd       	out	0x25, r24	; 37
     d92:	08 95       	ret

00000d94 <Enable_timer0_overflow_interrupt>:
     d94:	ee e6       	ldi	r30, 0x6E	; 110
     d96:	f0 e0       	ldi	r31, 0x00	; 0
     d98:	80 81       	ld	r24, Z
     d9a:	81 60       	ori	r24, 0x01	; 1
     d9c:	80 83       	st	Z, r24
     d9e:	08 95       	ret

00000da0 <micros>:
     da0:	3f b7       	in	r19, 0x3f	; 63
     da2:	f8 94       	cli
     da4:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <timer0_overflow_count>
     da8:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <timer0_overflow_count+0x1>
     dac:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <timer0_overflow_count+0x2>
     db0:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <timer0_overflow_count+0x3>
     db4:	26 b5       	in	r18, 0x26	; 38
     db6:	a8 9b       	sbis	0x15, 0	; 21
     db8:	05 c0       	rjmp	.+10     	; 0xdc4 <micros+0x24>
     dba:	2f 3f       	cpi	r18, 0xFF	; 255
     dbc:	19 f0       	breq	.+6      	; 0xdc4 <micros+0x24>
     dbe:	01 96       	adiw	r24, 0x01	; 1
     dc0:	a1 1d       	adc	r26, r1
     dc2:	b1 1d       	adc	r27, r1
     dc4:	3f bf       	out	0x3f, r19	; 63
     dc6:	ba 2f       	mov	r27, r26
     dc8:	a9 2f       	mov	r26, r25
     dca:	98 2f       	mov	r25, r24
     dcc:	88 27       	eor	r24, r24
     dce:	82 0f       	add	r24, r18
     dd0:	91 1d       	adc	r25, r1
     dd2:	a1 1d       	adc	r26, r1
     dd4:	b1 1d       	adc	r27, r1
     dd6:	bc 01       	movw	r22, r24
     dd8:	cd 01       	movw	r24, r26
     dda:	66 0f       	add	r22, r22
     ddc:	77 1f       	adc	r23, r23
     dde:	88 1f       	adc	r24, r24
     de0:	99 1f       	adc	r25, r25
     de2:	66 0f       	add	r22, r22
     de4:	77 1f       	adc	r23, r23
     de6:	88 1f       	adc	r24, r24
     de8:	99 1f       	adc	r25, r25
     dea:	08 95       	ret

00000dec <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
     dec:	1f 92       	push	r1
     dee:	0f 92       	push	r0
     df0:	0f b6       	in	r0, 0x3f	; 63
     df2:	0f 92       	push	r0
     df4:	11 24       	eor	r1, r1
     df6:	2f 93       	push	r18
     df8:	3f 93       	push	r19
     dfa:	8f 93       	push	r24
     dfc:	9f 93       	push	r25
     dfe:	af 93       	push	r26
     e00:	bf 93       	push	r27
	unsigned long m = timer0_millis;
     e02:	80 91 7f 03 	lds	r24, 0x037F	; 0x80037f <timer0_millis>
     e06:	90 91 80 03 	lds	r25, 0x0380	; 0x800380 <timer0_millis+0x1>
     e0a:	a0 91 81 03 	lds	r26, 0x0381	; 0x800381 <timer0_millis+0x2>
     e0e:	b0 91 82 03 	lds	r27, 0x0382	; 0x800382 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
     e12:	30 91 7e 03 	lds	r19, 0x037E	; 0x80037e <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
     e16:	23 e0       	ldi	r18, 0x03	; 3
     e18:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
     e1a:	2d 37       	cpi	r18, 0x7D	; 125
     e1c:	20 f4       	brcc	.+8      	; 0xe26 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
     e1e:	01 96       	adiw	r24, 0x01	; 1
     e20:	a1 1d       	adc	r26, r1
     e22:	b1 1d       	adc	r27, r1
     e24:	05 c0       	rjmp	.+10     	; 0xe30 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
     e26:	26 e8       	ldi	r18, 0x86	; 134
     e28:	23 0f       	add	r18, r19
		m += 1;
     e2a:	02 96       	adiw	r24, 0x02	; 2
     e2c:	a1 1d       	adc	r26, r1
     e2e:	b1 1d       	adc	r27, r1
	}


	timer0_fract = f;
     e30:	20 93 7e 03 	sts	0x037E, r18	; 0x80037e <timer0_fract>
	timer0_millis = m;
     e34:	80 93 7f 03 	sts	0x037F, r24	; 0x80037f <timer0_millis>
     e38:	90 93 80 03 	sts	0x0380, r25	; 0x800380 <timer0_millis+0x1>
     e3c:	a0 93 81 03 	sts	0x0381, r26	; 0x800381 <timer0_millis+0x2>
     e40:	b0 93 82 03 	sts	0x0382, r27	; 0x800382 <timer0_millis+0x3>
	timer0_overflow_count++;
     e44:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <timer0_overflow_count>
     e48:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <timer0_overflow_count+0x1>
     e4c:	a0 91 85 03 	lds	r26, 0x0385	; 0x800385 <timer0_overflow_count+0x2>
     e50:	b0 91 86 03 	lds	r27, 0x0386	; 0x800386 <timer0_overflow_count+0x3>
     e54:	01 96       	adiw	r24, 0x01	; 1
     e56:	a1 1d       	adc	r26, r1
     e58:	b1 1d       	adc	r27, r1
     e5a:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <timer0_overflow_count>
     e5e:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <timer0_overflow_count+0x1>
     e62:	a0 93 85 03 	sts	0x0385, r26	; 0x800385 <timer0_overflow_count+0x2>
     e66:	b0 93 86 03 	sts	0x0386, r27	; 0x800386 <timer0_overflow_count+0x3>
}
     e6a:	bf 91       	pop	r27
     e6c:	af 91       	pop	r26
     e6e:	9f 91       	pop	r25
     e70:	8f 91       	pop	r24
     e72:	3f 91       	pop	r19
     e74:	2f 91       	pop	r18
     e76:	0f 90       	pop	r0
     e78:	0f be       	out	0x3f, r0	; 63
     e7a:	0f 90       	pop	r0
     e7c:	1f 90       	pop	r1
     e7e:	18 95       	reti

00000e80 <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
     e80:	1f 92       	push	r1
     e82:	0f 92       	push	r0
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	0f 92       	push	r0
     e88:	11 24       	eor	r1, r1
     e8a:	0b b6       	in	r0, 0x3b	; 59
     e8c:	0f 92       	push	r0
     e8e:	2f 93       	push	r18
     e90:	3f 93       	push	r19
     e92:	4f 93       	push	r20
     e94:	5f 93       	push	r21
     e96:	6f 93       	push	r22
     e98:	7f 93       	push	r23
     e9a:	8f 93       	push	r24
     e9c:	9f 93       	push	r25
     e9e:	af 93       	push	r26
     ea0:	bf 93       	push	r27
     ea2:	ef 93       	push	r30
	PWM_update();
     ea4:	ff 93       	push	r31
     ea6:	01 da       	rcall	.-3070   	; 0x2aa <PWM_update>
     ea8:	ff 91       	pop	r31
     eaa:	ef 91       	pop	r30
     eac:	bf 91       	pop	r27
     eae:	af 91       	pop	r26
     eb0:	9f 91       	pop	r25
     eb2:	8f 91       	pop	r24
     eb4:	7f 91       	pop	r23
     eb6:	6f 91       	pop	r22
     eb8:	5f 91       	pop	r21
     eba:	4f 91       	pop	r20
     ebc:	3f 91       	pop	r19
     ebe:	2f 91       	pop	r18
     ec0:	0f 90       	pop	r0
     ec2:	0b be       	out	0x3b, r0	; 59
     ec4:	0f 90       	pop	r0
     ec6:	0f be       	out	0x3f, r0	; 63
     ec8:	0f 90       	pop	r0
     eca:	1f 90       	pop	r1
     ecc:	18 95       	reti

00000ece <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     ece:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     ed2:	8c e0       	ldi	r24, 0x0C	; 12
     ed4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     ed8:	08 95       	ret

00000eda <i2c_start>:
     eda:	94 ea       	ldi	r25, 0xA4	; 164
     edc:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     ee0:	4f ef       	ldi	r20, 0xFF	; 255
     ee2:	50 e0       	ldi	r21, 0x00	; 0
     ee4:	60 e0       	ldi	r22, 0x00	; 0
     ee6:	70 e0       	ldi	r23, 0x00	; 0
     ee8:	ec eb       	ldi	r30, 0xBC	; 188
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	90 81       	ld	r25, Z
     eee:	99 23       	and	r25, r25
     ef0:	34 f0       	brlt	.+12     	; 0xefe <i2c_start+0x24>
     ef2:	41 50       	subi	r20, 0x01	; 1
     ef4:	51 09       	sbc	r21, r1
     ef6:	61 09       	sbc	r22, r1
     ef8:	71 09       	sbc	r23, r1
     efa:	c0 f7       	brcc	.-16     	; 0xeec <i2c_start+0x12>
     efc:	04 c0       	rjmp	.+8      	; 0xf06 <i2c_start+0x2c>
     efe:	45 2b       	or	r20, r21
     f00:	46 2b       	or	r20, r22
     f02:	47 2b       	or	r20, r23
     f04:	41 f1       	breq	.+80     	; 0xf56 <i2c_start+0x7c>
     f06:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     f0a:	98 7f       	andi	r25, 0xF8	; 248
     f0c:	98 30       	cpi	r25, 0x08	; 8
     f0e:	11 f0       	breq	.+4      	; 0xf14 <i2c_start+0x3a>
     f10:	90 31       	cpi	r25, 0x10	; 16
     f12:	19 f5       	brne	.+70     	; 0xf5a <i2c_start+0x80>
     f14:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     f18:	84 e8       	ldi	r24, 0x84	; 132
     f1a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     f1e:	8f ef       	ldi	r24, 0xFF	; 255
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	a0 e0       	ldi	r26, 0x00	; 0
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	ec eb       	ldi	r30, 0xBC	; 188
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	20 81       	ld	r18, Z
     f2c:	22 23       	and	r18, r18
     f2e:	2c f0       	brlt	.+10     	; 0xf3a <i2c_start+0x60>
     f30:	01 97       	sbiw	r24, 0x01	; 1
     f32:	a1 09       	sbc	r26, r1
     f34:	b1 09       	sbc	r27, r1
     f36:	c8 f7       	brcc	.-14     	; 0xf2a <i2c_start+0x50>
     f38:	04 c0       	rjmp	.+8      	; 0xf42 <i2c_start+0x68>
     f3a:	89 2b       	or	r24, r25
     f3c:	8a 2b       	or	r24, r26
     f3e:	8b 2b       	or	r24, r27
     f40:	71 f0       	breq	.+28     	; 0xf5e <i2c_start+0x84>
     f42:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     f46:	98 7f       	andi	r25, 0xF8	; 248
     f48:	98 31       	cpi	r25, 0x18	; 24
     f4a:	59 f0       	breq	.+22     	; 0xf62 <i2c_start+0x88>
     f4c:	81 e0       	ldi	r24, 0x01	; 1
     f4e:	90 34       	cpi	r25, 0x40	; 64
     f50:	49 f4       	brne	.+18     	; 0xf64 <i2c_start+0x8a>
     f52:	80 e0       	ldi	r24, 0x00	; 0
     f54:	08 95       	ret
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	08 95       	ret
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	08 95       	ret
     f5e:	81 e0       	ldi	r24, 0x01	; 1
     f60:	08 95       	ret
     f62:	80 e0       	ldi	r24, 0x00	; 0
     f64:	08 95       	ret

00000f66 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     f66:	84 e9       	ldi	r24, 0x94	; 148
     f68:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     f6c:	80 e0       	ldi	r24, 0x00	; 0
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	ec eb       	ldi	r30, 0xBC	; 188
     f72:	f0 e0       	ldi	r31, 0x00	; 0
     f74:	20 81       	ld	r18, Z
     f76:	24 ff       	sbrs	r18, 4
     f78:	05 c0       	rjmp	.+10     	; 0xf84 <i2c_stop+0x1e>
     f7a:	01 96       	adiw	r24, 0x01	; 1
     f7c:	81 15       	cp	r24, r1
     f7e:	21 e0       	ldi	r18, 0x01	; 1
     f80:	92 07       	cpc	r25, r18
     f82:	c1 f7       	brne	.-16     	; 0xf74 <i2c_stop+0xe>
     f84:	08 95       	ret

00000f86 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     f86:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     f8a:	84 e8       	ldi	r24, 0x84	; 132
     f8c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     f90:	8f ef       	ldi	r24, 0xFF	; 255
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	a0 e0       	ldi	r26, 0x00	; 0
     f96:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     f98:	ec eb       	ldi	r30, 0xBC	; 188
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	20 81       	ld	r18, Z
     f9e:	22 23       	and	r18, r18
     fa0:	2c f0       	brlt	.+10     	; 0xfac <i2c_write+0x26>
     fa2:	01 97       	sbiw	r24, 0x01	; 1
     fa4:	a1 09       	sbc	r26, r1
     fa6:	b1 09       	sbc	r27, r1
     fa8:	c8 f7       	brcc	.-14     	; 0xf9c <i2c_write+0x16>
     faa:	04 c0       	rjmp	.+8      	; 0xfb4 <i2c_write+0x2e>
	if(i2c_timer == 0)
     fac:	89 2b       	or	r24, r25
     fae:	8a 2b       	or	r24, r26
     fb0:	8b 2b       	or	r24, r27
     fb2:	41 f0       	breq	.+16     	; 0xfc4 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     fb4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     fb8:	98 7f       	andi	r25, 0xF8	; 248
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	98 32       	cpi	r25, 0x28	; 40
     fbe:	19 f4       	brne	.+6      	; 0xfc6 <i2c_write+0x40>
     fc0:	80 e0       	ldi	r24, 0x00	; 0
     fc2:	08 95       	ret
     fc4:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     fc6:	08 95       	ret

00000fc8 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     fc8:	84 ec       	ldi	r24, 0xC4	; 196
     fca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     fce:	8f ef       	ldi	r24, 0xFF	; 255
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	a0 e0       	ldi	r26, 0x00	; 0
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     fd6:	ec eb       	ldi	r30, 0xBC	; 188
     fd8:	f0 e0       	ldi	r31, 0x00	; 0
     fda:	20 81       	ld	r18, Z
     fdc:	22 23       	and	r18, r18
     fde:	2c f0       	brlt	.+10     	; 0xfea <i2c_readAck+0x22>
     fe0:	01 97       	sbiw	r24, 0x01	; 1
     fe2:	a1 09       	sbc	r26, r1
     fe4:	b1 09       	sbc	r27, r1
     fe6:	c8 f7       	brcc	.-14     	; 0xfda <i2c_readAck+0x12>
     fe8:	04 c0       	rjmp	.+8      	; 0xff2 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     fea:	89 2b       	or	r24, r25
     fec:	8a 2b       	or	r24, r26
     fee:	8b 2b       	or	r24, r27
     ff0:	19 f0       	breq	.+6      	; 0xff8 <i2c_readAck+0x30>
		return 0;

    return TWDR;
     ff2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     ff6:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     ff8:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     ffa:	08 95       	ret

00000ffc <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     ffc:	84 e8       	ldi	r24, 0x84	; 132
     ffe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    1002:	8f ef       	ldi	r24, 0xFF	; 255
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	a0 e0       	ldi	r26, 0x00	; 0
    1008:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    100a:	ec eb       	ldi	r30, 0xBC	; 188
    100c:	f0 e0       	ldi	r31, 0x00	; 0
    100e:	20 81       	ld	r18, Z
    1010:	22 23       	and	r18, r18
    1012:	2c f0       	brlt	.+10     	; 0x101e <i2c_readNak+0x22>
    1014:	01 97       	sbiw	r24, 0x01	; 1
    1016:	a1 09       	sbc	r26, r1
    1018:	b1 09       	sbc	r27, r1
    101a:	c8 f7       	brcc	.-14     	; 0x100e <i2c_readNak+0x12>
    101c:	04 c0       	rjmp	.+8      	; 0x1026 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    101e:	89 2b       	or	r24, r25
    1020:	8a 2b       	or	r24, r26
    1022:	8b 2b       	or	r24, r27
    1024:	19 f0       	breq	.+6      	; 0x102c <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    1026:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    102a:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    102c:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    102e:	08 95       	ret

00001030 <USART_Init>:
{
	printf(c);
	//printf(" ");
	print16(&intToPrint);
	printf("  ");
}
    1030:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1034:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1038:	88 e0       	ldi	r24, 0x08	; 8
    103a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    103e:	8e e0       	ldi	r24, 0x0E	; 14
    1040:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1044:	08 95       	ret

00001046 <uart_putchar>:
    1046:	cf 93       	push	r28
    1048:	c8 2f       	mov	r28, r24
    104a:	8a 30       	cpi	r24, 0x0A	; 10
    104c:	11 f4       	brne	.+4      	; 0x1052 <uart_putchar+0xc>
    104e:	8d e0       	ldi	r24, 0x0D	; 13
    1050:	fa df       	rcall	.-12     	; 0x1046 <uart_putchar>
    1052:	e0 ec       	ldi	r30, 0xC0	; 192
    1054:	f0 e0       	ldi	r31, 0x00	; 0
    1056:	80 81       	ld	r24, Z
    1058:	85 ff       	sbrs	r24, 5
    105a:	fd cf       	rjmp	.-6      	; 0x1056 <uart_putchar+0x10>
    105c:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	cf 91       	pop	r28
    1066:	08 95       	ret

00001068 <printDouble>:
void printDouble(double *value)
{
    1068:	0f 93       	push	r16
    106a:	1f 93       	push	r17
    106c:	cf 93       	push	r28
    106e:	df 93       	push	r29
    1070:	cd b7       	in	r28, 0x3d	; 61
    1072:	de b7       	in	r29, 0x3e	; 62
    1074:	64 97       	sbiw	r28, 0x14	; 20
    1076:	0f b6       	in	r0, 0x3f	; 63
    1078:	f8 94       	cli
    107a:	de bf       	out	0x3e, r29	; 62
    107c:	0f be       	out	0x3f, r0	; 63
    107e:	cd bf       	out	0x3d, r28	; 61
    1080:	fc 01       	movw	r30, r24
	char c[20]={0};
    1082:	8e 01       	movw	r16, r28
    1084:	0f 5f       	subi	r16, 0xFF	; 255
    1086:	1f 4f       	sbci	r17, 0xFF	; 255
    1088:	84 e1       	ldi	r24, 0x14	; 20
    108a:	d8 01       	movw	r26, r16
    108c:	1d 92       	st	X+, r1
    108e:	8a 95       	dec	r24
    1090:	e9 f7       	brne	.-6      	; 0x108c <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    1092:	83 81       	ldd	r24, Z+3	; 0x03
    1094:	8f 93       	push	r24
    1096:	82 81       	ldd	r24, Z+2	; 0x02
    1098:	8f 93       	push	r24
    109a:	81 81       	ldd	r24, Z+1	; 0x01
    109c:	8f 93       	push	r24
    109e:	80 81       	ld	r24, Z
    10a0:	8f 93       	push	r24
    10a2:	88 e7       	ldi	r24, 0x78	; 120
    10a4:	93 e0       	ldi	r25, 0x03	; 3
    10a6:	9f 93       	push	r25
    10a8:	8f 93       	push	r24
    10aa:	1f 93       	push	r17
    10ac:	0f 93       	push	r16
    10ae:	0e 94 11 11 	call	0x2222	; 0x2222 <sprintf>
	printf(c);
    10b2:	1f 93       	push	r17
    10b4:	0f 93       	push	r16
    10b6:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <printf>
}
    10ba:	0f b6       	in	r0, 0x3f	; 63
    10bc:	f8 94       	cli
    10be:	de bf       	out	0x3e, r29	; 62
    10c0:	0f be       	out	0x3f, r0	; 63
    10c2:	cd bf       	out	0x3d, r28	; 61
    10c4:	64 96       	adiw	r28, 0x14	; 20
    10c6:	0f b6       	in	r0, 0x3f	; 63
    10c8:	f8 94       	cli
    10ca:	de bf       	out	0x3e, r29	; 62
    10cc:	0f be       	out	0x3f, r0	; 63
    10ce:	cd bf       	out	0x3d, r28	; 61
    10d0:	df 91       	pop	r29
    10d2:	cf 91       	pop	r28
    10d4:	1f 91       	pop	r17
    10d6:	0f 91       	pop	r16
    10d8:	08 95       	ret

000010da <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    10da:	cf 93       	push	r28
    10dc:	df 93       	push	r29
    10de:	00 d0       	rcall	.+0      	; 0x10e0 <printSD+0x6>
    10e0:	1f 92       	push	r1
    10e2:	cd b7       	in	r28, 0x3d	; 61
    10e4:	de b7       	in	r29, 0x3e	; 62
    10e6:	49 83       	std	Y+1, r20	; 0x01
    10e8:	5a 83       	std	Y+2, r21	; 0x02
    10ea:	6b 83       	std	Y+3, r22	; 0x03
    10ec:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    10ee:	9f 93       	push	r25
    10f0:	8f 93       	push	r24
    10f2:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    10f6:	ce 01       	movw	r24, r28
    10f8:	01 96       	adiw	r24, 0x01	; 1
    10fa:	b6 df       	rcall	.-148    	; 0x1068 <printDouble>
	printf("  ");
    10fc:	85 e7       	ldi	r24, 0x75	; 117
    10fe:	93 e0       	ldi	r25, 0x03	; 3
    1100:	9f 93       	push	r25
    1102:	8f 93       	push	r24
    1104:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <printf>
    1108:	0f 90       	pop	r0
    110a:	0f 90       	pop	r0
    110c:	0f 90       	pop	r0
    110e:	0f 90       	pop	r0
    1110:	0f 90       	pop	r0
    1112:	0f 90       	pop	r0
    1114:	0f 90       	pop	r0
    1116:	0f 90       	pop	r0
    1118:	df 91       	pop	r29
    111a:	cf 91       	pop	r28
    111c:	08 95       	ret

0000111e <__subsf3>:
    111e:	50 58       	subi	r21, 0x80	; 128

00001120 <__addsf3>:
    1120:	bb 27       	eor	r27, r27
    1122:	aa 27       	eor	r26, r26
    1124:	0e d0       	rcall	.+28     	; 0x1142 <__addsf3x>
    1126:	3f c2       	rjmp	.+1150   	; 0x15a6 <__fp_round>
    1128:	30 d2       	rcall	.+1120   	; 0x158a <__fp_pscA>
    112a:	30 f0       	brcs	.+12     	; 0x1138 <__addsf3+0x18>
    112c:	35 d2       	rcall	.+1130   	; 0x1598 <__fp_pscB>
    112e:	20 f0       	brcs	.+8      	; 0x1138 <__addsf3+0x18>
    1130:	31 f4       	brne	.+12     	; 0x113e <__addsf3+0x1e>
    1132:	9f 3f       	cpi	r25, 0xFF	; 255
    1134:	11 f4       	brne	.+4      	; 0x113a <__addsf3+0x1a>
    1136:	1e f4       	brtc	.+6      	; 0x113e <__addsf3+0x1e>
    1138:	ef c1       	rjmp	.+990    	; 0x1518 <__fp_nan>
    113a:	0e f4       	brtc	.+2      	; 0x113e <__addsf3+0x1e>
    113c:	e0 95       	com	r30
    113e:	e7 fb       	bst	r30, 7
    1140:	e5 c1       	rjmp	.+970    	; 0x150c <__fp_inf>

00001142 <__addsf3x>:
    1142:	e9 2f       	mov	r30, r25
    1144:	41 d2       	rcall	.+1154   	; 0x15c8 <__fp_split3>
    1146:	80 f3       	brcs	.-32     	; 0x1128 <__addsf3+0x8>
    1148:	ba 17       	cp	r27, r26
    114a:	62 07       	cpc	r22, r18
    114c:	73 07       	cpc	r23, r19
    114e:	84 07       	cpc	r24, r20
    1150:	95 07       	cpc	r25, r21
    1152:	18 f0       	brcs	.+6      	; 0x115a <__addsf3x+0x18>
    1154:	71 f4       	brne	.+28     	; 0x1172 <__addsf3x+0x30>
    1156:	9e f5       	brtc	.+102    	; 0x11be <__addsf3x+0x7c>
    1158:	59 c2       	rjmp	.+1202   	; 0x160c <__fp_zero>
    115a:	0e f4       	brtc	.+2      	; 0x115e <__addsf3x+0x1c>
    115c:	e0 95       	com	r30
    115e:	0b 2e       	mov	r0, r27
    1160:	ba 2f       	mov	r27, r26
    1162:	a0 2d       	mov	r26, r0
    1164:	0b 01       	movw	r0, r22
    1166:	b9 01       	movw	r22, r18
    1168:	90 01       	movw	r18, r0
    116a:	0c 01       	movw	r0, r24
    116c:	ca 01       	movw	r24, r20
    116e:	a0 01       	movw	r20, r0
    1170:	11 24       	eor	r1, r1
    1172:	ff 27       	eor	r31, r31
    1174:	59 1b       	sub	r21, r25
    1176:	99 f0       	breq	.+38     	; 0x119e <__addsf3x+0x5c>
    1178:	59 3f       	cpi	r21, 0xF9	; 249
    117a:	50 f4       	brcc	.+20     	; 0x1190 <__addsf3x+0x4e>
    117c:	50 3e       	cpi	r21, 0xE0	; 224
    117e:	68 f1       	brcs	.+90     	; 0x11da <__addsf3x+0x98>
    1180:	1a 16       	cp	r1, r26
    1182:	f0 40       	sbci	r31, 0x00	; 0
    1184:	a2 2f       	mov	r26, r18
    1186:	23 2f       	mov	r18, r19
    1188:	34 2f       	mov	r19, r20
    118a:	44 27       	eor	r20, r20
    118c:	58 5f       	subi	r21, 0xF8	; 248
    118e:	f3 cf       	rjmp	.-26     	; 0x1176 <__addsf3x+0x34>
    1190:	46 95       	lsr	r20
    1192:	37 95       	ror	r19
    1194:	27 95       	ror	r18
    1196:	a7 95       	ror	r26
    1198:	f0 40       	sbci	r31, 0x00	; 0
    119a:	53 95       	inc	r21
    119c:	c9 f7       	brne	.-14     	; 0x1190 <__addsf3x+0x4e>
    119e:	7e f4       	brtc	.+30     	; 0x11be <__addsf3x+0x7c>
    11a0:	1f 16       	cp	r1, r31
    11a2:	ba 0b       	sbc	r27, r26
    11a4:	62 0b       	sbc	r22, r18
    11a6:	73 0b       	sbc	r23, r19
    11a8:	84 0b       	sbc	r24, r20
    11aa:	ba f0       	brmi	.+46     	; 0x11da <__addsf3x+0x98>
    11ac:	91 50       	subi	r25, 0x01	; 1
    11ae:	a1 f0       	breq	.+40     	; 0x11d8 <__addsf3x+0x96>
    11b0:	ff 0f       	add	r31, r31
    11b2:	bb 1f       	adc	r27, r27
    11b4:	66 1f       	adc	r22, r22
    11b6:	77 1f       	adc	r23, r23
    11b8:	88 1f       	adc	r24, r24
    11ba:	c2 f7       	brpl	.-16     	; 0x11ac <__addsf3x+0x6a>
    11bc:	0e c0       	rjmp	.+28     	; 0x11da <__addsf3x+0x98>
    11be:	ba 0f       	add	r27, r26
    11c0:	62 1f       	adc	r22, r18
    11c2:	73 1f       	adc	r23, r19
    11c4:	84 1f       	adc	r24, r20
    11c6:	48 f4       	brcc	.+18     	; 0x11da <__addsf3x+0x98>
    11c8:	87 95       	ror	r24
    11ca:	77 95       	ror	r23
    11cc:	67 95       	ror	r22
    11ce:	b7 95       	ror	r27
    11d0:	f7 95       	ror	r31
    11d2:	9e 3f       	cpi	r25, 0xFE	; 254
    11d4:	08 f0       	brcs	.+2      	; 0x11d8 <__addsf3x+0x96>
    11d6:	b3 cf       	rjmp	.-154    	; 0x113e <__addsf3+0x1e>
    11d8:	93 95       	inc	r25
    11da:	88 0f       	add	r24, r24
    11dc:	08 f0       	brcs	.+2      	; 0x11e0 <__addsf3x+0x9e>
    11de:	99 27       	eor	r25, r25
    11e0:	ee 0f       	add	r30, r30
    11e2:	97 95       	ror	r25
    11e4:	87 95       	ror	r24
    11e6:	08 95       	ret

000011e8 <asin>:
    11e8:	9f 93       	push	r25
    11ea:	9f 77       	andi	r25, 0x7F	; 127
    11ec:	ee e3       	ldi	r30, 0x3E	; 62
    11ee:	89 37       	cpi	r24, 0x79	; 121
    11f0:	9e 07       	cpc	r25, r30
    11f2:	20 f4       	brcc	.+8      	; 0x11fc <asin+0x14>
    11f4:	e4 ee       	ldi	r30, 0xE4	; 228
    11f6:	f0 e0       	ldi	r31, 0x00	; 0
    11f8:	b7 d1       	rcall	.+878    	; 0x1568 <__fp_powsodd>
    11fa:	09 c0       	rjmp	.+18     	; 0x120e <asin+0x26>
    11fc:	48 d1       	rcall	.+656    	; 0x148e <__fp_arccos>
    11fe:	90 58       	subi	r25, 0x80	; 128
    1200:	a2 ea       	ldi	r26, 0xA2	; 162
    1202:	2a ed       	ldi	r18, 0xDA	; 218
    1204:	3f e0       	ldi	r19, 0x0F	; 15
    1206:	49 ec       	ldi	r20, 0xC9	; 201
    1208:	5f e3       	ldi	r21, 0x3F	; 63
    120a:	9b df       	rcall	.-202    	; 0x1142 <__addsf3x>
    120c:	cc d1       	rcall	.+920    	; 0x15a6 <__fp_round>
    120e:	0f 90       	pop	r0
    1210:	07 fc       	sbrc	r0, 7
    1212:	90 58       	subi	r25, 0x80	; 128
    1214:	08 95       	ret
    1216:	b9 d1       	rcall	.+882    	; 0x158a <__fp_pscA>
    1218:	58 f0       	brcs	.+22     	; 0x1230 <asin+0x48>
    121a:	80 e8       	ldi	r24, 0x80	; 128
    121c:	91 e0       	ldi	r25, 0x01	; 1
    121e:	09 f4       	brne	.+2      	; 0x1222 <asin+0x3a>
    1220:	9e ef       	ldi	r25, 0xFE	; 254
    1222:	ba d1       	rcall	.+884    	; 0x1598 <__fp_pscB>
    1224:	28 f0       	brcs	.+10     	; 0x1230 <asin+0x48>
    1226:	40 e8       	ldi	r20, 0x80	; 128
    1228:	51 e0       	ldi	r21, 0x01	; 1
    122a:	59 f4       	brne	.+22     	; 0x1242 <atan2+0xe>
    122c:	5e ef       	ldi	r21, 0xFE	; 254
    122e:	09 c0       	rjmp	.+18     	; 0x1242 <atan2+0xe>
    1230:	73 c1       	rjmp	.+742    	; 0x1518 <__fp_nan>
    1232:	ec c1       	rjmp	.+984    	; 0x160c <__fp_zero>

00001234 <atan2>:
    1234:	e9 2f       	mov	r30, r25
    1236:	e0 78       	andi	r30, 0x80	; 128
    1238:	c7 d1       	rcall	.+910    	; 0x15c8 <__fp_split3>
    123a:	68 f3       	brcs	.-38     	; 0x1216 <asin+0x2e>
    123c:	09 2e       	mov	r0, r25
    123e:	05 2a       	or	r0, r21
    1240:	c1 f3       	breq	.-16     	; 0x1232 <asin+0x4a>
    1242:	26 17       	cp	r18, r22
    1244:	37 07       	cpc	r19, r23
    1246:	48 07       	cpc	r20, r24
    1248:	59 07       	cpc	r21, r25
    124a:	38 f0       	brcs	.+14     	; 0x125a <atan2+0x26>
    124c:	0e 2e       	mov	r0, r30
    124e:	07 f8       	bld	r0, 7
    1250:	e0 25       	eor	r30, r0
    1252:	69 f0       	breq	.+26     	; 0x126e <atan2+0x3a>
    1254:	e0 25       	eor	r30, r0
    1256:	e0 64       	ori	r30, 0x40	; 64
    1258:	0a c0       	rjmp	.+20     	; 0x126e <atan2+0x3a>
    125a:	ef 63       	ori	r30, 0x3F	; 63
    125c:	07 f8       	bld	r0, 7
    125e:	00 94       	com	r0
    1260:	07 fa       	bst	r0, 7
    1262:	db 01       	movw	r26, r22
    1264:	b9 01       	movw	r22, r18
    1266:	9d 01       	movw	r18, r26
    1268:	dc 01       	movw	r26, r24
    126a:	ca 01       	movw	r24, r20
    126c:	ad 01       	movw	r20, r26
    126e:	ef 93       	push	r30
    1270:	47 d0       	rcall	.+142    	; 0x1300 <__divsf3_pse>
    1272:	99 d1       	rcall	.+818    	; 0x15a6 <__fp_round>
    1274:	0a d0       	rcall	.+20     	; 0x128a <atan>
    1276:	5f 91       	pop	r21
    1278:	55 23       	and	r21, r21
    127a:	31 f0       	breq	.+12     	; 0x1288 <atan2+0x54>
    127c:	2b ed       	ldi	r18, 0xDB	; 219
    127e:	3f e0       	ldi	r19, 0x0F	; 15
    1280:	49 e4       	ldi	r20, 0x49	; 73
    1282:	50 fd       	sbrc	r21, 0
    1284:	49 ec       	ldi	r20, 0xC9	; 201
    1286:	4c cf       	rjmp	.-360    	; 0x1120 <__addsf3>
    1288:	08 95       	ret

0000128a <atan>:
    128a:	df 93       	push	r29
    128c:	dd 27       	eor	r29, r29
    128e:	b9 2f       	mov	r27, r25
    1290:	bf 77       	andi	r27, 0x7F	; 127
    1292:	40 e8       	ldi	r20, 0x80	; 128
    1294:	5f e3       	ldi	r21, 0x3F	; 63
    1296:	16 16       	cp	r1, r22
    1298:	17 06       	cpc	r1, r23
    129a:	48 07       	cpc	r20, r24
    129c:	5b 07       	cpc	r21, r27
    129e:	10 f4       	brcc	.+4      	; 0x12a4 <atan+0x1a>
    12a0:	d9 2f       	mov	r29, r25
    12a2:	bf d1       	rcall	.+894    	; 0x1622 <inverse>
    12a4:	9f 93       	push	r25
    12a6:	8f 93       	push	r24
    12a8:	7f 93       	push	r23
    12aa:	6f 93       	push	r22
    12ac:	66 d2       	rcall	.+1228   	; 0x177a <square>
    12ae:	e8 ef       	ldi	r30, 0xF8	; 248
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	35 d1       	rcall	.+618    	; 0x151e <__fp_powser>
    12b4:	78 d1       	rcall	.+752    	; 0x15a6 <__fp_round>
    12b6:	2f 91       	pop	r18
    12b8:	3f 91       	pop	r19
    12ba:	4f 91       	pop	r20
    12bc:	5f 91       	pop	r21
    12be:	c4 d1       	rcall	.+904    	; 0x1648 <__mulsf3x>
    12c0:	dd 23       	and	r29, r29
    12c2:	49 f0       	breq	.+18     	; 0x12d6 <atan+0x4c>
    12c4:	90 58       	subi	r25, 0x80	; 128
    12c6:	a2 ea       	ldi	r26, 0xA2	; 162
    12c8:	2a ed       	ldi	r18, 0xDA	; 218
    12ca:	3f e0       	ldi	r19, 0x0F	; 15
    12cc:	49 ec       	ldi	r20, 0xC9	; 201
    12ce:	5f e3       	ldi	r21, 0x3F	; 63
    12d0:	d0 78       	andi	r29, 0x80	; 128
    12d2:	5d 27       	eor	r21, r29
    12d4:	36 df       	rcall	.-404    	; 0x1142 <__addsf3x>
    12d6:	df 91       	pop	r29
    12d8:	66 c1       	rjmp	.+716    	; 0x15a6 <__fp_round>

000012da <__cmpsf2>:
    12da:	f4 d0       	rcall	.+488    	; 0x14c4 <__fp_cmp>
    12dc:	08 f4       	brcc	.+2      	; 0x12e0 <__cmpsf2+0x6>
    12de:	81 e0       	ldi	r24, 0x01	; 1
    12e0:	08 95       	ret

000012e2 <__divsf3>:
    12e2:	0c d0       	rcall	.+24     	; 0x12fc <__divsf3x>
    12e4:	60 c1       	rjmp	.+704    	; 0x15a6 <__fp_round>
    12e6:	58 d1       	rcall	.+688    	; 0x1598 <__fp_pscB>
    12e8:	40 f0       	brcs	.+16     	; 0x12fa <__divsf3+0x18>
    12ea:	4f d1       	rcall	.+670    	; 0x158a <__fp_pscA>
    12ec:	30 f0       	brcs	.+12     	; 0x12fa <__divsf3+0x18>
    12ee:	21 f4       	brne	.+8      	; 0x12f8 <__divsf3+0x16>
    12f0:	5f 3f       	cpi	r21, 0xFF	; 255
    12f2:	19 f0       	breq	.+6      	; 0x12fa <__divsf3+0x18>
    12f4:	0b c1       	rjmp	.+534    	; 0x150c <__fp_inf>
    12f6:	51 11       	cpse	r21, r1
    12f8:	8a c1       	rjmp	.+788    	; 0x160e <__fp_szero>
    12fa:	0e c1       	rjmp	.+540    	; 0x1518 <__fp_nan>

000012fc <__divsf3x>:
    12fc:	65 d1       	rcall	.+714    	; 0x15c8 <__fp_split3>
    12fe:	98 f3       	brcs	.-26     	; 0x12e6 <__divsf3+0x4>

00001300 <__divsf3_pse>:
    1300:	99 23       	and	r25, r25
    1302:	c9 f3       	breq	.-14     	; 0x12f6 <__divsf3+0x14>
    1304:	55 23       	and	r21, r21
    1306:	b1 f3       	breq	.-20     	; 0x12f4 <__divsf3+0x12>
    1308:	95 1b       	sub	r25, r21
    130a:	55 0b       	sbc	r21, r21
    130c:	bb 27       	eor	r27, r27
    130e:	aa 27       	eor	r26, r26
    1310:	62 17       	cp	r22, r18
    1312:	73 07       	cpc	r23, r19
    1314:	84 07       	cpc	r24, r20
    1316:	38 f0       	brcs	.+14     	; 0x1326 <__divsf3_pse+0x26>
    1318:	9f 5f       	subi	r25, 0xFF	; 255
    131a:	5f 4f       	sbci	r21, 0xFF	; 255
    131c:	22 0f       	add	r18, r18
    131e:	33 1f       	adc	r19, r19
    1320:	44 1f       	adc	r20, r20
    1322:	aa 1f       	adc	r26, r26
    1324:	a9 f3       	breq	.-22     	; 0x1310 <__divsf3_pse+0x10>
    1326:	33 d0       	rcall	.+102    	; 0x138e <__divsf3_pse+0x8e>
    1328:	0e 2e       	mov	r0, r30
    132a:	3a f0       	brmi	.+14     	; 0x133a <__divsf3_pse+0x3a>
    132c:	e0 e8       	ldi	r30, 0x80	; 128
    132e:	30 d0       	rcall	.+96     	; 0x1390 <__divsf3_pse+0x90>
    1330:	91 50       	subi	r25, 0x01	; 1
    1332:	50 40       	sbci	r21, 0x00	; 0
    1334:	e6 95       	lsr	r30
    1336:	00 1c       	adc	r0, r0
    1338:	ca f7       	brpl	.-14     	; 0x132c <__divsf3_pse+0x2c>
    133a:	29 d0       	rcall	.+82     	; 0x138e <__divsf3_pse+0x8e>
    133c:	fe 2f       	mov	r31, r30
    133e:	27 d0       	rcall	.+78     	; 0x138e <__divsf3_pse+0x8e>
    1340:	66 0f       	add	r22, r22
    1342:	77 1f       	adc	r23, r23
    1344:	88 1f       	adc	r24, r24
    1346:	bb 1f       	adc	r27, r27
    1348:	26 17       	cp	r18, r22
    134a:	37 07       	cpc	r19, r23
    134c:	48 07       	cpc	r20, r24
    134e:	ab 07       	cpc	r26, r27
    1350:	b0 e8       	ldi	r27, 0x80	; 128
    1352:	09 f0       	breq	.+2      	; 0x1356 <__divsf3_pse+0x56>
    1354:	bb 0b       	sbc	r27, r27
    1356:	80 2d       	mov	r24, r0
    1358:	bf 01       	movw	r22, r30
    135a:	ff 27       	eor	r31, r31
    135c:	93 58       	subi	r25, 0x83	; 131
    135e:	5f 4f       	sbci	r21, 0xFF	; 255
    1360:	2a f0       	brmi	.+10     	; 0x136c <__divsf3_pse+0x6c>
    1362:	9e 3f       	cpi	r25, 0xFE	; 254
    1364:	51 05       	cpc	r21, r1
    1366:	68 f0       	brcs	.+26     	; 0x1382 <__divsf3_pse+0x82>
    1368:	d1 c0       	rjmp	.+418    	; 0x150c <__fp_inf>
    136a:	51 c1       	rjmp	.+674    	; 0x160e <__fp_szero>
    136c:	5f 3f       	cpi	r21, 0xFF	; 255
    136e:	ec f3       	brlt	.-6      	; 0x136a <__divsf3_pse+0x6a>
    1370:	98 3e       	cpi	r25, 0xE8	; 232
    1372:	dc f3       	brlt	.-10     	; 0x136a <__divsf3_pse+0x6a>
    1374:	86 95       	lsr	r24
    1376:	77 95       	ror	r23
    1378:	67 95       	ror	r22
    137a:	b7 95       	ror	r27
    137c:	f7 95       	ror	r31
    137e:	9f 5f       	subi	r25, 0xFF	; 255
    1380:	c9 f7       	brne	.-14     	; 0x1374 <__divsf3_pse+0x74>
    1382:	88 0f       	add	r24, r24
    1384:	91 1d       	adc	r25, r1
    1386:	96 95       	lsr	r25
    1388:	87 95       	ror	r24
    138a:	97 f9       	bld	r25, 7
    138c:	08 95       	ret
    138e:	e1 e0       	ldi	r30, 0x01	; 1
    1390:	66 0f       	add	r22, r22
    1392:	77 1f       	adc	r23, r23
    1394:	88 1f       	adc	r24, r24
    1396:	bb 1f       	adc	r27, r27
    1398:	62 17       	cp	r22, r18
    139a:	73 07       	cpc	r23, r19
    139c:	84 07       	cpc	r24, r20
    139e:	ba 07       	cpc	r27, r26
    13a0:	20 f0       	brcs	.+8      	; 0x13aa <__divsf3_pse+0xaa>
    13a2:	62 1b       	sub	r22, r18
    13a4:	73 0b       	sbc	r23, r19
    13a6:	84 0b       	sbc	r24, r20
    13a8:	ba 0b       	sbc	r27, r26
    13aa:	ee 1f       	adc	r30, r30
    13ac:	88 f7       	brcc	.-30     	; 0x1390 <__divsf3_pse+0x90>
    13ae:	e0 95       	com	r30
    13b0:	08 95       	ret

000013b2 <__fixsfsi>:
    13b2:	04 d0       	rcall	.+8      	; 0x13bc <__fixunssfsi>
    13b4:	68 94       	set
    13b6:	b1 11       	cpse	r27, r1
    13b8:	2a c1       	rjmp	.+596    	; 0x160e <__fp_szero>
    13ba:	08 95       	ret

000013bc <__fixunssfsi>:
    13bc:	0d d1       	rcall	.+538    	; 0x15d8 <__fp_splitA>
    13be:	88 f0       	brcs	.+34     	; 0x13e2 <__fixunssfsi+0x26>
    13c0:	9f 57       	subi	r25, 0x7F	; 127
    13c2:	90 f0       	brcs	.+36     	; 0x13e8 <__fixunssfsi+0x2c>
    13c4:	b9 2f       	mov	r27, r25
    13c6:	99 27       	eor	r25, r25
    13c8:	b7 51       	subi	r27, 0x17	; 23
    13ca:	a0 f0       	brcs	.+40     	; 0x13f4 <__fixunssfsi+0x38>
    13cc:	d1 f0       	breq	.+52     	; 0x1402 <__fixunssfsi+0x46>
    13ce:	66 0f       	add	r22, r22
    13d0:	77 1f       	adc	r23, r23
    13d2:	88 1f       	adc	r24, r24
    13d4:	99 1f       	adc	r25, r25
    13d6:	1a f0       	brmi	.+6      	; 0x13de <__fixunssfsi+0x22>
    13d8:	ba 95       	dec	r27
    13da:	c9 f7       	brne	.-14     	; 0x13ce <__fixunssfsi+0x12>
    13dc:	12 c0       	rjmp	.+36     	; 0x1402 <__fixunssfsi+0x46>
    13de:	b1 30       	cpi	r27, 0x01	; 1
    13e0:	81 f0       	breq	.+32     	; 0x1402 <__fixunssfsi+0x46>
    13e2:	14 d1       	rcall	.+552    	; 0x160c <__fp_zero>
    13e4:	b1 e0       	ldi	r27, 0x01	; 1
    13e6:	08 95       	ret
    13e8:	11 c1       	rjmp	.+546    	; 0x160c <__fp_zero>
    13ea:	67 2f       	mov	r22, r23
    13ec:	78 2f       	mov	r23, r24
    13ee:	88 27       	eor	r24, r24
    13f0:	b8 5f       	subi	r27, 0xF8	; 248
    13f2:	39 f0       	breq	.+14     	; 0x1402 <__fixunssfsi+0x46>
    13f4:	b9 3f       	cpi	r27, 0xF9	; 249
    13f6:	cc f3       	brlt	.-14     	; 0x13ea <__fixunssfsi+0x2e>
    13f8:	86 95       	lsr	r24
    13fa:	77 95       	ror	r23
    13fc:	67 95       	ror	r22
    13fe:	b3 95       	inc	r27
    1400:	d9 f7       	brne	.-10     	; 0x13f8 <__fixunssfsi+0x3c>
    1402:	3e f4       	brtc	.+14     	; 0x1412 <__fixunssfsi+0x56>
    1404:	90 95       	com	r25
    1406:	80 95       	com	r24
    1408:	70 95       	com	r23
    140a:	61 95       	neg	r22
    140c:	7f 4f       	sbci	r23, 0xFF	; 255
    140e:	8f 4f       	sbci	r24, 0xFF	; 255
    1410:	9f 4f       	sbci	r25, 0xFF	; 255
    1412:	08 95       	ret

00001414 <__floatunsisf>:
    1414:	e8 94       	clt
    1416:	09 c0       	rjmp	.+18     	; 0x142a <__floatsisf+0x12>

00001418 <__floatsisf>:
    1418:	97 fb       	bst	r25, 7
    141a:	3e f4       	brtc	.+14     	; 0x142a <__floatsisf+0x12>
    141c:	90 95       	com	r25
    141e:	80 95       	com	r24
    1420:	70 95       	com	r23
    1422:	61 95       	neg	r22
    1424:	7f 4f       	sbci	r23, 0xFF	; 255
    1426:	8f 4f       	sbci	r24, 0xFF	; 255
    1428:	9f 4f       	sbci	r25, 0xFF	; 255
    142a:	99 23       	and	r25, r25
    142c:	a9 f0       	breq	.+42     	; 0x1458 <__floatsisf+0x40>
    142e:	f9 2f       	mov	r31, r25
    1430:	96 e9       	ldi	r25, 0x96	; 150
    1432:	bb 27       	eor	r27, r27
    1434:	93 95       	inc	r25
    1436:	f6 95       	lsr	r31
    1438:	87 95       	ror	r24
    143a:	77 95       	ror	r23
    143c:	67 95       	ror	r22
    143e:	b7 95       	ror	r27
    1440:	f1 11       	cpse	r31, r1
    1442:	f8 cf       	rjmp	.-16     	; 0x1434 <__floatsisf+0x1c>
    1444:	fa f4       	brpl	.+62     	; 0x1484 <__floatsisf+0x6c>
    1446:	bb 0f       	add	r27, r27
    1448:	11 f4       	brne	.+4      	; 0x144e <__floatsisf+0x36>
    144a:	60 ff       	sbrs	r22, 0
    144c:	1b c0       	rjmp	.+54     	; 0x1484 <__floatsisf+0x6c>
    144e:	6f 5f       	subi	r22, 0xFF	; 255
    1450:	7f 4f       	sbci	r23, 0xFF	; 255
    1452:	8f 4f       	sbci	r24, 0xFF	; 255
    1454:	9f 4f       	sbci	r25, 0xFF	; 255
    1456:	16 c0       	rjmp	.+44     	; 0x1484 <__floatsisf+0x6c>
    1458:	88 23       	and	r24, r24
    145a:	11 f0       	breq	.+4      	; 0x1460 <__floatsisf+0x48>
    145c:	96 e9       	ldi	r25, 0x96	; 150
    145e:	11 c0       	rjmp	.+34     	; 0x1482 <__floatsisf+0x6a>
    1460:	77 23       	and	r23, r23
    1462:	21 f0       	breq	.+8      	; 0x146c <__floatsisf+0x54>
    1464:	9e e8       	ldi	r25, 0x8E	; 142
    1466:	87 2f       	mov	r24, r23
    1468:	76 2f       	mov	r23, r22
    146a:	05 c0       	rjmp	.+10     	; 0x1476 <__floatsisf+0x5e>
    146c:	66 23       	and	r22, r22
    146e:	71 f0       	breq	.+28     	; 0x148c <__floatsisf+0x74>
    1470:	96 e8       	ldi	r25, 0x86	; 134
    1472:	86 2f       	mov	r24, r22
    1474:	70 e0       	ldi	r23, 0x00	; 0
    1476:	60 e0       	ldi	r22, 0x00	; 0
    1478:	2a f0       	brmi	.+10     	; 0x1484 <__floatsisf+0x6c>
    147a:	9a 95       	dec	r25
    147c:	66 0f       	add	r22, r22
    147e:	77 1f       	adc	r23, r23
    1480:	88 1f       	adc	r24, r24
    1482:	da f7       	brpl	.-10     	; 0x147a <__floatsisf+0x62>
    1484:	88 0f       	add	r24, r24
    1486:	96 95       	lsr	r25
    1488:	87 95       	ror	r24
    148a:	97 f9       	bld	r25, 7
    148c:	08 95       	ret

0000148e <__fp_arccos>:
    148e:	df 93       	push	r29
    1490:	cf 93       	push	r28
    1492:	1f 93       	push	r17
    1494:	0f 93       	push	r16
    1496:	8b 01       	movw	r16, r22
    1498:	ec 01       	movw	r28, r24
    149a:	e5 e2       	ldi	r30, 0x25	; 37
    149c:	f1 e0       	ldi	r31, 0x01	; 1
    149e:	3f d0       	rcall	.+126    	; 0x151e <__fp_powser>
    14a0:	82 d0       	rcall	.+260    	; 0x15a6 <__fp_round>
    14a2:	98 01       	movw	r18, r16
    14a4:	ae 01       	movw	r20, r28
    14a6:	8b 01       	movw	r16, r22
    14a8:	ec 01       	movw	r28, r24
    14aa:	60 e0       	ldi	r22, 0x00	; 0
    14ac:	70 e0       	ldi	r23, 0x00	; 0
    14ae:	80 e8       	ldi	r24, 0x80	; 128
    14b0:	9f e3       	ldi	r25, 0x3F	; 63
    14b2:	35 de       	rcall	.-918    	; 0x111e <__subsf3>
    14b4:	24 d1       	rcall	.+584    	; 0x16fe <sqrt>
    14b6:	98 01       	movw	r18, r16
    14b8:	ae 01       	movw	r20, r28
    14ba:	0f 91       	pop	r16
    14bc:	1f 91       	pop	r17
    14be:	cf 91       	pop	r28
    14c0:	df 91       	pop	r29
    14c2:	c2 c0       	rjmp	.+388    	; 0x1648 <__mulsf3x>

000014c4 <__fp_cmp>:
    14c4:	99 0f       	add	r25, r25
    14c6:	00 08       	sbc	r0, r0
    14c8:	55 0f       	add	r21, r21
    14ca:	aa 0b       	sbc	r26, r26
    14cc:	e0 e8       	ldi	r30, 0x80	; 128
    14ce:	fe ef       	ldi	r31, 0xFE	; 254
    14d0:	16 16       	cp	r1, r22
    14d2:	17 06       	cpc	r1, r23
    14d4:	e8 07       	cpc	r30, r24
    14d6:	f9 07       	cpc	r31, r25
    14d8:	c0 f0       	brcs	.+48     	; 0x150a <__fp_cmp+0x46>
    14da:	12 16       	cp	r1, r18
    14dc:	13 06       	cpc	r1, r19
    14de:	e4 07       	cpc	r30, r20
    14e0:	f5 07       	cpc	r31, r21
    14e2:	98 f0       	brcs	.+38     	; 0x150a <__fp_cmp+0x46>
    14e4:	62 1b       	sub	r22, r18
    14e6:	73 0b       	sbc	r23, r19
    14e8:	84 0b       	sbc	r24, r20
    14ea:	95 0b       	sbc	r25, r21
    14ec:	39 f4       	brne	.+14     	; 0x14fc <__fp_cmp+0x38>
    14ee:	0a 26       	eor	r0, r26
    14f0:	61 f0       	breq	.+24     	; 0x150a <__fp_cmp+0x46>
    14f2:	23 2b       	or	r18, r19
    14f4:	24 2b       	or	r18, r20
    14f6:	25 2b       	or	r18, r21
    14f8:	21 f4       	brne	.+8      	; 0x1502 <__fp_cmp+0x3e>
    14fa:	08 95       	ret
    14fc:	0a 26       	eor	r0, r26
    14fe:	09 f4       	brne	.+2      	; 0x1502 <__fp_cmp+0x3e>
    1500:	a1 40       	sbci	r26, 0x01	; 1
    1502:	a6 95       	lsr	r26
    1504:	8f ef       	ldi	r24, 0xFF	; 255
    1506:	81 1d       	adc	r24, r1
    1508:	81 1d       	adc	r24, r1
    150a:	08 95       	ret

0000150c <__fp_inf>:
    150c:	97 f9       	bld	r25, 7
    150e:	9f 67       	ori	r25, 0x7F	; 127
    1510:	80 e8       	ldi	r24, 0x80	; 128
    1512:	70 e0       	ldi	r23, 0x00	; 0
    1514:	60 e0       	ldi	r22, 0x00	; 0
    1516:	08 95       	ret

00001518 <__fp_nan>:
    1518:	9f ef       	ldi	r25, 0xFF	; 255
    151a:	80 ec       	ldi	r24, 0xC0	; 192
    151c:	08 95       	ret

0000151e <__fp_powser>:
    151e:	df 93       	push	r29
    1520:	cf 93       	push	r28
    1522:	1f 93       	push	r17
    1524:	0f 93       	push	r16
    1526:	ff 92       	push	r15
    1528:	ef 92       	push	r14
    152a:	df 92       	push	r13
    152c:	7b 01       	movw	r14, r22
    152e:	8c 01       	movw	r16, r24
    1530:	68 94       	set
    1532:	05 c0       	rjmp	.+10     	; 0x153e <__fp_powser+0x20>
    1534:	da 2e       	mov	r13, r26
    1536:	ef 01       	movw	r28, r30
    1538:	87 d0       	rcall	.+270    	; 0x1648 <__mulsf3x>
    153a:	fe 01       	movw	r30, r28
    153c:	e8 94       	clt
    153e:	a5 91       	lpm	r26, Z+
    1540:	25 91       	lpm	r18, Z+
    1542:	35 91       	lpm	r19, Z+
    1544:	45 91       	lpm	r20, Z+
    1546:	55 91       	lpm	r21, Z+
    1548:	ae f3       	brts	.-22     	; 0x1534 <__fp_powser+0x16>
    154a:	ef 01       	movw	r28, r30
    154c:	fa dd       	rcall	.-1036   	; 0x1142 <__addsf3x>
    154e:	fe 01       	movw	r30, r28
    1550:	97 01       	movw	r18, r14
    1552:	a8 01       	movw	r20, r16
    1554:	da 94       	dec	r13
    1556:	79 f7       	brne	.-34     	; 0x1536 <__fp_powser+0x18>
    1558:	df 90       	pop	r13
    155a:	ef 90       	pop	r14
    155c:	ff 90       	pop	r15
    155e:	0f 91       	pop	r16
    1560:	1f 91       	pop	r17
    1562:	cf 91       	pop	r28
    1564:	df 91       	pop	r29
    1566:	08 95       	ret

00001568 <__fp_powsodd>:
    1568:	9f 93       	push	r25
    156a:	8f 93       	push	r24
    156c:	7f 93       	push	r23
    156e:	6f 93       	push	r22
    1570:	ff 93       	push	r31
    1572:	ef 93       	push	r30
    1574:	9b 01       	movw	r18, r22
    1576:	ac 01       	movw	r20, r24
    1578:	5b d0       	rcall	.+182    	; 0x1630 <__mulsf3>
    157a:	ef 91       	pop	r30
    157c:	ff 91       	pop	r31
    157e:	cf df       	rcall	.-98     	; 0x151e <__fp_powser>
    1580:	2f 91       	pop	r18
    1582:	3f 91       	pop	r19
    1584:	4f 91       	pop	r20
    1586:	5f 91       	pop	r21
    1588:	53 c0       	rjmp	.+166    	; 0x1630 <__mulsf3>

0000158a <__fp_pscA>:
    158a:	00 24       	eor	r0, r0
    158c:	0a 94       	dec	r0
    158e:	16 16       	cp	r1, r22
    1590:	17 06       	cpc	r1, r23
    1592:	18 06       	cpc	r1, r24
    1594:	09 06       	cpc	r0, r25
    1596:	08 95       	ret

00001598 <__fp_pscB>:
    1598:	00 24       	eor	r0, r0
    159a:	0a 94       	dec	r0
    159c:	12 16       	cp	r1, r18
    159e:	13 06       	cpc	r1, r19
    15a0:	14 06       	cpc	r1, r20
    15a2:	05 06       	cpc	r0, r21
    15a4:	08 95       	ret

000015a6 <__fp_round>:
    15a6:	09 2e       	mov	r0, r25
    15a8:	03 94       	inc	r0
    15aa:	00 0c       	add	r0, r0
    15ac:	11 f4       	brne	.+4      	; 0x15b2 <__fp_round+0xc>
    15ae:	88 23       	and	r24, r24
    15b0:	52 f0       	brmi	.+20     	; 0x15c6 <__fp_round+0x20>
    15b2:	bb 0f       	add	r27, r27
    15b4:	40 f4       	brcc	.+16     	; 0x15c6 <__fp_round+0x20>
    15b6:	bf 2b       	or	r27, r31
    15b8:	11 f4       	brne	.+4      	; 0x15be <__fp_round+0x18>
    15ba:	60 ff       	sbrs	r22, 0
    15bc:	04 c0       	rjmp	.+8      	; 0x15c6 <__fp_round+0x20>
    15be:	6f 5f       	subi	r22, 0xFF	; 255
    15c0:	7f 4f       	sbci	r23, 0xFF	; 255
    15c2:	8f 4f       	sbci	r24, 0xFF	; 255
    15c4:	9f 4f       	sbci	r25, 0xFF	; 255
    15c6:	08 95       	ret

000015c8 <__fp_split3>:
    15c8:	57 fd       	sbrc	r21, 7
    15ca:	90 58       	subi	r25, 0x80	; 128
    15cc:	44 0f       	add	r20, r20
    15ce:	55 1f       	adc	r21, r21
    15d0:	59 f0       	breq	.+22     	; 0x15e8 <__fp_splitA+0x10>
    15d2:	5f 3f       	cpi	r21, 0xFF	; 255
    15d4:	71 f0       	breq	.+28     	; 0x15f2 <__fp_splitA+0x1a>
    15d6:	47 95       	ror	r20

000015d8 <__fp_splitA>:
    15d8:	88 0f       	add	r24, r24
    15da:	97 fb       	bst	r25, 7
    15dc:	99 1f       	adc	r25, r25
    15de:	61 f0       	breq	.+24     	; 0x15f8 <__fp_splitA+0x20>
    15e0:	9f 3f       	cpi	r25, 0xFF	; 255
    15e2:	79 f0       	breq	.+30     	; 0x1602 <__fp_splitA+0x2a>
    15e4:	87 95       	ror	r24
    15e6:	08 95       	ret
    15e8:	12 16       	cp	r1, r18
    15ea:	13 06       	cpc	r1, r19
    15ec:	14 06       	cpc	r1, r20
    15ee:	55 1f       	adc	r21, r21
    15f0:	f2 cf       	rjmp	.-28     	; 0x15d6 <__fp_split3+0xe>
    15f2:	46 95       	lsr	r20
    15f4:	f1 df       	rcall	.-30     	; 0x15d8 <__fp_splitA>
    15f6:	08 c0       	rjmp	.+16     	; 0x1608 <__fp_splitA+0x30>
    15f8:	16 16       	cp	r1, r22
    15fa:	17 06       	cpc	r1, r23
    15fc:	18 06       	cpc	r1, r24
    15fe:	99 1f       	adc	r25, r25
    1600:	f1 cf       	rjmp	.-30     	; 0x15e4 <__fp_splitA+0xc>
    1602:	86 95       	lsr	r24
    1604:	71 05       	cpc	r23, r1
    1606:	61 05       	cpc	r22, r1
    1608:	08 94       	sec
    160a:	08 95       	ret

0000160c <__fp_zero>:
    160c:	e8 94       	clt

0000160e <__fp_szero>:
    160e:	bb 27       	eor	r27, r27
    1610:	66 27       	eor	r22, r22
    1612:	77 27       	eor	r23, r23
    1614:	cb 01       	movw	r24, r22
    1616:	97 f9       	bld	r25, 7
    1618:	08 95       	ret

0000161a <__gesf2>:
    161a:	54 df       	rcall	.-344    	; 0x14c4 <__fp_cmp>
    161c:	08 f4       	brcc	.+2      	; 0x1620 <__gesf2+0x6>
    161e:	8f ef       	ldi	r24, 0xFF	; 255
    1620:	08 95       	ret

00001622 <inverse>:
    1622:	9b 01       	movw	r18, r22
    1624:	ac 01       	movw	r20, r24
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	80 e8       	ldi	r24, 0x80	; 128
    162c:	9f e3       	ldi	r25, 0x3F	; 63
    162e:	59 ce       	rjmp	.-846    	; 0x12e2 <__divsf3>

00001630 <__mulsf3>:
    1630:	0b d0       	rcall	.+22     	; 0x1648 <__mulsf3x>
    1632:	b9 cf       	rjmp	.-142    	; 0x15a6 <__fp_round>
    1634:	aa df       	rcall	.-172    	; 0x158a <__fp_pscA>
    1636:	28 f0       	brcs	.+10     	; 0x1642 <__mulsf3+0x12>
    1638:	af df       	rcall	.-162    	; 0x1598 <__fp_pscB>
    163a:	18 f0       	brcs	.+6      	; 0x1642 <__mulsf3+0x12>
    163c:	95 23       	and	r25, r21
    163e:	09 f0       	breq	.+2      	; 0x1642 <__mulsf3+0x12>
    1640:	65 cf       	rjmp	.-310    	; 0x150c <__fp_inf>
    1642:	6a cf       	rjmp	.-300    	; 0x1518 <__fp_nan>
    1644:	11 24       	eor	r1, r1
    1646:	e3 cf       	rjmp	.-58     	; 0x160e <__fp_szero>

00001648 <__mulsf3x>:
    1648:	bf df       	rcall	.-130    	; 0x15c8 <__fp_split3>
    164a:	a0 f3       	brcs	.-24     	; 0x1634 <__mulsf3+0x4>

0000164c <__mulsf3_pse>:
    164c:	95 9f       	mul	r25, r21
    164e:	d1 f3       	breq	.-12     	; 0x1644 <__mulsf3+0x14>
    1650:	95 0f       	add	r25, r21
    1652:	50 e0       	ldi	r21, 0x00	; 0
    1654:	55 1f       	adc	r21, r21
    1656:	62 9f       	mul	r22, r18
    1658:	f0 01       	movw	r30, r0
    165a:	72 9f       	mul	r23, r18
    165c:	bb 27       	eor	r27, r27
    165e:	f0 0d       	add	r31, r0
    1660:	b1 1d       	adc	r27, r1
    1662:	63 9f       	mul	r22, r19
    1664:	aa 27       	eor	r26, r26
    1666:	f0 0d       	add	r31, r0
    1668:	b1 1d       	adc	r27, r1
    166a:	aa 1f       	adc	r26, r26
    166c:	64 9f       	mul	r22, r20
    166e:	66 27       	eor	r22, r22
    1670:	b0 0d       	add	r27, r0
    1672:	a1 1d       	adc	r26, r1
    1674:	66 1f       	adc	r22, r22
    1676:	82 9f       	mul	r24, r18
    1678:	22 27       	eor	r18, r18
    167a:	b0 0d       	add	r27, r0
    167c:	a1 1d       	adc	r26, r1
    167e:	62 1f       	adc	r22, r18
    1680:	73 9f       	mul	r23, r19
    1682:	b0 0d       	add	r27, r0
    1684:	a1 1d       	adc	r26, r1
    1686:	62 1f       	adc	r22, r18
    1688:	83 9f       	mul	r24, r19
    168a:	a0 0d       	add	r26, r0
    168c:	61 1d       	adc	r22, r1
    168e:	22 1f       	adc	r18, r18
    1690:	74 9f       	mul	r23, r20
    1692:	33 27       	eor	r19, r19
    1694:	a0 0d       	add	r26, r0
    1696:	61 1d       	adc	r22, r1
    1698:	23 1f       	adc	r18, r19
    169a:	84 9f       	mul	r24, r20
    169c:	60 0d       	add	r22, r0
    169e:	21 1d       	adc	r18, r1
    16a0:	82 2f       	mov	r24, r18
    16a2:	76 2f       	mov	r23, r22
    16a4:	6a 2f       	mov	r22, r26
    16a6:	11 24       	eor	r1, r1
    16a8:	9f 57       	subi	r25, 0x7F	; 127
    16aa:	50 40       	sbci	r21, 0x00	; 0
    16ac:	8a f0       	brmi	.+34     	; 0x16d0 <__mulsf3_pse+0x84>
    16ae:	e1 f0       	breq	.+56     	; 0x16e8 <__mulsf3_pse+0x9c>
    16b0:	88 23       	and	r24, r24
    16b2:	4a f0       	brmi	.+18     	; 0x16c6 <__mulsf3_pse+0x7a>
    16b4:	ee 0f       	add	r30, r30
    16b6:	ff 1f       	adc	r31, r31
    16b8:	bb 1f       	adc	r27, r27
    16ba:	66 1f       	adc	r22, r22
    16bc:	77 1f       	adc	r23, r23
    16be:	88 1f       	adc	r24, r24
    16c0:	91 50       	subi	r25, 0x01	; 1
    16c2:	50 40       	sbci	r21, 0x00	; 0
    16c4:	a9 f7       	brne	.-22     	; 0x16b0 <__mulsf3_pse+0x64>
    16c6:	9e 3f       	cpi	r25, 0xFE	; 254
    16c8:	51 05       	cpc	r21, r1
    16ca:	70 f0       	brcs	.+28     	; 0x16e8 <__mulsf3_pse+0x9c>
    16cc:	1f cf       	rjmp	.-450    	; 0x150c <__fp_inf>
    16ce:	9f cf       	rjmp	.-194    	; 0x160e <__fp_szero>
    16d0:	5f 3f       	cpi	r21, 0xFF	; 255
    16d2:	ec f3       	brlt	.-6      	; 0x16ce <__mulsf3_pse+0x82>
    16d4:	98 3e       	cpi	r25, 0xE8	; 232
    16d6:	dc f3       	brlt	.-10     	; 0x16ce <__mulsf3_pse+0x82>
    16d8:	86 95       	lsr	r24
    16da:	77 95       	ror	r23
    16dc:	67 95       	ror	r22
    16de:	b7 95       	ror	r27
    16e0:	f7 95       	ror	r31
    16e2:	e7 95       	ror	r30
    16e4:	9f 5f       	subi	r25, 0xFF	; 255
    16e6:	c1 f7       	brne	.-16     	; 0x16d8 <__mulsf3_pse+0x8c>
    16e8:	fe 2b       	or	r31, r30
    16ea:	88 0f       	add	r24, r24
    16ec:	91 1d       	adc	r25, r1
    16ee:	96 95       	lsr	r25
    16f0:	87 95       	ror	r24
    16f2:	97 f9       	bld	r25, 7
    16f4:	08 95       	ret
    16f6:	11 f4       	brne	.+4      	; 0x16fc <__mulsf3_pse+0xb0>
    16f8:	0e f4       	brtc	.+2      	; 0x16fc <__mulsf3_pse+0xb0>
    16fa:	0e cf       	rjmp	.-484    	; 0x1518 <__fp_nan>
    16fc:	41 c0       	rjmp	.+130    	; 0x1780 <__fp_mpack>

000016fe <sqrt>:
    16fe:	6c df       	rcall	.-296    	; 0x15d8 <__fp_splitA>
    1700:	d0 f3       	brcs	.-12     	; 0x16f6 <__mulsf3_pse+0xaa>
    1702:	99 23       	and	r25, r25
    1704:	d9 f3       	breq	.-10     	; 0x16fc <__mulsf3_pse+0xb0>
    1706:	ce f3       	brts	.-14     	; 0x16fa <__mulsf3_pse+0xae>
    1708:	9f 57       	subi	r25, 0x7F	; 127
    170a:	55 0b       	sbc	r21, r21
    170c:	87 ff       	sbrs	r24, 7
    170e:	46 d0       	rcall	.+140    	; 0x179c <__fp_norm2>
    1710:	00 24       	eor	r0, r0
    1712:	a0 e6       	ldi	r26, 0x60	; 96
    1714:	40 ea       	ldi	r20, 0xA0	; 160
    1716:	90 01       	movw	r18, r0
    1718:	80 58       	subi	r24, 0x80	; 128
    171a:	56 95       	lsr	r21
    171c:	97 95       	ror	r25
    171e:	28 f4       	brcc	.+10     	; 0x172a <sqrt+0x2c>
    1720:	80 5c       	subi	r24, 0xC0	; 192
    1722:	66 0f       	add	r22, r22
    1724:	77 1f       	adc	r23, r23
    1726:	88 1f       	adc	r24, r24
    1728:	20 f0       	brcs	.+8      	; 0x1732 <sqrt+0x34>
    172a:	26 17       	cp	r18, r22
    172c:	37 07       	cpc	r19, r23
    172e:	48 07       	cpc	r20, r24
    1730:	30 f4       	brcc	.+12     	; 0x173e <sqrt+0x40>
    1732:	62 1b       	sub	r22, r18
    1734:	73 0b       	sbc	r23, r19
    1736:	84 0b       	sbc	r24, r20
    1738:	20 29       	or	r18, r0
    173a:	31 29       	or	r19, r1
    173c:	4a 2b       	or	r20, r26
    173e:	a6 95       	lsr	r26
    1740:	17 94       	ror	r1
    1742:	07 94       	ror	r0
    1744:	20 25       	eor	r18, r0
    1746:	31 25       	eor	r19, r1
    1748:	4a 27       	eor	r20, r26
    174a:	58 f7       	brcc	.-42     	; 0x1722 <sqrt+0x24>
    174c:	66 0f       	add	r22, r22
    174e:	77 1f       	adc	r23, r23
    1750:	88 1f       	adc	r24, r24
    1752:	20 f0       	brcs	.+8      	; 0x175c <sqrt+0x5e>
    1754:	26 17       	cp	r18, r22
    1756:	37 07       	cpc	r19, r23
    1758:	48 07       	cpc	r20, r24
    175a:	30 f4       	brcc	.+12     	; 0x1768 <sqrt+0x6a>
    175c:	62 0b       	sbc	r22, r18
    175e:	73 0b       	sbc	r23, r19
    1760:	84 0b       	sbc	r24, r20
    1762:	20 0d       	add	r18, r0
    1764:	31 1d       	adc	r19, r1
    1766:	41 1d       	adc	r20, r1
    1768:	a0 95       	com	r26
    176a:	81 f7       	brne	.-32     	; 0x174c <sqrt+0x4e>
    176c:	b9 01       	movw	r22, r18
    176e:	84 2f       	mov	r24, r20
    1770:	91 58       	subi	r25, 0x81	; 129
    1772:	88 0f       	add	r24, r24
    1774:	96 95       	lsr	r25
    1776:	87 95       	ror	r24
    1778:	08 95       	ret

0000177a <square>:
    177a:	9b 01       	movw	r18, r22
    177c:	ac 01       	movw	r20, r24
    177e:	58 cf       	rjmp	.-336    	; 0x1630 <__mulsf3>

00001780 <__fp_mpack>:
    1780:	9f 3f       	cpi	r25, 0xFF	; 255
    1782:	31 f0       	breq	.+12     	; 0x1790 <__fp_mpack_finite+0xc>

00001784 <__fp_mpack_finite>:
    1784:	91 50       	subi	r25, 0x01	; 1
    1786:	20 f4       	brcc	.+8      	; 0x1790 <__fp_mpack_finite+0xc>
    1788:	87 95       	ror	r24
    178a:	77 95       	ror	r23
    178c:	67 95       	ror	r22
    178e:	b7 95       	ror	r27
    1790:	88 0f       	add	r24, r24
    1792:	91 1d       	adc	r25, r1
    1794:	96 95       	lsr	r25
    1796:	87 95       	ror	r24
    1798:	97 f9       	bld	r25, 7
    179a:	08 95       	ret

0000179c <__fp_norm2>:
    179c:	91 50       	subi	r25, 0x01	; 1
    179e:	50 40       	sbci	r21, 0x00	; 0
    17a0:	66 0f       	add	r22, r22
    17a2:	77 1f       	adc	r23, r23
    17a4:	88 1f       	adc	r24, r24
    17a6:	d2 f7       	brpl	.-12     	; 0x179c <__fp_norm2>
    17a8:	08 95       	ret

000017aa <vfprintf>:
    17aa:	2f 92       	push	r2
    17ac:	3f 92       	push	r3
    17ae:	4f 92       	push	r4
    17b0:	5f 92       	push	r5
    17b2:	6f 92       	push	r6
    17b4:	7f 92       	push	r7
    17b6:	8f 92       	push	r8
    17b8:	9f 92       	push	r9
    17ba:	af 92       	push	r10
    17bc:	bf 92       	push	r11
    17be:	cf 92       	push	r12
    17c0:	df 92       	push	r13
    17c2:	ef 92       	push	r14
    17c4:	ff 92       	push	r15
    17c6:	0f 93       	push	r16
    17c8:	1f 93       	push	r17
    17ca:	cf 93       	push	r28
    17cc:	df 93       	push	r29
    17ce:	cd b7       	in	r28, 0x3d	; 61
    17d0:	de b7       	in	r29, 0x3e	; 62
    17d2:	60 97       	sbiw	r28, 0x10	; 16
    17d4:	0f b6       	in	r0, 0x3f	; 63
    17d6:	f8 94       	cli
    17d8:	de bf       	out	0x3e, r29	; 62
    17da:	0f be       	out	0x3f, r0	; 63
    17dc:	cd bf       	out	0x3d, r28	; 61
    17de:	7c 01       	movw	r14, r24
    17e0:	1b 01       	movw	r2, r22
    17e2:	6a 01       	movw	r12, r20
    17e4:	fc 01       	movw	r30, r24
    17e6:	17 82       	std	Z+7, r1	; 0x07
    17e8:	16 82       	std	Z+6, r1	; 0x06
    17ea:	83 81       	ldd	r24, Z+3	; 0x03
    17ec:	81 ff       	sbrs	r24, 1
    17ee:	2a c3       	rjmp	.+1620   	; 0x1e44 <vfprintf+0x69a>
    17f0:	9e 01       	movw	r18, r28
    17f2:	2f 5f       	subi	r18, 0xFF	; 255
    17f4:	3f 4f       	sbci	r19, 0xFF	; 255
    17f6:	39 01       	movw	r6, r18
    17f8:	f7 01       	movw	r30, r14
    17fa:	93 81       	ldd	r25, Z+3	; 0x03
    17fc:	f1 01       	movw	r30, r2
    17fe:	93 fd       	sbrc	r25, 3
    1800:	85 91       	lpm	r24, Z+
    1802:	93 ff       	sbrs	r25, 3
    1804:	81 91       	ld	r24, Z+
    1806:	1f 01       	movw	r2, r30
    1808:	88 23       	and	r24, r24
    180a:	09 f4       	brne	.+2      	; 0x180e <vfprintf+0x64>
    180c:	17 c3       	rjmp	.+1582   	; 0x1e3c <vfprintf+0x692>
    180e:	85 32       	cpi	r24, 0x25	; 37
    1810:	39 f4       	brne	.+14     	; 0x1820 <vfprintf+0x76>
    1812:	93 fd       	sbrc	r25, 3
    1814:	85 91       	lpm	r24, Z+
    1816:	93 ff       	sbrs	r25, 3
    1818:	81 91       	ld	r24, Z+
    181a:	1f 01       	movw	r2, r30
    181c:	85 32       	cpi	r24, 0x25	; 37
    181e:	31 f4       	brne	.+12     	; 0x182c <vfprintf+0x82>
    1820:	b7 01       	movw	r22, r14
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	aa d4       	rcall	.+2388   	; 0x217a <fputc>
    1826:	56 01       	movw	r10, r12
    1828:	65 01       	movw	r12, r10
    182a:	e6 cf       	rjmp	.-52     	; 0x17f8 <vfprintf+0x4e>
    182c:	10 e0       	ldi	r17, 0x00	; 0
    182e:	51 2c       	mov	r5, r1
    1830:	91 2c       	mov	r9, r1
    1832:	ff e1       	ldi	r31, 0x1F	; 31
    1834:	f9 15       	cp	r31, r9
    1836:	d8 f0       	brcs	.+54     	; 0x186e <vfprintf+0xc4>
    1838:	8b 32       	cpi	r24, 0x2B	; 43
    183a:	79 f0       	breq	.+30     	; 0x185a <vfprintf+0xb0>
    183c:	38 f4       	brcc	.+14     	; 0x184c <vfprintf+0xa2>
    183e:	80 32       	cpi	r24, 0x20	; 32
    1840:	79 f0       	breq	.+30     	; 0x1860 <vfprintf+0xb6>
    1842:	83 32       	cpi	r24, 0x23	; 35
    1844:	a1 f4       	brne	.+40     	; 0x186e <vfprintf+0xc4>
    1846:	f9 2d       	mov	r31, r9
    1848:	f0 61       	ori	r31, 0x10	; 16
    184a:	2e c0       	rjmp	.+92     	; 0x18a8 <vfprintf+0xfe>
    184c:	8d 32       	cpi	r24, 0x2D	; 45
    184e:	61 f0       	breq	.+24     	; 0x1868 <vfprintf+0xbe>
    1850:	80 33       	cpi	r24, 0x30	; 48
    1852:	69 f4       	brne	.+26     	; 0x186e <vfprintf+0xc4>
    1854:	29 2d       	mov	r18, r9
    1856:	21 60       	ori	r18, 0x01	; 1
    1858:	2d c0       	rjmp	.+90     	; 0x18b4 <vfprintf+0x10a>
    185a:	39 2d       	mov	r19, r9
    185c:	32 60       	ori	r19, 0x02	; 2
    185e:	93 2e       	mov	r9, r19
    1860:	89 2d       	mov	r24, r9
    1862:	84 60       	ori	r24, 0x04	; 4
    1864:	98 2e       	mov	r9, r24
    1866:	2a c0       	rjmp	.+84     	; 0x18bc <vfprintf+0x112>
    1868:	e9 2d       	mov	r30, r9
    186a:	e8 60       	ori	r30, 0x08	; 8
    186c:	15 c0       	rjmp	.+42     	; 0x1898 <vfprintf+0xee>
    186e:	97 fc       	sbrc	r9, 7
    1870:	2d c0       	rjmp	.+90     	; 0x18cc <vfprintf+0x122>
    1872:	20 ed       	ldi	r18, 0xD0	; 208
    1874:	28 0f       	add	r18, r24
    1876:	2a 30       	cpi	r18, 0x0A	; 10
    1878:	88 f4       	brcc	.+34     	; 0x189c <vfprintf+0xf2>
    187a:	96 fe       	sbrs	r9, 6
    187c:	06 c0       	rjmp	.+12     	; 0x188a <vfprintf+0xe0>
    187e:	3a e0       	ldi	r19, 0x0A	; 10
    1880:	13 9f       	mul	r17, r19
    1882:	20 0d       	add	r18, r0
    1884:	11 24       	eor	r1, r1
    1886:	12 2f       	mov	r17, r18
    1888:	19 c0       	rjmp	.+50     	; 0x18bc <vfprintf+0x112>
    188a:	8a e0       	ldi	r24, 0x0A	; 10
    188c:	58 9e       	mul	r5, r24
    188e:	20 0d       	add	r18, r0
    1890:	11 24       	eor	r1, r1
    1892:	52 2e       	mov	r5, r18
    1894:	e9 2d       	mov	r30, r9
    1896:	e0 62       	ori	r30, 0x20	; 32
    1898:	9e 2e       	mov	r9, r30
    189a:	10 c0       	rjmp	.+32     	; 0x18bc <vfprintf+0x112>
    189c:	8e 32       	cpi	r24, 0x2E	; 46
    189e:	31 f4       	brne	.+12     	; 0x18ac <vfprintf+0x102>
    18a0:	96 fc       	sbrc	r9, 6
    18a2:	cc c2       	rjmp	.+1432   	; 0x1e3c <vfprintf+0x692>
    18a4:	f9 2d       	mov	r31, r9
    18a6:	f0 64       	ori	r31, 0x40	; 64
    18a8:	9f 2e       	mov	r9, r31
    18aa:	08 c0       	rjmp	.+16     	; 0x18bc <vfprintf+0x112>
    18ac:	8c 36       	cpi	r24, 0x6C	; 108
    18ae:	21 f4       	brne	.+8      	; 0x18b8 <vfprintf+0x10e>
    18b0:	29 2d       	mov	r18, r9
    18b2:	20 68       	ori	r18, 0x80	; 128
    18b4:	92 2e       	mov	r9, r18
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <vfprintf+0x112>
    18b8:	88 36       	cpi	r24, 0x68	; 104
    18ba:	41 f4       	brne	.+16     	; 0x18cc <vfprintf+0x122>
    18bc:	f1 01       	movw	r30, r2
    18be:	93 fd       	sbrc	r25, 3
    18c0:	85 91       	lpm	r24, Z+
    18c2:	93 ff       	sbrs	r25, 3
    18c4:	81 91       	ld	r24, Z+
    18c6:	1f 01       	movw	r2, r30
    18c8:	81 11       	cpse	r24, r1
    18ca:	b3 cf       	rjmp	.-154    	; 0x1832 <vfprintf+0x88>
    18cc:	9b eb       	ldi	r25, 0xBB	; 187
    18ce:	98 0f       	add	r25, r24
    18d0:	93 30       	cpi	r25, 0x03	; 3
    18d2:	20 f4       	brcc	.+8      	; 0x18dc <vfprintf+0x132>
    18d4:	99 2d       	mov	r25, r9
    18d6:	90 61       	ori	r25, 0x10	; 16
    18d8:	80 5e       	subi	r24, 0xE0	; 224
    18da:	07 c0       	rjmp	.+14     	; 0x18ea <vfprintf+0x140>
    18dc:	9b e9       	ldi	r25, 0x9B	; 155
    18de:	98 0f       	add	r25, r24
    18e0:	93 30       	cpi	r25, 0x03	; 3
    18e2:	08 f0       	brcs	.+2      	; 0x18e6 <vfprintf+0x13c>
    18e4:	59 c1       	rjmp	.+690    	; 0x1b98 <vfprintf+0x3ee>
    18e6:	99 2d       	mov	r25, r9
    18e8:	9f 7e       	andi	r25, 0xEF	; 239
    18ea:	96 ff       	sbrs	r25, 6
    18ec:	16 e0       	ldi	r17, 0x06	; 6
    18ee:	9f 73       	andi	r25, 0x3F	; 63
    18f0:	99 2e       	mov	r9, r25
    18f2:	85 36       	cpi	r24, 0x65	; 101
    18f4:	19 f4       	brne	.+6      	; 0x18fc <vfprintf+0x152>
    18f6:	90 64       	ori	r25, 0x40	; 64
    18f8:	99 2e       	mov	r9, r25
    18fa:	08 c0       	rjmp	.+16     	; 0x190c <vfprintf+0x162>
    18fc:	86 36       	cpi	r24, 0x66	; 102
    18fe:	21 f4       	brne	.+8      	; 0x1908 <vfprintf+0x15e>
    1900:	39 2f       	mov	r19, r25
    1902:	30 68       	ori	r19, 0x80	; 128
    1904:	93 2e       	mov	r9, r19
    1906:	02 c0       	rjmp	.+4      	; 0x190c <vfprintf+0x162>
    1908:	11 11       	cpse	r17, r1
    190a:	11 50       	subi	r17, 0x01	; 1
    190c:	97 fe       	sbrs	r9, 7
    190e:	07 c0       	rjmp	.+14     	; 0x191e <vfprintf+0x174>
    1910:	1c 33       	cpi	r17, 0x3C	; 60
    1912:	50 f4       	brcc	.+20     	; 0x1928 <vfprintf+0x17e>
    1914:	44 24       	eor	r4, r4
    1916:	43 94       	inc	r4
    1918:	41 0e       	add	r4, r17
    191a:	27 e0       	ldi	r18, 0x07	; 7
    191c:	0b c0       	rjmp	.+22     	; 0x1934 <vfprintf+0x18a>
    191e:	18 30       	cpi	r17, 0x08	; 8
    1920:	38 f0       	brcs	.+14     	; 0x1930 <vfprintf+0x186>
    1922:	27 e0       	ldi	r18, 0x07	; 7
    1924:	17 e0       	ldi	r17, 0x07	; 7
    1926:	05 c0       	rjmp	.+10     	; 0x1932 <vfprintf+0x188>
    1928:	27 e0       	ldi	r18, 0x07	; 7
    192a:	9c e3       	ldi	r25, 0x3C	; 60
    192c:	49 2e       	mov	r4, r25
    192e:	02 c0       	rjmp	.+4      	; 0x1934 <vfprintf+0x18a>
    1930:	21 2f       	mov	r18, r17
    1932:	41 2c       	mov	r4, r1
    1934:	56 01       	movw	r10, r12
    1936:	84 e0       	ldi	r24, 0x04	; 4
    1938:	a8 0e       	add	r10, r24
    193a:	b1 1c       	adc	r11, r1
    193c:	f6 01       	movw	r30, r12
    193e:	60 81       	ld	r22, Z
    1940:	71 81       	ldd	r23, Z+1	; 0x01
    1942:	82 81       	ldd	r24, Z+2	; 0x02
    1944:	93 81       	ldd	r25, Z+3	; 0x03
    1946:	04 2d       	mov	r16, r4
    1948:	a3 01       	movw	r20, r6
    194a:	df d2       	rcall	.+1470   	; 0x1f0a <__ftoa_engine>
    194c:	6c 01       	movw	r12, r24
    194e:	f9 81       	ldd	r31, Y+1	; 0x01
    1950:	fc 87       	std	Y+12, r31	; 0x0c
    1952:	f0 ff       	sbrs	r31, 0
    1954:	02 c0       	rjmp	.+4      	; 0x195a <vfprintf+0x1b0>
    1956:	f3 ff       	sbrs	r31, 3
    1958:	06 c0       	rjmp	.+12     	; 0x1966 <vfprintf+0x1bc>
    195a:	91 fc       	sbrc	r9, 1
    195c:	06 c0       	rjmp	.+12     	; 0x196a <vfprintf+0x1c0>
    195e:	92 fe       	sbrs	r9, 2
    1960:	06 c0       	rjmp	.+12     	; 0x196e <vfprintf+0x1c4>
    1962:	00 e2       	ldi	r16, 0x20	; 32
    1964:	05 c0       	rjmp	.+10     	; 0x1970 <vfprintf+0x1c6>
    1966:	0d e2       	ldi	r16, 0x2D	; 45
    1968:	03 c0       	rjmp	.+6      	; 0x1970 <vfprintf+0x1c6>
    196a:	0b e2       	ldi	r16, 0x2B	; 43
    196c:	01 c0       	rjmp	.+2      	; 0x1970 <vfprintf+0x1c6>
    196e:	00 e0       	ldi	r16, 0x00	; 0
    1970:	8c 85       	ldd	r24, Y+12	; 0x0c
    1972:	8c 70       	andi	r24, 0x0C	; 12
    1974:	19 f0       	breq	.+6      	; 0x197c <vfprintf+0x1d2>
    1976:	01 11       	cpse	r16, r1
    1978:	43 c2       	rjmp	.+1158   	; 0x1e00 <vfprintf+0x656>
    197a:	80 c2       	rjmp	.+1280   	; 0x1e7c <vfprintf+0x6d2>
    197c:	97 fe       	sbrs	r9, 7
    197e:	10 c0       	rjmp	.+32     	; 0x19a0 <vfprintf+0x1f6>
    1980:	4c 0c       	add	r4, r12
    1982:	fc 85       	ldd	r31, Y+12	; 0x0c
    1984:	f4 ff       	sbrs	r31, 4
    1986:	04 c0       	rjmp	.+8      	; 0x1990 <vfprintf+0x1e6>
    1988:	8a 81       	ldd	r24, Y+2	; 0x02
    198a:	81 33       	cpi	r24, 0x31	; 49
    198c:	09 f4       	brne	.+2      	; 0x1990 <vfprintf+0x1e6>
    198e:	4a 94       	dec	r4
    1990:	14 14       	cp	r1, r4
    1992:	74 f5       	brge	.+92     	; 0x19f0 <vfprintf+0x246>
    1994:	28 e0       	ldi	r18, 0x08	; 8
    1996:	24 15       	cp	r18, r4
    1998:	78 f5       	brcc	.+94     	; 0x19f8 <vfprintf+0x24e>
    199a:	88 e0       	ldi	r24, 0x08	; 8
    199c:	48 2e       	mov	r4, r24
    199e:	2c c0       	rjmp	.+88     	; 0x19f8 <vfprintf+0x24e>
    19a0:	96 fc       	sbrc	r9, 6
    19a2:	2a c0       	rjmp	.+84     	; 0x19f8 <vfprintf+0x24e>
    19a4:	81 2f       	mov	r24, r17
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	8c 15       	cp	r24, r12
    19aa:	9d 05       	cpc	r25, r13
    19ac:	9c f0       	brlt	.+38     	; 0x19d4 <vfprintf+0x22a>
    19ae:	3c ef       	ldi	r19, 0xFC	; 252
    19b0:	c3 16       	cp	r12, r19
    19b2:	3f ef       	ldi	r19, 0xFF	; 255
    19b4:	d3 06       	cpc	r13, r19
    19b6:	74 f0       	brlt	.+28     	; 0x19d4 <vfprintf+0x22a>
    19b8:	89 2d       	mov	r24, r9
    19ba:	80 68       	ori	r24, 0x80	; 128
    19bc:	98 2e       	mov	r9, r24
    19be:	0a c0       	rjmp	.+20     	; 0x19d4 <vfprintf+0x22a>
    19c0:	e2 e0       	ldi	r30, 0x02	; 2
    19c2:	f0 e0       	ldi	r31, 0x00	; 0
    19c4:	ec 0f       	add	r30, r28
    19c6:	fd 1f       	adc	r31, r29
    19c8:	e1 0f       	add	r30, r17
    19ca:	f1 1d       	adc	r31, r1
    19cc:	80 81       	ld	r24, Z
    19ce:	80 33       	cpi	r24, 0x30	; 48
    19d0:	19 f4       	brne	.+6      	; 0x19d8 <vfprintf+0x22e>
    19d2:	11 50       	subi	r17, 0x01	; 1
    19d4:	11 11       	cpse	r17, r1
    19d6:	f4 cf       	rjmp	.-24     	; 0x19c0 <vfprintf+0x216>
    19d8:	97 fe       	sbrs	r9, 7
    19da:	0e c0       	rjmp	.+28     	; 0x19f8 <vfprintf+0x24e>
    19dc:	44 24       	eor	r4, r4
    19de:	43 94       	inc	r4
    19e0:	41 0e       	add	r4, r17
    19e2:	81 2f       	mov	r24, r17
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	c8 16       	cp	r12, r24
    19e8:	d9 06       	cpc	r13, r25
    19ea:	2c f4       	brge	.+10     	; 0x19f6 <vfprintf+0x24c>
    19ec:	1c 19       	sub	r17, r12
    19ee:	04 c0       	rjmp	.+8      	; 0x19f8 <vfprintf+0x24e>
    19f0:	44 24       	eor	r4, r4
    19f2:	43 94       	inc	r4
    19f4:	01 c0       	rjmp	.+2      	; 0x19f8 <vfprintf+0x24e>
    19f6:	10 e0       	ldi	r17, 0x00	; 0
    19f8:	97 fe       	sbrs	r9, 7
    19fa:	06 c0       	rjmp	.+12     	; 0x1a08 <vfprintf+0x25e>
    19fc:	1c 14       	cp	r1, r12
    19fe:	1d 04       	cpc	r1, r13
    1a00:	34 f4       	brge	.+12     	; 0x1a0e <vfprintf+0x264>
    1a02:	c6 01       	movw	r24, r12
    1a04:	01 96       	adiw	r24, 0x01	; 1
    1a06:	05 c0       	rjmp	.+10     	; 0x1a12 <vfprintf+0x268>
    1a08:	85 e0       	ldi	r24, 0x05	; 5
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	02 c0       	rjmp	.+4      	; 0x1a12 <vfprintf+0x268>
    1a0e:	81 e0       	ldi	r24, 0x01	; 1
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	01 11       	cpse	r16, r1
    1a14:	01 96       	adiw	r24, 0x01	; 1
    1a16:	11 23       	and	r17, r17
    1a18:	31 f0       	breq	.+12     	; 0x1a26 <vfprintf+0x27c>
    1a1a:	21 2f       	mov	r18, r17
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	2f 5f       	subi	r18, 0xFF	; 255
    1a20:	3f 4f       	sbci	r19, 0xFF	; 255
    1a22:	82 0f       	add	r24, r18
    1a24:	93 1f       	adc	r25, r19
    1a26:	25 2d       	mov	r18, r5
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	82 17       	cp	r24, r18
    1a2c:	93 07       	cpc	r25, r19
    1a2e:	14 f4       	brge	.+4      	; 0x1a34 <vfprintf+0x28a>
    1a30:	58 1a       	sub	r5, r24
    1a32:	01 c0       	rjmp	.+2      	; 0x1a36 <vfprintf+0x28c>
    1a34:	51 2c       	mov	r5, r1
    1a36:	89 2d       	mov	r24, r9
    1a38:	89 70       	andi	r24, 0x09	; 9
    1a3a:	41 f4       	brne	.+16     	; 0x1a4c <vfprintf+0x2a2>
    1a3c:	55 20       	and	r5, r5
    1a3e:	31 f0       	breq	.+12     	; 0x1a4c <vfprintf+0x2a2>
    1a40:	b7 01       	movw	r22, r14
    1a42:	80 e2       	ldi	r24, 0x20	; 32
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	99 d3       	rcall	.+1842   	; 0x217a <fputc>
    1a48:	5a 94       	dec	r5
    1a4a:	f8 cf       	rjmp	.-16     	; 0x1a3c <vfprintf+0x292>
    1a4c:	00 23       	and	r16, r16
    1a4e:	21 f0       	breq	.+8      	; 0x1a58 <vfprintf+0x2ae>
    1a50:	b7 01       	movw	r22, r14
    1a52:	80 2f       	mov	r24, r16
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	91 d3       	rcall	.+1826   	; 0x217a <fputc>
    1a58:	93 fc       	sbrc	r9, 3
    1a5a:	08 c0       	rjmp	.+16     	; 0x1a6c <vfprintf+0x2c2>
    1a5c:	55 20       	and	r5, r5
    1a5e:	31 f0       	breq	.+12     	; 0x1a6c <vfprintf+0x2c2>
    1a60:	b7 01       	movw	r22, r14
    1a62:	80 e3       	ldi	r24, 0x30	; 48
    1a64:	90 e0       	ldi	r25, 0x00	; 0
    1a66:	89 d3       	rcall	.+1810   	; 0x217a <fputc>
    1a68:	5a 94       	dec	r5
    1a6a:	f8 cf       	rjmp	.-16     	; 0x1a5c <vfprintf+0x2b2>
    1a6c:	97 fe       	sbrs	r9, 7
    1a6e:	4a c0       	rjmp	.+148    	; 0x1b04 <vfprintf+0x35a>
    1a70:	46 01       	movw	r8, r12
    1a72:	d7 fe       	sbrs	r13, 7
    1a74:	02 c0       	rjmp	.+4      	; 0x1a7a <vfprintf+0x2d0>
    1a76:	81 2c       	mov	r8, r1
    1a78:	91 2c       	mov	r9, r1
    1a7a:	c6 01       	movw	r24, r12
    1a7c:	88 19       	sub	r24, r8
    1a7e:	99 09       	sbc	r25, r9
    1a80:	f3 01       	movw	r30, r6
    1a82:	e8 0f       	add	r30, r24
    1a84:	f9 1f       	adc	r31, r25
    1a86:	fe 87       	std	Y+14, r31	; 0x0e
    1a88:	ed 87       	std	Y+13, r30	; 0x0d
    1a8a:	96 01       	movw	r18, r12
    1a8c:	24 19       	sub	r18, r4
    1a8e:	31 09       	sbc	r19, r1
    1a90:	38 8b       	std	Y+16, r19	; 0x10
    1a92:	2f 87       	std	Y+15, r18	; 0x0f
    1a94:	01 2f       	mov	r16, r17
    1a96:	10 e0       	ldi	r17, 0x00	; 0
    1a98:	11 95       	neg	r17
    1a9a:	01 95       	neg	r16
    1a9c:	11 09       	sbc	r17, r1
    1a9e:	3f ef       	ldi	r19, 0xFF	; 255
    1aa0:	83 16       	cp	r8, r19
    1aa2:	93 06       	cpc	r9, r19
    1aa4:	21 f4       	brne	.+8      	; 0x1aae <vfprintf+0x304>
    1aa6:	b7 01       	movw	r22, r14
    1aa8:	8e e2       	ldi	r24, 0x2E	; 46
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	66 d3       	rcall	.+1740   	; 0x217a <fputc>
    1aae:	c8 14       	cp	r12, r8
    1ab0:	d9 04       	cpc	r13, r9
    1ab2:	4c f0       	brlt	.+18     	; 0x1ac6 <vfprintf+0x31c>
    1ab4:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ab6:	98 89       	ldd	r25, Y+16	; 0x10
    1ab8:	88 15       	cp	r24, r8
    1aba:	99 05       	cpc	r25, r9
    1abc:	24 f4       	brge	.+8      	; 0x1ac6 <vfprintf+0x31c>
    1abe:	ed 85       	ldd	r30, Y+13	; 0x0d
    1ac0:	fe 85       	ldd	r31, Y+14	; 0x0e
    1ac2:	81 81       	ldd	r24, Z+1	; 0x01
    1ac4:	01 c0       	rjmp	.+2      	; 0x1ac8 <vfprintf+0x31e>
    1ac6:	80 e3       	ldi	r24, 0x30	; 48
    1ac8:	f1 e0       	ldi	r31, 0x01	; 1
    1aca:	8f 1a       	sub	r8, r31
    1acc:	91 08       	sbc	r9, r1
    1ace:	2d 85       	ldd	r18, Y+13	; 0x0d
    1ad0:	3e 85       	ldd	r19, Y+14	; 0x0e
    1ad2:	2f 5f       	subi	r18, 0xFF	; 255
    1ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad6:	3e 87       	std	Y+14, r19	; 0x0e
    1ad8:	2d 87       	std	Y+13, r18	; 0x0d
    1ada:	80 16       	cp	r8, r16
    1adc:	91 06       	cpc	r9, r17
    1ade:	24 f0       	brlt	.+8      	; 0x1ae8 <vfprintf+0x33e>
    1ae0:	b7 01       	movw	r22, r14
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	4a d3       	rcall	.+1684   	; 0x217a <fputc>
    1ae6:	db cf       	rjmp	.-74     	; 0x1a9e <vfprintf+0x2f4>
    1ae8:	c8 14       	cp	r12, r8
    1aea:	d9 04       	cpc	r13, r9
    1aec:	41 f4       	brne	.+16     	; 0x1afe <vfprintf+0x354>
    1aee:	9a 81       	ldd	r25, Y+2	; 0x02
    1af0:	96 33       	cpi	r25, 0x36	; 54
    1af2:	20 f4       	brcc	.+8      	; 0x1afc <vfprintf+0x352>
    1af4:	95 33       	cpi	r25, 0x35	; 53
    1af6:	19 f4       	brne	.+6      	; 0x1afe <vfprintf+0x354>
    1af8:	3c 85       	ldd	r19, Y+12	; 0x0c
    1afa:	34 ff       	sbrs	r19, 4
    1afc:	81 e3       	ldi	r24, 0x31	; 49
    1afe:	b7 01       	movw	r22, r14
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	48 c0       	rjmp	.+144    	; 0x1b94 <vfprintf+0x3ea>
    1b04:	8a 81       	ldd	r24, Y+2	; 0x02
    1b06:	81 33       	cpi	r24, 0x31	; 49
    1b08:	19 f0       	breq	.+6      	; 0x1b10 <vfprintf+0x366>
    1b0a:	9c 85       	ldd	r25, Y+12	; 0x0c
    1b0c:	9f 7e       	andi	r25, 0xEF	; 239
    1b0e:	9c 87       	std	Y+12, r25	; 0x0c
    1b10:	b7 01       	movw	r22, r14
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	32 d3       	rcall	.+1636   	; 0x217a <fputc>
    1b16:	11 11       	cpse	r17, r1
    1b18:	05 c0       	rjmp	.+10     	; 0x1b24 <vfprintf+0x37a>
    1b1a:	94 fc       	sbrc	r9, 4
    1b1c:	16 c0       	rjmp	.+44     	; 0x1b4a <vfprintf+0x3a0>
    1b1e:	85 e6       	ldi	r24, 0x65	; 101
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	15 c0       	rjmp	.+42     	; 0x1b4e <vfprintf+0x3a4>
    1b24:	b7 01       	movw	r22, r14
    1b26:	8e e2       	ldi	r24, 0x2E	; 46
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	27 d3       	rcall	.+1614   	; 0x217a <fputc>
    1b2c:	1e 5f       	subi	r17, 0xFE	; 254
    1b2e:	82 e0       	ldi	r24, 0x02	; 2
    1b30:	01 e0       	ldi	r16, 0x01	; 1
    1b32:	08 0f       	add	r16, r24
    1b34:	f3 01       	movw	r30, r6
    1b36:	e8 0f       	add	r30, r24
    1b38:	f1 1d       	adc	r31, r1
    1b3a:	80 81       	ld	r24, Z
    1b3c:	b7 01       	movw	r22, r14
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	1c d3       	rcall	.+1592   	; 0x217a <fputc>
    1b42:	80 2f       	mov	r24, r16
    1b44:	01 13       	cpse	r16, r17
    1b46:	f4 cf       	rjmp	.-24     	; 0x1b30 <vfprintf+0x386>
    1b48:	e8 cf       	rjmp	.-48     	; 0x1b1a <vfprintf+0x370>
    1b4a:	85 e4       	ldi	r24, 0x45	; 69
    1b4c:	90 e0       	ldi	r25, 0x00	; 0
    1b4e:	b7 01       	movw	r22, r14
    1b50:	14 d3       	rcall	.+1576   	; 0x217a <fputc>
    1b52:	d7 fc       	sbrc	r13, 7
    1b54:	06 c0       	rjmp	.+12     	; 0x1b62 <vfprintf+0x3b8>
    1b56:	c1 14       	cp	r12, r1
    1b58:	d1 04       	cpc	r13, r1
    1b5a:	41 f4       	brne	.+16     	; 0x1b6c <vfprintf+0x3c2>
    1b5c:	ec 85       	ldd	r30, Y+12	; 0x0c
    1b5e:	e4 ff       	sbrs	r30, 4
    1b60:	05 c0       	rjmp	.+10     	; 0x1b6c <vfprintf+0x3c2>
    1b62:	d1 94       	neg	r13
    1b64:	c1 94       	neg	r12
    1b66:	d1 08       	sbc	r13, r1
    1b68:	8d e2       	ldi	r24, 0x2D	; 45
    1b6a:	01 c0       	rjmp	.+2      	; 0x1b6e <vfprintf+0x3c4>
    1b6c:	8b e2       	ldi	r24, 0x2B	; 43
    1b6e:	b7 01       	movw	r22, r14
    1b70:	90 e0       	ldi	r25, 0x00	; 0
    1b72:	03 d3       	rcall	.+1542   	; 0x217a <fputc>
    1b74:	80 e3       	ldi	r24, 0x30	; 48
    1b76:	2a e0       	ldi	r18, 0x0A	; 10
    1b78:	c2 16       	cp	r12, r18
    1b7a:	d1 04       	cpc	r13, r1
    1b7c:	2c f0       	brlt	.+10     	; 0x1b88 <vfprintf+0x3de>
    1b7e:	8f 5f       	subi	r24, 0xFF	; 255
    1b80:	fa e0       	ldi	r31, 0x0A	; 10
    1b82:	cf 1a       	sub	r12, r31
    1b84:	d1 08       	sbc	r13, r1
    1b86:	f7 cf       	rjmp	.-18     	; 0x1b76 <vfprintf+0x3cc>
    1b88:	b7 01       	movw	r22, r14
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	f6 d2       	rcall	.+1516   	; 0x217a <fputc>
    1b8e:	b7 01       	movw	r22, r14
    1b90:	c6 01       	movw	r24, r12
    1b92:	c0 96       	adiw	r24, 0x30	; 48
    1b94:	f2 d2       	rcall	.+1508   	; 0x217a <fputc>
    1b96:	49 c1       	rjmp	.+658    	; 0x1e2a <vfprintf+0x680>
    1b98:	83 36       	cpi	r24, 0x63	; 99
    1b9a:	31 f0       	breq	.+12     	; 0x1ba8 <vfprintf+0x3fe>
    1b9c:	83 37       	cpi	r24, 0x73	; 115
    1b9e:	79 f0       	breq	.+30     	; 0x1bbe <vfprintf+0x414>
    1ba0:	83 35       	cpi	r24, 0x53	; 83
    1ba2:	09 f0       	breq	.+2      	; 0x1ba6 <vfprintf+0x3fc>
    1ba4:	52 c0       	rjmp	.+164    	; 0x1c4a <vfprintf+0x4a0>
    1ba6:	1f c0       	rjmp	.+62     	; 0x1be6 <vfprintf+0x43c>
    1ba8:	56 01       	movw	r10, r12
    1baa:	32 e0       	ldi	r19, 0x02	; 2
    1bac:	a3 0e       	add	r10, r19
    1bae:	b1 1c       	adc	r11, r1
    1bb0:	f6 01       	movw	r30, r12
    1bb2:	80 81       	ld	r24, Z
    1bb4:	89 83       	std	Y+1, r24	; 0x01
    1bb6:	01 e0       	ldi	r16, 0x01	; 1
    1bb8:	10 e0       	ldi	r17, 0x00	; 0
    1bba:	63 01       	movw	r12, r6
    1bbc:	11 c0       	rjmp	.+34     	; 0x1be0 <vfprintf+0x436>
    1bbe:	56 01       	movw	r10, r12
    1bc0:	f2 e0       	ldi	r31, 0x02	; 2
    1bc2:	af 0e       	add	r10, r31
    1bc4:	b1 1c       	adc	r11, r1
    1bc6:	f6 01       	movw	r30, r12
    1bc8:	c0 80       	ld	r12, Z
    1bca:	d1 80       	ldd	r13, Z+1	; 0x01
    1bcc:	96 fe       	sbrs	r9, 6
    1bce:	03 c0       	rjmp	.+6      	; 0x1bd6 <vfprintf+0x42c>
    1bd0:	61 2f       	mov	r22, r17
    1bd2:	70 e0       	ldi	r23, 0x00	; 0
    1bd4:	02 c0       	rjmp	.+4      	; 0x1bda <vfprintf+0x430>
    1bd6:	6f ef       	ldi	r22, 0xFF	; 255
    1bd8:	7f ef       	ldi	r23, 0xFF	; 255
    1bda:	c6 01       	movw	r24, r12
    1bdc:	79 d2       	rcall	.+1266   	; 0x20d0 <strnlen>
    1bde:	8c 01       	movw	r16, r24
    1be0:	f9 2d       	mov	r31, r9
    1be2:	ff 77       	andi	r31, 0x7F	; 127
    1be4:	13 c0       	rjmp	.+38     	; 0x1c0c <vfprintf+0x462>
    1be6:	56 01       	movw	r10, r12
    1be8:	22 e0       	ldi	r18, 0x02	; 2
    1bea:	a2 0e       	add	r10, r18
    1bec:	b1 1c       	adc	r11, r1
    1bee:	f6 01       	movw	r30, r12
    1bf0:	c0 80       	ld	r12, Z
    1bf2:	d1 80       	ldd	r13, Z+1	; 0x01
    1bf4:	96 fe       	sbrs	r9, 6
    1bf6:	03 c0       	rjmp	.+6      	; 0x1bfe <vfprintf+0x454>
    1bf8:	61 2f       	mov	r22, r17
    1bfa:	70 e0       	ldi	r23, 0x00	; 0
    1bfc:	02 c0       	rjmp	.+4      	; 0x1c02 <vfprintf+0x458>
    1bfe:	6f ef       	ldi	r22, 0xFF	; 255
    1c00:	7f ef       	ldi	r23, 0xFF	; 255
    1c02:	c6 01       	movw	r24, r12
    1c04:	5a d2       	rcall	.+1204   	; 0x20ba <strnlen_P>
    1c06:	8c 01       	movw	r16, r24
    1c08:	f9 2d       	mov	r31, r9
    1c0a:	f0 68       	ori	r31, 0x80	; 128
    1c0c:	9f 2e       	mov	r9, r31
    1c0e:	f3 fd       	sbrc	r31, 3
    1c10:	18 c0       	rjmp	.+48     	; 0x1c42 <vfprintf+0x498>
    1c12:	85 2d       	mov	r24, r5
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	08 17       	cp	r16, r24
    1c18:	19 07       	cpc	r17, r25
    1c1a:	98 f4       	brcc	.+38     	; 0x1c42 <vfprintf+0x498>
    1c1c:	b7 01       	movw	r22, r14
    1c1e:	80 e2       	ldi	r24, 0x20	; 32
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	ab d2       	rcall	.+1366   	; 0x217a <fputc>
    1c24:	5a 94       	dec	r5
    1c26:	f5 cf       	rjmp	.-22     	; 0x1c12 <vfprintf+0x468>
    1c28:	f6 01       	movw	r30, r12
    1c2a:	97 fc       	sbrc	r9, 7
    1c2c:	85 91       	lpm	r24, Z+
    1c2e:	97 fe       	sbrs	r9, 7
    1c30:	81 91       	ld	r24, Z+
    1c32:	6f 01       	movw	r12, r30
    1c34:	b7 01       	movw	r22, r14
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	a0 d2       	rcall	.+1344   	; 0x217a <fputc>
    1c3a:	51 10       	cpse	r5, r1
    1c3c:	5a 94       	dec	r5
    1c3e:	01 50       	subi	r16, 0x01	; 1
    1c40:	11 09       	sbc	r17, r1
    1c42:	01 15       	cp	r16, r1
    1c44:	11 05       	cpc	r17, r1
    1c46:	81 f7       	brne	.-32     	; 0x1c28 <vfprintf+0x47e>
    1c48:	f0 c0       	rjmp	.+480    	; 0x1e2a <vfprintf+0x680>
    1c4a:	84 36       	cpi	r24, 0x64	; 100
    1c4c:	11 f0       	breq	.+4      	; 0x1c52 <vfprintf+0x4a8>
    1c4e:	89 36       	cpi	r24, 0x69	; 105
    1c50:	59 f5       	brne	.+86     	; 0x1ca8 <vfprintf+0x4fe>
    1c52:	56 01       	movw	r10, r12
    1c54:	97 fe       	sbrs	r9, 7
    1c56:	09 c0       	rjmp	.+18     	; 0x1c6a <vfprintf+0x4c0>
    1c58:	24 e0       	ldi	r18, 0x04	; 4
    1c5a:	a2 0e       	add	r10, r18
    1c5c:	b1 1c       	adc	r11, r1
    1c5e:	f6 01       	movw	r30, r12
    1c60:	60 81       	ld	r22, Z
    1c62:	71 81       	ldd	r23, Z+1	; 0x01
    1c64:	82 81       	ldd	r24, Z+2	; 0x02
    1c66:	93 81       	ldd	r25, Z+3	; 0x03
    1c68:	0a c0       	rjmp	.+20     	; 0x1c7e <vfprintf+0x4d4>
    1c6a:	f2 e0       	ldi	r31, 0x02	; 2
    1c6c:	af 0e       	add	r10, r31
    1c6e:	b1 1c       	adc	r11, r1
    1c70:	f6 01       	movw	r30, r12
    1c72:	60 81       	ld	r22, Z
    1c74:	71 81       	ldd	r23, Z+1	; 0x01
    1c76:	07 2e       	mov	r0, r23
    1c78:	00 0c       	add	r0, r0
    1c7a:	88 0b       	sbc	r24, r24
    1c7c:	99 0b       	sbc	r25, r25
    1c7e:	f9 2d       	mov	r31, r9
    1c80:	ff 76       	andi	r31, 0x6F	; 111
    1c82:	9f 2e       	mov	r9, r31
    1c84:	97 ff       	sbrs	r25, 7
    1c86:	09 c0       	rjmp	.+18     	; 0x1c9a <vfprintf+0x4f0>
    1c88:	90 95       	com	r25
    1c8a:	80 95       	com	r24
    1c8c:	70 95       	com	r23
    1c8e:	61 95       	neg	r22
    1c90:	7f 4f       	sbci	r23, 0xFF	; 255
    1c92:	8f 4f       	sbci	r24, 0xFF	; 255
    1c94:	9f 4f       	sbci	r25, 0xFF	; 255
    1c96:	f0 68       	ori	r31, 0x80	; 128
    1c98:	9f 2e       	mov	r9, r31
    1c9a:	2a e0       	ldi	r18, 0x0A	; 10
    1c9c:	30 e0       	ldi	r19, 0x00	; 0
    1c9e:	a3 01       	movw	r20, r6
    1ca0:	ee d2       	rcall	.+1500   	; 0x227e <__ultoa_invert>
    1ca2:	c8 2e       	mov	r12, r24
    1ca4:	c6 18       	sub	r12, r6
    1ca6:	3e c0       	rjmp	.+124    	; 0x1d24 <vfprintf+0x57a>
    1ca8:	09 2d       	mov	r16, r9
    1caa:	85 37       	cpi	r24, 0x75	; 117
    1cac:	21 f4       	brne	.+8      	; 0x1cb6 <vfprintf+0x50c>
    1cae:	0f 7e       	andi	r16, 0xEF	; 239
    1cb0:	2a e0       	ldi	r18, 0x0A	; 10
    1cb2:	30 e0       	ldi	r19, 0x00	; 0
    1cb4:	1d c0       	rjmp	.+58     	; 0x1cf0 <vfprintf+0x546>
    1cb6:	09 7f       	andi	r16, 0xF9	; 249
    1cb8:	8f 36       	cpi	r24, 0x6F	; 111
    1cba:	91 f0       	breq	.+36     	; 0x1ce0 <vfprintf+0x536>
    1cbc:	18 f4       	brcc	.+6      	; 0x1cc4 <vfprintf+0x51a>
    1cbe:	88 35       	cpi	r24, 0x58	; 88
    1cc0:	59 f0       	breq	.+22     	; 0x1cd8 <vfprintf+0x52e>
    1cc2:	bc c0       	rjmp	.+376    	; 0x1e3c <vfprintf+0x692>
    1cc4:	80 37       	cpi	r24, 0x70	; 112
    1cc6:	19 f0       	breq	.+6      	; 0x1cce <vfprintf+0x524>
    1cc8:	88 37       	cpi	r24, 0x78	; 120
    1cca:	11 f0       	breq	.+4      	; 0x1cd0 <vfprintf+0x526>
    1ccc:	b7 c0       	rjmp	.+366    	; 0x1e3c <vfprintf+0x692>
    1cce:	00 61       	ori	r16, 0x10	; 16
    1cd0:	04 ff       	sbrs	r16, 4
    1cd2:	09 c0       	rjmp	.+18     	; 0x1ce6 <vfprintf+0x53c>
    1cd4:	04 60       	ori	r16, 0x04	; 4
    1cd6:	07 c0       	rjmp	.+14     	; 0x1ce6 <vfprintf+0x53c>
    1cd8:	94 fe       	sbrs	r9, 4
    1cda:	08 c0       	rjmp	.+16     	; 0x1cec <vfprintf+0x542>
    1cdc:	06 60       	ori	r16, 0x06	; 6
    1cde:	06 c0       	rjmp	.+12     	; 0x1cec <vfprintf+0x542>
    1ce0:	28 e0       	ldi	r18, 0x08	; 8
    1ce2:	30 e0       	ldi	r19, 0x00	; 0
    1ce4:	05 c0       	rjmp	.+10     	; 0x1cf0 <vfprintf+0x546>
    1ce6:	20 e1       	ldi	r18, 0x10	; 16
    1ce8:	30 e0       	ldi	r19, 0x00	; 0
    1cea:	02 c0       	rjmp	.+4      	; 0x1cf0 <vfprintf+0x546>
    1cec:	20 e1       	ldi	r18, 0x10	; 16
    1cee:	32 e0       	ldi	r19, 0x02	; 2
    1cf0:	56 01       	movw	r10, r12
    1cf2:	07 ff       	sbrs	r16, 7
    1cf4:	09 c0       	rjmp	.+18     	; 0x1d08 <vfprintf+0x55e>
    1cf6:	84 e0       	ldi	r24, 0x04	; 4
    1cf8:	a8 0e       	add	r10, r24
    1cfa:	b1 1c       	adc	r11, r1
    1cfc:	f6 01       	movw	r30, r12
    1cfe:	60 81       	ld	r22, Z
    1d00:	71 81       	ldd	r23, Z+1	; 0x01
    1d02:	82 81       	ldd	r24, Z+2	; 0x02
    1d04:	93 81       	ldd	r25, Z+3	; 0x03
    1d06:	08 c0       	rjmp	.+16     	; 0x1d18 <vfprintf+0x56e>
    1d08:	f2 e0       	ldi	r31, 0x02	; 2
    1d0a:	af 0e       	add	r10, r31
    1d0c:	b1 1c       	adc	r11, r1
    1d0e:	f6 01       	movw	r30, r12
    1d10:	60 81       	ld	r22, Z
    1d12:	71 81       	ldd	r23, Z+1	; 0x01
    1d14:	80 e0       	ldi	r24, 0x00	; 0
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	a3 01       	movw	r20, r6
    1d1a:	b1 d2       	rcall	.+1378   	; 0x227e <__ultoa_invert>
    1d1c:	c8 2e       	mov	r12, r24
    1d1e:	c6 18       	sub	r12, r6
    1d20:	0f 77       	andi	r16, 0x7F	; 127
    1d22:	90 2e       	mov	r9, r16
    1d24:	96 fe       	sbrs	r9, 6
    1d26:	0b c0       	rjmp	.+22     	; 0x1d3e <vfprintf+0x594>
    1d28:	09 2d       	mov	r16, r9
    1d2a:	0e 7f       	andi	r16, 0xFE	; 254
    1d2c:	c1 16       	cp	r12, r17
    1d2e:	50 f4       	brcc	.+20     	; 0x1d44 <vfprintf+0x59a>
    1d30:	94 fe       	sbrs	r9, 4
    1d32:	0a c0       	rjmp	.+20     	; 0x1d48 <vfprintf+0x59e>
    1d34:	92 fc       	sbrc	r9, 2
    1d36:	08 c0       	rjmp	.+16     	; 0x1d48 <vfprintf+0x59e>
    1d38:	09 2d       	mov	r16, r9
    1d3a:	0e 7e       	andi	r16, 0xEE	; 238
    1d3c:	05 c0       	rjmp	.+10     	; 0x1d48 <vfprintf+0x59e>
    1d3e:	dc 2c       	mov	r13, r12
    1d40:	09 2d       	mov	r16, r9
    1d42:	03 c0       	rjmp	.+6      	; 0x1d4a <vfprintf+0x5a0>
    1d44:	dc 2c       	mov	r13, r12
    1d46:	01 c0       	rjmp	.+2      	; 0x1d4a <vfprintf+0x5a0>
    1d48:	d1 2e       	mov	r13, r17
    1d4a:	04 ff       	sbrs	r16, 4
    1d4c:	0d c0       	rjmp	.+26     	; 0x1d68 <vfprintf+0x5be>
    1d4e:	fe 01       	movw	r30, r28
    1d50:	ec 0d       	add	r30, r12
    1d52:	f1 1d       	adc	r31, r1
    1d54:	80 81       	ld	r24, Z
    1d56:	80 33       	cpi	r24, 0x30	; 48
    1d58:	11 f4       	brne	.+4      	; 0x1d5e <vfprintf+0x5b4>
    1d5a:	09 7e       	andi	r16, 0xE9	; 233
    1d5c:	09 c0       	rjmp	.+18     	; 0x1d70 <vfprintf+0x5c6>
    1d5e:	02 ff       	sbrs	r16, 2
    1d60:	06 c0       	rjmp	.+12     	; 0x1d6e <vfprintf+0x5c4>
    1d62:	d3 94       	inc	r13
    1d64:	d3 94       	inc	r13
    1d66:	04 c0       	rjmp	.+8      	; 0x1d70 <vfprintf+0x5c6>
    1d68:	80 2f       	mov	r24, r16
    1d6a:	86 78       	andi	r24, 0x86	; 134
    1d6c:	09 f0       	breq	.+2      	; 0x1d70 <vfprintf+0x5c6>
    1d6e:	d3 94       	inc	r13
    1d70:	03 fd       	sbrc	r16, 3
    1d72:	10 c0       	rjmp	.+32     	; 0x1d94 <vfprintf+0x5ea>
    1d74:	00 ff       	sbrs	r16, 0
    1d76:	06 c0       	rjmp	.+12     	; 0x1d84 <vfprintf+0x5da>
    1d78:	1c 2d       	mov	r17, r12
    1d7a:	d5 14       	cp	r13, r5
    1d7c:	78 f4       	brcc	.+30     	; 0x1d9c <vfprintf+0x5f2>
    1d7e:	15 0d       	add	r17, r5
    1d80:	1d 19       	sub	r17, r13
    1d82:	0c c0       	rjmp	.+24     	; 0x1d9c <vfprintf+0x5f2>
    1d84:	d5 14       	cp	r13, r5
    1d86:	50 f4       	brcc	.+20     	; 0x1d9c <vfprintf+0x5f2>
    1d88:	b7 01       	movw	r22, r14
    1d8a:	80 e2       	ldi	r24, 0x20	; 32
    1d8c:	90 e0       	ldi	r25, 0x00	; 0
    1d8e:	f5 d1       	rcall	.+1002   	; 0x217a <fputc>
    1d90:	d3 94       	inc	r13
    1d92:	f8 cf       	rjmp	.-16     	; 0x1d84 <vfprintf+0x5da>
    1d94:	d5 14       	cp	r13, r5
    1d96:	10 f4       	brcc	.+4      	; 0x1d9c <vfprintf+0x5f2>
    1d98:	5d 18       	sub	r5, r13
    1d9a:	01 c0       	rjmp	.+2      	; 0x1d9e <vfprintf+0x5f4>
    1d9c:	51 2c       	mov	r5, r1
    1d9e:	04 ff       	sbrs	r16, 4
    1da0:	0f c0       	rjmp	.+30     	; 0x1dc0 <vfprintf+0x616>
    1da2:	b7 01       	movw	r22, r14
    1da4:	80 e3       	ldi	r24, 0x30	; 48
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	e8 d1       	rcall	.+976    	; 0x217a <fputc>
    1daa:	02 ff       	sbrs	r16, 2
    1dac:	16 c0       	rjmp	.+44     	; 0x1dda <vfprintf+0x630>
    1dae:	01 fd       	sbrc	r16, 1
    1db0:	03 c0       	rjmp	.+6      	; 0x1db8 <vfprintf+0x60e>
    1db2:	88 e7       	ldi	r24, 0x78	; 120
    1db4:	90 e0       	ldi	r25, 0x00	; 0
    1db6:	02 c0       	rjmp	.+4      	; 0x1dbc <vfprintf+0x612>
    1db8:	88 e5       	ldi	r24, 0x58	; 88
    1dba:	90 e0       	ldi	r25, 0x00	; 0
    1dbc:	b7 01       	movw	r22, r14
    1dbe:	0c c0       	rjmp	.+24     	; 0x1dd8 <vfprintf+0x62e>
    1dc0:	80 2f       	mov	r24, r16
    1dc2:	86 78       	andi	r24, 0x86	; 134
    1dc4:	51 f0       	breq	.+20     	; 0x1dda <vfprintf+0x630>
    1dc6:	01 ff       	sbrs	r16, 1
    1dc8:	02 c0       	rjmp	.+4      	; 0x1dce <vfprintf+0x624>
    1dca:	8b e2       	ldi	r24, 0x2B	; 43
    1dcc:	01 c0       	rjmp	.+2      	; 0x1dd0 <vfprintf+0x626>
    1dce:	80 e2       	ldi	r24, 0x20	; 32
    1dd0:	07 fd       	sbrc	r16, 7
    1dd2:	8d e2       	ldi	r24, 0x2D	; 45
    1dd4:	b7 01       	movw	r22, r14
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	d0 d1       	rcall	.+928    	; 0x217a <fputc>
    1dda:	c1 16       	cp	r12, r17
    1ddc:	30 f4       	brcc	.+12     	; 0x1dea <vfprintf+0x640>
    1dde:	b7 01       	movw	r22, r14
    1de0:	80 e3       	ldi	r24, 0x30	; 48
    1de2:	90 e0       	ldi	r25, 0x00	; 0
    1de4:	ca d1       	rcall	.+916    	; 0x217a <fputc>
    1de6:	11 50       	subi	r17, 0x01	; 1
    1de8:	f8 cf       	rjmp	.-16     	; 0x1dda <vfprintf+0x630>
    1dea:	ca 94       	dec	r12
    1dec:	f3 01       	movw	r30, r6
    1dee:	ec 0d       	add	r30, r12
    1df0:	f1 1d       	adc	r31, r1
    1df2:	80 81       	ld	r24, Z
    1df4:	b7 01       	movw	r22, r14
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	c0 d1       	rcall	.+896    	; 0x217a <fputc>
    1dfa:	c1 10       	cpse	r12, r1
    1dfc:	f6 cf       	rjmp	.-20     	; 0x1dea <vfprintf+0x640>
    1dfe:	15 c0       	rjmp	.+42     	; 0x1e2a <vfprintf+0x680>
    1e00:	f4 e0       	ldi	r31, 0x04	; 4
    1e02:	f5 15       	cp	r31, r5
    1e04:	50 f5       	brcc	.+84     	; 0x1e5a <vfprintf+0x6b0>
    1e06:	84 e0       	ldi	r24, 0x04	; 4
    1e08:	58 1a       	sub	r5, r24
    1e0a:	93 fe       	sbrs	r9, 3
    1e0c:	1e c0       	rjmp	.+60     	; 0x1e4a <vfprintf+0x6a0>
    1e0e:	01 11       	cpse	r16, r1
    1e10:	25 c0       	rjmp	.+74     	; 0x1e5c <vfprintf+0x6b2>
    1e12:	2c 85       	ldd	r18, Y+12	; 0x0c
    1e14:	23 ff       	sbrs	r18, 3
    1e16:	27 c0       	rjmp	.+78     	; 0x1e66 <vfprintf+0x6bc>
    1e18:	0e e4       	ldi	r16, 0x4E	; 78
    1e1a:	11 e0       	ldi	r17, 0x01	; 1
    1e1c:	39 2d       	mov	r19, r9
    1e1e:	30 71       	andi	r19, 0x10	; 16
    1e20:	93 2e       	mov	r9, r19
    1e22:	f8 01       	movw	r30, r16
    1e24:	84 91       	lpm	r24, Z
    1e26:	81 11       	cpse	r24, r1
    1e28:	21 c0       	rjmp	.+66     	; 0x1e6c <vfprintf+0x6c2>
    1e2a:	55 20       	and	r5, r5
    1e2c:	09 f4       	brne	.+2      	; 0x1e30 <vfprintf+0x686>
    1e2e:	fc cc       	rjmp	.-1544   	; 0x1828 <vfprintf+0x7e>
    1e30:	b7 01       	movw	r22, r14
    1e32:	80 e2       	ldi	r24, 0x20	; 32
    1e34:	90 e0       	ldi	r25, 0x00	; 0
    1e36:	a1 d1       	rcall	.+834    	; 0x217a <fputc>
    1e38:	5a 94       	dec	r5
    1e3a:	f7 cf       	rjmp	.-18     	; 0x1e2a <vfprintf+0x680>
    1e3c:	f7 01       	movw	r30, r14
    1e3e:	86 81       	ldd	r24, Z+6	; 0x06
    1e40:	97 81       	ldd	r25, Z+7	; 0x07
    1e42:	23 c0       	rjmp	.+70     	; 0x1e8a <vfprintf+0x6e0>
    1e44:	8f ef       	ldi	r24, 0xFF	; 255
    1e46:	9f ef       	ldi	r25, 0xFF	; 255
    1e48:	20 c0       	rjmp	.+64     	; 0x1e8a <vfprintf+0x6e0>
    1e4a:	b7 01       	movw	r22, r14
    1e4c:	80 e2       	ldi	r24, 0x20	; 32
    1e4e:	90 e0       	ldi	r25, 0x00	; 0
    1e50:	94 d1       	rcall	.+808    	; 0x217a <fputc>
    1e52:	5a 94       	dec	r5
    1e54:	51 10       	cpse	r5, r1
    1e56:	f9 cf       	rjmp	.-14     	; 0x1e4a <vfprintf+0x6a0>
    1e58:	da cf       	rjmp	.-76     	; 0x1e0e <vfprintf+0x664>
    1e5a:	51 2c       	mov	r5, r1
    1e5c:	b7 01       	movw	r22, r14
    1e5e:	80 2f       	mov	r24, r16
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	8b d1       	rcall	.+790    	; 0x217a <fputc>
    1e64:	d6 cf       	rjmp	.-84     	; 0x1e12 <vfprintf+0x668>
    1e66:	02 e5       	ldi	r16, 0x52	; 82
    1e68:	11 e0       	ldi	r17, 0x01	; 1
    1e6a:	d8 cf       	rjmp	.-80     	; 0x1e1c <vfprintf+0x672>
    1e6c:	91 10       	cpse	r9, r1
    1e6e:	80 52       	subi	r24, 0x20	; 32
    1e70:	b7 01       	movw	r22, r14
    1e72:	90 e0       	ldi	r25, 0x00	; 0
    1e74:	82 d1       	rcall	.+772    	; 0x217a <fputc>
    1e76:	0f 5f       	subi	r16, 0xFF	; 255
    1e78:	1f 4f       	sbci	r17, 0xFF	; 255
    1e7a:	d3 cf       	rjmp	.-90     	; 0x1e22 <vfprintf+0x678>
    1e7c:	23 e0       	ldi	r18, 0x03	; 3
    1e7e:	25 15       	cp	r18, r5
    1e80:	10 f4       	brcc	.+4      	; 0x1e86 <vfprintf+0x6dc>
    1e82:	83 e0       	ldi	r24, 0x03	; 3
    1e84:	c1 cf       	rjmp	.-126    	; 0x1e08 <vfprintf+0x65e>
    1e86:	51 2c       	mov	r5, r1
    1e88:	c4 cf       	rjmp	.-120    	; 0x1e12 <vfprintf+0x668>
    1e8a:	60 96       	adiw	r28, 0x10	; 16
    1e8c:	0f b6       	in	r0, 0x3f	; 63
    1e8e:	f8 94       	cli
    1e90:	de bf       	out	0x3e, r29	; 62
    1e92:	0f be       	out	0x3f, r0	; 63
    1e94:	cd bf       	out	0x3d, r28	; 61
    1e96:	df 91       	pop	r29
    1e98:	cf 91       	pop	r28
    1e9a:	1f 91       	pop	r17
    1e9c:	0f 91       	pop	r16
    1e9e:	ff 90       	pop	r15
    1ea0:	ef 90       	pop	r14
    1ea2:	df 90       	pop	r13
    1ea4:	cf 90       	pop	r12
    1ea6:	bf 90       	pop	r11
    1ea8:	af 90       	pop	r10
    1eaa:	9f 90       	pop	r9
    1eac:	8f 90       	pop	r8
    1eae:	7f 90       	pop	r7
    1eb0:	6f 90       	pop	r6
    1eb2:	5f 90       	pop	r5
    1eb4:	4f 90       	pop	r4
    1eb6:	3f 90       	pop	r3
    1eb8:	2f 90       	pop	r2
    1eba:	08 95       	ret

00001ebc <__divmodhi4>:
    1ebc:	97 fb       	bst	r25, 7
    1ebe:	07 2e       	mov	r0, r23
    1ec0:	16 f4       	brtc	.+4      	; 0x1ec6 <__divmodhi4+0xa>
    1ec2:	00 94       	com	r0
    1ec4:	06 d0       	rcall	.+12     	; 0x1ed2 <__divmodhi4_neg1>
    1ec6:	77 fd       	sbrc	r23, 7
    1ec8:	08 d0       	rcall	.+16     	; 0x1eda <__divmodhi4_neg2>
    1eca:	0b d0       	rcall	.+22     	; 0x1ee2 <__udivmodhi4>
    1ecc:	07 fc       	sbrc	r0, 7
    1ece:	05 d0       	rcall	.+10     	; 0x1eda <__divmodhi4_neg2>
    1ed0:	3e f4       	brtc	.+14     	; 0x1ee0 <__divmodhi4_exit>

00001ed2 <__divmodhi4_neg1>:
    1ed2:	90 95       	com	r25
    1ed4:	81 95       	neg	r24
    1ed6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ed8:	08 95       	ret

00001eda <__divmodhi4_neg2>:
    1eda:	70 95       	com	r23
    1edc:	61 95       	neg	r22
    1ede:	7f 4f       	sbci	r23, 0xFF	; 255

00001ee0 <__divmodhi4_exit>:
    1ee0:	08 95       	ret

00001ee2 <__udivmodhi4>:
    1ee2:	aa 1b       	sub	r26, r26
    1ee4:	bb 1b       	sub	r27, r27
    1ee6:	51 e1       	ldi	r21, 0x11	; 17
    1ee8:	07 c0       	rjmp	.+14     	; 0x1ef8 <__udivmodhi4_ep>

00001eea <__udivmodhi4_loop>:
    1eea:	aa 1f       	adc	r26, r26
    1eec:	bb 1f       	adc	r27, r27
    1eee:	a6 17       	cp	r26, r22
    1ef0:	b7 07       	cpc	r27, r23
    1ef2:	10 f0       	brcs	.+4      	; 0x1ef8 <__udivmodhi4_ep>
    1ef4:	a6 1b       	sub	r26, r22
    1ef6:	b7 0b       	sbc	r27, r23

00001ef8 <__udivmodhi4_ep>:
    1ef8:	88 1f       	adc	r24, r24
    1efa:	99 1f       	adc	r25, r25
    1efc:	5a 95       	dec	r21
    1efe:	a9 f7       	brne	.-22     	; 0x1eea <__udivmodhi4_loop>
    1f00:	80 95       	com	r24
    1f02:	90 95       	com	r25
    1f04:	bc 01       	movw	r22, r24
    1f06:	cd 01       	movw	r24, r26
    1f08:	08 95       	ret

00001f0a <__ftoa_engine>:
    1f0a:	28 30       	cpi	r18, 0x08	; 8
    1f0c:	08 f0       	brcs	.+2      	; 0x1f10 <__ftoa_engine+0x6>
    1f0e:	27 e0       	ldi	r18, 0x07	; 7
    1f10:	33 27       	eor	r19, r19
    1f12:	da 01       	movw	r26, r20
    1f14:	99 0f       	add	r25, r25
    1f16:	31 1d       	adc	r19, r1
    1f18:	87 fd       	sbrc	r24, 7
    1f1a:	91 60       	ori	r25, 0x01	; 1
    1f1c:	00 96       	adiw	r24, 0x00	; 0
    1f1e:	61 05       	cpc	r22, r1
    1f20:	71 05       	cpc	r23, r1
    1f22:	39 f4       	brne	.+14     	; 0x1f32 <__ftoa_engine+0x28>
    1f24:	32 60       	ori	r19, 0x02	; 2
    1f26:	2e 5f       	subi	r18, 0xFE	; 254
    1f28:	3d 93       	st	X+, r19
    1f2a:	30 e3       	ldi	r19, 0x30	; 48
    1f2c:	2a 95       	dec	r18
    1f2e:	e1 f7       	brne	.-8      	; 0x1f28 <__ftoa_engine+0x1e>
    1f30:	08 95       	ret
    1f32:	9f 3f       	cpi	r25, 0xFF	; 255
    1f34:	30 f0       	brcs	.+12     	; 0x1f42 <__ftoa_engine+0x38>
    1f36:	80 38       	cpi	r24, 0x80	; 128
    1f38:	71 05       	cpc	r23, r1
    1f3a:	61 05       	cpc	r22, r1
    1f3c:	09 f0       	breq	.+2      	; 0x1f40 <__ftoa_engine+0x36>
    1f3e:	3c 5f       	subi	r19, 0xFC	; 252
    1f40:	3c 5f       	subi	r19, 0xFC	; 252
    1f42:	3d 93       	st	X+, r19
    1f44:	91 30       	cpi	r25, 0x01	; 1
    1f46:	08 f0       	brcs	.+2      	; 0x1f4a <__ftoa_engine+0x40>
    1f48:	80 68       	ori	r24, 0x80	; 128
    1f4a:	91 1d       	adc	r25, r1
    1f4c:	df 93       	push	r29
    1f4e:	cf 93       	push	r28
    1f50:	1f 93       	push	r17
    1f52:	0f 93       	push	r16
    1f54:	ff 92       	push	r15
    1f56:	ef 92       	push	r14
    1f58:	19 2f       	mov	r17, r25
    1f5a:	98 7f       	andi	r25, 0xF8	; 248
    1f5c:	96 95       	lsr	r25
    1f5e:	e9 2f       	mov	r30, r25
    1f60:	96 95       	lsr	r25
    1f62:	96 95       	lsr	r25
    1f64:	e9 0f       	add	r30, r25
    1f66:	ff 27       	eor	r31, r31
    1f68:	e0 55       	subi	r30, 0x50	; 80
    1f6a:	fe 4f       	sbci	r31, 0xFE	; 254
    1f6c:	99 27       	eor	r25, r25
    1f6e:	33 27       	eor	r19, r19
    1f70:	ee 24       	eor	r14, r14
    1f72:	ff 24       	eor	r15, r15
    1f74:	a7 01       	movw	r20, r14
    1f76:	e7 01       	movw	r28, r14
    1f78:	05 90       	lpm	r0, Z+
    1f7a:	08 94       	sec
    1f7c:	07 94       	ror	r0
    1f7e:	28 f4       	brcc	.+10     	; 0x1f8a <__ftoa_engine+0x80>
    1f80:	36 0f       	add	r19, r22
    1f82:	e7 1e       	adc	r14, r23
    1f84:	f8 1e       	adc	r15, r24
    1f86:	49 1f       	adc	r20, r25
    1f88:	51 1d       	adc	r21, r1
    1f8a:	66 0f       	add	r22, r22
    1f8c:	77 1f       	adc	r23, r23
    1f8e:	88 1f       	adc	r24, r24
    1f90:	99 1f       	adc	r25, r25
    1f92:	06 94       	lsr	r0
    1f94:	a1 f7       	brne	.-24     	; 0x1f7e <__ftoa_engine+0x74>
    1f96:	05 90       	lpm	r0, Z+
    1f98:	07 94       	ror	r0
    1f9a:	28 f4       	brcc	.+10     	; 0x1fa6 <__ftoa_engine+0x9c>
    1f9c:	e7 0e       	add	r14, r23
    1f9e:	f8 1e       	adc	r15, r24
    1fa0:	49 1f       	adc	r20, r25
    1fa2:	56 1f       	adc	r21, r22
    1fa4:	c1 1d       	adc	r28, r1
    1fa6:	77 0f       	add	r23, r23
    1fa8:	88 1f       	adc	r24, r24
    1faa:	99 1f       	adc	r25, r25
    1fac:	66 1f       	adc	r22, r22
    1fae:	06 94       	lsr	r0
    1fb0:	a1 f7       	brne	.-24     	; 0x1f9a <__ftoa_engine+0x90>
    1fb2:	05 90       	lpm	r0, Z+
    1fb4:	07 94       	ror	r0
    1fb6:	28 f4       	brcc	.+10     	; 0x1fc2 <__ftoa_engine+0xb8>
    1fb8:	f8 0e       	add	r15, r24
    1fba:	49 1f       	adc	r20, r25
    1fbc:	56 1f       	adc	r21, r22
    1fbe:	c7 1f       	adc	r28, r23
    1fc0:	d1 1d       	adc	r29, r1
    1fc2:	88 0f       	add	r24, r24
    1fc4:	99 1f       	adc	r25, r25
    1fc6:	66 1f       	adc	r22, r22
    1fc8:	77 1f       	adc	r23, r23
    1fca:	06 94       	lsr	r0
    1fcc:	a1 f7       	brne	.-24     	; 0x1fb6 <__ftoa_engine+0xac>
    1fce:	05 90       	lpm	r0, Z+
    1fd0:	07 94       	ror	r0
    1fd2:	20 f4       	brcc	.+8      	; 0x1fdc <__ftoa_engine+0xd2>
    1fd4:	49 0f       	add	r20, r25
    1fd6:	56 1f       	adc	r21, r22
    1fd8:	c7 1f       	adc	r28, r23
    1fda:	d8 1f       	adc	r29, r24
    1fdc:	99 0f       	add	r25, r25
    1fde:	66 1f       	adc	r22, r22
    1fe0:	77 1f       	adc	r23, r23
    1fe2:	88 1f       	adc	r24, r24
    1fe4:	06 94       	lsr	r0
    1fe6:	a9 f7       	brne	.-22     	; 0x1fd2 <__ftoa_engine+0xc8>
    1fe8:	84 91       	lpm	r24, Z
    1fea:	10 95       	com	r17
    1fec:	17 70       	andi	r17, 0x07	; 7
    1fee:	41 f0       	breq	.+16     	; 0x2000 <__ftoa_engine+0xf6>
    1ff0:	d6 95       	lsr	r29
    1ff2:	c7 95       	ror	r28
    1ff4:	57 95       	ror	r21
    1ff6:	47 95       	ror	r20
    1ff8:	f7 94       	ror	r15
    1ffa:	e7 94       	ror	r14
    1ffc:	1a 95       	dec	r17
    1ffe:	c1 f7       	brne	.-16     	; 0x1ff0 <__ftoa_engine+0xe6>
    2000:	e6 e5       	ldi	r30, 0x56	; 86
    2002:	f1 e0       	ldi	r31, 0x01	; 1
    2004:	68 94       	set
    2006:	15 90       	lpm	r1, Z+
    2008:	15 91       	lpm	r17, Z+
    200a:	35 91       	lpm	r19, Z+
    200c:	65 91       	lpm	r22, Z+
    200e:	95 91       	lpm	r25, Z+
    2010:	05 90       	lpm	r0, Z+
    2012:	7f e2       	ldi	r23, 0x2F	; 47
    2014:	73 95       	inc	r23
    2016:	e1 18       	sub	r14, r1
    2018:	f1 0a       	sbc	r15, r17
    201a:	43 0b       	sbc	r20, r19
    201c:	56 0b       	sbc	r21, r22
    201e:	c9 0b       	sbc	r28, r25
    2020:	d0 09       	sbc	r29, r0
    2022:	c0 f7       	brcc	.-16     	; 0x2014 <__ftoa_engine+0x10a>
    2024:	e1 0c       	add	r14, r1
    2026:	f1 1e       	adc	r15, r17
    2028:	43 1f       	adc	r20, r19
    202a:	56 1f       	adc	r21, r22
    202c:	c9 1f       	adc	r28, r25
    202e:	d0 1d       	adc	r29, r0
    2030:	7e f4       	brtc	.+30     	; 0x2050 <__ftoa_engine+0x146>
    2032:	70 33       	cpi	r23, 0x30	; 48
    2034:	11 f4       	brne	.+4      	; 0x203a <__ftoa_engine+0x130>
    2036:	8a 95       	dec	r24
    2038:	e6 cf       	rjmp	.-52     	; 0x2006 <__ftoa_engine+0xfc>
    203a:	e8 94       	clt
    203c:	01 50       	subi	r16, 0x01	; 1
    203e:	30 f0       	brcs	.+12     	; 0x204c <__ftoa_engine+0x142>
    2040:	08 0f       	add	r16, r24
    2042:	0a f4       	brpl	.+2      	; 0x2046 <__ftoa_engine+0x13c>
    2044:	00 27       	eor	r16, r16
    2046:	02 17       	cp	r16, r18
    2048:	08 f4       	brcc	.+2      	; 0x204c <__ftoa_engine+0x142>
    204a:	20 2f       	mov	r18, r16
    204c:	23 95       	inc	r18
    204e:	02 2f       	mov	r16, r18
    2050:	7a 33       	cpi	r23, 0x3A	; 58
    2052:	28 f0       	brcs	.+10     	; 0x205e <__ftoa_engine+0x154>
    2054:	79 e3       	ldi	r23, 0x39	; 57
    2056:	7d 93       	st	X+, r23
    2058:	2a 95       	dec	r18
    205a:	e9 f7       	brne	.-6      	; 0x2056 <__ftoa_engine+0x14c>
    205c:	10 c0       	rjmp	.+32     	; 0x207e <__ftoa_engine+0x174>
    205e:	7d 93       	st	X+, r23
    2060:	2a 95       	dec	r18
    2062:	89 f6       	brne	.-94     	; 0x2006 <__ftoa_engine+0xfc>
    2064:	06 94       	lsr	r0
    2066:	97 95       	ror	r25
    2068:	67 95       	ror	r22
    206a:	37 95       	ror	r19
    206c:	17 95       	ror	r17
    206e:	17 94       	ror	r1
    2070:	e1 18       	sub	r14, r1
    2072:	f1 0a       	sbc	r15, r17
    2074:	43 0b       	sbc	r20, r19
    2076:	56 0b       	sbc	r21, r22
    2078:	c9 0b       	sbc	r28, r25
    207a:	d0 09       	sbc	r29, r0
    207c:	98 f0       	brcs	.+38     	; 0x20a4 <__ftoa_engine+0x19a>
    207e:	23 95       	inc	r18
    2080:	7e 91       	ld	r23, -X
    2082:	73 95       	inc	r23
    2084:	7a 33       	cpi	r23, 0x3A	; 58
    2086:	08 f0       	brcs	.+2      	; 0x208a <__ftoa_engine+0x180>
    2088:	70 e3       	ldi	r23, 0x30	; 48
    208a:	7c 93       	st	X, r23
    208c:	20 13       	cpse	r18, r16
    208e:	b8 f7       	brcc	.-18     	; 0x207e <__ftoa_engine+0x174>
    2090:	7e 91       	ld	r23, -X
    2092:	70 61       	ori	r23, 0x10	; 16
    2094:	7d 93       	st	X+, r23
    2096:	30 f0       	brcs	.+12     	; 0x20a4 <__ftoa_engine+0x19a>
    2098:	83 95       	inc	r24
    209a:	71 e3       	ldi	r23, 0x31	; 49
    209c:	7d 93       	st	X+, r23
    209e:	70 e3       	ldi	r23, 0x30	; 48
    20a0:	2a 95       	dec	r18
    20a2:	e1 f7       	brne	.-8      	; 0x209c <__ftoa_engine+0x192>
    20a4:	11 24       	eor	r1, r1
    20a6:	ef 90       	pop	r14
    20a8:	ff 90       	pop	r15
    20aa:	0f 91       	pop	r16
    20ac:	1f 91       	pop	r17
    20ae:	cf 91       	pop	r28
    20b0:	df 91       	pop	r29
    20b2:	99 27       	eor	r25, r25
    20b4:	87 fd       	sbrc	r24, 7
    20b6:	90 95       	com	r25
    20b8:	08 95       	ret

000020ba <strnlen_P>:
    20ba:	fc 01       	movw	r30, r24
    20bc:	05 90       	lpm	r0, Z+
    20be:	61 50       	subi	r22, 0x01	; 1
    20c0:	70 40       	sbci	r23, 0x00	; 0
    20c2:	01 10       	cpse	r0, r1
    20c4:	d8 f7       	brcc	.-10     	; 0x20bc <strnlen_P+0x2>
    20c6:	80 95       	com	r24
    20c8:	90 95       	com	r25
    20ca:	8e 0f       	add	r24, r30
    20cc:	9f 1f       	adc	r25, r31
    20ce:	08 95       	ret

000020d0 <strnlen>:
    20d0:	fc 01       	movw	r30, r24
    20d2:	61 50       	subi	r22, 0x01	; 1
    20d4:	70 40       	sbci	r23, 0x00	; 0
    20d6:	01 90       	ld	r0, Z+
    20d8:	01 10       	cpse	r0, r1
    20da:	d8 f7       	brcc	.-10     	; 0x20d2 <strnlen+0x2>
    20dc:	80 95       	com	r24
    20de:	90 95       	com	r25
    20e0:	8e 0f       	add	r24, r30
    20e2:	9f 1f       	adc	r25, r31
    20e4:	08 95       	ret

000020e6 <fdevopen>:
    20e6:	0f 93       	push	r16
    20e8:	1f 93       	push	r17
    20ea:	cf 93       	push	r28
    20ec:	df 93       	push	r29
    20ee:	00 97       	sbiw	r24, 0x00	; 0
    20f0:	31 f4       	brne	.+12     	; 0x20fe <fdevopen+0x18>
    20f2:	61 15       	cp	r22, r1
    20f4:	71 05       	cpc	r23, r1
    20f6:	19 f4       	brne	.+6      	; 0x20fe <fdevopen+0x18>
    20f8:	80 e0       	ldi	r24, 0x00	; 0
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	39 c0       	rjmp	.+114    	; 0x2170 <fdevopen+0x8a>
    20fe:	8b 01       	movw	r16, r22
    2100:	ec 01       	movw	r28, r24
    2102:	6e e0       	ldi	r22, 0x0E	; 14
    2104:	70 e0       	ldi	r23, 0x00	; 0
    2106:	81 e0       	ldi	r24, 0x01	; 1
    2108:	90 e0       	ldi	r25, 0x00	; 0
    210a:	17 d1       	rcall	.+558    	; 0x233a <calloc>
    210c:	fc 01       	movw	r30, r24
    210e:	89 2b       	or	r24, r25
    2110:	99 f3       	breq	.-26     	; 0x20f8 <fdevopen+0x12>
    2112:	80 e8       	ldi	r24, 0x80	; 128
    2114:	83 83       	std	Z+3, r24	; 0x03
    2116:	01 15       	cp	r16, r1
    2118:	11 05       	cpc	r17, r1
    211a:	71 f0       	breq	.+28     	; 0x2138 <fdevopen+0x52>
    211c:	13 87       	std	Z+11, r17	; 0x0b
    211e:	02 87       	std	Z+10, r16	; 0x0a
    2120:	81 e8       	ldi	r24, 0x81	; 129
    2122:	83 83       	std	Z+3, r24	; 0x03
    2124:	80 91 dd 03 	lds	r24, 0x03DD	; 0x8003dd <__iob>
    2128:	90 91 de 03 	lds	r25, 0x03DE	; 0x8003de <__iob+0x1>
    212c:	89 2b       	or	r24, r25
    212e:	21 f4       	brne	.+8      	; 0x2138 <fdevopen+0x52>
    2130:	f0 93 de 03 	sts	0x03DE, r31	; 0x8003de <__iob+0x1>
    2134:	e0 93 dd 03 	sts	0x03DD, r30	; 0x8003dd <__iob>
    2138:	20 97       	sbiw	r28, 0x00	; 0
    213a:	c9 f0       	breq	.+50     	; 0x216e <fdevopen+0x88>
    213c:	d1 87       	std	Z+9, r29	; 0x09
    213e:	c0 87       	std	Z+8, r28	; 0x08
    2140:	83 81       	ldd	r24, Z+3	; 0x03
    2142:	82 60       	ori	r24, 0x02	; 2
    2144:	83 83       	std	Z+3, r24	; 0x03
    2146:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    214a:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    214e:	89 2b       	or	r24, r25
    2150:	71 f4       	brne	.+28     	; 0x216e <fdevopen+0x88>
    2152:	f0 93 e0 03 	sts	0x03E0, r31	; 0x8003e0 <__iob+0x3>
    2156:	e0 93 df 03 	sts	0x03DF, r30	; 0x8003df <__iob+0x2>
    215a:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <__iob+0x4>
    215e:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <__iob+0x5>
    2162:	89 2b       	or	r24, r25
    2164:	21 f4       	brne	.+8      	; 0x216e <fdevopen+0x88>
    2166:	f0 93 e2 03 	sts	0x03E2, r31	; 0x8003e2 <__iob+0x5>
    216a:	e0 93 e1 03 	sts	0x03E1, r30	; 0x8003e1 <__iob+0x4>
    216e:	cf 01       	movw	r24, r30
    2170:	df 91       	pop	r29
    2172:	cf 91       	pop	r28
    2174:	1f 91       	pop	r17
    2176:	0f 91       	pop	r16
    2178:	08 95       	ret

0000217a <fputc>:
    217a:	0f 93       	push	r16
    217c:	1f 93       	push	r17
    217e:	cf 93       	push	r28
    2180:	df 93       	push	r29
    2182:	fb 01       	movw	r30, r22
    2184:	23 81       	ldd	r18, Z+3	; 0x03
    2186:	21 fd       	sbrc	r18, 1
    2188:	03 c0       	rjmp	.+6      	; 0x2190 <fputc+0x16>
    218a:	8f ef       	ldi	r24, 0xFF	; 255
    218c:	9f ef       	ldi	r25, 0xFF	; 255
    218e:	2c c0       	rjmp	.+88     	; 0x21e8 <fputc+0x6e>
    2190:	22 ff       	sbrs	r18, 2
    2192:	16 c0       	rjmp	.+44     	; 0x21c0 <fputc+0x46>
    2194:	46 81       	ldd	r20, Z+6	; 0x06
    2196:	57 81       	ldd	r21, Z+7	; 0x07
    2198:	24 81       	ldd	r18, Z+4	; 0x04
    219a:	35 81       	ldd	r19, Z+5	; 0x05
    219c:	42 17       	cp	r20, r18
    219e:	53 07       	cpc	r21, r19
    21a0:	44 f4       	brge	.+16     	; 0x21b2 <fputc+0x38>
    21a2:	a0 81       	ld	r26, Z
    21a4:	b1 81       	ldd	r27, Z+1	; 0x01
    21a6:	9d 01       	movw	r18, r26
    21a8:	2f 5f       	subi	r18, 0xFF	; 255
    21aa:	3f 4f       	sbci	r19, 0xFF	; 255
    21ac:	31 83       	std	Z+1, r19	; 0x01
    21ae:	20 83       	st	Z, r18
    21b0:	8c 93       	st	X, r24
    21b2:	26 81       	ldd	r18, Z+6	; 0x06
    21b4:	37 81       	ldd	r19, Z+7	; 0x07
    21b6:	2f 5f       	subi	r18, 0xFF	; 255
    21b8:	3f 4f       	sbci	r19, 0xFF	; 255
    21ba:	37 83       	std	Z+7, r19	; 0x07
    21bc:	26 83       	std	Z+6, r18	; 0x06
    21be:	14 c0       	rjmp	.+40     	; 0x21e8 <fputc+0x6e>
    21c0:	8b 01       	movw	r16, r22
    21c2:	ec 01       	movw	r28, r24
    21c4:	fb 01       	movw	r30, r22
    21c6:	00 84       	ldd	r0, Z+8	; 0x08
    21c8:	f1 85       	ldd	r31, Z+9	; 0x09
    21ca:	e0 2d       	mov	r30, r0
    21cc:	19 95       	eicall
    21ce:	89 2b       	or	r24, r25
    21d0:	e1 f6       	brne	.-72     	; 0x218a <fputc+0x10>
    21d2:	d8 01       	movw	r26, r16
    21d4:	16 96       	adiw	r26, 0x06	; 6
    21d6:	8d 91       	ld	r24, X+
    21d8:	9c 91       	ld	r25, X
    21da:	17 97       	sbiw	r26, 0x07	; 7
    21dc:	01 96       	adiw	r24, 0x01	; 1
    21de:	17 96       	adiw	r26, 0x07	; 7
    21e0:	9c 93       	st	X, r25
    21e2:	8e 93       	st	-X, r24
    21e4:	16 97       	sbiw	r26, 0x06	; 6
    21e6:	ce 01       	movw	r24, r28
    21e8:	df 91       	pop	r29
    21ea:	cf 91       	pop	r28
    21ec:	1f 91       	pop	r17
    21ee:	0f 91       	pop	r16
    21f0:	08 95       	ret

000021f2 <printf>:
    21f2:	cf 93       	push	r28
    21f4:	df 93       	push	r29
    21f6:	cd b7       	in	r28, 0x3d	; 61
    21f8:	de b7       	in	r29, 0x3e	; 62
    21fa:	ae 01       	movw	r20, r28
    21fc:	4a 5f       	subi	r20, 0xFA	; 250
    21fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2200:	fa 01       	movw	r30, r20
    2202:	61 91       	ld	r22, Z+
    2204:	71 91       	ld	r23, Z+
    2206:	af 01       	movw	r20, r30
    2208:	80 91 df 03 	lds	r24, 0x03DF	; 0x8003df <__iob+0x2>
    220c:	90 91 e0 03 	lds	r25, 0x03E0	; 0x8003e0 <__iob+0x3>
    2210:	cc da       	rcall	.-2664   	; 0x17aa <vfprintf>
    2212:	df 91       	pop	r29
    2214:	cf 91       	pop	r28
    2216:	08 95       	ret

00002218 <putchar>:
    2218:	60 91 df 03 	lds	r22, 0x03DF	; 0x8003df <__iob+0x2>
    221c:	70 91 e0 03 	lds	r23, 0x03E0	; 0x8003e0 <__iob+0x3>
    2220:	ac cf       	rjmp	.-168    	; 0x217a <fputc>

00002222 <sprintf>:
    2222:	0f 93       	push	r16
    2224:	1f 93       	push	r17
    2226:	cf 93       	push	r28
    2228:	df 93       	push	r29
    222a:	cd b7       	in	r28, 0x3d	; 61
    222c:	de b7       	in	r29, 0x3e	; 62
    222e:	2e 97       	sbiw	r28, 0x0e	; 14
    2230:	0f b6       	in	r0, 0x3f	; 63
    2232:	f8 94       	cli
    2234:	de bf       	out	0x3e, r29	; 62
    2236:	0f be       	out	0x3f, r0	; 63
    2238:	cd bf       	out	0x3d, r28	; 61
    223a:	0e 89       	ldd	r16, Y+22	; 0x16
    223c:	1f 89       	ldd	r17, Y+23	; 0x17
    223e:	86 e0       	ldi	r24, 0x06	; 6
    2240:	8c 83       	std	Y+4, r24	; 0x04
    2242:	1a 83       	std	Y+2, r17	; 0x02
    2244:	09 83       	std	Y+1, r16	; 0x01
    2246:	8f ef       	ldi	r24, 0xFF	; 255
    2248:	9f e7       	ldi	r25, 0x7F	; 127
    224a:	9e 83       	std	Y+6, r25	; 0x06
    224c:	8d 83       	std	Y+5, r24	; 0x05
    224e:	ae 01       	movw	r20, r28
    2250:	46 5e       	subi	r20, 0xE6	; 230
    2252:	5f 4f       	sbci	r21, 0xFF	; 255
    2254:	68 8d       	ldd	r22, Y+24	; 0x18
    2256:	79 8d       	ldd	r23, Y+25	; 0x19
    2258:	ce 01       	movw	r24, r28
    225a:	01 96       	adiw	r24, 0x01	; 1
    225c:	a6 da       	rcall	.-2740   	; 0x17aa <vfprintf>
    225e:	ef 81       	ldd	r30, Y+7	; 0x07
    2260:	f8 85       	ldd	r31, Y+8	; 0x08
    2262:	e0 0f       	add	r30, r16
    2264:	f1 1f       	adc	r31, r17
    2266:	10 82       	st	Z, r1
    2268:	2e 96       	adiw	r28, 0x0e	; 14
    226a:	0f b6       	in	r0, 0x3f	; 63
    226c:	f8 94       	cli
    226e:	de bf       	out	0x3e, r29	; 62
    2270:	0f be       	out	0x3f, r0	; 63
    2272:	cd bf       	out	0x3d, r28	; 61
    2274:	df 91       	pop	r29
    2276:	cf 91       	pop	r28
    2278:	1f 91       	pop	r17
    227a:	0f 91       	pop	r16
    227c:	08 95       	ret

0000227e <__ultoa_invert>:
    227e:	fa 01       	movw	r30, r20
    2280:	aa 27       	eor	r26, r26
    2282:	28 30       	cpi	r18, 0x08	; 8
    2284:	51 f1       	breq	.+84     	; 0x22da <__ultoa_invert+0x5c>
    2286:	20 31       	cpi	r18, 0x10	; 16
    2288:	81 f1       	breq	.+96     	; 0x22ea <__ultoa_invert+0x6c>
    228a:	e8 94       	clt
    228c:	6f 93       	push	r22
    228e:	6e 7f       	andi	r22, 0xFE	; 254
    2290:	6e 5f       	subi	r22, 0xFE	; 254
    2292:	7f 4f       	sbci	r23, 0xFF	; 255
    2294:	8f 4f       	sbci	r24, 0xFF	; 255
    2296:	9f 4f       	sbci	r25, 0xFF	; 255
    2298:	af 4f       	sbci	r26, 0xFF	; 255
    229a:	b1 e0       	ldi	r27, 0x01	; 1
    229c:	3e d0       	rcall	.+124    	; 0x231a <__ultoa_invert+0x9c>
    229e:	b4 e0       	ldi	r27, 0x04	; 4
    22a0:	3c d0       	rcall	.+120    	; 0x231a <__ultoa_invert+0x9c>
    22a2:	67 0f       	add	r22, r23
    22a4:	78 1f       	adc	r23, r24
    22a6:	89 1f       	adc	r24, r25
    22a8:	9a 1f       	adc	r25, r26
    22aa:	a1 1d       	adc	r26, r1
    22ac:	68 0f       	add	r22, r24
    22ae:	79 1f       	adc	r23, r25
    22b0:	8a 1f       	adc	r24, r26
    22b2:	91 1d       	adc	r25, r1
    22b4:	a1 1d       	adc	r26, r1
    22b6:	6a 0f       	add	r22, r26
    22b8:	71 1d       	adc	r23, r1
    22ba:	81 1d       	adc	r24, r1
    22bc:	91 1d       	adc	r25, r1
    22be:	a1 1d       	adc	r26, r1
    22c0:	20 d0       	rcall	.+64     	; 0x2302 <__ultoa_invert+0x84>
    22c2:	09 f4       	brne	.+2      	; 0x22c6 <__ultoa_invert+0x48>
    22c4:	68 94       	set
    22c6:	3f 91       	pop	r19
    22c8:	2a e0       	ldi	r18, 0x0A	; 10
    22ca:	26 9f       	mul	r18, r22
    22cc:	11 24       	eor	r1, r1
    22ce:	30 19       	sub	r19, r0
    22d0:	30 5d       	subi	r19, 0xD0	; 208
    22d2:	31 93       	st	Z+, r19
    22d4:	de f6       	brtc	.-74     	; 0x228c <__ultoa_invert+0xe>
    22d6:	cf 01       	movw	r24, r30
    22d8:	08 95       	ret
    22da:	46 2f       	mov	r20, r22
    22dc:	47 70       	andi	r20, 0x07	; 7
    22de:	40 5d       	subi	r20, 0xD0	; 208
    22e0:	41 93       	st	Z+, r20
    22e2:	b3 e0       	ldi	r27, 0x03	; 3
    22e4:	0f d0       	rcall	.+30     	; 0x2304 <__ultoa_invert+0x86>
    22e6:	c9 f7       	brne	.-14     	; 0x22da <__ultoa_invert+0x5c>
    22e8:	f6 cf       	rjmp	.-20     	; 0x22d6 <__ultoa_invert+0x58>
    22ea:	46 2f       	mov	r20, r22
    22ec:	4f 70       	andi	r20, 0x0F	; 15
    22ee:	40 5d       	subi	r20, 0xD0	; 208
    22f0:	4a 33       	cpi	r20, 0x3A	; 58
    22f2:	18 f0       	brcs	.+6      	; 0x22fa <__ultoa_invert+0x7c>
    22f4:	49 5d       	subi	r20, 0xD9	; 217
    22f6:	31 fd       	sbrc	r19, 1
    22f8:	40 52       	subi	r20, 0x20	; 32
    22fa:	41 93       	st	Z+, r20
    22fc:	02 d0       	rcall	.+4      	; 0x2302 <__ultoa_invert+0x84>
    22fe:	a9 f7       	brne	.-22     	; 0x22ea <__ultoa_invert+0x6c>
    2300:	ea cf       	rjmp	.-44     	; 0x22d6 <__ultoa_invert+0x58>
    2302:	b4 e0       	ldi	r27, 0x04	; 4
    2304:	a6 95       	lsr	r26
    2306:	97 95       	ror	r25
    2308:	87 95       	ror	r24
    230a:	77 95       	ror	r23
    230c:	67 95       	ror	r22
    230e:	ba 95       	dec	r27
    2310:	c9 f7       	brne	.-14     	; 0x2304 <__ultoa_invert+0x86>
    2312:	00 97       	sbiw	r24, 0x00	; 0
    2314:	61 05       	cpc	r22, r1
    2316:	71 05       	cpc	r23, r1
    2318:	08 95       	ret
    231a:	9b 01       	movw	r18, r22
    231c:	ac 01       	movw	r20, r24
    231e:	0a 2e       	mov	r0, r26
    2320:	06 94       	lsr	r0
    2322:	57 95       	ror	r21
    2324:	47 95       	ror	r20
    2326:	37 95       	ror	r19
    2328:	27 95       	ror	r18
    232a:	ba 95       	dec	r27
    232c:	c9 f7       	brne	.-14     	; 0x2320 <__ultoa_invert+0xa2>
    232e:	62 0f       	add	r22, r18
    2330:	73 1f       	adc	r23, r19
    2332:	84 1f       	adc	r24, r20
    2334:	95 1f       	adc	r25, r21
    2336:	a0 1d       	adc	r26, r0
    2338:	08 95       	ret

0000233a <calloc>:
    233a:	0f 93       	push	r16
    233c:	1f 93       	push	r17
    233e:	cf 93       	push	r28
    2340:	df 93       	push	r29
    2342:	86 9f       	mul	r24, r22
    2344:	80 01       	movw	r16, r0
    2346:	87 9f       	mul	r24, r23
    2348:	10 0d       	add	r17, r0
    234a:	96 9f       	mul	r25, r22
    234c:	10 0d       	add	r17, r0
    234e:	11 24       	eor	r1, r1
    2350:	c8 01       	movw	r24, r16
    2352:	0d d0       	rcall	.+26     	; 0x236e <malloc>
    2354:	ec 01       	movw	r28, r24
    2356:	00 97       	sbiw	r24, 0x00	; 0
    2358:	21 f0       	breq	.+8      	; 0x2362 <calloc+0x28>
    235a:	a8 01       	movw	r20, r16
    235c:	60 e0       	ldi	r22, 0x00	; 0
    235e:	70 e0       	ldi	r23, 0x00	; 0
    2360:	27 d1       	rcall	.+590    	; 0x25b0 <memset>
    2362:	ce 01       	movw	r24, r28
    2364:	df 91       	pop	r29
    2366:	cf 91       	pop	r28
    2368:	1f 91       	pop	r17
    236a:	0f 91       	pop	r16
    236c:	08 95       	ret

0000236e <malloc>:
    236e:	0f 93       	push	r16
    2370:	1f 93       	push	r17
    2372:	cf 93       	push	r28
    2374:	df 93       	push	r29
    2376:	82 30       	cpi	r24, 0x02	; 2
    2378:	91 05       	cpc	r25, r1
    237a:	10 f4       	brcc	.+4      	; 0x2380 <malloc+0x12>
    237c:	82 e0       	ldi	r24, 0x02	; 2
    237e:	90 e0       	ldi	r25, 0x00	; 0
    2380:	e0 91 e5 03 	lds	r30, 0x03E5	; 0x8003e5 <__flp>
    2384:	f0 91 e6 03 	lds	r31, 0x03E6	; 0x8003e6 <__flp+0x1>
    2388:	20 e0       	ldi	r18, 0x00	; 0
    238a:	30 e0       	ldi	r19, 0x00	; 0
    238c:	a0 e0       	ldi	r26, 0x00	; 0
    238e:	b0 e0       	ldi	r27, 0x00	; 0
    2390:	30 97       	sbiw	r30, 0x00	; 0
    2392:	19 f1       	breq	.+70     	; 0x23da <malloc+0x6c>
    2394:	40 81       	ld	r20, Z
    2396:	51 81       	ldd	r21, Z+1	; 0x01
    2398:	02 81       	ldd	r16, Z+2	; 0x02
    239a:	13 81       	ldd	r17, Z+3	; 0x03
    239c:	48 17       	cp	r20, r24
    239e:	59 07       	cpc	r21, r25
    23a0:	c8 f0       	brcs	.+50     	; 0x23d4 <malloc+0x66>
    23a2:	84 17       	cp	r24, r20
    23a4:	95 07       	cpc	r25, r21
    23a6:	69 f4       	brne	.+26     	; 0x23c2 <malloc+0x54>
    23a8:	10 97       	sbiw	r26, 0x00	; 0
    23aa:	31 f0       	breq	.+12     	; 0x23b8 <malloc+0x4a>
    23ac:	12 96       	adiw	r26, 0x02	; 2
    23ae:	0c 93       	st	X, r16
    23b0:	12 97       	sbiw	r26, 0x02	; 2
    23b2:	13 96       	adiw	r26, 0x03	; 3
    23b4:	1c 93       	st	X, r17
    23b6:	27 c0       	rjmp	.+78     	; 0x2406 <malloc+0x98>
    23b8:	00 93 e5 03 	sts	0x03E5, r16	; 0x8003e5 <__flp>
    23bc:	10 93 e6 03 	sts	0x03E6, r17	; 0x8003e6 <__flp+0x1>
    23c0:	22 c0       	rjmp	.+68     	; 0x2406 <malloc+0x98>
    23c2:	21 15       	cp	r18, r1
    23c4:	31 05       	cpc	r19, r1
    23c6:	19 f0       	breq	.+6      	; 0x23ce <malloc+0x60>
    23c8:	42 17       	cp	r20, r18
    23ca:	53 07       	cpc	r21, r19
    23cc:	18 f4       	brcc	.+6      	; 0x23d4 <malloc+0x66>
    23ce:	9a 01       	movw	r18, r20
    23d0:	bd 01       	movw	r22, r26
    23d2:	ef 01       	movw	r28, r30
    23d4:	df 01       	movw	r26, r30
    23d6:	f8 01       	movw	r30, r16
    23d8:	db cf       	rjmp	.-74     	; 0x2390 <malloc+0x22>
    23da:	21 15       	cp	r18, r1
    23dc:	31 05       	cpc	r19, r1
    23de:	f9 f0       	breq	.+62     	; 0x241e <malloc+0xb0>
    23e0:	28 1b       	sub	r18, r24
    23e2:	39 0b       	sbc	r19, r25
    23e4:	24 30       	cpi	r18, 0x04	; 4
    23e6:	31 05       	cpc	r19, r1
    23e8:	80 f4       	brcc	.+32     	; 0x240a <malloc+0x9c>
    23ea:	8a 81       	ldd	r24, Y+2	; 0x02
    23ec:	9b 81       	ldd	r25, Y+3	; 0x03
    23ee:	61 15       	cp	r22, r1
    23f0:	71 05       	cpc	r23, r1
    23f2:	21 f0       	breq	.+8      	; 0x23fc <malloc+0x8e>
    23f4:	fb 01       	movw	r30, r22
    23f6:	93 83       	std	Z+3, r25	; 0x03
    23f8:	82 83       	std	Z+2, r24	; 0x02
    23fa:	04 c0       	rjmp	.+8      	; 0x2404 <malloc+0x96>
    23fc:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <__flp+0x1>
    2400:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <__flp>
    2404:	fe 01       	movw	r30, r28
    2406:	32 96       	adiw	r30, 0x02	; 2
    2408:	44 c0       	rjmp	.+136    	; 0x2492 <malloc+0x124>
    240a:	fe 01       	movw	r30, r28
    240c:	e2 0f       	add	r30, r18
    240e:	f3 1f       	adc	r31, r19
    2410:	81 93       	st	Z+, r24
    2412:	91 93       	st	Z+, r25
    2414:	22 50       	subi	r18, 0x02	; 2
    2416:	31 09       	sbc	r19, r1
    2418:	39 83       	std	Y+1, r19	; 0x01
    241a:	28 83       	st	Y, r18
    241c:	3a c0       	rjmp	.+116    	; 0x2492 <malloc+0x124>
    241e:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    2422:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    2426:	23 2b       	or	r18, r19
    2428:	41 f4       	brne	.+16     	; 0x243a <malloc+0xcc>
    242a:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    242e:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2432:	30 93 e4 03 	sts	0x03E4, r19	; 0x8003e4 <__brkval+0x1>
    2436:	20 93 e3 03 	sts	0x03E3, r18	; 0x8003e3 <__brkval>
    243a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    243e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2442:	21 15       	cp	r18, r1
    2444:	31 05       	cpc	r19, r1
    2446:	41 f4       	brne	.+16     	; 0x2458 <malloc+0xea>
    2448:	2d b7       	in	r18, 0x3d	; 61
    244a:	3e b7       	in	r19, 0x3e	; 62
    244c:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2450:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2454:	24 1b       	sub	r18, r20
    2456:	35 0b       	sbc	r19, r21
    2458:	e0 91 e3 03 	lds	r30, 0x03E3	; 0x8003e3 <__brkval>
    245c:	f0 91 e4 03 	lds	r31, 0x03E4	; 0x8003e4 <__brkval+0x1>
    2460:	e2 17       	cp	r30, r18
    2462:	f3 07       	cpc	r31, r19
    2464:	a0 f4       	brcc	.+40     	; 0x248e <malloc+0x120>
    2466:	2e 1b       	sub	r18, r30
    2468:	3f 0b       	sbc	r19, r31
    246a:	28 17       	cp	r18, r24
    246c:	39 07       	cpc	r19, r25
    246e:	78 f0       	brcs	.+30     	; 0x248e <malloc+0x120>
    2470:	ac 01       	movw	r20, r24
    2472:	4e 5f       	subi	r20, 0xFE	; 254
    2474:	5f 4f       	sbci	r21, 0xFF	; 255
    2476:	24 17       	cp	r18, r20
    2478:	35 07       	cpc	r19, r21
    247a:	48 f0       	brcs	.+18     	; 0x248e <malloc+0x120>
    247c:	4e 0f       	add	r20, r30
    247e:	5f 1f       	adc	r21, r31
    2480:	50 93 e4 03 	sts	0x03E4, r21	; 0x8003e4 <__brkval+0x1>
    2484:	40 93 e3 03 	sts	0x03E3, r20	; 0x8003e3 <__brkval>
    2488:	81 93       	st	Z+, r24
    248a:	91 93       	st	Z+, r25
    248c:	02 c0       	rjmp	.+4      	; 0x2492 <malloc+0x124>
    248e:	e0 e0       	ldi	r30, 0x00	; 0
    2490:	f0 e0       	ldi	r31, 0x00	; 0
    2492:	cf 01       	movw	r24, r30
    2494:	df 91       	pop	r29
    2496:	cf 91       	pop	r28
    2498:	1f 91       	pop	r17
    249a:	0f 91       	pop	r16
    249c:	08 95       	ret

0000249e <free>:
    249e:	cf 93       	push	r28
    24a0:	df 93       	push	r29
    24a2:	00 97       	sbiw	r24, 0x00	; 0
    24a4:	09 f4       	brne	.+2      	; 0x24a8 <free+0xa>
    24a6:	81 c0       	rjmp	.+258    	; 0x25aa <free+0x10c>
    24a8:	fc 01       	movw	r30, r24
    24aa:	32 97       	sbiw	r30, 0x02	; 2
    24ac:	13 82       	std	Z+3, r1	; 0x03
    24ae:	12 82       	std	Z+2, r1	; 0x02
    24b0:	a0 91 e5 03 	lds	r26, 0x03E5	; 0x8003e5 <__flp>
    24b4:	b0 91 e6 03 	lds	r27, 0x03E6	; 0x8003e6 <__flp+0x1>
    24b8:	10 97       	sbiw	r26, 0x00	; 0
    24ba:	81 f4       	brne	.+32     	; 0x24dc <free+0x3e>
    24bc:	20 81       	ld	r18, Z
    24be:	31 81       	ldd	r19, Z+1	; 0x01
    24c0:	82 0f       	add	r24, r18
    24c2:	93 1f       	adc	r25, r19
    24c4:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    24c8:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    24cc:	28 17       	cp	r18, r24
    24ce:	39 07       	cpc	r19, r25
    24d0:	51 f5       	brne	.+84     	; 0x2526 <free+0x88>
    24d2:	f0 93 e4 03 	sts	0x03E4, r31	; 0x8003e4 <__brkval+0x1>
    24d6:	e0 93 e3 03 	sts	0x03E3, r30	; 0x8003e3 <__brkval>
    24da:	67 c0       	rjmp	.+206    	; 0x25aa <free+0x10c>
    24dc:	ed 01       	movw	r28, r26
    24de:	20 e0       	ldi	r18, 0x00	; 0
    24e0:	30 e0       	ldi	r19, 0x00	; 0
    24e2:	ce 17       	cp	r28, r30
    24e4:	df 07       	cpc	r29, r31
    24e6:	40 f4       	brcc	.+16     	; 0x24f8 <free+0x5a>
    24e8:	4a 81       	ldd	r20, Y+2	; 0x02
    24ea:	5b 81       	ldd	r21, Y+3	; 0x03
    24ec:	9e 01       	movw	r18, r28
    24ee:	41 15       	cp	r20, r1
    24f0:	51 05       	cpc	r21, r1
    24f2:	f1 f0       	breq	.+60     	; 0x2530 <free+0x92>
    24f4:	ea 01       	movw	r28, r20
    24f6:	f5 cf       	rjmp	.-22     	; 0x24e2 <free+0x44>
    24f8:	d3 83       	std	Z+3, r29	; 0x03
    24fa:	c2 83       	std	Z+2, r28	; 0x02
    24fc:	40 81       	ld	r20, Z
    24fe:	51 81       	ldd	r21, Z+1	; 0x01
    2500:	84 0f       	add	r24, r20
    2502:	95 1f       	adc	r25, r21
    2504:	c8 17       	cp	r28, r24
    2506:	d9 07       	cpc	r29, r25
    2508:	59 f4       	brne	.+22     	; 0x2520 <free+0x82>
    250a:	88 81       	ld	r24, Y
    250c:	99 81       	ldd	r25, Y+1	; 0x01
    250e:	84 0f       	add	r24, r20
    2510:	95 1f       	adc	r25, r21
    2512:	02 96       	adiw	r24, 0x02	; 2
    2514:	91 83       	std	Z+1, r25	; 0x01
    2516:	80 83       	st	Z, r24
    2518:	8a 81       	ldd	r24, Y+2	; 0x02
    251a:	9b 81       	ldd	r25, Y+3	; 0x03
    251c:	93 83       	std	Z+3, r25	; 0x03
    251e:	82 83       	std	Z+2, r24	; 0x02
    2520:	21 15       	cp	r18, r1
    2522:	31 05       	cpc	r19, r1
    2524:	29 f4       	brne	.+10     	; 0x2530 <free+0x92>
    2526:	f0 93 e6 03 	sts	0x03E6, r31	; 0x8003e6 <__flp+0x1>
    252a:	e0 93 e5 03 	sts	0x03E5, r30	; 0x8003e5 <__flp>
    252e:	3d c0       	rjmp	.+122    	; 0x25aa <free+0x10c>
    2530:	e9 01       	movw	r28, r18
    2532:	fb 83       	std	Y+3, r31	; 0x03
    2534:	ea 83       	std	Y+2, r30	; 0x02
    2536:	49 91       	ld	r20, Y+
    2538:	59 91       	ld	r21, Y+
    253a:	c4 0f       	add	r28, r20
    253c:	d5 1f       	adc	r29, r21
    253e:	ec 17       	cp	r30, r28
    2540:	fd 07       	cpc	r31, r29
    2542:	61 f4       	brne	.+24     	; 0x255c <free+0xbe>
    2544:	80 81       	ld	r24, Z
    2546:	91 81       	ldd	r25, Z+1	; 0x01
    2548:	84 0f       	add	r24, r20
    254a:	95 1f       	adc	r25, r21
    254c:	02 96       	adiw	r24, 0x02	; 2
    254e:	e9 01       	movw	r28, r18
    2550:	99 83       	std	Y+1, r25	; 0x01
    2552:	88 83       	st	Y, r24
    2554:	82 81       	ldd	r24, Z+2	; 0x02
    2556:	93 81       	ldd	r25, Z+3	; 0x03
    2558:	9b 83       	std	Y+3, r25	; 0x03
    255a:	8a 83       	std	Y+2, r24	; 0x02
    255c:	e0 e0       	ldi	r30, 0x00	; 0
    255e:	f0 e0       	ldi	r31, 0x00	; 0
    2560:	12 96       	adiw	r26, 0x02	; 2
    2562:	8d 91       	ld	r24, X+
    2564:	9c 91       	ld	r25, X
    2566:	13 97       	sbiw	r26, 0x03	; 3
    2568:	00 97       	sbiw	r24, 0x00	; 0
    256a:	19 f0       	breq	.+6      	; 0x2572 <free+0xd4>
    256c:	fd 01       	movw	r30, r26
    256e:	dc 01       	movw	r26, r24
    2570:	f7 cf       	rjmp	.-18     	; 0x2560 <free+0xc2>
    2572:	8d 91       	ld	r24, X+
    2574:	9c 91       	ld	r25, X
    2576:	11 97       	sbiw	r26, 0x01	; 1
    2578:	9d 01       	movw	r18, r26
    257a:	2e 5f       	subi	r18, 0xFE	; 254
    257c:	3f 4f       	sbci	r19, 0xFF	; 255
    257e:	82 0f       	add	r24, r18
    2580:	93 1f       	adc	r25, r19
    2582:	20 91 e3 03 	lds	r18, 0x03E3	; 0x8003e3 <__brkval>
    2586:	30 91 e4 03 	lds	r19, 0x03E4	; 0x8003e4 <__brkval+0x1>
    258a:	28 17       	cp	r18, r24
    258c:	39 07       	cpc	r19, r25
    258e:	69 f4       	brne	.+26     	; 0x25aa <free+0x10c>
    2590:	30 97       	sbiw	r30, 0x00	; 0
    2592:	29 f4       	brne	.+10     	; 0x259e <free+0x100>
    2594:	10 92 e6 03 	sts	0x03E6, r1	; 0x8003e6 <__flp+0x1>
    2598:	10 92 e5 03 	sts	0x03E5, r1	; 0x8003e5 <__flp>
    259c:	02 c0       	rjmp	.+4      	; 0x25a2 <free+0x104>
    259e:	13 82       	std	Z+3, r1	; 0x03
    25a0:	12 82       	std	Z+2, r1	; 0x02
    25a2:	b0 93 e4 03 	sts	0x03E4, r27	; 0x8003e4 <__brkval+0x1>
    25a6:	a0 93 e3 03 	sts	0x03E3, r26	; 0x8003e3 <__brkval>
    25aa:	df 91       	pop	r29
    25ac:	cf 91       	pop	r28
    25ae:	08 95       	ret

000025b0 <memset>:
    25b0:	dc 01       	movw	r26, r24
    25b2:	01 c0       	rjmp	.+2      	; 0x25b6 <memset+0x6>
    25b4:	6d 93       	st	X+, r22
    25b6:	41 50       	subi	r20, 0x01	; 1
    25b8:	50 40       	sbci	r21, 0x00	; 0
    25ba:	e0 f7       	brcc	.-8      	; 0x25b4 <memset+0x4>
    25bc:	08 95       	ret

000025be <_exit>:
    25be:	f8 94       	cli

000025c0 <__stop_program>:
    25c0:	ff cf       	rjmp	.-2      	; 0x25c0 <__stop_program>
