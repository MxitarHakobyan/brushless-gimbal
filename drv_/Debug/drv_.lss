
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000019a  00800200  00002c40  00002cd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002c40  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000081  0080039a  0080039a  00002e6e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002e6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ecc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  00002f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003380  00000000  00000000  0000319c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000017d3  00000000  00000000  0000651c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001881  00000000  00000000  00007cef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000086c  00000000  00000000  00009570  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d19  00000000  00000000  00009ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000025a0  00000000  00000000  0000aaf5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  0000d095  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <__vector_17>
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__bad_interrupt>
      66:	00 00       	nop
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 25 0a 	jmp	0x144a	; 0x144a <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2332>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	e0 e4       	ldi	r30, 0x40	; 64
     22c:	fc e2       	ldi	r31, 0x2C	; 44
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	aa 39       	cpi	r26, 0x9A	; 154
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	aa e9       	ldi	r26, 0x9A	; 154
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	ab 31       	cpi	r26, 0x1B	; 27
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	f4 d4       	rcall	.+2536   	; 0xc38 <main>
     250:	0c 94 1e 16 	jmp	0x2c3c	; 0x2c3c <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
{	
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     256:	08 95       	ret

00000258 <PWM_update>:
void PWM_update()//motor pwm update
{
	U_PWM=pwmSin[U_step];
     258:	e0 91 9c 03 	lds	r30, 0x039C	; 0x80039c <U_step>
     25c:	f0 91 9d 03 	lds	r31, 0x039D	; 0x80039d <U_step+0x1>
     260:	ea 5f       	subi	r30, 0xFA	; 250
     262:	fd 4f       	sbci	r31, 0xFD	; 253
     264:	80 81       	ld	r24, Z
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     26c:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     270:	e0 91 75 03 	lds	r30, 0x0375	; 0x800375 <V_step>
     274:	f0 91 76 03 	lds	r31, 0x0376	; 0x800376 <V_step+0x1>
     278:	ea 5f       	subi	r30, 0xFA	; 250
     27a:	fd 4f       	sbci	r31, 0xFD	; 253
     27c:	80 81       	ld	r24, Z
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     284:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     288:	e0 91 73 03 	lds	r30, 0x0373	; 0x800373 <W_step>
     28c:	f0 91 74 03 	lds	r31, 0x0374	; 0x800374 <W_step+0x1>
     290:	ea 5f       	subi	r30, 0xFA	; 250
     292:	fd 4f       	sbci	r31, 0xFD	; 253
     294:	80 81       	ld	r24, Z
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     29c:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     2a0:	60 91 af 03 	lds	r22, 0x03AF	; 0x8003af <incr>
     2a4:	70 91 b0 03 	lds	r23, 0x03B0	; 0x8003b0 <incr+0x1>
     2a8:	40 91 9c 03 	lds	r20, 0x039C	; 0x80039c <U_step>
     2ac:	50 91 9d 03 	lds	r21, 0x039D	; 0x80039d <U_step+0x1>
     2b0:	46 0f       	add	r20, r22
     2b2:	57 1f       	adc	r21, r23
     2b4:	50 93 9d 03 	sts	0x039D, r21	; 0x80039d <U_step+0x1>
     2b8:	40 93 9c 03 	sts	0x039C, r20	; 0x80039c <U_step>
	V_step=V_step+incr;
     2bc:	20 91 75 03 	lds	r18, 0x0375	; 0x800375 <V_step>
     2c0:	30 91 76 03 	lds	r19, 0x0376	; 0x800376 <V_step+0x1>
     2c4:	26 0f       	add	r18, r22
     2c6:	37 1f       	adc	r19, r23
     2c8:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     2cc:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step+incr;
     2d0:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <W_step>
     2d4:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <W_step+0x1>
     2d8:	86 0f       	add	r24, r22
     2da:	97 1f       	adc	r25, r23
     2dc:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     2e0:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	if(U_step > SINE_TABLE_SZ)
     2e4:	49 36       	cpi	r20, 0x69	; 105
     2e6:	61 e0       	ldi	r22, 0x01	; 1
     2e8:	56 07       	cpc	r21, r22
     2ea:	2c f0       	brlt	.+10     	; 0x2f6 <PWM_update+0x9e>
	U_step = 0;
     2ec:	10 92 9d 03 	sts	0x039D, r1	; 0x80039d <U_step+0x1>
     2f0:	10 92 9c 03 	sts	0x039C, r1	; 0x80039c <U_step>
     2f4:	08 c0       	rjmp	.+16     	; 0x306 <PWM_update+0xae>
	if(U_step < 0)
     2f6:	55 23       	and	r21, r21
     2f8:	34 f4       	brge	.+12     	; 0x306 <PWM_update+0xae>
	U_step = SINE_TABLE_SZ;
     2fa:	48 e6       	ldi	r20, 0x68	; 104
     2fc:	51 e0       	ldi	r21, 0x01	; 1
     2fe:	50 93 9d 03 	sts	0x039D, r21	; 0x80039d <U_step+0x1>
     302:	40 93 9c 03 	sts	0x039C, r20	; 0x80039c <U_step>
	
	if(V_step > SINE_TABLE_SZ)
     306:	29 36       	cpi	r18, 0x69	; 105
     308:	41 e0       	ldi	r20, 0x01	; 1
     30a:	34 07       	cpc	r19, r20
     30c:	2c f0       	brlt	.+10     	; 0x318 <PWM_update+0xc0>
	V_step = 0;
     30e:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <V_step+0x1>
     312:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <V_step>
     316:	08 c0       	rjmp	.+16     	; 0x328 <PWM_update+0xd0>
	if(V_step < 0)
     318:	33 23       	and	r19, r19
     31a:	34 f4       	brge	.+12     	; 0x328 <PWM_update+0xd0>
	V_step = SINE_TABLE_SZ;
     31c:	28 e6       	ldi	r18, 0x68	; 104
     31e:	31 e0       	ldi	r19, 0x01	; 1
     320:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     324:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     328:	89 36       	cpi	r24, 0x69	; 105
     32a:	61 e0       	ldi	r22, 0x01	; 1
     32c:	96 07       	cpc	r25, r22
     32e:	2c f0       	brlt	.+10     	; 0x33a <PWM_update+0xe2>
	W_step = 0;
     330:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <W_step+0x1>
     334:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <W_step>
     338:	08 c0       	rjmp	.+16     	; 0x34a <PWM_update+0xf2>
	if(W_step < 0)
     33a:	99 23       	and	r25, r25
     33c:	34 f4       	brge	.+12     	; 0x34a <PWM_update+0xf2>
	W_step = SINE_TABLE_SZ;
     33e:	88 e6       	ldi	r24, 0x68	; 104
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     346:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	//_delay_us(100);
	INT_MOTOR_SPEED1=pwm_delay;
     34a:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <pwm_delay>
     34e:	90 91 aa 03 	lds	r25, 0x03AA	; 0x8003aa <pwm_delay+0x1>
     352:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     356:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     35a:	08 95       	ret

0000035c <PWM_update_2>:
}
void PWM_update_2()//motor pwm update
{
	U1_PWM=pwmSin[U_step_2];
     35c:	e0 91 9a 03 	lds	r30, 0x039A	; 0x80039a <__data_end>
     360:	f0 91 9b 03 	lds	r31, 0x039B	; 0x80039b <__data_end+0x1>
     364:	ea 5f       	subi	r30, 0xFA	; 250
     366:	fd 4f       	sbci	r31, 0xFD	; 253
     368:	80 81       	ld	r24, Z
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     370:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	V1_PWM=pwmSin[V_step_2];
     374:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step_2>
     378:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step_2+0x1>
     37c:	ea 5f       	subi	r30, 0xFA	; 250
     37e:	fd 4f       	sbci	r31, 0xFD	; 253
     380:	80 81       	ld	r24, Z
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     388:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
	W1_PWM=pwmSin[W_step_2];
     38c:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step_2>
     390:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step_2+0x1>
     394:	ea 5f       	subi	r30, 0xFA	; 250
     396:	fd 4f       	sbci	r31, 0xFD	; 253
     398:	80 81       	ld	r24, Z
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     3a0:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
	U_step_2=U_step_2+incr_2;
     3a4:	60 91 ad 03 	lds	r22, 0x03AD	; 0x8003ad <incr_2>
     3a8:	70 91 ae 03 	lds	r23, 0x03AE	; 0x8003ae <incr_2+0x1>
     3ac:	40 91 9a 03 	lds	r20, 0x039A	; 0x80039a <__data_end>
     3b0:	50 91 9b 03 	lds	r21, 0x039B	; 0x80039b <__data_end+0x1>
     3b4:	46 0f       	add	r20, r22
     3b6:	57 1f       	adc	r21, r23
     3b8:	50 93 9b 03 	sts	0x039B, r21	; 0x80039b <__data_end+0x1>
     3bc:	40 93 9a 03 	sts	0x039A, r20	; 0x80039a <__data_end>
	V_step_2=V_step_2+incr_2;
     3c0:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step_2>
     3c4:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step_2+0x1>
     3c8:	26 0f       	add	r18, r22
     3ca:	37 1f       	adc	r19, r23
     3cc:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     3d0:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_2+incr_2;
     3d4:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step_2>
     3d8:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step_2+0x1>
     3dc:	86 0f       	add	r24, r22
     3de:	97 1f       	adc	r25, r23
     3e0:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     3e4:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	if(U_step_2 > SINE_TABLE_SZ)
     3e8:	49 36       	cpi	r20, 0x69	; 105
     3ea:	61 e0       	ldi	r22, 0x01	; 1
     3ec:	56 07       	cpc	r21, r22
     3ee:	2c f0       	brlt	.+10     	; 0x3fa <PWM_update_2+0x9e>
	U_step_2 = 0;
     3f0:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <__data_end+0x1>
     3f4:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <__data_end>
     3f8:	08 c0       	rjmp	.+16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	if(U_step_2 < 0)
     3fa:	55 23       	and	r21, r21
     3fc:	34 f4       	brge	.+12     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
	U_step_2 = SINE_TABLE_SZ;
     3fe:	48 e6       	ldi	r20, 0x68	; 104
     400:	51 e0       	ldi	r21, 0x01	; 1
     402:	50 93 9b 03 	sts	0x039B, r21	; 0x80039b <__data_end+0x1>
     406:	40 93 9a 03 	sts	0x039A, r20	; 0x80039a <__data_end>
	
	if(V_step_2 > SINE_TABLE_SZ)
     40a:	29 36       	cpi	r18, 0x69	; 105
     40c:	41 e0       	ldi	r20, 0x01	; 1
     40e:	34 07       	cpc	r19, r20
     410:	2c f0       	brlt	.+10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
	V_step_2 = 0;
     412:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step_2+0x1>
     416:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step_2>
     41a:	08 c0       	rjmp	.+16     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
	if(V_step_2 < 0)
     41c:	33 23       	and	r19, r19
     41e:	34 f4       	brge	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
	V_step = SINE_TABLE_SZ;
     420:	28 e6       	ldi	r18, 0x68	; 104
     422:	31 e0       	ldi	r19, 0x01	; 1
     424:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     428:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step_2 > SINE_TABLE_SZ)
     42c:	89 36       	cpi	r24, 0x69	; 105
     42e:	61 e0       	ldi	r22, 0x01	; 1
     430:	96 07       	cpc	r25, r22
     432:	2c f0       	brlt	.+10     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
	W_step_2 = 0;
     434:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step_2+0x1>
     438:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step_2>
     43c:	08 c0       	rjmp	.+16     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
	if(W_step_2< 0)
     43e:	99 23       	and	r25, r25
     440:	34 f4       	brge	.+12     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
	W_step_2 = SINE_TABLE_SZ;
     442:	88 e6       	ldi	r24, 0x68	; 104
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     44a:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	//_delay_us(100);
	INT_MOTOR_SPEED2=pwm_delay_2;
     44e:	80 91 a7 03 	lds	r24, 0x03A7	; 0x8003a7 <pwm_delay_2>
     452:	90 91 a8 03 	lds	r25, 0x03A8	; 0x8003a8 <pwm_delay_2+0x1>
     456:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     45a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     45e:	08 95       	ret

00000460 <init_motor_gpio>:
	//printf("i");
}
void init_motor_gpio()
{
	//setting pin mode to output for motor 1 
	sbi(DDRH,3);//digital 6 OC4A
     460:	e1 e0       	ldi	r30, 0x01	; 1
     462:	f1 e0       	ldi	r31, 0x01	; 1
     464:	80 81       	ld	r24, Z
     466:	88 60       	ori	r24, 0x08	; 8
     468:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     46a:	80 81       	ld	r24, Z
     46c:	80 61       	ori	r24, 0x10	; 16
     46e:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     470:	80 81       	ld	r24, Z
     472:	80 62       	ori	r24, 0x20	; 32
     474:	80 83       	st	Z, r24
	
	sbi(DDRA,0);//digital 22 EN1
     476:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     478:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     47a:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     47c:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     47e:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     480:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     482:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     484:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     486:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     488:	47 9a       	sbi	0x08, 7	; 8
	
	
	//setting pin mode to output for motor 2
	sbi(DDRE,4);//digital 2 OC3B
     48a:	6c 9a       	sbi	0x0d, 4	; 13
	sbi(DDRE,5);//digital 3 OC3C
     48c:	6d 9a       	sbi	0x0d, 5	; 13
	sbi(DDRE,3);//digital 5 OC3A
     48e:	6b 9a       	sbi	0x0d, 3	; 13
	
	sbi(DDRC,5);//digital 32 EN1
     490:	3d 9a       	sbi	0x07, 5	; 7
	sbi(DDRC,3);//digital 34 EN2
     492:	3b 9a       	sbi	0x07, 3	; 7
	sbi(DDRC,1);//digital 36 EN3
     494:	39 9a       	sbi	0x07, 1	; 7
	sbi(DDRD,7);//digital 38 sleep
     496:	57 9a       	sbi	0x0a, 7	; 10
	sbi(DDRG,1);//digital 40 nf, see drv8313
     498:	99 9a       	sbi	0x13, 1	; 19
	
	sbi(PORTC,5);//sleep HIGH
     49a:	45 9a       	sbi	0x08, 5	; 8
	sbi(PORTC,3);//nf HIGH
     49c:	43 9a       	sbi	0x08, 3	; 8
	sbi(PORTC,1);//EN1 HIGH
     49e:	41 9a       	sbi	0x08, 1	; 8
	sbi(PORTD,7);//EN2 HIGH
     4a0:	5f 9a       	sbi	0x0b, 7	; 11
	sbi(PORTG,1);//EN3 HIGH
     4a2:	a1 9a       	sbi	0x14, 1	; 20
     4a4:	08 95       	ret

000004a6 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     4a6:	4f 92       	push	r4
     4a8:	5f 92       	push	r5
     4aa:	6f 92       	push	r6
     4ac:	7f 92       	push	r7
     4ae:	8f 92       	push	r8
     4b0:	9f 92       	push	r9
     4b2:	af 92       	push	r10
     4b4:	bf 92       	push	r11
     4b6:	cf 92       	push	r12
     4b8:	df 92       	push	r13
     4ba:	ef 92       	push	r14
     4bc:	ff 92       	push	r15
     4be:	0f 93       	push	r16
     4c0:	1f 93       	push	r17
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	cd b7       	in	r28, 0x3d	; 61
     4c8:	de b7       	in	r29, 0x3e	; 62
     4ca:	6c 97       	sbiw	r28, 0x1c	; 28
     4cc:	0f b6       	in	r0, 0x3f	; 63
     4ce:	f8 94       	cli
     4d0:	de bf       	out	0x3e, r29	; 62
     4d2:	0f be       	out	0x3f, r0	; 63
     4d4:	cd bf       	out	0x3d, r28	; 61
     4d6:	69 8b       	std	Y+17, r22	; 0x11
     4d8:	7a 8b       	std	Y+18, r23	; 0x12
     4da:	8b 8b       	std	Y+19, r24	; 0x13
     4dc:	9c 8b       	std	Y+20, r25	; 0x14
     4de:	ca 01       	movw	r24, r20
     4e0:	b9 01       	movw	r22, r18
     4e2:	e9 82       	std	Y+1, r14	; 0x01
     4e4:	fa 82       	std	Y+2, r15	; 0x02
     4e6:	0b 83       	std	Y+3, r16	; 0x03
     4e8:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     4ea:	c0 90 bd 03 	lds	r12, 0x03BD	; 0x8003bd <bias>
     4ee:	d0 90 be 03 	lds	r13, 0x03BE	; 0x8003be <bias+0x1>
     4f2:	e0 90 bf 03 	lds	r14, 0x03BF	; 0x8003bf <bias+0x2>
     4f6:	f0 90 c0 03 	lds	r15, 0x03C0	; 0x8003c0 <bias+0x3>
     4fa:	a7 01       	movw	r20, r14
     4fc:	96 01       	movw	r18, r12
     4fe:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     502:	60 93 b5 03 	sts	0x03B5, r22	; 0x8003b5 <rate>
     506:	70 93 b6 03 	sts	0x03B6, r23	; 0x8003b6 <rate+0x1>
     50a:	80 93 b7 03 	sts	0x03B7, r24	; 0x8003b7 <rate+0x2>
     50e:	90 93 b8 03 	sts	0x03B8, r25	; 0x8003b8 <rate+0x3>
	angle += dt * rate;
     512:	29 81       	ldd	r18, Y+1	; 0x01
     514:	3a 81       	ldd	r19, Y+2	; 0x02
     516:	4b 81       	ldd	r20, Y+3	; 0x03
     518:	5c 81       	ldd	r21, Y+4	; 0x04
     51a:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     51e:	20 91 e1 03 	lds	r18, 0x03E1	; 0x8003e1 <angle>
     522:	30 91 e2 03 	lds	r19, 0x03E2	; 0x8003e2 <angle+0x1>
     526:	40 91 e3 03 	lds	r20, 0x03E3	; 0x8003e3 <angle+0x2>
     52a:	50 91 e4 03 	lds	r21, 0x03E4	; 0x8003e4 <angle+0x3>
     52e:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__addsf3>
     532:	6d 8b       	std	Y+21, r22	; 0x15
     534:	7e 8b       	std	Y+22, r23	; 0x16
     536:	8f 8b       	std	Y+23, r24	; 0x17
     538:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     53a:	80 90 f9 03 	lds	r8, 0x03F9	; 0x8003f9 <P+0xc>
     53e:	90 90 fa 03 	lds	r9, 0x03FA	; 0x8003fa <P+0xd>
     542:	a0 90 fb 03 	lds	r10, 0x03FB	; 0x8003fb <P+0xe>
     546:	b0 90 fc 03 	lds	r11, 0x03FC	; 0x8003fc <P+0xf>
     54a:	a5 01       	movw	r20, r10
     54c:	94 01       	movw	r18, r8
     54e:	69 81       	ldd	r22, Y+1	; 0x01
     550:	7a 81       	ldd	r23, Y+2	; 0x02
     552:	8b 81       	ldd	r24, Y+3	; 0x03
     554:	9c 81       	ldd	r25, Y+4	; 0x04
     556:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     55a:	6d 83       	std	Y+5, r22	; 0x05
     55c:	7e 83       	std	Y+6, r23	; 0x06
     55e:	8f 83       	std	Y+7, r24	; 0x07
     560:	98 87       	std	Y+8, r25	; 0x08
     562:	40 90 f1 03 	lds	r4, 0x03F1	; 0x8003f1 <P+0x4>
     566:	50 90 f2 03 	lds	r5, 0x03F2	; 0x8003f2 <P+0x5>
     56a:	60 90 f3 03 	lds	r6, 0x03F3	; 0x8003f3 <P+0x6>
     56e:	70 90 f4 03 	lds	r7, 0x03F4	; 0x8003f4 <P+0x7>
     572:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <P+0x8>
     576:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <P+0x9>
     57a:	a0 91 f7 03 	lds	r26, 0x03F7	; 0x8003f7 <P+0xa>
     57e:	b0 91 f8 03 	lds	r27, 0x03F8	; 0x8003f8 <P+0xb>
     582:	8d 87       	std	Y+13, r24	; 0x0d
     584:	9e 87       	std	Y+14, r25	; 0x0e
     586:	af 87       	std	Y+15, r26	; 0x0f
     588:	b8 8b       	std	Y+16, r27	; 0x10
     58a:	a3 01       	movw	r20, r6
     58c:	92 01       	movw	r18, r4
     58e:	6d 81       	ldd	r22, Y+5	; 0x05
     590:	7e 81       	ldd	r23, Y+6	; 0x06
     592:	8f 81       	ldd	r24, Y+7	; 0x07
     594:	98 85       	ldd	r25, Y+8	; 0x08
     596:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     59a:	2d 85       	ldd	r18, Y+13	; 0x0d
     59c:	3e 85       	ldd	r19, Y+14	; 0x0e
     59e:	4f 85       	ldd	r20, Y+15	; 0x0f
     5a0:	58 89       	ldd	r21, Y+16	; 0x10
     5a2:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     5a6:	20 91 b9 03 	lds	r18, 0x03B9	; 0x8003b9 <Q_angle>
     5aa:	30 91 ba 03 	lds	r19, 0x03BA	; 0x8003ba <Q_angle+0x1>
     5ae:	40 91 bb 03 	lds	r20, 0x03BB	; 0x8003bb <Q_angle+0x2>
     5b2:	50 91 bc 03 	lds	r21, 0x03BC	; 0x8003bc <Q_angle+0x3>
     5b6:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__addsf3>
     5ba:	29 81       	ldd	r18, Y+1	; 0x01
     5bc:	3a 81       	ldd	r19, Y+2	; 0x02
     5be:	4b 81       	ldd	r20, Y+3	; 0x03
     5c0:	5c 81       	ldd	r21, Y+4	; 0x04
     5c2:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     5c6:	ad ee       	ldi	r26, 0xED	; 237
     5c8:	b3 e0       	ldi	r27, 0x03	; 3
     5ca:	2d 91       	ld	r18, X+
     5cc:	3d 91       	ld	r19, X+
     5ce:	4d 91       	ld	r20, X+
     5d0:	5c 91       	ld	r21, X
     5d2:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__addsf3>
     5d6:	69 87       	std	Y+9, r22	; 0x09
     5d8:	7a 87       	std	Y+10, r23	; 0x0a
     5da:	8b 87       	std	Y+11, r24	; 0x0b
     5dc:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     5de:	2d 81       	ldd	r18, Y+5	; 0x05
     5e0:	3e 81       	ldd	r19, Y+6	; 0x06
     5e2:	4f 81       	ldd	r20, Y+7	; 0x07
     5e4:	58 85       	ldd	r21, Y+8	; 0x08
     5e6:	c3 01       	movw	r24, r6
     5e8:	b2 01       	movw	r22, r4
     5ea:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     5ee:	2b 01       	movw	r4, r22
     5f0:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     5f2:	2d 81       	ldd	r18, Y+5	; 0x05
     5f4:	3e 81       	ldd	r19, Y+6	; 0x06
     5f6:	4f 81       	ldd	r20, Y+7	; 0x07
     5f8:	58 85       	ldd	r21, Y+8	; 0x08
     5fa:	6d 85       	ldd	r22, Y+13	; 0x0d
     5fc:	7e 85       	ldd	r23, Y+14	; 0x0e
     5fe:	8f 85       	ldd	r24, Y+15	; 0x0f
     600:	98 89       	ldd	r25, Y+16	; 0x10
     602:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     606:	6d 87       	std	Y+13, r22	; 0x0d
     608:	7e 87       	std	Y+14, r23	; 0x0e
     60a:	8f 87       	std	Y+15, r24	; 0x0f
     60c:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     60e:	20 91 b1 03 	lds	r18, 0x03B1	; 0x8003b1 <Q_bias>
     612:	30 91 b2 03 	lds	r19, 0x03B2	; 0x8003b2 <Q_bias+0x1>
     616:	40 91 b3 03 	lds	r20, 0x03B3	; 0x8003b3 <Q_bias+0x2>
     61a:	50 91 b4 03 	lds	r21, 0x03B4	; 0x8003b4 <Q_bias+0x3>
     61e:	69 81       	ldd	r22, Y+1	; 0x01
     620:	7a 81       	ldd	r23, Y+2	; 0x02
     622:	8b 81       	ldd	r24, Y+3	; 0x03
     624:	9c 81       	ldd	r25, Y+4	; 0x04
     626:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     62a:	a5 01       	movw	r20, r10
     62c:	94 01       	movw	r18, r8
     62e:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__addsf3>
     632:	69 8f       	std	Y+25, r22	; 0x19
     634:	7a 8f       	std	Y+26, r23	; 0x1a
     636:	8b 8f       	std	Y+27, r24	; 0x1b
     638:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     63a:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <R_measure>
     63e:	30 91 da 03 	lds	r19, 0x03DA	; 0x8003da <R_measure+0x1>
     642:	40 91 db 03 	lds	r20, 0x03DB	; 0x8003db <R_measure+0x2>
     646:	50 91 dc 03 	lds	r21, 0x03DC	; 0x8003dc <R_measure+0x3>
     64a:	69 85       	ldd	r22, Y+9	; 0x09
     64c:	7a 85       	ldd	r23, Y+10	; 0x0a
     64e:	8b 85       	ldd	r24, Y+11	; 0x0b
     650:	9c 85       	ldd	r25, Y+12	; 0x0c
     652:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__addsf3>
     656:	4b 01       	movw	r8, r22
     658:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     65a:	9b 01       	movw	r18, r22
     65c:	ac 01       	movw	r20, r24
     65e:	69 85       	ldd	r22, Y+9	; 0x09
     660:	7a 85       	ldd	r23, Y+10	; 0x0a
     662:	8b 85       	ldd	r24, Y+11	; 0x0b
     664:	9c 85       	ldd	r25, Y+12	; 0x0c
     666:	0e 94 ad 0c 	call	0x195a	; 0x195a <__divsf3>
     66a:	69 83       	std	Y+1, r22	; 0x01
     66c:	7a 83       	std	Y+2, r23	; 0x02
     66e:	8b 83       	std	Y+3, r24	; 0x03
     670:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     672:	a5 01       	movw	r20, r10
     674:	94 01       	movw	r18, r8
     676:	6d 85       	ldd	r22, Y+13	; 0x0d
     678:	7e 85       	ldd	r23, Y+14	; 0x0e
     67a:	8f 85       	ldd	r24, Y+15	; 0x0f
     67c:	98 89       	ldd	r25, Y+16	; 0x10
     67e:	0e 94 ad 0c 	call	0x195a	; 0x195a <__divsf3>
     682:	6d 83       	std	Y+5, r22	; 0x05
     684:	7e 83       	std	Y+6, r23	; 0x06
     686:	8f 83       	std	Y+7, r24	; 0x07
     688:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     68a:	2d 89       	ldd	r18, Y+21	; 0x15
     68c:	3e 89       	ldd	r19, Y+22	; 0x16
     68e:	4f 89       	ldd	r20, Y+23	; 0x17
     690:	58 8d       	ldd	r21, Y+24	; 0x18
     692:	69 89       	ldd	r22, Y+17	; 0x11
     694:	7a 89       	ldd	r23, Y+18	; 0x12
     696:	8b 89       	ldd	r24, Y+19	; 0x13
     698:	9c 89       	ldd	r25, Y+20	; 0x14
     69a:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     69e:	69 8b       	std	Y+17, r22	; 0x11
     6a0:	7a 8b       	std	Y+18, r23	; 0x12
     6a2:	8b 8b       	std	Y+19, r24	; 0x13
     6a4:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     6a6:	9b 01       	movw	r18, r22
     6a8:	ac 01       	movw	r20, r24
     6aa:	69 81       	ldd	r22, Y+1	; 0x01
     6ac:	7a 81       	ldd	r23, Y+2	; 0x02
     6ae:	8b 81       	ldd	r24, Y+3	; 0x03
     6b0:	9c 81       	ldd	r25, Y+4	; 0x04
     6b2:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     6b6:	2d 89       	ldd	r18, Y+21	; 0x15
     6b8:	3e 89       	ldd	r19, Y+22	; 0x16
     6ba:	4f 89       	ldd	r20, Y+23	; 0x17
     6bc:	58 8d       	ldd	r21, Y+24	; 0x18
     6be:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__addsf3>
     6c2:	4b 01       	movw	r8, r22
     6c4:	5c 01       	movw	r10, r24
     6c6:	60 93 e1 03 	sts	0x03E1, r22	; 0x8003e1 <angle>
     6ca:	70 93 e2 03 	sts	0x03E2, r23	; 0x8003e2 <angle+0x1>
     6ce:	80 93 e3 03 	sts	0x03E3, r24	; 0x8003e3 <angle+0x2>
     6d2:	90 93 e4 03 	sts	0x03E4, r25	; 0x8003e4 <angle+0x3>
	bias += K[1] * y;
     6d6:	29 89       	ldd	r18, Y+17	; 0x11
     6d8:	3a 89       	ldd	r19, Y+18	; 0x12
     6da:	4b 89       	ldd	r20, Y+19	; 0x13
     6dc:	5c 89       	ldd	r21, Y+20	; 0x14
     6de:	6d 81       	ldd	r22, Y+5	; 0x05
     6e0:	7e 81       	ldd	r23, Y+6	; 0x06
     6e2:	8f 81       	ldd	r24, Y+7	; 0x07
     6e4:	98 85       	ldd	r25, Y+8	; 0x08
     6e6:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     6ea:	a7 01       	movw	r20, r14
     6ec:	96 01       	movw	r18, r12
     6ee:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__addsf3>
     6f2:	60 93 bd 03 	sts	0x03BD, r22	; 0x8003bd <bias>
     6f6:	70 93 be 03 	sts	0x03BE, r23	; 0x8003be <bias+0x1>
     6fa:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <bias+0x2>
     6fe:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     702:	29 81       	ldd	r18, Y+1	; 0x01
     704:	3a 81       	ldd	r19, Y+2	; 0x02
     706:	4b 81       	ldd	r20, Y+3	; 0x03
     708:	5c 81       	ldd	r21, Y+4	; 0x04
     70a:	69 85       	ldd	r22, Y+9	; 0x09
     70c:	7a 85       	ldd	r23, Y+10	; 0x0a
     70e:	8b 85       	ldd	r24, Y+11	; 0x0b
     710:	9c 85       	ldd	r25, Y+12	; 0x0c
     712:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     716:	9b 01       	movw	r18, r22
     718:	ac 01       	movw	r20, r24
     71a:	69 85       	ldd	r22, Y+9	; 0x09
     71c:	7a 85       	ldd	r23, Y+10	; 0x0a
     71e:	8b 85       	ldd	r24, Y+11	; 0x0b
     720:	9c 85       	ldd	r25, Y+12	; 0x0c
     722:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     726:	ed ee       	ldi	r30, 0xED	; 237
     728:	f3 e0       	ldi	r31, 0x03	; 3
     72a:	60 83       	st	Z, r22
     72c:	71 83       	std	Z+1, r23	; 0x01
     72e:	82 83       	std	Z+2, r24	; 0x02
     730:	93 83       	std	Z+3, r25	; 0x03
	P[0][1] -= K[0] * P01_temp;
     732:	29 81       	ldd	r18, Y+1	; 0x01
     734:	3a 81       	ldd	r19, Y+2	; 0x02
     736:	4b 81       	ldd	r20, Y+3	; 0x03
     738:	5c 81       	ldd	r21, Y+4	; 0x04
     73a:	c3 01       	movw	r24, r6
     73c:	b2 01       	movw	r22, r4
     73e:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     742:	9b 01       	movw	r18, r22
     744:	ac 01       	movw	r20, r24
     746:	c3 01       	movw	r24, r6
     748:	b2 01       	movw	r22, r4
     74a:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     74e:	60 93 f1 03 	sts	0x03F1, r22	; 0x8003f1 <P+0x4>
     752:	70 93 f2 03 	sts	0x03F2, r23	; 0x8003f2 <P+0x5>
     756:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <P+0x6>
     75a:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <P+0x7>
	P[1][0] -= K[1] * P00_temp;
     75e:	2d 81       	ldd	r18, Y+5	; 0x05
     760:	3e 81       	ldd	r19, Y+6	; 0x06
     762:	4f 81       	ldd	r20, Y+7	; 0x07
     764:	58 85       	ldd	r21, Y+8	; 0x08
     766:	69 85       	ldd	r22, Y+9	; 0x09
     768:	7a 85       	ldd	r23, Y+10	; 0x0a
     76a:	8b 85       	ldd	r24, Y+11	; 0x0b
     76c:	9c 85       	ldd	r25, Y+12	; 0x0c
     76e:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     772:	9b 01       	movw	r18, r22
     774:	ac 01       	movw	r20, r24
     776:	6d 85       	ldd	r22, Y+13	; 0x0d
     778:	7e 85       	ldd	r23, Y+14	; 0x0e
     77a:	8f 85       	ldd	r24, Y+15	; 0x0f
     77c:	98 89       	ldd	r25, Y+16	; 0x10
     77e:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     782:	60 93 f5 03 	sts	0x03F5, r22	; 0x8003f5 <P+0x8>
     786:	70 93 f6 03 	sts	0x03F6, r23	; 0x8003f6 <P+0x9>
     78a:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <P+0xa>
     78e:	90 93 f8 03 	sts	0x03F8, r25	; 0x8003f8 <P+0xb>
	P[1][1] -= K[1] * P01_temp;
     792:	2d 81       	ldd	r18, Y+5	; 0x05
     794:	3e 81       	ldd	r19, Y+6	; 0x06
     796:	4f 81       	ldd	r20, Y+7	; 0x07
     798:	58 85       	ldd	r21, Y+8	; 0x08
     79a:	c3 01       	movw	r24, r6
     79c:	b2 01       	movw	r22, r4
     79e:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     7a2:	9b 01       	movw	r18, r22
     7a4:	ac 01       	movw	r20, r24
     7a6:	69 8d       	ldd	r22, Y+25	; 0x19
     7a8:	7a 8d       	ldd	r23, Y+26	; 0x1a
     7aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7ac:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7ae:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__subsf3>
     7b2:	60 93 f9 03 	sts	0x03F9, r22	; 0x8003f9 <P+0xc>
     7b6:	70 93 fa 03 	sts	0x03FA, r23	; 0x8003fa <P+0xd>
     7ba:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <P+0xe>
     7be:	90 93 fc 03 	sts	0x03FC, r25	; 0x8003fc <P+0xf>

	return angle;
};
     7c2:	c5 01       	movw	r24, r10
     7c4:	b4 01       	movw	r22, r8
     7c6:	6c 96       	adiw	r28, 0x1c	; 28
     7c8:	0f b6       	in	r0, 0x3f	; 63
     7ca:	f8 94       	cli
     7cc:	de bf       	out	0x3e, r29	; 62
     7ce:	0f be       	out	0x3f, r0	; 63
     7d0:	cd bf       	out	0x3d, r28	; 61
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	1f 91       	pop	r17
     7d8:	0f 91       	pop	r16
     7da:	ff 90       	pop	r15
     7dc:	ef 90       	pop	r14
     7de:	df 90       	pop	r13
     7e0:	cf 90       	pop	r12
     7e2:	bf 90       	pop	r11
     7e4:	af 90       	pop	r10
     7e6:	9f 90       	pop	r9
     7e8:	8f 90       	pop	r8
     7ea:	7f 90       	pop	r7
     7ec:	6f 90       	pop	r6
     7ee:	5f 90       	pop	r5
     7f0:	4f 90       	pop	r4
     7f2:	08 95       	ret

000007f4 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     7f4:	8f e6       	ldi	r24, 0x6F	; 111
     7f6:	92 e1       	ldi	r25, 0x12	; 18
     7f8:	a3 e8       	ldi	r26, 0x83	; 131
     7fa:	ba e3       	ldi	r27, 0x3A	; 58
     7fc:	80 93 b9 03 	sts	0x03B9, r24	; 0x8003b9 <Q_angle>
     800:	90 93 ba 03 	sts	0x03BA, r25	; 0x8003ba <Q_angle+0x1>
     804:	a0 93 bb 03 	sts	0x03BB, r26	; 0x8003bb <Q_angle+0x2>
     808:	b0 93 bc 03 	sts	0x03BC, r27	; 0x8003bc <Q_angle+0x3>
	Q_bias = 0.003f;
     80c:	86 ea       	ldi	r24, 0xA6	; 166
     80e:	9b e9       	ldi	r25, 0x9B	; 155
     810:	a4 e4       	ldi	r26, 0x44	; 68
     812:	bb e3       	ldi	r27, 0x3B	; 59
     814:	80 93 b1 03 	sts	0x03B1, r24	; 0x8003b1 <Q_bias>
     818:	90 93 b2 03 	sts	0x03B2, r25	; 0x8003b2 <Q_bias+0x1>
     81c:	a0 93 b3 03 	sts	0x03B3, r26	; 0x8003b3 <Q_bias+0x2>
     820:	b0 93 b4 03 	sts	0x03B4, r27	; 0x8003b4 <Q_bias+0x3>
	R_measure = 0.03f;
     824:	8f e8       	ldi	r24, 0x8F	; 143
     826:	92 ec       	ldi	r25, 0xC2	; 194
     828:	a5 ef       	ldi	r26, 0xF5	; 245
     82a:	bc e3       	ldi	r27, 0x3C	; 60
     82c:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <R_measure>
     830:	90 93 da 03 	sts	0x03DA, r25	; 0x8003da <R_measure+0x1>
     834:	a0 93 db 03 	sts	0x03DB, r26	; 0x8003db <R_measure+0x2>
     838:	b0 93 dc 03 	sts	0x03DC, r27	; 0x8003dc <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     83c:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <angle>
     840:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <angle+0x1>
     844:	10 92 e3 03 	sts	0x03E3, r1	; 0x8003e3 <angle+0x2>
     848:	10 92 e4 03 	sts	0x03E4, r1	; 0x8003e4 <angle+0x3>
	bias = 0.0f; // Reset bias
     84c:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <bias>
     850:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <bias+0x1>
     854:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <bias+0x2>
     858:	10 92 c0 03 	sts	0x03C0, r1	; 0x8003c0 <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     85c:	ed ee       	ldi	r30, 0xED	; 237
     85e:	f3 e0       	ldi	r31, 0x03	; 3
     860:	10 82       	st	Z, r1
     862:	11 82       	std	Z+1, r1	; 0x01
     864:	12 82       	std	Z+2, r1	; 0x02
     866:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     868:	14 82       	std	Z+4, r1	; 0x04
     86a:	15 82       	std	Z+5, r1	; 0x05
     86c:	16 82       	std	Z+6, r1	; 0x06
     86e:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     870:	10 86       	std	Z+8, r1	; 0x08
     872:	11 86       	std	Z+9, r1	; 0x09
     874:	12 86       	std	Z+10, r1	; 0x0a
     876:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     878:	14 86       	std	Z+12, r1	; 0x0c
     87a:	15 86       	std	Z+13, r1	; 0x0d
     87c:	16 86       	std	Z+14, r1	; 0x0e
     87e:	17 86       	std	Z+15, r1	; 0x0f
     880:	08 95       	ret

00000882 <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     882:	4f 92       	push	r4
     884:	5f 92       	push	r5
     886:	6f 92       	push	r6
     888:	7f 92       	push	r7
     88a:	8f 92       	push	r8
     88c:	9f 92       	push	r9
     88e:	af 92       	push	r10
     890:	bf 92       	push	r11
     892:	cf 92       	push	r12
     894:	df 92       	push	r13
     896:	ef 92       	push	r14
     898:	ff 92       	push	r15
     89a:	0f 93       	push	r16
     89c:	1f 93       	push	r17
     89e:	cf 93       	push	r28
     8a0:	df 93       	push	r29
     8a2:	cd b7       	in	r28, 0x3d	; 61
     8a4:	de b7       	in	r29, 0x3e	; 62
     8a6:	6c 97       	sbiw	r28, 0x1c	; 28
     8a8:	0f b6       	in	r0, 0x3f	; 63
     8aa:	f8 94       	cli
     8ac:	de bf       	out	0x3e, r29	; 62
     8ae:	0f be       	out	0x3f, r0	; 63
     8b0:	cd bf       	out	0x3d, r28	; 61
     8b2:	69 8b       	std	Y+17, r22	; 0x11
     8b4:	7a 8b       	std	Y+18, r23	; 0x12
     8b6:	8b 8b       	std	Y+19, r24	; 0x13
     8b8:	9c 8b       	std	Y+20, r25	; 0x14
     8ba:	ca 01       	movw	r24, r20
     8bc:	b9 01       	movw	r22, r18
     8be:	e9 82       	std	Y+1, r14	; 0x01
     8c0:	fa 82       	std	Y+2, r15	; 0x02
     8c2:	0b 83       	std	Y+3, r16	; 0x03
     8c4:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     8c6:	c0 90 dd 03 	lds	r12, 0x03DD	; 0x8003dd <bias_1>
     8ca:	d0 90 de 03 	lds	r13, 0x03DE	; 0x8003de <bias_1+0x1>
     8ce:	e0 90 df 03 	lds	r14, 0x03DF	; 0x8003df <bias_1+0x2>
     8d2:	f0 90 e0 03 	lds	r15, 0x03E0	; 0x8003e0 <bias_1+0x3>
     8d6:	a7 01       	movw	r20, r14
     8d8:	96 01       	movw	r18, r12
     8da:	74 d7       	rcall	.+3816   	; 0x17c4 <__subsf3>
     8dc:	60 93 d5 03 	sts	0x03D5, r22	; 0x8003d5 <rate_1>
     8e0:	70 93 d6 03 	sts	0x03D6, r23	; 0x8003d6 <rate_1+0x1>
     8e4:	80 93 d7 03 	sts	0x03D7, r24	; 0x8003d7 <rate_1+0x2>
     8e8:	90 93 d8 03 	sts	0x03D8, r25	; 0x8003d8 <rate_1+0x3>
	angle_1 += dt * rate_1;
     8ec:	29 81       	ldd	r18, Y+1	; 0x01
     8ee:	3a 81       	ldd	r19, Y+2	; 0x02
     8f0:	4b 81       	ldd	r20, Y+3	; 0x03
     8f2:	5c 81       	ldd	r21, Y+4	; 0x04
     8f4:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     8f8:	20 91 c1 03 	lds	r18, 0x03C1	; 0x8003c1 <angle_1>
     8fc:	30 91 c2 03 	lds	r19, 0x03C2	; 0x8003c2 <angle_1+0x1>
     900:	40 91 c3 03 	lds	r20, 0x03C3	; 0x8003c3 <angle_1+0x2>
     904:	50 91 c4 03 	lds	r21, 0x03C4	; 0x8003c4 <angle_1+0x3>
     908:	5e d7       	rcall	.+3772   	; 0x17c6 <__addsf3>
     90a:	6d 8b       	std	Y+21, r22	; 0x15
     90c:	7e 8b       	std	Y+22, r23	; 0x16
     90e:	8f 8b       	std	Y+23, r24	; 0x17
     910:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     912:	80 90 d1 03 	lds	r8, 0x03D1	; 0x8003d1 <P_1+0xc>
     916:	90 90 d2 03 	lds	r9, 0x03D2	; 0x8003d2 <P_1+0xd>
     91a:	a0 90 d3 03 	lds	r10, 0x03D3	; 0x8003d3 <P_1+0xe>
     91e:	b0 90 d4 03 	lds	r11, 0x03D4	; 0x8003d4 <P_1+0xf>
     922:	a5 01       	movw	r20, r10
     924:	94 01       	movw	r18, r8
     926:	69 81       	ldd	r22, Y+1	; 0x01
     928:	7a 81       	ldd	r23, Y+2	; 0x02
     92a:	8b 81       	ldd	r24, Y+3	; 0x03
     92c:	9c 81       	ldd	r25, Y+4	; 0x04
     92e:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     932:	6d 83       	std	Y+5, r22	; 0x05
     934:	7e 83       	std	Y+6, r23	; 0x06
     936:	8f 83       	std	Y+7, r24	; 0x07
     938:	98 87       	std	Y+8, r25	; 0x08
     93a:	40 90 c9 03 	lds	r4, 0x03C9	; 0x8003c9 <P_1+0x4>
     93e:	50 90 ca 03 	lds	r5, 0x03CA	; 0x8003ca <P_1+0x5>
     942:	60 90 cb 03 	lds	r6, 0x03CB	; 0x8003cb <P_1+0x6>
     946:	70 90 cc 03 	lds	r7, 0x03CC	; 0x8003cc <P_1+0x7>
     94a:	80 91 cd 03 	lds	r24, 0x03CD	; 0x8003cd <P_1+0x8>
     94e:	90 91 ce 03 	lds	r25, 0x03CE	; 0x8003ce <P_1+0x9>
     952:	a0 91 cf 03 	lds	r26, 0x03CF	; 0x8003cf <P_1+0xa>
     956:	b0 91 d0 03 	lds	r27, 0x03D0	; 0x8003d0 <P_1+0xb>
     95a:	8d 87       	std	Y+13, r24	; 0x0d
     95c:	9e 87       	std	Y+14, r25	; 0x0e
     95e:	af 87       	std	Y+15, r26	; 0x0f
     960:	b8 8b       	std	Y+16, r27	; 0x10
     962:	a3 01       	movw	r20, r6
     964:	92 01       	movw	r18, r4
     966:	6d 81       	ldd	r22, Y+5	; 0x05
     968:	7e 81       	ldd	r23, Y+6	; 0x06
     96a:	8f 81       	ldd	r24, Y+7	; 0x07
     96c:	98 85       	ldd	r25, Y+8	; 0x08
     96e:	2a d7       	rcall	.+3668   	; 0x17c4 <__subsf3>
     970:	2d 85       	ldd	r18, Y+13	; 0x0d
     972:	3e 85       	ldd	r19, Y+14	; 0x0e
     974:	4f 85       	ldd	r20, Y+15	; 0x0f
     976:	58 89       	ldd	r21, Y+16	; 0x10
     978:	25 d7       	rcall	.+3658   	; 0x17c4 <__subsf3>
     97a:	20 91 fd 03 	lds	r18, 0x03FD	; 0x8003fd <Q_angle_1>
     97e:	30 91 fe 03 	lds	r19, 0x03FE	; 0x8003fe <Q_angle_1+0x1>
     982:	40 91 ff 03 	lds	r20, 0x03FF	; 0x8003ff <Q_angle_1+0x2>
     986:	50 91 00 04 	lds	r21, 0x0400	; 0x800400 <Q_angle_1+0x3>
     98a:	1d d7       	rcall	.+3642   	; 0x17c6 <__addsf3>
     98c:	29 81       	ldd	r18, Y+1	; 0x01
     98e:	3a 81       	ldd	r19, Y+2	; 0x02
     990:	4b 81       	ldd	r20, Y+3	; 0x03
     992:	5c 81       	ldd	r21, Y+4	; 0x04
     994:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     998:	a5 ec       	ldi	r26, 0xC5	; 197
     99a:	b3 e0       	ldi	r27, 0x03	; 3
     99c:	2d 91       	ld	r18, X+
     99e:	3d 91       	ld	r19, X+
     9a0:	4d 91       	ld	r20, X+
     9a2:	5c 91       	ld	r21, X
     9a4:	10 d7       	rcall	.+3616   	; 0x17c6 <__addsf3>
     9a6:	69 87       	std	Y+9, r22	; 0x09
     9a8:	7a 87       	std	Y+10, r23	; 0x0a
     9aa:	8b 87       	std	Y+11, r24	; 0x0b
	P_1[0][1] -= dt * P_1[1][1];
     9ac:	9c 87       	std	Y+12, r25	; 0x0c
     9ae:	2d 81       	ldd	r18, Y+5	; 0x05
     9b0:	3e 81       	ldd	r19, Y+6	; 0x06
     9b2:	4f 81       	ldd	r20, Y+7	; 0x07
     9b4:	58 85       	ldd	r21, Y+8	; 0x08
     9b6:	c3 01       	movw	r24, r6
     9b8:	b2 01       	movw	r22, r4
     9ba:	04 d7       	rcall	.+3592   	; 0x17c4 <__subsf3>
     9bc:	2b 01       	movw	r4, r22
	P_1[1][0] -= dt * P_1[1][1];
     9be:	3c 01       	movw	r6, r24
     9c0:	2d 81       	ldd	r18, Y+5	; 0x05
     9c2:	3e 81       	ldd	r19, Y+6	; 0x06
     9c4:	4f 81       	ldd	r20, Y+7	; 0x07
     9c6:	58 85       	ldd	r21, Y+8	; 0x08
     9c8:	6d 85       	ldd	r22, Y+13	; 0x0d
     9ca:	7e 85       	ldd	r23, Y+14	; 0x0e
     9cc:	8f 85       	ldd	r24, Y+15	; 0x0f
     9ce:	98 89       	ldd	r25, Y+16	; 0x10
     9d0:	f9 d6       	rcall	.+3570   	; 0x17c4 <__subsf3>
     9d2:	6d 87       	std	Y+13, r22	; 0x0d
     9d4:	7e 87       	std	Y+14, r23	; 0x0e
     9d6:	8f 87       	std	Y+15, r24	; 0x0f
	P_1[1][1] += Q_bias_1 * dt;
     9d8:	98 8b       	std	Y+16, r25	; 0x10
     9da:	20 91 e9 03 	lds	r18, 0x03E9	; 0x8003e9 <Q_bias_1>
     9de:	30 91 ea 03 	lds	r19, 0x03EA	; 0x8003ea <Q_bias_1+0x1>
     9e2:	40 91 eb 03 	lds	r20, 0x03EB	; 0x8003eb <Q_bias_1+0x2>
     9e6:	50 91 ec 03 	lds	r21, 0x03EC	; 0x8003ec <Q_bias_1+0x3>
     9ea:	69 81       	ldd	r22, Y+1	; 0x01
     9ec:	7a 81       	ldd	r23, Y+2	; 0x02
     9ee:	8b 81       	ldd	r24, Y+3	; 0x03
     9f0:	9c 81       	ldd	r25, Y+4	; 0x04
     9f2:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     9f6:	a5 01       	movw	r20, r10
     9f8:	94 01       	movw	r18, r8
     9fa:	e5 d6       	rcall	.+3530   	; 0x17c6 <__addsf3>
     9fc:	69 8f       	std	Y+25, r22	; 0x19
     9fe:	7a 8f       	std	Y+26, r23	; 0x1a
     a00:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     a02:	9c 8f       	std	Y+28, r25	; 0x1c
     a04:	20 91 e5 03 	lds	r18, 0x03E5	; 0x8003e5 <R_measure_1>
     a08:	30 91 e6 03 	lds	r19, 0x03E6	; 0x8003e6 <R_measure_1+0x1>
     a0c:	40 91 e7 03 	lds	r20, 0x03E7	; 0x8003e7 <R_measure_1+0x2>
     a10:	50 91 e8 03 	lds	r21, 0x03E8	; 0x8003e8 <R_measure_1+0x3>
     a14:	69 85       	ldd	r22, Y+9	; 0x09
     a16:	7a 85       	ldd	r23, Y+10	; 0x0a
     a18:	8b 85       	ldd	r24, Y+11	; 0x0b
     a1a:	9c 85       	ldd	r25, Y+12	; 0x0c
     a1c:	d4 d6       	rcall	.+3496   	; 0x17c6 <__addsf3>
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     a1e:	4b 01       	movw	r8, r22
     a20:	5c 01       	movw	r10, r24
     a22:	9b 01       	movw	r18, r22
     a24:	ac 01       	movw	r20, r24
     a26:	69 85       	ldd	r22, Y+9	; 0x09
     a28:	7a 85       	ldd	r23, Y+10	; 0x0a
     a2a:	8b 85       	ldd	r24, Y+11	; 0x0b
     a2c:	9c 85       	ldd	r25, Y+12	; 0x0c
     a2e:	95 d7       	rcall	.+3882   	; 0x195a <__divsf3>
     a30:	69 83       	std	Y+1, r22	; 0x01
     a32:	7a 83       	std	Y+2, r23	; 0x02
	K_1[1] = P_1[1][0] / S_1;
     a34:	8b 83       	std	Y+3, r24	; 0x03
     a36:	9c 83       	std	Y+4, r25	; 0x04
     a38:	a5 01       	movw	r20, r10
     a3a:	94 01       	movw	r18, r8
     a3c:	6d 85       	ldd	r22, Y+13	; 0x0d
     a3e:	7e 85       	ldd	r23, Y+14	; 0x0e
     a40:	8f 85       	ldd	r24, Y+15	; 0x0f
     a42:	98 89       	ldd	r25, Y+16	; 0x10
     a44:	8a d7       	rcall	.+3860   	; 0x195a <__divsf3>
     a46:	6d 83       	std	Y+5, r22	; 0x05
     a48:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     a4a:	8f 83       	std	Y+7, r24	; 0x07
     a4c:	98 87       	std	Y+8, r25	; 0x08
     a4e:	2d 89       	ldd	r18, Y+21	; 0x15
     a50:	3e 89       	ldd	r19, Y+22	; 0x16
     a52:	4f 89       	ldd	r20, Y+23	; 0x17
     a54:	58 8d       	ldd	r21, Y+24	; 0x18
     a56:	69 89       	ldd	r22, Y+17	; 0x11
     a58:	7a 89       	ldd	r23, Y+18	; 0x12
     a5a:	8b 89       	ldd	r24, Y+19	; 0x13
     a5c:	9c 89       	ldd	r25, Y+20	; 0x14
     a5e:	b2 d6       	rcall	.+3428   	; 0x17c4 <__subsf3>
     a60:	69 8b       	std	Y+17, r22	; 0x11
     a62:	7a 8b       	std	Y+18, r23	; 0x12
     a64:	8b 8b       	std	Y+19, r24	; 0x13
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     a66:	9c 8b       	std	Y+20, r25	; 0x14
     a68:	9b 01       	movw	r18, r22
     a6a:	ac 01       	movw	r20, r24
     a6c:	69 81       	ldd	r22, Y+1	; 0x01
     a6e:	7a 81       	ldd	r23, Y+2	; 0x02
     a70:	8b 81       	ldd	r24, Y+3	; 0x03
     a72:	9c 81       	ldd	r25, Y+4	; 0x04
     a74:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     a78:	2d 89       	ldd	r18, Y+21	; 0x15
     a7a:	3e 89       	ldd	r19, Y+22	; 0x16
     a7c:	4f 89       	ldd	r20, Y+23	; 0x17
     a7e:	58 8d       	ldd	r21, Y+24	; 0x18
     a80:	a2 d6       	rcall	.+3396   	; 0x17c6 <__addsf3>
     a82:	4b 01       	movw	r8, r22
     a84:	5c 01       	movw	r10, r24
     a86:	60 93 c1 03 	sts	0x03C1, r22	; 0x8003c1 <angle_1>
     a8a:	70 93 c2 03 	sts	0x03C2, r23	; 0x8003c2 <angle_1+0x1>
     a8e:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <angle_1+0x2>
	bias_1 += K_1[1] * y_1;
     a92:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <angle_1+0x3>
     a96:	29 89       	ldd	r18, Y+17	; 0x11
     a98:	3a 89       	ldd	r19, Y+18	; 0x12
     a9a:	4b 89       	ldd	r20, Y+19	; 0x13
     a9c:	5c 89       	ldd	r21, Y+20	; 0x14
     a9e:	6d 81       	ldd	r22, Y+5	; 0x05
     aa0:	7e 81       	ldd	r23, Y+6	; 0x06
     aa2:	8f 81       	ldd	r24, Y+7	; 0x07
     aa4:	98 85       	ldd	r25, Y+8	; 0x08
     aa6:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     aaa:	a7 01       	movw	r20, r14
     aac:	96 01       	movw	r18, r12
     aae:	8b d6       	rcall	.+3350   	; 0x17c6 <__addsf3>
     ab0:	60 93 dd 03 	sts	0x03DD, r22	; 0x8003dd <bias_1>
     ab4:	70 93 de 03 	sts	0x03DE, r23	; 0x8003de <bias_1+0x1>
     ab8:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <bias_1+0x2>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     abc:	90 93 e0 03 	sts	0x03E0, r25	; 0x8003e0 <bias_1+0x3>
     ac0:	29 81       	ldd	r18, Y+1	; 0x01
     ac2:	3a 81       	ldd	r19, Y+2	; 0x02
     ac4:	4b 81       	ldd	r20, Y+3	; 0x03
     ac6:	5c 81       	ldd	r21, Y+4	; 0x04
     ac8:	69 85       	ldd	r22, Y+9	; 0x09
     aca:	7a 85       	ldd	r23, Y+10	; 0x0a
     acc:	8b 85       	ldd	r24, Y+11	; 0x0b
     ace:	9c 85       	ldd	r25, Y+12	; 0x0c
     ad0:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     ad4:	9b 01       	movw	r18, r22
     ad6:	ac 01       	movw	r20, r24
     ad8:	69 85       	ldd	r22, Y+9	; 0x09
     ada:	7a 85       	ldd	r23, Y+10	; 0x0a
     adc:	8b 85       	ldd	r24, Y+11	; 0x0b
     ade:	9c 85       	ldd	r25, Y+12	; 0x0c
     ae0:	71 d6       	rcall	.+3298   	; 0x17c4 <__subsf3>
     ae2:	e5 ec       	ldi	r30, 0xC5	; 197
     ae4:	f3 e0       	ldi	r31, 0x03	; 3
     ae6:	60 83       	st	Z, r22
	P_1[0][1] -= K_1[0] * P01_temp_1;
     ae8:	71 83       	std	Z+1, r23	; 0x01
     aea:	82 83       	std	Z+2, r24	; 0x02
     aec:	93 83       	std	Z+3, r25	; 0x03
     aee:	29 81       	ldd	r18, Y+1	; 0x01
     af0:	3a 81       	ldd	r19, Y+2	; 0x02
     af2:	4b 81       	ldd	r20, Y+3	; 0x03
     af4:	5c 81       	ldd	r21, Y+4	; 0x04
     af6:	c3 01       	movw	r24, r6
     af8:	b2 01       	movw	r22, r4
     afa:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     afe:	9b 01       	movw	r18, r22
     b00:	ac 01       	movw	r20, r24
     b02:	c3 01       	movw	r24, r6
     b04:	b2 01       	movw	r22, r4
     b06:	5e d6       	rcall	.+3260   	; 0x17c4 <__subsf3>
     b08:	60 93 c9 03 	sts	0x03C9, r22	; 0x8003c9 <P_1+0x4>
     b0c:	70 93 ca 03 	sts	0x03CA, r23	; 0x8003ca <P_1+0x5>
     b10:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <P_1+0x6>
	P_1[1][0] -= K_1[1] * P00_temp_1;
     b14:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <P_1+0x7>
     b18:	2d 81       	ldd	r18, Y+5	; 0x05
     b1a:	3e 81       	ldd	r19, Y+6	; 0x06
     b1c:	4f 81       	ldd	r20, Y+7	; 0x07
     b1e:	58 85       	ldd	r21, Y+8	; 0x08
     b20:	69 85       	ldd	r22, Y+9	; 0x09
     b22:	7a 85       	ldd	r23, Y+10	; 0x0a
     b24:	8b 85       	ldd	r24, Y+11	; 0x0b
     b26:	9c 85       	ldd	r25, Y+12	; 0x0c
     b28:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     b2c:	9b 01       	movw	r18, r22
     b2e:	ac 01       	movw	r20, r24
     b30:	6d 85       	ldd	r22, Y+13	; 0x0d
     b32:	7e 85       	ldd	r23, Y+14	; 0x0e
     b34:	8f 85       	ldd	r24, Y+15	; 0x0f
     b36:	98 89       	ldd	r25, Y+16	; 0x10
     b38:	45 d6       	rcall	.+3210   	; 0x17c4 <__subsf3>
     b3a:	60 93 cd 03 	sts	0x03CD, r22	; 0x8003cd <P_1+0x8>
     b3e:	70 93 ce 03 	sts	0x03CE, r23	; 0x8003ce <P_1+0x9>
     b42:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <P_1+0xa>
	P_1[1][1] -= K_1[1] * P01_temp_1;
     b46:	90 93 d0 03 	sts	0x03D0, r25	; 0x8003d0 <P_1+0xb>
     b4a:	2d 81       	ldd	r18, Y+5	; 0x05
     b4c:	3e 81       	ldd	r19, Y+6	; 0x06
     b4e:	4f 81       	ldd	r20, Y+7	; 0x07
     b50:	58 85       	ldd	r21, Y+8	; 0x08
     b52:	c3 01       	movw	r24, r6
     b54:	b2 01       	movw	r22, r4
     b56:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <__mulsf3>
     b5a:	9b 01       	movw	r18, r22
     b5c:	ac 01       	movw	r20, r24
     b5e:	69 8d       	ldd	r22, Y+25	; 0x19
     b60:	7a 8d       	ldd	r23, Y+26	; 0x1a
     b62:	8b 8d       	ldd	r24, Y+27	; 0x1b
     b64:	9c 8d       	ldd	r25, Y+28	; 0x1c
     b66:	2e d6       	rcall	.+3164   	; 0x17c4 <__subsf3>
     b68:	60 93 d1 03 	sts	0x03D1, r22	; 0x8003d1 <P_1+0xc>
     b6c:	70 93 d2 03 	sts	0x03D2, r23	; 0x8003d2 <P_1+0xd>
     b70:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <P_1+0xe>

	return angle_1;
};
     b74:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <P_1+0xf>
     b78:	c5 01       	movw	r24, r10
     b7a:	b4 01       	movw	r22, r8
     b7c:	6c 96       	adiw	r28, 0x1c	; 28
     b7e:	0f b6       	in	r0, 0x3f	; 63
     b80:	f8 94       	cli
     b82:	de bf       	out	0x3e, r29	; 62
     b84:	0f be       	out	0x3f, r0	; 63
     b86:	cd bf       	out	0x3d, r28	; 61
     b88:	df 91       	pop	r29
     b8a:	cf 91       	pop	r28
     b8c:	1f 91       	pop	r17
     b8e:	0f 91       	pop	r16
     b90:	ff 90       	pop	r15
     b92:	ef 90       	pop	r14
     b94:	df 90       	pop	r13
     b96:	cf 90       	pop	r12
     b98:	bf 90       	pop	r11
     b9a:	af 90       	pop	r10
     b9c:	9f 90       	pop	r9
     b9e:	8f 90       	pop	r8
     ba0:	7f 90       	pop	r7
     ba2:	6f 90       	pop	r6
     ba4:	5f 90       	pop	r5
     ba6:	4f 90       	pop	r4
     ba8:	08 95       	ret

00000baa <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     baa:	8f e6       	ldi	r24, 0x6F	; 111
     bac:	92 e1       	ldi	r25, 0x12	; 18
     bae:	a3 e8       	ldi	r26, 0x83	; 131
     bb0:	ba e3       	ldi	r27, 0x3A	; 58
     bb2:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <Q_angle_1>
     bb6:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <Q_angle_1+0x1>
     bba:	a0 93 ff 03 	sts	0x03FF, r26	; 0x8003ff <Q_angle_1+0x2>
     bbe:	b0 93 00 04 	sts	0x0400, r27	; 0x800400 <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     bc2:	86 ea       	ldi	r24, 0xA6	; 166
     bc4:	9b e9       	ldi	r25, 0x9B	; 155
     bc6:	a4 e4       	ldi	r26, 0x44	; 68
     bc8:	bb e3       	ldi	r27, 0x3B	; 59
     bca:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <Q_bias_1>
     bce:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <Q_bias_1+0x1>
     bd2:	a0 93 eb 03 	sts	0x03EB, r26	; 0x8003eb <Q_bias_1+0x2>
     bd6:	b0 93 ec 03 	sts	0x03EC, r27	; 0x8003ec <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     bda:	8f e8       	ldi	r24, 0x8F	; 143
     bdc:	92 ec       	ldi	r25, 0xC2	; 194
     bde:	a5 ef       	ldi	r26, 0xF5	; 245
     be0:	bc e3       	ldi	r27, 0x3C	; 60
     be2:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <R_measure_1>
     be6:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <R_measure_1+0x1>
     bea:	a0 93 e7 03 	sts	0x03E7, r26	; 0x8003e7 <R_measure_1+0x2>
     bee:	b0 93 e8 03 	sts	0x03E8, r27	; 0x8003e8 <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     bf2:	10 92 c1 03 	sts	0x03C1, r1	; 0x8003c1 <angle_1>
     bf6:	10 92 c2 03 	sts	0x03C2, r1	; 0x8003c2 <angle_1+0x1>
     bfa:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <angle_1+0x2>
     bfe:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     c02:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <bias_1>
     c06:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <bias_1+0x1>
     c0a:	10 92 df 03 	sts	0x03DF, r1	; 0x8003df <bias_1+0x2>
     c0e:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     c12:	e5 ec       	ldi	r30, 0xC5	; 197
     c14:	f3 e0       	ldi	r31, 0x03	; 3
     c16:	10 82       	st	Z, r1
     c18:	11 82       	std	Z+1, r1	; 0x01
     c1a:	12 82       	std	Z+2, r1	; 0x02
     c1c:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     c1e:	14 82       	std	Z+4, r1	; 0x04
     c20:	15 82       	std	Z+5, r1	; 0x05
     c22:	16 82       	std	Z+6, r1	; 0x06
     c24:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     c26:	10 86       	std	Z+8, r1	; 0x08
     c28:	11 86       	std	Z+9, r1	; 0x09
     c2a:	12 86       	std	Z+10, r1	; 0x0a
     c2c:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     c2e:	14 86       	std	Z+12, r1	; 0x0c
     c30:	15 86       	std	Z+13, r1	; 0x0d
     c32:	16 86       	std	Z+14, r1	; 0x0e
     c34:	17 86       	std	Z+15, r1	; 0x0f
     c36:	08 95       	ret

00000c38 <main>:
uint8_t buffer[14];
bool loop_bool=true;
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd);
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     c38:	cf 93       	push	r28
     c3a:	df 93       	push	r29
     c3c:	cd b7       	in	r28, 0x3d	; 61
     c3e:	de b7       	in	r29, 0x3e	; 62
     c40:	a8 97       	sbiw	r28, 0x28	; 40
     c42:	0f b6       	in	r0, 0x3f	; 63
     c44:	f8 94       	cli
     c46:	de bf       	out	0x3e, r29	; 62
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	cd bf       	out	0x3d, r28	; 61
	U_step=U_step_predefine;
     c4c:	10 92 9d 03 	sts	0x039D, r1	; 0x80039d <U_step+0x1>
     c50:	10 92 9c 03 	sts	0x039C, r1	; 0x80039c <U_step>
	V_step=V_step_predefine;
     c54:	28 e7       	ldi	r18, 0x78	; 120
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     c5c:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step_predefine;
     c60:	80 ef       	ldi	r24, 0xF0	; 240
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     c68:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	U_step_2=U_step_predefine;
     c6c:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <__data_end+0x1>
     c70:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <__data_end>
	V_step_2=V_step_predefine;
     c74:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     c78:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_predefine;
     c7c:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     c80:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	incr=-1;
     c84:	8f ef       	ldi	r24, 0xFF	; 255
     c86:	9f ef       	ldi	r25, 0xFF	; 255
     c88:	90 93 b0 03 	sts	0x03B0, r25	; 0x8003b0 <incr+0x1>
     c8c:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <incr>
	incr_2=-1;
     c90:	90 93 ae 03 	sts	0x03AE, r25	; 0x8003ae <incr_2+0x1>
     c94:	80 93 ad 03 	sts	0x03AD, r24	; 0x8003ad <incr_2>
	pwm_delay=32000;
     c98:	80 e0       	ldi	r24, 0x00	; 0
     c9a:	9d e7       	ldi	r25, 0x7D	; 125
     c9c:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <pwm_delay+0x1>
     ca0:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <pwm_delay>
	pwm_delay_2=32000;
     ca4:	90 93 a8 03 	sts	0x03A8, r25	; 0x8003a8 <pwm_delay_2+0x1>
     ca8:	80 93 a7 03 	sts	0x03A7, r24	; 0x8003a7 <pwm_delay_2>
	cli();
	init_gpio();
     cac:	f8 94       	cli
     cae:	d3 da       	rcall	.-2650   	; 0x256 <init_gpio>
     cb0:	d7 db       	rcall	.-2130   	; 0x460 <init_motor_gpio>
     cb2:	1b d4       	rcall	.+2102   	; 0x14ea <i2c_init>
     cb4:	8c e0       	ldi	r24, 0x0C	; 12
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	c9 d4       	rcall	.+2450   	; 0x164c <USART_Init>
     cba:	60 e0       	ldi	r22, 0x00	; 0
     cbc:	70 e0       	ldi	r23, 0x00	; 0
     cbe:	88 e5       	ldi	r24, 0x58	; 88
     cc0:	9b e0       	ldi	r25, 0x0B	; 11
     cc2:	0e 94 a2 13 	call	0x2744	; 0x2744 <fdevopen>
     cc6:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <uart_str+0x1>
     cca:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <uart_str>
     cce:	40 d3       	rcall	.+1664   	; 0x1350 <setup_timer0>
     cd0:	46 d3       	rcall	.+1676   	; 0x135e <Enable_timer0_overflow_interrupt>
     cd2:	f8 d2       	rcall	.+1520   	; 0x12c4 <setup_timer4>
     cd4:	0b d3       	rcall	.+1558   	; 0x12ec <setup_timer3>
     cd6:	1e d3       	rcall	.+1596   	; 0x1314 <setup_timer5>
     cd8:	26 d3       	rcall	.+1612   	; 0x1326 <Enable_timer5_compare_interrupt>
     cda:	2b d3       	rcall	.+1622   	; 0x1332 <setup_timer1>
     cdc:	33 d3       	rcall	.+1638   	; 0x1344 <Enable_timer1_compare_interrupt>
     cde:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <pwm_delay>
     ce2:	90 91 aa 03 	lds	r25, 0x03AA	; 0x8003aa <pwm_delay+0x1>
     ce6:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     cea:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     cee:	80 91 a7 03 	lds	r24, 0x03A7	; 0x8003a7 <pwm_delay_2>
     cf2:	90 91 a8 03 	lds	r25, 0x03A8	; 0x8003a8 <pwm_delay_2+0x1>
     cf6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     cfa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     cfe:	35 d3       	rcall	.+1642   	; 0x136a <micros>
     d00:	6d 8b       	std	Y+21, r22	; 0x15
     d02:	7e 8b       	std	Y+22, r23	; 0x16
     d04:	8f 8b       	std	Y+23, r24	; 0x17
     d06:	98 8f       	std	Y+24, r25	; 0x18
     d08:	67 e0       	ldi	r22, 0x07	; 7
     d0a:	89 e1       	ldi	r24, 0x19	; 25
     d0c:	1a d2       	rcall	.+1076   	; 0x1142 <mpu6050_writeByte>
     d0e:	60 e0       	ldi	r22, 0x00	; 0
     d10:	8a e1       	ldi	r24, 0x1A	; 26
     d12:	17 d2       	rcall	.+1070   	; 0x1142 <mpu6050_writeByte>
     d14:	68 e0       	ldi	r22, 0x08	; 8
     d16:	8b e1       	ldi	r24, 0x1B	; 27
     d18:	14 d2       	rcall	.+1064   	; 0x1142 <mpu6050_writeByte>
     d1a:	60 e1       	ldi	r22, 0x10	; 16
     d1c:	8c e1       	ldi	r24, 0x1C	; 28
     d1e:	11 d2       	rcall	.+1058   	; 0x1142 <mpu6050_writeByte>
     d20:	61 e0       	ldi	r22, 0x01	; 1
     d22:	8b e6       	ldi	r24, 0x6B	; 107
     d24:	0e d2       	rcall	.+1052   	; 0x1142 <mpu6050_writeByte>
     d26:	66 dd       	rcall	.-1332   	; 0x7f4 <Kalman_init>
     d28:	40 df       	rcall	.-384    	; 0xbaa <Kalman_init_1>
     d2a:	2f ef       	ldi	r18, 0xFF	; 255
     d2c:	31 ee       	ldi	r19, 0xE1	; 225
     d2e:	44 e0       	ldi	r20, 0x04	; 4
     d30:	21 50       	subi	r18, 0x01	; 1
     d32:	30 40       	sbci	r19, 0x00	; 0
     d34:	40 40       	sbci	r20, 0x00	; 0
     d36:	e1 f7       	brne	.-8      	; 0xd30 <main+0xf8>
     d38:	00 c0       	rjmp	.+0      	; 0xd3a <main+0x102>
     d3a:	00 00       	nop
     d3c:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <angle>
     d40:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <angle+0x1>
     d44:	10 92 e3 03 	sts	0x03E3, r1	; 0x8003e3 <angle+0x2>
     d48:	10 92 e4 03 	sts	0x03E4, r1	; 0x8003e4 <angle+0x3>
     d4c:	10 92 c1 03 	sts	0x03C1, r1	; 0x8003c1 <angle_1>
     d50:	10 92 c2 03 	sts	0x03C2, r1	; 0x8003c2 <angle_1+0x1>
     d54:	10 92 c3 03 	sts	0x03C3, r1	; 0x8003c3 <angle_1+0x2>
     d58:	10 92 c4 03 	sts	0x03C4, r1	; 0x8003c4 <angle_1+0x3>
     d5c:	78 94       	sei
     d5e:	19 8a       	std	Y+17, r1	; 0x11
     d60:	1a 8a       	std	Y+18, r1	; 0x12
     d62:	1b 8a       	std	Y+19, r1	; 0x13
     d64:	1c 8a       	std	Y+20, r1	; 0x14
     d66:	0f 2e       	mov	r0, r31
     d68:	ff ed       	ldi	r31, 0xDF	; 223
     d6a:	2f 2e       	mov	r2, r31
     d6c:	ff e7       	ldi	r31, 0x7F	; 127
     d6e:	3f 2e       	mov	r3, r31
     d70:	f0 2d       	mov	r31, r0
     d72:	04 c0       	rjmp	.+8      	; 0xd7c <main+0x144>
     d74:	4d a2       	std	Y+37, r4	; 0x25
     d76:	5e a2       	std	Y+38, r5	; 0x26
     d78:	6f a2       	std	Y+39, r6	; 0x27
     d7a:	78 a6       	std	Y+40, r7	; 0x28
     d7c:	ce 01       	movw	r24, r28
     d7e:	05 96       	adiw	r24, 0x05	; 5
     d80:	7c 01       	movw	r14, r24
     d82:	8e 01       	movw	r16, r28
     d84:	0d 5f       	subi	r16, 0xFD	; 253
     d86:	1f 4f       	sbci	r17, 0xFF	; 255
     d88:	9e 01       	movw	r18, r28
     d8a:	2f 5f       	subi	r18, 0xFF	; 255
     d8c:	3f 4f       	sbci	r19, 0xFF	; 255
     d8e:	ae 01       	movw	r20, r28
     d90:	45 5f       	subi	r20, 0xF5	; 245
     d92:	5f 4f       	sbci	r21, 0xFF	; 255
     d94:	be 01       	movw	r22, r28
     d96:	67 5f       	subi	r22, 0xF7	; 247
     d98:	7f 4f       	sbci	r23, 0xFF	; 255
     d9a:	02 96       	adiw	r24, 0x02	; 2
     d9c:	28 d2       	rcall	.+1104   	; 0x11ee <mpu6050_getRawData>
     d9e:	89 81       	ldd	r24, Y+1	; 0x01
     da0:	9a 81       	ldd	r25, Y+2	; 0x02
     da2:	84 59       	subi	r24, 0x94	; 148
     da4:	9f 4f       	sbci	r25, 0xFF	; 255
     da6:	9a 83       	std	Y+2, r25	; 0x02
     da8:	89 83       	std	Y+1, r24	; 0x01
     daa:	8b 81       	ldd	r24, Y+3	; 0x03
     dac:	9c 81       	ldd	r25, Y+4	; 0x04
     dae:	80 52       	subi	r24, 0x20	; 32
     db0:	9f 4f       	sbci	r25, 0xFF	; 255
     db2:	9c 83       	std	Y+4, r25	; 0x04
     db4:	8b 83       	std	Y+3, r24	; 0x03
     db6:	8d 81       	ldd	r24, Y+5	; 0x05
     db8:	9e 81       	ldd	r25, Y+6	; 0x06
     dba:	8f 58       	subi	r24, 0x8F	; 143
     dbc:	9d 4f       	sbci	r25, 0xFD	; 253
     dbe:	9e 83       	std	Y+6, r25	; 0x06
     dc0:	8d 83       	std	Y+5, r24	; 0x05
     dc2:	d3 d2       	rcall	.+1446   	; 0x136a <micros>
     dc4:	2d 89       	ldd	r18, Y+21	; 0x15
     dc6:	3e 89       	ldd	r19, Y+22	; 0x16
     dc8:	4f 89       	ldd	r20, Y+23	; 0x17
     dca:	58 8d       	ldd	r21, Y+24	; 0x18
     dcc:	62 1b       	sub	r22, r18
     dce:	73 0b       	sbc	r23, r19
     dd0:	84 0b       	sbc	r24, r20
     dd2:	95 0b       	sbc	r25, r21
     dd4:	5b d6       	rcall	.+3254   	; 0x1a8c <__floatunsisf>
     dd6:	20 e0       	ldi	r18, 0x00	; 0
     dd8:	34 e2       	ldi	r19, 0x24	; 36
     dda:	44 e7       	ldi	r20, 0x74	; 116
     ddc:	59 e4       	ldi	r21, 0x49	; 73
     dde:	bd d5       	rcall	.+2938   	; 0x195a <__divsf3>
     de0:	6d 87       	std	Y+13, r22	; 0x0d
     de2:	7e 87       	std	Y+14, r23	; 0x0e
     de4:	8f 87       	std	Y+15, r24	; 0x0f
     de6:	98 8b       	std	Y+16, r25	; 0x10
     de8:	c0 d2       	rcall	.+1408   	; 0x136a <micros>
     dea:	6d 8b       	std	Y+21, r22	; 0x15
     dec:	7e 8b       	std	Y+22, r23	; 0x16
     dee:	8f 8b       	std	Y+23, r24	; 0x17
     df0:	98 8f       	std	Y+24, r25	; 0x18
     df2:	69 81       	ldd	r22, Y+1	; 0x01
     df4:	7a 81       	ldd	r23, Y+2	; 0x02
     df6:	07 2e       	mov	r0, r23
     df8:	00 0c       	add	r0, r0
     dfa:	88 0b       	sbc	r24, r24
     dfc:	99 0b       	sbc	r25, r25
     dfe:	48 d6       	rcall	.+3216   	; 0x1a90 <__floatsisf>
     e00:	20 e0       	ldi	r18, 0x00	; 0
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	43 e8       	ldi	r20, 0x83	; 131
     e06:	52 e4       	ldi	r21, 0x42	; 66
     e08:	a8 d5       	rcall	.+2896   	; 0x195a <__divsf3>
     e0a:	69 8f       	std	Y+25, r22	; 0x19
     e0c:	7a 8f       	std	Y+26, r23	; 0x1a
     e0e:	8b 8f       	std	Y+27, r24	; 0x1b
     e10:	9c 8f       	std	Y+28, r25	; 0x1c
     e12:	6b 81       	ldd	r22, Y+3	; 0x03
     e14:	7c 81       	ldd	r23, Y+4	; 0x04
     e16:	07 2e       	mov	r0, r23
     e18:	00 0c       	add	r0, r0
     e1a:	88 0b       	sbc	r24, r24
     e1c:	99 0b       	sbc	r25, r25
     e1e:	38 d6       	rcall	.+3184   	; 0x1a90 <__floatsisf>
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	43 e8       	ldi	r20, 0x83	; 131
     e26:	52 e4       	ldi	r21, 0x42	; 66
     e28:	98 d5       	rcall	.+2864   	; 0x195a <__divsf3>
     e2a:	6d 8f       	std	Y+29, r22	; 0x1d
     e2c:	7e 8f       	std	Y+30, r23	; 0x1e
     e2e:	8f 8f       	std	Y+31, r24	; 0x1f
     e30:	98 a3       	std	Y+32, r25	; 0x20
     e32:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <loop_bool>
     e36:	90 91 78 03 	lds	r25, 0x0378	; 0x800378 <loop_bool+0x1>
     e3a:	89 2b       	or	r24, r25
     e3c:	21 f0       	breq	.+8      	; 0xe46 <main+0x20e>
     e3e:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <loop_bool+0x1>
     e42:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <loop_bool>
     e46:	6b 84       	ldd	r6, Y+11	; 0x0b
     e48:	7c 84       	ldd	r7, Y+12	; 0x0c
     e4a:	09 85       	ldd	r16, Y+9	; 0x09
     e4c:	1a 85       	ldd	r17, Y+10	; 0x0a
     e4e:	b3 01       	movw	r22, r6
     e50:	07 2c       	mov	r0, r7
     e52:	00 0c       	add	r0, r0
     e54:	88 0b       	sbc	r24, r24
     e56:	99 0b       	sbc	r25, r25
     e58:	1b d6       	rcall	.+3126   	; 0x1a90 <__floatsisf>
     e5a:	6b 01       	movw	r12, r22
     e5c:	7c 01       	movw	r14, r24
     e5e:	b8 01       	movw	r22, r16
     e60:	01 2e       	mov	r0, r17
     e62:	00 0c       	add	r0, r0
     e64:	88 0b       	sbc	r24, r24
     e66:	99 0b       	sbc	r25, r25
     e68:	13 d6       	rcall	.+3110   	; 0x1a90 <__floatsisf>
     e6a:	a7 01       	movw	r20, r14
     e6c:	96 01       	movw	r18, r12
     e6e:	1e d5       	rcall	.+2620   	; 0x18ac <atan2>
     e70:	69 a3       	std	Y+33, r22	; 0x21
     e72:	7a a3       	std	Y+34, r23	; 0x22
     e74:	8b a3       	std	Y+35, r24	; 0x23
     e76:	9c a3       	std	Y+36, r25	; 0x24
     e78:	c8 01       	movw	r24, r16
     e7a:	64 e6       	ldi	r22, 0x64	; 100
     e7c:	70 e0       	ldi	r23, 0x00	; 0
     e7e:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <__divmodhi4>
     e82:	07 2e       	mov	r0, r23
     e84:	00 0c       	add	r0, r0
     e86:	88 0b       	sbc	r24, r24
     e88:	99 0b       	sbc	r25, r25
     e8a:	02 d6       	rcall	.+3076   	; 0x1a90 <__floatsisf>
     e8c:	4b 01       	movw	r8, r22
     e8e:	5c 01       	movw	r10, r24
     e90:	c3 01       	movw	r24, r6
     e92:	64 e6       	ldi	r22, 0x64	; 100
     e94:	70 e0       	ldi	r23, 0x00	; 0
     e96:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <__divmodhi4>
     e9a:	07 2e       	mov	r0, r23
     e9c:	00 0c       	add	r0, r0
     e9e:	88 0b       	sbc	r24, r24
     ea0:	99 0b       	sbc	r25, r25
     ea2:	f6 d5       	rcall	.+3052   	; 0x1a90 <__floatsisf>
     ea4:	6b 01       	movw	r12, r22
     ea6:	7c 01       	movw	r14, r24
     ea8:	a5 01       	movw	r20, r10
     eaa:	94 01       	movw	r18, r8
     eac:	c5 01       	movw	r24, r10
     eae:	b4 01       	movw	r22, r8
     eb0:	cb d6       	rcall	.+3478   	; 0x1c48 <__mulsf3>
     eb2:	4b 01       	movw	r8, r22
     eb4:	5c 01       	movw	r10, r24
     eb6:	a7 01       	movw	r20, r14
     eb8:	96 01       	movw	r18, r12
     eba:	c7 01       	movw	r24, r14
     ebc:	b6 01       	movw	r22, r12
     ebe:	c4 d6       	rcall	.+3464   	; 0x1c48 <__mulsf3>
     ec0:	9b 01       	movw	r18, r22
     ec2:	ac 01       	movw	r20, r24
     ec4:	c5 01       	movw	r24, r10
     ec6:	b4 01       	movw	r22, r8
     ec8:	7e d4       	rcall	.+2300   	; 0x17c6 <__addsf3>
     eca:	25 d7       	rcall	.+3658   	; 0x1d16 <sqrt>
     ecc:	20 e0       	ldi	r18, 0x00	; 0
     ece:	30 e0       	ldi	r19, 0x00	; 0
     ed0:	48 ec       	ldi	r20, 0xC8	; 200
     ed2:	52 e4       	ldi	r21, 0x42	; 66
     ed4:	b9 d6       	rcall	.+3442   	; 0x1c48 <__mulsf3>
     ed6:	6b 01       	movw	r12, r22
     ed8:	7c 01       	movw	r14, r24
     eda:	6f 81       	ldd	r22, Y+7	; 0x07
     edc:	78 85       	ldd	r23, Y+8	; 0x08
     ede:	07 2e       	mov	r0, r23
     ee0:	00 0c       	add	r0, r0
     ee2:	88 0b       	sbc	r24, r24
     ee4:	99 0b       	sbc	r25, r25
     ee6:	d4 d5       	rcall	.+2984   	; 0x1a90 <__floatsisf>
     ee8:	a7 01       	movw	r20, r14
     eea:	96 01       	movw	r18, r12
     eec:	df d4       	rcall	.+2494   	; 0x18ac <atan2>
     eee:	4b 01       	movw	r8, r22
     ef0:	5c 01       	movw	r10, r24
     ef2:	21 ee       	ldi	r18, 0xE1	; 225
     ef4:	3e e2       	ldi	r19, 0x2E	; 46
     ef6:	45 e6       	ldi	r20, 0x65	; 101
     ef8:	52 e4       	ldi	r21, 0x42	; 66
     efa:	69 a1       	ldd	r22, Y+33	; 0x21
     efc:	7a a1       	ldd	r23, Y+34	; 0x22
     efe:	8b a1       	ldd	r24, Y+35	; 0x23
     f00:	9c a1       	ldd	r25, Y+36	; 0x24
     f02:	a2 d6       	rcall	.+3396   	; 0x1c48 <__mulsf3>
     f04:	ed 84       	ldd	r14, Y+13	; 0x0d
     f06:	fe 84       	ldd	r15, Y+14	; 0x0e
     f08:	0f 85       	ldd	r16, Y+15	; 0x0f
     f0a:	18 89       	ldd	r17, Y+16	; 0x10
     f0c:	29 8d       	ldd	r18, Y+25	; 0x19
     f0e:	3a 8d       	ldd	r19, Y+26	; 0x1a
     f10:	4b 8d       	ldd	r20, Y+27	; 0x1b
     f12:	5c 8d       	ldd	r21, Y+28	; 0x1c
     f14:	c8 da       	rcall	.-2672   	; 0x4a6 <getAngle>
     f16:	46 2e       	mov	r4, r22
     f18:	57 2e       	mov	r5, r23
     f1a:	68 2e       	mov	r6, r24
     f1c:	79 2e       	mov	r7, r25
     f1e:	21 ee       	ldi	r18, 0xE1	; 225
     f20:	3e e2       	ldi	r19, 0x2E	; 46
     f22:	45 e6       	ldi	r20, 0x65	; 101
     f24:	52 e4       	ldi	r21, 0x42	; 66
     f26:	c5 01       	movw	r24, r10
     f28:	b4 01       	movw	r22, r8
     f2a:	8e d6       	rcall	.+3356   	; 0x1c48 <__mulsf3>
     f2c:	ed 84       	ldd	r14, Y+13	; 0x0d
     f2e:	fe 84       	ldd	r15, Y+14	; 0x0e
     f30:	0f 85       	ldd	r16, Y+15	; 0x0f
     f32:	18 89       	ldd	r17, Y+16	; 0x10
     f34:	2d 8d       	ldd	r18, Y+29	; 0x1d
     f36:	3e 8d       	ldd	r19, Y+30	; 0x1e
     f38:	4f 8d       	ldd	r20, Y+31	; 0x1f
     f3a:	58 a1       	ldd	r21, Y+32	; 0x20
     f3c:	a2 dc       	rcall	.-1724   	; 0x882 <getAngle_1>
     f3e:	6b 01       	movw	r12, r22
     f40:	7c 01       	movw	r14, r24
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	a9 01       	movw	r20, r18
     f48:	64 2d       	mov	r22, r4
     f4a:	75 2d       	mov	r23, r5
     f4c:	86 2d       	mov	r24, r6
     f4e:	97 2d       	mov	r25, r7
     f50:	7b d6       	rcall	.+3318   	; 0x1c48 <__mulsf3>
     f52:	9b 01       	movw	r18, r22
     f54:	ac 01       	movw	r20, r24
     f56:	69 89       	ldd	r22, Y+17	; 0x11
     f58:	7a 89       	ldd	r23, Y+18	; 0x12
     f5a:	8b 89       	ldd	r24, Y+19	; 0x13
     f5c:	9c 89       	ldd	r25, Y+20	; 0x14
     f5e:	33 d4       	rcall	.+2150   	; 0x17c6 <__addsf3>
     f60:	69 8b       	std	Y+17, r22	; 0x11
     f62:	7a 8b       	std	Y+18, r23	; 0x12
     f64:	8b 8b       	std	Y+19, r24	; 0x13
     f66:	9c 8b       	std	Y+20, r25	; 0x14
     f68:	2d a1       	ldd	r18, Y+37	; 0x25
     f6a:	3e a1       	ldd	r19, Y+38	; 0x26
     f6c:	4f a1       	ldd	r20, Y+39	; 0x27
     f6e:	58 a5       	ldd	r21, Y+40	; 0x28
     f70:	64 2d       	mov	r22, r4
     f72:	75 2d       	mov	r23, r5
     f74:	86 2d       	mov	r24, r6
     f76:	97 2d       	mov	r25, r7
     f78:	25 d4       	rcall	.+2122   	; 0x17c4 <__subsf3>
     f7a:	2d 85       	ldd	r18, Y+13	; 0x0d
     f7c:	3e 85       	ldd	r19, Y+14	; 0x0e
     f7e:	4f 85       	ldd	r20, Y+15	; 0x0f
     f80:	58 89       	ldd	r21, Y+16	; 0x10
     f82:	eb d4       	rcall	.+2518   	; 0x195a <__divsf3>
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	40 e2       	ldi	r20, 0x20	; 32
     f8a:	51 e4       	ldi	r21, 0x41	; 65
     f8c:	5d d6       	rcall	.+3258   	; 0x1c48 <__mulsf3>
     f8e:	4b 01       	movw	r8, r22
     f90:	5c 01       	movw	r10, r24
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	4a ef       	ldi	r20, 0xFA	; 250
     f98:	53 e4       	ldi	r21, 0x43	; 67
     f9a:	64 2d       	mov	r22, r4
     f9c:	75 2d       	mov	r23, r5
     f9e:	86 2d       	mov	r24, r6
     fa0:	97 2d       	mov	r25, r7
     fa2:	52 d6       	rcall	.+3236   	; 0x1c48 <__mulsf3>
     fa4:	29 89       	ldd	r18, Y+17	; 0x11
     fa6:	3a 89       	ldd	r19, Y+18	; 0x12
     fa8:	4b 89       	ldd	r20, Y+19	; 0x13
     faa:	5c 89       	ldd	r21, Y+20	; 0x14
     fac:	0c d4       	rcall	.+2072   	; 0x17c6 <__addsf3>
     fae:	9b 01       	movw	r18, r22
     fb0:	ac 01       	movw	r20, r24
     fb2:	c5 01       	movw	r24, r10
     fb4:	b4 01       	movw	r22, r8
     fb6:	07 d4       	rcall	.+2062   	; 0x17c6 <__addsf3>
     fb8:	4b 01       	movw	r8, r22
     fba:	5c 01       	movw	r10, r24
     fbc:	4d 85       	ldd	r20, Y+13	; 0x0d
     fbe:	5e 85       	ldd	r21, Y+14	; 0x0e
     fc0:	6f 85       	ldd	r22, Y+15	; 0x0f
     fc2:	78 89       	ldd	r23, Y+16	; 0x10
     fc4:	86 e9       	ldi	r24, 0x96	; 150
     fc6:	93 e0       	ldi	r25, 0x03	; 3
     fc8:	db d3       	rcall	.+1974   	; 0x1780 <printSD>
     fca:	8a e0       	ldi	r24, 0x0A	; 10
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	0e 94 3b 14 	call	0x2876	; 0x2876 <putchar>
     fd2:	64 2d       	mov	r22, r4
     fd4:	75 2d       	mov	r23, r5
     fd6:	86 2d       	mov	r24, r6
     fd8:	97 2d       	mov	r25, r7
     fda:	27 d5       	rcall	.+2638   	; 0x1a2a <__fixsfsi>
     fdc:	8b 01       	movw	r16, r22
     fde:	77 23       	and	r23, r23
     fe0:	24 f4       	brge	.+8      	; 0xfea <main+0x3b2>
     fe2:	00 27       	eor	r16, r16
     fe4:	11 27       	eor	r17, r17
     fe6:	06 1b       	sub	r16, r22
     fe8:	17 0b       	sbc	r17, r23
     fea:	c5 01       	movw	r24, r10
     fec:	b4 01       	movw	r22, r8
     fee:	1d d5       	rcall	.+2618   	; 0x1a2a <__fixsfsi>
     ff0:	9b 01       	movw	r18, r22
     ff2:	77 23       	and	r23, r23
     ff4:	24 f4       	brge	.+8      	; 0xffe <main+0x3c6>
     ff6:	22 27       	eor	r18, r18
     ff8:	33 27       	eor	r19, r19
     ffa:	26 1b       	sub	r18, r22
     ffc:	37 0b       	sbc	r19, r23
     ffe:	a1 01       	movw	r20, r2
    1000:	42 1b       	sub	r20, r18
    1002:	53 0b       	sbc	r21, r19
    1004:	ca 01       	movw	r24, r20
    1006:	99 23       	and	r25, r25
    1008:	24 f4       	brge	.+8      	; 0x1012 <main+0x3da>
    100a:	88 27       	eor	r24, r24
    100c:	99 27       	eor	r25, r25
    100e:	84 1b       	sub	r24, r20
    1010:	95 0b       	sbc	r25, r21
    1012:	89 38       	cpi	r24, 0x89	; 137
    1014:	53 e1       	ldi	r21, 0x13	; 19
    1016:	95 07       	cpc	r25, r21
    1018:	24 f0       	brlt	.+8      	; 0x1022 <main+0x3ea>
    101a:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <pwm_delay+0x1>
    101e:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <pwm_delay>
    1022:	60 91 a9 03 	lds	r22, 0x03A9	; 0x8003a9 <pwm_delay>
    1026:	70 91 aa 03 	lds	r23, 0x03AA	; 0x8003aa <pwm_delay+0x1>
    102a:	89 e7       	ldi	r24, 0x79	; 121
    102c:	93 e0       	ldi	r25, 0x03	; 3
    102e:	51 d3       	rcall	.+1698   	; 0x16d2 <printSI>
    1030:	b8 01       	movw	r22, r16
    1032:	01 2e       	mov	r0, r17
    1034:	00 0c       	add	r0, r0
    1036:	88 0b       	sbc	r24, r24
    1038:	99 0b       	sbc	r25, r25
    103a:	2a d5       	rcall	.+2644   	; 0x1a90 <__floatsisf>
    103c:	2c ee       	ldi	r18, 0xEC	; 236
    103e:	31 e5       	ldi	r19, 0x51	; 81
    1040:	48 e3       	ldi	r20, 0x38	; 56
    1042:	5e e3       	ldi	r21, 0x3E	; 62
    1044:	86 d4       	rcall	.+2316   	; 0x1952 <__cmpsf2>
    1046:	18 16       	cp	r1, r24
    1048:	1c f4       	brge	.+6      	; 0x1050 <main+0x418>
    104a:	0e 32       	cpi	r16, 0x2E	; 46
    104c:	11 05       	cpc	r17, r1
    104e:	2c f0       	brlt	.+10     	; 0x105a <main+0x422>
    1050:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <incr+0x1>
    1054:	10 92 af 03 	sts	0x03AF, r1	; 0x8003af <incr>
    1058:	18 c0       	rjmp	.+48     	; 0x108a <main+0x452>
    105a:	2c ee       	ldi	r18, 0xEC	; 236
    105c:	31 e5       	ldi	r19, 0x51	; 81
    105e:	48 e3       	ldi	r20, 0x38	; 56
    1060:	5e e3       	ldi	r21, 0x3E	; 62
    1062:	64 2d       	mov	r22, r4
    1064:	75 2d       	mov	r23, r5
    1066:	86 2d       	mov	r24, r6
    1068:	97 2d       	mov	r25, r7
    106a:	73 d4       	rcall	.+2278   	; 0x1952 <__cmpsf2>
    106c:	88 23       	and	r24, r24
    106e:	3c f4       	brge	.+14     	; 0x107e <main+0x446>
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	90 93 b0 03 	sts	0x03B0, r25	; 0x8003b0 <incr+0x1>
    1078:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <incr>
    107c:	06 c0       	rjmp	.+12     	; 0x108a <main+0x452>
    107e:	2f ef       	ldi	r18, 0xFF	; 255
    1080:	3f ef       	ldi	r19, 0xFF	; 255
    1082:	30 93 b0 03 	sts	0x03B0, r19	; 0x8003b0 <incr+0x1>
    1086:	20 93 af 03 	sts	0x03AF, r18	; 0x8003af <incr>
    108a:	c7 01       	movw	r24, r14
    108c:	b6 01       	movw	r22, r12
    108e:	cd d4       	rcall	.+2458   	; 0x1a2a <__fixsfsi>
    1090:	8b 01       	movw	r16, r22
    1092:	77 23       	and	r23, r23
    1094:	24 f4       	brge	.+8      	; 0x109e <main+0x466>
    1096:	00 27       	eor	r16, r16
    1098:	11 27       	eor	r17, r17
    109a:	06 1b       	sub	r16, r22
    109c:	17 0b       	sbc	r17, r23
    109e:	20 e0       	ldi	r18, 0x00	; 0
    10a0:	30 e4       	ldi	r19, 0x40	; 64
    10a2:	4c e9       	ldi	r20, 0x9C	; 156
    10a4:	56 e4       	ldi	r21, 0x46	; 70
    10a6:	c7 01       	movw	r24, r14
    10a8:	b6 01       	movw	r22, r12
    10aa:	ce d5       	rcall	.+2972   	; 0x1c48 <__mulsf3>
    10ac:	9b 01       	movw	r18, r22
    10ae:	ac 01       	movw	r20, r24
    10b0:	60 e0       	ldi	r22, 0x00	; 0
    10b2:	7e eb       	ldi	r23, 0xBE	; 190
    10b4:	8f ef       	ldi	r24, 0xFF	; 255
    10b6:	96 e4       	ldi	r25, 0x46	; 70
    10b8:	85 d3       	rcall	.+1802   	; 0x17c4 <__subsf3>
    10ba:	bc d4       	rcall	.+2424   	; 0x1a34 <__fixunssfsi>
    10bc:	9b 01       	movw	r18, r22
    10be:	77 23       	and	r23, r23
    10c0:	24 f4       	brge	.+8      	; 0x10ca <main+0x492>
    10c2:	22 27       	eor	r18, r18
    10c4:	33 27       	eor	r19, r19
    10c6:	26 1b       	sub	r18, r22
    10c8:	37 0b       	sbc	r19, r23
    10ca:	29 38       	cpi	r18, 0x89	; 137
    10cc:	33 41       	sbci	r19, 0x13	; 19
    10ce:	34 f0       	brlt	.+12     	; 0x10dc <main+0x4a4>
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	9d e7       	ldi	r25, 0x7D	; 125
    10d4:	90 93 a8 03 	sts	0x03A8, r25	; 0x8003a8 <pwm_delay_2+0x1>
    10d8:	80 93 a7 03 	sts	0x03A7, r24	; 0x8003a7 <pwm_delay_2>
    10dc:	60 91 a7 03 	lds	r22, 0x03A7	; 0x8003a7 <pwm_delay_2>
    10e0:	70 91 a8 03 	lds	r23, 0x03A8	; 0x8003a8 <pwm_delay_2+0x1>
    10e4:	86 e8       	ldi	r24, 0x86	; 134
    10e6:	93 e0       	ldi	r25, 0x03	; 3
    10e8:	f4 d2       	rcall	.+1512   	; 0x16d2 <printSI>
    10ea:	b8 01       	movw	r22, r16
    10ec:	01 2e       	mov	r0, r17
    10ee:	00 0c       	add	r0, r0
    10f0:	88 0b       	sbc	r24, r24
    10f2:	99 0b       	sbc	r25, r25
    10f4:	cd d4       	rcall	.+2458   	; 0x1a90 <__floatsisf>
    10f6:	2c ee       	ldi	r18, 0xEC	; 236
    10f8:	31 e5       	ldi	r19, 0x51	; 81
    10fa:	48 e3       	ldi	r20, 0x38	; 56
    10fc:	5e e3       	ldi	r21, 0x3E	; 62
    10fe:	29 d4       	rcall	.+2130   	; 0x1952 <__cmpsf2>
    1100:	18 16       	cp	r1, r24
    1102:	1c f4       	brge	.+6      	; 0x110a <main+0x4d2>
    1104:	0e 32       	cpi	r16, 0x2E	; 46
    1106:	11 05       	cpc	r17, r1
    1108:	2c f0       	brlt	.+10     	; 0x1114 <main+0x4dc>
    110a:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <incr+0x1>
    110e:	10 92 af 03 	sts	0x03AF, r1	; 0x8003af <incr>
    1112:	30 ce       	rjmp	.-928    	; 0xd74 <main+0x13c>
    1114:	2c ee       	ldi	r18, 0xEC	; 236
    1116:	31 e5       	ldi	r19, 0x51	; 81
    1118:	48 e3       	ldi	r20, 0x38	; 56
    111a:	5e e3       	ldi	r21, 0x3E	; 62
    111c:	c7 01       	movw	r24, r14
    111e:	b6 01       	movw	r22, r12
    1120:	18 d4       	rcall	.+2096   	; 0x1952 <__cmpsf2>
    1122:	88 23       	and	r24, r24
    1124:	3c f4       	brge	.+14     	; 0x1134 <main+0x4fc>
    1126:	21 e0       	ldi	r18, 0x01	; 1
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	30 93 ae 03 	sts	0x03AE, r19	; 0x8003ae <incr_2+0x1>
    112e:	20 93 ad 03 	sts	0x03AD, r18	; 0x8003ad <incr_2>
    1132:	20 ce       	rjmp	.-960    	; 0xd74 <main+0x13c>
    1134:	4f ef       	ldi	r20, 0xFF	; 255
    1136:	5f ef       	ldi	r21, 0xFF	; 255
    1138:	50 93 ae 03 	sts	0x03AE, r21	; 0x8003ae <incr_2+0x1>
    113c:	40 93 ad 03 	sts	0x03AD, r20	; 0x8003ad <incr_2>
    1140:	19 ce       	rjmp	.-974    	; 0xd74 <main+0x13c>

00001142 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
    1142:	cf 93       	push	r28
    1144:	df 93       	push	r29
    1146:	d8 2f       	mov	r29, r24
    1148:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
    114a:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
    114c:	d4 d1       	rcall	.+936    	; 0x14f6 <i2c_start>
    114e:	8d 2f       	mov	r24, r29
	i2c_stop();
    1150:	28 d2       	rcall	.+1104   	; 0x15a2 <i2c_write>
    1152:	8c 2f       	mov	r24, r28
}
    1154:	26 d2       	rcall	.+1100   	; 0x15a2 <i2c_write>
    1156:	15 d2       	rcall	.+1066   	; 0x1582 <i2c_stop>
    1158:	df 91       	pop	r29
    115a:	cf 91       	pop	r28
    115c:	08 95       	ret

0000115e <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
    115e:	af 92       	push	r10
    1160:	bf 92       	push	r11
    1162:	cf 92       	push	r12
    1164:	df 92       	push	r13
    1166:	ff 92       	push	r15
    1168:	0f 93       	push	r16
    116a:	1f 93       	push	r17
    116c:	cf 93       	push	r28
    116e:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
    1170:	66 23       	and	r22, r22
    1172:	89 f1       	breq	.+98     	; 0x11d6 <mpu6050_readBytes+0x78>
    1174:	c5 2f       	mov	r28, r21
    1176:	d4 2f       	mov	r29, r20
    1178:	f6 2e       	mov	r15, r22
    117a:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
    117c:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
    117e:	bb d1       	rcall	.+886    	; 0x14f6 <i2c_start>
    1180:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1182:	0f d2       	rcall	.+1054   	; 0x15a2 <i2c_write>
    1184:	85 e3       	ldi	r24, 0x35	; 53
    1186:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    1188:	f1 f7       	brne	.-4      	; 0x1186 <mpu6050_readBytes+0x28>
    118a:	00 00       	nop
    118c:	81 ed       	ldi	r24, 0xD1	; 209
    118e:	b3 d1       	rcall	.+870    	; 0x14f6 <i2c_start>
    1190:	0d 2f       	mov	r16, r29
    1192:	1c 2f       	mov	r17, r28
    1194:	cc 24       	eor	r12, r12
    1196:	ca 94       	dec	r12
    1198:	cf 0c       	add	r12, r15
    119a:	d1 2c       	mov	r13, r1
    119c:	ef ef       	ldi	r30, 0xFF	; 255
    119e:	ce 1a       	sub	r12, r30
    11a0:	de 0a       	sbc	r13, r30
    11a2:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    11a4:	d0 e0       	ldi	r29, 0x00	; 0
    11a6:	af 2c       	mov	r10, r15
    11a8:	b1 2c       	mov	r11, r1
    11aa:	f1 e0       	ldi	r31, 0x01	; 1
    11ac:	af 1a       	sub	r10, r31
    11ae:	b1 08       	sbc	r11, r1
    11b0:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
    11b2:	bd 06       	cpc	r11, r29
    11b4:	21 f4       	brne	.+8      	; 0x11be <mpu6050_readBytes+0x60>
    11b6:	30 d2       	rcall	.+1120   	; 0x1618 <i2c_readNak>
    11b8:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
    11ba:	80 83       	st	Z, r24
    11bc:	03 c0       	rjmp	.+6      	; 0x11c4 <mpu6050_readBytes+0x66>
    11be:	12 d2       	rcall	.+1060   	; 0x15e4 <i2c_readAck>
    11c0:	f8 01       	movw	r30, r16
    11c2:	80 83       	st	Z, r24
    11c4:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    11c6:	0f 5f       	subi	r16, 0xFF	; 255
    11c8:	1f 4f       	sbci	r17, 0xFF	; 255
    11ca:	cc 15       	cp	r28, r12
    11cc:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    11ce:	81 f7       	brne	.-32     	; 0x11b0 <mpu6050_readBytes+0x52>
    11d0:	cf 2d       	mov	r28, r15
    11d2:	d7 d1       	rcall	.+942    	; 0x1582 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    11d6:	c0 e0       	ldi	r28, 0x00	; 0
    11d8:	8c 2f       	mov	r24, r28
    11da:	df 91       	pop	r29
    11dc:	cf 91       	pop	r28
    11de:	1f 91       	pop	r17
    11e0:	0f 91       	pop	r16
    11e2:	ff 90       	pop	r15
    11e4:	df 90       	pop	r13
    11e6:	cf 90       	pop	r12
    11e8:	bf 90       	pop	r11
    11ea:	af 90       	pop	r10
    11ec:	08 95       	ret

000011ee <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    11ee:	6f 92       	push	r6
    11f0:	7f 92       	push	r7
    11f2:	8f 92       	push	r8
    11f4:	9f 92       	push	r9
    11f6:	af 92       	push	r10
    11f8:	bf 92       	push	r11
    11fa:	cf 92       	push	r12
    11fc:	df 92       	push	r13
    11fe:	ef 92       	push	r14
    1200:	ff 92       	push	r15
    1202:	0f 93       	push	r16
    1204:	1f 93       	push	r17
    1206:	cf 93       	push	r28
    1208:	df 93       	push	r29
    120a:	cd b7       	in	r28, 0x3d	; 61
    120c:	de b7       	in	r29, 0x3e	; 62
    120e:	2e 97       	sbiw	r28, 0x0e	; 14
    1210:	0f b6       	in	r0, 0x3f	; 63
    1212:	f8 94       	cli
    1214:	de bf       	out	0x3e, r29	; 62
    1216:	0f be       	out	0x3f, r0	; 63
    1218:	cd bf       	out	0x3d, r28	; 61
    121a:	4c 01       	movw	r8, r24
    121c:	5b 01       	movw	r10, r22
    121e:	6a 01       	movw	r12, r20
    1220:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    1222:	ae 01       	movw	r20, r28
    1224:	4f 5f       	subi	r20, 0xFF	; 255
    1226:	5f 4f       	sbci	r21, 0xFF	; 255
    1228:	6e e0       	ldi	r22, 0x0E	; 14
    122a:	8b e3       	ldi	r24, 0x3B	; 59
    122c:	98 df       	rcall	.-208    	; 0x115e <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    122e:	89 81       	ldd	r24, Y+1	; 0x01
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	98 2f       	mov	r25, r24
    1234:	88 27       	eor	r24, r24
    1236:	2a 81       	ldd	r18, Y+2	; 0x02
    1238:	82 2b       	or	r24, r18
    123a:	f4 01       	movw	r30, r8
    123c:	91 83       	std	Z+1, r25	; 0x01
    123e:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    1240:	8b 81       	ldd	r24, Y+3	; 0x03
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	98 2f       	mov	r25, r24
    1246:	88 27       	eor	r24, r24
    1248:	2c 81       	ldd	r18, Y+4	; 0x04
    124a:	82 2b       	or	r24, r18
    124c:	f5 01       	movw	r30, r10
    124e:	91 83       	std	Z+1, r25	; 0x01
    1250:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    1252:	8d 81       	ldd	r24, Y+5	; 0x05
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	98 2f       	mov	r25, r24
    1258:	88 27       	eor	r24, r24
    125a:	2e 81       	ldd	r18, Y+6	; 0x06
    125c:	82 2b       	or	r24, r18
    125e:	f6 01       	movw	r30, r12
    1260:	91 83       	std	Z+1, r25	; 0x01
    1262:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    1264:	89 85       	ldd	r24, Y+9	; 0x09
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	98 2f       	mov	r25, r24
    126a:	88 27       	eor	r24, r24
    126c:	2a 85       	ldd	r18, Y+10	; 0x0a
    126e:	82 2b       	or	r24, r18
    1270:	f3 01       	movw	r30, r6
    1272:	91 83       	std	Z+1, r25	; 0x01
    1274:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    1276:	8b 85       	ldd	r24, Y+11	; 0x0b
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	98 2f       	mov	r25, r24
    127c:	88 27       	eor	r24, r24
    127e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1280:	82 2b       	or	r24, r18
    1282:	f8 01       	movw	r30, r16
    1284:	91 83       	std	Z+1, r25	; 0x01
    1286:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    1288:	8d 85       	ldd	r24, Y+13	; 0x0d
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	98 2f       	mov	r25, r24
    128e:	88 27       	eor	r24, r24
    1290:	2e 85       	ldd	r18, Y+14	; 0x0e
    1292:	82 2b       	or	r24, r18
    1294:	f7 01       	movw	r30, r14
    1296:	91 83       	std	Z+1, r25	; 0x01
    1298:	80 83       	st	Z, r24
    129a:	2e 96       	adiw	r28, 0x0e	; 14
    129c:	0f b6       	in	r0, 0x3f	; 63
    129e:	f8 94       	cli
    12a0:	de bf       	out	0x3e, r29	; 62
    12a2:	0f be       	out	0x3f, r0	; 63
    12a4:	cd bf       	out	0x3d, r28	; 61
    12a6:	df 91       	pop	r29
    12a8:	cf 91       	pop	r28
    12aa:	1f 91       	pop	r17
    12ac:	0f 91       	pop	r16
    12ae:	ff 90       	pop	r15
    12b0:	ef 90       	pop	r14
    12b2:	df 90       	pop	r13
    12b4:	cf 90       	pop	r12
    12b6:	bf 90       	pop	r11
    12b8:	af 90       	pop	r10
    12ba:	9f 90       	pop	r9
    12bc:	8f 90       	pop	r8
    12be:	7f 90       	pop	r7
    12c0:	6f 90       	pop	r6
    12c2:	08 95       	ret

000012c4 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    12c4:	e1 ea       	ldi	r30, 0xA1	; 161
    12c6:	f0 e0       	ldi	r31, 0x00	; 0
    12c8:	80 81       	ld	r24, Z
    12ca:	81 60       	ori	r24, 0x01	; 1
    12cc:	80 83       	st	Z, r24
    12ce:	e0 ea       	ldi	r30, 0xA0	; 160
    12d0:	f0 e0       	ldi	r31, 0x00	; 0
    12d2:	80 81       	ld	r24, Z
    12d4:	81 60       	ori	r24, 0x01	; 1
    12d6:	80 83       	st	Z, r24
    12d8:	80 81       	ld	r24, Z
    12da:	80 68       	ori	r24, 0x80	; 128
    12dc:	80 83       	st	Z, r24
    12de:	80 81       	ld	r24, Z
    12e0:	80 62       	ori	r24, 0x20	; 32
    12e2:	80 83       	st	Z, r24
    12e4:	80 81       	ld	r24, Z
    12e6:	88 60       	ori	r24, 0x08	; 8
    12e8:	80 83       	st	Z, r24
    12ea:	08 95       	ret

000012ec <setup_timer3>:
    12ec:	e1 e9       	ldi	r30, 0x91	; 145
    12ee:	f0 e0       	ldi	r31, 0x00	; 0
    12f0:	80 81       	ld	r24, Z
    12f2:	81 60       	ori	r24, 0x01	; 1
    12f4:	80 83       	st	Z, r24
    12f6:	e0 e9       	ldi	r30, 0x90	; 144
    12f8:	f0 e0       	ldi	r31, 0x00	; 0
    12fa:	80 81       	ld	r24, Z
    12fc:	81 60       	ori	r24, 0x01	; 1
    12fe:	80 83       	st	Z, r24
    1300:	80 81       	ld	r24, Z
    1302:	80 68       	ori	r24, 0x80	; 128
    1304:	80 83       	st	Z, r24
    1306:	80 81       	ld	r24, Z
    1308:	80 62       	ori	r24, 0x20	; 32
    130a:	80 83       	st	Z, r24
    130c:	80 81       	ld	r24, Z
    130e:	88 60       	ori	r24, 0x08	; 8
    1310:	80 83       	st	Z, r24
    1312:	08 95       	ret

00001314 <setup_timer5>:
    1314:	e1 e2       	ldi	r30, 0x21	; 33
    1316:	f1 e0       	ldi	r31, 0x01	; 1
    1318:	80 81       	ld	r24, Z
    131a:	81 60       	ori	r24, 0x01	; 1
    131c:	80 83       	st	Z, r24
    131e:	80 81       	ld	r24, Z
    1320:	88 60       	ori	r24, 0x08	; 8
    1322:	80 83       	st	Z, r24
    1324:	08 95       	ret

00001326 <Enable_timer5_compare_interrupt>:
    1326:	e3 e7       	ldi	r30, 0x73	; 115
    1328:	f0 e0       	ldi	r31, 0x00	; 0
    132a:	80 81       	ld	r24, Z
    132c:	82 60       	ori	r24, 0x02	; 2
    132e:	80 83       	st	Z, r24
    1330:	08 95       	ret

00001332 <setup_timer1>:
    1332:	e1 e8       	ldi	r30, 0x81	; 129
    1334:	f0 e0       	ldi	r31, 0x00	; 0
    1336:	80 81       	ld	r24, Z
    1338:	81 60       	ori	r24, 0x01	; 1
    133a:	80 83       	st	Z, r24
    133c:	80 81       	ld	r24, Z
    133e:	88 60       	ori	r24, 0x08	; 8
    1340:	80 83       	st	Z, r24
    1342:	08 95       	ret

00001344 <Enable_timer1_compare_interrupt>:
    1344:	ef e6       	ldi	r30, 0x6F	; 111
    1346:	f0 e0       	ldi	r31, 0x00	; 0
    1348:	80 81       	ld	r24, Z
    134a:	82 60       	ori	r24, 0x02	; 2
    134c:	80 83       	st	Z, r24
    134e:	08 95       	ret

00001350 <setup_timer0>:
    1350:	85 b5       	in	r24, 0x25	; 37
    1352:	81 60       	ori	r24, 0x01	; 1
    1354:	85 bd       	out	0x25, r24	; 37
    1356:	85 b5       	in	r24, 0x25	; 37
    1358:	82 60       	ori	r24, 0x02	; 2
    135a:	85 bd       	out	0x25, r24	; 37
    135c:	08 95       	ret

0000135e <Enable_timer0_overflow_interrupt>:
    135e:	ee e6       	ldi	r30, 0x6E	; 110
    1360:	f0 e0       	ldi	r31, 0x00	; 0
    1362:	80 81       	ld	r24, Z
    1364:	81 60       	ori	r24, 0x01	; 1
    1366:	80 83       	st	Z, r24
    1368:	08 95       	ret

0000136a <micros>:
    136a:	3f b7       	in	r19, 0x3f	; 63
    136c:	f8 94       	cli
    136e:	80 91 a3 03 	lds	r24, 0x03A3	; 0x8003a3 <timer0_overflow_count>
    1372:	90 91 a4 03 	lds	r25, 0x03A4	; 0x8003a4 <timer0_overflow_count+0x1>
    1376:	a0 91 a5 03 	lds	r26, 0x03A5	; 0x8003a5 <timer0_overflow_count+0x2>
    137a:	b0 91 a6 03 	lds	r27, 0x03A6	; 0x8003a6 <timer0_overflow_count+0x3>
    137e:	26 b5       	in	r18, 0x26	; 38
    1380:	a8 9b       	sbis	0x15, 0	; 21
    1382:	05 c0       	rjmp	.+10     	; 0x138e <micros+0x24>
    1384:	2f 3f       	cpi	r18, 0xFF	; 255
    1386:	19 f0       	breq	.+6      	; 0x138e <micros+0x24>
    1388:	01 96       	adiw	r24, 0x01	; 1
    138a:	a1 1d       	adc	r26, r1
    138c:	b1 1d       	adc	r27, r1
    138e:	3f bf       	out	0x3f, r19	; 63
    1390:	ba 2f       	mov	r27, r26
    1392:	a9 2f       	mov	r26, r25
    1394:	98 2f       	mov	r25, r24
    1396:	88 27       	eor	r24, r24
    1398:	82 0f       	add	r24, r18
    139a:	91 1d       	adc	r25, r1
    139c:	a1 1d       	adc	r26, r1
    139e:	b1 1d       	adc	r27, r1
    13a0:	bc 01       	movw	r22, r24
    13a2:	cd 01       	movw	r24, r26
    13a4:	66 0f       	add	r22, r22
    13a6:	77 1f       	adc	r23, r23
    13a8:	88 1f       	adc	r24, r24
    13aa:	99 1f       	adc	r25, r25
    13ac:	66 0f       	add	r22, r22
    13ae:	77 1f       	adc	r23, r23
    13b0:	88 1f       	adc	r24, r24
    13b2:	99 1f       	adc	r25, r25
    13b4:	08 95       	ret

000013b6 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    13b6:	1f 92       	push	r1
    13b8:	0f 92       	push	r0
    13ba:	0f b6       	in	r0, 0x3f	; 63
    13bc:	0f 92       	push	r0
    13be:	11 24       	eor	r1, r1
    13c0:	2f 93       	push	r18
    13c2:	3f 93       	push	r19
    13c4:	8f 93       	push	r24
    13c6:	9f 93       	push	r25
    13c8:	af 93       	push	r26
    13ca:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    13cc:	80 91 9f 03 	lds	r24, 0x039F	; 0x80039f <timer0_millis>
    13d0:	90 91 a0 03 	lds	r25, 0x03A0	; 0x8003a0 <timer0_millis+0x1>
    13d4:	a0 91 a1 03 	lds	r26, 0x03A1	; 0x8003a1 <timer0_millis+0x2>
    13d8:	b0 91 a2 03 	lds	r27, 0x03A2	; 0x8003a2 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    13dc:	30 91 9e 03 	lds	r19, 0x039E	; 0x80039e <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    13e0:	23 e0       	ldi	r18, 0x03	; 3
    13e2:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    13e4:	2d 37       	cpi	r18, 0x7D	; 125
    13e6:	20 f4       	brcc	.+8      	; 0x13f0 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    13e8:	01 96       	adiw	r24, 0x01	; 1
    13ea:	a1 1d       	adc	r26, r1
    13ec:	b1 1d       	adc	r27, r1
    13ee:	05 c0       	rjmp	.+10     	; 0x13fa <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    13f0:	26 e8       	ldi	r18, 0x86	; 134
    13f2:	23 0f       	add	r18, r19
		m += 1;
    13f4:	02 96       	adiw	r24, 0x02	; 2
    13f6:	a1 1d       	adc	r26, r1
    13f8:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    13fa:	20 93 9e 03 	sts	0x039E, r18	; 0x80039e <timer0_fract>
	timer0_millis = m;
    13fe:	80 93 9f 03 	sts	0x039F, r24	; 0x80039f <timer0_millis>
    1402:	90 93 a0 03 	sts	0x03A0, r25	; 0x8003a0 <timer0_millis+0x1>
    1406:	a0 93 a1 03 	sts	0x03A1, r26	; 0x8003a1 <timer0_millis+0x2>
    140a:	b0 93 a2 03 	sts	0x03A2, r27	; 0x8003a2 <timer0_millis+0x3>
	timer0_overflow_count++;
    140e:	80 91 a3 03 	lds	r24, 0x03A3	; 0x8003a3 <timer0_overflow_count>
    1412:	90 91 a4 03 	lds	r25, 0x03A4	; 0x8003a4 <timer0_overflow_count+0x1>
    1416:	a0 91 a5 03 	lds	r26, 0x03A5	; 0x8003a5 <timer0_overflow_count+0x2>
    141a:	b0 91 a6 03 	lds	r27, 0x03A6	; 0x8003a6 <timer0_overflow_count+0x3>
    141e:	01 96       	adiw	r24, 0x01	; 1
    1420:	a1 1d       	adc	r26, r1
    1422:	b1 1d       	adc	r27, r1
    1424:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <timer0_overflow_count>
    1428:	90 93 a4 03 	sts	0x03A4, r25	; 0x8003a4 <timer0_overflow_count+0x1>
    142c:	a0 93 a5 03 	sts	0x03A5, r26	; 0x8003a5 <timer0_overflow_count+0x2>
    1430:	b0 93 a6 03 	sts	0x03A6, r27	; 0x8003a6 <timer0_overflow_count+0x3>
}
    1434:	bf 91       	pop	r27
    1436:	af 91       	pop	r26
    1438:	9f 91       	pop	r25
    143a:	8f 91       	pop	r24
    143c:	3f 91       	pop	r19
    143e:	2f 91       	pop	r18
    1440:	0f 90       	pop	r0
    1442:	0f be       	out	0x3f, r0	; 63
    1444:	0f 90       	pop	r0
    1446:	1f 90       	pop	r1
    1448:	18 95       	reti

0000144a <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    144a:	1f 92       	push	r1
    144c:	0f 92       	push	r0
    144e:	0f b6       	in	r0, 0x3f	; 63
    1450:	0f 92       	push	r0
    1452:	11 24       	eor	r1, r1
    1454:	0b b6       	in	r0, 0x3b	; 59
    1456:	0f 92       	push	r0
    1458:	2f 93       	push	r18
    145a:	3f 93       	push	r19
    145c:	4f 93       	push	r20
    145e:	5f 93       	push	r21
    1460:	6f 93       	push	r22
    1462:	7f 93       	push	r23
    1464:	8f 93       	push	r24
    1466:	9f 93       	push	r25
    1468:	af 93       	push	r26
    146a:	bf 93       	push	r27
    146c:	ef 93       	push	r30
    146e:	ff 93       	push	r31
	PWM_update();
    1470:	0e 94 2c 01 	call	0x258	; 0x258 <PWM_update>
}
    1474:	ff 91       	pop	r31
    1476:	ef 91       	pop	r30
    1478:	bf 91       	pop	r27
    147a:	af 91       	pop	r26
    147c:	9f 91       	pop	r25
    147e:	8f 91       	pop	r24
    1480:	7f 91       	pop	r23
    1482:	6f 91       	pop	r22
    1484:	5f 91       	pop	r21
    1486:	4f 91       	pop	r20
    1488:	3f 91       	pop	r19
    148a:	2f 91       	pop	r18
    148c:	0f 90       	pop	r0
    148e:	0b be       	out	0x3b, r0	; 59
    1490:	0f 90       	pop	r0
    1492:	0f be       	out	0x3f, r0	; 63
    1494:	0f 90       	pop	r0
    1496:	1f 90       	pop	r1
    1498:	18 95       	reti

0000149a <__vector_17>:
ISR(TIMER1_COMPA_vect)//motor update interrupt routine
{
    149a:	1f 92       	push	r1
    149c:	0f 92       	push	r0
    149e:	0f b6       	in	r0, 0x3f	; 63
    14a0:	0f 92       	push	r0
    14a2:	11 24       	eor	r1, r1
    14a4:	0b b6       	in	r0, 0x3b	; 59
    14a6:	0f 92       	push	r0
    14a8:	2f 93       	push	r18
    14aa:	3f 93       	push	r19
    14ac:	4f 93       	push	r20
    14ae:	5f 93       	push	r21
    14b0:	6f 93       	push	r22
    14b2:	7f 93       	push	r23
    14b4:	8f 93       	push	r24
    14b6:	9f 93       	push	r25
    14b8:	af 93       	push	r26
    14ba:	bf 93       	push	r27
    14bc:	ef 93       	push	r30
    14be:	ff 93       	push	r31
	PWM_update_2();
    14c0:	0e 94 ae 01 	call	0x35c	; 0x35c <PWM_update_2>
    14c4:	ff 91       	pop	r31
    14c6:	ef 91       	pop	r30
    14c8:	bf 91       	pop	r27
    14ca:	af 91       	pop	r26
    14cc:	9f 91       	pop	r25
    14ce:	8f 91       	pop	r24
    14d0:	7f 91       	pop	r23
    14d2:	6f 91       	pop	r22
    14d4:	5f 91       	pop	r21
    14d6:	4f 91       	pop	r20
    14d8:	3f 91       	pop	r19
    14da:	2f 91       	pop	r18
    14dc:	0f 90       	pop	r0
    14de:	0b be       	out	0x3b, r0	; 59
    14e0:	0f 90       	pop	r0
    14e2:	0f be       	out	0x3f, r0	; 63
    14e4:	0f 90       	pop	r0
    14e6:	1f 90       	pop	r1
    14e8:	18 95       	reti

000014ea <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    14ea:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    14ee:	8c e0       	ldi	r24, 0x0C	; 12
    14f0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    14f4:	08 95       	ret

000014f6 <i2c_start>:
    14f6:	94 ea       	ldi	r25, 0xA4	; 164
    14f8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    14fc:	4f ef       	ldi	r20, 0xFF	; 255
    14fe:	50 e0       	ldi	r21, 0x00	; 0
    1500:	60 e0       	ldi	r22, 0x00	; 0
    1502:	70 e0       	ldi	r23, 0x00	; 0
    1504:	ec eb       	ldi	r30, 0xBC	; 188
    1506:	f0 e0       	ldi	r31, 0x00	; 0
    1508:	90 81       	ld	r25, Z
    150a:	99 23       	and	r25, r25
    150c:	34 f0       	brlt	.+12     	; 0x151a <i2c_start+0x24>
    150e:	41 50       	subi	r20, 0x01	; 1
    1510:	51 09       	sbc	r21, r1
    1512:	61 09       	sbc	r22, r1
    1514:	71 09       	sbc	r23, r1
    1516:	c0 f7       	brcc	.-16     	; 0x1508 <i2c_start+0x12>
    1518:	04 c0       	rjmp	.+8      	; 0x1522 <i2c_start+0x2c>
    151a:	45 2b       	or	r20, r21
    151c:	46 2b       	or	r20, r22
    151e:	47 2b       	or	r20, r23
    1520:	41 f1       	breq	.+80     	; 0x1572 <i2c_start+0x7c>
    1522:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1526:	98 7f       	andi	r25, 0xF8	; 248
    1528:	98 30       	cpi	r25, 0x08	; 8
    152a:	11 f0       	breq	.+4      	; 0x1530 <i2c_start+0x3a>
    152c:	90 31       	cpi	r25, 0x10	; 16
    152e:	19 f5       	brne	.+70     	; 0x1576 <i2c_start+0x80>
    1530:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1534:	84 e8       	ldi	r24, 0x84	; 132
    1536:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    153a:	8f ef       	ldi	r24, 0xFF	; 255
    153c:	90 e0       	ldi	r25, 0x00	; 0
    153e:	a0 e0       	ldi	r26, 0x00	; 0
    1540:	b0 e0       	ldi	r27, 0x00	; 0
    1542:	ec eb       	ldi	r30, 0xBC	; 188
    1544:	f0 e0       	ldi	r31, 0x00	; 0
    1546:	20 81       	ld	r18, Z
    1548:	22 23       	and	r18, r18
    154a:	2c f0       	brlt	.+10     	; 0x1556 <i2c_start+0x60>
    154c:	01 97       	sbiw	r24, 0x01	; 1
    154e:	a1 09       	sbc	r26, r1
    1550:	b1 09       	sbc	r27, r1
    1552:	c8 f7       	brcc	.-14     	; 0x1546 <i2c_start+0x50>
    1554:	04 c0       	rjmp	.+8      	; 0x155e <i2c_start+0x68>
    1556:	89 2b       	or	r24, r25
    1558:	8a 2b       	or	r24, r26
    155a:	8b 2b       	or	r24, r27
    155c:	71 f0       	breq	.+28     	; 0x157a <i2c_start+0x84>
    155e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1562:	98 7f       	andi	r25, 0xF8	; 248
    1564:	98 31       	cpi	r25, 0x18	; 24
    1566:	59 f0       	breq	.+22     	; 0x157e <i2c_start+0x88>
    1568:	81 e0       	ldi	r24, 0x01	; 1
    156a:	90 34       	cpi	r25, 0x40	; 64
    156c:	49 f4       	brne	.+18     	; 0x1580 <i2c_start+0x8a>
    156e:	80 e0       	ldi	r24, 0x00	; 0
    1570:	08 95       	ret
    1572:	81 e0       	ldi	r24, 0x01	; 1
    1574:	08 95       	ret
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	08 95       	ret
    157a:	81 e0       	ldi	r24, 0x01	; 1
    157c:	08 95       	ret
    157e:	80 e0       	ldi	r24, 0x00	; 0
    1580:	08 95       	ret

00001582 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    1582:	84 e9       	ldi	r24, 0x94	; 148
    1584:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    1588:	80 e0       	ldi	r24, 0x00	; 0
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	ec eb       	ldi	r30, 0xBC	; 188
    158e:	f0 e0       	ldi	r31, 0x00	; 0
    1590:	20 81       	ld	r18, Z
    1592:	24 ff       	sbrs	r18, 4
    1594:	05 c0       	rjmp	.+10     	; 0x15a0 <i2c_stop+0x1e>
    1596:	01 96       	adiw	r24, 0x01	; 1
    1598:	81 15       	cp	r24, r1
    159a:	21 e0       	ldi	r18, 0x01	; 1
    159c:	92 07       	cpc	r25, r18
    159e:	c1 f7       	brne	.-16     	; 0x1590 <i2c_stop+0xe>
    15a0:	08 95       	ret

000015a2 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    15a2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    15a6:	84 e8       	ldi	r24, 0x84	; 132
    15a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    15ac:	8f ef       	ldi	r24, 0xFF	; 255
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	a0 e0       	ldi	r26, 0x00	; 0
    15b2:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    15b4:	ec eb       	ldi	r30, 0xBC	; 188
    15b6:	f0 e0       	ldi	r31, 0x00	; 0
    15b8:	20 81       	ld	r18, Z
    15ba:	22 23       	and	r18, r18
    15bc:	2c f0       	brlt	.+10     	; 0x15c8 <i2c_write+0x26>
    15be:	01 97       	sbiw	r24, 0x01	; 1
    15c0:	a1 09       	sbc	r26, r1
    15c2:	b1 09       	sbc	r27, r1
    15c4:	c8 f7       	brcc	.-14     	; 0x15b8 <i2c_write+0x16>
    15c6:	04 c0       	rjmp	.+8      	; 0x15d0 <i2c_write+0x2e>
	if(i2c_timer == 0)
    15c8:	89 2b       	or	r24, r25
    15ca:	8a 2b       	or	r24, r26
    15cc:	8b 2b       	or	r24, r27
    15ce:	41 f0       	breq	.+16     	; 0x15e0 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    15d0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    15d4:	98 7f       	andi	r25, 0xF8	; 248
    15d6:	81 e0       	ldi	r24, 0x01	; 1
    15d8:	98 32       	cpi	r25, 0x28	; 40
    15da:	19 f4       	brne	.+6      	; 0x15e2 <i2c_write+0x40>
    15dc:	80 e0       	ldi	r24, 0x00	; 0
    15de:	08 95       	ret
    15e0:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    15e2:	08 95       	ret

000015e4 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    15e4:	84 ec       	ldi	r24, 0xC4	; 196
    15e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    15ea:	8f ef       	ldi	r24, 0xFF	; 255
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	a0 e0       	ldi	r26, 0x00	; 0
    15f0:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    15f2:	ec eb       	ldi	r30, 0xBC	; 188
    15f4:	f0 e0       	ldi	r31, 0x00	; 0
    15f6:	20 81       	ld	r18, Z
    15f8:	22 23       	and	r18, r18
    15fa:	2c f0       	brlt	.+10     	; 0x1606 <i2c_readAck+0x22>
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	a1 09       	sbc	r26, r1
    1600:	b1 09       	sbc	r27, r1
    1602:	c8 f7       	brcc	.-14     	; 0x15f6 <i2c_readAck+0x12>
    1604:	04 c0       	rjmp	.+8      	; 0x160e <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    1606:	89 2b       	or	r24, r25
    1608:	8a 2b       	or	r24, r26
    160a:	8b 2b       	or	r24, r27
    160c:	19 f0       	breq	.+6      	; 0x1614 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    160e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1612:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    1614:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    1616:	08 95       	ret

00001618 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    1618:	84 e8       	ldi	r24, 0x84	; 132
    161a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    161e:	8f ef       	ldi	r24, 0xFF	; 255
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	a0 e0       	ldi	r26, 0x00	; 0
    1624:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1626:	ec eb       	ldi	r30, 0xBC	; 188
    1628:	f0 e0       	ldi	r31, 0x00	; 0
    162a:	20 81       	ld	r18, Z
    162c:	22 23       	and	r18, r18
    162e:	2c f0       	brlt	.+10     	; 0x163a <i2c_readNak+0x22>
    1630:	01 97       	sbiw	r24, 0x01	; 1
    1632:	a1 09       	sbc	r26, r1
    1634:	b1 09       	sbc	r27, r1
    1636:	c8 f7       	brcc	.-14     	; 0x162a <i2c_readNak+0x12>
    1638:	04 c0       	rjmp	.+8      	; 0x1642 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    163a:	89 2b       	or	r24, r25
    163c:	8a 2b       	or	r24, r26
    163e:	8b 2b       	or	r24, r27
    1640:	19 f0       	breq	.+6      	; 0x1648 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    1642:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1646:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    1648:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    164a:	08 95       	ret

0000164c <USART_Init>:
{
	char c[10];
	itoa(*value, c, 10);
	printf(c);
	printf("\n");
}
    164c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1650:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1654:	88 e0       	ldi	r24, 0x08	; 8
    1656:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    165a:	8e e0       	ldi	r24, 0x0E	; 14
    165c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1660:	08 95       	ret

00001662 <print16>:
    1662:	0f 93       	push	r16
    1664:	1f 93       	push	r17
    1666:	cf 93       	push	r28
    1668:	df 93       	push	r29
    166a:	cd b7       	in	r28, 0x3d	; 61
    166c:	de b7       	in	r29, 0x3e	; 62
    166e:	2a 97       	sbiw	r28, 0x0a	; 10
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	f8 94       	cli
    1674:	de bf       	out	0x3e, r29	; 62
    1676:	0f be       	out	0x3f, r0	; 63
    1678:	cd bf       	out	0x3d, r28	; 61
    167a:	4a e0       	ldi	r20, 0x0A	; 10
    167c:	8e 01       	movw	r16, r28
    167e:	0f 5f       	subi	r16, 0xFF	; 255
    1680:	1f 4f       	sbci	r17, 0xFF	; 255
    1682:	b8 01       	movw	r22, r16
    1684:	fc 01       	movw	r30, r24
    1686:	80 81       	ld	r24, Z
    1688:	91 81       	ldd	r25, Z+1	; 0x01
    168a:	0e 94 7f 13 	call	0x26fe	; 0x26fe <__itoa_ncheck>
    168e:	1f 93       	push	r17
    1690:	0f 93       	push	r16
    1692:	0e 94 28 14 	call	0x2850	; 0x2850 <printf>
    1696:	0f 90       	pop	r0
    1698:	0f 90       	pop	r0
    169a:	2a 96       	adiw	r28, 0x0a	; 10
    169c:	0f b6       	in	r0, 0x3f	; 63
    169e:	f8 94       	cli
    16a0:	de bf       	out	0x3e, r29	; 62
    16a2:	0f be       	out	0x3f, r0	; 63
    16a4:	cd bf       	out	0x3d, r28	; 61
    16a6:	df 91       	pop	r29
    16a8:	cf 91       	pop	r28
    16aa:	1f 91       	pop	r17
    16ac:	0f 91       	pop	r16
    16ae:	08 95       	ret

000016b0 <uart_putchar>:

int uart_putchar(char c, FILE *stream)
{
    16b0:	cf 93       	push	r28
    16b2:	c8 2f       	mov	r28, r24
	if (c == '\n')
    16b4:	8a 30       	cpi	r24, 0x0A	; 10
    16b6:	11 f4       	brne	.+4      	; 0x16bc <uart_putchar+0xc>
	uart_putchar('\r', stream);
    16b8:	8d e0       	ldi	r24, 0x0D	; 13
    16ba:	fa df       	rcall	.-12     	; 0x16b0 <uart_putchar>
	while (!( UCSR0A & (1<<UDRE0)));
    16bc:	e0 ec       	ldi	r30, 0xC0	; 192
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	80 81       	ld	r24, Z
    16c2:	85 ff       	sbrs	r24, 5
    16c4:	fd cf       	rjmp	.-6      	; 0x16c0 <uart_putchar+0x10>

	UDR0 = c;
    16c6:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	return 0;
}
    16ca:	80 e0       	ldi	r24, 0x00	; 0
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	cf 91       	pop	r28
    16d0:	08 95       	ret

000016d2 <printSI>:
void printSI(char c[20],int16_t intToPrint)
{
    16d2:	cf 93       	push	r28
    16d4:	df 93       	push	r29
    16d6:	1f 92       	push	r1
    16d8:	1f 92       	push	r1
    16da:	cd b7       	in	r28, 0x3d	; 61
    16dc:	de b7       	in	r29, 0x3e	; 62
    16de:	7a 83       	std	Y+2, r23	; 0x02
    16e0:	69 83       	std	Y+1, r22	; 0x01
	printf(c);
    16e2:	9f 93       	push	r25
    16e4:	8f 93       	push	r24
    16e6:	0e 94 28 14 	call	0x2850	; 0x2850 <printf>
	//printf(" ");
	print16(&intToPrint);
    16ea:	ce 01       	movw	r24, r28
    16ec:	01 96       	adiw	r24, 0x01	; 1
    16ee:	b9 df       	rcall	.-142    	; 0x1662 <print16>
	printf("  ");
    16f0:	84 e9       	ldi	r24, 0x94	; 148
    16f2:	93 e0       	ldi	r25, 0x03	; 3
    16f4:	9f 93       	push	r25
    16f6:	8f 93       	push	r24
    16f8:	0e 94 28 14 	call	0x2850	; 0x2850 <printf>
}
    16fc:	0f 90       	pop	r0
    16fe:	0f 90       	pop	r0
    1700:	0f 90       	pop	r0
    1702:	0f 90       	pop	r0
    1704:	0f 90       	pop	r0
    1706:	0f 90       	pop	r0
    1708:	df 91       	pop	r29
    170a:	cf 91       	pop	r28
    170c:	08 95       	ret

0000170e <printDouble>:
void printDouble(double *value)
{
    170e:	0f 93       	push	r16
    1710:	1f 93       	push	r17
    1712:	cf 93       	push	r28
    1714:	df 93       	push	r29
    1716:	cd b7       	in	r28, 0x3d	; 61
    1718:	de b7       	in	r29, 0x3e	; 62
    171a:	64 97       	sbiw	r28, 0x14	; 20
    171c:	0f b6       	in	r0, 0x3f	; 63
    171e:	f8 94       	cli
    1720:	de bf       	out	0x3e, r29	; 62
    1722:	0f be       	out	0x3f, r0	; 63
    1724:	cd bf       	out	0x3d, r28	; 61
    1726:	fc 01       	movw	r30, r24
	char c[20]={0};
    1728:	8e 01       	movw	r16, r28
    172a:	0f 5f       	subi	r16, 0xFF	; 255
    172c:	1f 4f       	sbci	r17, 0xFF	; 255
    172e:	84 e1       	ldi	r24, 0x14	; 20
    1730:	d8 01       	movw	r26, r16
    1732:	1d 92       	st	X+, r1
    1734:	8a 95       	dec	r24
    1736:	e9 f7       	brne	.-6      	; 0x1732 <printDouble+0x24>
	float val=90.2312;     // string to print to and transmit
	sprintf(c, "%f", *value);
    1738:	83 81       	ldd	r24, Z+3	; 0x03
    173a:	8f 93       	push	r24
    173c:	82 81       	ldd	r24, Z+2	; 0x02
    173e:	8f 93       	push	r24
    1740:	81 81       	ldd	r24, Z+1	; 0x01
    1742:	8f 93       	push	r24
    1744:	80 81       	ld	r24, Z
    1746:	8f 93       	push	r24
    1748:	87 e9       	ldi	r24, 0x97	; 151
    174a:	93 e0       	ldi	r25, 0x03	; 3
    174c:	9f 93       	push	r25
    174e:	8f 93       	push	r24
    1750:	1f 93       	push	r17
    1752:	0f 93       	push	r16
    1754:	0e 94 40 14 	call	0x2880	; 0x2880 <sprintf>
	printf(c);
    1758:	1f 93       	push	r17
    175a:	0f 93       	push	r16
    175c:	0e 94 28 14 	call	0x2850	; 0x2850 <printf>
}
    1760:	0f b6       	in	r0, 0x3f	; 63
    1762:	f8 94       	cli
    1764:	de bf       	out	0x3e, r29	; 62
    1766:	0f be       	out	0x3f, r0	; 63
    1768:	cd bf       	out	0x3d, r28	; 61
    176a:	64 96       	adiw	r28, 0x14	; 20
    176c:	0f b6       	in	r0, 0x3f	; 63
    176e:	f8 94       	cli
    1770:	de bf       	out	0x3e, r29	; 62
    1772:	0f be       	out	0x3f, r0	; 63
    1774:	cd bf       	out	0x3d, r28	; 61
    1776:	df 91       	pop	r29
    1778:	cf 91       	pop	r28
    177a:	1f 91       	pop	r17
    177c:	0f 91       	pop	r16
    177e:	08 95       	ret

00001780 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    1780:	cf 93       	push	r28
    1782:	df 93       	push	r29
    1784:	00 d0       	rcall	.+0      	; 0x1786 <printSD+0x6>
    1786:	1f 92       	push	r1
    1788:	cd b7       	in	r28, 0x3d	; 61
    178a:	de b7       	in	r29, 0x3e	; 62
    178c:	49 83       	std	Y+1, r20	; 0x01
    178e:	5a 83       	std	Y+2, r21	; 0x02
    1790:	6b 83       	std	Y+3, r22	; 0x03
    1792:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    1794:	9f 93       	push	r25
    1796:	8f 93       	push	r24
    1798:	0e 94 28 14 	call	0x2850	; 0x2850 <printf>
	//printf(" ");
	printDouble(&doubleToPrint);
    179c:	ce 01       	movw	r24, r28
    179e:	01 96       	adiw	r24, 0x01	; 1
    17a0:	b6 df       	rcall	.-148    	; 0x170e <printDouble>
	printf("  ");
    17a2:	84 e9       	ldi	r24, 0x94	; 148
    17a4:	93 e0       	ldi	r25, 0x03	; 3
    17a6:	9f 93       	push	r25
    17a8:	8f 93       	push	r24
    17aa:	0e 94 28 14 	call	0x2850	; 0x2850 <printf>
    17ae:	0f 90       	pop	r0
    17b0:	0f 90       	pop	r0
    17b2:	0f 90       	pop	r0
    17b4:	0f 90       	pop	r0
    17b6:	0f 90       	pop	r0
    17b8:	0f 90       	pop	r0
    17ba:	0f 90       	pop	r0
    17bc:	0f 90       	pop	r0
    17be:	df 91       	pop	r29
    17c0:	cf 91       	pop	r28
    17c2:	08 95       	ret

000017c4 <__subsf3>:
    17c4:	50 58       	subi	r21, 0x80	; 128

000017c6 <__addsf3>:
    17c6:	bb 27       	eor	r27, r27
    17c8:	aa 27       	eor	r26, r26
    17ca:	0e d0       	rcall	.+28     	; 0x17e8 <__addsf3x>
    17cc:	fc c1       	rjmp	.+1016   	; 0x1bc6 <__fp_round>
    17ce:	ed d1       	rcall	.+986    	; 0x1baa <__fp_pscA>
    17d0:	30 f0       	brcs	.+12     	; 0x17de <__addsf3+0x18>
    17d2:	f2 d1       	rcall	.+996    	; 0x1bb8 <__fp_pscB>
    17d4:	20 f0       	brcs	.+8      	; 0x17de <__addsf3+0x18>
    17d6:	31 f4       	brne	.+12     	; 0x17e4 <__addsf3+0x1e>
    17d8:	9f 3f       	cpi	r25, 0xFF	; 255
    17da:	11 f4       	brne	.+4      	; 0x17e0 <__addsf3+0x1a>
    17dc:	1e f4       	brtc	.+6      	; 0x17e4 <__addsf3+0x1e>
    17de:	bd c1       	rjmp	.+890    	; 0x1b5a <__fp_nan>
    17e0:	0e f4       	brtc	.+2      	; 0x17e4 <__addsf3+0x1e>
    17e2:	e0 95       	com	r30
    17e4:	e7 fb       	bst	r30, 7
    17e6:	b3 c1       	rjmp	.+870    	; 0x1b4e <__fp_inf>

000017e8 <__addsf3x>:
    17e8:	e9 2f       	mov	r30, r25
    17ea:	fe d1       	rcall	.+1020   	; 0x1be8 <__fp_split3>
    17ec:	80 f3       	brcs	.-32     	; 0x17ce <__addsf3+0x8>
    17ee:	ba 17       	cp	r27, r26
    17f0:	62 07       	cpc	r22, r18
    17f2:	73 07       	cpc	r23, r19
    17f4:	84 07       	cpc	r24, r20
    17f6:	95 07       	cpc	r25, r21
    17f8:	18 f0       	brcs	.+6      	; 0x1800 <__addsf3x+0x18>
    17fa:	71 f4       	brne	.+28     	; 0x1818 <__addsf3x+0x30>
    17fc:	9e f5       	brtc	.+102    	; 0x1864 <__addsf3x+0x7c>
    17fe:	16 c2       	rjmp	.+1068   	; 0x1c2c <__fp_zero>
    1800:	0e f4       	brtc	.+2      	; 0x1804 <__addsf3x+0x1c>
    1802:	e0 95       	com	r30
    1804:	0b 2e       	mov	r0, r27
    1806:	ba 2f       	mov	r27, r26
    1808:	a0 2d       	mov	r26, r0
    180a:	0b 01       	movw	r0, r22
    180c:	b9 01       	movw	r22, r18
    180e:	90 01       	movw	r18, r0
    1810:	0c 01       	movw	r0, r24
    1812:	ca 01       	movw	r24, r20
    1814:	a0 01       	movw	r20, r0
    1816:	11 24       	eor	r1, r1
    1818:	ff 27       	eor	r31, r31
    181a:	59 1b       	sub	r21, r25
    181c:	99 f0       	breq	.+38     	; 0x1844 <__addsf3x+0x5c>
    181e:	59 3f       	cpi	r21, 0xF9	; 249
    1820:	50 f4       	brcc	.+20     	; 0x1836 <__addsf3x+0x4e>
    1822:	50 3e       	cpi	r21, 0xE0	; 224
    1824:	68 f1       	brcs	.+90     	; 0x1880 <__addsf3x+0x98>
    1826:	1a 16       	cp	r1, r26
    1828:	f0 40       	sbci	r31, 0x00	; 0
    182a:	a2 2f       	mov	r26, r18
    182c:	23 2f       	mov	r18, r19
    182e:	34 2f       	mov	r19, r20
    1830:	44 27       	eor	r20, r20
    1832:	58 5f       	subi	r21, 0xF8	; 248
    1834:	f3 cf       	rjmp	.-26     	; 0x181c <__addsf3x+0x34>
    1836:	46 95       	lsr	r20
    1838:	37 95       	ror	r19
    183a:	27 95       	ror	r18
    183c:	a7 95       	ror	r26
    183e:	f0 40       	sbci	r31, 0x00	; 0
    1840:	53 95       	inc	r21
    1842:	c9 f7       	brne	.-14     	; 0x1836 <__addsf3x+0x4e>
    1844:	7e f4       	brtc	.+30     	; 0x1864 <__addsf3x+0x7c>
    1846:	1f 16       	cp	r1, r31
    1848:	ba 0b       	sbc	r27, r26
    184a:	62 0b       	sbc	r22, r18
    184c:	73 0b       	sbc	r23, r19
    184e:	84 0b       	sbc	r24, r20
    1850:	ba f0       	brmi	.+46     	; 0x1880 <__addsf3x+0x98>
    1852:	91 50       	subi	r25, 0x01	; 1
    1854:	a1 f0       	breq	.+40     	; 0x187e <__addsf3x+0x96>
    1856:	ff 0f       	add	r31, r31
    1858:	bb 1f       	adc	r27, r27
    185a:	66 1f       	adc	r22, r22
    185c:	77 1f       	adc	r23, r23
    185e:	88 1f       	adc	r24, r24
    1860:	c2 f7       	brpl	.-16     	; 0x1852 <__addsf3x+0x6a>
    1862:	0e c0       	rjmp	.+28     	; 0x1880 <__addsf3x+0x98>
    1864:	ba 0f       	add	r27, r26
    1866:	62 1f       	adc	r22, r18
    1868:	73 1f       	adc	r23, r19
    186a:	84 1f       	adc	r24, r20
    186c:	48 f4       	brcc	.+18     	; 0x1880 <__addsf3x+0x98>
    186e:	87 95       	ror	r24
    1870:	77 95       	ror	r23
    1872:	67 95       	ror	r22
    1874:	b7 95       	ror	r27
    1876:	f7 95       	ror	r31
    1878:	9e 3f       	cpi	r25, 0xFE	; 254
    187a:	08 f0       	brcs	.+2      	; 0x187e <__addsf3x+0x96>
    187c:	b3 cf       	rjmp	.-154    	; 0x17e4 <__addsf3+0x1e>
    187e:	93 95       	inc	r25
    1880:	88 0f       	add	r24, r24
    1882:	08 f0       	brcs	.+2      	; 0x1886 <__addsf3x+0x9e>
    1884:	99 27       	eor	r25, r25
    1886:	ee 0f       	add	r30, r30
    1888:	97 95       	ror	r25
    188a:	87 95       	ror	r24
    188c:	08 95       	ret
    188e:	8d d1       	rcall	.+794    	; 0x1baa <__fp_pscA>
    1890:	58 f0       	brcs	.+22     	; 0x18a8 <__addsf3x+0xc0>
    1892:	80 e8       	ldi	r24, 0x80	; 128
    1894:	91 e0       	ldi	r25, 0x01	; 1
    1896:	09 f4       	brne	.+2      	; 0x189a <__addsf3x+0xb2>
    1898:	9e ef       	ldi	r25, 0xFE	; 254
    189a:	8e d1       	rcall	.+796    	; 0x1bb8 <__fp_pscB>
    189c:	28 f0       	brcs	.+10     	; 0x18a8 <__addsf3x+0xc0>
    189e:	40 e8       	ldi	r20, 0x80	; 128
    18a0:	51 e0       	ldi	r21, 0x01	; 1
    18a2:	59 f4       	brne	.+22     	; 0x18ba <atan2+0xe>
    18a4:	5e ef       	ldi	r21, 0xFE	; 254
    18a6:	09 c0       	rjmp	.+18     	; 0x18ba <atan2+0xe>
    18a8:	58 c1       	rjmp	.+688    	; 0x1b5a <__fp_nan>
    18aa:	c0 c1       	rjmp	.+896    	; 0x1c2c <__fp_zero>

000018ac <atan2>:
    18ac:	e9 2f       	mov	r30, r25
    18ae:	e0 78       	andi	r30, 0x80	; 128
    18b0:	9b d1       	rcall	.+822    	; 0x1be8 <__fp_split3>
    18b2:	68 f3       	brcs	.-38     	; 0x188e <__addsf3x+0xa6>
    18b4:	09 2e       	mov	r0, r25
    18b6:	05 2a       	or	r0, r21
    18b8:	c1 f3       	breq	.-16     	; 0x18aa <__addsf3x+0xc2>
    18ba:	26 17       	cp	r18, r22
    18bc:	37 07       	cpc	r19, r23
    18be:	48 07       	cpc	r20, r24
    18c0:	59 07       	cpc	r21, r25
    18c2:	38 f0       	brcs	.+14     	; 0x18d2 <atan2+0x26>
    18c4:	0e 2e       	mov	r0, r30
    18c6:	07 f8       	bld	r0, 7
    18c8:	e0 25       	eor	r30, r0
    18ca:	69 f0       	breq	.+26     	; 0x18e6 <atan2+0x3a>
    18cc:	e0 25       	eor	r30, r0
    18ce:	e0 64       	ori	r30, 0x40	; 64
    18d0:	0a c0       	rjmp	.+20     	; 0x18e6 <atan2+0x3a>
    18d2:	ef 63       	ori	r30, 0x3F	; 63
    18d4:	07 f8       	bld	r0, 7
    18d6:	00 94       	com	r0
    18d8:	07 fa       	bst	r0, 7
    18da:	db 01       	movw	r26, r22
    18dc:	b9 01       	movw	r22, r18
    18de:	9d 01       	movw	r18, r26
    18e0:	dc 01       	movw	r26, r24
    18e2:	ca 01       	movw	r24, r20
    18e4:	ad 01       	movw	r20, r26
    18e6:	ef 93       	push	r30
    18e8:	47 d0       	rcall	.+142    	; 0x1978 <__divsf3_pse>
    18ea:	6d d1       	rcall	.+730    	; 0x1bc6 <__fp_round>
    18ec:	0a d0       	rcall	.+20     	; 0x1902 <atan>
    18ee:	5f 91       	pop	r21
    18f0:	55 23       	and	r21, r21
    18f2:	31 f0       	breq	.+12     	; 0x1900 <atan2+0x54>
    18f4:	2b ed       	ldi	r18, 0xDB	; 219
    18f6:	3f e0       	ldi	r19, 0x0F	; 15
    18f8:	49 e4       	ldi	r20, 0x49	; 73
    18fa:	50 fd       	sbrc	r21, 0
    18fc:	49 ec       	ldi	r20, 0xC9	; 201
    18fe:	63 cf       	rjmp	.-314    	; 0x17c6 <__addsf3>
    1900:	08 95       	ret

00001902 <atan>:
    1902:	df 93       	push	r29
    1904:	dd 27       	eor	r29, r29
    1906:	b9 2f       	mov	r27, r25
    1908:	bf 77       	andi	r27, 0x7F	; 127
    190a:	40 e8       	ldi	r20, 0x80	; 128
    190c:	5f e3       	ldi	r21, 0x3F	; 63
    190e:	16 16       	cp	r1, r22
    1910:	17 06       	cpc	r1, r23
    1912:	48 07       	cpc	r20, r24
    1914:	5b 07       	cpc	r21, r27
    1916:	10 f4       	brcc	.+4      	; 0x191c <atan+0x1a>
    1918:	d9 2f       	mov	r29, r25
    191a:	8f d1       	rcall	.+798    	; 0x1c3a <inverse>
    191c:	9f 93       	push	r25
    191e:	8f 93       	push	r24
    1920:	7f 93       	push	r23
    1922:	6f 93       	push	r22
    1924:	36 d2       	rcall	.+1132   	; 0x1d92 <square>
    1926:	e4 ee       	ldi	r30, 0xE4	; 228
    1928:	f0 e0       	ldi	r31, 0x00	; 0
    192a:	1a d1       	rcall	.+564    	; 0x1b60 <__fp_powser>
    192c:	4c d1       	rcall	.+664    	; 0x1bc6 <__fp_round>
    192e:	2f 91       	pop	r18
    1930:	3f 91       	pop	r19
    1932:	4f 91       	pop	r20
    1934:	5f 91       	pop	r21
    1936:	94 d1       	rcall	.+808    	; 0x1c60 <__mulsf3x>
    1938:	dd 23       	and	r29, r29
    193a:	49 f0       	breq	.+18     	; 0x194e <atan+0x4c>
    193c:	90 58       	subi	r25, 0x80	; 128
    193e:	a2 ea       	ldi	r26, 0xA2	; 162
    1940:	2a ed       	ldi	r18, 0xDA	; 218
    1942:	3f e0       	ldi	r19, 0x0F	; 15
    1944:	49 ec       	ldi	r20, 0xC9	; 201
    1946:	5f e3       	ldi	r21, 0x3F	; 63
    1948:	d0 78       	andi	r29, 0x80	; 128
    194a:	5d 27       	eor	r21, r29
    194c:	4d df       	rcall	.-358    	; 0x17e8 <__addsf3x>
    194e:	df 91       	pop	r29
    1950:	3a c1       	rjmp	.+628    	; 0x1bc6 <__fp_round>

00001952 <__cmpsf2>:
    1952:	d9 d0       	rcall	.+434    	; 0x1b06 <__fp_cmp>
    1954:	08 f4       	brcc	.+2      	; 0x1958 <__cmpsf2+0x6>
    1956:	81 e0       	ldi	r24, 0x01	; 1
    1958:	08 95       	ret

0000195a <__divsf3>:
    195a:	0c d0       	rcall	.+24     	; 0x1974 <__divsf3x>
    195c:	34 c1       	rjmp	.+616    	; 0x1bc6 <__fp_round>
    195e:	2c d1       	rcall	.+600    	; 0x1bb8 <__fp_pscB>
    1960:	40 f0       	brcs	.+16     	; 0x1972 <__divsf3+0x18>
    1962:	23 d1       	rcall	.+582    	; 0x1baa <__fp_pscA>
    1964:	30 f0       	brcs	.+12     	; 0x1972 <__divsf3+0x18>
    1966:	21 f4       	brne	.+8      	; 0x1970 <__divsf3+0x16>
    1968:	5f 3f       	cpi	r21, 0xFF	; 255
    196a:	19 f0       	breq	.+6      	; 0x1972 <__divsf3+0x18>
    196c:	f0 c0       	rjmp	.+480    	; 0x1b4e <__fp_inf>
    196e:	51 11       	cpse	r21, r1
    1970:	5e c1       	rjmp	.+700    	; 0x1c2e <__fp_szero>
    1972:	f3 c0       	rjmp	.+486    	; 0x1b5a <__fp_nan>

00001974 <__divsf3x>:
    1974:	39 d1       	rcall	.+626    	; 0x1be8 <__fp_split3>
    1976:	98 f3       	brcs	.-26     	; 0x195e <__divsf3+0x4>

00001978 <__divsf3_pse>:
    1978:	99 23       	and	r25, r25
    197a:	c9 f3       	breq	.-14     	; 0x196e <__divsf3+0x14>
    197c:	55 23       	and	r21, r21
    197e:	b1 f3       	breq	.-20     	; 0x196c <__divsf3+0x12>
    1980:	95 1b       	sub	r25, r21
    1982:	55 0b       	sbc	r21, r21
    1984:	bb 27       	eor	r27, r27
    1986:	aa 27       	eor	r26, r26
    1988:	62 17       	cp	r22, r18
    198a:	73 07       	cpc	r23, r19
    198c:	84 07       	cpc	r24, r20
    198e:	38 f0       	brcs	.+14     	; 0x199e <__divsf3_pse+0x26>
    1990:	9f 5f       	subi	r25, 0xFF	; 255
    1992:	5f 4f       	sbci	r21, 0xFF	; 255
    1994:	22 0f       	add	r18, r18
    1996:	33 1f       	adc	r19, r19
    1998:	44 1f       	adc	r20, r20
    199a:	aa 1f       	adc	r26, r26
    199c:	a9 f3       	breq	.-22     	; 0x1988 <__divsf3_pse+0x10>
    199e:	33 d0       	rcall	.+102    	; 0x1a06 <__divsf3_pse+0x8e>
    19a0:	0e 2e       	mov	r0, r30
    19a2:	3a f0       	brmi	.+14     	; 0x19b2 <__divsf3_pse+0x3a>
    19a4:	e0 e8       	ldi	r30, 0x80	; 128
    19a6:	30 d0       	rcall	.+96     	; 0x1a08 <__divsf3_pse+0x90>
    19a8:	91 50       	subi	r25, 0x01	; 1
    19aa:	50 40       	sbci	r21, 0x00	; 0
    19ac:	e6 95       	lsr	r30
    19ae:	00 1c       	adc	r0, r0
    19b0:	ca f7       	brpl	.-14     	; 0x19a4 <__divsf3_pse+0x2c>
    19b2:	29 d0       	rcall	.+82     	; 0x1a06 <__divsf3_pse+0x8e>
    19b4:	fe 2f       	mov	r31, r30
    19b6:	27 d0       	rcall	.+78     	; 0x1a06 <__divsf3_pse+0x8e>
    19b8:	66 0f       	add	r22, r22
    19ba:	77 1f       	adc	r23, r23
    19bc:	88 1f       	adc	r24, r24
    19be:	bb 1f       	adc	r27, r27
    19c0:	26 17       	cp	r18, r22
    19c2:	37 07       	cpc	r19, r23
    19c4:	48 07       	cpc	r20, r24
    19c6:	ab 07       	cpc	r26, r27
    19c8:	b0 e8       	ldi	r27, 0x80	; 128
    19ca:	09 f0       	breq	.+2      	; 0x19ce <__divsf3_pse+0x56>
    19cc:	bb 0b       	sbc	r27, r27
    19ce:	80 2d       	mov	r24, r0
    19d0:	bf 01       	movw	r22, r30
    19d2:	ff 27       	eor	r31, r31
    19d4:	93 58       	subi	r25, 0x83	; 131
    19d6:	5f 4f       	sbci	r21, 0xFF	; 255
    19d8:	2a f0       	brmi	.+10     	; 0x19e4 <__divsf3_pse+0x6c>
    19da:	9e 3f       	cpi	r25, 0xFE	; 254
    19dc:	51 05       	cpc	r21, r1
    19de:	68 f0       	brcs	.+26     	; 0x19fa <__divsf3_pse+0x82>
    19e0:	b6 c0       	rjmp	.+364    	; 0x1b4e <__fp_inf>
    19e2:	25 c1       	rjmp	.+586    	; 0x1c2e <__fp_szero>
    19e4:	5f 3f       	cpi	r21, 0xFF	; 255
    19e6:	ec f3       	brlt	.-6      	; 0x19e2 <__divsf3_pse+0x6a>
    19e8:	98 3e       	cpi	r25, 0xE8	; 232
    19ea:	dc f3       	brlt	.-10     	; 0x19e2 <__divsf3_pse+0x6a>
    19ec:	86 95       	lsr	r24
    19ee:	77 95       	ror	r23
    19f0:	67 95       	ror	r22
    19f2:	b7 95       	ror	r27
    19f4:	f7 95       	ror	r31
    19f6:	9f 5f       	subi	r25, 0xFF	; 255
    19f8:	c9 f7       	brne	.-14     	; 0x19ec <__divsf3_pse+0x74>
    19fa:	88 0f       	add	r24, r24
    19fc:	91 1d       	adc	r25, r1
    19fe:	96 95       	lsr	r25
    1a00:	87 95       	ror	r24
    1a02:	97 f9       	bld	r25, 7
    1a04:	08 95       	ret
    1a06:	e1 e0       	ldi	r30, 0x01	; 1
    1a08:	66 0f       	add	r22, r22
    1a0a:	77 1f       	adc	r23, r23
    1a0c:	88 1f       	adc	r24, r24
    1a0e:	bb 1f       	adc	r27, r27
    1a10:	62 17       	cp	r22, r18
    1a12:	73 07       	cpc	r23, r19
    1a14:	84 07       	cpc	r24, r20
    1a16:	ba 07       	cpc	r27, r26
    1a18:	20 f0       	brcs	.+8      	; 0x1a22 <__divsf3_pse+0xaa>
    1a1a:	62 1b       	sub	r22, r18
    1a1c:	73 0b       	sbc	r23, r19
    1a1e:	84 0b       	sbc	r24, r20
    1a20:	ba 0b       	sbc	r27, r26
    1a22:	ee 1f       	adc	r30, r30
    1a24:	88 f7       	brcc	.-30     	; 0x1a08 <__divsf3_pse+0x90>
    1a26:	e0 95       	com	r30
    1a28:	08 95       	ret

00001a2a <__fixsfsi>:
    1a2a:	04 d0       	rcall	.+8      	; 0x1a34 <__fixunssfsi>
    1a2c:	68 94       	set
    1a2e:	b1 11       	cpse	r27, r1
    1a30:	fe c0       	rjmp	.+508    	; 0x1c2e <__fp_szero>
    1a32:	08 95       	ret

00001a34 <__fixunssfsi>:
    1a34:	e1 d0       	rcall	.+450    	; 0x1bf8 <__fp_splitA>
    1a36:	88 f0       	brcs	.+34     	; 0x1a5a <__fixunssfsi+0x26>
    1a38:	9f 57       	subi	r25, 0x7F	; 127
    1a3a:	90 f0       	brcs	.+36     	; 0x1a60 <__fixunssfsi+0x2c>
    1a3c:	b9 2f       	mov	r27, r25
    1a3e:	99 27       	eor	r25, r25
    1a40:	b7 51       	subi	r27, 0x17	; 23
    1a42:	a0 f0       	brcs	.+40     	; 0x1a6c <__fixunssfsi+0x38>
    1a44:	d1 f0       	breq	.+52     	; 0x1a7a <__fixunssfsi+0x46>
    1a46:	66 0f       	add	r22, r22
    1a48:	77 1f       	adc	r23, r23
    1a4a:	88 1f       	adc	r24, r24
    1a4c:	99 1f       	adc	r25, r25
    1a4e:	1a f0       	brmi	.+6      	; 0x1a56 <__fixunssfsi+0x22>
    1a50:	ba 95       	dec	r27
    1a52:	c9 f7       	brne	.-14     	; 0x1a46 <__fixunssfsi+0x12>
    1a54:	12 c0       	rjmp	.+36     	; 0x1a7a <__fixunssfsi+0x46>
    1a56:	b1 30       	cpi	r27, 0x01	; 1
    1a58:	81 f0       	breq	.+32     	; 0x1a7a <__fixunssfsi+0x46>
    1a5a:	e8 d0       	rcall	.+464    	; 0x1c2c <__fp_zero>
    1a5c:	b1 e0       	ldi	r27, 0x01	; 1
    1a5e:	08 95       	ret
    1a60:	e5 c0       	rjmp	.+458    	; 0x1c2c <__fp_zero>
    1a62:	67 2f       	mov	r22, r23
    1a64:	78 2f       	mov	r23, r24
    1a66:	88 27       	eor	r24, r24
    1a68:	b8 5f       	subi	r27, 0xF8	; 248
    1a6a:	39 f0       	breq	.+14     	; 0x1a7a <__fixunssfsi+0x46>
    1a6c:	b9 3f       	cpi	r27, 0xF9	; 249
    1a6e:	cc f3       	brlt	.-14     	; 0x1a62 <__fixunssfsi+0x2e>
    1a70:	86 95       	lsr	r24
    1a72:	77 95       	ror	r23
    1a74:	67 95       	ror	r22
    1a76:	b3 95       	inc	r27
    1a78:	d9 f7       	brne	.-10     	; 0x1a70 <__fixunssfsi+0x3c>
    1a7a:	3e f4       	brtc	.+14     	; 0x1a8a <__fixunssfsi+0x56>
    1a7c:	90 95       	com	r25
    1a7e:	80 95       	com	r24
    1a80:	70 95       	com	r23
    1a82:	61 95       	neg	r22
    1a84:	7f 4f       	sbci	r23, 0xFF	; 255
    1a86:	8f 4f       	sbci	r24, 0xFF	; 255
    1a88:	9f 4f       	sbci	r25, 0xFF	; 255
    1a8a:	08 95       	ret

00001a8c <__floatunsisf>:
    1a8c:	e8 94       	clt
    1a8e:	09 c0       	rjmp	.+18     	; 0x1aa2 <__floatsisf+0x12>

00001a90 <__floatsisf>:
    1a90:	97 fb       	bst	r25, 7
    1a92:	3e f4       	brtc	.+14     	; 0x1aa2 <__floatsisf+0x12>
    1a94:	90 95       	com	r25
    1a96:	80 95       	com	r24
    1a98:	70 95       	com	r23
    1a9a:	61 95       	neg	r22
    1a9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a9e:	8f 4f       	sbci	r24, 0xFF	; 255
    1aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa2:	99 23       	and	r25, r25
    1aa4:	a9 f0       	breq	.+42     	; 0x1ad0 <__floatsisf+0x40>
    1aa6:	f9 2f       	mov	r31, r25
    1aa8:	96 e9       	ldi	r25, 0x96	; 150
    1aaa:	bb 27       	eor	r27, r27
    1aac:	93 95       	inc	r25
    1aae:	f6 95       	lsr	r31
    1ab0:	87 95       	ror	r24
    1ab2:	77 95       	ror	r23
    1ab4:	67 95       	ror	r22
    1ab6:	b7 95       	ror	r27
    1ab8:	f1 11       	cpse	r31, r1
    1aba:	f8 cf       	rjmp	.-16     	; 0x1aac <__floatsisf+0x1c>
    1abc:	fa f4       	brpl	.+62     	; 0x1afc <__floatsisf+0x6c>
    1abe:	bb 0f       	add	r27, r27
    1ac0:	11 f4       	brne	.+4      	; 0x1ac6 <__floatsisf+0x36>
    1ac2:	60 ff       	sbrs	r22, 0
    1ac4:	1b c0       	rjmp	.+54     	; 0x1afc <__floatsisf+0x6c>
    1ac6:	6f 5f       	subi	r22, 0xFF	; 255
    1ac8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aca:	8f 4f       	sbci	r24, 0xFF	; 255
    1acc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ace:	16 c0       	rjmp	.+44     	; 0x1afc <__floatsisf+0x6c>
    1ad0:	88 23       	and	r24, r24
    1ad2:	11 f0       	breq	.+4      	; 0x1ad8 <__floatsisf+0x48>
    1ad4:	96 e9       	ldi	r25, 0x96	; 150
    1ad6:	11 c0       	rjmp	.+34     	; 0x1afa <__floatsisf+0x6a>
    1ad8:	77 23       	and	r23, r23
    1ada:	21 f0       	breq	.+8      	; 0x1ae4 <__floatsisf+0x54>
    1adc:	9e e8       	ldi	r25, 0x8E	; 142
    1ade:	87 2f       	mov	r24, r23
    1ae0:	76 2f       	mov	r23, r22
    1ae2:	05 c0       	rjmp	.+10     	; 0x1aee <__floatsisf+0x5e>
    1ae4:	66 23       	and	r22, r22
    1ae6:	71 f0       	breq	.+28     	; 0x1b04 <__floatsisf+0x74>
    1ae8:	96 e8       	ldi	r25, 0x86	; 134
    1aea:	86 2f       	mov	r24, r22
    1aec:	70 e0       	ldi	r23, 0x00	; 0
    1aee:	60 e0       	ldi	r22, 0x00	; 0
    1af0:	2a f0       	brmi	.+10     	; 0x1afc <__floatsisf+0x6c>
    1af2:	9a 95       	dec	r25
    1af4:	66 0f       	add	r22, r22
    1af6:	77 1f       	adc	r23, r23
    1af8:	88 1f       	adc	r24, r24
    1afa:	da f7       	brpl	.-10     	; 0x1af2 <__floatsisf+0x62>
    1afc:	88 0f       	add	r24, r24
    1afe:	96 95       	lsr	r25
    1b00:	87 95       	ror	r24
    1b02:	97 f9       	bld	r25, 7
    1b04:	08 95       	ret

00001b06 <__fp_cmp>:
    1b06:	99 0f       	add	r25, r25
    1b08:	00 08       	sbc	r0, r0
    1b0a:	55 0f       	add	r21, r21
    1b0c:	aa 0b       	sbc	r26, r26
    1b0e:	e0 e8       	ldi	r30, 0x80	; 128
    1b10:	fe ef       	ldi	r31, 0xFE	; 254
    1b12:	16 16       	cp	r1, r22
    1b14:	17 06       	cpc	r1, r23
    1b16:	e8 07       	cpc	r30, r24
    1b18:	f9 07       	cpc	r31, r25
    1b1a:	c0 f0       	brcs	.+48     	; 0x1b4c <__fp_cmp+0x46>
    1b1c:	12 16       	cp	r1, r18
    1b1e:	13 06       	cpc	r1, r19
    1b20:	e4 07       	cpc	r30, r20
    1b22:	f5 07       	cpc	r31, r21
    1b24:	98 f0       	brcs	.+38     	; 0x1b4c <__fp_cmp+0x46>
    1b26:	62 1b       	sub	r22, r18
    1b28:	73 0b       	sbc	r23, r19
    1b2a:	84 0b       	sbc	r24, r20
    1b2c:	95 0b       	sbc	r25, r21
    1b2e:	39 f4       	brne	.+14     	; 0x1b3e <__fp_cmp+0x38>
    1b30:	0a 26       	eor	r0, r26
    1b32:	61 f0       	breq	.+24     	; 0x1b4c <__fp_cmp+0x46>
    1b34:	23 2b       	or	r18, r19
    1b36:	24 2b       	or	r18, r20
    1b38:	25 2b       	or	r18, r21
    1b3a:	21 f4       	brne	.+8      	; 0x1b44 <__fp_cmp+0x3e>
    1b3c:	08 95       	ret
    1b3e:	0a 26       	eor	r0, r26
    1b40:	09 f4       	brne	.+2      	; 0x1b44 <__fp_cmp+0x3e>
    1b42:	a1 40       	sbci	r26, 0x01	; 1
    1b44:	a6 95       	lsr	r26
    1b46:	8f ef       	ldi	r24, 0xFF	; 255
    1b48:	81 1d       	adc	r24, r1
    1b4a:	81 1d       	adc	r24, r1
    1b4c:	08 95       	ret

00001b4e <__fp_inf>:
    1b4e:	97 f9       	bld	r25, 7
    1b50:	9f 67       	ori	r25, 0x7F	; 127
    1b52:	80 e8       	ldi	r24, 0x80	; 128
    1b54:	70 e0       	ldi	r23, 0x00	; 0
    1b56:	60 e0       	ldi	r22, 0x00	; 0
    1b58:	08 95       	ret

00001b5a <__fp_nan>:
    1b5a:	9f ef       	ldi	r25, 0xFF	; 255
    1b5c:	80 ec       	ldi	r24, 0xC0	; 192
    1b5e:	08 95       	ret

00001b60 <__fp_powser>:
    1b60:	df 93       	push	r29
    1b62:	cf 93       	push	r28
    1b64:	1f 93       	push	r17
    1b66:	0f 93       	push	r16
    1b68:	ff 92       	push	r15
    1b6a:	ef 92       	push	r14
    1b6c:	df 92       	push	r13
    1b6e:	7b 01       	movw	r14, r22
    1b70:	8c 01       	movw	r16, r24
    1b72:	68 94       	set
    1b74:	05 c0       	rjmp	.+10     	; 0x1b80 <__fp_powser+0x20>
    1b76:	da 2e       	mov	r13, r26
    1b78:	ef 01       	movw	r28, r30
    1b7a:	72 d0       	rcall	.+228    	; 0x1c60 <__mulsf3x>
    1b7c:	fe 01       	movw	r30, r28
    1b7e:	e8 94       	clt
    1b80:	a5 91       	lpm	r26, Z+
    1b82:	25 91       	lpm	r18, Z+
    1b84:	35 91       	lpm	r19, Z+
    1b86:	45 91       	lpm	r20, Z+
    1b88:	55 91       	lpm	r21, Z+
    1b8a:	ae f3       	brts	.-22     	; 0x1b76 <__fp_powser+0x16>
    1b8c:	ef 01       	movw	r28, r30
    1b8e:	2c de       	rcall	.-936    	; 0x17e8 <__addsf3x>
    1b90:	fe 01       	movw	r30, r28
    1b92:	97 01       	movw	r18, r14
    1b94:	a8 01       	movw	r20, r16
    1b96:	da 94       	dec	r13
    1b98:	79 f7       	brne	.-34     	; 0x1b78 <__fp_powser+0x18>
    1b9a:	df 90       	pop	r13
    1b9c:	ef 90       	pop	r14
    1b9e:	ff 90       	pop	r15
    1ba0:	0f 91       	pop	r16
    1ba2:	1f 91       	pop	r17
    1ba4:	cf 91       	pop	r28
    1ba6:	df 91       	pop	r29
    1ba8:	08 95       	ret

00001baa <__fp_pscA>:
    1baa:	00 24       	eor	r0, r0
    1bac:	0a 94       	dec	r0
    1bae:	16 16       	cp	r1, r22
    1bb0:	17 06       	cpc	r1, r23
    1bb2:	18 06       	cpc	r1, r24
    1bb4:	09 06       	cpc	r0, r25
    1bb6:	08 95       	ret

00001bb8 <__fp_pscB>:
    1bb8:	00 24       	eor	r0, r0
    1bba:	0a 94       	dec	r0
    1bbc:	12 16       	cp	r1, r18
    1bbe:	13 06       	cpc	r1, r19
    1bc0:	14 06       	cpc	r1, r20
    1bc2:	05 06       	cpc	r0, r21
    1bc4:	08 95       	ret

00001bc6 <__fp_round>:
    1bc6:	09 2e       	mov	r0, r25
    1bc8:	03 94       	inc	r0
    1bca:	00 0c       	add	r0, r0
    1bcc:	11 f4       	brne	.+4      	; 0x1bd2 <__fp_round+0xc>
    1bce:	88 23       	and	r24, r24
    1bd0:	52 f0       	brmi	.+20     	; 0x1be6 <__fp_round+0x20>
    1bd2:	bb 0f       	add	r27, r27
    1bd4:	40 f4       	brcc	.+16     	; 0x1be6 <__fp_round+0x20>
    1bd6:	bf 2b       	or	r27, r31
    1bd8:	11 f4       	brne	.+4      	; 0x1bde <__fp_round+0x18>
    1bda:	60 ff       	sbrs	r22, 0
    1bdc:	04 c0       	rjmp	.+8      	; 0x1be6 <__fp_round+0x20>
    1bde:	6f 5f       	subi	r22, 0xFF	; 255
    1be0:	7f 4f       	sbci	r23, 0xFF	; 255
    1be2:	8f 4f       	sbci	r24, 0xFF	; 255
    1be4:	9f 4f       	sbci	r25, 0xFF	; 255
    1be6:	08 95       	ret

00001be8 <__fp_split3>:
    1be8:	57 fd       	sbrc	r21, 7
    1bea:	90 58       	subi	r25, 0x80	; 128
    1bec:	44 0f       	add	r20, r20
    1bee:	55 1f       	adc	r21, r21
    1bf0:	59 f0       	breq	.+22     	; 0x1c08 <__fp_splitA+0x10>
    1bf2:	5f 3f       	cpi	r21, 0xFF	; 255
    1bf4:	71 f0       	breq	.+28     	; 0x1c12 <__fp_splitA+0x1a>
    1bf6:	47 95       	ror	r20

00001bf8 <__fp_splitA>:
    1bf8:	88 0f       	add	r24, r24
    1bfa:	97 fb       	bst	r25, 7
    1bfc:	99 1f       	adc	r25, r25
    1bfe:	61 f0       	breq	.+24     	; 0x1c18 <__fp_splitA+0x20>
    1c00:	9f 3f       	cpi	r25, 0xFF	; 255
    1c02:	79 f0       	breq	.+30     	; 0x1c22 <__fp_splitA+0x2a>
    1c04:	87 95       	ror	r24
    1c06:	08 95       	ret
    1c08:	12 16       	cp	r1, r18
    1c0a:	13 06       	cpc	r1, r19
    1c0c:	14 06       	cpc	r1, r20
    1c0e:	55 1f       	adc	r21, r21
    1c10:	f2 cf       	rjmp	.-28     	; 0x1bf6 <__fp_split3+0xe>
    1c12:	46 95       	lsr	r20
    1c14:	f1 df       	rcall	.-30     	; 0x1bf8 <__fp_splitA>
    1c16:	08 c0       	rjmp	.+16     	; 0x1c28 <__fp_splitA+0x30>
    1c18:	16 16       	cp	r1, r22
    1c1a:	17 06       	cpc	r1, r23
    1c1c:	18 06       	cpc	r1, r24
    1c1e:	99 1f       	adc	r25, r25
    1c20:	f1 cf       	rjmp	.-30     	; 0x1c04 <__fp_splitA+0xc>
    1c22:	86 95       	lsr	r24
    1c24:	71 05       	cpc	r23, r1
    1c26:	61 05       	cpc	r22, r1
    1c28:	08 94       	sec
    1c2a:	08 95       	ret

00001c2c <__fp_zero>:
    1c2c:	e8 94       	clt

00001c2e <__fp_szero>:
    1c2e:	bb 27       	eor	r27, r27
    1c30:	66 27       	eor	r22, r22
    1c32:	77 27       	eor	r23, r23
    1c34:	cb 01       	movw	r24, r22
    1c36:	97 f9       	bld	r25, 7
    1c38:	08 95       	ret

00001c3a <inverse>:
    1c3a:	9b 01       	movw	r18, r22
    1c3c:	ac 01       	movw	r20, r24
    1c3e:	60 e0       	ldi	r22, 0x00	; 0
    1c40:	70 e0       	ldi	r23, 0x00	; 0
    1c42:	80 e8       	ldi	r24, 0x80	; 128
    1c44:	9f e3       	ldi	r25, 0x3F	; 63
    1c46:	89 ce       	rjmp	.-750    	; 0x195a <__divsf3>

00001c48 <__mulsf3>:
    1c48:	0b d0       	rcall	.+22     	; 0x1c60 <__mulsf3x>
    1c4a:	bd cf       	rjmp	.-134    	; 0x1bc6 <__fp_round>
    1c4c:	ae df       	rcall	.-164    	; 0x1baa <__fp_pscA>
    1c4e:	28 f0       	brcs	.+10     	; 0x1c5a <__mulsf3+0x12>
    1c50:	b3 df       	rcall	.-154    	; 0x1bb8 <__fp_pscB>
    1c52:	18 f0       	brcs	.+6      	; 0x1c5a <__mulsf3+0x12>
    1c54:	95 23       	and	r25, r21
    1c56:	09 f0       	breq	.+2      	; 0x1c5a <__mulsf3+0x12>
    1c58:	7a cf       	rjmp	.-268    	; 0x1b4e <__fp_inf>
    1c5a:	7f cf       	rjmp	.-258    	; 0x1b5a <__fp_nan>
    1c5c:	11 24       	eor	r1, r1
    1c5e:	e7 cf       	rjmp	.-50     	; 0x1c2e <__fp_szero>

00001c60 <__mulsf3x>:
    1c60:	c3 df       	rcall	.-122    	; 0x1be8 <__fp_split3>
    1c62:	a0 f3       	brcs	.-24     	; 0x1c4c <__mulsf3+0x4>

00001c64 <__mulsf3_pse>:
    1c64:	95 9f       	mul	r25, r21
    1c66:	d1 f3       	breq	.-12     	; 0x1c5c <__mulsf3+0x14>
    1c68:	95 0f       	add	r25, r21
    1c6a:	50 e0       	ldi	r21, 0x00	; 0
    1c6c:	55 1f       	adc	r21, r21
    1c6e:	62 9f       	mul	r22, r18
    1c70:	f0 01       	movw	r30, r0
    1c72:	72 9f       	mul	r23, r18
    1c74:	bb 27       	eor	r27, r27
    1c76:	f0 0d       	add	r31, r0
    1c78:	b1 1d       	adc	r27, r1
    1c7a:	63 9f       	mul	r22, r19
    1c7c:	aa 27       	eor	r26, r26
    1c7e:	f0 0d       	add	r31, r0
    1c80:	b1 1d       	adc	r27, r1
    1c82:	aa 1f       	adc	r26, r26
    1c84:	64 9f       	mul	r22, r20
    1c86:	66 27       	eor	r22, r22
    1c88:	b0 0d       	add	r27, r0
    1c8a:	a1 1d       	adc	r26, r1
    1c8c:	66 1f       	adc	r22, r22
    1c8e:	82 9f       	mul	r24, r18
    1c90:	22 27       	eor	r18, r18
    1c92:	b0 0d       	add	r27, r0
    1c94:	a1 1d       	adc	r26, r1
    1c96:	62 1f       	adc	r22, r18
    1c98:	73 9f       	mul	r23, r19
    1c9a:	b0 0d       	add	r27, r0
    1c9c:	a1 1d       	adc	r26, r1
    1c9e:	62 1f       	adc	r22, r18
    1ca0:	83 9f       	mul	r24, r19
    1ca2:	a0 0d       	add	r26, r0
    1ca4:	61 1d       	adc	r22, r1
    1ca6:	22 1f       	adc	r18, r18
    1ca8:	74 9f       	mul	r23, r20
    1caa:	33 27       	eor	r19, r19
    1cac:	a0 0d       	add	r26, r0
    1cae:	61 1d       	adc	r22, r1
    1cb0:	23 1f       	adc	r18, r19
    1cb2:	84 9f       	mul	r24, r20
    1cb4:	60 0d       	add	r22, r0
    1cb6:	21 1d       	adc	r18, r1
    1cb8:	82 2f       	mov	r24, r18
    1cba:	76 2f       	mov	r23, r22
    1cbc:	6a 2f       	mov	r22, r26
    1cbe:	11 24       	eor	r1, r1
    1cc0:	9f 57       	subi	r25, 0x7F	; 127
    1cc2:	50 40       	sbci	r21, 0x00	; 0
    1cc4:	8a f0       	brmi	.+34     	; 0x1ce8 <__mulsf3_pse+0x84>
    1cc6:	e1 f0       	breq	.+56     	; 0x1d00 <__mulsf3_pse+0x9c>
    1cc8:	88 23       	and	r24, r24
    1cca:	4a f0       	brmi	.+18     	; 0x1cde <__mulsf3_pse+0x7a>
    1ccc:	ee 0f       	add	r30, r30
    1cce:	ff 1f       	adc	r31, r31
    1cd0:	bb 1f       	adc	r27, r27
    1cd2:	66 1f       	adc	r22, r22
    1cd4:	77 1f       	adc	r23, r23
    1cd6:	88 1f       	adc	r24, r24
    1cd8:	91 50       	subi	r25, 0x01	; 1
    1cda:	50 40       	sbci	r21, 0x00	; 0
    1cdc:	a9 f7       	brne	.-22     	; 0x1cc8 <__mulsf3_pse+0x64>
    1cde:	9e 3f       	cpi	r25, 0xFE	; 254
    1ce0:	51 05       	cpc	r21, r1
    1ce2:	70 f0       	brcs	.+28     	; 0x1d00 <__mulsf3_pse+0x9c>
    1ce4:	34 cf       	rjmp	.-408    	; 0x1b4e <__fp_inf>
    1ce6:	a3 cf       	rjmp	.-186    	; 0x1c2e <__fp_szero>
    1ce8:	5f 3f       	cpi	r21, 0xFF	; 255
    1cea:	ec f3       	brlt	.-6      	; 0x1ce6 <__mulsf3_pse+0x82>
    1cec:	98 3e       	cpi	r25, 0xE8	; 232
    1cee:	dc f3       	brlt	.-10     	; 0x1ce6 <__mulsf3_pse+0x82>
    1cf0:	86 95       	lsr	r24
    1cf2:	77 95       	ror	r23
    1cf4:	67 95       	ror	r22
    1cf6:	b7 95       	ror	r27
    1cf8:	f7 95       	ror	r31
    1cfa:	e7 95       	ror	r30
    1cfc:	9f 5f       	subi	r25, 0xFF	; 255
    1cfe:	c1 f7       	brne	.-16     	; 0x1cf0 <__mulsf3_pse+0x8c>
    1d00:	fe 2b       	or	r31, r30
    1d02:	88 0f       	add	r24, r24
    1d04:	91 1d       	adc	r25, r1
    1d06:	96 95       	lsr	r25
    1d08:	87 95       	ror	r24
    1d0a:	97 f9       	bld	r25, 7
    1d0c:	08 95       	ret
    1d0e:	11 f4       	brne	.+4      	; 0x1d14 <__mulsf3_pse+0xb0>
    1d10:	0e f4       	brtc	.+2      	; 0x1d14 <__mulsf3_pse+0xb0>
    1d12:	23 cf       	rjmp	.-442    	; 0x1b5a <__fp_nan>
    1d14:	41 c0       	rjmp	.+130    	; 0x1d98 <__fp_mpack>

00001d16 <sqrt>:
    1d16:	70 df       	rcall	.-288    	; 0x1bf8 <__fp_splitA>
    1d18:	d0 f3       	brcs	.-12     	; 0x1d0e <__mulsf3_pse+0xaa>
    1d1a:	99 23       	and	r25, r25
    1d1c:	d9 f3       	breq	.-10     	; 0x1d14 <__mulsf3_pse+0xb0>
    1d1e:	ce f3       	brts	.-14     	; 0x1d12 <__mulsf3_pse+0xae>
    1d20:	9f 57       	subi	r25, 0x7F	; 127
    1d22:	55 0b       	sbc	r21, r21
    1d24:	87 ff       	sbrs	r24, 7
    1d26:	46 d0       	rcall	.+140    	; 0x1db4 <__fp_norm2>
    1d28:	00 24       	eor	r0, r0
    1d2a:	a0 e6       	ldi	r26, 0x60	; 96
    1d2c:	40 ea       	ldi	r20, 0xA0	; 160
    1d2e:	90 01       	movw	r18, r0
    1d30:	80 58       	subi	r24, 0x80	; 128
    1d32:	56 95       	lsr	r21
    1d34:	97 95       	ror	r25
    1d36:	28 f4       	brcc	.+10     	; 0x1d42 <sqrt+0x2c>
    1d38:	80 5c       	subi	r24, 0xC0	; 192
    1d3a:	66 0f       	add	r22, r22
    1d3c:	77 1f       	adc	r23, r23
    1d3e:	88 1f       	adc	r24, r24
    1d40:	20 f0       	brcs	.+8      	; 0x1d4a <sqrt+0x34>
    1d42:	26 17       	cp	r18, r22
    1d44:	37 07       	cpc	r19, r23
    1d46:	48 07       	cpc	r20, r24
    1d48:	30 f4       	brcc	.+12     	; 0x1d56 <sqrt+0x40>
    1d4a:	62 1b       	sub	r22, r18
    1d4c:	73 0b       	sbc	r23, r19
    1d4e:	84 0b       	sbc	r24, r20
    1d50:	20 29       	or	r18, r0
    1d52:	31 29       	or	r19, r1
    1d54:	4a 2b       	or	r20, r26
    1d56:	a6 95       	lsr	r26
    1d58:	17 94       	ror	r1
    1d5a:	07 94       	ror	r0
    1d5c:	20 25       	eor	r18, r0
    1d5e:	31 25       	eor	r19, r1
    1d60:	4a 27       	eor	r20, r26
    1d62:	58 f7       	brcc	.-42     	; 0x1d3a <sqrt+0x24>
    1d64:	66 0f       	add	r22, r22
    1d66:	77 1f       	adc	r23, r23
    1d68:	88 1f       	adc	r24, r24
    1d6a:	20 f0       	brcs	.+8      	; 0x1d74 <sqrt+0x5e>
    1d6c:	26 17       	cp	r18, r22
    1d6e:	37 07       	cpc	r19, r23
    1d70:	48 07       	cpc	r20, r24
    1d72:	30 f4       	brcc	.+12     	; 0x1d80 <sqrt+0x6a>
    1d74:	62 0b       	sbc	r22, r18
    1d76:	73 0b       	sbc	r23, r19
    1d78:	84 0b       	sbc	r24, r20
    1d7a:	20 0d       	add	r18, r0
    1d7c:	31 1d       	adc	r19, r1
    1d7e:	41 1d       	adc	r20, r1
    1d80:	a0 95       	com	r26
    1d82:	81 f7       	brne	.-32     	; 0x1d64 <sqrt+0x4e>
    1d84:	b9 01       	movw	r22, r18
    1d86:	84 2f       	mov	r24, r20
    1d88:	91 58       	subi	r25, 0x81	; 129
    1d8a:	88 0f       	add	r24, r24
    1d8c:	96 95       	lsr	r25
    1d8e:	87 95       	ror	r24
    1d90:	08 95       	ret

00001d92 <square>:
    1d92:	9b 01       	movw	r18, r22
    1d94:	ac 01       	movw	r20, r24
    1d96:	58 cf       	rjmp	.-336    	; 0x1c48 <__mulsf3>

00001d98 <__fp_mpack>:
    1d98:	9f 3f       	cpi	r25, 0xFF	; 255
    1d9a:	31 f0       	breq	.+12     	; 0x1da8 <__fp_mpack_finite+0xc>

00001d9c <__fp_mpack_finite>:
    1d9c:	91 50       	subi	r25, 0x01	; 1
    1d9e:	20 f4       	brcc	.+8      	; 0x1da8 <__fp_mpack_finite+0xc>
    1da0:	87 95       	ror	r24
    1da2:	77 95       	ror	r23
    1da4:	67 95       	ror	r22
    1da6:	b7 95       	ror	r27
    1da8:	88 0f       	add	r24, r24
    1daa:	91 1d       	adc	r25, r1
    1dac:	96 95       	lsr	r25
    1dae:	87 95       	ror	r24
    1db0:	97 f9       	bld	r25, 7
    1db2:	08 95       	ret

00001db4 <__fp_norm2>:
    1db4:	91 50       	subi	r25, 0x01	; 1
    1db6:	50 40       	sbci	r21, 0x00	; 0
    1db8:	66 0f       	add	r22, r22
    1dba:	77 1f       	adc	r23, r23
    1dbc:	88 1f       	adc	r24, r24
    1dbe:	d2 f7       	brpl	.-12     	; 0x1db4 <__fp_norm2>
    1dc0:	08 95       	ret

00001dc2 <vfprintf>:
    1dc2:	2f 92       	push	r2
    1dc4:	3f 92       	push	r3
    1dc6:	4f 92       	push	r4
    1dc8:	5f 92       	push	r5
    1dca:	6f 92       	push	r6
    1dcc:	7f 92       	push	r7
    1dce:	8f 92       	push	r8
    1dd0:	9f 92       	push	r9
    1dd2:	af 92       	push	r10
    1dd4:	bf 92       	push	r11
    1dd6:	cf 92       	push	r12
    1dd8:	df 92       	push	r13
    1dda:	ef 92       	push	r14
    1ddc:	ff 92       	push	r15
    1dde:	0f 93       	push	r16
    1de0:	1f 93       	push	r17
    1de2:	cf 93       	push	r28
    1de4:	df 93       	push	r29
    1de6:	cd b7       	in	r28, 0x3d	; 61
    1de8:	de b7       	in	r29, 0x3e	; 62
    1dea:	60 97       	sbiw	r28, 0x10	; 16
    1dec:	0f b6       	in	r0, 0x3f	; 63
    1dee:	f8 94       	cli
    1df0:	de bf       	out	0x3e, r29	; 62
    1df2:	0f be       	out	0x3f, r0	; 63
    1df4:	cd bf       	out	0x3d, r28	; 61
    1df6:	7c 01       	movw	r14, r24
    1df8:	1b 01       	movw	r2, r22
    1dfa:	6a 01       	movw	r12, r20
    1dfc:	fc 01       	movw	r30, r24
    1dfe:	17 82       	std	Z+7, r1	; 0x07
    1e00:	16 82       	std	Z+6, r1	; 0x06
    1e02:	83 81       	ldd	r24, Z+3	; 0x03
    1e04:	81 ff       	sbrs	r24, 1
    1e06:	2a c3       	rjmp	.+1620   	; 0x245c <__stack+0x25d>
    1e08:	9e 01       	movw	r18, r28
    1e0a:	2f 5f       	subi	r18, 0xFF	; 255
    1e0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e0e:	39 01       	movw	r6, r18
    1e10:	f7 01       	movw	r30, r14
    1e12:	93 81       	ldd	r25, Z+3	; 0x03
    1e14:	f1 01       	movw	r30, r2
    1e16:	93 fd       	sbrc	r25, 3
    1e18:	85 91       	lpm	r24, Z+
    1e1a:	93 ff       	sbrs	r25, 3
    1e1c:	81 91       	ld	r24, Z+
    1e1e:	1f 01       	movw	r2, r30
    1e20:	88 23       	and	r24, r24
    1e22:	09 f4       	brne	.+2      	; 0x1e26 <vfprintf+0x64>
    1e24:	17 c3       	rjmp	.+1582   	; 0x2454 <__stack+0x255>
    1e26:	85 32       	cpi	r24, 0x25	; 37
    1e28:	39 f4       	brne	.+14     	; 0x1e38 <vfprintf+0x76>
    1e2a:	93 fd       	sbrc	r25, 3
    1e2c:	85 91       	lpm	r24, Z+
    1e2e:	93 ff       	sbrs	r25, 3
    1e30:	81 91       	ld	r24, Z+
    1e32:	1f 01       	movw	r2, r30
    1e34:	85 32       	cpi	r24, 0x25	; 37
    1e36:	31 f4       	brne	.+12     	; 0x1e44 <vfprintf+0x82>
    1e38:	b7 01       	movw	r22, r14
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	cd d4       	rcall	.+2458   	; 0x27d8 <fputc>
    1e3e:	56 01       	movw	r10, r12
    1e40:	65 01       	movw	r12, r10
    1e42:	e6 cf       	rjmp	.-52     	; 0x1e10 <vfprintf+0x4e>
    1e44:	10 e0       	ldi	r17, 0x00	; 0
    1e46:	51 2c       	mov	r5, r1
    1e48:	91 2c       	mov	r9, r1
    1e4a:	ff e1       	ldi	r31, 0x1F	; 31
    1e4c:	f9 15       	cp	r31, r9
    1e4e:	d8 f0       	brcs	.+54     	; 0x1e86 <vfprintf+0xc4>
    1e50:	8b 32       	cpi	r24, 0x2B	; 43
    1e52:	79 f0       	breq	.+30     	; 0x1e72 <vfprintf+0xb0>
    1e54:	38 f4       	brcc	.+14     	; 0x1e64 <vfprintf+0xa2>
    1e56:	80 32       	cpi	r24, 0x20	; 32
    1e58:	79 f0       	breq	.+30     	; 0x1e78 <vfprintf+0xb6>
    1e5a:	83 32       	cpi	r24, 0x23	; 35
    1e5c:	a1 f4       	brne	.+40     	; 0x1e86 <vfprintf+0xc4>
    1e5e:	f9 2d       	mov	r31, r9
    1e60:	f0 61       	ori	r31, 0x10	; 16
    1e62:	2e c0       	rjmp	.+92     	; 0x1ec0 <vfprintf+0xfe>
    1e64:	8d 32       	cpi	r24, 0x2D	; 45
    1e66:	61 f0       	breq	.+24     	; 0x1e80 <vfprintf+0xbe>
    1e68:	80 33       	cpi	r24, 0x30	; 48
    1e6a:	69 f4       	brne	.+26     	; 0x1e86 <vfprintf+0xc4>
    1e6c:	29 2d       	mov	r18, r9
    1e6e:	21 60       	ori	r18, 0x01	; 1
    1e70:	2d c0       	rjmp	.+90     	; 0x1ecc <vfprintf+0x10a>
    1e72:	39 2d       	mov	r19, r9
    1e74:	32 60       	ori	r19, 0x02	; 2
    1e76:	93 2e       	mov	r9, r19
    1e78:	89 2d       	mov	r24, r9
    1e7a:	84 60       	ori	r24, 0x04	; 4
    1e7c:	98 2e       	mov	r9, r24
    1e7e:	2a c0       	rjmp	.+84     	; 0x1ed4 <vfprintf+0x112>
    1e80:	e9 2d       	mov	r30, r9
    1e82:	e8 60       	ori	r30, 0x08	; 8
    1e84:	15 c0       	rjmp	.+42     	; 0x1eb0 <vfprintf+0xee>
    1e86:	97 fc       	sbrc	r9, 7
    1e88:	2d c0       	rjmp	.+90     	; 0x1ee4 <vfprintf+0x122>
    1e8a:	20 ed       	ldi	r18, 0xD0	; 208
    1e8c:	28 0f       	add	r18, r24
    1e8e:	2a 30       	cpi	r18, 0x0A	; 10
    1e90:	88 f4       	brcc	.+34     	; 0x1eb4 <vfprintf+0xf2>
    1e92:	96 fe       	sbrs	r9, 6
    1e94:	06 c0       	rjmp	.+12     	; 0x1ea2 <vfprintf+0xe0>
    1e96:	3a e0       	ldi	r19, 0x0A	; 10
    1e98:	13 9f       	mul	r17, r19
    1e9a:	20 0d       	add	r18, r0
    1e9c:	11 24       	eor	r1, r1
    1e9e:	12 2f       	mov	r17, r18
    1ea0:	19 c0       	rjmp	.+50     	; 0x1ed4 <vfprintf+0x112>
    1ea2:	8a e0       	ldi	r24, 0x0A	; 10
    1ea4:	58 9e       	mul	r5, r24
    1ea6:	20 0d       	add	r18, r0
    1ea8:	11 24       	eor	r1, r1
    1eaa:	52 2e       	mov	r5, r18
    1eac:	e9 2d       	mov	r30, r9
    1eae:	e0 62       	ori	r30, 0x20	; 32
    1eb0:	9e 2e       	mov	r9, r30
    1eb2:	10 c0       	rjmp	.+32     	; 0x1ed4 <vfprintf+0x112>
    1eb4:	8e 32       	cpi	r24, 0x2E	; 46
    1eb6:	31 f4       	brne	.+12     	; 0x1ec4 <vfprintf+0x102>
    1eb8:	96 fc       	sbrc	r9, 6
    1eba:	cc c2       	rjmp	.+1432   	; 0x2454 <__stack+0x255>
    1ebc:	f9 2d       	mov	r31, r9
    1ebe:	f0 64       	ori	r31, 0x40	; 64
    1ec0:	9f 2e       	mov	r9, r31
    1ec2:	08 c0       	rjmp	.+16     	; 0x1ed4 <vfprintf+0x112>
    1ec4:	8c 36       	cpi	r24, 0x6C	; 108
    1ec6:	21 f4       	brne	.+8      	; 0x1ed0 <vfprintf+0x10e>
    1ec8:	29 2d       	mov	r18, r9
    1eca:	20 68       	ori	r18, 0x80	; 128
    1ecc:	92 2e       	mov	r9, r18
    1ece:	02 c0       	rjmp	.+4      	; 0x1ed4 <vfprintf+0x112>
    1ed0:	88 36       	cpi	r24, 0x68	; 104
    1ed2:	41 f4       	brne	.+16     	; 0x1ee4 <vfprintf+0x122>
    1ed4:	f1 01       	movw	r30, r2
    1ed6:	93 fd       	sbrc	r25, 3
    1ed8:	85 91       	lpm	r24, Z+
    1eda:	93 ff       	sbrs	r25, 3
    1edc:	81 91       	ld	r24, Z+
    1ede:	1f 01       	movw	r2, r30
    1ee0:	81 11       	cpse	r24, r1
    1ee2:	b3 cf       	rjmp	.-154    	; 0x1e4a <vfprintf+0x88>
    1ee4:	9b eb       	ldi	r25, 0xBB	; 187
    1ee6:	98 0f       	add	r25, r24
    1ee8:	93 30       	cpi	r25, 0x03	; 3
    1eea:	20 f4       	brcc	.+8      	; 0x1ef4 <vfprintf+0x132>
    1eec:	99 2d       	mov	r25, r9
    1eee:	90 61       	ori	r25, 0x10	; 16
    1ef0:	80 5e       	subi	r24, 0xE0	; 224
    1ef2:	07 c0       	rjmp	.+14     	; 0x1f02 <vfprintf+0x140>
    1ef4:	9b e9       	ldi	r25, 0x9B	; 155
    1ef6:	98 0f       	add	r25, r24
    1ef8:	93 30       	cpi	r25, 0x03	; 3
    1efa:	08 f0       	brcs	.+2      	; 0x1efe <vfprintf+0x13c>
    1efc:	59 c1       	rjmp	.+690    	; 0x21b0 <vfprintf+0x3ee>
    1efe:	99 2d       	mov	r25, r9
    1f00:	9f 7e       	andi	r25, 0xEF	; 239
    1f02:	96 ff       	sbrs	r25, 6
    1f04:	16 e0       	ldi	r17, 0x06	; 6
    1f06:	9f 73       	andi	r25, 0x3F	; 63
    1f08:	99 2e       	mov	r9, r25
    1f0a:	85 36       	cpi	r24, 0x65	; 101
    1f0c:	19 f4       	brne	.+6      	; 0x1f14 <vfprintf+0x152>
    1f0e:	90 64       	ori	r25, 0x40	; 64
    1f10:	99 2e       	mov	r9, r25
    1f12:	08 c0       	rjmp	.+16     	; 0x1f24 <vfprintf+0x162>
    1f14:	86 36       	cpi	r24, 0x66	; 102
    1f16:	21 f4       	brne	.+8      	; 0x1f20 <vfprintf+0x15e>
    1f18:	39 2f       	mov	r19, r25
    1f1a:	30 68       	ori	r19, 0x80	; 128
    1f1c:	93 2e       	mov	r9, r19
    1f1e:	02 c0       	rjmp	.+4      	; 0x1f24 <vfprintf+0x162>
    1f20:	11 11       	cpse	r17, r1
    1f22:	11 50       	subi	r17, 0x01	; 1
    1f24:	97 fe       	sbrs	r9, 7
    1f26:	07 c0       	rjmp	.+14     	; 0x1f36 <vfprintf+0x174>
    1f28:	1c 33       	cpi	r17, 0x3C	; 60
    1f2a:	50 f4       	brcc	.+20     	; 0x1f40 <vfprintf+0x17e>
    1f2c:	44 24       	eor	r4, r4
    1f2e:	43 94       	inc	r4
    1f30:	41 0e       	add	r4, r17
    1f32:	27 e0       	ldi	r18, 0x07	; 7
    1f34:	0b c0       	rjmp	.+22     	; 0x1f4c <vfprintf+0x18a>
    1f36:	18 30       	cpi	r17, 0x08	; 8
    1f38:	38 f0       	brcs	.+14     	; 0x1f48 <vfprintf+0x186>
    1f3a:	27 e0       	ldi	r18, 0x07	; 7
    1f3c:	17 e0       	ldi	r17, 0x07	; 7
    1f3e:	05 c0       	rjmp	.+10     	; 0x1f4a <vfprintf+0x188>
    1f40:	27 e0       	ldi	r18, 0x07	; 7
    1f42:	9c e3       	ldi	r25, 0x3C	; 60
    1f44:	49 2e       	mov	r4, r25
    1f46:	02 c0       	rjmp	.+4      	; 0x1f4c <vfprintf+0x18a>
    1f48:	21 2f       	mov	r18, r17
    1f4a:	41 2c       	mov	r4, r1
    1f4c:	56 01       	movw	r10, r12
    1f4e:	84 e0       	ldi	r24, 0x04	; 4
    1f50:	a8 0e       	add	r10, r24
    1f52:	b1 1c       	adc	r11, r1
    1f54:	f6 01       	movw	r30, r12
    1f56:	60 81       	ld	r22, Z
    1f58:	71 81       	ldd	r23, Z+1	; 0x01
    1f5a:	82 81       	ldd	r24, Z+2	; 0x02
    1f5c:	93 81       	ldd	r25, Z+3	; 0x03
    1f5e:	04 2d       	mov	r16, r4
    1f60:	a3 01       	movw	r20, r6
    1f62:	df d2       	rcall	.+1470   	; 0x2522 <__ftoa_engine>
    1f64:	6c 01       	movw	r12, r24
    1f66:	f9 81       	ldd	r31, Y+1	; 0x01
    1f68:	fc 87       	std	Y+12, r31	; 0x0c
    1f6a:	f0 ff       	sbrs	r31, 0
    1f6c:	02 c0       	rjmp	.+4      	; 0x1f72 <vfprintf+0x1b0>
    1f6e:	f3 ff       	sbrs	r31, 3
    1f70:	06 c0       	rjmp	.+12     	; 0x1f7e <vfprintf+0x1bc>
    1f72:	91 fc       	sbrc	r9, 1
    1f74:	06 c0       	rjmp	.+12     	; 0x1f82 <vfprintf+0x1c0>
    1f76:	92 fe       	sbrs	r9, 2
    1f78:	06 c0       	rjmp	.+12     	; 0x1f86 <vfprintf+0x1c4>
    1f7a:	00 e2       	ldi	r16, 0x20	; 32
    1f7c:	05 c0       	rjmp	.+10     	; 0x1f88 <vfprintf+0x1c6>
    1f7e:	0d e2       	ldi	r16, 0x2D	; 45
    1f80:	03 c0       	rjmp	.+6      	; 0x1f88 <vfprintf+0x1c6>
    1f82:	0b e2       	ldi	r16, 0x2B	; 43
    1f84:	01 c0       	rjmp	.+2      	; 0x1f88 <vfprintf+0x1c6>
    1f86:	00 e0       	ldi	r16, 0x00	; 0
    1f88:	8c 85       	ldd	r24, Y+12	; 0x0c
    1f8a:	8c 70       	andi	r24, 0x0C	; 12
    1f8c:	19 f0       	breq	.+6      	; 0x1f94 <vfprintf+0x1d2>
    1f8e:	01 11       	cpse	r16, r1
    1f90:	43 c2       	rjmp	.+1158   	; 0x2418 <__stack+0x219>
    1f92:	80 c2       	rjmp	.+1280   	; 0x2494 <__stack+0x295>
    1f94:	97 fe       	sbrs	r9, 7
    1f96:	10 c0       	rjmp	.+32     	; 0x1fb8 <vfprintf+0x1f6>
    1f98:	4c 0c       	add	r4, r12
    1f9a:	fc 85       	ldd	r31, Y+12	; 0x0c
    1f9c:	f4 ff       	sbrs	r31, 4
    1f9e:	04 c0       	rjmp	.+8      	; 0x1fa8 <vfprintf+0x1e6>
    1fa0:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa2:	81 33       	cpi	r24, 0x31	; 49
    1fa4:	09 f4       	brne	.+2      	; 0x1fa8 <vfprintf+0x1e6>
    1fa6:	4a 94       	dec	r4
    1fa8:	14 14       	cp	r1, r4
    1faa:	74 f5       	brge	.+92     	; 0x2008 <vfprintf+0x246>
    1fac:	28 e0       	ldi	r18, 0x08	; 8
    1fae:	24 15       	cp	r18, r4
    1fb0:	78 f5       	brcc	.+94     	; 0x2010 <vfprintf+0x24e>
    1fb2:	88 e0       	ldi	r24, 0x08	; 8
    1fb4:	48 2e       	mov	r4, r24
    1fb6:	2c c0       	rjmp	.+88     	; 0x2010 <vfprintf+0x24e>
    1fb8:	96 fc       	sbrc	r9, 6
    1fba:	2a c0       	rjmp	.+84     	; 0x2010 <vfprintf+0x24e>
    1fbc:	81 2f       	mov	r24, r17
    1fbe:	90 e0       	ldi	r25, 0x00	; 0
    1fc0:	8c 15       	cp	r24, r12
    1fc2:	9d 05       	cpc	r25, r13
    1fc4:	9c f0       	brlt	.+38     	; 0x1fec <vfprintf+0x22a>
    1fc6:	3c ef       	ldi	r19, 0xFC	; 252
    1fc8:	c3 16       	cp	r12, r19
    1fca:	3f ef       	ldi	r19, 0xFF	; 255
    1fcc:	d3 06       	cpc	r13, r19
    1fce:	74 f0       	brlt	.+28     	; 0x1fec <vfprintf+0x22a>
    1fd0:	89 2d       	mov	r24, r9
    1fd2:	80 68       	ori	r24, 0x80	; 128
    1fd4:	98 2e       	mov	r9, r24
    1fd6:	0a c0       	rjmp	.+20     	; 0x1fec <vfprintf+0x22a>
    1fd8:	e2 e0       	ldi	r30, 0x02	; 2
    1fda:	f0 e0       	ldi	r31, 0x00	; 0
    1fdc:	ec 0f       	add	r30, r28
    1fde:	fd 1f       	adc	r31, r29
    1fe0:	e1 0f       	add	r30, r17
    1fe2:	f1 1d       	adc	r31, r1
    1fe4:	80 81       	ld	r24, Z
    1fe6:	80 33       	cpi	r24, 0x30	; 48
    1fe8:	19 f4       	brne	.+6      	; 0x1ff0 <vfprintf+0x22e>
    1fea:	11 50       	subi	r17, 0x01	; 1
    1fec:	11 11       	cpse	r17, r1
    1fee:	f4 cf       	rjmp	.-24     	; 0x1fd8 <vfprintf+0x216>
    1ff0:	97 fe       	sbrs	r9, 7
    1ff2:	0e c0       	rjmp	.+28     	; 0x2010 <vfprintf+0x24e>
    1ff4:	44 24       	eor	r4, r4
    1ff6:	43 94       	inc	r4
    1ff8:	41 0e       	add	r4, r17
    1ffa:	81 2f       	mov	r24, r17
    1ffc:	90 e0       	ldi	r25, 0x00	; 0
    1ffe:	c8 16       	cp	r12, r24
    2000:	d9 06       	cpc	r13, r25
    2002:	2c f4       	brge	.+10     	; 0x200e <vfprintf+0x24c>
    2004:	1c 19       	sub	r17, r12
    2006:	04 c0       	rjmp	.+8      	; 0x2010 <vfprintf+0x24e>
    2008:	44 24       	eor	r4, r4
    200a:	43 94       	inc	r4
    200c:	01 c0       	rjmp	.+2      	; 0x2010 <vfprintf+0x24e>
    200e:	10 e0       	ldi	r17, 0x00	; 0
    2010:	97 fe       	sbrs	r9, 7
    2012:	06 c0       	rjmp	.+12     	; 0x2020 <vfprintf+0x25e>
    2014:	1c 14       	cp	r1, r12
    2016:	1d 04       	cpc	r1, r13
    2018:	34 f4       	brge	.+12     	; 0x2026 <vfprintf+0x264>
    201a:	c6 01       	movw	r24, r12
    201c:	01 96       	adiw	r24, 0x01	; 1
    201e:	05 c0       	rjmp	.+10     	; 0x202a <vfprintf+0x268>
    2020:	85 e0       	ldi	r24, 0x05	; 5
    2022:	90 e0       	ldi	r25, 0x00	; 0
    2024:	02 c0       	rjmp	.+4      	; 0x202a <vfprintf+0x268>
    2026:	81 e0       	ldi	r24, 0x01	; 1
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	01 11       	cpse	r16, r1
    202c:	01 96       	adiw	r24, 0x01	; 1
    202e:	11 23       	and	r17, r17
    2030:	31 f0       	breq	.+12     	; 0x203e <vfprintf+0x27c>
    2032:	21 2f       	mov	r18, r17
    2034:	30 e0       	ldi	r19, 0x00	; 0
    2036:	2f 5f       	subi	r18, 0xFF	; 255
    2038:	3f 4f       	sbci	r19, 0xFF	; 255
    203a:	82 0f       	add	r24, r18
    203c:	93 1f       	adc	r25, r19
    203e:	25 2d       	mov	r18, r5
    2040:	30 e0       	ldi	r19, 0x00	; 0
    2042:	82 17       	cp	r24, r18
    2044:	93 07       	cpc	r25, r19
    2046:	14 f4       	brge	.+4      	; 0x204c <vfprintf+0x28a>
    2048:	58 1a       	sub	r5, r24
    204a:	01 c0       	rjmp	.+2      	; 0x204e <vfprintf+0x28c>
    204c:	51 2c       	mov	r5, r1
    204e:	89 2d       	mov	r24, r9
    2050:	89 70       	andi	r24, 0x09	; 9
    2052:	41 f4       	brne	.+16     	; 0x2064 <vfprintf+0x2a2>
    2054:	55 20       	and	r5, r5
    2056:	31 f0       	breq	.+12     	; 0x2064 <vfprintf+0x2a2>
    2058:	b7 01       	movw	r22, r14
    205a:	80 e2       	ldi	r24, 0x20	; 32
    205c:	90 e0       	ldi	r25, 0x00	; 0
    205e:	bc d3       	rcall	.+1912   	; 0x27d8 <fputc>
    2060:	5a 94       	dec	r5
    2062:	f8 cf       	rjmp	.-16     	; 0x2054 <vfprintf+0x292>
    2064:	00 23       	and	r16, r16
    2066:	21 f0       	breq	.+8      	; 0x2070 <vfprintf+0x2ae>
    2068:	b7 01       	movw	r22, r14
    206a:	80 2f       	mov	r24, r16
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	b4 d3       	rcall	.+1896   	; 0x27d8 <fputc>
    2070:	93 fc       	sbrc	r9, 3
    2072:	08 c0       	rjmp	.+16     	; 0x2084 <vfprintf+0x2c2>
    2074:	55 20       	and	r5, r5
    2076:	31 f0       	breq	.+12     	; 0x2084 <vfprintf+0x2c2>
    2078:	b7 01       	movw	r22, r14
    207a:	80 e3       	ldi	r24, 0x30	; 48
    207c:	90 e0       	ldi	r25, 0x00	; 0
    207e:	ac d3       	rcall	.+1880   	; 0x27d8 <fputc>
    2080:	5a 94       	dec	r5
    2082:	f8 cf       	rjmp	.-16     	; 0x2074 <vfprintf+0x2b2>
    2084:	97 fe       	sbrs	r9, 7
    2086:	4a c0       	rjmp	.+148    	; 0x211c <vfprintf+0x35a>
    2088:	46 01       	movw	r8, r12
    208a:	d7 fe       	sbrs	r13, 7
    208c:	02 c0       	rjmp	.+4      	; 0x2092 <vfprintf+0x2d0>
    208e:	81 2c       	mov	r8, r1
    2090:	91 2c       	mov	r9, r1
    2092:	c6 01       	movw	r24, r12
    2094:	88 19       	sub	r24, r8
    2096:	99 09       	sbc	r25, r9
    2098:	f3 01       	movw	r30, r6
    209a:	e8 0f       	add	r30, r24
    209c:	f9 1f       	adc	r31, r25
    209e:	fe 87       	std	Y+14, r31	; 0x0e
    20a0:	ed 87       	std	Y+13, r30	; 0x0d
    20a2:	96 01       	movw	r18, r12
    20a4:	24 19       	sub	r18, r4
    20a6:	31 09       	sbc	r19, r1
    20a8:	38 8b       	std	Y+16, r19	; 0x10
    20aa:	2f 87       	std	Y+15, r18	; 0x0f
    20ac:	01 2f       	mov	r16, r17
    20ae:	10 e0       	ldi	r17, 0x00	; 0
    20b0:	11 95       	neg	r17
    20b2:	01 95       	neg	r16
    20b4:	11 09       	sbc	r17, r1
    20b6:	3f ef       	ldi	r19, 0xFF	; 255
    20b8:	83 16       	cp	r8, r19
    20ba:	93 06       	cpc	r9, r19
    20bc:	21 f4       	brne	.+8      	; 0x20c6 <vfprintf+0x304>
    20be:	b7 01       	movw	r22, r14
    20c0:	8e e2       	ldi	r24, 0x2E	; 46
    20c2:	90 e0       	ldi	r25, 0x00	; 0
    20c4:	89 d3       	rcall	.+1810   	; 0x27d8 <fputc>
    20c6:	c8 14       	cp	r12, r8
    20c8:	d9 04       	cpc	r13, r9
    20ca:	4c f0       	brlt	.+18     	; 0x20de <vfprintf+0x31c>
    20cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    20ce:	98 89       	ldd	r25, Y+16	; 0x10
    20d0:	88 15       	cp	r24, r8
    20d2:	99 05       	cpc	r25, r9
    20d4:	24 f4       	brge	.+8      	; 0x20de <vfprintf+0x31c>
    20d6:	ed 85       	ldd	r30, Y+13	; 0x0d
    20d8:	fe 85       	ldd	r31, Y+14	; 0x0e
    20da:	81 81       	ldd	r24, Z+1	; 0x01
    20dc:	01 c0       	rjmp	.+2      	; 0x20e0 <vfprintf+0x31e>
    20de:	80 e3       	ldi	r24, 0x30	; 48
    20e0:	f1 e0       	ldi	r31, 0x01	; 1
    20e2:	8f 1a       	sub	r8, r31
    20e4:	91 08       	sbc	r9, r1
    20e6:	2d 85       	ldd	r18, Y+13	; 0x0d
    20e8:	3e 85       	ldd	r19, Y+14	; 0x0e
    20ea:	2f 5f       	subi	r18, 0xFF	; 255
    20ec:	3f 4f       	sbci	r19, 0xFF	; 255
    20ee:	3e 87       	std	Y+14, r19	; 0x0e
    20f0:	2d 87       	std	Y+13, r18	; 0x0d
    20f2:	80 16       	cp	r8, r16
    20f4:	91 06       	cpc	r9, r17
    20f6:	24 f0       	brlt	.+8      	; 0x2100 <vfprintf+0x33e>
    20f8:	b7 01       	movw	r22, r14
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	6d d3       	rcall	.+1754   	; 0x27d8 <fputc>
    20fe:	db cf       	rjmp	.-74     	; 0x20b6 <vfprintf+0x2f4>
    2100:	c8 14       	cp	r12, r8
    2102:	d9 04       	cpc	r13, r9
    2104:	41 f4       	brne	.+16     	; 0x2116 <vfprintf+0x354>
    2106:	9a 81       	ldd	r25, Y+2	; 0x02
    2108:	96 33       	cpi	r25, 0x36	; 54
    210a:	20 f4       	brcc	.+8      	; 0x2114 <vfprintf+0x352>
    210c:	95 33       	cpi	r25, 0x35	; 53
    210e:	19 f4       	brne	.+6      	; 0x2116 <vfprintf+0x354>
    2110:	3c 85       	ldd	r19, Y+12	; 0x0c
    2112:	34 ff       	sbrs	r19, 4
    2114:	81 e3       	ldi	r24, 0x31	; 49
    2116:	b7 01       	movw	r22, r14
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	48 c0       	rjmp	.+144    	; 0x21ac <vfprintf+0x3ea>
    211c:	8a 81       	ldd	r24, Y+2	; 0x02
    211e:	81 33       	cpi	r24, 0x31	; 49
    2120:	19 f0       	breq	.+6      	; 0x2128 <vfprintf+0x366>
    2122:	9c 85       	ldd	r25, Y+12	; 0x0c
    2124:	9f 7e       	andi	r25, 0xEF	; 239
    2126:	9c 87       	std	Y+12, r25	; 0x0c
    2128:	b7 01       	movw	r22, r14
    212a:	90 e0       	ldi	r25, 0x00	; 0
    212c:	55 d3       	rcall	.+1706   	; 0x27d8 <fputc>
    212e:	11 11       	cpse	r17, r1
    2130:	05 c0       	rjmp	.+10     	; 0x213c <vfprintf+0x37a>
    2132:	94 fc       	sbrc	r9, 4
    2134:	16 c0       	rjmp	.+44     	; 0x2162 <vfprintf+0x3a0>
    2136:	85 e6       	ldi	r24, 0x65	; 101
    2138:	90 e0       	ldi	r25, 0x00	; 0
    213a:	15 c0       	rjmp	.+42     	; 0x2166 <vfprintf+0x3a4>
    213c:	b7 01       	movw	r22, r14
    213e:	8e e2       	ldi	r24, 0x2E	; 46
    2140:	90 e0       	ldi	r25, 0x00	; 0
    2142:	4a d3       	rcall	.+1684   	; 0x27d8 <fputc>
    2144:	1e 5f       	subi	r17, 0xFE	; 254
    2146:	82 e0       	ldi	r24, 0x02	; 2
    2148:	01 e0       	ldi	r16, 0x01	; 1
    214a:	08 0f       	add	r16, r24
    214c:	f3 01       	movw	r30, r6
    214e:	e8 0f       	add	r30, r24
    2150:	f1 1d       	adc	r31, r1
    2152:	80 81       	ld	r24, Z
    2154:	b7 01       	movw	r22, r14
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	3f d3       	rcall	.+1662   	; 0x27d8 <fputc>
    215a:	80 2f       	mov	r24, r16
    215c:	01 13       	cpse	r16, r17
    215e:	f4 cf       	rjmp	.-24     	; 0x2148 <vfprintf+0x386>
    2160:	e8 cf       	rjmp	.-48     	; 0x2132 <vfprintf+0x370>
    2162:	85 e4       	ldi	r24, 0x45	; 69
    2164:	90 e0       	ldi	r25, 0x00	; 0
    2166:	b7 01       	movw	r22, r14
    2168:	37 d3       	rcall	.+1646   	; 0x27d8 <fputc>
    216a:	d7 fc       	sbrc	r13, 7
    216c:	06 c0       	rjmp	.+12     	; 0x217a <vfprintf+0x3b8>
    216e:	c1 14       	cp	r12, r1
    2170:	d1 04       	cpc	r13, r1
    2172:	41 f4       	brne	.+16     	; 0x2184 <vfprintf+0x3c2>
    2174:	ec 85       	ldd	r30, Y+12	; 0x0c
    2176:	e4 ff       	sbrs	r30, 4
    2178:	05 c0       	rjmp	.+10     	; 0x2184 <vfprintf+0x3c2>
    217a:	d1 94       	neg	r13
    217c:	c1 94       	neg	r12
    217e:	d1 08       	sbc	r13, r1
    2180:	8d e2       	ldi	r24, 0x2D	; 45
    2182:	01 c0       	rjmp	.+2      	; 0x2186 <vfprintf+0x3c4>
    2184:	8b e2       	ldi	r24, 0x2B	; 43
    2186:	b7 01       	movw	r22, r14
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	26 d3       	rcall	.+1612   	; 0x27d8 <fputc>
    218c:	80 e3       	ldi	r24, 0x30	; 48
    218e:	2a e0       	ldi	r18, 0x0A	; 10
    2190:	c2 16       	cp	r12, r18
    2192:	d1 04       	cpc	r13, r1
    2194:	2c f0       	brlt	.+10     	; 0x21a0 <vfprintf+0x3de>
    2196:	8f 5f       	subi	r24, 0xFF	; 255
    2198:	fa e0       	ldi	r31, 0x0A	; 10
    219a:	cf 1a       	sub	r12, r31
    219c:	d1 08       	sbc	r13, r1
    219e:	f7 cf       	rjmp	.-18     	; 0x218e <vfprintf+0x3cc>
    21a0:	b7 01       	movw	r22, r14
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	19 d3       	rcall	.+1586   	; 0x27d8 <fputc>
    21a6:	b7 01       	movw	r22, r14
    21a8:	c6 01       	movw	r24, r12
    21aa:	c0 96       	adiw	r24, 0x30	; 48
    21ac:	15 d3       	rcall	.+1578   	; 0x27d8 <fputc>
    21ae:	49 c1       	rjmp	.+658    	; 0x2442 <__stack+0x243>
    21b0:	83 36       	cpi	r24, 0x63	; 99
    21b2:	31 f0       	breq	.+12     	; 0x21c0 <vfprintf+0x3fe>
    21b4:	83 37       	cpi	r24, 0x73	; 115
    21b6:	79 f0       	breq	.+30     	; 0x21d6 <vfprintf+0x414>
    21b8:	83 35       	cpi	r24, 0x53	; 83
    21ba:	09 f0       	breq	.+2      	; 0x21be <vfprintf+0x3fc>
    21bc:	52 c0       	rjmp	.+164    	; 0x2262 <__stack+0x63>
    21be:	1f c0       	rjmp	.+62     	; 0x21fe <vfprintf+0x43c>
    21c0:	56 01       	movw	r10, r12
    21c2:	32 e0       	ldi	r19, 0x02	; 2
    21c4:	a3 0e       	add	r10, r19
    21c6:	b1 1c       	adc	r11, r1
    21c8:	f6 01       	movw	r30, r12
    21ca:	80 81       	ld	r24, Z
    21cc:	89 83       	std	Y+1, r24	; 0x01
    21ce:	01 e0       	ldi	r16, 0x01	; 1
    21d0:	10 e0       	ldi	r17, 0x00	; 0
    21d2:	63 01       	movw	r12, r6
    21d4:	11 c0       	rjmp	.+34     	; 0x21f8 <vfprintf+0x436>
    21d6:	56 01       	movw	r10, r12
    21d8:	f2 e0       	ldi	r31, 0x02	; 2
    21da:	af 0e       	add	r10, r31
    21dc:	b1 1c       	adc	r11, r1
    21de:	f6 01       	movw	r30, r12
    21e0:	c0 80       	ld	r12, Z
    21e2:	d1 80       	ldd	r13, Z+1	; 0x01
    21e4:	96 fe       	sbrs	r9, 6
    21e6:	03 c0       	rjmp	.+6      	; 0x21ee <vfprintf+0x42c>
    21e8:	61 2f       	mov	r22, r17
    21ea:	70 e0       	ldi	r23, 0x00	; 0
    21ec:	02 c0       	rjmp	.+4      	; 0x21f2 <vfprintf+0x430>
    21ee:	6f ef       	ldi	r22, 0xFF	; 255
    21f0:	7f ef       	ldi	r23, 0xFF	; 255
    21f2:	c6 01       	movw	r24, r12
    21f4:	79 d2       	rcall	.+1266   	; 0x26e8 <strnlen>
    21f6:	8c 01       	movw	r16, r24
    21f8:	f9 2d       	mov	r31, r9
    21fa:	ff 77       	andi	r31, 0x7F	; 127
    21fc:	13 c0       	rjmp	.+38     	; 0x2224 <__stack+0x25>
    21fe:	56 01       	movw	r10, r12
    2200:	22 e0       	ldi	r18, 0x02	; 2
    2202:	a2 0e       	add	r10, r18
    2204:	b1 1c       	adc	r11, r1
    2206:	f6 01       	movw	r30, r12
    2208:	c0 80       	ld	r12, Z
    220a:	d1 80       	ldd	r13, Z+1	; 0x01
    220c:	96 fe       	sbrs	r9, 6
    220e:	03 c0       	rjmp	.+6      	; 0x2216 <__stack+0x17>
    2210:	61 2f       	mov	r22, r17
    2212:	70 e0       	ldi	r23, 0x00	; 0
    2214:	02 c0       	rjmp	.+4      	; 0x221a <__stack+0x1b>
    2216:	6f ef       	ldi	r22, 0xFF	; 255
    2218:	7f ef       	ldi	r23, 0xFF	; 255
    221a:	c6 01       	movw	r24, r12
    221c:	5a d2       	rcall	.+1204   	; 0x26d2 <strnlen_P>
    221e:	8c 01       	movw	r16, r24
    2220:	f9 2d       	mov	r31, r9
    2222:	f0 68       	ori	r31, 0x80	; 128
    2224:	9f 2e       	mov	r9, r31
    2226:	f3 fd       	sbrc	r31, 3
    2228:	18 c0       	rjmp	.+48     	; 0x225a <__stack+0x5b>
    222a:	85 2d       	mov	r24, r5
    222c:	90 e0       	ldi	r25, 0x00	; 0
    222e:	08 17       	cp	r16, r24
    2230:	19 07       	cpc	r17, r25
    2232:	98 f4       	brcc	.+38     	; 0x225a <__stack+0x5b>
    2234:	b7 01       	movw	r22, r14
    2236:	80 e2       	ldi	r24, 0x20	; 32
    2238:	90 e0       	ldi	r25, 0x00	; 0
    223a:	ce d2       	rcall	.+1436   	; 0x27d8 <fputc>
    223c:	5a 94       	dec	r5
    223e:	f5 cf       	rjmp	.-22     	; 0x222a <__stack+0x2b>
    2240:	f6 01       	movw	r30, r12
    2242:	97 fc       	sbrc	r9, 7
    2244:	85 91       	lpm	r24, Z+
    2246:	97 fe       	sbrs	r9, 7
    2248:	81 91       	ld	r24, Z+
    224a:	6f 01       	movw	r12, r30
    224c:	b7 01       	movw	r22, r14
    224e:	90 e0       	ldi	r25, 0x00	; 0
    2250:	c3 d2       	rcall	.+1414   	; 0x27d8 <fputc>
    2252:	51 10       	cpse	r5, r1
    2254:	5a 94       	dec	r5
    2256:	01 50       	subi	r16, 0x01	; 1
    2258:	11 09       	sbc	r17, r1
    225a:	01 15       	cp	r16, r1
    225c:	11 05       	cpc	r17, r1
    225e:	81 f7       	brne	.-32     	; 0x2240 <__stack+0x41>
    2260:	f0 c0       	rjmp	.+480    	; 0x2442 <__stack+0x243>
    2262:	84 36       	cpi	r24, 0x64	; 100
    2264:	11 f0       	breq	.+4      	; 0x226a <__stack+0x6b>
    2266:	89 36       	cpi	r24, 0x69	; 105
    2268:	59 f5       	brne	.+86     	; 0x22c0 <__stack+0xc1>
    226a:	56 01       	movw	r10, r12
    226c:	97 fe       	sbrs	r9, 7
    226e:	09 c0       	rjmp	.+18     	; 0x2282 <__stack+0x83>
    2270:	24 e0       	ldi	r18, 0x04	; 4
    2272:	a2 0e       	add	r10, r18
    2274:	b1 1c       	adc	r11, r1
    2276:	f6 01       	movw	r30, r12
    2278:	60 81       	ld	r22, Z
    227a:	71 81       	ldd	r23, Z+1	; 0x01
    227c:	82 81       	ldd	r24, Z+2	; 0x02
    227e:	93 81       	ldd	r25, Z+3	; 0x03
    2280:	0a c0       	rjmp	.+20     	; 0x2296 <__stack+0x97>
    2282:	f2 e0       	ldi	r31, 0x02	; 2
    2284:	af 0e       	add	r10, r31
    2286:	b1 1c       	adc	r11, r1
    2288:	f6 01       	movw	r30, r12
    228a:	60 81       	ld	r22, Z
    228c:	71 81       	ldd	r23, Z+1	; 0x01
    228e:	07 2e       	mov	r0, r23
    2290:	00 0c       	add	r0, r0
    2292:	88 0b       	sbc	r24, r24
    2294:	99 0b       	sbc	r25, r25
    2296:	f9 2d       	mov	r31, r9
    2298:	ff 76       	andi	r31, 0x6F	; 111
    229a:	9f 2e       	mov	r9, r31
    229c:	97 ff       	sbrs	r25, 7
    229e:	09 c0       	rjmp	.+18     	; 0x22b2 <__stack+0xb3>
    22a0:	90 95       	com	r25
    22a2:	80 95       	com	r24
    22a4:	70 95       	com	r23
    22a6:	61 95       	neg	r22
    22a8:	7f 4f       	sbci	r23, 0xFF	; 255
    22aa:	8f 4f       	sbci	r24, 0xFF	; 255
    22ac:	9f 4f       	sbci	r25, 0xFF	; 255
    22ae:	f0 68       	ori	r31, 0x80	; 128
    22b0:	9f 2e       	mov	r9, r31
    22b2:	2a e0       	ldi	r18, 0x0A	; 10
    22b4:	30 e0       	ldi	r19, 0x00	; 0
    22b6:	a3 01       	movw	r20, r6
    22b8:	11 d3       	rcall	.+1570   	; 0x28dc <__ultoa_invert>
    22ba:	c8 2e       	mov	r12, r24
    22bc:	c6 18       	sub	r12, r6
    22be:	3e c0       	rjmp	.+124    	; 0x233c <__stack+0x13d>
    22c0:	09 2d       	mov	r16, r9
    22c2:	85 37       	cpi	r24, 0x75	; 117
    22c4:	21 f4       	brne	.+8      	; 0x22ce <__stack+0xcf>
    22c6:	0f 7e       	andi	r16, 0xEF	; 239
    22c8:	2a e0       	ldi	r18, 0x0A	; 10
    22ca:	30 e0       	ldi	r19, 0x00	; 0
    22cc:	1d c0       	rjmp	.+58     	; 0x2308 <__stack+0x109>
    22ce:	09 7f       	andi	r16, 0xF9	; 249
    22d0:	8f 36       	cpi	r24, 0x6F	; 111
    22d2:	91 f0       	breq	.+36     	; 0x22f8 <__stack+0xf9>
    22d4:	18 f4       	brcc	.+6      	; 0x22dc <__stack+0xdd>
    22d6:	88 35       	cpi	r24, 0x58	; 88
    22d8:	59 f0       	breq	.+22     	; 0x22f0 <__stack+0xf1>
    22da:	bc c0       	rjmp	.+376    	; 0x2454 <__stack+0x255>
    22dc:	80 37       	cpi	r24, 0x70	; 112
    22de:	19 f0       	breq	.+6      	; 0x22e6 <__stack+0xe7>
    22e0:	88 37       	cpi	r24, 0x78	; 120
    22e2:	11 f0       	breq	.+4      	; 0x22e8 <__stack+0xe9>
    22e4:	b7 c0       	rjmp	.+366    	; 0x2454 <__stack+0x255>
    22e6:	00 61       	ori	r16, 0x10	; 16
    22e8:	04 ff       	sbrs	r16, 4
    22ea:	09 c0       	rjmp	.+18     	; 0x22fe <__stack+0xff>
    22ec:	04 60       	ori	r16, 0x04	; 4
    22ee:	07 c0       	rjmp	.+14     	; 0x22fe <__stack+0xff>
    22f0:	94 fe       	sbrs	r9, 4
    22f2:	08 c0       	rjmp	.+16     	; 0x2304 <__stack+0x105>
    22f4:	06 60       	ori	r16, 0x06	; 6
    22f6:	06 c0       	rjmp	.+12     	; 0x2304 <__stack+0x105>
    22f8:	28 e0       	ldi	r18, 0x08	; 8
    22fa:	30 e0       	ldi	r19, 0x00	; 0
    22fc:	05 c0       	rjmp	.+10     	; 0x2308 <__stack+0x109>
    22fe:	20 e1       	ldi	r18, 0x10	; 16
    2300:	30 e0       	ldi	r19, 0x00	; 0
    2302:	02 c0       	rjmp	.+4      	; 0x2308 <__stack+0x109>
    2304:	20 e1       	ldi	r18, 0x10	; 16
    2306:	32 e0       	ldi	r19, 0x02	; 2
    2308:	56 01       	movw	r10, r12
    230a:	07 ff       	sbrs	r16, 7
    230c:	09 c0       	rjmp	.+18     	; 0x2320 <__stack+0x121>
    230e:	84 e0       	ldi	r24, 0x04	; 4
    2310:	a8 0e       	add	r10, r24
    2312:	b1 1c       	adc	r11, r1
    2314:	f6 01       	movw	r30, r12
    2316:	60 81       	ld	r22, Z
    2318:	71 81       	ldd	r23, Z+1	; 0x01
    231a:	82 81       	ldd	r24, Z+2	; 0x02
    231c:	93 81       	ldd	r25, Z+3	; 0x03
    231e:	08 c0       	rjmp	.+16     	; 0x2330 <__stack+0x131>
    2320:	f2 e0       	ldi	r31, 0x02	; 2
    2322:	af 0e       	add	r10, r31
    2324:	b1 1c       	adc	r11, r1
    2326:	f6 01       	movw	r30, r12
    2328:	60 81       	ld	r22, Z
    232a:	71 81       	ldd	r23, Z+1	; 0x01
    232c:	80 e0       	ldi	r24, 0x00	; 0
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	a3 01       	movw	r20, r6
    2332:	d4 d2       	rcall	.+1448   	; 0x28dc <__ultoa_invert>
    2334:	c8 2e       	mov	r12, r24
    2336:	c6 18       	sub	r12, r6
    2338:	0f 77       	andi	r16, 0x7F	; 127
    233a:	90 2e       	mov	r9, r16
    233c:	96 fe       	sbrs	r9, 6
    233e:	0b c0       	rjmp	.+22     	; 0x2356 <__stack+0x157>
    2340:	09 2d       	mov	r16, r9
    2342:	0e 7f       	andi	r16, 0xFE	; 254
    2344:	c1 16       	cp	r12, r17
    2346:	50 f4       	brcc	.+20     	; 0x235c <__stack+0x15d>
    2348:	94 fe       	sbrs	r9, 4
    234a:	0a c0       	rjmp	.+20     	; 0x2360 <__stack+0x161>
    234c:	92 fc       	sbrc	r9, 2
    234e:	08 c0       	rjmp	.+16     	; 0x2360 <__stack+0x161>
    2350:	09 2d       	mov	r16, r9
    2352:	0e 7e       	andi	r16, 0xEE	; 238
    2354:	05 c0       	rjmp	.+10     	; 0x2360 <__stack+0x161>
    2356:	dc 2c       	mov	r13, r12
    2358:	09 2d       	mov	r16, r9
    235a:	03 c0       	rjmp	.+6      	; 0x2362 <__stack+0x163>
    235c:	dc 2c       	mov	r13, r12
    235e:	01 c0       	rjmp	.+2      	; 0x2362 <__stack+0x163>
    2360:	d1 2e       	mov	r13, r17
    2362:	04 ff       	sbrs	r16, 4
    2364:	0d c0       	rjmp	.+26     	; 0x2380 <__stack+0x181>
    2366:	fe 01       	movw	r30, r28
    2368:	ec 0d       	add	r30, r12
    236a:	f1 1d       	adc	r31, r1
    236c:	80 81       	ld	r24, Z
    236e:	80 33       	cpi	r24, 0x30	; 48
    2370:	11 f4       	brne	.+4      	; 0x2376 <__stack+0x177>
    2372:	09 7e       	andi	r16, 0xE9	; 233
    2374:	09 c0       	rjmp	.+18     	; 0x2388 <__stack+0x189>
    2376:	02 ff       	sbrs	r16, 2
    2378:	06 c0       	rjmp	.+12     	; 0x2386 <__stack+0x187>
    237a:	d3 94       	inc	r13
    237c:	d3 94       	inc	r13
    237e:	04 c0       	rjmp	.+8      	; 0x2388 <__stack+0x189>
    2380:	80 2f       	mov	r24, r16
    2382:	86 78       	andi	r24, 0x86	; 134
    2384:	09 f0       	breq	.+2      	; 0x2388 <__stack+0x189>
    2386:	d3 94       	inc	r13
    2388:	03 fd       	sbrc	r16, 3
    238a:	10 c0       	rjmp	.+32     	; 0x23ac <__stack+0x1ad>
    238c:	00 ff       	sbrs	r16, 0
    238e:	06 c0       	rjmp	.+12     	; 0x239c <__stack+0x19d>
    2390:	1c 2d       	mov	r17, r12
    2392:	d5 14       	cp	r13, r5
    2394:	78 f4       	brcc	.+30     	; 0x23b4 <__stack+0x1b5>
    2396:	15 0d       	add	r17, r5
    2398:	1d 19       	sub	r17, r13
    239a:	0c c0       	rjmp	.+24     	; 0x23b4 <__stack+0x1b5>
    239c:	d5 14       	cp	r13, r5
    239e:	50 f4       	brcc	.+20     	; 0x23b4 <__stack+0x1b5>
    23a0:	b7 01       	movw	r22, r14
    23a2:	80 e2       	ldi	r24, 0x20	; 32
    23a4:	90 e0       	ldi	r25, 0x00	; 0
    23a6:	18 d2       	rcall	.+1072   	; 0x27d8 <fputc>
    23a8:	d3 94       	inc	r13
    23aa:	f8 cf       	rjmp	.-16     	; 0x239c <__stack+0x19d>
    23ac:	d5 14       	cp	r13, r5
    23ae:	10 f4       	brcc	.+4      	; 0x23b4 <__stack+0x1b5>
    23b0:	5d 18       	sub	r5, r13
    23b2:	01 c0       	rjmp	.+2      	; 0x23b6 <__stack+0x1b7>
    23b4:	51 2c       	mov	r5, r1
    23b6:	04 ff       	sbrs	r16, 4
    23b8:	0f c0       	rjmp	.+30     	; 0x23d8 <__stack+0x1d9>
    23ba:	b7 01       	movw	r22, r14
    23bc:	80 e3       	ldi	r24, 0x30	; 48
    23be:	90 e0       	ldi	r25, 0x00	; 0
    23c0:	0b d2       	rcall	.+1046   	; 0x27d8 <fputc>
    23c2:	02 ff       	sbrs	r16, 2
    23c4:	16 c0       	rjmp	.+44     	; 0x23f2 <__stack+0x1f3>
    23c6:	01 fd       	sbrc	r16, 1
    23c8:	03 c0       	rjmp	.+6      	; 0x23d0 <__stack+0x1d1>
    23ca:	88 e7       	ldi	r24, 0x78	; 120
    23cc:	90 e0       	ldi	r25, 0x00	; 0
    23ce:	02 c0       	rjmp	.+4      	; 0x23d4 <__stack+0x1d5>
    23d0:	88 e5       	ldi	r24, 0x58	; 88
    23d2:	90 e0       	ldi	r25, 0x00	; 0
    23d4:	b7 01       	movw	r22, r14
    23d6:	0c c0       	rjmp	.+24     	; 0x23f0 <__stack+0x1f1>
    23d8:	80 2f       	mov	r24, r16
    23da:	86 78       	andi	r24, 0x86	; 134
    23dc:	51 f0       	breq	.+20     	; 0x23f2 <__stack+0x1f3>
    23de:	01 ff       	sbrs	r16, 1
    23e0:	02 c0       	rjmp	.+4      	; 0x23e6 <__stack+0x1e7>
    23e2:	8b e2       	ldi	r24, 0x2B	; 43
    23e4:	01 c0       	rjmp	.+2      	; 0x23e8 <__stack+0x1e9>
    23e6:	80 e2       	ldi	r24, 0x20	; 32
    23e8:	07 fd       	sbrc	r16, 7
    23ea:	8d e2       	ldi	r24, 0x2D	; 45
    23ec:	b7 01       	movw	r22, r14
    23ee:	90 e0       	ldi	r25, 0x00	; 0
    23f0:	f3 d1       	rcall	.+998    	; 0x27d8 <fputc>
    23f2:	c1 16       	cp	r12, r17
    23f4:	30 f4       	brcc	.+12     	; 0x2402 <__stack+0x203>
    23f6:	b7 01       	movw	r22, r14
    23f8:	80 e3       	ldi	r24, 0x30	; 48
    23fa:	90 e0       	ldi	r25, 0x00	; 0
    23fc:	ed d1       	rcall	.+986    	; 0x27d8 <fputc>
    23fe:	11 50       	subi	r17, 0x01	; 1
    2400:	f8 cf       	rjmp	.-16     	; 0x23f2 <__stack+0x1f3>
    2402:	ca 94       	dec	r12
    2404:	f3 01       	movw	r30, r6
    2406:	ec 0d       	add	r30, r12
    2408:	f1 1d       	adc	r31, r1
    240a:	80 81       	ld	r24, Z
    240c:	b7 01       	movw	r22, r14
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	e3 d1       	rcall	.+966    	; 0x27d8 <fputc>
    2412:	c1 10       	cpse	r12, r1
    2414:	f6 cf       	rjmp	.-20     	; 0x2402 <__stack+0x203>
    2416:	15 c0       	rjmp	.+42     	; 0x2442 <__stack+0x243>
    2418:	f4 e0       	ldi	r31, 0x04	; 4
    241a:	f5 15       	cp	r31, r5
    241c:	50 f5       	brcc	.+84     	; 0x2472 <__stack+0x273>
    241e:	84 e0       	ldi	r24, 0x04	; 4
    2420:	58 1a       	sub	r5, r24
    2422:	93 fe       	sbrs	r9, 3
    2424:	1e c0       	rjmp	.+60     	; 0x2462 <__stack+0x263>
    2426:	01 11       	cpse	r16, r1
    2428:	25 c0       	rjmp	.+74     	; 0x2474 <__stack+0x275>
    242a:	2c 85       	ldd	r18, Y+12	; 0x0c
    242c:	23 ff       	sbrs	r18, 3
    242e:	27 c0       	rjmp	.+78     	; 0x247e <__stack+0x27f>
    2430:	02 e1       	ldi	r16, 0x12	; 18
    2432:	11 e0       	ldi	r17, 0x01	; 1
    2434:	39 2d       	mov	r19, r9
    2436:	30 71       	andi	r19, 0x10	; 16
    2438:	93 2e       	mov	r9, r19
    243a:	f8 01       	movw	r30, r16
    243c:	84 91       	lpm	r24, Z
    243e:	81 11       	cpse	r24, r1
    2440:	21 c0       	rjmp	.+66     	; 0x2484 <__stack+0x285>
    2442:	55 20       	and	r5, r5
    2444:	09 f4       	brne	.+2      	; 0x2448 <__stack+0x249>
    2446:	fc cc       	rjmp	.-1544   	; 0x1e40 <vfprintf+0x7e>
    2448:	b7 01       	movw	r22, r14
    244a:	80 e2       	ldi	r24, 0x20	; 32
    244c:	90 e0       	ldi	r25, 0x00	; 0
    244e:	c4 d1       	rcall	.+904    	; 0x27d8 <fputc>
    2450:	5a 94       	dec	r5
    2452:	f7 cf       	rjmp	.-18     	; 0x2442 <__stack+0x243>
    2454:	f7 01       	movw	r30, r14
    2456:	86 81       	ldd	r24, Z+6	; 0x06
    2458:	97 81       	ldd	r25, Z+7	; 0x07
    245a:	23 c0       	rjmp	.+70     	; 0x24a2 <__stack+0x2a3>
    245c:	8f ef       	ldi	r24, 0xFF	; 255
    245e:	9f ef       	ldi	r25, 0xFF	; 255
    2460:	20 c0       	rjmp	.+64     	; 0x24a2 <__stack+0x2a3>
    2462:	b7 01       	movw	r22, r14
    2464:	80 e2       	ldi	r24, 0x20	; 32
    2466:	90 e0       	ldi	r25, 0x00	; 0
    2468:	b7 d1       	rcall	.+878    	; 0x27d8 <fputc>
    246a:	5a 94       	dec	r5
    246c:	51 10       	cpse	r5, r1
    246e:	f9 cf       	rjmp	.-14     	; 0x2462 <__stack+0x263>
    2470:	da cf       	rjmp	.-76     	; 0x2426 <__stack+0x227>
    2472:	51 2c       	mov	r5, r1
    2474:	b7 01       	movw	r22, r14
    2476:	80 2f       	mov	r24, r16
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	ae d1       	rcall	.+860    	; 0x27d8 <fputc>
    247c:	d6 cf       	rjmp	.-84     	; 0x242a <__stack+0x22b>
    247e:	06 e1       	ldi	r16, 0x16	; 22
    2480:	11 e0       	ldi	r17, 0x01	; 1
    2482:	d8 cf       	rjmp	.-80     	; 0x2434 <__stack+0x235>
    2484:	91 10       	cpse	r9, r1
    2486:	80 52       	subi	r24, 0x20	; 32
    2488:	b7 01       	movw	r22, r14
    248a:	90 e0       	ldi	r25, 0x00	; 0
    248c:	a5 d1       	rcall	.+842    	; 0x27d8 <fputc>
    248e:	0f 5f       	subi	r16, 0xFF	; 255
    2490:	1f 4f       	sbci	r17, 0xFF	; 255
    2492:	d3 cf       	rjmp	.-90     	; 0x243a <__stack+0x23b>
    2494:	23 e0       	ldi	r18, 0x03	; 3
    2496:	25 15       	cp	r18, r5
    2498:	10 f4       	brcc	.+4      	; 0x249e <__stack+0x29f>
    249a:	83 e0       	ldi	r24, 0x03	; 3
    249c:	c1 cf       	rjmp	.-126    	; 0x2420 <__stack+0x221>
    249e:	51 2c       	mov	r5, r1
    24a0:	c4 cf       	rjmp	.-120    	; 0x242a <__stack+0x22b>
    24a2:	60 96       	adiw	r28, 0x10	; 16
    24a4:	0f b6       	in	r0, 0x3f	; 63
    24a6:	f8 94       	cli
    24a8:	de bf       	out	0x3e, r29	; 62
    24aa:	0f be       	out	0x3f, r0	; 63
    24ac:	cd bf       	out	0x3d, r28	; 61
    24ae:	df 91       	pop	r29
    24b0:	cf 91       	pop	r28
    24b2:	1f 91       	pop	r17
    24b4:	0f 91       	pop	r16
    24b6:	ff 90       	pop	r15
    24b8:	ef 90       	pop	r14
    24ba:	df 90       	pop	r13
    24bc:	cf 90       	pop	r12
    24be:	bf 90       	pop	r11
    24c0:	af 90       	pop	r10
    24c2:	9f 90       	pop	r9
    24c4:	8f 90       	pop	r8
    24c6:	7f 90       	pop	r7
    24c8:	6f 90       	pop	r6
    24ca:	5f 90       	pop	r5
    24cc:	4f 90       	pop	r4
    24ce:	3f 90       	pop	r3
    24d0:	2f 90       	pop	r2
    24d2:	08 95       	ret

000024d4 <__divmodhi4>:
    24d4:	97 fb       	bst	r25, 7
    24d6:	07 2e       	mov	r0, r23
    24d8:	16 f4       	brtc	.+4      	; 0x24de <__divmodhi4+0xa>
    24da:	00 94       	com	r0
    24dc:	06 d0       	rcall	.+12     	; 0x24ea <__divmodhi4_neg1>
    24de:	77 fd       	sbrc	r23, 7
    24e0:	08 d0       	rcall	.+16     	; 0x24f2 <__divmodhi4_neg2>
    24e2:	0b d0       	rcall	.+22     	; 0x24fa <__udivmodhi4>
    24e4:	07 fc       	sbrc	r0, 7
    24e6:	05 d0       	rcall	.+10     	; 0x24f2 <__divmodhi4_neg2>
    24e8:	3e f4       	brtc	.+14     	; 0x24f8 <__divmodhi4_exit>

000024ea <__divmodhi4_neg1>:
    24ea:	90 95       	com	r25
    24ec:	81 95       	neg	r24
    24ee:	9f 4f       	sbci	r25, 0xFF	; 255
    24f0:	08 95       	ret

000024f2 <__divmodhi4_neg2>:
    24f2:	70 95       	com	r23
    24f4:	61 95       	neg	r22
    24f6:	7f 4f       	sbci	r23, 0xFF	; 255

000024f8 <__divmodhi4_exit>:
    24f8:	08 95       	ret

000024fa <__udivmodhi4>:
    24fa:	aa 1b       	sub	r26, r26
    24fc:	bb 1b       	sub	r27, r27
    24fe:	51 e1       	ldi	r21, 0x11	; 17
    2500:	07 c0       	rjmp	.+14     	; 0x2510 <__udivmodhi4_ep>

00002502 <__udivmodhi4_loop>:
    2502:	aa 1f       	adc	r26, r26
    2504:	bb 1f       	adc	r27, r27
    2506:	a6 17       	cp	r26, r22
    2508:	b7 07       	cpc	r27, r23
    250a:	10 f0       	brcs	.+4      	; 0x2510 <__udivmodhi4_ep>
    250c:	a6 1b       	sub	r26, r22
    250e:	b7 0b       	sbc	r27, r23

00002510 <__udivmodhi4_ep>:
    2510:	88 1f       	adc	r24, r24
    2512:	99 1f       	adc	r25, r25
    2514:	5a 95       	dec	r21
    2516:	a9 f7       	brne	.-22     	; 0x2502 <__udivmodhi4_loop>
    2518:	80 95       	com	r24
    251a:	90 95       	com	r25
    251c:	bc 01       	movw	r22, r24
    251e:	cd 01       	movw	r24, r26
    2520:	08 95       	ret

00002522 <__ftoa_engine>:
    2522:	28 30       	cpi	r18, 0x08	; 8
    2524:	08 f0       	brcs	.+2      	; 0x2528 <__ftoa_engine+0x6>
    2526:	27 e0       	ldi	r18, 0x07	; 7
    2528:	33 27       	eor	r19, r19
    252a:	da 01       	movw	r26, r20
    252c:	99 0f       	add	r25, r25
    252e:	31 1d       	adc	r19, r1
    2530:	87 fd       	sbrc	r24, 7
    2532:	91 60       	ori	r25, 0x01	; 1
    2534:	00 96       	adiw	r24, 0x00	; 0
    2536:	61 05       	cpc	r22, r1
    2538:	71 05       	cpc	r23, r1
    253a:	39 f4       	brne	.+14     	; 0x254a <__ftoa_engine+0x28>
    253c:	32 60       	ori	r19, 0x02	; 2
    253e:	2e 5f       	subi	r18, 0xFE	; 254
    2540:	3d 93       	st	X+, r19
    2542:	30 e3       	ldi	r19, 0x30	; 48
    2544:	2a 95       	dec	r18
    2546:	e1 f7       	brne	.-8      	; 0x2540 <__ftoa_engine+0x1e>
    2548:	08 95       	ret
    254a:	9f 3f       	cpi	r25, 0xFF	; 255
    254c:	30 f0       	brcs	.+12     	; 0x255a <__ftoa_engine+0x38>
    254e:	80 38       	cpi	r24, 0x80	; 128
    2550:	71 05       	cpc	r23, r1
    2552:	61 05       	cpc	r22, r1
    2554:	09 f0       	breq	.+2      	; 0x2558 <__ftoa_engine+0x36>
    2556:	3c 5f       	subi	r19, 0xFC	; 252
    2558:	3c 5f       	subi	r19, 0xFC	; 252
    255a:	3d 93       	st	X+, r19
    255c:	91 30       	cpi	r25, 0x01	; 1
    255e:	08 f0       	brcs	.+2      	; 0x2562 <__ftoa_engine+0x40>
    2560:	80 68       	ori	r24, 0x80	; 128
    2562:	91 1d       	adc	r25, r1
    2564:	df 93       	push	r29
    2566:	cf 93       	push	r28
    2568:	1f 93       	push	r17
    256a:	0f 93       	push	r16
    256c:	ff 92       	push	r15
    256e:	ef 92       	push	r14
    2570:	19 2f       	mov	r17, r25
    2572:	98 7f       	andi	r25, 0xF8	; 248
    2574:	96 95       	lsr	r25
    2576:	e9 2f       	mov	r30, r25
    2578:	96 95       	lsr	r25
    257a:	96 95       	lsr	r25
    257c:	e9 0f       	add	r30, r25
    257e:	ff 27       	eor	r31, r31
    2580:	ec 58       	subi	r30, 0x8C	; 140
    2582:	fe 4f       	sbci	r31, 0xFE	; 254
    2584:	99 27       	eor	r25, r25
    2586:	33 27       	eor	r19, r19
    2588:	ee 24       	eor	r14, r14
    258a:	ff 24       	eor	r15, r15
    258c:	a7 01       	movw	r20, r14
    258e:	e7 01       	movw	r28, r14
    2590:	05 90       	lpm	r0, Z+
    2592:	08 94       	sec
    2594:	07 94       	ror	r0
    2596:	28 f4       	brcc	.+10     	; 0x25a2 <__ftoa_engine+0x80>
    2598:	36 0f       	add	r19, r22
    259a:	e7 1e       	adc	r14, r23
    259c:	f8 1e       	adc	r15, r24
    259e:	49 1f       	adc	r20, r25
    25a0:	51 1d       	adc	r21, r1
    25a2:	66 0f       	add	r22, r22
    25a4:	77 1f       	adc	r23, r23
    25a6:	88 1f       	adc	r24, r24
    25a8:	99 1f       	adc	r25, r25
    25aa:	06 94       	lsr	r0
    25ac:	a1 f7       	brne	.-24     	; 0x2596 <__ftoa_engine+0x74>
    25ae:	05 90       	lpm	r0, Z+
    25b0:	07 94       	ror	r0
    25b2:	28 f4       	brcc	.+10     	; 0x25be <__ftoa_engine+0x9c>
    25b4:	e7 0e       	add	r14, r23
    25b6:	f8 1e       	adc	r15, r24
    25b8:	49 1f       	adc	r20, r25
    25ba:	56 1f       	adc	r21, r22
    25bc:	c1 1d       	adc	r28, r1
    25be:	77 0f       	add	r23, r23
    25c0:	88 1f       	adc	r24, r24
    25c2:	99 1f       	adc	r25, r25
    25c4:	66 1f       	adc	r22, r22
    25c6:	06 94       	lsr	r0
    25c8:	a1 f7       	brne	.-24     	; 0x25b2 <__ftoa_engine+0x90>
    25ca:	05 90       	lpm	r0, Z+
    25cc:	07 94       	ror	r0
    25ce:	28 f4       	brcc	.+10     	; 0x25da <__ftoa_engine+0xb8>
    25d0:	f8 0e       	add	r15, r24
    25d2:	49 1f       	adc	r20, r25
    25d4:	56 1f       	adc	r21, r22
    25d6:	c7 1f       	adc	r28, r23
    25d8:	d1 1d       	adc	r29, r1
    25da:	88 0f       	add	r24, r24
    25dc:	99 1f       	adc	r25, r25
    25de:	66 1f       	adc	r22, r22
    25e0:	77 1f       	adc	r23, r23
    25e2:	06 94       	lsr	r0
    25e4:	a1 f7       	brne	.-24     	; 0x25ce <__ftoa_engine+0xac>
    25e6:	05 90       	lpm	r0, Z+
    25e8:	07 94       	ror	r0
    25ea:	20 f4       	brcc	.+8      	; 0x25f4 <__ftoa_engine+0xd2>
    25ec:	49 0f       	add	r20, r25
    25ee:	56 1f       	adc	r21, r22
    25f0:	c7 1f       	adc	r28, r23
    25f2:	d8 1f       	adc	r29, r24
    25f4:	99 0f       	add	r25, r25
    25f6:	66 1f       	adc	r22, r22
    25f8:	77 1f       	adc	r23, r23
    25fa:	88 1f       	adc	r24, r24
    25fc:	06 94       	lsr	r0
    25fe:	a9 f7       	brne	.-22     	; 0x25ea <__ftoa_engine+0xc8>
    2600:	84 91       	lpm	r24, Z
    2602:	10 95       	com	r17
    2604:	17 70       	andi	r17, 0x07	; 7
    2606:	41 f0       	breq	.+16     	; 0x2618 <__ftoa_engine+0xf6>
    2608:	d6 95       	lsr	r29
    260a:	c7 95       	ror	r28
    260c:	57 95       	ror	r21
    260e:	47 95       	ror	r20
    2610:	f7 94       	ror	r15
    2612:	e7 94       	ror	r14
    2614:	1a 95       	dec	r17
    2616:	c1 f7       	brne	.-16     	; 0x2608 <__ftoa_engine+0xe6>
    2618:	ea e1       	ldi	r30, 0x1A	; 26
    261a:	f1 e0       	ldi	r31, 0x01	; 1
    261c:	68 94       	set
    261e:	15 90       	lpm	r1, Z+
    2620:	15 91       	lpm	r17, Z+
    2622:	35 91       	lpm	r19, Z+
    2624:	65 91       	lpm	r22, Z+
    2626:	95 91       	lpm	r25, Z+
    2628:	05 90       	lpm	r0, Z+
    262a:	7f e2       	ldi	r23, 0x2F	; 47
    262c:	73 95       	inc	r23
    262e:	e1 18       	sub	r14, r1
    2630:	f1 0a       	sbc	r15, r17
    2632:	43 0b       	sbc	r20, r19
    2634:	56 0b       	sbc	r21, r22
    2636:	c9 0b       	sbc	r28, r25
    2638:	d0 09       	sbc	r29, r0
    263a:	c0 f7       	brcc	.-16     	; 0x262c <__ftoa_engine+0x10a>
    263c:	e1 0c       	add	r14, r1
    263e:	f1 1e       	adc	r15, r17
    2640:	43 1f       	adc	r20, r19
    2642:	56 1f       	adc	r21, r22
    2644:	c9 1f       	adc	r28, r25
    2646:	d0 1d       	adc	r29, r0
    2648:	7e f4       	brtc	.+30     	; 0x2668 <__ftoa_engine+0x146>
    264a:	70 33       	cpi	r23, 0x30	; 48
    264c:	11 f4       	brne	.+4      	; 0x2652 <__ftoa_engine+0x130>
    264e:	8a 95       	dec	r24
    2650:	e6 cf       	rjmp	.-52     	; 0x261e <__ftoa_engine+0xfc>
    2652:	e8 94       	clt
    2654:	01 50       	subi	r16, 0x01	; 1
    2656:	30 f0       	brcs	.+12     	; 0x2664 <__ftoa_engine+0x142>
    2658:	08 0f       	add	r16, r24
    265a:	0a f4       	brpl	.+2      	; 0x265e <__ftoa_engine+0x13c>
    265c:	00 27       	eor	r16, r16
    265e:	02 17       	cp	r16, r18
    2660:	08 f4       	brcc	.+2      	; 0x2664 <__ftoa_engine+0x142>
    2662:	20 2f       	mov	r18, r16
    2664:	23 95       	inc	r18
    2666:	02 2f       	mov	r16, r18
    2668:	7a 33       	cpi	r23, 0x3A	; 58
    266a:	28 f0       	brcs	.+10     	; 0x2676 <__ftoa_engine+0x154>
    266c:	79 e3       	ldi	r23, 0x39	; 57
    266e:	7d 93       	st	X+, r23
    2670:	2a 95       	dec	r18
    2672:	e9 f7       	brne	.-6      	; 0x266e <__ftoa_engine+0x14c>
    2674:	10 c0       	rjmp	.+32     	; 0x2696 <__ftoa_engine+0x174>
    2676:	7d 93       	st	X+, r23
    2678:	2a 95       	dec	r18
    267a:	89 f6       	brne	.-94     	; 0x261e <__ftoa_engine+0xfc>
    267c:	06 94       	lsr	r0
    267e:	97 95       	ror	r25
    2680:	67 95       	ror	r22
    2682:	37 95       	ror	r19
    2684:	17 95       	ror	r17
    2686:	17 94       	ror	r1
    2688:	e1 18       	sub	r14, r1
    268a:	f1 0a       	sbc	r15, r17
    268c:	43 0b       	sbc	r20, r19
    268e:	56 0b       	sbc	r21, r22
    2690:	c9 0b       	sbc	r28, r25
    2692:	d0 09       	sbc	r29, r0
    2694:	98 f0       	brcs	.+38     	; 0x26bc <__ftoa_engine+0x19a>
    2696:	23 95       	inc	r18
    2698:	7e 91       	ld	r23, -X
    269a:	73 95       	inc	r23
    269c:	7a 33       	cpi	r23, 0x3A	; 58
    269e:	08 f0       	brcs	.+2      	; 0x26a2 <__ftoa_engine+0x180>
    26a0:	70 e3       	ldi	r23, 0x30	; 48
    26a2:	7c 93       	st	X, r23
    26a4:	20 13       	cpse	r18, r16
    26a6:	b8 f7       	brcc	.-18     	; 0x2696 <__ftoa_engine+0x174>
    26a8:	7e 91       	ld	r23, -X
    26aa:	70 61       	ori	r23, 0x10	; 16
    26ac:	7d 93       	st	X+, r23
    26ae:	30 f0       	brcs	.+12     	; 0x26bc <__ftoa_engine+0x19a>
    26b0:	83 95       	inc	r24
    26b2:	71 e3       	ldi	r23, 0x31	; 49
    26b4:	7d 93       	st	X+, r23
    26b6:	70 e3       	ldi	r23, 0x30	; 48
    26b8:	2a 95       	dec	r18
    26ba:	e1 f7       	brne	.-8      	; 0x26b4 <__ftoa_engine+0x192>
    26bc:	11 24       	eor	r1, r1
    26be:	ef 90       	pop	r14
    26c0:	ff 90       	pop	r15
    26c2:	0f 91       	pop	r16
    26c4:	1f 91       	pop	r17
    26c6:	cf 91       	pop	r28
    26c8:	df 91       	pop	r29
    26ca:	99 27       	eor	r25, r25
    26cc:	87 fd       	sbrc	r24, 7
    26ce:	90 95       	com	r25
    26d0:	08 95       	ret

000026d2 <strnlen_P>:
    26d2:	fc 01       	movw	r30, r24
    26d4:	05 90       	lpm	r0, Z+
    26d6:	61 50       	subi	r22, 0x01	; 1
    26d8:	70 40       	sbci	r23, 0x00	; 0
    26da:	01 10       	cpse	r0, r1
    26dc:	d8 f7       	brcc	.-10     	; 0x26d4 <strnlen_P+0x2>
    26de:	80 95       	com	r24
    26e0:	90 95       	com	r25
    26e2:	8e 0f       	add	r24, r30
    26e4:	9f 1f       	adc	r25, r31
    26e6:	08 95       	ret

000026e8 <strnlen>:
    26e8:	fc 01       	movw	r30, r24
    26ea:	61 50       	subi	r22, 0x01	; 1
    26ec:	70 40       	sbci	r23, 0x00	; 0
    26ee:	01 90       	ld	r0, Z+
    26f0:	01 10       	cpse	r0, r1
    26f2:	d8 f7       	brcc	.-10     	; 0x26ea <strnlen+0x2>
    26f4:	80 95       	com	r24
    26f6:	90 95       	com	r25
    26f8:	8e 0f       	add	r24, r30
    26fa:	9f 1f       	adc	r25, r31
    26fc:	08 95       	ret

000026fe <__itoa_ncheck>:
    26fe:	bb 27       	eor	r27, r27
    2700:	4a 30       	cpi	r20, 0x0A	; 10
    2702:	31 f4       	brne	.+12     	; 0x2710 <__itoa_ncheck+0x12>
    2704:	99 23       	and	r25, r25
    2706:	22 f4       	brpl	.+8      	; 0x2710 <__itoa_ncheck+0x12>
    2708:	bd e2       	ldi	r27, 0x2D	; 45
    270a:	90 95       	com	r25
    270c:	81 95       	neg	r24
    270e:	9f 4f       	sbci	r25, 0xFF	; 255
    2710:	01 c0       	rjmp	.+2      	; 0x2714 <__utoa_common>

00002712 <__utoa_ncheck>:
    2712:	bb 27       	eor	r27, r27

00002714 <__utoa_common>:
    2714:	fb 01       	movw	r30, r22
    2716:	55 27       	eor	r21, r21
    2718:	aa 27       	eor	r26, r26
    271a:	88 0f       	add	r24, r24
    271c:	99 1f       	adc	r25, r25
    271e:	aa 1f       	adc	r26, r26
    2720:	a4 17       	cp	r26, r20
    2722:	10 f0       	brcs	.+4      	; 0x2728 <__utoa_common+0x14>
    2724:	a4 1b       	sub	r26, r20
    2726:	83 95       	inc	r24
    2728:	50 51       	subi	r21, 0x10	; 16
    272a:	b9 f7       	brne	.-18     	; 0x271a <__utoa_common+0x6>
    272c:	a0 5d       	subi	r26, 0xD0	; 208
    272e:	aa 33       	cpi	r26, 0x3A	; 58
    2730:	08 f0       	brcs	.+2      	; 0x2734 <__utoa_common+0x20>
    2732:	a9 5d       	subi	r26, 0xD9	; 217
    2734:	a1 93       	st	Z+, r26
    2736:	00 97       	sbiw	r24, 0x00	; 0
    2738:	79 f7       	brne	.-34     	; 0x2718 <__utoa_common+0x4>
    273a:	b1 11       	cpse	r27, r1
    273c:	b1 93       	st	Z+, r27
    273e:	11 92       	st	Z+, r1
    2740:	cb 01       	movw	r24, r22
    2742:	6c c2       	rjmp	.+1240   	; 0x2c1c <strrev>

00002744 <fdevopen>:
    2744:	0f 93       	push	r16
    2746:	1f 93       	push	r17
    2748:	cf 93       	push	r28
    274a:	df 93       	push	r29
    274c:	00 97       	sbiw	r24, 0x00	; 0
    274e:	31 f4       	brne	.+12     	; 0x275c <fdevopen+0x18>
    2750:	61 15       	cp	r22, r1
    2752:	71 05       	cpc	r23, r1
    2754:	19 f4       	brne	.+6      	; 0x275c <fdevopen+0x18>
    2756:	80 e0       	ldi	r24, 0x00	; 0
    2758:	90 e0       	ldi	r25, 0x00	; 0
    275a:	39 c0       	rjmp	.+114    	; 0x27ce <fdevopen+0x8a>
    275c:	8b 01       	movw	r16, r22
    275e:	ec 01       	movw	r28, r24
    2760:	6e e0       	ldi	r22, 0x0E	; 14
    2762:	70 e0       	ldi	r23, 0x00	; 0
    2764:	81 e0       	ldi	r24, 0x01	; 1
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	17 d1       	rcall	.+558    	; 0x2998 <calloc>
    276a:	fc 01       	movw	r30, r24
    276c:	89 2b       	or	r24, r25
    276e:	99 f3       	breq	.-26     	; 0x2756 <fdevopen+0x12>
    2770:	80 e8       	ldi	r24, 0x80	; 128
    2772:	83 83       	std	Z+3, r24	; 0x03
    2774:	01 15       	cp	r16, r1
    2776:	11 05       	cpc	r17, r1
    2778:	71 f0       	breq	.+28     	; 0x2796 <fdevopen+0x52>
    277a:	13 87       	std	Z+11, r17	; 0x0b
    277c:	02 87       	std	Z+10, r16	; 0x0a
    277e:	81 e8       	ldi	r24, 0x81	; 129
    2780:	83 83       	std	Z+3, r24	; 0x03
    2782:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <__iob>
    2786:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <__iob+0x1>
    278a:	89 2b       	or	r24, r25
    278c:	21 f4       	brne	.+8      	; 0x2796 <fdevopen+0x52>
    278e:	f0 93 12 04 	sts	0x0412, r31	; 0x800412 <__iob+0x1>
    2792:	e0 93 11 04 	sts	0x0411, r30	; 0x800411 <__iob>
    2796:	20 97       	sbiw	r28, 0x00	; 0
    2798:	c9 f0       	breq	.+50     	; 0x27cc <fdevopen+0x88>
    279a:	d1 87       	std	Z+9, r29	; 0x09
    279c:	c0 87       	std	Z+8, r28	; 0x08
    279e:	83 81       	ldd	r24, Z+3	; 0x03
    27a0:	82 60       	ori	r24, 0x02	; 2
    27a2:	83 83       	std	Z+3, r24	; 0x03
    27a4:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <__iob+0x2>
    27a8:	90 91 14 04 	lds	r25, 0x0414	; 0x800414 <__iob+0x3>
    27ac:	89 2b       	or	r24, r25
    27ae:	71 f4       	brne	.+28     	; 0x27cc <fdevopen+0x88>
    27b0:	f0 93 14 04 	sts	0x0414, r31	; 0x800414 <__iob+0x3>
    27b4:	e0 93 13 04 	sts	0x0413, r30	; 0x800413 <__iob+0x2>
    27b8:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <__iob+0x4>
    27bc:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <__iob+0x5>
    27c0:	89 2b       	or	r24, r25
    27c2:	21 f4       	brne	.+8      	; 0x27cc <fdevopen+0x88>
    27c4:	f0 93 16 04 	sts	0x0416, r31	; 0x800416 <__iob+0x5>
    27c8:	e0 93 15 04 	sts	0x0415, r30	; 0x800415 <__iob+0x4>
    27cc:	cf 01       	movw	r24, r30
    27ce:	df 91       	pop	r29
    27d0:	cf 91       	pop	r28
    27d2:	1f 91       	pop	r17
    27d4:	0f 91       	pop	r16
    27d6:	08 95       	ret

000027d8 <fputc>:
    27d8:	0f 93       	push	r16
    27da:	1f 93       	push	r17
    27dc:	cf 93       	push	r28
    27de:	df 93       	push	r29
    27e0:	fb 01       	movw	r30, r22
    27e2:	23 81       	ldd	r18, Z+3	; 0x03
    27e4:	21 fd       	sbrc	r18, 1
    27e6:	03 c0       	rjmp	.+6      	; 0x27ee <fputc+0x16>
    27e8:	8f ef       	ldi	r24, 0xFF	; 255
    27ea:	9f ef       	ldi	r25, 0xFF	; 255
    27ec:	2c c0       	rjmp	.+88     	; 0x2846 <fputc+0x6e>
    27ee:	22 ff       	sbrs	r18, 2
    27f0:	16 c0       	rjmp	.+44     	; 0x281e <fputc+0x46>
    27f2:	46 81       	ldd	r20, Z+6	; 0x06
    27f4:	57 81       	ldd	r21, Z+7	; 0x07
    27f6:	24 81       	ldd	r18, Z+4	; 0x04
    27f8:	35 81       	ldd	r19, Z+5	; 0x05
    27fa:	42 17       	cp	r20, r18
    27fc:	53 07       	cpc	r21, r19
    27fe:	44 f4       	brge	.+16     	; 0x2810 <fputc+0x38>
    2800:	a0 81       	ld	r26, Z
    2802:	b1 81       	ldd	r27, Z+1	; 0x01
    2804:	9d 01       	movw	r18, r26
    2806:	2f 5f       	subi	r18, 0xFF	; 255
    2808:	3f 4f       	sbci	r19, 0xFF	; 255
    280a:	31 83       	std	Z+1, r19	; 0x01
    280c:	20 83       	st	Z, r18
    280e:	8c 93       	st	X, r24
    2810:	26 81       	ldd	r18, Z+6	; 0x06
    2812:	37 81       	ldd	r19, Z+7	; 0x07
    2814:	2f 5f       	subi	r18, 0xFF	; 255
    2816:	3f 4f       	sbci	r19, 0xFF	; 255
    2818:	37 83       	std	Z+7, r19	; 0x07
    281a:	26 83       	std	Z+6, r18	; 0x06
    281c:	14 c0       	rjmp	.+40     	; 0x2846 <fputc+0x6e>
    281e:	8b 01       	movw	r16, r22
    2820:	ec 01       	movw	r28, r24
    2822:	fb 01       	movw	r30, r22
    2824:	00 84       	ldd	r0, Z+8	; 0x08
    2826:	f1 85       	ldd	r31, Z+9	; 0x09
    2828:	e0 2d       	mov	r30, r0
    282a:	19 95       	eicall
    282c:	89 2b       	or	r24, r25
    282e:	e1 f6       	brne	.-72     	; 0x27e8 <fputc+0x10>
    2830:	d8 01       	movw	r26, r16
    2832:	16 96       	adiw	r26, 0x06	; 6
    2834:	8d 91       	ld	r24, X+
    2836:	9c 91       	ld	r25, X
    2838:	17 97       	sbiw	r26, 0x07	; 7
    283a:	01 96       	adiw	r24, 0x01	; 1
    283c:	17 96       	adiw	r26, 0x07	; 7
    283e:	9c 93       	st	X, r25
    2840:	8e 93       	st	-X, r24
    2842:	16 97       	sbiw	r26, 0x06	; 6
    2844:	ce 01       	movw	r24, r28
    2846:	df 91       	pop	r29
    2848:	cf 91       	pop	r28
    284a:	1f 91       	pop	r17
    284c:	0f 91       	pop	r16
    284e:	08 95       	ret

00002850 <printf>:
    2850:	cf 93       	push	r28
    2852:	df 93       	push	r29
    2854:	cd b7       	in	r28, 0x3d	; 61
    2856:	de b7       	in	r29, 0x3e	; 62
    2858:	ae 01       	movw	r20, r28
    285a:	4a 5f       	subi	r20, 0xFA	; 250
    285c:	5f 4f       	sbci	r21, 0xFF	; 255
    285e:	fa 01       	movw	r30, r20
    2860:	61 91       	ld	r22, Z+
    2862:	71 91       	ld	r23, Z+
    2864:	af 01       	movw	r20, r30
    2866:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <__iob+0x2>
    286a:	90 91 14 04 	lds	r25, 0x0414	; 0x800414 <__iob+0x3>
    286e:	a9 da       	rcall	.-2734   	; 0x1dc2 <vfprintf>
    2870:	df 91       	pop	r29
    2872:	cf 91       	pop	r28
    2874:	08 95       	ret

00002876 <putchar>:
    2876:	60 91 13 04 	lds	r22, 0x0413	; 0x800413 <__iob+0x2>
    287a:	70 91 14 04 	lds	r23, 0x0414	; 0x800414 <__iob+0x3>
    287e:	ac cf       	rjmp	.-168    	; 0x27d8 <fputc>

00002880 <sprintf>:
    2880:	0f 93       	push	r16
    2882:	1f 93       	push	r17
    2884:	cf 93       	push	r28
    2886:	df 93       	push	r29
    2888:	cd b7       	in	r28, 0x3d	; 61
    288a:	de b7       	in	r29, 0x3e	; 62
    288c:	2e 97       	sbiw	r28, 0x0e	; 14
    288e:	0f b6       	in	r0, 0x3f	; 63
    2890:	f8 94       	cli
    2892:	de bf       	out	0x3e, r29	; 62
    2894:	0f be       	out	0x3f, r0	; 63
    2896:	cd bf       	out	0x3d, r28	; 61
    2898:	0e 89       	ldd	r16, Y+22	; 0x16
    289a:	1f 89       	ldd	r17, Y+23	; 0x17
    289c:	86 e0       	ldi	r24, 0x06	; 6
    289e:	8c 83       	std	Y+4, r24	; 0x04
    28a0:	1a 83       	std	Y+2, r17	; 0x02
    28a2:	09 83       	std	Y+1, r16	; 0x01
    28a4:	8f ef       	ldi	r24, 0xFF	; 255
    28a6:	9f e7       	ldi	r25, 0x7F	; 127
    28a8:	9e 83       	std	Y+6, r25	; 0x06
    28aa:	8d 83       	std	Y+5, r24	; 0x05
    28ac:	ae 01       	movw	r20, r28
    28ae:	46 5e       	subi	r20, 0xE6	; 230
    28b0:	5f 4f       	sbci	r21, 0xFF	; 255
    28b2:	68 8d       	ldd	r22, Y+24	; 0x18
    28b4:	79 8d       	ldd	r23, Y+25	; 0x19
    28b6:	ce 01       	movw	r24, r28
    28b8:	01 96       	adiw	r24, 0x01	; 1
    28ba:	83 da       	rcall	.-2810   	; 0x1dc2 <vfprintf>
    28bc:	ef 81       	ldd	r30, Y+7	; 0x07
    28be:	f8 85       	ldd	r31, Y+8	; 0x08
    28c0:	e0 0f       	add	r30, r16
    28c2:	f1 1f       	adc	r31, r17
    28c4:	10 82       	st	Z, r1
    28c6:	2e 96       	adiw	r28, 0x0e	; 14
    28c8:	0f b6       	in	r0, 0x3f	; 63
    28ca:	f8 94       	cli
    28cc:	de bf       	out	0x3e, r29	; 62
    28ce:	0f be       	out	0x3f, r0	; 63
    28d0:	cd bf       	out	0x3d, r28	; 61
    28d2:	df 91       	pop	r29
    28d4:	cf 91       	pop	r28
    28d6:	1f 91       	pop	r17
    28d8:	0f 91       	pop	r16
    28da:	08 95       	ret

000028dc <__ultoa_invert>:
    28dc:	fa 01       	movw	r30, r20
    28de:	aa 27       	eor	r26, r26
    28e0:	28 30       	cpi	r18, 0x08	; 8
    28e2:	51 f1       	breq	.+84     	; 0x2938 <__ultoa_invert+0x5c>
    28e4:	20 31       	cpi	r18, 0x10	; 16
    28e6:	81 f1       	breq	.+96     	; 0x2948 <__ultoa_invert+0x6c>
    28e8:	e8 94       	clt
    28ea:	6f 93       	push	r22
    28ec:	6e 7f       	andi	r22, 0xFE	; 254
    28ee:	6e 5f       	subi	r22, 0xFE	; 254
    28f0:	7f 4f       	sbci	r23, 0xFF	; 255
    28f2:	8f 4f       	sbci	r24, 0xFF	; 255
    28f4:	9f 4f       	sbci	r25, 0xFF	; 255
    28f6:	af 4f       	sbci	r26, 0xFF	; 255
    28f8:	b1 e0       	ldi	r27, 0x01	; 1
    28fa:	3e d0       	rcall	.+124    	; 0x2978 <__ultoa_invert+0x9c>
    28fc:	b4 e0       	ldi	r27, 0x04	; 4
    28fe:	3c d0       	rcall	.+120    	; 0x2978 <__ultoa_invert+0x9c>
    2900:	67 0f       	add	r22, r23
    2902:	78 1f       	adc	r23, r24
    2904:	89 1f       	adc	r24, r25
    2906:	9a 1f       	adc	r25, r26
    2908:	a1 1d       	adc	r26, r1
    290a:	68 0f       	add	r22, r24
    290c:	79 1f       	adc	r23, r25
    290e:	8a 1f       	adc	r24, r26
    2910:	91 1d       	adc	r25, r1
    2912:	a1 1d       	adc	r26, r1
    2914:	6a 0f       	add	r22, r26
    2916:	71 1d       	adc	r23, r1
    2918:	81 1d       	adc	r24, r1
    291a:	91 1d       	adc	r25, r1
    291c:	a1 1d       	adc	r26, r1
    291e:	20 d0       	rcall	.+64     	; 0x2960 <__ultoa_invert+0x84>
    2920:	09 f4       	brne	.+2      	; 0x2924 <__ultoa_invert+0x48>
    2922:	68 94       	set
    2924:	3f 91       	pop	r19
    2926:	2a e0       	ldi	r18, 0x0A	; 10
    2928:	26 9f       	mul	r18, r22
    292a:	11 24       	eor	r1, r1
    292c:	30 19       	sub	r19, r0
    292e:	30 5d       	subi	r19, 0xD0	; 208
    2930:	31 93       	st	Z+, r19
    2932:	de f6       	brtc	.-74     	; 0x28ea <__ultoa_invert+0xe>
    2934:	cf 01       	movw	r24, r30
    2936:	08 95       	ret
    2938:	46 2f       	mov	r20, r22
    293a:	47 70       	andi	r20, 0x07	; 7
    293c:	40 5d       	subi	r20, 0xD0	; 208
    293e:	41 93       	st	Z+, r20
    2940:	b3 e0       	ldi	r27, 0x03	; 3
    2942:	0f d0       	rcall	.+30     	; 0x2962 <__ultoa_invert+0x86>
    2944:	c9 f7       	brne	.-14     	; 0x2938 <__ultoa_invert+0x5c>
    2946:	f6 cf       	rjmp	.-20     	; 0x2934 <__ultoa_invert+0x58>
    2948:	46 2f       	mov	r20, r22
    294a:	4f 70       	andi	r20, 0x0F	; 15
    294c:	40 5d       	subi	r20, 0xD0	; 208
    294e:	4a 33       	cpi	r20, 0x3A	; 58
    2950:	18 f0       	brcs	.+6      	; 0x2958 <__ultoa_invert+0x7c>
    2952:	49 5d       	subi	r20, 0xD9	; 217
    2954:	31 fd       	sbrc	r19, 1
    2956:	40 52       	subi	r20, 0x20	; 32
    2958:	41 93       	st	Z+, r20
    295a:	02 d0       	rcall	.+4      	; 0x2960 <__ultoa_invert+0x84>
    295c:	a9 f7       	brne	.-22     	; 0x2948 <__ultoa_invert+0x6c>
    295e:	ea cf       	rjmp	.-44     	; 0x2934 <__ultoa_invert+0x58>
    2960:	b4 e0       	ldi	r27, 0x04	; 4
    2962:	a6 95       	lsr	r26
    2964:	97 95       	ror	r25
    2966:	87 95       	ror	r24
    2968:	77 95       	ror	r23
    296a:	67 95       	ror	r22
    296c:	ba 95       	dec	r27
    296e:	c9 f7       	brne	.-14     	; 0x2962 <__ultoa_invert+0x86>
    2970:	00 97       	sbiw	r24, 0x00	; 0
    2972:	61 05       	cpc	r22, r1
    2974:	71 05       	cpc	r23, r1
    2976:	08 95       	ret
    2978:	9b 01       	movw	r18, r22
    297a:	ac 01       	movw	r20, r24
    297c:	0a 2e       	mov	r0, r26
    297e:	06 94       	lsr	r0
    2980:	57 95       	ror	r21
    2982:	47 95       	ror	r20
    2984:	37 95       	ror	r19
    2986:	27 95       	ror	r18
    2988:	ba 95       	dec	r27
    298a:	c9 f7       	brne	.-14     	; 0x297e <__ultoa_invert+0xa2>
    298c:	62 0f       	add	r22, r18
    298e:	73 1f       	adc	r23, r19
    2990:	84 1f       	adc	r24, r20
    2992:	95 1f       	adc	r25, r21
    2994:	a0 1d       	adc	r26, r0
    2996:	08 95       	ret

00002998 <calloc>:
    2998:	0f 93       	push	r16
    299a:	1f 93       	push	r17
    299c:	cf 93       	push	r28
    299e:	df 93       	push	r29
    29a0:	86 9f       	mul	r24, r22
    29a2:	80 01       	movw	r16, r0
    29a4:	87 9f       	mul	r24, r23
    29a6:	10 0d       	add	r17, r0
    29a8:	96 9f       	mul	r25, r22
    29aa:	10 0d       	add	r17, r0
    29ac:	11 24       	eor	r1, r1
    29ae:	c8 01       	movw	r24, r16
    29b0:	0d d0       	rcall	.+26     	; 0x29cc <malloc>
    29b2:	ec 01       	movw	r28, r24
    29b4:	00 97       	sbiw	r24, 0x00	; 0
    29b6:	21 f0       	breq	.+8      	; 0x29c0 <calloc+0x28>
    29b8:	a8 01       	movw	r20, r16
    29ba:	60 e0       	ldi	r22, 0x00	; 0
    29bc:	70 e0       	ldi	r23, 0x00	; 0
    29be:	27 d1       	rcall	.+590    	; 0x2c0e <memset>
    29c0:	ce 01       	movw	r24, r28
    29c2:	df 91       	pop	r29
    29c4:	cf 91       	pop	r28
    29c6:	1f 91       	pop	r17
    29c8:	0f 91       	pop	r16
    29ca:	08 95       	ret

000029cc <malloc>:
    29cc:	0f 93       	push	r16
    29ce:	1f 93       	push	r17
    29d0:	cf 93       	push	r28
    29d2:	df 93       	push	r29
    29d4:	82 30       	cpi	r24, 0x02	; 2
    29d6:	91 05       	cpc	r25, r1
    29d8:	10 f4       	brcc	.+4      	; 0x29de <malloc+0x12>
    29da:	82 e0       	ldi	r24, 0x02	; 2
    29dc:	90 e0       	ldi	r25, 0x00	; 0
    29de:	e0 91 19 04 	lds	r30, 0x0419	; 0x800419 <__flp>
    29e2:	f0 91 1a 04 	lds	r31, 0x041A	; 0x80041a <__flp+0x1>
    29e6:	20 e0       	ldi	r18, 0x00	; 0
    29e8:	30 e0       	ldi	r19, 0x00	; 0
    29ea:	a0 e0       	ldi	r26, 0x00	; 0
    29ec:	b0 e0       	ldi	r27, 0x00	; 0
    29ee:	30 97       	sbiw	r30, 0x00	; 0
    29f0:	19 f1       	breq	.+70     	; 0x2a38 <malloc+0x6c>
    29f2:	40 81       	ld	r20, Z
    29f4:	51 81       	ldd	r21, Z+1	; 0x01
    29f6:	02 81       	ldd	r16, Z+2	; 0x02
    29f8:	13 81       	ldd	r17, Z+3	; 0x03
    29fa:	48 17       	cp	r20, r24
    29fc:	59 07       	cpc	r21, r25
    29fe:	c8 f0       	brcs	.+50     	; 0x2a32 <malloc+0x66>
    2a00:	84 17       	cp	r24, r20
    2a02:	95 07       	cpc	r25, r21
    2a04:	69 f4       	brne	.+26     	; 0x2a20 <malloc+0x54>
    2a06:	10 97       	sbiw	r26, 0x00	; 0
    2a08:	31 f0       	breq	.+12     	; 0x2a16 <malloc+0x4a>
    2a0a:	12 96       	adiw	r26, 0x02	; 2
    2a0c:	0c 93       	st	X, r16
    2a0e:	12 97       	sbiw	r26, 0x02	; 2
    2a10:	13 96       	adiw	r26, 0x03	; 3
    2a12:	1c 93       	st	X, r17
    2a14:	27 c0       	rjmp	.+78     	; 0x2a64 <malloc+0x98>
    2a16:	00 93 19 04 	sts	0x0419, r16	; 0x800419 <__flp>
    2a1a:	10 93 1a 04 	sts	0x041A, r17	; 0x80041a <__flp+0x1>
    2a1e:	22 c0       	rjmp	.+68     	; 0x2a64 <malloc+0x98>
    2a20:	21 15       	cp	r18, r1
    2a22:	31 05       	cpc	r19, r1
    2a24:	19 f0       	breq	.+6      	; 0x2a2c <malloc+0x60>
    2a26:	42 17       	cp	r20, r18
    2a28:	53 07       	cpc	r21, r19
    2a2a:	18 f4       	brcc	.+6      	; 0x2a32 <malloc+0x66>
    2a2c:	9a 01       	movw	r18, r20
    2a2e:	bd 01       	movw	r22, r26
    2a30:	ef 01       	movw	r28, r30
    2a32:	df 01       	movw	r26, r30
    2a34:	f8 01       	movw	r30, r16
    2a36:	db cf       	rjmp	.-74     	; 0x29ee <malloc+0x22>
    2a38:	21 15       	cp	r18, r1
    2a3a:	31 05       	cpc	r19, r1
    2a3c:	f9 f0       	breq	.+62     	; 0x2a7c <malloc+0xb0>
    2a3e:	28 1b       	sub	r18, r24
    2a40:	39 0b       	sbc	r19, r25
    2a42:	24 30       	cpi	r18, 0x04	; 4
    2a44:	31 05       	cpc	r19, r1
    2a46:	80 f4       	brcc	.+32     	; 0x2a68 <malloc+0x9c>
    2a48:	8a 81       	ldd	r24, Y+2	; 0x02
    2a4a:	9b 81       	ldd	r25, Y+3	; 0x03
    2a4c:	61 15       	cp	r22, r1
    2a4e:	71 05       	cpc	r23, r1
    2a50:	21 f0       	breq	.+8      	; 0x2a5a <malloc+0x8e>
    2a52:	fb 01       	movw	r30, r22
    2a54:	93 83       	std	Z+3, r25	; 0x03
    2a56:	82 83       	std	Z+2, r24	; 0x02
    2a58:	04 c0       	rjmp	.+8      	; 0x2a62 <malloc+0x96>
    2a5a:	90 93 1a 04 	sts	0x041A, r25	; 0x80041a <__flp+0x1>
    2a5e:	80 93 19 04 	sts	0x0419, r24	; 0x800419 <__flp>
    2a62:	fe 01       	movw	r30, r28
    2a64:	32 96       	adiw	r30, 0x02	; 2
    2a66:	44 c0       	rjmp	.+136    	; 0x2af0 <malloc+0x124>
    2a68:	fe 01       	movw	r30, r28
    2a6a:	e2 0f       	add	r30, r18
    2a6c:	f3 1f       	adc	r31, r19
    2a6e:	81 93       	st	Z+, r24
    2a70:	91 93       	st	Z+, r25
    2a72:	22 50       	subi	r18, 0x02	; 2
    2a74:	31 09       	sbc	r19, r1
    2a76:	39 83       	std	Y+1, r19	; 0x01
    2a78:	28 83       	st	Y, r18
    2a7a:	3a c0       	rjmp	.+116    	; 0x2af0 <malloc+0x124>
    2a7c:	20 91 17 04 	lds	r18, 0x0417	; 0x800417 <__brkval>
    2a80:	30 91 18 04 	lds	r19, 0x0418	; 0x800418 <__brkval+0x1>
    2a84:	23 2b       	or	r18, r19
    2a86:	41 f4       	brne	.+16     	; 0x2a98 <malloc+0xcc>
    2a88:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2a8c:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2a90:	30 93 18 04 	sts	0x0418, r19	; 0x800418 <__brkval+0x1>
    2a94:	20 93 17 04 	sts	0x0417, r18	; 0x800417 <__brkval>
    2a98:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2a9c:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2aa0:	21 15       	cp	r18, r1
    2aa2:	31 05       	cpc	r19, r1
    2aa4:	41 f4       	brne	.+16     	; 0x2ab6 <malloc+0xea>
    2aa6:	2d b7       	in	r18, 0x3d	; 61
    2aa8:	3e b7       	in	r19, 0x3e	; 62
    2aaa:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2aae:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2ab2:	24 1b       	sub	r18, r20
    2ab4:	35 0b       	sbc	r19, r21
    2ab6:	e0 91 17 04 	lds	r30, 0x0417	; 0x800417 <__brkval>
    2aba:	f0 91 18 04 	lds	r31, 0x0418	; 0x800418 <__brkval+0x1>
    2abe:	e2 17       	cp	r30, r18
    2ac0:	f3 07       	cpc	r31, r19
    2ac2:	a0 f4       	brcc	.+40     	; 0x2aec <malloc+0x120>
    2ac4:	2e 1b       	sub	r18, r30
    2ac6:	3f 0b       	sbc	r19, r31
    2ac8:	28 17       	cp	r18, r24
    2aca:	39 07       	cpc	r19, r25
    2acc:	78 f0       	brcs	.+30     	; 0x2aec <malloc+0x120>
    2ace:	ac 01       	movw	r20, r24
    2ad0:	4e 5f       	subi	r20, 0xFE	; 254
    2ad2:	5f 4f       	sbci	r21, 0xFF	; 255
    2ad4:	24 17       	cp	r18, r20
    2ad6:	35 07       	cpc	r19, r21
    2ad8:	48 f0       	brcs	.+18     	; 0x2aec <malloc+0x120>
    2ada:	4e 0f       	add	r20, r30
    2adc:	5f 1f       	adc	r21, r31
    2ade:	50 93 18 04 	sts	0x0418, r21	; 0x800418 <__brkval+0x1>
    2ae2:	40 93 17 04 	sts	0x0417, r20	; 0x800417 <__brkval>
    2ae6:	81 93       	st	Z+, r24
    2ae8:	91 93       	st	Z+, r25
    2aea:	02 c0       	rjmp	.+4      	; 0x2af0 <malloc+0x124>
    2aec:	e0 e0       	ldi	r30, 0x00	; 0
    2aee:	f0 e0       	ldi	r31, 0x00	; 0
    2af0:	cf 01       	movw	r24, r30
    2af2:	df 91       	pop	r29
    2af4:	cf 91       	pop	r28
    2af6:	1f 91       	pop	r17
    2af8:	0f 91       	pop	r16
    2afa:	08 95       	ret

00002afc <free>:
    2afc:	cf 93       	push	r28
    2afe:	df 93       	push	r29
    2b00:	00 97       	sbiw	r24, 0x00	; 0
    2b02:	09 f4       	brne	.+2      	; 0x2b06 <free+0xa>
    2b04:	81 c0       	rjmp	.+258    	; 0x2c08 <free+0x10c>
    2b06:	fc 01       	movw	r30, r24
    2b08:	32 97       	sbiw	r30, 0x02	; 2
    2b0a:	13 82       	std	Z+3, r1	; 0x03
    2b0c:	12 82       	std	Z+2, r1	; 0x02
    2b0e:	a0 91 19 04 	lds	r26, 0x0419	; 0x800419 <__flp>
    2b12:	b0 91 1a 04 	lds	r27, 0x041A	; 0x80041a <__flp+0x1>
    2b16:	10 97       	sbiw	r26, 0x00	; 0
    2b18:	81 f4       	brne	.+32     	; 0x2b3a <free+0x3e>
    2b1a:	20 81       	ld	r18, Z
    2b1c:	31 81       	ldd	r19, Z+1	; 0x01
    2b1e:	82 0f       	add	r24, r18
    2b20:	93 1f       	adc	r25, r19
    2b22:	20 91 17 04 	lds	r18, 0x0417	; 0x800417 <__brkval>
    2b26:	30 91 18 04 	lds	r19, 0x0418	; 0x800418 <__brkval+0x1>
    2b2a:	28 17       	cp	r18, r24
    2b2c:	39 07       	cpc	r19, r25
    2b2e:	51 f5       	brne	.+84     	; 0x2b84 <free+0x88>
    2b30:	f0 93 18 04 	sts	0x0418, r31	; 0x800418 <__brkval+0x1>
    2b34:	e0 93 17 04 	sts	0x0417, r30	; 0x800417 <__brkval>
    2b38:	67 c0       	rjmp	.+206    	; 0x2c08 <free+0x10c>
    2b3a:	ed 01       	movw	r28, r26
    2b3c:	20 e0       	ldi	r18, 0x00	; 0
    2b3e:	30 e0       	ldi	r19, 0x00	; 0
    2b40:	ce 17       	cp	r28, r30
    2b42:	df 07       	cpc	r29, r31
    2b44:	40 f4       	brcc	.+16     	; 0x2b56 <free+0x5a>
    2b46:	4a 81       	ldd	r20, Y+2	; 0x02
    2b48:	5b 81       	ldd	r21, Y+3	; 0x03
    2b4a:	9e 01       	movw	r18, r28
    2b4c:	41 15       	cp	r20, r1
    2b4e:	51 05       	cpc	r21, r1
    2b50:	f1 f0       	breq	.+60     	; 0x2b8e <free+0x92>
    2b52:	ea 01       	movw	r28, r20
    2b54:	f5 cf       	rjmp	.-22     	; 0x2b40 <free+0x44>
    2b56:	d3 83       	std	Z+3, r29	; 0x03
    2b58:	c2 83       	std	Z+2, r28	; 0x02
    2b5a:	40 81       	ld	r20, Z
    2b5c:	51 81       	ldd	r21, Z+1	; 0x01
    2b5e:	84 0f       	add	r24, r20
    2b60:	95 1f       	adc	r25, r21
    2b62:	c8 17       	cp	r28, r24
    2b64:	d9 07       	cpc	r29, r25
    2b66:	59 f4       	brne	.+22     	; 0x2b7e <free+0x82>
    2b68:	88 81       	ld	r24, Y
    2b6a:	99 81       	ldd	r25, Y+1	; 0x01
    2b6c:	84 0f       	add	r24, r20
    2b6e:	95 1f       	adc	r25, r21
    2b70:	02 96       	adiw	r24, 0x02	; 2
    2b72:	91 83       	std	Z+1, r25	; 0x01
    2b74:	80 83       	st	Z, r24
    2b76:	8a 81       	ldd	r24, Y+2	; 0x02
    2b78:	9b 81       	ldd	r25, Y+3	; 0x03
    2b7a:	93 83       	std	Z+3, r25	; 0x03
    2b7c:	82 83       	std	Z+2, r24	; 0x02
    2b7e:	21 15       	cp	r18, r1
    2b80:	31 05       	cpc	r19, r1
    2b82:	29 f4       	brne	.+10     	; 0x2b8e <free+0x92>
    2b84:	f0 93 1a 04 	sts	0x041A, r31	; 0x80041a <__flp+0x1>
    2b88:	e0 93 19 04 	sts	0x0419, r30	; 0x800419 <__flp>
    2b8c:	3d c0       	rjmp	.+122    	; 0x2c08 <free+0x10c>
    2b8e:	e9 01       	movw	r28, r18
    2b90:	fb 83       	std	Y+3, r31	; 0x03
    2b92:	ea 83       	std	Y+2, r30	; 0x02
    2b94:	49 91       	ld	r20, Y+
    2b96:	59 91       	ld	r21, Y+
    2b98:	c4 0f       	add	r28, r20
    2b9a:	d5 1f       	adc	r29, r21
    2b9c:	ec 17       	cp	r30, r28
    2b9e:	fd 07       	cpc	r31, r29
    2ba0:	61 f4       	brne	.+24     	; 0x2bba <free+0xbe>
    2ba2:	80 81       	ld	r24, Z
    2ba4:	91 81       	ldd	r25, Z+1	; 0x01
    2ba6:	84 0f       	add	r24, r20
    2ba8:	95 1f       	adc	r25, r21
    2baa:	02 96       	adiw	r24, 0x02	; 2
    2bac:	e9 01       	movw	r28, r18
    2bae:	99 83       	std	Y+1, r25	; 0x01
    2bb0:	88 83       	st	Y, r24
    2bb2:	82 81       	ldd	r24, Z+2	; 0x02
    2bb4:	93 81       	ldd	r25, Z+3	; 0x03
    2bb6:	9b 83       	std	Y+3, r25	; 0x03
    2bb8:	8a 83       	std	Y+2, r24	; 0x02
    2bba:	e0 e0       	ldi	r30, 0x00	; 0
    2bbc:	f0 e0       	ldi	r31, 0x00	; 0
    2bbe:	12 96       	adiw	r26, 0x02	; 2
    2bc0:	8d 91       	ld	r24, X+
    2bc2:	9c 91       	ld	r25, X
    2bc4:	13 97       	sbiw	r26, 0x03	; 3
    2bc6:	00 97       	sbiw	r24, 0x00	; 0
    2bc8:	19 f0       	breq	.+6      	; 0x2bd0 <free+0xd4>
    2bca:	fd 01       	movw	r30, r26
    2bcc:	dc 01       	movw	r26, r24
    2bce:	f7 cf       	rjmp	.-18     	; 0x2bbe <free+0xc2>
    2bd0:	8d 91       	ld	r24, X+
    2bd2:	9c 91       	ld	r25, X
    2bd4:	11 97       	sbiw	r26, 0x01	; 1
    2bd6:	9d 01       	movw	r18, r26
    2bd8:	2e 5f       	subi	r18, 0xFE	; 254
    2bda:	3f 4f       	sbci	r19, 0xFF	; 255
    2bdc:	82 0f       	add	r24, r18
    2bde:	93 1f       	adc	r25, r19
    2be0:	20 91 17 04 	lds	r18, 0x0417	; 0x800417 <__brkval>
    2be4:	30 91 18 04 	lds	r19, 0x0418	; 0x800418 <__brkval+0x1>
    2be8:	28 17       	cp	r18, r24
    2bea:	39 07       	cpc	r19, r25
    2bec:	69 f4       	brne	.+26     	; 0x2c08 <free+0x10c>
    2bee:	30 97       	sbiw	r30, 0x00	; 0
    2bf0:	29 f4       	brne	.+10     	; 0x2bfc <free+0x100>
    2bf2:	10 92 1a 04 	sts	0x041A, r1	; 0x80041a <__flp+0x1>
    2bf6:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <__flp>
    2bfa:	02 c0       	rjmp	.+4      	; 0x2c00 <free+0x104>
    2bfc:	13 82       	std	Z+3, r1	; 0x03
    2bfe:	12 82       	std	Z+2, r1	; 0x02
    2c00:	b0 93 18 04 	sts	0x0418, r27	; 0x800418 <__brkval+0x1>
    2c04:	a0 93 17 04 	sts	0x0417, r26	; 0x800417 <__brkval>
    2c08:	df 91       	pop	r29
    2c0a:	cf 91       	pop	r28
    2c0c:	08 95       	ret

00002c0e <memset>:
    2c0e:	dc 01       	movw	r26, r24
    2c10:	01 c0       	rjmp	.+2      	; 0x2c14 <memset+0x6>
    2c12:	6d 93       	st	X+, r22
    2c14:	41 50       	subi	r20, 0x01	; 1
    2c16:	50 40       	sbci	r21, 0x00	; 0
    2c18:	e0 f7       	brcc	.-8      	; 0x2c12 <memset+0x4>
    2c1a:	08 95       	ret

00002c1c <strrev>:
    2c1c:	dc 01       	movw	r26, r24
    2c1e:	fc 01       	movw	r30, r24
    2c20:	67 2f       	mov	r22, r23
    2c22:	71 91       	ld	r23, Z+
    2c24:	77 23       	and	r23, r23
    2c26:	e1 f7       	brne	.-8      	; 0x2c20 <strrev+0x4>
    2c28:	32 97       	sbiw	r30, 0x02	; 2
    2c2a:	04 c0       	rjmp	.+8      	; 0x2c34 <strrev+0x18>
    2c2c:	7c 91       	ld	r23, X
    2c2e:	6d 93       	st	X+, r22
    2c30:	70 83       	st	Z, r23
    2c32:	62 91       	ld	r22, -Z
    2c34:	ae 17       	cp	r26, r30
    2c36:	bf 07       	cpc	r27, r31
    2c38:	c8 f3       	brcs	.-14     	; 0x2c2c <strrev+0x10>
    2c3a:	08 95       	ret

00002c3c <_exit>:
    2c3c:	f8 94       	cli

00002c3e <__stop_program>:
    2c3e:	ff cf       	rjmp	.-2      	; 0x2c3e <__stop_program>
