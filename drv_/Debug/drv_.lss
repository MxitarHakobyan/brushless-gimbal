
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001b6  00800200  00001a88  00001b1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a88  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  008003b6  008003b6  00001cd2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cd2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00001d70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024b2  00000000  00000000  00001f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001367  00000000  00000000  000043fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001131  00000000  00000000  00005761  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000590  00000000  00000000  00006894  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b02  00000000  00000000  00006e24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017c0  00000000  00000000  00007926  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  000090e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	80 c0       	rjmp	.+256    	; 0x102 <__ctors_end>
       2:	00 00       	nop
       4:	9e c0       	rjmp	.+316    	; 0x142 <__bad_interrupt>
       6:	00 00       	nop
       8:	9c c0       	rjmp	.+312    	; 0x142 <__bad_interrupt>
       a:	00 00       	nop
       c:	9a c0       	rjmp	.+308    	; 0x142 <__bad_interrupt>
       e:	00 00       	nop
      10:	98 c0       	rjmp	.+304    	; 0x142 <__bad_interrupt>
      12:	00 00       	nop
      14:	96 c0       	rjmp	.+300    	; 0x142 <__bad_interrupt>
      16:	00 00       	nop
      18:	94 c0       	rjmp	.+296    	; 0x142 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	92 c0       	rjmp	.+292    	; 0x142 <__bad_interrupt>
      1e:	00 00       	nop
      20:	90 c0       	rjmp	.+288    	; 0x142 <__bad_interrupt>
      22:	00 00       	nop
      24:	8e c0       	rjmp	.+284    	; 0x142 <__bad_interrupt>
      26:	00 00       	nop
      28:	8c c0       	rjmp	.+280    	; 0x142 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8a c0       	rjmp	.+276    	; 0x142 <__bad_interrupt>
      2e:	00 00       	nop
      30:	88 c0       	rjmp	.+272    	; 0x142 <__bad_interrupt>
      32:	00 00       	nop
      34:	86 c0       	rjmp	.+268    	; 0x142 <__bad_interrupt>
      36:	00 00       	nop
      38:	84 c0       	rjmp	.+264    	; 0x142 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	82 c0       	rjmp	.+260    	; 0x142 <__bad_interrupt>
      3e:	00 00       	nop
      40:	80 c0       	rjmp	.+256    	; 0x142 <__bad_interrupt>
      42:	00 00       	nop
      44:	3d c1       	rjmp	.+634    	; 0x2c0 <__vector_17>
      46:	00 00       	nop
      48:	7c c0       	rjmp	.+248    	; 0x142 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7a c0       	rjmp	.+244    	; 0x142 <__bad_interrupt>
      4e:	00 00       	nop
      50:	78 c0       	rjmp	.+240    	; 0x142 <__bad_interrupt>
      52:	00 00       	nop
      54:	76 c0       	rjmp	.+236    	; 0x142 <__bad_interrupt>
      56:	00 00       	nop
      58:	74 c0       	rjmp	.+232    	; 0x142 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	72 c0       	rjmp	.+228    	; 0x142 <__bad_interrupt>
      5e:	00 00       	nop
      60:	70 c0       	rjmp	.+224    	; 0x142 <__bad_interrupt>
      62:	00 00       	nop
      64:	6e c0       	rjmp	.+220    	; 0x142 <__bad_interrupt>
      66:	00 00       	nop
      68:	6c c0       	rjmp	.+216    	; 0x142 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6a c0       	rjmp	.+212    	; 0x142 <__bad_interrupt>
      6e:	00 00       	nop
      70:	68 c0       	rjmp	.+208    	; 0x142 <__bad_interrupt>
      72:	00 00       	nop
      74:	66 c0       	rjmp	.+204    	; 0x142 <__bad_interrupt>
      76:	00 00       	nop
      78:	64 c0       	rjmp	.+200    	; 0x142 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	62 c0       	rjmp	.+196    	; 0x142 <__bad_interrupt>
      7e:	00 00       	nop
      80:	7e c0       	rjmp	.+252    	; 0x17e <__vector_32>
      82:	00 00       	nop
      84:	5e c0       	rjmp	.+188    	; 0x142 <__bad_interrupt>
      86:	00 00       	nop
      88:	5c c0       	rjmp	.+184    	; 0x142 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	5a c0       	rjmp	.+180    	; 0x142 <__bad_interrupt>
      8e:	00 00       	nop
      90:	58 c0       	rjmp	.+176    	; 0x142 <__bad_interrupt>
      92:	00 00       	nop
      94:	56 c0       	rjmp	.+172    	; 0x142 <__bad_interrupt>
      96:	00 00       	nop
      98:	54 c0       	rjmp	.+168    	; 0x142 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	52 c0       	rjmp	.+164    	; 0x142 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	50 c0       	rjmp	.+160    	; 0x142 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	4e c0       	rjmp	.+156    	; 0x142 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	4c c0       	rjmp	.+152    	; 0x142 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	4a c0       	rjmp	.+148    	; 0x142 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	48 c0       	rjmp	.+144    	; 0x142 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	46 c0       	rjmp	.+140    	; 0x142 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	44 c0       	rjmp	.+136    	; 0x142 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	42 c0       	rjmp	.+132    	; 0x142 <__bad_interrupt>
      be:	00 00       	nop
      c0:	40 c0       	rjmp	.+128    	; 0x142 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	3e c0       	rjmp	.+124    	; 0x142 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	3c c0       	rjmp	.+120    	; 0x142 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	3a c0       	rjmp	.+116    	; 0x142 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	38 c0       	rjmp	.+112    	; 0x142 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	36 c0       	rjmp	.+108    	; 0x142 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	34 c0       	rjmp	.+104    	; 0x142 <__bad_interrupt>
      da:	00 00       	nop
      dc:	32 c0       	rjmp	.+100    	; 0x142 <__bad_interrupt>
      de:	00 00       	nop
      e0:	30 c0       	rjmp	.+96     	; 0x142 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	05 a8       	ldd	r0, Z+53	; 0x35
      e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
      e8:	b2 d4       	rcall	.+2404   	; 0xa4e <i2c_start+0x42>
      ea:	4e b9       	out	0x0e, r20	; 14
      ec:	38 36       	cpi	r19, 0x68	; 104
      ee:	a9 02       	muls	r26, r25
      f0:	0c 50       	subi	r16, 0x0C	; 12
      f2:	b9 91       	ld	r27, Y+
      f4:	86 88       	ldd	r8, Z+22	; 0x16
      f6:	08 3c       	cpi	r16, 0xC8	; 200
      f8:	a6 aa       	std	Z+54, r10	; 0x36
      fa:	aa 2a       	or	r10, r26
      fc:	be 00       	.word	0x00be	; ????
      fe:	00 00       	nop
     100:	80 3f       	cpi	r24, 0xF0	; 240

00000102 <__ctors_end>:
     102:	11 24       	eor	r1, r1
     104:	1f be       	out	0x3f, r1	; 63
     106:	cf ef       	ldi	r28, 0xFF	; 255
     108:	d1 e2       	ldi	r29, 0x21	; 33
     10a:	de bf       	out	0x3e, r29	; 62
     10c:	cd bf       	out	0x3d, r28	; 61
     10e:	00 e0       	ldi	r16, 0x00	; 0
     110:	0c bf       	out	0x3c, r16	; 60

00000112 <__do_copy_data>:
     112:	13 e0       	ldi	r17, 0x03	; 3
     114:	a0 e0       	ldi	r26, 0x00	; 0
     116:	b2 e0       	ldi	r27, 0x02	; 2
     118:	e8 e8       	ldi	r30, 0x88	; 136
     11a:	fa e1       	ldi	r31, 0x1A	; 26
     11c:	00 e0       	ldi	r16, 0x00	; 0
     11e:	0b bf       	out	0x3b, r16	; 59
     120:	02 c0       	rjmp	.+4      	; 0x126 <__do_copy_data+0x14>
     122:	07 90       	elpm	r0, Z+
     124:	0d 92       	st	X+, r0
     126:	a6 3b       	cpi	r26, 0xB6	; 182
     128:	b1 07       	cpc	r27, r17
     12a:	d9 f7       	brne	.-10     	; 0x122 <__do_copy_data+0x10>

0000012c <__do_clear_bss>:
     12c:	23 e0       	ldi	r18, 0x03	; 3
     12e:	a6 eb       	ldi	r26, 0xB6	; 182
     130:	b3 e0       	ldi	r27, 0x03	; 3
     132:	01 c0       	rjmp	.+2      	; 0x136 <.do_clear_bss_start>

00000134 <.do_clear_bss_loop>:
     134:	1d 92       	st	X+, r1

00000136 <.do_clear_bss_start>:
     136:	aa 3d       	cpi	r26, 0xDA	; 218
     138:	b2 07       	cpc	r27, r18
     13a:	e1 f7       	brne	.-8      	; 0x134 <.do_clear_bss_loop>
     13c:	35 d1       	rcall	.+618    	; 0x3a8 <main>
     13e:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <_exit>

00000142 <__bad_interrupt>:
     142:	5e cf       	rjmp	.-324    	; 0x0 <__vectors>

00000144 <init_gpio>:
	*/
	//DDRB|=(1<<PB5);//LED13
	//sbi(DDRB,4);//digital 10
	//sbi(DDRB,5);//digital 11
	//sbi(DDRB,6);//digital 12
	sbi(DDRH,3);//digital 6 OC4A
     144:	e1 e0       	ldi	r30, 0x01	; 1
     146:	f1 e0       	ldi	r31, 0x01	; 1
     148:	80 81       	ld	r24, Z
     14a:	88 60       	ori	r24, 0x08	; 8
     14c:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     14e:	80 81       	ld	r24, Z
     150:	80 61       	ori	r24, 0x10	; 16
     152:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     154:	80 81       	ld	r24, Z
     156:	80 62       	ori	r24, 0x20	; 32
     158:	80 83       	st	Z, r24
     15a:	08 95       	ret

0000015c <uart_putchar>:
}
void writeOcr(uint16_t bla)
{	
	cli();
	OCR1A=bla;
	sei();
     15c:	cf 93       	push	r28
     15e:	c8 2f       	mov	r28, r24
     160:	8a 30       	cpi	r24, 0x0A	; 10
     162:	11 f4       	brne	.+4      	; 0x168 <uart_putchar+0xc>
     164:	8d e0       	ldi	r24, 0x0D	; 13
     166:	fa df       	rcall	.-12     	; 0x15c <uart_putchar>
     168:	e0 ec       	ldi	r30, 0xC0	; 192
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	85 ff       	sbrs	r24, 5
     170:	fd cf       	rjmp	.-6      	; 0x16c <uart_putchar+0x10>
     172:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     176:	80 e0       	ldi	r24, 0x00	; 0
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	cf 91       	pop	r28
     17c:	08 95       	ret

0000017e <__vector_32>:
     17e:	1f 92       	push	r1
     180:	0f 92       	push	r0
     182:	0f b6       	in	r0, 0x3f	; 63
     184:	0f 92       	push	r0
     186:	11 24       	eor	r1, r1
     188:	8f 93       	push	r24
     18a:	9f 93       	push	r25
     18c:	af 93       	push	r26
     18e:	bf 93       	push	r27
     190:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <_10micros>
     194:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <_10micros+0x1>
     198:	a0 91 bc 03 	lds	r26, 0x03BC	; 0x8003bc <_10micros+0x2>
     19c:	b0 91 bd 03 	lds	r27, 0x03BD	; 0x8003bd <_10micros+0x3>
     1a0:	01 96       	adiw	r24, 0x01	; 1
     1a2:	a1 1d       	adc	r26, r1
     1a4:	b1 1d       	adc	r27, r1
     1a6:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <_10micros>
     1aa:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <_10micros+0x1>
     1ae:	a0 93 bc 03 	sts	0x03BC, r26	; 0x8003bc <_10micros+0x2>
     1b2:	b0 93 bd 03 	sts	0x03BD, r27	; 0x8003bd <_10micros+0x3>
     1b6:	bf 91       	pop	r27
     1b8:	af 91       	pop	r26
     1ba:	9f 91       	pop	r25
     1bc:	8f 91       	pop	r24
     1be:	0f 90       	pop	r0
     1c0:	0f be       	out	0x3f, r0	; 63
     1c2:	0f 90       	pop	r0
     1c4:	1f 90       	pop	r1
     1c6:	18 95       	reti

000001c8 <PWM_update>:
     1c8:	e0 91 b8 03 	lds	r30, 0x03B8	; 0x8003b8 <U_step>
     1cc:	f0 91 b9 03 	lds	r31, 0x03B9	; 0x8003b9 <U_step+0x1>
     1d0:	e3 5e       	subi	r30, 0xE3	; 227
     1d2:	fd 4f       	sbci	r31, 0xFD	; 253
     1d4:	80 81       	ld	r24, Z
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     1dc:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     1e0:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <V_step>
     1e4:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <V_step+0x1>
     1e8:	e3 5e       	subi	r30, 0xE3	; 227
     1ea:	fd 4f       	sbci	r31, 0xFD	; 253
     1ec:	80 81       	ld	r24, Z
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     1f4:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
     1f8:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <W_step>
     1fc:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <W_step+0x1>
     200:	e3 5e       	subi	r30, 0xE3	; 227
     202:	fd 4f       	sbci	r31, 0xFD	; 253
     204:	80 81       	ld	r24, Z
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     20c:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
     210:	20 91 0b 02 	lds	r18, 0x020B	; 0x80020b <incr>
     214:	30 91 0c 02 	lds	r19, 0x020C	; 0x80020c <incr+0x1>
     218:	60 91 b8 03 	lds	r22, 0x03B8	; 0x8003b8 <U_step>
     21c:	70 91 b9 03 	lds	r23, 0x03B9	; 0x8003b9 <U_step+0x1>
     220:	62 0f       	add	r22, r18
     222:	73 1f       	adc	r23, r19
     224:	70 93 b9 03 	sts	0x03B9, r23	; 0x8003b9 <U_step+0x1>
     228:	60 93 b8 03 	sts	0x03B8, r22	; 0x8003b8 <U_step>
     22c:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <V_step>
     230:	50 91 09 02 	lds	r21, 0x0209	; 0x800209 <V_step+0x1>
     234:	42 0f       	add	r20, r18
     236:	53 1f       	adc	r21, r19
     238:	50 93 09 02 	sts	0x0209, r21	; 0x800209 <V_step+0x1>
     23c:	40 93 08 02 	sts	0x0208, r20	; 0x800208 <V_step>
     240:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <W_step>
     244:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <W_step+0x1>
     248:	28 0f       	add	r18, r24
     24a:	39 1f       	adc	r19, r25
     24c:	30 93 07 02 	sts	0x0207, r19	; 0x800207 <W_step+0x1>
     250:	20 93 06 02 	sts	0x0206, r18	; 0x800206 <W_step>
     254:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <sinTableSize>
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	86 17       	cp	r24, r22
     25c:	97 07       	cpc	r25, r23
     25e:	2c f4       	brge	.+10     	; 0x26a <PWM_update+0xa2>
     260:	10 92 b9 03 	sts	0x03B9, r1	; 0x8003b9 <U_step+0x1>
     264:	10 92 b8 03 	sts	0x03B8, r1	; 0x8003b8 <U_step>
     268:	06 c0       	rjmp	.+12     	; 0x276 <PWM_update+0xae>
     26a:	77 23       	and	r23, r23
     26c:	24 f4       	brge	.+8      	; 0x276 <PWM_update+0xae>
     26e:	90 93 b9 03 	sts	0x03B9, r25	; 0x8003b9 <U_step+0x1>
     272:	80 93 b8 03 	sts	0x03B8, r24	; 0x8003b8 <U_step>
     276:	84 17       	cp	r24, r20
     278:	95 07       	cpc	r25, r21
     27a:	2c f4       	brge	.+10     	; 0x286 <PWM_update+0xbe>
     27c:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <V_step+0x1>
     280:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <V_step>
     284:	06 c0       	rjmp	.+12     	; 0x292 <PWM_update+0xca>
     286:	55 23       	and	r21, r21
     288:	24 f4       	brge	.+8      	; 0x292 <PWM_update+0xca>
     28a:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <V_step+0x1>
     28e:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <V_step>
     292:	82 17       	cp	r24, r18
     294:	93 07       	cpc	r25, r19
     296:	2c f4       	brge	.+10     	; 0x2a2 <PWM_update+0xda>
     298:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <W_step+0x1>
     29c:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <W_step>
     2a0:	06 c0       	rjmp	.+12     	; 0x2ae <PWM_update+0xe6>
     2a2:	33 23       	and	r19, r19
     2a4:	24 f4       	brge	.+8      	; 0x2ae <PWM_update+0xe6>
     2a6:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <W_step+0x1>
     2aa:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <W_step>
     2ae:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <__data_end>
     2b2:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <__data_end+0x1>
     2b6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     2ba:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     2be:	08 95       	ret

000002c0 <__vector_17>:
     2c0:	1f 92       	push	r1
     2c2:	0f 92       	push	r0
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	0f 92       	push	r0
     2c8:	11 24       	eor	r1, r1
     2ca:	0b b6       	in	r0, 0x3b	; 59
     2cc:	0f 92       	push	r0
     2ce:	2f 93       	push	r18
     2d0:	3f 93       	push	r19
     2d2:	4f 93       	push	r20
     2d4:	5f 93       	push	r21
     2d6:	6f 93       	push	r22
     2d8:	7f 93       	push	r23
     2da:	8f 93       	push	r24
     2dc:	9f 93       	push	r25
     2de:	af 93       	push	r26
     2e0:	bf 93       	push	r27
     2e2:	ef 93       	push	r30
     2e4:	ff 93       	push	r31
     2e6:	70 df       	rcall	.-288    	; 0x1c8 <PWM_update>
     2e8:	ff 91       	pop	r31
     2ea:	ef 91       	pop	r30
     2ec:	bf 91       	pop	r27
     2ee:	af 91       	pop	r26
     2f0:	9f 91       	pop	r25
     2f2:	8f 91       	pop	r24
     2f4:	7f 91       	pop	r23
     2f6:	6f 91       	pop	r22
     2f8:	5f 91       	pop	r21
     2fa:	4f 91       	pop	r20
     2fc:	3f 91       	pop	r19
     2fe:	2f 91       	pop	r18
     300:	0f 90       	pop	r0
     302:	0b be       	out	0x3b, r0	; 59
     304:	0f 90       	pop	r0
     306:	0f be       	out	0x3f, r0	; 63
     308:	0f 90       	pop	r0
     30a:	1f 90       	pop	r1
     30c:	18 95       	reti

0000030e <print16>:
//}

void print16(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     30e:	0f 93       	push	r16
     310:	1f 93       	push	r17
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	cd b7       	in	r28, 0x3d	; 61
     318:	de b7       	in	r29, 0x3e	; 62
     31a:	2a 97       	sbiw	r28, 0x0a	; 10
     31c:	0f b6       	in	r0, 0x3f	; 63
     31e:	f8 94       	cli
     320:	de bf       	out	0x3e, r29	; 62
     322:	0f be       	out	0x3f, r0	; 63
     324:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     326:	4a e0       	ldi	r20, 0x0A	; 10
     328:	8e 01       	movw	r16, r28
     32a:	0f 5f       	subi	r16, 0xFF	; 255
     32c:	1f 4f       	sbci	r17, 0xFF	; 255
     32e:	b8 01       	movw	r22, r16
     330:	fc 01       	movw	r30, r24
     332:	80 81       	ld	r24, Z
     334:	91 81       	ldd	r25, Z+1	; 0x01
     336:	f2 d6       	rcall	.+3556   	; 0x111c <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     338:	1f 93       	push	r17
     33a:	0f 93       	push	r16
     33c:	5c d7       	rcall	.+3768   	; 0x11f6 <printf>
	//printf("\n");
}
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	2a 96       	adiw	r28, 0x0a	; 10
     344:	0f b6       	in	r0, 0x3f	; 63
     346:	f8 94       	cli
     348:	de bf       	out	0x3e, r29	; 62
     34a:	0f be       	out	0x3f, r0	; 63
     34c:	cd bf       	out	0x3d, r28	; 61
     34e:	df 91       	pop	r29
     350:	cf 91       	pop	r28
     352:	1f 91       	pop	r17
     354:	0f 91       	pop	r16
     356:	08 95       	ret

00000358 <print16ln>:

void print16ln(uint16_t *value)
//this is pointer value, transmited value
//must be reference type &
{
     358:	0f 93       	push	r16
     35a:	1f 93       	push	r17
     35c:	cf 93       	push	r28
     35e:	df 93       	push	r29
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
     364:	2a 97       	sbiw	r28, 0x0a	; 10
     366:	0f b6       	in	r0, 0x3f	; 63
     368:	f8 94       	cli
     36a:	de bf       	out	0x3e, r29	; 62
     36c:	0f be       	out	0x3f, r0	; 63
     36e:	cd bf       	out	0x3d, r28	; 61
     370:	4a e0       	ldi	r20, 0x0A	; 10
     372:	8e 01       	movw	r16, r28
     374:	0f 5f       	subi	r16, 0xFF	; 255
     376:	1f 4f       	sbci	r17, 0xFF	; 255
     378:	b8 01       	movw	r22, r16
     37a:	fc 01       	movw	r30, r24
     37c:	80 81       	ld	r24, Z
     37e:	91 81       	ldd	r25, Z+1	; 0x01
     380:	cd d6       	rcall	.+3482   	; 0x111c <__itoa_ncheck>
	char c[10];
	itoa(*value, c, 10);
	printf(c);
     382:	1f 93       	push	r17
     384:	0f 93       	push	r16
	printf("\n");
     386:	37 d7       	rcall	.+3694   	; 0x11f6 <printf>
     388:	8a e0       	ldi	r24, 0x0A	; 10
     38a:	90 e0       	ldi	r25, 0x00	; 0
}
     38c:	47 d7       	rcall	.+3726   	; 0x121c <putchar>
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	2a 96       	adiw	r28, 0x0a	; 10
     394:	0f b6       	in	r0, 0x3f	; 63
     396:	f8 94       	cli
     398:	de bf       	out	0x3e, r29	; 62
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	cd bf       	out	0x3d, r28	; 61
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	1f 91       	pop	r17
     3a4:	0f 91       	pop	r16
     3a6:	08 95       	ret

000003a8 <main>:
int V_step=60;
int W_step=120;
uint16_t pwm_delay=0;
int main(void)

{	
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	cd b7       	in	r28, 0x3d	; 61
     3ae:	de b7       	in	r29, 0x3e	; 62
     3b0:	a2 97       	sbiw	r28, 0x22	; 34
     3b2:	0f b6       	in	r0, 0x3f	; 63
     3b4:	f8 94       	cli
     3b6:	de bf       	out	0x3e, r29	; 62
     3b8:	0f be       	out	0x3f, r0	; 63
	
	init_gpio();
	i2c_init();
     3ba:	cd bf       	out	0x3d, r28	; 61
	USART_Init(MY_UBRR);
     3bc:	c3 de       	rcall	.-634    	; 0x144 <init_gpio>
     3be:	20 d3       	rcall	.+1600   	; 0xa00 <i2c_init>
     3c0:	80 e1       	ldi	r24, 0x10	; 16
	uart_str = fdevopen(uart_putchar, NULL);
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	ce d3       	rcall	.+1948   	; 0xb62 <USART_Init>
     3c6:	60 e0       	ldi	r22, 0x00	; 0
     3c8:	70 e0       	ldi	r23, 0x00	; 0
	setup_timer1();
     3ca:	8e ea       	ldi	r24, 0xAE	; 174
	setup_timer3();
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	c9 d6       	rcall	.+3474   	; 0x1162 <fdevopen>
	setup_timer4();//pwm
     3d0:	90 93 bf 03 	sts	0x03BF, r25	; 0x8003bf <uart_str+0x1>
	Enable_timer3_compare_interrupt();
     3d4:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <uart_str>
	Enable_timer1_compare_interrupt();
     3d8:	04 d3       	rcall	.+1544   	; 0x9e2 <setup_timer1>
     3da:	f4 d2       	rcall	.+1512   	; 0x9c4 <setup_timer3>
	OCR3A=159;//interrupt every 10us
     3dc:	df d2       	rcall	.+1470   	; 0x99c <setup_timer4>
     3de:	fb d2       	rcall	.+1526   	; 0x9d6 <Enable_timer3_compare_interrupt>
     3e0:	09 d3       	rcall	.+1554   	; 0x9f4 <Enable_timer1_compare_interrupt>
     3e2:	8f e9       	ldi	r24, 0x9F	; 159
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
	OCR1A=4000;
     3ea:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     3ee:	80 ea       	ldi	r24, 0xA0	; 160
     3f0:	9f e0       	ldi	r25, 0x0F	; 15
     3f2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
	float acc_total_vector=0;
	float angle_pitch_acc=0;
	float angle_roll_acc=0;
	bool set_gyro_angles;
	#ifdef CALIBERATED_DATA
		int32_t gyroX_calib=0;
     3f6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     3fa:	1d 86       	std	Y+13, r1	; 0x0d
		int32_t gyroY_calib=0;
     3fc:	1e 86       	std	Y+14, r1	; 0x0e
     3fe:	1f 86       	std	Y+15, r1	; 0x0f
     400:	18 8a       	std	Y+16, r1	; 0x10
     402:	19 8a       	std	Y+17, r1	; 0x11
		int32_t gyroZ_calib=0;
     404:	1a 8a       	std	Y+18, r1	; 0x12
     406:	1b 8a       	std	Y+19, r1	; 0x13
     408:	1c 8a       	std	Y+20, r1	; 0x14
		int32_t accelX_calib=0;
		int32_t accelY_calib=0;
		int32_t accelZ_calib=0;
		mpu6050_calibrate_gyro(&gyroX_calib,&gyroY_calib,&gyroZ_calib);
     40a:	1d 8a       	std	Y+21, r1	; 0x15
     40c:	1e 8a       	std	Y+22, r1	; 0x16
     40e:	1f 8a       	std	Y+23, r1	; 0x17
     410:	18 8e       	std	Y+24, r1	; 0x18
     412:	ae 01       	movw	r20, r28
     414:	4b 5e       	subi	r20, 0xEB	; 235
     416:	5f 4f       	sbci	r21, 0xFF	; 255
		//mpu6050_calibrate_accel(&accelX_calib,&accelY_calib,&accelZ_calib);
	#endif
	mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV,7);
     418:	be 01       	movw	r22, r28
     41a:	6f 5e       	subi	r22, 0xEF	; 239
	mpu6050_writeByte(MPU6050_RA_CONFIG,0x00);
     41c:	7f 4f       	sbci	r23, 0xFF	; 255
     41e:	ce 01       	movw	r24, r28
     420:	0d 96       	adiw	r24, 0x0d	; 13
	mpu6050_writeByte(MPU6050_RA_GYRO_CONFIG,0x08);//gyro sensitivity set to 500 o/s
     422:	3e d1       	rcall	.+636    	; 0x6a0 <mpu6050_calibrate_gyro>
     424:	67 e0       	ldi	r22, 0x07	; 7
     426:	89 e1       	ldi	r24, 0x19	; 25
     428:	f2 d1       	rcall	.+996    	; 0x80e <mpu6050_writeByte>
	mpu6050_writeByte(MPU6050_RA_ACCEL_CONFIG,0x10);//accel sensitivity -/+ 8g
     42a:	60 e0       	ldi	r22, 0x00	; 0
     42c:	8a e1       	ldi	r24, 0x1A	; 26
     42e:	ef d1       	rcall	.+990    	; 0x80e <mpu6050_writeByte>
     430:	68 e0       	ldi	r22, 0x08	; 8
	mpu6050_writeByte(MPU6050_RA_PWR_MGMT_1,0x01);
     432:	8b e1       	ldi	r24, 0x1B	; 27
     434:	ec d1       	rcall	.+984    	; 0x80e <mpu6050_writeByte>
     436:	60 e1       	ldi	r22, 0x10	; 16
     438:	8c e1       	ldi	r24, 0x1C	; 28
	
	/*-----------------end---------------*/
	sei();
     43a:	e9 d1       	rcall	.+978    	; 0x80e <mpu6050_writeByte>
	uint32_t timer1=_10micros;
     43c:	61 e0       	ldi	r22, 0x01	; 1
     43e:	8b e6       	ldi	r24, 0x6B	; 107
     440:	e6 d1       	rcall	.+972    	; 0x80e <mpu6050_writeByte>
     442:	78 94       	sei
     444:	40 90 ba 03 	lds	r4, 0x03BA	; 0x8003ba <_10micros>
     448:	50 90 bb 03 	lds	r5, 0x03BB	; 0x8003bb <_10micros+0x1>
	int16_t gyro_z;
	int16_t accel_x;
	int16_t accel_y;
	int16_t accel_z;
	float angle_pitch=0;
	float angle_roll=0;
     44c:	60 90 bc 03 	lds	r6, 0x03BC	; 0x8003bc <_10micros+0x2>
     450:	70 90 bd 03 	lds	r7, 0x03BD	; 0x8003bd <_10micros+0x3>
	int16_t gyro_y;
	int16_t gyro_z;
	int16_t accel_x;
	int16_t accel_y;
	int16_t accel_z;
	float angle_pitch=0;
     454:	1f 8e       	std	Y+31, r1	; 0x1f
     456:	18 a2       	std	Y+32, r1	; 0x20
     458:	19 a2       	std	Y+33, r1	; 0x21
				print16ln(&reg);*/
				
				#ifdef DRV8313
					uint16_t reg=angle_pitch;
					//printf(" ");
					printf("angle_x= ");
     45a:	1a a2       	std	Y+34, r1	; 0x22
     45c:	81 2c       	mov	r8, r1
     45e:	91 2c       	mov	r9, r1
     460:	54 01       	movw	r10, r8
     462:	0f 2e       	mov	r0, r31
     464:	fd e0       	ldi	r31, 0x0D	; 13
					print16(&reg);
					printf(" ");
					pwm_delay =abs(reg)*200;
					printf("ocr= ");
     466:	cf 2e       	mov	r12, r31
     468:	f2 e0       	ldi	r31, 0x02	; 2
     46a:	df 2e       	mov	r13, r31
     46c:	f0 2d       	mov	r31, r0
     46e:	0f 2e       	mov	r0, r31
     470:	f7 e1       	ldi	r31, 0x17	; 23
	/*-----------------end---------------*/
	sei();
	uint32_t timer1=_10micros;
    while (1) 
    {
    	mpu6050_getRawData(&accel_x,&accel_y,&accel_z,&gyro_x,&gyro_y,&gyro_z);//15us to do
     472:	2f 2e       	mov	r2, r31
     474:	f2 e0       	ldi	r31, 0x02	; 2
     476:	3f 2e       	mov	r3, r31
     478:	f0 2d       	mov	r31, r0
     47a:	ce 01       	movw	r24, r28
     47c:	05 96       	adiw	r24, 0x05	; 5
     47e:	7c 01       	movw	r14, r24
     480:	8e 01       	movw	r16, r28
     482:	0d 5f       	subi	r16, 0xFD	; 253
     484:	1f 4f       	sbci	r17, 0xFF	; 255
     486:	9e 01       	movw	r18, r28
     488:	2f 5f       	subi	r18, 0xFF	; 255
     48a:	3f 4f       	sbci	r19, 0xFF	; 255
     48c:	ae 01       	movw	r20, r28
     48e:	45 5f       	subi	r20, 0xF5	; 245
     490:	5f 4f       	sbci	r21, 0xFF	; 255
    	double dt = (double)((_10micros - timer1));
     492:	be 01       	movw	r22, r28
     494:	67 5f       	subi	r22, 0xF7	; 247
     496:	7f 4f       	sbci	r23, 0xFF	; 255
     498:	02 96       	adiw	r24, 0x02	; 2
     49a:	15 d2       	rcall	.+1066   	; 0x8c6 <mpu6050_getRawData>
     49c:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <_10micros>
     4a0:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <_10micros+0x1>
     4a4:	a0 91 bc 03 	lds	r26, 0x03BC	; 0x8003bc <_10micros+0x2>
     4a8:	b0 91 bd 03 	lds	r27, 0x03BD	; 0x8003bd <_10micros+0x3>
     4ac:	bc 01       	movw	r22, r24
     4ae:	cd 01       	movw	r24, r26
     4b0:	64 19       	sub	r22, r4
     4b2:	75 09       	sbc	r23, r5
     4b4:	86 09       	sbc	r24, r6
     4b6:	97 09       	sbc	r25, r7
     4b8:	58 d4       	rcall	.+2224   	; 0xd6a <__floatunsisf>
    	timer1 = _10micros;
     4ba:	6b 8f       	std	Y+27, r22	; 0x1b
     4bc:	7c 8f       	std	Y+28, r23	; 0x1c
     4be:	8d 8f       	std	Y+29, r24	; 0x1d
     4c0:	9e 8f       	std	Y+30, r25	; 0x1e
     4c2:	40 90 ba 03 	lds	r4, 0x03BA	; 0x8003ba <_10micros>
     4c6:	50 90 bb 03 	lds	r5, 0x03BB	; 0x8003bb <_10micros+0x1>
			#ifdef CALIBERATED_DATA
				accX;
				accY;
				accZ;
				grX;
     4ca:	60 90 bc 03 	lds	r6, 0x03BC	; 0x8003bc <_10micros+0x2>
     4ce:	70 90 bd 03 	lds	r7, 0x03BD	; 0x8003bd <_10micros+0x3>
     4d2:	69 81       	ldd	r22, Y+1	; 0x01
     4d4:	7a 81       	ldd	r23, Y+2	; 0x02
     4d6:	8d 85       	ldd	r24, Y+13	; 0x0d
     4d8:	9e 85       	ldd	r25, Y+14	; 0x0e
				grY;
     4da:	68 1b       	sub	r22, r24
     4dc:	79 0b       	sbc	r23, r25
     4de:	7a 83       	std	Y+2, r23	; 0x02
     4e0:	69 83       	std	Y+1, r22	; 0x01
     4e2:	0b 81       	ldd	r16, Y+3	; 0x03
     4e4:	1c 81       	ldd	r17, Y+4	; 0x04
				grZ;
     4e6:	89 89       	ldd	r24, Y+17	; 0x11
     4e8:	9a 89       	ldd	r25, Y+18	; 0x12
     4ea:	08 1b       	sub	r16, r24
     4ec:	19 0b       	sbc	r17, r25
     4ee:	1c 83       	std	Y+4, r17	; 0x04
     4f0:	0b 83       	std	Y+3, r16	; 0x03
		#else
			#ifdef GYRO
				//Accelerometer angle calculations
				double gyroXrate = gyro_x / 65.5; // Convert to deg/s
				double gyroYrate = gyro_y / 65.5; // Convert to deg/s
				angle_pitch += gyroXrate*dt/100000; //Calculate the traveled pitch angle and add this to the angle_pitch variable
     4f2:	ed 80       	ldd	r14, Y+5	; 0x05
     4f4:	fe 80       	ldd	r15, Y+6	; 0x06
     4f6:	8d 89       	ldd	r24, Y+21	; 0x15
     4f8:	9e 89       	ldd	r25, Y+22	; 0x16
     4fa:	e8 1a       	sub	r14, r24
     4fc:	f9 0a       	sbc	r15, r25
     4fe:	fe 82       	std	Y+6, r15	; 0x06
     500:	ed 82       	std	Y+5, r14	; 0x05
     502:	07 2e       	mov	r0, r23
     504:	00 0c       	add	r0, r0
     506:	88 0b       	sbc	r24, r24
     508:	99 0b       	sbc	r25, r25
     50a:	31 d4       	rcall	.+2146   	; 0xd6e <__floatsisf>
     50c:	20 e0       	ldi	r18, 0x00	; 0
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	43 e8       	ldi	r20, 0x83	; 131
     512:	52 e4       	ldi	r21, 0x42	; 66
     514:	96 d3       	rcall	.+1836   	; 0xc42 <__divsf3>
     516:	2b 8d       	ldd	r18, Y+27	; 0x1b
     518:	3c 8d       	ldd	r19, Y+28	; 0x1c
     51a:	4d 8d       	ldd	r20, Y+29	; 0x1d
     51c:	5e 8d       	ldd	r21, Y+30	; 0x1e
     51e:	b3 d4       	rcall	.+2406   	; 0xe86 <__mulsf3>
     520:	20 e0       	ldi	r18, 0x00	; 0
				angle_roll += gyroYrate*dt/100000;  //Calculate the traveled roll angle and add this to the angle_roll variable
     522:	30 e5       	ldi	r19, 0x50	; 80
     524:	43 ec       	ldi	r20, 0xC3	; 195
     526:	57 e4       	ldi	r21, 0x47	; 71
     528:	8c d3       	rcall	.+1816   	; 0xc42 <__divsf3>
     52a:	a5 01       	movw	r20, r10
     52c:	94 01       	movw	r18, r8
     52e:	25 d3       	rcall	.+1610   	; 0xb7a <__addsf3>
     530:	4b 01       	movw	r8, r22
     532:	5c 01       	movw	r10, r24
     534:	b8 01       	movw	r22, r16
     536:	11 0f       	add	r17, r17
     538:	88 0b       	sbc	r24, r24
     53a:	99 0b       	sbc	r25, r25
     53c:	18 d4       	rcall	.+2096   	; 0xd6e <__floatsisf>
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	30 e0       	ldi	r19, 0x00	; 0
     542:	43 e8       	ldi	r20, 0x83	; 131
     544:	52 e4       	ldi	r21, 0x42	; 66
     546:	7d d3       	rcall	.+1786   	; 0xc42 <__divsf3>
     548:	2b 8d       	ldd	r18, Y+27	; 0x1b
     54a:	3c 8d       	ldd	r19, Y+28	; 0x1c
     54c:	4d 8d       	ldd	r20, Y+29	; 0x1d
     54e:	5e 8d       	ldd	r21, Y+30	; 0x1e
     550:	9a d4       	rcall	.+2356   	; 0xe86 <__mulsf3>
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e5       	ldi	r19, 0x50	; 80
     556:	43 ec       	ldi	r20, 0xC3	; 195
     558:	57 e4       	ldi	r21, 0x47	; 71
				
				//0.000001066 = 0.0000611 * (3.142(PI) / 180degr) The Arduino sin function is in radians
				angle_pitch += angle_roll * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the roll angle to the pitch angel
     55a:	73 d3       	rcall	.+1766   	; 0xc42 <__divsf3>
     55c:	2f 8d       	ldd	r18, Y+31	; 0x1f
     55e:	38 a1       	ldd	r19, Y+32	; 0x20
     560:	49 a1       	ldd	r20, Y+33	; 0x21
     562:	5a a1       	ldd	r21, Y+34	; 0x22
     564:	0a d3       	rcall	.+1556   	; 0xb7a <__addsf3>
     566:	6f 8f       	std	Y+31, r22	; 0x1f
     568:	78 a3       	std	Y+32, r23	; 0x20
     56a:	89 a3       	std	Y+33, r24	; 0x21
     56c:	9a a3       	std	Y+34, r25	; 0x22
     56e:	b7 01       	movw	r22, r14
     570:	ff 0c       	add	r15, r15
     572:	88 0b       	sbc	r24, r24
     574:	99 0b       	sbc	r25, r25
     576:	fb d3       	rcall	.+2038   	; 0xd6e <__floatsisf>
     578:	2b e7       	ldi	r18, 0x7B	; 123
     57a:	33 e1       	ldi	r19, 0x13	; 19
     57c:	4f e8       	ldi	r20, 0x8F	; 143
     57e:	55 e3       	ldi	r21, 0x35	; 53
     580:	82 d4       	rcall	.+2308   	; 0xe86 <__mulsf3>
     582:	e4 d4       	rcall	.+2504   	; 0xf4c <sin>
     584:	6b 8f       	std	Y+27, r22	; 0x1b
     586:	7c 8f       	std	Y+28, r23	; 0x1c
     588:	8d 8f       	std	Y+29, r24	; 0x1d
     58a:	9e 8f       	std	Y+30, r25	; 0x1e
     58c:	9b 01       	movw	r18, r22
				angle_roll -= angle_pitch * sin(gyro_z * 0.000001066);               //If the IMU has yawed transfer the pitch angle to the roll angel
     58e:	ac 01       	movw	r20, r24
     590:	6f 8d       	ldd	r22, Y+31	; 0x1f
     592:	78 a1       	ldd	r23, Y+32	; 0x20
     594:	89 a1       	ldd	r24, Y+33	; 0x21
     596:	9a a1       	ldd	r25, Y+34	; 0x22
     598:	76 d4       	rcall	.+2284   	; 0xe86 <__mulsf3>
     59a:	a5 01       	movw	r20, r10
     59c:	94 01       	movw	r18, r8
     59e:	ed d2       	rcall	.+1498   	; 0xb7a <__addsf3>
     5a0:	4b 01       	movw	r8, r22
     5a2:	5c 01       	movw	r10, r24
     5a4:	9b 01       	movw	r18, r22
     5a6:	ac 01       	movw	r20, r24
     5a8:	6b 8d       	ldd	r22, Y+27	; 0x1b
     5aa:	7c 8d       	ldd	r23, Y+28	; 0x1c
     5ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
     5ae:	9e 8d       	ldd	r25, Y+30	; 0x1e
     5b0:	6a d4       	rcall	.+2260   	; 0xe86 <__mulsf3>
     5b2:	9b 01       	movw	r18, r22
				printf(" ");
				printf("accel= ");
				print16ln(&reg);*/
				
				#ifdef DRV8313
					uint16_t reg=angle_pitch;
     5b4:	ac 01       	movw	r20, r24
     5b6:	6f 8d       	ldd	r22, Y+31	; 0x1f
     5b8:	78 a1       	ldd	r23, Y+32	; 0x20
     5ba:	89 a1       	ldd	r24, Y+33	; 0x21
     5bc:	9a a1       	ldd	r25, Y+34	; 0x22
					//printf(" ");
					printf("angle_x= ");
     5be:	dc d2       	rcall	.+1464   	; 0xb78 <__subsf3>
     5c0:	6f 8f       	std	Y+31, r22	; 0x1f
     5c2:	78 a3       	std	Y+32, r23	; 0x20
     5c4:	89 a3       	std	Y+33, r24	; 0x21
					print16(&reg);
     5c6:	9a a3       	std	Y+34, r25	; 0x22
     5c8:	c5 01       	movw	r24, r10
     5ca:	b4 01       	movw	r22, r8
     5cc:	a2 d3       	rcall	.+1860   	; 0xd12 <__fixunssfsi>
					printf(" ");
     5ce:	7a 8f       	std	Y+26, r23	; 0x1a
     5d0:	69 8f       	std	Y+25, r22	; 0x19
     5d2:	df 92       	push	r13
     5d4:	cf 92       	push	r12
					pwm_delay =abs(reg)*200;
     5d6:	0f d6       	rcall	.+3102   	; 0x11f6 <printf>
     5d8:	ce 01       	movw	r24, r28
     5da:	49 96       	adiw	r24, 0x19	; 25
     5dc:	98 de       	rcall	.-720    	; 0x30e <print16>
     5de:	80 e2       	ldi	r24, 0x20	; 32
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	1c d6       	rcall	.+3128   	; 0x121c <putchar>
     5e4:	89 8d       	ldd	r24, Y+25	; 0x19
     5e6:	9a 8d       	ldd	r25, Y+26	; 0x1a
     5e8:	99 23       	and	r25, r25
     5ea:	1c f4       	brge	.+6      	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
     5ec:	91 95       	neg	r25
     5ee:	81 95       	neg	r24
     5f0:	91 09       	sbc	r25, r1
     5f2:	48 ec       	ldi	r20, 0xC8	; 200
     5f4:	48 9f       	mul	r20, r24
     5f6:	90 01       	movw	r18, r0
					printf("ocr= ");
     5f8:	49 9f       	mul	r20, r25
     5fa:	30 0d       	add	r19, r0
     5fc:	11 24       	eor	r1, r1
     5fe:	30 93 b7 03 	sts	0x03B7, r19	; 0x8003b7 <__data_end+0x1>
					print16ln(&pwm_delay);
     602:	20 93 b6 03 	sts	0x03B6, r18	; 0x8003b6 <__data_end>
     606:	3f 92       	push	r3
     608:	2f 92       	push	r2
     60a:	f5 d5       	rcall	.+3050   	; 0x11f6 <printf>
     60c:	86 eb       	ldi	r24, 0xB6	; 182
     60e:	93 e0       	ldi	r25, 0x03	; 3
     610:	a3 de       	rcall	.-698    	; 0x358 <print16ln>
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	0f 90       	pop	r0
     618:	0f 90       	pop	r0
     61a:	2f cf       	rjmp	.-418    	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>

0000061c <mpu6050_readByte>:
	printf("  ");
	print16ln(z);
	_delay_ms(1000);
	//-----------------------------------
	*/
}
     61c:	cf 93       	push	r28
     61e:	c8 2f       	mov	r28, r24
     620:	80 ed       	ldi	r24, 0xD0	; 208
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	f3 d1       	rcall	.+998    	; 0xa0c <i2c_start>
     626:	8c 2f       	mov	r24, r28
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	46 d2       	rcall	.+1164   	; 0xab8 <i2c_write>
     62c:	35 d2       	rcall	.+1130   	; 0xa98 <i2c_stop>
     62e:	81 ed       	ldi	r24, 0xD1	; 209
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	ec d1       	rcall	.+984    	; 0xa0c <i2c_start>
     634:	7c d2       	rcall	.+1272   	; 0xb2e <i2c_readNak>
     636:	c8 2f       	mov	r28, r24
     638:	2f d2       	rcall	.+1118   	; 0xa98 <i2c_stop>
     63a:	8c 2f       	mov	r24, r28
     63c:	cf 91       	pop	r28
     63e:	08 95       	ret

00000640 <mpu6050_read_gyroX>:
     640:	cf 93       	push	r28
     642:	df 93       	push	r29
     644:	83 e4       	ldi	r24, 0x43	; 67
     646:	ea df       	rcall	.-44     	; 0x61c <mpu6050_readByte>
     648:	c8 2f       	mov	r28, r24
     64a:	d0 e0       	ldi	r29, 0x00	; 0
     64c:	dc 2f       	mov	r29, r28
     64e:	cc 27       	eor	r28, r28
     650:	84 e4       	ldi	r24, 0x44	; 68
     652:	e4 df       	rcall	.-56     	; 0x61c <mpu6050_readByte>
     654:	9e 01       	movw	r18, r28
     656:	28 2b       	or	r18, r24
     658:	c9 01       	movw	r24, r18
     65a:	df 91       	pop	r29
     65c:	cf 91       	pop	r28
     65e:	08 95       	ret

00000660 <mpu6050_read_gyroY>:
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	85 e4       	ldi	r24, 0x45	; 69
     666:	da df       	rcall	.-76     	; 0x61c <mpu6050_readByte>
     668:	c8 2f       	mov	r28, r24
     66a:	d0 e0       	ldi	r29, 0x00	; 0
     66c:	dc 2f       	mov	r29, r28
     66e:	cc 27       	eor	r28, r28
     670:	86 e4       	ldi	r24, 0x46	; 70
     672:	d4 df       	rcall	.-88     	; 0x61c <mpu6050_readByte>
     674:	9e 01       	movw	r18, r28
     676:	28 2b       	or	r18, r24
     678:	c9 01       	movw	r24, r18
     67a:	df 91       	pop	r29
     67c:	cf 91       	pop	r28
     67e:	08 95       	ret

00000680 <mpu6050_read_gyroZ>:
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	87 e4       	ldi	r24, 0x47	; 71
     686:	ca df       	rcall	.-108    	; 0x61c <mpu6050_readByte>
     688:	c8 2f       	mov	r28, r24
     68a:	d0 e0       	ldi	r29, 0x00	; 0
     68c:	dc 2f       	mov	r29, r28
     68e:	cc 27       	eor	r28, r28
     690:	88 e4       	ldi	r24, 0x48	; 72
     692:	c4 df       	rcall	.-120    	; 0x61c <mpu6050_readByte>
     694:	9e 01       	movw	r18, r28
     696:	28 2b       	or	r18, r24
     698:	c9 01       	movw	r24, r18
     69a:	df 91       	pop	r29
     69c:	cf 91       	pop	r28
     69e:	08 95       	ret

000006a0 <mpu6050_calibrate_gyro>:
     6a0:	cf 92       	push	r12
     6a2:	df 92       	push	r13
     6a4:	ef 92       	push	r14
     6a6:	ff 92       	push	r15
     6a8:	0f 93       	push	r16
     6aa:	1f 93       	push	r17
     6ac:	cf 93       	push	r28
     6ae:	df 93       	push	r29
     6b0:	6c 01       	movw	r12, r24
     6b2:	7b 01       	movw	r14, r22
     6b4:	8a 01       	movw	r16, r20
     6b6:	85 e8       	ldi	r24, 0x85	; 133
     6b8:	93 e0       	ldi	r25, 0x03	; 3
     6ba:	b5 d5       	rcall	.+2922   	; 0x1226 <puts>
     6bc:	c4 e1       	ldi	r28, 0x14	; 20
     6be:	d0 e0       	ldi	r29, 0x00	; 0
     6c0:	bf df       	rcall	.-130    	; 0x640 <mpu6050_read_gyroX>
     6c2:	f6 01       	movw	r30, r12
     6c4:	40 81       	ld	r20, Z
     6c6:	51 81       	ldd	r21, Z+1	; 0x01
     6c8:	62 81       	ldd	r22, Z+2	; 0x02
     6ca:	73 81       	ldd	r23, Z+3	; 0x03
     6cc:	48 0f       	add	r20, r24
     6ce:	59 1f       	adc	r21, r25
     6d0:	61 1d       	adc	r22, r1
     6d2:	71 1d       	adc	r23, r1
     6d4:	40 83       	st	Z, r20
     6d6:	51 83       	std	Z+1, r21	; 0x01
     6d8:	62 83       	std	Z+2, r22	; 0x02
     6da:	73 83       	std	Z+3, r23	; 0x03
     6dc:	c1 df       	rcall	.-126    	; 0x660 <mpu6050_read_gyroY>
     6de:	f7 01       	movw	r30, r14
     6e0:	40 81       	ld	r20, Z
     6e2:	51 81       	ldd	r21, Z+1	; 0x01
     6e4:	62 81       	ldd	r22, Z+2	; 0x02
     6e6:	73 81       	ldd	r23, Z+3	; 0x03
     6e8:	48 0f       	add	r20, r24
     6ea:	59 1f       	adc	r21, r25
     6ec:	61 1d       	adc	r22, r1
     6ee:	71 1d       	adc	r23, r1
     6f0:	40 83       	st	Z, r20
     6f2:	51 83       	std	Z+1, r21	; 0x01
     6f4:	62 83       	std	Z+2, r22	; 0x02
     6f6:	73 83       	std	Z+3, r23	; 0x03
     6f8:	c3 df       	rcall	.-122    	; 0x680 <mpu6050_read_gyroZ>
     6fa:	f8 01       	movw	r30, r16
     6fc:	40 81       	ld	r20, Z
     6fe:	51 81       	ldd	r21, Z+1	; 0x01
     700:	62 81       	ldd	r22, Z+2	; 0x02
     702:	73 81       	ldd	r23, Z+3	; 0x03
     704:	48 0f       	add	r20, r24
     706:	59 1f       	adc	r21, r25
     708:	61 1d       	adc	r22, r1
     70a:	71 1d       	adc	r23, r1
     70c:	40 83       	st	Z, r20
     70e:	51 83       	std	Z+1, r21	; 0x01
     710:	62 83       	std	Z+2, r22	; 0x02
     712:	73 83       	std	Z+3, r23	; 0x03
     714:	21 97       	sbiw	r28, 0x01	; 1
     716:	a1 f6       	brne	.-88     	; 0x6c0 <mpu6050_calibrate_gyro+0x20>
     718:	f6 01       	movw	r30, r12
     71a:	60 81       	ld	r22, Z
     71c:	71 81       	ldd	r23, Z+1	; 0x01
     71e:	82 81       	ldd	r24, Z+2	; 0x02
     720:	93 81       	ldd	r25, Z+3	; 0x03
     722:	99 23       	and	r25, r25
     724:	ac f4       	brge	.+42     	; 0x750 <mpu6050_calibrate_gyro+0xb0>
     726:	9b 01       	movw	r18, r22
     728:	77 23       	and	r23, r23
     72a:	24 f4       	brge	.+8      	; 0x734 <mpu6050_calibrate_gyro+0x94>
     72c:	22 27       	eor	r18, r18
     72e:	33 27       	eor	r19, r19
     730:	26 1b       	sub	r18, r22
     732:	37 0b       	sbc	r19, r23
     734:	c9 01       	movw	r24, r18
     736:	64 e1       	ldi	r22, 0x14	; 20
     738:	70 e0       	ldi	r23, 0x00	; 0
     73a:	8b d4       	rcall	.+2326   	; 0x1052 <__divmodhi4>
     73c:	cb 01       	movw	r24, r22
     73e:	77 0f       	add	r23, r23
     740:	aa 0b       	sbc	r26, r26
     742:	bb 0b       	sbc	r27, r27
     744:	f6 01       	movw	r30, r12
     746:	80 83       	st	Z, r24
     748:	91 83       	std	Z+1, r25	; 0x01
     74a:	a2 83       	std	Z+2, r26	; 0x02
     74c:	b3 83       	std	Z+3, r27	; 0x03
     74e:	0a c0       	rjmp	.+20     	; 0x764 <mpu6050_calibrate_gyro+0xc4>
     750:	24 e1       	ldi	r18, 0x14	; 20
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	40 e0       	ldi	r20, 0x00	; 0
     756:	50 e0       	ldi	r21, 0x00	; 0
     758:	8f d4       	rcall	.+2334   	; 0x1078 <__divmodsi4>
     75a:	f6 01       	movw	r30, r12
     75c:	20 83       	st	Z, r18
     75e:	31 83       	std	Z+1, r19	; 0x01
     760:	42 83       	std	Z+2, r20	; 0x02
     762:	53 83       	std	Z+3, r21	; 0x03
     764:	f7 01       	movw	r30, r14
     766:	60 81       	ld	r22, Z
     768:	71 81       	ldd	r23, Z+1	; 0x01
     76a:	82 81       	ldd	r24, Z+2	; 0x02
     76c:	93 81       	ldd	r25, Z+3	; 0x03
     76e:	99 23       	and	r25, r25
     770:	ac f4       	brge	.+42     	; 0x79c <mpu6050_calibrate_gyro+0xfc>
     772:	9b 01       	movw	r18, r22
     774:	77 23       	and	r23, r23
     776:	24 f4       	brge	.+8      	; 0x780 <mpu6050_calibrate_gyro+0xe0>
     778:	22 27       	eor	r18, r18
     77a:	33 27       	eor	r19, r19
     77c:	26 1b       	sub	r18, r22
     77e:	37 0b       	sbc	r19, r23
     780:	c9 01       	movw	r24, r18
     782:	64 e1       	ldi	r22, 0x14	; 20
     784:	70 e0       	ldi	r23, 0x00	; 0
     786:	65 d4       	rcall	.+2250   	; 0x1052 <__divmodhi4>
     788:	cb 01       	movw	r24, r22
     78a:	77 0f       	add	r23, r23
     78c:	aa 0b       	sbc	r26, r26
     78e:	bb 0b       	sbc	r27, r27
     790:	f7 01       	movw	r30, r14
     792:	80 83       	st	Z, r24
     794:	91 83       	std	Z+1, r25	; 0x01
     796:	a2 83       	std	Z+2, r26	; 0x02
     798:	b3 83       	std	Z+3, r27	; 0x03
     79a:	0a c0       	rjmp	.+20     	; 0x7b0 <mpu6050_calibrate_gyro+0x110>
     79c:	24 e1       	ldi	r18, 0x14	; 20
     79e:	30 e0       	ldi	r19, 0x00	; 0
     7a0:	40 e0       	ldi	r20, 0x00	; 0
     7a2:	50 e0       	ldi	r21, 0x00	; 0
     7a4:	69 d4       	rcall	.+2258   	; 0x1078 <__divmodsi4>
     7a6:	f7 01       	movw	r30, r14
     7a8:	20 83       	st	Z, r18
     7aa:	31 83       	std	Z+1, r19	; 0x01
     7ac:	42 83       	std	Z+2, r20	; 0x02
     7ae:	53 83       	std	Z+3, r21	; 0x03
     7b0:	f8 01       	movw	r30, r16
     7b2:	60 81       	ld	r22, Z
     7b4:	71 81       	ldd	r23, Z+1	; 0x01
     7b6:	82 81       	ldd	r24, Z+2	; 0x02
     7b8:	93 81       	ldd	r25, Z+3	; 0x03
     7ba:	99 23       	and	r25, r25
     7bc:	ac f4       	brge	.+42     	; 0x7e8 <mpu6050_calibrate_gyro+0x148>
     7be:	9b 01       	movw	r18, r22
     7c0:	77 23       	and	r23, r23
     7c2:	24 f4       	brge	.+8      	; 0x7cc <mpu6050_calibrate_gyro+0x12c>
     7c4:	22 27       	eor	r18, r18
     7c6:	33 27       	eor	r19, r19
     7c8:	26 1b       	sub	r18, r22
     7ca:	37 0b       	sbc	r19, r23
     7cc:	c9 01       	movw	r24, r18
     7ce:	64 e1       	ldi	r22, 0x14	; 20
     7d0:	70 e0       	ldi	r23, 0x00	; 0
     7d2:	3f d4       	rcall	.+2174   	; 0x1052 <__divmodhi4>
     7d4:	cb 01       	movw	r24, r22
     7d6:	77 0f       	add	r23, r23
     7d8:	aa 0b       	sbc	r26, r26
     7da:	bb 0b       	sbc	r27, r27
     7dc:	f8 01       	movw	r30, r16
     7de:	80 83       	st	Z, r24
     7e0:	91 83       	std	Z+1, r25	; 0x01
     7e2:	a2 83       	std	Z+2, r26	; 0x02
     7e4:	b3 83       	std	Z+3, r27	; 0x03
     7e6:	0a c0       	rjmp	.+20     	; 0x7fc <mpu6050_calibrate_gyro+0x15c>
     7e8:	24 e1       	ldi	r18, 0x14	; 20
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	40 e0       	ldi	r20, 0x00	; 0
     7ee:	50 e0       	ldi	r21, 0x00	; 0
     7f0:	43 d4       	rcall	.+2182   	; 0x1078 <__divmodsi4>
     7f2:	f8 01       	movw	r30, r16
     7f4:	20 83       	st	Z, r18
     7f6:	31 83       	std	Z+1, r19	; 0x01
     7f8:	42 83       	std	Z+2, r20	; 0x02
     7fa:	53 83       	std	Z+3, r21	; 0x03
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	1f 91       	pop	r17
     802:	0f 91       	pop	r16
     804:	ff 90       	pop	r15
     806:	ef 90       	pop	r14
     808:	df 90       	pop	r13
     80a:	cf 90       	pop	r12
     80c:	08 95       	ret

0000080e <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
     80e:	cf 93       	push	r28
     810:	df 93       	push	r29
     812:	d8 2f       	mov	r29, r24
     814:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
     816:	80 ed       	ldi	r24, 0xD0	; 208
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	f8 d0       	rcall	.+496    	; 0xa0c <i2c_start>
	i2c_write(wereToWrite);
     81c:	8d 2f       	mov	r24, r29
     81e:	90 e0       	ldi	r25, 0x00	; 0
	i2c_write(byteToWrite);
     820:	4b d1       	rcall	.+662    	; 0xab8 <i2c_write>
     822:	8c 2f       	mov	r24, r28
	i2c_stop();
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	48 d1       	rcall	.+656    	; 0xab8 <i2c_write>
}
     828:	37 d1       	rcall	.+622    	; 0xa98 <i2c_stop>
     82a:	df 91       	pop	r29
     82c:	cf 91       	pop	r28
     82e:	08 95       	ret

00000830 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     830:	af 92       	push	r10
     832:	bf 92       	push	r11
     834:	cf 92       	push	r12
     836:	df 92       	push	r13
     838:	ff 92       	push	r15
     83a:	0f 93       	push	r16
     83c:	1f 93       	push	r17
     83e:	cf 93       	push	r28
     840:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     842:	66 23       	and	r22, r22
     844:	a1 f1       	breq	.+104    	; 0x8ae <mpu6050_readBytes+0x7e>
     846:	c5 2f       	mov	r28, r21
     848:	d4 2f       	mov	r29, r20
     84a:	f6 2e       	mov	r15, r22
     84c:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
     84e:	80 ed       	ldi	r24, 0xD0	; 208
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	dc d0       	rcall	.+440    	; 0xa0c <i2c_start>
		i2c_write(regAddr);
     854:	81 2f       	mov	r24, r17
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	2f d1       	rcall	.+606    	; 0xab8 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     85a:	85 e3       	ldi	r24, 0x35	; 53
     85c:	8a 95       	dec	r24
     85e:	f1 f7       	brne	.-4      	; 0x85c <mpu6050_readBytes+0x2c>
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
     860:	00 00       	nop
     862:	81 ed       	ldi	r24, 0xD1	; 209
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	d2 d0       	rcall	.+420    	; 0xa0c <i2c_start>
     868:	0d 2f       	mov	r16, r29
     86a:	1c 2f       	mov	r17, r28
     86c:	cc 24       	eor	r12, r12
     86e:	ca 94       	dec	r12
     870:	cf 0c       	add	r12, r15
     872:	d1 2c       	mov	r13, r1
     874:	ef ef       	ldi	r30, 0xFF	; 255
     876:	ce 1a       	sub	r12, r30
     878:	de 0a       	sbc	r13, r30
     87a:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     87c:	d0 e0       	ldi	r29, 0x00	; 0
     87e:	af 2c       	mov	r10, r15
     880:	b1 2c       	mov	r11, r1
     882:	f1 e0       	ldi	r31, 0x01	; 1
     884:	af 1a       	sub	r10, r31
     886:	b1 08       	sbc	r11, r1
     888:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
     88a:	bd 06       	cpc	r11, r29
     88c:	21 f4       	brne	.+8      	; 0x896 <mpu6050_readBytes+0x66>
     88e:	4f d1       	rcall	.+670    	; 0xb2e <i2c_readNak>
     890:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
     892:	80 83       	st	Z, r24
     894:	03 c0       	rjmp	.+6      	; 0x89c <mpu6050_readBytes+0x6c>
     896:	31 d1       	rcall	.+610    	; 0xafa <i2c_readAck>
     898:	f8 01       	movw	r30, r16
     89a:	80 83       	st	Z, r24
     89c:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
     89e:	0f 5f       	subi	r16, 0xFF	; 255
     8a0:	1f 4f       	sbci	r17, 0xFF	; 255
     8a2:	cc 15       	cp	r28, r12
     8a4:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
     8a6:	81 f7       	brne	.-32     	; 0x888 <mpu6050_readBytes+0x58>
     8a8:	cf 2d       	mov	r28, r15
     8aa:	f6 d0       	rcall	.+492    	; 0xa98 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <mpu6050_readBytes+0x80>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     8ae:	c0 e0       	ldi	r28, 0x00	; 0
     8b0:	8c 2f       	mov	r24, r28
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	1f 91       	pop	r17
     8b8:	0f 91       	pop	r16
     8ba:	ff 90       	pop	r15
     8bc:	df 90       	pop	r13
     8be:	cf 90       	pop	r12
     8c0:	bf 90       	pop	r11
     8c2:	af 90       	pop	r10
     8c4:	08 95       	ret

000008c6 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     8c6:	6f 92       	push	r6
     8c8:	7f 92       	push	r7
     8ca:	8f 92       	push	r8
     8cc:	9f 92       	push	r9
     8ce:	af 92       	push	r10
     8d0:	bf 92       	push	r11
     8d2:	cf 92       	push	r12
     8d4:	df 92       	push	r13
     8d6:	ef 92       	push	r14
     8d8:	ff 92       	push	r15
     8da:	0f 93       	push	r16
     8dc:	1f 93       	push	r17
     8de:	cf 93       	push	r28
     8e0:	df 93       	push	r29
     8e2:	cd b7       	in	r28, 0x3d	; 61
     8e4:	de b7       	in	r29, 0x3e	; 62
     8e6:	2e 97       	sbiw	r28, 0x0e	; 14
     8e8:	0f b6       	in	r0, 0x3f	; 63
     8ea:	f8 94       	cli
     8ec:	de bf       	out	0x3e, r29	; 62
     8ee:	0f be       	out	0x3f, r0	; 63
     8f0:	cd bf       	out	0x3d, r28	; 61
     8f2:	4c 01       	movw	r8, r24
     8f4:	5b 01       	movw	r10, r22
     8f6:	6a 01       	movw	r12, r20
     8f8:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
     8fa:	ae 01       	movw	r20, r28
     8fc:	4f 5f       	subi	r20, 0xFF	; 255
     8fe:	5f 4f       	sbci	r21, 0xFF	; 255
     900:	6e e0       	ldi	r22, 0x0E	; 14
     902:	8b e3       	ldi	r24, 0x3B	; 59
     904:	95 df       	rcall	.-214    	; 0x830 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     906:	89 81       	ldd	r24, Y+1	; 0x01
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	98 2f       	mov	r25, r24
     90c:	88 27       	eor	r24, r24
     90e:	2a 81       	ldd	r18, Y+2	; 0x02
     910:	82 2b       	or	r24, r18
     912:	f4 01       	movw	r30, r8
     914:	91 83       	std	Z+1, r25	; 0x01
     916:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     918:	8b 81       	ldd	r24, Y+3	; 0x03
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	98 2f       	mov	r25, r24
     91e:	88 27       	eor	r24, r24
     920:	2c 81       	ldd	r18, Y+4	; 0x04
     922:	82 2b       	or	r24, r18
     924:	f5 01       	movw	r30, r10
     926:	91 83       	std	Z+1, r25	; 0x01
     928:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
     92a:	8d 81       	ldd	r24, Y+5	; 0x05
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	98 2f       	mov	r25, r24
     930:	88 27       	eor	r24, r24
     932:	2e 81       	ldd	r18, Y+6	; 0x06
     934:	82 2b       	or	r24, r18
     936:	f6 01       	movw	r30, r12
     938:	91 83       	std	Z+1, r25	; 0x01
     93a:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     93c:	89 85       	ldd	r24, Y+9	; 0x09
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	98 2f       	mov	r25, r24
     942:	88 27       	eor	r24, r24
     944:	2a 85       	ldd	r18, Y+10	; 0x0a
     946:	82 2b       	or	r24, r18
     948:	f3 01       	movw	r30, r6
     94a:	91 83       	std	Z+1, r25	; 0x01
     94c:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     94e:	8b 85       	ldd	r24, Y+11	; 0x0b
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	98 2f       	mov	r25, r24
     954:	88 27       	eor	r24, r24
     956:	2c 85       	ldd	r18, Y+12	; 0x0c
     958:	82 2b       	or	r24, r18
     95a:	f8 01       	movw	r30, r16
     95c:	91 83       	std	Z+1, r25	; 0x01
     95e:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     960:	8d 85       	ldd	r24, Y+13	; 0x0d
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	98 2f       	mov	r25, r24
     966:	88 27       	eor	r24, r24
     968:	2e 85       	ldd	r18, Y+14	; 0x0e
     96a:	82 2b       	or	r24, r18
     96c:	f7 01       	movw	r30, r14
     96e:	91 83       	std	Z+1, r25	; 0x01
     970:	80 83       	st	Z, r24
     972:	2e 96       	adiw	r28, 0x0e	; 14
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	f8 94       	cli
     978:	de bf       	out	0x3e, r29	; 62
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	cd bf       	out	0x3d, r28	; 61
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	ff 90       	pop	r15
     988:	ef 90       	pop	r14
     98a:	df 90       	pop	r13
     98c:	cf 90       	pop	r12
     98e:	bf 90       	pop	r11
     990:	af 90       	pop	r10
     992:	9f 90       	pop	r9
     994:	8f 90       	pop	r8
     996:	7f 90       	pop	r7
     998:	6f 90       	pop	r6
     99a:	08 95       	ret

0000099c <setup_timer4>:
	sbi (TIMSK3, TOIE3);
}*/
/*-----------Timter 1-----------*/
void setup_timer4(void)
{
    sbi (TCCR4B, CS40);//prescakaer 256
     99c:	e1 ea       	ldi	r30, 0xA1	; 161
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	80 81       	ld	r24, Z
     9a2:	81 60       	ori	r24, 0x01	; 1
     9a4:	80 83       	st	Z, r24
    sbi (TCCR4A, WGM40);//8 bit phase correct PWM
     9a6:	e0 ea       	ldi	r30, 0xA0	; 160
     9a8:	f0 e0       	ldi	r31, 0x00	; 0
     9aa:	80 81       	ld	r24, Z
     9ac:	81 60       	ori	r24, 0x01	; 1
     9ae:	80 83       	st	Z, r24
	
	//sbi (TCCR4A,COM4A0);
	sbi (TCCR4A,COM4A1);
     9b0:	80 81       	ld	r24, Z
     9b2:	80 68       	ori	r24, 0x80	; 128
     9b4:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4B0);
	sbi (TCCR4A,COM4B1);
     9b6:	80 81       	ld	r24, Z
     9b8:	80 62       	ori	r24, 0x20	; 32
     9ba:	80 83       	st	Z, r24
	//sbi (TCCR4A,COM4C0);
	sbi (TCCR4A,COM4C1);
     9bc:	80 81       	ld	r24, Z
     9be:	88 60       	ori	r24, 0x08	; 8
     9c0:	80 83       	st	Z, r24
     9c2:	08 95       	ret

000009c4 <setup_timer3>:
void setup_timer3(void)
{
	//64 pres, 250.000 hz 0.000004s
	//sbi (TCCR5B, CS50);//only this no prescaling
	
	sbi (TCCR3B, CS30);//only this 8
     9c4:	e1 e9       	ldi	r30, 0x91	; 145
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	80 81       	ld	r24, Z
     9ca:	81 60       	ori	r24, 0x01	; 1
     9cc:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR3B, WGM32);//OCR4A compare interrupt
     9ce:	80 81       	ld	r24, Z
     9d0:	88 60       	ori	r24, 0x08	; 8
     9d2:	80 83       	st	Z, r24
     9d4:	08 95       	ret

000009d6 <Enable_timer3_compare_interrupt>:
}
void Enable_timer3_compare_interrupt()
{
	sbi (TIMSK3, OCIE3A);
     9d6:	e1 e7       	ldi	r30, 0x71	; 113
     9d8:	f0 e0       	ldi	r31, 0x00	; 0
     9da:	80 81       	ld	r24, Z
     9dc:	82 60       	ori	r24, 0x02	; 2
     9de:	80 83       	st	Z, r24
     9e0:	08 95       	ret

000009e2 <setup_timer1>:
}
void setup_timer1(void)
{
	sbi (TCCR1B, CS10);//only this 8
     9e2:	e1 e8       	ldi	r30, 0x81	; 129
     9e4:	f0 e0       	ldi	r31, 0x00	; 0
     9e6:	80 81       	ld	r24, Z
     9e8:	81 60       	ori	r24, 0x01	; 1
     9ea:	80 83       	st	Z, r24
	//sbi (TCCR5B, CS52);//only this 256
	sbi (TCCR1B, WGM12);//OCR4A compare interrupt
     9ec:	80 81       	ld	r24, Z
     9ee:	88 60       	ori	r24, 0x08	; 8
     9f0:	80 83       	st	Z, r24
     9f2:	08 95       	ret

000009f4 <Enable_timer1_compare_interrupt>:
	
}
void Enable_timer1_compare_interrupt()
{
	sbi (TIMSK1, OCIE1A);
     9f4:	ef e6       	ldi	r30, 0x6F	; 111
     9f6:	f0 e0       	ldi	r31, 0x00	; 0
     9f8:	80 81       	ld	r24, Z
     9fa:	82 60       	ori	r24, 0x02	; 2
     9fc:	80 83       	st	Z, r24
     9fe:	08 95       	ret

00000a00 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
     a00:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     a04:	8c e0       	ldi	r24, 0x0C	; 12
     a06:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     a0a:	08 95       	ret

00000a0c <i2c_start>:
     a0c:	94 ea       	ldi	r25, 0xA4	; 164
     a0e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     a12:	4f ef       	ldi	r20, 0xFF	; 255
     a14:	50 e0       	ldi	r21, 0x00	; 0
     a16:	60 e0       	ldi	r22, 0x00	; 0
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	ec eb       	ldi	r30, 0xBC	; 188
     a1c:	f0 e0       	ldi	r31, 0x00	; 0
     a1e:	90 81       	ld	r25, Z
     a20:	99 23       	and	r25, r25
     a22:	34 f0       	brlt	.+12     	; 0xa30 <i2c_start+0x24>
     a24:	41 50       	subi	r20, 0x01	; 1
     a26:	51 09       	sbc	r21, r1
     a28:	61 09       	sbc	r22, r1
     a2a:	71 09       	sbc	r23, r1
     a2c:	c0 f7       	brcc	.-16     	; 0xa1e <i2c_start+0x12>
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <i2c_start+0x2c>
     a30:	45 2b       	or	r20, r21
     a32:	46 2b       	or	r20, r22
     a34:	47 2b       	or	r20, r23
     a36:	41 f1       	breq	.+80     	; 0xa88 <i2c_start+0x7c>
     a38:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     a3c:	98 7f       	andi	r25, 0xF8	; 248
     a3e:	98 30       	cpi	r25, 0x08	; 8
     a40:	11 f0       	breq	.+4      	; 0xa46 <i2c_start+0x3a>
     a42:	90 31       	cpi	r25, 0x10	; 16
     a44:	19 f5       	brne	.+70     	; 0xa8c <i2c_start+0x80>
     a46:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     a4a:	84 e8       	ldi	r24, 0x84	; 132
     a4c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     a50:	8f ef       	ldi	r24, 0xFF	; 255
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	a0 e0       	ldi	r26, 0x00	; 0
     a56:	b0 e0       	ldi	r27, 0x00	; 0
     a58:	ec eb       	ldi	r30, 0xBC	; 188
     a5a:	f0 e0       	ldi	r31, 0x00	; 0
     a5c:	20 81       	ld	r18, Z
     a5e:	22 23       	and	r18, r18
     a60:	2c f0       	brlt	.+10     	; 0xa6c <i2c_start+0x60>
     a62:	01 97       	sbiw	r24, 0x01	; 1
     a64:	a1 09       	sbc	r26, r1
     a66:	b1 09       	sbc	r27, r1
     a68:	c8 f7       	brcc	.-14     	; 0xa5c <i2c_start+0x50>
     a6a:	04 c0       	rjmp	.+8      	; 0xa74 <i2c_start+0x68>
     a6c:	89 2b       	or	r24, r25
     a6e:	8a 2b       	or	r24, r26
     a70:	8b 2b       	or	r24, r27
     a72:	71 f0       	breq	.+28     	; 0xa90 <i2c_start+0x84>
     a74:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     a78:	98 7f       	andi	r25, 0xF8	; 248
     a7a:	98 31       	cpi	r25, 0x18	; 24
     a7c:	59 f0       	breq	.+22     	; 0xa94 <i2c_start+0x88>
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	90 34       	cpi	r25, 0x40	; 64
     a82:	49 f4       	brne	.+18     	; 0xa96 <i2c_start+0x8a>
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	08 95       	ret
     a88:	81 e0       	ldi	r24, 0x01	; 1
     a8a:	08 95       	ret
     a8c:	81 e0       	ldi	r24, 0x01	; 1
     a8e:	08 95       	ret
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	08 95       	ret
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	08 95       	ret

00000a98 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     a98:	84 e9       	ldi	r24, 0x94	; 148
     a9a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	ec eb       	ldi	r30, 0xBC	; 188
     aa4:	f0 e0       	ldi	r31, 0x00	; 0
     aa6:	20 81       	ld	r18, Z
     aa8:	24 ff       	sbrs	r18, 4
     aaa:	05 c0       	rjmp	.+10     	; 0xab6 <i2c_stop+0x1e>
     aac:	01 96       	adiw	r24, 0x01	; 1
     aae:	81 15       	cp	r24, r1
     ab0:	21 e0       	ldi	r18, 0x01	; 1
     ab2:	92 07       	cpc	r25, r18
     ab4:	c1 f7       	brne	.-16     	; 0xaa6 <i2c_stop+0xe>
     ab6:	08 95       	ret

00000ab8 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     ab8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     abc:	84 e8       	ldi	r24, 0x84	; 132
     abe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
     ac2:	8f ef       	ldi	r24, 0xFF	; 255
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	a0 e0       	ldi	r26, 0x00	; 0
     ac8:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     aca:	ec eb       	ldi	r30, 0xBC	; 188
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	20 81       	ld	r18, Z
     ad0:	22 23       	and	r18, r18
     ad2:	2c f0       	brlt	.+10     	; 0xade <i2c_write+0x26>
     ad4:	01 97       	sbiw	r24, 0x01	; 1
     ad6:	a1 09       	sbc	r26, r1
     ad8:	b1 09       	sbc	r27, r1
     ada:	c8 f7       	brcc	.-14     	; 0xace <i2c_write+0x16>
     adc:	04 c0       	rjmp	.+8      	; 0xae6 <i2c_write+0x2e>
	if(i2c_timer == 0)
     ade:	89 2b       	or	r24, r25
     ae0:	8a 2b       	or	r24, r26
     ae2:	8b 2b       	or	r24, r27
     ae4:	41 f0       	breq	.+16     	; 0xaf6 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     ae6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
     aea:	98 7f       	andi	r25, 0xF8	; 248
     aec:	81 e0       	ldi	r24, 0x01	; 1
     aee:	98 32       	cpi	r25, 0x28	; 40
     af0:	19 f4       	brne	.+6      	; 0xaf8 <i2c_write+0x40>
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	08 95       	ret
     af6:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     af8:	08 95       	ret

00000afa <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     afa:	84 ec       	ldi	r24, 0xC4	; 196
     afc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     b00:	8f ef       	ldi	r24, 0xFF	; 255
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	a0 e0       	ldi	r26, 0x00	; 0
     b06:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     b08:	ec eb       	ldi	r30, 0xBC	; 188
     b0a:	f0 e0       	ldi	r31, 0x00	; 0
     b0c:	20 81       	ld	r18, Z
     b0e:	22 23       	and	r18, r18
     b10:	2c f0       	brlt	.+10     	; 0xb1c <i2c_readAck+0x22>
     b12:	01 97       	sbiw	r24, 0x01	; 1
     b14:	a1 09       	sbc	r26, r1
     b16:	b1 09       	sbc	r27, r1
     b18:	c8 f7       	brcc	.-14     	; 0xb0c <i2c_readAck+0x12>
     b1a:	04 c0       	rjmp	.+8      	; 0xb24 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
     b1c:	89 2b       	or	r24, r25
     b1e:	8a 2b       	or	r24, r26
     b20:	8b 2b       	or	r24, r27
     b22:	19 f0       	breq	.+6      	; 0xb2a <i2c_readAck+0x30>
		return 0;

    return TWDR;
     b24:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     b28:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     b2a:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
     b2c:	08 95       	ret

00000b2e <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
     b2e:	84 e8       	ldi	r24, 0x84	; 132
     b30:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
     b34:	8f ef       	ldi	r24, 0xFF	; 255
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	a0 e0       	ldi	r26, 0x00	; 0
     b3a:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
     b3c:	ec eb       	ldi	r30, 0xBC	; 188
     b3e:	f0 e0       	ldi	r31, 0x00	; 0
     b40:	20 81       	ld	r18, Z
     b42:	22 23       	and	r18, r18
     b44:	2c f0       	brlt	.+10     	; 0xb50 <i2c_readNak+0x22>
     b46:	01 97       	sbiw	r24, 0x01	; 1
     b48:	a1 09       	sbc	r26, r1
     b4a:	b1 09       	sbc	r27, r1
     b4c:	c8 f7       	brcc	.-14     	; 0xb40 <i2c_readNak+0x12>
     b4e:	04 c0       	rjmp	.+8      	; 0xb58 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
     b50:	89 2b       	or	r24, r25
     b52:	8a 2b       	or	r24, r26
     b54:	8b 2b       	or	r24, r27
     b56:	19 f0       	breq	.+6      	; 0xb5e <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
     b58:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     b5c:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
     b5e:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
     b60:	08 95       	ret

00000b62 <USART_Init>:
#include <avr/io.h>
#include <stdio.h>
void USART_Init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     b62:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)ubrr;
     b66:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	UCSR0B = (1<<TXEN0);// | (1<<TXCIE0);
     b6a:	88 e0       	ldi	r24, 0x08	; 8
     b6c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);//2 stop bit 8 bit
     b70:	8e e0       	ldi	r24, 0x0E	; 14
     b72:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     b76:	08 95       	ret

00000b78 <__subsf3>:
     b78:	50 58       	subi	r21, 0x80	; 128

00000b7a <__addsf3>:
     b7a:	bb 27       	eor	r27, r27
     b7c:	aa 27       	eor	r26, r26
     b7e:	0e d0       	rcall	.+28     	; 0xb9c <__addsf3x>
     b80:	48 c1       	rjmp	.+656    	; 0xe12 <__fp_round>
     b82:	39 d1       	rcall	.+626    	; 0xdf6 <__fp_pscA>
     b84:	30 f0       	brcs	.+12     	; 0xb92 <__addsf3+0x18>
     b86:	3e d1       	rcall	.+636    	; 0xe04 <__fp_pscB>
     b88:	20 f0       	brcs	.+8      	; 0xb92 <__addsf3+0x18>
     b8a:	31 f4       	brne	.+12     	; 0xb98 <__addsf3+0x1e>
     b8c:	9f 3f       	cpi	r25, 0xFF	; 255
     b8e:	11 f4       	brne	.+4      	; 0xb94 <__addsf3+0x1a>
     b90:	1e f4       	brtc	.+6      	; 0xb98 <__addsf3+0x1e>
     b92:	2e c1       	rjmp	.+604    	; 0xdf0 <__fp_nan>
     b94:	0e f4       	brtc	.+2      	; 0xb98 <__addsf3+0x1e>
     b96:	e0 95       	com	r30
     b98:	e7 fb       	bst	r30, 7
     b9a:	24 c1       	rjmp	.+584    	; 0xde4 <__fp_inf>

00000b9c <__addsf3x>:
     b9c:	e9 2f       	mov	r30, r25
     b9e:	4a d1       	rcall	.+660    	; 0xe34 <__fp_split3>
     ba0:	80 f3       	brcs	.-32     	; 0xb82 <__addsf3+0x8>
     ba2:	ba 17       	cp	r27, r26
     ba4:	62 07       	cpc	r22, r18
     ba6:	73 07       	cpc	r23, r19
     ba8:	84 07       	cpc	r24, r20
     baa:	95 07       	cpc	r25, r21
     bac:	18 f0       	brcs	.+6      	; 0xbb4 <__addsf3x+0x18>
     bae:	71 f4       	brne	.+28     	; 0xbcc <__addsf3x+0x30>
     bb0:	9e f5       	brtc	.+102    	; 0xc18 <__addsf3x+0x7c>
     bb2:	62 c1       	rjmp	.+708    	; 0xe78 <__fp_zero>
     bb4:	0e f4       	brtc	.+2      	; 0xbb8 <__addsf3x+0x1c>
     bb6:	e0 95       	com	r30
     bb8:	0b 2e       	mov	r0, r27
     bba:	ba 2f       	mov	r27, r26
     bbc:	a0 2d       	mov	r26, r0
     bbe:	0b 01       	movw	r0, r22
     bc0:	b9 01       	movw	r22, r18
     bc2:	90 01       	movw	r18, r0
     bc4:	0c 01       	movw	r0, r24
     bc6:	ca 01       	movw	r24, r20
     bc8:	a0 01       	movw	r20, r0
     bca:	11 24       	eor	r1, r1
     bcc:	ff 27       	eor	r31, r31
     bce:	59 1b       	sub	r21, r25
     bd0:	99 f0       	breq	.+38     	; 0xbf8 <__addsf3x+0x5c>
     bd2:	59 3f       	cpi	r21, 0xF9	; 249
     bd4:	50 f4       	brcc	.+20     	; 0xbea <__addsf3x+0x4e>
     bd6:	50 3e       	cpi	r21, 0xE0	; 224
     bd8:	68 f1       	brcs	.+90     	; 0xc34 <__addsf3x+0x98>
     bda:	1a 16       	cp	r1, r26
     bdc:	f0 40       	sbci	r31, 0x00	; 0
     bde:	a2 2f       	mov	r26, r18
     be0:	23 2f       	mov	r18, r19
     be2:	34 2f       	mov	r19, r20
     be4:	44 27       	eor	r20, r20
     be6:	58 5f       	subi	r21, 0xF8	; 248
     be8:	f3 cf       	rjmp	.-26     	; 0xbd0 <__addsf3x+0x34>
     bea:	46 95       	lsr	r20
     bec:	37 95       	ror	r19
     bee:	27 95       	ror	r18
     bf0:	a7 95       	ror	r26
     bf2:	f0 40       	sbci	r31, 0x00	; 0
     bf4:	53 95       	inc	r21
     bf6:	c9 f7       	brne	.-14     	; 0xbea <__addsf3x+0x4e>
     bf8:	7e f4       	brtc	.+30     	; 0xc18 <__addsf3x+0x7c>
     bfa:	1f 16       	cp	r1, r31
     bfc:	ba 0b       	sbc	r27, r26
     bfe:	62 0b       	sbc	r22, r18
     c00:	73 0b       	sbc	r23, r19
     c02:	84 0b       	sbc	r24, r20
     c04:	ba f0       	brmi	.+46     	; 0xc34 <__addsf3x+0x98>
     c06:	91 50       	subi	r25, 0x01	; 1
     c08:	a1 f0       	breq	.+40     	; 0xc32 <__addsf3x+0x96>
     c0a:	ff 0f       	add	r31, r31
     c0c:	bb 1f       	adc	r27, r27
     c0e:	66 1f       	adc	r22, r22
     c10:	77 1f       	adc	r23, r23
     c12:	88 1f       	adc	r24, r24
     c14:	c2 f7       	brpl	.-16     	; 0xc06 <__addsf3x+0x6a>
     c16:	0e c0       	rjmp	.+28     	; 0xc34 <__addsf3x+0x98>
     c18:	ba 0f       	add	r27, r26
     c1a:	62 1f       	adc	r22, r18
     c1c:	73 1f       	adc	r23, r19
     c1e:	84 1f       	adc	r24, r20
     c20:	48 f4       	brcc	.+18     	; 0xc34 <__addsf3x+0x98>
     c22:	87 95       	ror	r24
     c24:	77 95       	ror	r23
     c26:	67 95       	ror	r22
     c28:	b7 95       	ror	r27
     c2a:	f7 95       	ror	r31
     c2c:	9e 3f       	cpi	r25, 0xFE	; 254
     c2e:	08 f0       	brcs	.+2      	; 0xc32 <__addsf3x+0x96>
     c30:	b3 cf       	rjmp	.-154    	; 0xb98 <__addsf3+0x1e>
     c32:	93 95       	inc	r25
     c34:	88 0f       	add	r24, r24
     c36:	08 f0       	brcs	.+2      	; 0xc3a <__addsf3x+0x9e>
     c38:	99 27       	eor	r25, r25
     c3a:	ee 0f       	add	r30, r30
     c3c:	97 95       	ror	r25
     c3e:	87 95       	ror	r24
     c40:	08 95       	ret

00000c42 <__divsf3>:
     c42:	0c d0       	rcall	.+24     	; 0xc5c <__divsf3x>
     c44:	e6 c0       	rjmp	.+460    	; 0xe12 <__fp_round>
     c46:	de d0       	rcall	.+444    	; 0xe04 <__fp_pscB>
     c48:	40 f0       	brcs	.+16     	; 0xc5a <__divsf3+0x18>
     c4a:	d5 d0       	rcall	.+426    	; 0xdf6 <__fp_pscA>
     c4c:	30 f0       	brcs	.+12     	; 0xc5a <__divsf3+0x18>
     c4e:	21 f4       	brne	.+8      	; 0xc58 <__divsf3+0x16>
     c50:	5f 3f       	cpi	r21, 0xFF	; 255
     c52:	19 f0       	breq	.+6      	; 0xc5a <__divsf3+0x18>
     c54:	c7 c0       	rjmp	.+398    	; 0xde4 <__fp_inf>
     c56:	51 11       	cpse	r21, r1
     c58:	10 c1       	rjmp	.+544    	; 0xe7a <__fp_szero>
     c5a:	ca c0       	rjmp	.+404    	; 0xdf0 <__fp_nan>

00000c5c <__divsf3x>:
     c5c:	eb d0       	rcall	.+470    	; 0xe34 <__fp_split3>
     c5e:	98 f3       	brcs	.-26     	; 0xc46 <__divsf3+0x4>

00000c60 <__divsf3_pse>:
     c60:	99 23       	and	r25, r25
     c62:	c9 f3       	breq	.-14     	; 0xc56 <__divsf3+0x14>
     c64:	55 23       	and	r21, r21
     c66:	b1 f3       	breq	.-20     	; 0xc54 <__divsf3+0x12>
     c68:	95 1b       	sub	r25, r21
     c6a:	55 0b       	sbc	r21, r21
     c6c:	bb 27       	eor	r27, r27
     c6e:	aa 27       	eor	r26, r26
     c70:	62 17       	cp	r22, r18
     c72:	73 07       	cpc	r23, r19
     c74:	84 07       	cpc	r24, r20
     c76:	38 f0       	brcs	.+14     	; 0xc86 <__divsf3_pse+0x26>
     c78:	9f 5f       	subi	r25, 0xFF	; 255
     c7a:	5f 4f       	sbci	r21, 0xFF	; 255
     c7c:	22 0f       	add	r18, r18
     c7e:	33 1f       	adc	r19, r19
     c80:	44 1f       	adc	r20, r20
     c82:	aa 1f       	adc	r26, r26
     c84:	a9 f3       	breq	.-22     	; 0xc70 <__divsf3_pse+0x10>
     c86:	33 d0       	rcall	.+102    	; 0xcee <__divsf3_pse+0x8e>
     c88:	0e 2e       	mov	r0, r30
     c8a:	3a f0       	brmi	.+14     	; 0xc9a <__divsf3_pse+0x3a>
     c8c:	e0 e8       	ldi	r30, 0x80	; 128
     c8e:	30 d0       	rcall	.+96     	; 0xcf0 <__divsf3_pse+0x90>
     c90:	91 50       	subi	r25, 0x01	; 1
     c92:	50 40       	sbci	r21, 0x00	; 0
     c94:	e6 95       	lsr	r30
     c96:	00 1c       	adc	r0, r0
     c98:	ca f7       	brpl	.-14     	; 0xc8c <__divsf3_pse+0x2c>
     c9a:	29 d0       	rcall	.+82     	; 0xcee <__divsf3_pse+0x8e>
     c9c:	fe 2f       	mov	r31, r30
     c9e:	27 d0       	rcall	.+78     	; 0xcee <__divsf3_pse+0x8e>
     ca0:	66 0f       	add	r22, r22
     ca2:	77 1f       	adc	r23, r23
     ca4:	88 1f       	adc	r24, r24
     ca6:	bb 1f       	adc	r27, r27
     ca8:	26 17       	cp	r18, r22
     caa:	37 07       	cpc	r19, r23
     cac:	48 07       	cpc	r20, r24
     cae:	ab 07       	cpc	r26, r27
     cb0:	b0 e8       	ldi	r27, 0x80	; 128
     cb2:	09 f0       	breq	.+2      	; 0xcb6 <__divsf3_pse+0x56>
     cb4:	bb 0b       	sbc	r27, r27
     cb6:	80 2d       	mov	r24, r0
     cb8:	bf 01       	movw	r22, r30
     cba:	ff 27       	eor	r31, r31
     cbc:	93 58       	subi	r25, 0x83	; 131
     cbe:	5f 4f       	sbci	r21, 0xFF	; 255
     cc0:	2a f0       	brmi	.+10     	; 0xccc <__divsf3_pse+0x6c>
     cc2:	9e 3f       	cpi	r25, 0xFE	; 254
     cc4:	51 05       	cpc	r21, r1
     cc6:	68 f0       	brcs	.+26     	; 0xce2 <__divsf3_pse+0x82>
     cc8:	8d c0       	rjmp	.+282    	; 0xde4 <__fp_inf>
     cca:	d7 c0       	rjmp	.+430    	; 0xe7a <__fp_szero>
     ccc:	5f 3f       	cpi	r21, 0xFF	; 255
     cce:	ec f3       	brlt	.-6      	; 0xcca <__divsf3_pse+0x6a>
     cd0:	98 3e       	cpi	r25, 0xE8	; 232
     cd2:	dc f3       	brlt	.-10     	; 0xcca <__divsf3_pse+0x6a>
     cd4:	86 95       	lsr	r24
     cd6:	77 95       	ror	r23
     cd8:	67 95       	ror	r22
     cda:	b7 95       	ror	r27
     cdc:	f7 95       	ror	r31
     cde:	9f 5f       	subi	r25, 0xFF	; 255
     ce0:	c9 f7       	brne	.-14     	; 0xcd4 <__divsf3_pse+0x74>
     ce2:	88 0f       	add	r24, r24
     ce4:	91 1d       	adc	r25, r1
     ce6:	96 95       	lsr	r25
     ce8:	87 95       	ror	r24
     cea:	97 f9       	bld	r25, 7
     cec:	08 95       	ret
     cee:	e1 e0       	ldi	r30, 0x01	; 1
     cf0:	66 0f       	add	r22, r22
     cf2:	77 1f       	adc	r23, r23
     cf4:	88 1f       	adc	r24, r24
     cf6:	bb 1f       	adc	r27, r27
     cf8:	62 17       	cp	r22, r18
     cfa:	73 07       	cpc	r23, r19
     cfc:	84 07       	cpc	r24, r20
     cfe:	ba 07       	cpc	r27, r26
     d00:	20 f0       	brcs	.+8      	; 0xd0a <__divsf3_pse+0xaa>
     d02:	62 1b       	sub	r22, r18
     d04:	73 0b       	sbc	r23, r19
     d06:	84 0b       	sbc	r24, r20
     d08:	ba 0b       	sbc	r27, r26
     d0a:	ee 1f       	adc	r30, r30
     d0c:	88 f7       	brcc	.-30     	; 0xcf0 <__divsf3_pse+0x90>
     d0e:	e0 95       	com	r30
     d10:	08 95       	ret

00000d12 <__fixunssfsi>:
     d12:	98 d0       	rcall	.+304    	; 0xe44 <__fp_splitA>
     d14:	88 f0       	brcs	.+34     	; 0xd38 <__fixunssfsi+0x26>
     d16:	9f 57       	subi	r25, 0x7F	; 127
     d18:	90 f0       	brcs	.+36     	; 0xd3e <__fixunssfsi+0x2c>
     d1a:	b9 2f       	mov	r27, r25
     d1c:	99 27       	eor	r25, r25
     d1e:	b7 51       	subi	r27, 0x17	; 23
     d20:	a0 f0       	brcs	.+40     	; 0xd4a <__fixunssfsi+0x38>
     d22:	d1 f0       	breq	.+52     	; 0xd58 <__fixunssfsi+0x46>
     d24:	66 0f       	add	r22, r22
     d26:	77 1f       	adc	r23, r23
     d28:	88 1f       	adc	r24, r24
     d2a:	99 1f       	adc	r25, r25
     d2c:	1a f0       	brmi	.+6      	; 0xd34 <__fixunssfsi+0x22>
     d2e:	ba 95       	dec	r27
     d30:	c9 f7       	brne	.-14     	; 0xd24 <__fixunssfsi+0x12>
     d32:	12 c0       	rjmp	.+36     	; 0xd58 <__fixunssfsi+0x46>
     d34:	b1 30       	cpi	r27, 0x01	; 1
     d36:	81 f0       	breq	.+32     	; 0xd58 <__fixunssfsi+0x46>
     d38:	9f d0       	rcall	.+318    	; 0xe78 <__fp_zero>
     d3a:	b1 e0       	ldi	r27, 0x01	; 1
     d3c:	08 95       	ret
     d3e:	9c c0       	rjmp	.+312    	; 0xe78 <__fp_zero>
     d40:	67 2f       	mov	r22, r23
     d42:	78 2f       	mov	r23, r24
     d44:	88 27       	eor	r24, r24
     d46:	b8 5f       	subi	r27, 0xF8	; 248
     d48:	39 f0       	breq	.+14     	; 0xd58 <__fixunssfsi+0x46>
     d4a:	b9 3f       	cpi	r27, 0xF9	; 249
     d4c:	cc f3       	brlt	.-14     	; 0xd40 <__fixunssfsi+0x2e>
     d4e:	86 95       	lsr	r24
     d50:	77 95       	ror	r23
     d52:	67 95       	ror	r22
     d54:	b3 95       	inc	r27
     d56:	d9 f7       	brne	.-10     	; 0xd4e <__fixunssfsi+0x3c>
     d58:	3e f4       	brtc	.+14     	; 0xd68 <__fixunssfsi+0x56>
     d5a:	90 95       	com	r25
     d5c:	80 95       	com	r24
     d5e:	70 95       	com	r23
     d60:	61 95       	neg	r22
     d62:	7f 4f       	sbci	r23, 0xFF	; 255
     d64:	8f 4f       	sbci	r24, 0xFF	; 255
     d66:	9f 4f       	sbci	r25, 0xFF	; 255
     d68:	08 95       	ret

00000d6a <__floatunsisf>:
     d6a:	e8 94       	clt
     d6c:	09 c0       	rjmp	.+18     	; 0xd80 <__floatsisf+0x12>

00000d6e <__floatsisf>:
     d6e:	97 fb       	bst	r25, 7
     d70:	3e f4       	brtc	.+14     	; 0xd80 <__floatsisf+0x12>
     d72:	90 95       	com	r25
     d74:	80 95       	com	r24
     d76:	70 95       	com	r23
     d78:	61 95       	neg	r22
     d7a:	7f 4f       	sbci	r23, 0xFF	; 255
     d7c:	8f 4f       	sbci	r24, 0xFF	; 255
     d7e:	9f 4f       	sbci	r25, 0xFF	; 255
     d80:	99 23       	and	r25, r25
     d82:	a9 f0       	breq	.+42     	; 0xdae <__floatsisf+0x40>
     d84:	f9 2f       	mov	r31, r25
     d86:	96 e9       	ldi	r25, 0x96	; 150
     d88:	bb 27       	eor	r27, r27
     d8a:	93 95       	inc	r25
     d8c:	f6 95       	lsr	r31
     d8e:	87 95       	ror	r24
     d90:	77 95       	ror	r23
     d92:	67 95       	ror	r22
     d94:	b7 95       	ror	r27
     d96:	f1 11       	cpse	r31, r1
     d98:	f8 cf       	rjmp	.-16     	; 0xd8a <__floatsisf+0x1c>
     d9a:	fa f4       	brpl	.+62     	; 0xdda <__floatsisf+0x6c>
     d9c:	bb 0f       	add	r27, r27
     d9e:	11 f4       	brne	.+4      	; 0xda4 <__floatsisf+0x36>
     da0:	60 ff       	sbrs	r22, 0
     da2:	1b c0       	rjmp	.+54     	; 0xdda <__floatsisf+0x6c>
     da4:	6f 5f       	subi	r22, 0xFF	; 255
     da6:	7f 4f       	sbci	r23, 0xFF	; 255
     da8:	8f 4f       	sbci	r24, 0xFF	; 255
     daa:	9f 4f       	sbci	r25, 0xFF	; 255
     dac:	16 c0       	rjmp	.+44     	; 0xdda <__floatsisf+0x6c>
     dae:	88 23       	and	r24, r24
     db0:	11 f0       	breq	.+4      	; 0xdb6 <__floatsisf+0x48>
     db2:	96 e9       	ldi	r25, 0x96	; 150
     db4:	11 c0       	rjmp	.+34     	; 0xdd8 <__floatsisf+0x6a>
     db6:	77 23       	and	r23, r23
     db8:	21 f0       	breq	.+8      	; 0xdc2 <__floatsisf+0x54>
     dba:	9e e8       	ldi	r25, 0x8E	; 142
     dbc:	87 2f       	mov	r24, r23
     dbe:	76 2f       	mov	r23, r22
     dc0:	05 c0       	rjmp	.+10     	; 0xdcc <__floatsisf+0x5e>
     dc2:	66 23       	and	r22, r22
     dc4:	71 f0       	breq	.+28     	; 0xde2 <__floatsisf+0x74>
     dc6:	96 e8       	ldi	r25, 0x86	; 134
     dc8:	86 2f       	mov	r24, r22
     dca:	70 e0       	ldi	r23, 0x00	; 0
     dcc:	60 e0       	ldi	r22, 0x00	; 0
     dce:	2a f0       	brmi	.+10     	; 0xdda <__floatsisf+0x6c>
     dd0:	9a 95       	dec	r25
     dd2:	66 0f       	add	r22, r22
     dd4:	77 1f       	adc	r23, r23
     dd6:	88 1f       	adc	r24, r24
     dd8:	da f7       	brpl	.-10     	; 0xdd0 <__floatsisf+0x62>
     dda:	88 0f       	add	r24, r24
     ddc:	96 95       	lsr	r25
     dde:	87 95       	ror	r24
     de0:	97 f9       	bld	r25, 7
     de2:	08 95       	ret

00000de4 <__fp_inf>:
     de4:	97 f9       	bld	r25, 7
     de6:	9f 67       	ori	r25, 0x7F	; 127
     de8:	80 e8       	ldi	r24, 0x80	; 128
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	08 95       	ret

00000df0 <__fp_nan>:
     df0:	9f ef       	ldi	r25, 0xFF	; 255
     df2:	80 ec       	ldi	r24, 0xC0	; 192
     df4:	08 95       	ret

00000df6 <__fp_pscA>:
     df6:	00 24       	eor	r0, r0
     df8:	0a 94       	dec	r0
     dfa:	16 16       	cp	r1, r22
     dfc:	17 06       	cpc	r1, r23
     dfe:	18 06       	cpc	r1, r24
     e00:	09 06       	cpc	r0, r25
     e02:	08 95       	ret

00000e04 <__fp_pscB>:
     e04:	00 24       	eor	r0, r0
     e06:	0a 94       	dec	r0
     e08:	12 16       	cp	r1, r18
     e0a:	13 06       	cpc	r1, r19
     e0c:	14 06       	cpc	r1, r20
     e0e:	05 06       	cpc	r0, r21
     e10:	08 95       	ret

00000e12 <__fp_round>:
     e12:	09 2e       	mov	r0, r25
     e14:	03 94       	inc	r0
     e16:	00 0c       	add	r0, r0
     e18:	11 f4       	brne	.+4      	; 0xe1e <__fp_round+0xc>
     e1a:	88 23       	and	r24, r24
     e1c:	52 f0       	brmi	.+20     	; 0xe32 <__fp_round+0x20>
     e1e:	bb 0f       	add	r27, r27
     e20:	40 f4       	brcc	.+16     	; 0xe32 <__fp_round+0x20>
     e22:	bf 2b       	or	r27, r31
     e24:	11 f4       	brne	.+4      	; 0xe2a <__fp_round+0x18>
     e26:	60 ff       	sbrs	r22, 0
     e28:	04 c0       	rjmp	.+8      	; 0xe32 <__fp_round+0x20>
     e2a:	6f 5f       	subi	r22, 0xFF	; 255
     e2c:	7f 4f       	sbci	r23, 0xFF	; 255
     e2e:	8f 4f       	sbci	r24, 0xFF	; 255
     e30:	9f 4f       	sbci	r25, 0xFF	; 255
     e32:	08 95       	ret

00000e34 <__fp_split3>:
     e34:	57 fd       	sbrc	r21, 7
     e36:	90 58       	subi	r25, 0x80	; 128
     e38:	44 0f       	add	r20, r20
     e3a:	55 1f       	adc	r21, r21
     e3c:	59 f0       	breq	.+22     	; 0xe54 <__fp_splitA+0x10>
     e3e:	5f 3f       	cpi	r21, 0xFF	; 255
     e40:	71 f0       	breq	.+28     	; 0xe5e <__fp_splitA+0x1a>
     e42:	47 95       	ror	r20

00000e44 <__fp_splitA>:
     e44:	88 0f       	add	r24, r24
     e46:	97 fb       	bst	r25, 7
     e48:	99 1f       	adc	r25, r25
     e4a:	61 f0       	breq	.+24     	; 0xe64 <__fp_splitA+0x20>
     e4c:	9f 3f       	cpi	r25, 0xFF	; 255
     e4e:	79 f0       	breq	.+30     	; 0xe6e <__fp_splitA+0x2a>
     e50:	87 95       	ror	r24
     e52:	08 95       	ret
     e54:	12 16       	cp	r1, r18
     e56:	13 06       	cpc	r1, r19
     e58:	14 06       	cpc	r1, r20
     e5a:	55 1f       	adc	r21, r21
     e5c:	f2 cf       	rjmp	.-28     	; 0xe42 <__fp_split3+0xe>
     e5e:	46 95       	lsr	r20
     e60:	f1 df       	rcall	.-30     	; 0xe44 <__fp_splitA>
     e62:	08 c0       	rjmp	.+16     	; 0xe74 <__fp_splitA+0x30>
     e64:	16 16       	cp	r1, r22
     e66:	17 06       	cpc	r1, r23
     e68:	18 06       	cpc	r1, r24
     e6a:	99 1f       	adc	r25, r25
     e6c:	f1 cf       	rjmp	.-30     	; 0xe50 <__fp_splitA+0xc>
     e6e:	86 95       	lsr	r24
     e70:	71 05       	cpc	r23, r1
     e72:	61 05       	cpc	r22, r1
     e74:	08 94       	sec
     e76:	08 95       	ret

00000e78 <__fp_zero>:
     e78:	e8 94       	clt

00000e7a <__fp_szero>:
     e7a:	bb 27       	eor	r27, r27
     e7c:	66 27       	eor	r22, r22
     e7e:	77 27       	eor	r23, r23
     e80:	cb 01       	movw	r24, r22
     e82:	97 f9       	bld	r25, 7
     e84:	08 95       	ret

00000e86 <__mulsf3>:
     e86:	0b d0       	rcall	.+22     	; 0xe9e <__mulsf3x>
     e88:	c4 cf       	rjmp	.-120    	; 0xe12 <__fp_round>
     e8a:	b5 df       	rcall	.-150    	; 0xdf6 <__fp_pscA>
     e8c:	28 f0       	brcs	.+10     	; 0xe98 <__mulsf3+0x12>
     e8e:	ba df       	rcall	.-140    	; 0xe04 <__fp_pscB>
     e90:	18 f0       	brcs	.+6      	; 0xe98 <__mulsf3+0x12>
     e92:	95 23       	and	r25, r21
     e94:	09 f0       	breq	.+2      	; 0xe98 <__mulsf3+0x12>
     e96:	a6 cf       	rjmp	.-180    	; 0xde4 <__fp_inf>
     e98:	ab cf       	rjmp	.-170    	; 0xdf0 <__fp_nan>
     e9a:	11 24       	eor	r1, r1
     e9c:	ee cf       	rjmp	.-36     	; 0xe7a <__fp_szero>

00000e9e <__mulsf3x>:
     e9e:	ca df       	rcall	.-108    	; 0xe34 <__fp_split3>
     ea0:	a0 f3       	brcs	.-24     	; 0xe8a <__mulsf3+0x4>

00000ea2 <__mulsf3_pse>:
     ea2:	95 9f       	mul	r25, r21
     ea4:	d1 f3       	breq	.-12     	; 0xe9a <__mulsf3+0x14>
     ea6:	95 0f       	add	r25, r21
     ea8:	50 e0       	ldi	r21, 0x00	; 0
     eaa:	55 1f       	adc	r21, r21
     eac:	62 9f       	mul	r22, r18
     eae:	f0 01       	movw	r30, r0
     eb0:	72 9f       	mul	r23, r18
     eb2:	bb 27       	eor	r27, r27
     eb4:	f0 0d       	add	r31, r0
     eb6:	b1 1d       	adc	r27, r1
     eb8:	63 9f       	mul	r22, r19
     eba:	aa 27       	eor	r26, r26
     ebc:	f0 0d       	add	r31, r0
     ebe:	b1 1d       	adc	r27, r1
     ec0:	aa 1f       	adc	r26, r26
     ec2:	64 9f       	mul	r22, r20
     ec4:	66 27       	eor	r22, r22
     ec6:	b0 0d       	add	r27, r0
     ec8:	a1 1d       	adc	r26, r1
     eca:	66 1f       	adc	r22, r22
     ecc:	82 9f       	mul	r24, r18
     ece:	22 27       	eor	r18, r18
     ed0:	b0 0d       	add	r27, r0
     ed2:	a1 1d       	adc	r26, r1
     ed4:	62 1f       	adc	r22, r18
     ed6:	73 9f       	mul	r23, r19
     ed8:	b0 0d       	add	r27, r0
     eda:	a1 1d       	adc	r26, r1
     edc:	62 1f       	adc	r22, r18
     ede:	83 9f       	mul	r24, r19
     ee0:	a0 0d       	add	r26, r0
     ee2:	61 1d       	adc	r22, r1
     ee4:	22 1f       	adc	r18, r18
     ee6:	74 9f       	mul	r23, r20
     ee8:	33 27       	eor	r19, r19
     eea:	a0 0d       	add	r26, r0
     eec:	61 1d       	adc	r22, r1
     eee:	23 1f       	adc	r18, r19
     ef0:	84 9f       	mul	r24, r20
     ef2:	60 0d       	add	r22, r0
     ef4:	21 1d       	adc	r18, r1
     ef6:	82 2f       	mov	r24, r18
     ef8:	76 2f       	mov	r23, r22
     efa:	6a 2f       	mov	r22, r26
     efc:	11 24       	eor	r1, r1
     efe:	9f 57       	subi	r25, 0x7F	; 127
     f00:	50 40       	sbci	r21, 0x00	; 0
     f02:	8a f0       	brmi	.+34     	; 0xf26 <__mulsf3_pse+0x84>
     f04:	e1 f0       	breq	.+56     	; 0xf3e <__mulsf3_pse+0x9c>
     f06:	88 23       	and	r24, r24
     f08:	4a f0       	brmi	.+18     	; 0xf1c <__mulsf3_pse+0x7a>
     f0a:	ee 0f       	add	r30, r30
     f0c:	ff 1f       	adc	r31, r31
     f0e:	bb 1f       	adc	r27, r27
     f10:	66 1f       	adc	r22, r22
     f12:	77 1f       	adc	r23, r23
     f14:	88 1f       	adc	r24, r24
     f16:	91 50       	subi	r25, 0x01	; 1
     f18:	50 40       	sbci	r21, 0x00	; 0
     f1a:	a9 f7       	brne	.-22     	; 0xf06 <__mulsf3_pse+0x64>
     f1c:	9e 3f       	cpi	r25, 0xFE	; 254
     f1e:	51 05       	cpc	r21, r1
     f20:	70 f0       	brcs	.+28     	; 0xf3e <__mulsf3_pse+0x9c>
     f22:	60 cf       	rjmp	.-320    	; 0xde4 <__fp_inf>
     f24:	aa cf       	rjmp	.-172    	; 0xe7a <__fp_szero>
     f26:	5f 3f       	cpi	r21, 0xFF	; 255
     f28:	ec f3       	brlt	.-6      	; 0xf24 <__mulsf3_pse+0x82>
     f2a:	98 3e       	cpi	r25, 0xE8	; 232
     f2c:	dc f3       	brlt	.-10     	; 0xf24 <__mulsf3_pse+0x82>
     f2e:	86 95       	lsr	r24
     f30:	77 95       	ror	r23
     f32:	67 95       	ror	r22
     f34:	b7 95       	ror	r27
     f36:	f7 95       	ror	r31
     f38:	e7 95       	ror	r30
     f3a:	9f 5f       	subi	r25, 0xFF	; 255
     f3c:	c1 f7       	brne	.-16     	; 0xf2e <__mulsf3_pse+0x8c>
     f3e:	fe 2b       	or	r31, r30
     f40:	88 0f       	add	r24, r24
     f42:	91 1d       	adc	r25, r1
     f44:	96 95       	lsr	r25
     f46:	87 95       	ror	r24
     f48:	97 f9       	bld	r25, 7
     f4a:	08 95       	ret

00000f4c <sin>:
     f4c:	9f 93       	push	r25
     f4e:	2a d0       	rcall	.+84     	; 0xfa4 <__fp_rempio2>
     f50:	0f 90       	pop	r0
     f52:	07 fc       	sbrc	r0, 7
     f54:	ee 5f       	subi	r30, 0xFE	; 254
     f56:	4d c0       	rjmp	.+154    	; 0xff2 <__fp_sinus>

00000f58 <__fp_powser>:
     f58:	df 93       	push	r29
     f5a:	cf 93       	push	r28
     f5c:	1f 93       	push	r17
     f5e:	0f 93       	push	r16
     f60:	ff 92       	push	r15
     f62:	ef 92       	push	r14
     f64:	df 92       	push	r13
     f66:	7b 01       	movw	r14, r22
     f68:	8c 01       	movw	r16, r24
     f6a:	68 94       	set
     f6c:	05 c0       	rjmp	.+10     	; 0xf78 <__fp_powser+0x20>
     f6e:	da 2e       	mov	r13, r26
     f70:	ef 01       	movw	r28, r30
     f72:	95 df       	rcall	.-214    	; 0xe9e <__mulsf3x>
     f74:	fe 01       	movw	r30, r28
     f76:	e8 94       	clt
     f78:	a5 91       	lpm	r26, Z+
     f7a:	25 91       	lpm	r18, Z+
     f7c:	35 91       	lpm	r19, Z+
     f7e:	45 91       	lpm	r20, Z+
     f80:	55 91       	lpm	r21, Z+
     f82:	ae f3       	brts	.-22     	; 0xf6e <__fp_powser+0x16>
     f84:	ef 01       	movw	r28, r30
     f86:	0a de       	rcall	.-1004   	; 0xb9c <__addsf3x>
     f88:	fe 01       	movw	r30, r28
     f8a:	97 01       	movw	r18, r14
     f8c:	a8 01       	movw	r20, r16
     f8e:	da 94       	dec	r13
     f90:	79 f7       	brne	.-34     	; 0xf70 <__fp_powser+0x18>
     f92:	df 90       	pop	r13
     f94:	ef 90       	pop	r14
     f96:	ff 90       	pop	r15
     f98:	0f 91       	pop	r16
     f9a:	1f 91       	pop	r17
     f9c:	cf 91       	pop	r28
     f9e:	df 91       	pop	r29
     fa0:	08 95       	ret
     fa2:	26 cf       	rjmp	.-436    	; 0xdf0 <__fp_nan>

00000fa4 <__fp_rempio2>:
     fa4:	4f df       	rcall	.-354    	; 0xe44 <__fp_splitA>
     fa6:	e8 f3       	brcs	.-6      	; 0xfa2 <__fp_powser+0x4a>
     fa8:	e8 94       	clt
     faa:	e0 e0       	ldi	r30, 0x00	; 0
     fac:	bb 27       	eor	r27, r27
     fae:	9f 57       	subi	r25, 0x7F	; 127
     fb0:	f0 f0       	brcs	.+60     	; 0xfee <__fp_rempio2+0x4a>
     fb2:	2a ed       	ldi	r18, 0xDA	; 218
     fb4:	3f e0       	ldi	r19, 0x0F	; 15
     fb6:	49 ec       	ldi	r20, 0xC9	; 201
     fb8:	06 c0       	rjmp	.+12     	; 0xfc6 <__fp_rempio2+0x22>
     fba:	ee 0f       	add	r30, r30
     fbc:	bb 0f       	add	r27, r27
     fbe:	66 1f       	adc	r22, r22
     fc0:	77 1f       	adc	r23, r23
     fc2:	88 1f       	adc	r24, r24
     fc4:	28 f0       	brcs	.+10     	; 0xfd0 <__fp_rempio2+0x2c>
     fc6:	b2 3a       	cpi	r27, 0xA2	; 162
     fc8:	62 07       	cpc	r22, r18
     fca:	73 07       	cpc	r23, r19
     fcc:	84 07       	cpc	r24, r20
     fce:	28 f0       	brcs	.+10     	; 0xfda <__fp_rempio2+0x36>
     fd0:	b2 5a       	subi	r27, 0xA2	; 162
     fd2:	62 0b       	sbc	r22, r18
     fd4:	73 0b       	sbc	r23, r19
     fd6:	84 0b       	sbc	r24, r20
     fd8:	e3 95       	inc	r30
     fda:	9a 95       	dec	r25
     fdc:	72 f7       	brpl	.-36     	; 0xfba <__fp_rempio2+0x16>
     fde:	80 38       	cpi	r24, 0x80	; 128
     fe0:	30 f4       	brcc	.+12     	; 0xfee <__fp_rempio2+0x4a>
     fe2:	9a 95       	dec	r25
     fe4:	bb 0f       	add	r27, r27
     fe6:	66 1f       	adc	r22, r22
     fe8:	77 1f       	adc	r23, r23
     fea:	88 1f       	adc	r24, r24
     fec:	d2 f7       	brpl	.-12     	; 0xfe2 <__fp_rempio2+0x3e>
     fee:	90 48       	sbci	r25, 0x80	; 128
     ff0:	13 c0       	rjmp	.+38     	; 0x1018 <__fp_mpack_finite>

00000ff2 <__fp_sinus>:
     ff2:	ef 93       	push	r30
     ff4:	e0 ff       	sbrs	r30, 0
     ff6:	06 c0       	rjmp	.+12     	; 0x1004 <__fp_sinus+0x12>
     ff8:	a2 ea       	ldi	r26, 0xA2	; 162
     ffa:	2a ed       	ldi	r18, 0xDA	; 218
     ffc:	3f e0       	ldi	r19, 0x0F	; 15
     ffe:	49 ec       	ldi	r20, 0xC9	; 201
    1000:	5f eb       	ldi	r21, 0xBF	; 191
    1002:	cc dd       	rcall	.-1128   	; 0xb9c <__addsf3x>
    1004:	06 df       	rcall	.-500    	; 0xe12 <__fp_round>
    1006:	0f 90       	pop	r0
    1008:	03 94       	inc	r0
    100a:	01 fc       	sbrc	r0, 1
    100c:	90 58       	subi	r25, 0x80	; 128
    100e:	e4 ee       	ldi	r30, 0xE4	; 228
    1010:	f0 e0       	ldi	r31, 0x00	; 0
    1012:	0e c0       	rjmp	.+28     	; 0x1030 <__fp_powsodd>

00001014 <__fp_mpack>:
    1014:	9f 3f       	cpi	r25, 0xFF	; 255
    1016:	31 f0       	breq	.+12     	; 0x1024 <__fp_mpack_finite+0xc>

00001018 <__fp_mpack_finite>:
    1018:	91 50       	subi	r25, 0x01	; 1
    101a:	20 f4       	brcc	.+8      	; 0x1024 <__fp_mpack_finite+0xc>
    101c:	87 95       	ror	r24
    101e:	77 95       	ror	r23
    1020:	67 95       	ror	r22
    1022:	b7 95       	ror	r27
    1024:	88 0f       	add	r24, r24
    1026:	91 1d       	adc	r25, r1
    1028:	96 95       	lsr	r25
    102a:	87 95       	ror	r24
    102c:	97 f9       	bld	r25, 7
    102e:	08 95       	ret

00001030 <__fp_powsodd>:
    1030:	9f 93       	push	r25
    1032:	8f 93       	push	r24
    1034:	7f 93       	push	r23
    1036:	6f 93       	push	r22
    1038:	ff 93       	push	r31
    103a:	ef 93       	push	r30
    103c:	9b 01       	movw	r18, r22
    103e:	ac 01       	movw	r20, r24
    1040:	22 df       	rcall	.-444    	; 0xe86 <__mulsf3>
    1042:	ef 91       	pop	r30
    1044:	ff 91       	pop	r31
    1046:	88 df       	rcall	.-240    	; 0xf58 <__fp_powser>
    1048:	2f 91       	pop	r18
    104a:	3f 91       	pop	r19
    104c:	4f 91       	pop	r20
    104e:	5f 91       	pop	r21
    1050:	1a cf       	rjmp	.-460    	; 0xe86 <__mulsf3>

00001052 <__divmodhi4>:
    1052:	97 fb       	bst	r25, 7
    1054:	07 2e       	mov	r0, r23
    1056:	16 f4       	brtc	.+4      	; 0x105c <__divmodhi4+0xa>
    1058:	00 94       	com	r0
    105a:	06 d0       	rcall	.+12     	; 0x1068 <__divmodhi4_neg1>
    105c:	77 fd       	sbrc	r23, 7
    105e:	08 d0       	rcall	.+16     	; 0x1070 <__divmodhi4_neg2>
    1060:	27 d0       	rcall	.+78     	; 0x10b0 <__udivmodhi4>
    1062:	07 fc       	sbrc	r0, 7
    1064:	05 d0       	rcall	.+10     	; 0x1070 <__divmodhi4_neg2>
    1066:	3e f4       	brtc	.+14     	; 0x1076 <__divmodhi4_exit>

00001068 <__divmodhi4_neg1>:
    1068:	90 95       	com	r25
    106a:	81 95       	neg	r24
    106c:	9f 4f       	sbci	r25, 0xFF	; 255
    106e:	08 95       	ret

00001070 <__divmodhi4_neg2>:
    1070:	70 95       	com	r23
    1072:	61 95       	neg	r22
    1074:	7f 4f       	sbci	r23, 0xFF	; 255

00001076 <__divmodhi4_exit>:
    1076:	08 95       	ret

00001078 <__divmodsi4>:
    1078:	05 2e       	mov	r0, r21
    107a:	97 fb       	bst	r25, 7
    107c:	16 f4       	brtc	.+4      	; 0x1082 <__divmodsi4+0xa>
    107e:	00 94       	com	r0
    1080:	0f d0       	rcall	.+30     	; 0x10a0 <__negsi2>
    1082:	57 fd       	sbrc	r21, 7
    1084:	05 d0       	rcall	.+10     	; 0x1090 <__divmodsi4_neg2>
    1086:	28 d0       	rcall	.+80     	; 0x10d8 <__udivmodsi4>
    1088:	07 fc       	sbrc	r0, 7
    108a:	02 d0       	rcall	.+4      	; 0x1090 <__divmodsi4_neg2>
    108c:	46 f4       	brtc	.+16     	; 0x109e <__divmodsi4_exit>
    108e:	08 c0       	rjmp	.+16     	; 0x10a0 <__negsi2>

00001090 <__divmodsi4_neg2>:
    1090:	50 95       	com	r21
    1092:	40 95       	com	r20
    1094:	30 95       	com	r19
    1096:	21 95       	neg	r18
    1098:	3f 4f       	sbci	r19, 0xFF	; 255
    109a:	4f 4f       	sbci	r20, 0xFF	; 255
    109c:	5f 4f       	sbci	r21, 0xFF	; 255

0000109e <__divmodsi4_exit>:
    109e:	08 95       	ret

000010a0 <__negsi2>:
    10a0:	90 95       	com	r25
    10a2:	80 95       	com	r24
    10a4:	70 95       	com	r23
    10a6:	61 95       	neg	r22
    10a8:	7f 4f       	sbci	r23, 0xFF	; 255
    10aa:	8f 4f       	sbci	r24, 0xFF	; 255
    10ac:	9f 4f       	sbci	r25, 0xFF	; 255
    10ae:	08 95       	ret

000010b0 <__udivmodhi4>:
    10b0:	aa 1b       	sub	r26, r26
    10b2:	bb 1b       	sub	r27, r27
    10b4:	51 e1       	ldi	r21, 0x11	; 17
    10b6:	07 c0       	rjmp	.+14     	; 0x10c6 <__udivmodhi4_ep>

000010b8 <__udivmodhi4_loop>:
    10b8:	aa 1f       	adc	r26, r26
    10ba:	bb 1f       	adc	r27, r27
    10bc:	a6 17       	cp	r26, r22
    10be:	b7 07       	cpc	r27, r23
    10c0:	10 f0       	brcs	.+4      	; 0x10c6 <__udivmodhi4_ep>
    10c2:	a6 1b       	sub	r26, r22
    10c4:	b7 0b       	sbc	r27, r23

000010c6 <__udivmodhi4_ep>:
    10c6:	88 1f       	adc	r24, r24
    10c8:	99 1f       	adc	r25, r25
    10ca:	5a 95       	dec	r21
    10cc:	a9 f7       	brne	.-22     	; 0x10b8 <__udivmodhi4_loop>
    10ce:	80 95       	com	r24
    10d0:	90 95       	com	r25
    10d2:	bc 01       	movw	r22, r24
    10d4:	cd 01       	movw	r24, r26
    10d6:	08 95       	ret

000010d8 <__udivmodsi4>:
    10d8:	a1 e2       	ldi	r26, 0x21	; 33
    10da:	1a 2e       	mov	r1, r26
    10dc:	aa 1b       	sub	r26, r26
    10de:	bb 1b       	sub	r27, r27
    10e0:	fd 01       	movw	r30, r26
    10e2:	0d c0       	rjmp	.+26     	; 0x10fe <__udivmodsi4_ep>

000010e4 <__udivmodsi4_loop>:
    10e4:	aa 1f       	adc	r26, r26
    10e6:	bb 1f       	adc	r27, r27
    10e8:	ee 1f       	adc	r30, r30
    10ea:	ff 1f       	adc	r31, r31
    10ec:	a2 17       	cp	r26, r18
    10ee:	b3 07       	cpc	r27, r19
    10f0:	e4 07       	cpc	r30, r20
    10f2:	f5 07       	cpc	r31, r21
    10f4:	20 f0       	brcs	.+8      	; 0x10fe <__udivmodsi4_ep>
    10f6:	a2 1b       	sub	r26, r18
    10f8:	b3 0b       	sbc	r27, r19
    10fa:	e4 0b       	sbc	r30, r20
    10fc:	f5 0b       	sbc	r31, r21

000010fe <__udivmodsi4_ep>:
    10fe:	66 1f       	adc	r22, r22
    1100:	77 1f       	adc	r23, r23
    1102:	88 1f       	adc	r24, r24
    1104:	99 1f       	adc	r25, r25
    1106:	1a 94       	dec	r1
    1108:	69 f7       	brne	.-38     	; 0x10e4 <__udivmodsi4_loop>
    110a:	60 95       	com	r22
    110c:	70 95       	com	r23
    110e:	80 95       	com	r24
    1110:	90 95       	com	r25
    1112:	9b 01       	movw	r18, r22
    1114:	ac 01       	movw	r20, r24
    1116:	bd 01       	movw	r22, r26
    1118:	cf 01       	movw	r24, r30
    111a:	08 95       	ret

0000111c <__itoa_ncheck>:
    111c:	bb 27       	eor	r27, r27
    111e:	4a 30       	cpi	r20, 0x0A	; 10
    1120:	31 f4       	brne	.+12     	; 0x112e <__itoa_ncheck+0x12>
    1122:	99 23       	and	r25, r25
    1124:	22 f4       	brpl	.+8      	; 0x112e <__itoa_ncheck+0x12>
    1126:	bd e2       	ldi	r27, 0x2D	; 45
    1128:	90 95       	com	r25
    112a:	81 95       	neg	r24
    112c:	9f 4f       	sbci	r25, 0xFF	; 255
    112e:	01 c0       	rjmp	.+2      	; 0x1132 <__utoa_common>

00001130 <__utoa_ncheck>:
    1130:	bb 27       	eor	r27, r27

00001132 <__utoa_common>:
    1132:	fb 01       	movw	r30, r22
    1134:	55 27       	eor	r21, r21
    1136:	aa 27       	eor	r26, r26
    1138:	88 0f       	add	r24, r24
    113a:	99 1f       	adc	r25, r25
    113c:	aa 1f       	adc	r26, r26
    113e:	a4 17       	cp	r26, r20
    1140:	10 f0       	brcs	.+4      	; 0x1146 <__utoa_common+0x14>
    1142:	a4 1b       	sub	r26, r20
    1144:	83 95       	inc	r24
    1146:	50 51       	subi	r21, 0x10	; 16
    1148:	b9 f7       	brne	.-18     	; 0x1138 <__utoa_common+0x6>
    114a:	a0 5d       	subi	r26, 0xD0	; 208
    114c:	aa 33       	cpi	r26, 0x3A	; 58
    114e:	08 f0       	brcs	.+2      	; 0x1152 <__utoa_common+0x20>
    1150:	a9 5d       	subi	r26, 0xD9	; 217
    1152:	a1 93       	st	Z+, r26
    1154:	00 97       	sbiw	r24, 0x00	; 0
    1156:	79 f7       	brne	.-34     	; 0x1136 <__utoa_common+0x4>
    1158:	b1 11       	cpse	r27, r1
    115a:	b1 93       	st	Z+, r27
    115c:	11 92       	st	Z+, r1
    115e:	cb 01       	movw	r24, r22
    1160:	e7 c3       	rjmp	.+1998   	; 0x1930 <strrev>

00001162 <fdevopen>:
    1162:	0f 93       	push	r16
    1164:	1f 93       	push	r17
    1166:	cf 93       	push	r28
    1168:	df 93       	push	r29
    116a:	00 97       	sbiw	r24, 0x00	; 0
    116c:	31 f4       	brne	.+12     	; 0x117a <fdevopen+0x18>
    116e:	61 15       	cp	r22, r1
    1170:	71 05       	cpc	r23, r1
    1172:	19 f4       	brne	.+6      	; 0x117a <fdevopen+0x18>
    1174:	80 e0       	ldi	r24, 0x00	; 0
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	39 c0       	rjmp	.+114    	; 0x11ec <fdevopen+0x8a>
    117a:	8b 01       	movw	r16, r22
    117c:	ec 01       	movw	r28, r24
    117e:	6e e0       	ldi	r22, 0x0E	; 14
    1180:	70 e0       	ldi	r23, 0x00	; 0
    1182:	81 e0       	ldi	r24, 0x01	; 1
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	7c d2       	rcall	.+1272   	; 0x1680 <calloc>
    1188:	fc 01       	movw	r30, r24
    118a:	89 2b       	or	r24, r25
    118c:	99 f3       	breq	.-26     	; 0x1174 <fdevopen+0x12>
    118e:	80 e8       	ldi	r24, 0x80	; 128
    1190:	83 83       	std	Z+3, r24	; 0x03
    1192:	01 15       	cp	r16, r1
    1194:	11 05       	cpc	r17, r1
    1196:	71 f0       	breq	.+28     	; 0x11b4 <fdevopen+0x52>
    1198:	13 87       	std	Z+11, r17	; 0x0b
    119a:	02 87       	std	Z+10, r16	; 0x0a
    119c:	81 e8       	ldi	r24, 0x81	; 129
    119e:	83 83       	std	Z+3, r24	; 0x03
    11a0:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <__iob>
    11a4:	90 91 d1 03 	lds	r25, 0x03D1	; 0x8003d1 <__iob+0x1>
    11a8:	89 2b       	or	r24, r25
    11aa:	21 f4       	brne	.+8      	; 0x11b4 <fdevopen+0x52>
    11ac:	f0 93 d1 03 	sts	0x03D1, r31	; 0x8003d1 <__iob+0x1>
    11b0:	e0 93 d0 03 	sts	0x03D0, r30	; 0x8003d0 <__iob>
    11b4:	20 97       	sbiw	r28, 0x00	; 0
    11b6:	c9 f0       	breq	.+50     	; 0x11ea <fdevopen+0x88>
    11b8:	d1 87       	std	Z+9, r29	; 0x09
    11ba:	c0 87       	std	Z+8, r28	; 0x08
    11bc:	83 81       	ldd	r24, Z+3	; 0x03
    11be:	82 60       	ori	r24, 0x02	; 2
    11c0:	83 83       	std	Z+3, r24	; 0x03
    11c2:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <__iob+0x2>
    11c6:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <__iob+0x3>
    11ca:	89 2b       	or	r24, r25
    11cc:	71 f4       	brne	.+28     	; 0x11ea <fdevopen+0x88>
    11ce:	f0 93 d3 03 	sts	0x03D3, r31	; 0x8003d3 <__iob+0x3>
    11d2:	e0 93 d2 03 	sts	0x03D2, r30	; 0x8003d2 <__iob+0x2>
    11d6:	80 91 d4 03 	lds	r24, 0x03D4	; 0x8003d4 <__iob+0x4>
    11da:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <__iob+0x5>
    11de:	89 2b       	or	r24, r25
    11e0:	21 f4       	brne	.+8      	; 0x11ea <fdevopen+0x88>
    11e2:	f0 93 d5 03 	sts	0x03D5, r31	; 0x8003d5 <__iob+0x5>
    11e6:	e0 93 d4 03 	sts	0x03D4, r30	; 0x8003d4 <__iob+0x4>
    11ea:	cf 01       	movw	r24, r30
    11ec:	df 91       	pop	r29
    11ee:	cf 91       	pop	r28
    11f0:	1f 91       	pop	r17
    11f2:	0f 91       	pop	r16
    11f4:	08 95       	ret

000011f6 <printf>:
    11f6:	cf 93       	push	r28
    11f8:	df 93       	push	r29
    11fa:	cd b7       	in	r28, 0x3d	; 61
    11fc:	de b7       	in	r29, 0x3e	; 62
    11fe:	ae 01       	movw	r20, r28
    1200:	4a 5f       	subi	r20, 0xFA	; 250
    1202:	5f 4f       	sbci	r21, 0xFF	; 255
    1204:	fa 01       	movw	r30, r20
    1206:	61 91       	ld	r22, Z+
    1208:	71 91       	ld	r23, Z+
    120a:	af 01       	movw	r20, r30
    120c:	80 91 d2 03 	lds	r24, 0x03D2	; 0x8003d2 <__iob+0x2>
    1210:	90 91 d3 03 	lds	r25, 0x03D3	; 0x8003d3 <__iob+0x3>
    1214:	38 d0       	rcall	.+112    	; 0x1286 <vfprintf>
    1216:	df 91       	pop	r29
    1218:	cf 91       	pop	r28
    121a:	08 95       	ret

0000121c <putchar>:
    121c:	60 91 d2 03 	lds	r22, 0x03D2	; 0x8003d2 <__iob+0x2>
    1220:	70 91 d3 03 	lds	r23, 0x03D3	; 0x8003d3 <__iob+0x3>
    1224:	95 c3       	rjmp	.+1834   	; 0x1950 <fputc>

00001226 <puts>:
    1226:	0f 93       	push	r16
    1228:	1f 93       	push	r17
    122a:	cf 93       	push	r28
    122c:	df 93       	push	r29
    122e:	e0 91 d2 03 	lds	r30, 0x03D2	; 0x8003d2 <__iob+0x2>
    1232:	f0 91 d3 03 	lds	r31, 0x03D3	; 0x8003d3 <__iob+0x3>
    1236:	23 81       	ldd	r18, Z+3	; 0x03
    1238:	21 ff       	sbrs	r18, 1
    123a:	1b c0       	rjmp	.+54     	; 0x1272 <puts+0x4c>
    123c:	8c 01       	movw	r16, r24
    123e:	d0 e0       	ldi	r29, 0x00	; 0
    1240:	c0 e0       	ldi	r28, 0x00	; 0
    1242:	f8 01       	movw	r30, r16
    1244:	81 91       	ld	r24, Z+
    1246:	8f 01       	movw	r16, r30
    1248:	60 91 d2 03 	lds	r22, 0x03D2	; 0x8003d2 <__iob+0x2>
    124c:	70 91 d3 03 	lds	r23, 0x03D3	; 0x8003d3 <__iob+0x3>
    1250:	db 01       	movw	r26, r22
    1252:	18 96       	adiw	r26, 0x08	; 8
    1254:	ed 91       	ld	r30, X+
    1256:	fc 91       	ld	r31, X
    1258:	19 97       	sbiw	r26, 0x09	; 9
    125a:	88 23       	and	r24, r24
    125c:	31 f0       	breq	.+12     	; 0x126a <puts+0x44>
    125e:	19 95       	eicall
    1260:	89 2b       	or	r24, r25
    1262:	79 f3       	breq	.-34     	; 0x1242 <puts+0x1c>
    1264:	df ef       	ldi	r29, 0xFF	; 255
    1266:	cf ef       	ldi	r28, 0xFF	; 255
    1268:	ec cf       	rjmp	.-40     	; 0x1242 <puts+0x1c>
    126a:	8a e0       	ldi	r24, 0x0A	; 10
    126c:	19 95       	eicall
    126e:	89 2b       	or	r24, r25
    1270:	19 f0       	breq	.+6      	; 0x1278 <puts+0x52>
    1272:	8f ef       	ldi	r24, 0xFF	; 255
    1274:	9f ef       	ldi	r25, 0xFF	; 255
    1276:	02 c0       	rjmp	.+4      	; 0x127c <puts+0x56>
    1278:	8d 2f       	mov	r24, r29
    127a:	9c 2f       	mov	r25, r28
    127c:	df 91       	pop	r29
    127e:	cf 91       	pop	r28
    1280:	1f 91       	pop	r17
    1282:	0f 91       	pop	r16
    1284:	08 95       	ret

00001286 <vfprintf>:
    1286:	2f 92       	push	r2
    1288:	3f 92       	push	r3
    128a:	4f 92       	push	r4
    128c:	5f 92       	push	r5
    128e:	6f 92       	push	r6
    1290:	7f 92       	push	r7
    1292:	8f 92       	push	r8
    1294:	9f 92       	push	r9
    1296:	af 92       	push	r10
    1298:	bf 92       	push	r11
    129a:	cf 92       	push	r12
    129c:	df 92       	push	r13
    129e:	ef 92       	push	r14
    12a0:	ff 92       	push	r15
    12a2:	0f 93       	push	r16
    12a4:	1f 93       	push	r17
    12a6:	cf 93       	push	r28
    12a8:	df 93       	push	r29
    12aa:	cd b7       	in	r28, 0x3d	; 61
    12ac:	de b7       	in	r29, 0x3e	; 62
    12ae:	2b 97       	sbiw	r28, 0x0b	; 11
    12b0:	0f b6       	in	r0, 0x3f	; 63
    12b2:	f8 94       	cli
    12b4:	de bf       	out	0x3e, r29	; 62
    12b6:	0f be       	out	0x3f, r0	; 63
    12b8:	cd bf       	out	0x3d, r28	; 61
    12ba:	6c 01       	movw	r12, r24
    12bc:	7b 01       	movw	r14, r22
    12be:	8a 01       	movw	r16, r20
    12c0:	fc 01       	movw	r30, r24
    12c2:	17 82       	std	Z+7, r1	; 0x07
    12c4:	16 82       	std	Z+6, r1	; 0x06
    12c6:	83 81       	ldd	r24, Z+3	; 0x03
    12c8:	81 ff       	sbrs	r24, 1
    12ca:	bf c1       	rjmp	.+894    	; 0x164a <vfprintf+0x3c4>
    12cc:	ce 01       	movw	r24, r28
    12ce:	01 96       	adiw	r24, 0x01	; 1
    12d0:	3c 01       	movw	r6, r24
    12d2:	f6 01       	movw	r30, r12
    12d4:	93 81       	ldd	r25, Z+3	; 0x03
    12d6:	f7 01       	movw	r30, r14
    12d8:	93 fd       	sbrc	r25, 3
    12da:	85 91       	lpm	r24, Z+
    12dc:	93 ff       	sbrs	r25, 3
    12de:	81 91       	ld	r24, Z+
    12e0:	7f 01       	movw	r14, r30
    12e2:	88 23       	and	r24, r24
    12e4:	09 f4       	brne	.+2      	; 0x12e8 <vfprintf+0x62>
    12e6:	ad c1       	rjmp	.+858    	; 0x1642 <vfprintf+0x3bc>
    12e8:	85 32       	cpi	r24, 0x25	; 37
    12ea:	39 f4       	brne	.+14     	; 0x12fa <vfprintf+0x74>
    12ec:	93 fd       	sbrc	r25, 3
    12ee:	85 91       	lpm	r24, Z+
    12f0:	93 ff       	sbrs	r25, 3
    12f2:	81 91       	ld	r24, Z+
    12f4:	7f 01       	movw	r14, r30
    12f6:	85 32       	cpi	r24, 0x25	; 37
    12f8:	21 f4       	brne	.+8      	; 0x1302 <vfprintf+0x7c>
    12fa:	b6 01       	movw	r22, r12
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	28 d3       	rcall	.+1616   	; 0x1950 <fputc>
    1300:	e8 cf       	rjmp	.-48     	; 0x12d2 <vfprintf+0x4c>
    1302:	91 2c       	mov	r9, r1
    1304:	21 2c       	mov	r2, r1
    1306:	31 2c       	mov	r3, r1
    1308:	ff e1       	ldi	r31, 0x1F	; 31
    130a:	f3 15       	cp	r31, r3
    130c:	d8 f0       	brcs	.+54     	; 0x1344 <vfprintf+0xbe>
    130e:	8b 32       	cpi	r24, 0x2B	; 43
    1310:	79 f0       	breq	.+30     	; 0x1330 <vfprintf+0xaa>
    1312:	38 f4       	brcc	.+14     	; 0x1322 <vfprintf+0x9c>
    1314:	80 32       	cpi	r24, 0x20	; 32
    1316:	79 f0       	breq	.+30     	; 0x1336 <vfprintf+0xb0>
    1318:	83 32       	cpi	r24, 0x23	; 35
    131a:	a1 f4       	brne	.+40     	; 0x1344 <vfprintf+0xbe>
    131c:	23 2d       	mov	r18, r3
    131e:	20 61       	ori	r18, 0x10	; 16
    1320:	1d c0       	rjmp	.+58     	; 0x135c <vfprintf+0xd6>
    1322:	8d 32       	cpi	r24, 0x2D	; 45
    1324:	61 f0       	breq	.+24     	; 0x133e <vfprintf+0xb8>
    1326:	80 33       	cpi	r24, 0x30	; 48
    1328:	69 f4       	brne	.+26     	; 0x1344 <vfprintf+0xbe>
    132a:	23 2d       	mov	r18, r3
    132c:	21 60       	ori	r18, 0x01	; 1
    132e:	16 c0       	rjmp	.+44     	; 0x135c <vfprintf+0xd6>
    1330:	83 2d       	mov	r24, r3
    1332:	82 60       	ori	r24, 0x02	; 2
    1334:	38 2e       	mov	r3, r24
    1336:	e3 2d       	mov	r30, r3
    1338:	e4 60       	ori	r30, 0x04	; 4
    133a:	3e 2e       	mov	r3, r30
    133c:	2a c0       	rjmp	.+84     	; 0x1392 <vfprintf+0x10c>
    133e:	f3 2d       	mov	r31, r3
    1340:	f8 60       	ori	r31, 0x08	; 8
    1342:	1d c0       	rjmp	.+58     	; 0x137e <vfprintf+0xf8>
    1344:	37 fc       	sbrc	r3, 7
    1346:	2d c0       	rjmp	.+90     	; 0x13a2 <vfprintf+0x11c>
    1348:	20 ed       	ldi	r18, 0xD0	; 208
    134a:	28 0f       	add	r18, r24
    134c:	2a 30       	cpi	r18, 0x0A	; 10
    134e:	40 f0       	brcs	.+16     	; 0x1360 <vfprintf+0xda>
    1350:	8e 32       	cpi	r24, 0x2E	; 46
    1352:	b9 f4       	brne	.+46     	; 0x1382 <vfprintf+0xfc>
    1354:	36 fc       	sbrc	r3, 6
    1356:	75 c1       	rjmp	.+746    	; 0x1642 <vfprintf+0x3bc>
    1358:	23 2d       	mov	r18, r3
    135a:	20 64       	ori	r18, 0x40	; 64
    135c:	32 2e       	mov	r3, r18
    135e:	19 c0       	rjmp	.+50     	; 0x1392 <vfprintf+0x10c>
    1360:	36 fe       	sbrs	r3, 6
    1362:	06 c0       	rjmp	.+12     	; 0x1370 <vfprintf+0xea>
    1364:	8a e0       	ldi	r24, 0x0A	; 10
    1366:	98 9e       	mul	r9, r24
    1368:	20 0d       	add	r18, r0
    136a:	11 24       	eor	r1, r1
    136c:	92 2e       	mov	r9, r18
    136e:	11 c0       	rjmp	.+34     	; 0x1392 <vfprintf+0x10c>
    1370:	ea e0       	ldi	r30, 0x0A	; 10
    1372:	2e 9e       	mul	r2, r30
    1374:	20 0d       	add	r18, r0
    1376:	11 24       	eor	r1, r1
    1378:	22 2e       	mov	r2, r18
    137a:	f3 2d       	mov	r31, r3
    137c:	f0 62       	ori	r31, 0x20	; 32
    137e:	3f 2e       	mov	r3, r31
    1380:	08 c0       	rjmp	.+16     	; 0x1392 <vfprintf+0x10c>
    1382:	8c 36       	cpi	r24, 0x6C	; 108
    1384:	21 f4       	brne	.+8      	; 0x138e <vfprintf+0x108>
    1386:	83 2d       	mov	r24, r3
    1388:	80 68       	ori	r24, 0x80	; 128
    138a:	38 2e       	mov	r3, r24
    138c:	02 c0       	rjmp	.+4      	; 0x1392 <vfprintf+0x10c>
    138e:	88 36       	cpi	r24, 0x68	; 104
    1390:	41 f4       	brne	.+16     	; 0x13a2 <vfprintf+0x11c>
    1392:	f7 01       	movw	r30, r14
    1394:	93 fd       	sbrc	r25, 3
    1396:	85 91       	lpm	r24, Z+
    1398:	93 ff       	sbrs	r25, 3
    139a:	81 91       	ld	r24, Z+
    139c:	7f 01       	movw	r14, r30
    139e:	81 11       	cpse	r24, r1
    13a0:	b3 cf       	rjmp	.-154    	; 0x1308 <vfprintf+0x82>
    13a2:	98 2f       	mov	r25, r24
    13a4:	9f 7d       	andi	r25, 0xDF	; 223
    13a6:	95 54       	subi	r25, 0x45	; 69
    13a8:	93 30       	cpi	r25, 0x03	; 3
    13aa:	28 f4       	brcc	.+10     	; 0x13b6 <vfprintf+0x130>
    13ac:	0c 5f       	subi	r16, 0xFC	; 252
    13ae:	1f 4f       	sbci	r17, 0xFF	; 255
    13b0:	9f e3       	ldi	r25, 0x3F	; 63
    13b2:	99 83       	std	Y+1, r25	; 0x01
    13b4:	0d c0       	rjmp	.+26     	; 0x13d0 <vfprintf+0x14a>
    13b6:	83 36       	cpi	r24, 0x63	; 99
    13b8:	31 f0       	breq	.+12     	; 0x13c6 <vfprintf+0x140>
    13ba:	83 37       	cpi	r24, 0x73	; 115
    13bc:	71 f0       	breq	.+28     	; 0x13da <vfprintf+0x154>
    13be:	83 35       	cpi	r24, 0x53	; 83
    13c0:	09 f0       	breq	.+2      	; 0x13c4 <vfprintf+0x13e>
    13c2:	55 c0       	rjmp	.+170    	; 0x146e <vfprintf+0x1e8>
    13c4:	20 c0       	rjmp	.+64     	; 0x1406 <vfprintf+0x180>
    13c6:	f8 01       	movw	r30, r16
    13c8:	80 81       	ld	r24, Z
    13ca:	89 83       	std	Y+1, r24	; 0x01
    13cc:	0e 5f       	subi	r16, 0xFE	; 254
    13ce:	1f 4f       	sbci	r17, 0xFF	; 255
    13d0:	88 24       	eor	r8, r8
    13d2:	83 94       	inc	r8
    13d4:	91 2c       	mov	r9, r1
    13d6:	53 01       	movw	r10, r6
    13d8:	12 c0       	rjmp	.+36     	; 0x13fe <vfprintf+0x178>
    13da:	28 01       	movw	r4, r16
    13dc:	f2 e0       	ldi	r31, 0x02	; 2
    13de:	4f 0e       	add	r4, r31
    13e0:	51 1c       	adc	r5, r1
    13e2:	f8 01       	movw	r30, r16
    13e4:	a0 80       	ld	r10, Z
    13e6:	b1 80       	ldd	r11, Z+1	; 0x01
    13e8:	36 fe       	sbrs	r3, 6
    13ea:	03 c0       	rjmp	.+6      	; 0x13f2 <vfprintf+0x16c>
    13ec:	69 2d       	mov	r22, r9
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	02 c0       	rjmp	.+4      	; 0x13f6 <vfprintf+0x170>
    13f2:	6f ef       	ldi	r22, 0xFF	; 255
    13f4:	7f ef       	ldi	r23, 0xFF	; 255
    13f6:	c5 01       	movw	r24, r10
    13f8:	90 d2       	rcall	.+1312   	; 0x191a <strnlen>
    13fa:	4c 01       	movw	r8, r24
    13fc:	82 01       	movw	r16, r4
    13fe:	f3 2d       	mov	r31, r3
    1400:	ff 77       	andi	r31, 0x7F	; 127
    1402:	3f 2e       	mov	r3, r31
    1404:	15 c0       	rjmp	.+42     	; 0x1430 <vfprintf+0x1aa>
    1406:	28 01       	movw	r4, r16
    1408:	22 e0       	ldi	r18, 0x02	; 2
    140a:	42 0e       	add	r4, r18
    140c:	51 1c       	adc	r5, r1
    140e:	f8 01       	movw	r30, r16
    1410:	a0 80       	ld	r10, Z
    1412:	b1 80       	ldd	r11, Z+1	; 0x01
    1414:	36 fe       	sbrs	r3, 6
    1416:	03 c0       	rjmp	.+6      	; 0x141e <vfprintf+0x198>
    1418:	69 2d       	mov	r22, r9
    141a:	70 e0       	ldi	r23, 0x00	; 0
    141c:	02 c0       	rjmp	.+4      	; 0x1422 <vfprintf+0x19c>
    141e:	6f ef       	ldi	r22, 0xFF	; 255
    1420:	7f ef       	ldi	r23, 0xFF	; 255
    1422:	c5 01       	movw	r24, r10
    1424:	68 d2       	rcall	.+1232   	; 0x18f6 <strnlen_P>
    1426:	4c 01       	movw	r8, r24
    1428:	f3 2d       	mov	r31, r3
    142a:	f0 68       	ori	r31, 0x80	; 128
    142c:	3f 2e       	mov	r3, r31
    142e:	82 01       	movw	r16, r4
    1430:	33 fc       	sbrc	r3, 3
    1432:	19 c0       	rjmp	.+50     	; 0x1466 <vfprintf+0x1e0>
    1434:	82 2d       	mov	r24, r2
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	88 16       	cp	r8, r24
    143a:	99 06       	cpc	r9, r25
    143c:	a0 f4       	brcc	.+40     	; 0x1466 <vfprintf+0x1e0>
    143e:	b6 01       	movw	r22, r12
    1440:	80 e2       	ldi	r24, 0x20	; 32
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	85 d2       	rcall	.+1290   	; 0x1950 <fputc>
    1446:	2a 94       	dec	r2
    1448:	f5 cf       	rjmp	.-22     	; 0x1434 <vfprintf+0x1ae>
    144a:	f5 01       	movw	r30, r10
    144c:	37 fc       	sbrc	r3, 7
    144e:	85 91       	lpm	r24, Z+
    1450:	37 fe       	sbrs	r3, 7
    1452:	81 91       	ld	r24, Z+
    1454:	5f 01       	movw	r10, r30
    1456:	b6 01       	movw	r22, r12
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	7a d2       	rcall	.+1268   	; 0x1950 <fputc>
    145c:	21 10       	cpse	r2, r1
    145e:	2a 94       	dec	r2
    1460:	21 e0       	ldi	r18, 0x01	; 1
    1462:	82 1a       	sub	r8, r18
    1464:	91 08       	sbc	r9, r1
    1466:	81 14       	cp	r8, r1
    1468:	91 04       	cpc	r9, r1
    146a:	79 f7       	brne	.-34     	; 0x144a <vfprintf+0x1c4>
    146c:	e1 c0       	rjmp	.+450    	; 0x1630 <vfprintf+0x3aa>
    146e:	84 36       	cpi	r24, 0x64	; 100
    1470:	11 f0       	breq	.+4      	; 0x1476 <vfprintf+0x1f0>
    1472:	89 36       	cpi	r24, 0x69	; 105
    1474:	39 f5       	brne	.+78     	; 0x14c4 <vfprintf+0x23e>
    1476:	f8 01       	movw	r30, r16
    1478:	37 fe       	sbrs	r3, 7
    147a:	07 c0       	rjmp	.+14     	; 0x148a <vfprintf+0x204>
    147c:	60 81       	ld	r22, Z
    147e:	71 81       	ldd	r23, Z+1	; 0x01
    1480:	82 81       	ldd	r24, Z+2	; 0x02
    1482:	93 81       	ldd	r25, Z+3	; 0x03
    1484:	0c 5f       	subi	r16, 0xFC	; 252
    1486:	1f 4f       	sbci	r17, 0xFF	; 255
    1488:	08 c0       	rjmp	.+16     	; 0x149a <vfprintf+0x214>
    148a:	60 81       	ld	r22, Z
    148c:	71 81       	ldd	r23, Z+1	; 0x01
    148e:	07 2e       	mov	r0, r23
    1490:	00 0c       	add	r0, r0
    1492:	88 0b       	sbc	r24, r24
    1494:	99 0b       	sbc	r25, r25
    1496:	0e 5f       	subi	r16, 0xFE	; 254
    1498:	1f 4f       	sbci	r17, 0xFF	; 255
    149a:	f3 2d       	mov	r31, r3
    149c:	ff 76       	andi	r31, 0x6F	; 111
    149e:	3f 2e       	mov	r3, r31
    14a0:	97 ff       	sbrs	r25, 7
    14a2:	09 c0       	rjmp	.+18     	; 0x14b6 <vfprintf+0x230>
    14a4:	90 95       	com	r25
    14a6:	80 95       	com	r24
    14a8:	70 95       	com	r23
    14aa:	61 95       	neg	r22
    14ac:	7f 4f       	sbci	r23, 0xFF	; 255
    14ae:	8f 4f       	sbci	r24, 0xFF	; 255
    14b0:	9f 4f       	sbci	r25, 0xFF	; 255
    14b2:	f0 68       	ori	r31, 0x80	; 128
    14b4:	3f 2e       	mov	r3, r31
    14b6:	2a e0       	ldi	r18, 0x0A	; 10
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	a3 01       	movw	r20, r6
    14bc:	85 d2       	rcall	.+1290   	; 0x19c8 <__ultoa_invert>
    14be:	88 2e       	mov	r8, r24
    14c0:	86 18       	sub	r8, r6
    14c2:	44 c0       	rjmp	.+136    	; 0x154c <vfprintf+0x2c6>
    14c4:	85 37       	cpi	r24, 0x75	; 117
    14c6:	31 f4       	brne	.+12     	; 0x14d4 <vfprintf+0x24e>
    14c8:	23 2d       	mov	r18, r3
    14ca:	2f 7e       	andi	r18, 0xEF	; 239
    14cc:	b2 2e       	mov	r11, r18
    14ce:	2a e0       	ldi	r18, 0x0A	; 10
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	25 c0       	rjmp	.+74     	; 0x151e <vfprintf+0x298>
    14d4:	93 2d       	mov	r25, r3
    14d6:	99 7f       	andi	r25, 0xF9	; 249
    14d8:	b9 2e       	mov	r11, r25
    14da:	8f 36       	cpi	r24, 0x6F	; 111
    14dc:	c1 f0       	breq	.+48     	; 0x150e <vfprintf+0x288>
    14de:	18 f4       	brcc	.+6      	; 0x14e6 <vfprintf+0x260>
    14e0:	88 35       	cpi	r24, 0x58	; 88
    14e2:	79 f0       	breq	.+30     	; 0x1502 <vfprintf+0x27c>
    14e4:	ae c0       	rjmp	.+348    	; 0x1642 <vfprintf+0x3bc>
    14e6:	80 37       	cpi	r24, 0x70	; 112
    14e8:	19 f0       	breq	.+6      	; 0x14f0 <vfprintf+0x26a>
    14ea:	88 37       	cpi	r24, 0x78	; 120
    14ec:	21 f0       	breq	.+8      	; 0x14f6 <vfprintf+0x270>
    14ee:	a9 c0       	rjmp	.+338    	; 0x1642 <vfprintf+0x3bc>
    14f0:	e9 2f       	mov	r30, r25
    14f2:	e0 61       	ori	r30, 0x10	; 16
    14f4:	be 2e       	mov	r11, r30
    14f6:	b4 fe       	sbrs	r11, 4
    14f8:	0d c0       	rjmp	.+26     	; 0x1514 <vfprintf+0x28e>
    14fa:	fb 2d       	mov	r31, r11
    14fc:	f4 60       	ori	r31, 0x04	; 4
    14fe:	bf 2e       	mov	r11, r31
    1500:	09 c0       	rjmp	.+18     	; 0x1514 <vfprintf+0x28e>
    1502:	34 fe       	sbrs	r3, 4
    1504:	0a c0       	rjmp	.+20     	; 0x151a <vfprintf+0x294>
    1506:	29 2f       	mov	r18, r25
    1508:	26 60       	ori	r18, 0x06	; 6
    150a:	b2 2e       	mov	r11, r18
    150c:	06 c0       	rjmp	.+12     	; 0x151a <vfprintf+0x294>
    150e:	28 e0       	ldi	r18, 0x08	; 8
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	05 c0       	rjmp	.+10     	; 0x151e <vfprintf+0x298>
    1514:	20 e1       	ldi	r18, 0x10	; 16
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	02 c0       	rjmp	.+4      	; 0x151e <vfprintf+0x298>
    151a:	20 e1       	ldi	r18, 0x10	; 16
    151c:	32 e0       	ldi	r19, 0x02	; 2
    151e:	f8 01       	movw	r30, r16
    1520:	b7 fe       	sbrs	r11, 7
    1522:	07 c0       	rjmp	.+14     	; 0x1532 <vfprintf+0x2ac>
    1524:	60 81       	ld	r22, Z
    1526:	71 81       	ldd	r23, Z+1	; 0x01
    1528:	82 81       	ldd	r24, Z+2	; 0x02
    152a:	93 81       	ldd	r25, Z+3	; 0x03
    152c:	0c 5f       	subi	r16, 0xFC	; 252
    152e:	1f 4f       	sbci	r17, 0xFF	; 255
    1530:	06 c0       	rjmp	.+12     	; 0x153e <vfprintf+0x2b8>
    1532:	60 81       	ld	r22, Z
    1534:	71 81       	ldd	r23, Z+1	; 0x01
    1536:	80 e0       	ldi	r24, 0x00	; 0
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	0e 5f       	subi	r16, 0xFE	; 254
    153c:	1f 4f       	sbci	r17, 0xFF	; 255
    153e:	a3 01       	movw	r20, r6
    1540:	43 d2       	rcall	.+1158   	; 0x19c8 <__ultoa_invert>
    1542:	88 2e       	mov	r8, r24
    1544:	86 18       	sub	r8, r6
    1546:	fb 2d       	mov	r31, r11
    1548:	ff 77       	andi	r31, 0x7F	; 127
    154a:	3f 2e       	mov	r3, r31
    154c:	36 fe       	sbrs	r3, 6
    154e:	0d c0       	rjmp	.+26     	; 0x156a <vfprintf+0x2e4>
    1550:	23 2d       	mov	r18, r3
    1552:	2e 7f       	andi	r18, 0xFE	; 254
    1554:	a2 2e       	mov	r10, r18
    1556:	89 14       	cp	r8, r9
    1558:	58 f4       	brcc	.+22     	; 0x1570 <vfprintf+0x2ea>
    155a:	34 fe       	sbrs	r3, 4
    155c:	0b c0       	rjmp	.+22     	; 0x1574 <vfprintf+0x2ee>
    155e:	32 fc       	sbrc	r3, 2
    1560:	09 c0       	rjmp	.+18     	; 0x1574 <vfprintf+0x2ee>
    1562:	83 2d       	mov	r24, r3
    1564:	8e 7e       	andi	r24, 0xEE	; 238
    1566:	a8 2e       	mov	r10, r24
    1568:	05 c0       	rjmp	.+10     	; 0x1574 <vfprintf+0x2ee>
    156a:	b8 2c       	mov	r11, r8
    156c:	a3 2c       	mov	r10, r3
    156e:	03 c0       	rjmp	.+6      	; 0x1576 <vfprintf+0x2f0>
    1570:	b8 2c       	mov	r11, r8
    1572:	01 c0       	rjmp	.+2      	; 0x1576 <vfprintf+0x2f0>
    1574:	b9 2c       	mov	r11, r9
    1576:	a4 fe       	sbrs	r10, 4
    1578:	0f c0       	rjmp	.+30     	; 0x1598 <vfprintf+0x312>
    157a:	fe 01       	movw	r30, r28
    157c:	e8 0d       	add	r30, r8
    157e:	f1 1d       	adc	r31, r1
    1580:	80 81       	ld	r24, Z
    1582:	80 33       	cpi	r24, 0x30	; 48
    1584:	21 f4       	brne	.+8      	; 0x158e <vfprintf+0x308>
    1586:	9a 2d       	mov	r25, r10
    1588:	99 7e       	andi	r25, 0xE9	; 233
    158a:	a9 2e       	mov	r10, r25
    158c:	09 c0       	rjmp	.+18     	; 0x15a0 <vfprintf+0x31a>
    158e:	a2 fe       	sbrs	r10, 2
    1590:	06 c0       	rjmp	.+12     	; 0x159e <vfprintf+0x318>
    1592:	b3 94       	inc	r11
    1594:	b3 94       	inc	r11
    1596:	04 c0       	rjmp	.+8      	; 0x15a0 <vfprintf+0x31a>
    1598:	8a 2d       	mov	r24, r10
    159a:	86 78       	andi	r24, 0x86	; 134
    159c:	09 f0       	breq	.+2      	; 0x15a0 <vfprintf+0x31a>
    159e:	b3 94       	inc	r11
    15a0:	a3 fc       	sbrc	r10, 3
    15a2:	10 c0       	rjmp	.+32     	; 0x15c4 <vfprintf+0x33e>
    15a4:	a0 fe       	sbrs	r10, 0
    15a6:	06 c0       	rjmp	.+12     	; 0x15b4 <vfprintf+0x32e>
    15a8:	b2 14       	cp	r11, r2
    15aa:	80 f4       	brcc	.+32     	; 0x15cc <vfprintf+0x346>
    15ac:	28 0c       	add	r2, r8
    15ae:	92 2c       	mov	r9, r2
    15b0:	9b 18       	sub	r9, r11
    15b2:	0d c0       	rjmp	.+26     	; 0x15ce <vfprintf+0x348>
    15b4:	b2 14       	cp	r11, r2
    15b6:	58 f4       	brcc	.+22     	; 0x15ce <vfprintf+0x348>
    15b8:	b6 01       	movw	r22, r12
    15ba:	80 e2       	ldi	r24, 0x20	; 32
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	c8 d1       	rcall	.+912    	; 0x1950 <fputc>
    15c0:	b3 94       	inc	r11
    15c2:	f8 cf       	rjmp	.-16     	; 0x15b4 <vfprintf+0x32e>
    15c4:	b2 14       	cp	r11, r2
    15c6:	18 f4       	brcc	.+6      	; 0x15ce <vfprintf+0x348>
    15c8:	2b 18       	sub	r2, r11
    15ca:	02 c0       	rjmp	.+4      	; 0x15d0 <vfprintf+0x34a>
    15cc:	98 2c       	mov	r9, r8
    15ce:	21 2c       	mov	r2, r1
    15d0:	a4 fe       	sbrs	r10, 4
    15d2:	0f c0       	rjmp	.+30     	; 0x15f2 <vfprintf+0x36c>
    15d4:	b6 01       	movw	r22, r12
    15d6:	80 e3       	ldi	r24, 0x30	; 48
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	ba d1       	rcall	.+884    	; 0x1950 <fputc>
    15dc:	a2 fe       	sbrs	r10, 2
    15de:	16 c0       	rjmp	.+44     	; 0x160c <vfprintf+0x386>
    15e0:	a1 fc       	sbrc	r10, 1
    15e2:	03 c0       	rjmp	.+6      	; 0x15ea <vfprintf+0x364>
    15e4:	88 e7       	ldi	r24, 0x78	; 120
    15e6:	90 e0       	ldi	r25, 0x00	; 0
    15e8:	02 c0       	rjmp	.+4      	; 0x15ee <vfprintf+0x368>
    15ea:	88 e5       	ldi	r24, 0x58	; 88
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	b6 01       	movw	r22, r12
    15f0:	0c c0       	rjmp	.+24     	; 0x160a <vfprintf+0x384>
    15f2:	8a 2d       	mov	r24, r10
    15f4:	86 78       	andi	r24, 0x86	; 134
    15f6:	51 f0       	breq	.+20     	; 0x160c <vfprintf+0x386>
    15f8:	a1 fe       	sbrs	r10, 1
    15fa:	02 c0       	rjmp	.+4      	; 0x1600 <vfprintf+0x37a>
    15fc:	8b e2       	ldi	r24, 0x2B	; 43
    15fe:	01 c0       	rjmp	.+2      	; 0x1602 <vfprintf+0x37c>
    1600:	80 e2       	ldi	r24, 0x20	; 32
    1602:	a7 fc       	sbrc	r10, 7
    1604:	8d e2       	ldi	r24, 0x2D	; 45
    1606:	b6 01       	movw	r22, r12
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	a2 d1       	rcall	.+836    	; 0x1950 <fputc>
    160c:	89 14       	cp	r8, r9
    160e:	30 f4       	brcc	.+12     	; 0x161c <vfprintf+0x396>
    1610:	b6 01       	movw	r22, r12
    1612:	80 e3       	ldi	r24, 0x30	; 48
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	9c d1       	rcall	.+824    	; 0x1950 <fputc>
    1618:	9a 94       	dec	r9
    161a:	f8 cf       	rjmp	.-16     	; 0x160c <vfprintf+0x386>
    161c:	8a 94       	dec	r8
    161e:	f3 01       	movw	r30, r6
    1620:	e8 0d       	add	r30, r8
    1622:	f1 1d       	adc	r31, r1
    1624:	80 81       	ld	r24, Z
    1626:	b6 01       	movw	r22, r12
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	92 d1       	rcall	.+804    	; 0x1950 <fputc>
    162c:	81 10       	cpse	r8, r1
    162e:	f6 cf       	rjmp	.-20     	; 0x161c <vfprintf+0x396>
    1630:	22 20       	and	r2, r2
    1632:	09 f4       	brne	.+2      	; 0x1636 <vfprintf+0x3b0>
    1634:	4e ce       	rjmp	.-868    	; 0x12d2 <vfprintf+0x4c>
    1636:	b6 01       	movw	r22, r12
    1638:	80 e2       	ldi	r24, 0x20	; 32
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	89 d1       	rcall	.+786    	; 0x1950 <fputc>
    163e:	2a 94       	dec	r2
    1640:	f7 cf       	rjmp	.-18     	; 0x1630 <vfprintf+0x3aa>
    1642:	f6 01       	movw	r30, r12
    1644:	86 81       	ldd	r24, Z+6	; 0x06
    1646:	97 81       	ldd	r25, Z+7	; 0x07
    1648:	02 c0       	rjmp	.+4      	; 0x164e <vfprintf+0x3c8>
    164a:	8f ef       	ldi	r24, 0xFF	; 255
    164c:	9f ef       	ldi	r25, 0xFF	; 255
    164e:	2b 96       	adiw	r28, 0x0b	; 11
    1650:	0f b6       	in	r0, 0x3f	; 63
    1652:	f8 94       	cli
    1654:	de bf       	out	0x3e, r29	; 62
    1656:	0f be       	out	0x3f, r0	; 63
    1658:	cd bf       	out	0x3d, r28	; 61
    165a:	df 91       	pop	r29
    165c:	cf 91       	pop	r28
    165e:	1f 91       	pop	r17
    1660:	0f 91       	pop	r16
    1662:	ff 90       	pop	r15
    1664:	ef 90       	pop	r14
    1666:	df 90       	pop	r13
    1668:	cf 90       	pop	r12
    166a:	bf 90       	pop	r11
    166c:	af 90       	pop	r10
    166e:	9f 90       	pop	r9
    1670:	8f 90       	pop	r8
    1672:	7f 90       	pop	r7
    1674:	6f 90       	pop	r6
    1676:	5f 90       	pop	r5
    1678:	4f 90       	pop	r4
    167a:	3f 90       	pop	r3
    167c:	2f 90       	pop	r2
    167e:	08 95       	ret

00001680 <calloc>:
    1680:	0f 93       	push	r16
    1682:	1f 93       	push	r17
    1684:	cf 93       	push	r28
    1686:	df 93       	push	r29
    1688:	86 9f       	mul	r24, r22
    168a:	80 01       	movw	r16, r0
    168c:	87 9f       	mul	r24, r23
    168e:	10 0d       	add	r17, r0
    1690:	96 9f       	mul	r25, r22
    1692:	10 0d       	add	r17, r0
    1694:	11 24       	eor	r1, r1
    1696:	c8 01       	movw	r24, r16
    1698:	0d d0       	rcall	.+26     	; 0x16b4 <malloc>
    169a:	ec 01       	movw	r28, r24
    169c:	00 97       	sbiw	r24, 0x00	; 0
    169e:	21 f0       	breq	.+8      	; 0x16a8 <calloc+0x28>
    16a0:	a8 01       	movw	r20, r16
    16a2:	60 e0       	ldi	r22, 0x00	; 0
    16a4:	70 e0       	ldi	r23, 0x00	; 0
    16a6:	32 d1       	rcall	.+612    	; 0x190c <memset>
    16a8:	ce 01       	movw	r24, r28
    16aa:	df 91       	pop	r29
    16ac:	cf 91       	pop	r28
    16ae:	1f 91       	pop	r17
    16b0:	0f 91       	pop	r16
    16b2:	08 95       	ret

000016b4 <malloc>:
    16b4:	0f 93       	push	r16
    16b6:	1f 93       	push	r17
    16b8:	cf 93       	push	r28
    16ba:	df 93       	push	r29
    16bc:	82 30       	cpi	r24, 0x02	; 2
    16be:	91 05       	cpc	r25, r1
    16c0:	10 f4       	brcc	.+4      	; 0x16c6 <malloc+0x12>
    16c2:	82 e0       	ldi	r24, 0x02	; 2
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	e0 91 d8 03 	lds	r30, 0x03D8	; 0x8003d8 <__flp>
    16ca:	f0 91 d9 03 	lds	r31, 0x03D9	; 0x8003d9 <__flp+0x1>
    16ce:	20 e0       	ldi	r18, 0x00	; 0
    16d0:	30 e0       	ldi	r19, 0x00	; 0
    16d2:	a0 e0       	ldi	r26, 0x00	; 0
    16d4:	b0 e0       	ldi	r27, 0x00	; 0
    16d6:	30 97       	sbiw	r30, 0x00	; 0
    16d8:	19 f1       	breq	.+70     	; 0x1720 <malloc+0x6c>
    16da:	40 81       	ld	r20, Z
    16dc:	51 81       	ldd	r21, Z+1	; 0x01
    16de:	02 81       	ldd	r16, Z+2	; 0x02
    16e0:	13 81       	ldd	r17, Z+3	; 0x03
    16e2:	48 17       	cp	r20, r24
    16e4:	59 07       	cpc	r21, r25
    16e6:	c8 f0       	brcs	.+50     	; 0x171a <malloc+0x66>
    16e8:	84 17       	cp	r24, r20
    16ea:	95 07       	cpc	r25, r21
    16ec:	69 f4       	brne	.+26     	; 0x1708 <malloc+0x54>
    16ee:	10 97       	sbiw	r26, 0x00	; 0
    16f0:	31 f0       	breq	.+12     	; 0x16fe <malloc+0x4a>
    16f2:	12 96       	adiw	r26, 0x02	; 2
    16f4:	0c 93       	st	X, r16
    16f6:	12 97       	sbiw	r26, 0x02	; 2
    16f8:	13 96       	adiw	r26, 0x03	; 3
    16fa:	1c 93       	st	X, r17
    16fc:	27 c0       	rjmp	.+78     	; 0x174c <malloc+0x98>
    16fe:	00 93 d8 03 	sts	0x03D8, r16	; 0x8003d8 <__flp>
    1702:	10 93 d9 03 	sts	0x03D9, r17	; 0x8003d9 <__flp+0x1>
    1706:	22 c0       	rjmp	.+68     	; 0x174c <malloc+0x98>
    1708:	21 15       	cp	r18, r1
    170a:	31 05       	cpc	r19, r1
    170c:	19 f0       	breq	.+6      	; 0x1714 <malloc+0x60>
    170e:	42 17       	cp	r20, r18
    1710:	53 07       	cpc	r21, r19
    1712:	18 f4       	brcc	.+6      	; 0x171a <malloc+0x66>
    1714:	9a 01       	movw	r18, r20
    1716:	bd 01       	movw	r22, r26
    1718:	ef 01       	movw	r28, r30
    171a:	df 01       	movw	r26, r30
    171c:	f8 01       	movw	r30, r16
    171e:	db cf       	rjmp	.-74     	; 0x16d6 <malloc+0x22>
    1720:	21 15       	cp	r18, r1
    1722:	31 05       	cpc	r19, r1
    1724:	f9 f0       	breq	.+62     	; 0x1764 <malloc+0xb0>
    1726:	28 1b       	sub	r18, r24
    1728:	39 0b       	sbc	r19, r25
    172a:	24 30       	cpi	r18, 0x04	; 4
    172c:	31 05       	cpc	r19, r1
    172e:	80 f4       	brcc	.+32     	; 0x1750 <malloc+0x9c>
    1730:	8a 81       	ldd	r24, Y+2	; 0x02
    1732:	9b 81       	ldd	r25, Y+3	; 0x03
    1734:	61 15       	cp	r22, r1
    1736:	71 05       	cpc	r23, r1
    1738:	21 f0       	breq	.+8      	; 0x1742 <malloc+0x8e>
    173a:	fb 01       	movw	r30, r22
    173c:	93 83       	std	Z+3, r25	; 0x03
    173e:	82 83       	std	Z+2, r24	; 0x02
    1740:	04 c0       	rjmp	.+8      	; 0x174a <malloc+0x96>
    1742:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <__flp+0x1>
    1746:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <__flp>
    174a:	fe 01       	movw	r30, r28
    174c:	32 96       	adiw	r30, 0x02	; 2
    174e:	44 c0       	rjmp	.+136    	; 0x17d8 <malloc+0x124>
    1750:	fe 01       	movw	r30, r28
    1752:	e2 0f       	add	r30, r18
    1754:	f3 1f       	adc	r31, r19
    1756:	81 93       	st	Z+, r24
    1758:	91 93       	st	Z+, r25
    175a:	22 50       	subi	r18, 0x02	; 2
    175c:	31 09       	sbc	r19, r1
    175e:	39 83       	std	Y+1, r19	; 0x01
    1760:	28 83       	st	Y, r18
    1762:	3a c0       	rjmp	.+116    	; 0x17d8 <malloc+0x124>
    1764:	20 91 d6 03 	lds	r18, 0x03D6	; 0x8003d6 <__brkval>
    1768:	30 91 d7 03 	lds	r19, 0x03D7	; 0x8003d7 <__brkval+0x1>
    176c:	23 2b       	or	r18, r19
    176e:	41 f4       	brne	.+16     	; 0x1780 <malloc+0xcc>
    1770:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    1774:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    1778:	30 93 d7 03 	sts	0x03D7, r19	; 0x8003d7 <__brkval+0x1>
    177c:	20 93 d6 03 	sts	0x03D6, r18	; 0x8003d6 <__brkval>
    1780:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    1784:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    1788:	21 15       	cp	r18, r1
    178a:	31 05       	cpc	r19, r1
    178c:	41 f4       	brne	.+16     	; 0x179e <malloc+0xea>
    178e:	2d b7       	in	r18, 0x3d	; 61
    1790:	3e b7       	in	r19, 0x3e	; 62
    1792:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    1796:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    179a:	24 1b       	sub	r18, r20
    179c:	35 0b       	sbc	r19, r21
    179e:	e0 91 d6 03 	lds	r30, 0x03D6	; 0x8003d6 <__brkval>
    17a2:	f0 91 d7 03 	lds	r31, 0x03D7	; 0x8003d7 <__brkval+0x1>
    17a6:	e2 17       	cp	r30, r18
    17a8:	f3 07       	cpc	r31, r19
    17aa:	a0 f4       	brcc	.+40     	; 0x17d4 <malloc+0x120>
    17ac:	2e 1b       	sub	r18, r30
    17ae:	3f 0b       	sbc	r19, r31
    17b0:	28 17       	cp	r18, r24
    17b2:	39 07       	cpc	r19, r25
    17b4:	78 f0       	brcs	.+30     	; 0x17d4 <malloc+0x120>
    17b6:	ac 01       	movw	r20, r24
    17b8:	4e 5f       	subi	r20, 0xFE	; 254
    17ba:	5f 4f       	sbci	r21, 0xFF	; 255
    17bc:	24 17       	cp	r18, r20
    17be:	35 07       	cpc	r19, r21
    17c0:	48 f0       	brcs	.+18     	; 0x17d4 <malloc+0x120>
    17c2:	4e 0f       	add	r20, r30
    17c4:	5f 1f       	adc	r21, r31
    17c6:	50 93 d7 03 	sts	0x03D7, r21	; 0x8003d7 <__brkval+0x1>
    17ca:	40 93 d6 03 	sts	0x03D6, r20	; 0x8003d6 <__brkval>
    17ce:	81 93       	st	Z+, r24
    17d0:	91 93       	st	Z+, r25
    17d2:	02 c0       	rjmp	.+4      	; 0x17d8 <malloc+0x124>
    17d4:	e0 e0       	ldi	r30, 0x00	; 0
    17d6:	f0 e0       	ldi	r31, 0x00	; 0
    17d8:	cf 01       	movw	r24, r30
    17da:	df 91       	pop	r29
    17dc:	cf 91       	pop	r28
    17de:	1f 91       	pop	r17
    17e0:	0f 91       	pop	r16
    17e2:	08 95       	ret

000017e4 <free>:
    17e4:	cf 93       	push	r28
    17e6:	df 93       	push	r29
    17e8:	00 97       	sbiw	r24, 0x00	; 0
    17ea:	09 f4       	brne	.+2      	; 0x17ee <free+0xa>
    17ec:	81 c0       	rjmp	.+258    	; 0x18f0 <free+0x10c>
    17ee:	fc 01       	movw	r30, r24
    17f0:	32 97       	sbiw	r30, 0x02	; 2
    17f2:	13 82       	std	Z+3, r1	; 0x03
    17f4:	12 82       	std	Z+2, r1	; 0x02
    17f6:	a0 91 d8 03 	lds	r26, 0x03D8	; 0x8003d8 <__flp>
    17fa:	b0 91 d9 03 	lds	r27, 0x03D9	; 0x8003d9 <__flp+0x1>
    17fe:	10 97       	sbiw	r26, 0x00	; 0
    1800:	81 f4       	brne	.+32     	; 0x1822 <free+0x3e>
    1802:	20 81       	ld	r18, Z
    1804:	31 81       	ldd	r19, Z+1	; 0x01
    1806:	82 0f       	add	r24, r18
    1808:	93 1f       	adc	r25, r19
    180a:	20 91 d6 03 	lds	r18, 0x03D6	; 0x8003d6 <__brkval>
    180e:	30 91 d7 03 	lds	r19, 0x03D7	; 0x8003d7 <__brkval+0x1>
    1812:	28 17       	cp	r18, r24
    1814:	39 07       	cpc	r19, r25
    1816:	51 f5       	brne	.+84     	; 0x186c <free+0x88>
    1818:	f0 93 d7 03 	sts	0x03D7, r31	; 0x8003d7 <__brkval+0x1>
    181c:	e0 93 d6 03 	sts	0x03D6, r30	; 0x8003d6 <__brkval>
    1820:	67 c0       	rjmp	.+206    	; 0x18f0 <free+0x10c>
    1822:	ed 01       	movw	r28, r26
    1824:	20 e0       	ldi	r18, 0x00	; 0
    1826:	30 e0       	ldi	r19, 0x00	; 0
    1828:	ce 17       	cp	r28, r30
    182a:	df 07       	cpc	r29, r31
    182c:	40 f4       	brcc	.+16     	; 0x183e <free+0x5a>
    182e:	4a 81       	ldd	r20, Y+2	; 0x02
    1830:	5b 81       	ldd	r21, Y+3	; 0x03
    1832:	9e 01       	movw	r18, r28
    1834:	41 15       	cp	r20, r1
    1836:	51 05       	cpc	r21, r1
    1838:	f1 f0       	breq	.+60     	; 0x1876 <free+0x92>
    183a:	ea 01       	movw	r28, r20
    183c:	f5 cf       	rjmp	.-22     	; 0x1828 <free+0x44>
    183e:	d3 83       	std	Z+3, r29	; 0x03
    1840:	c2 83       	std	Z+2, r28	; 0x02
    1842:	40 81       	ld	r20, Z
    1844:	51 81       	ldd	r21, Z+1	; 0x01
    1846:	84 0f       	add	r24, r20
    1848:	95 1f       	adc	r25, r21
    184a:	c8 17       	cp	r28, r24
    184c:	d9 07       	cpc	r29, r25
    184e:	59 f4       	brne	.+22     	; 0x1866 <free+0x82>
    1850:	88 81       	ld	r24, Y
    1852:	99 81       	ldd	r25, Y+1	; 0x01
    1854:	84 0f       	add	r24, r20
    1856:	95 1f       	adc	r25, r21
    1858:	02 96       	adiw	r24, 0x02	; 2
    185a:	91 83       	std	Z+1, r25	; 0x01
    185c:	80 83       	st	Z, r24
    185e:	8a 81       	ldd	r24, Y+2	; 0x02
    1860:	9b 81       	ldd	r25, Y+3	; 0x03
    1862:	93 83       	std	Z+3, r25	; 0x03
    1864:	82 83       	std	Z+2, r24	; 0x02
    1866:	21 15       	cp	r18, r1
    1868:	31 05       	cpc	r19, r1
    186a:	29 f4       	brne	.+10     	; 0x1876 <free+0x92>
    186c:	f0 93 d9 03 	sts	0x03D9, r31	; 0x8003d9 <__flp+0x1>
    1870:	e0 93 d8 03 	sts	0x03D8, r30	; 0x8003d8 <__flp>
    1874:	3d c0       	rjmp	.+122    	; 0x18f0 <free+0x10c>
    1876:	e9 01       	movw	r28, r18
    1878:	fb 83       	std	Y+3, r31	; 0x03
    187a:	ea 83       	std	Y+2, r30	; 0x02
    187c:	49 91       	ld	r20, Y+
    187e:	59 91       	ld	r21, Y+
    1880:	c4 0f       	add	r28, r20
    1882:	d5 1f       	adc	r29, r21
    1884:	ec 17       	cp	r30, r28
    1886:	fd 07       	cpc	r31, r29
    1888:	61 f4       	brne	.+24     	; 0x18a2 <free+0xbe>
    188a:	80 81       	ld	r24, Z
    188c:	91 81       	ldd	r25, Z+1	; 0x01
    188e:	84 0f       	add	r24, r20
    1890:	95 1f       	adc	r25, r21
    1892:	02 96       	adiw	r24, 0x02	; 2
    1894:	e9 01       	movw	r28, r18
    1896:	99 83       	std	Y+1, r25	; 0x01
    1898:	88 83       	st	Y, r24
    189a:	82 81       	ldd	r24, Z+2	; 0x02
    189c:	93 81       	ldd	r25, Z+3	; 0x03
    189e:	9b 83       	std	Y+3, r25	; 0x03
    18a0:	8a 83       	std	Y+2, r24	; 0x02
    18a2:	e0 e0       	ldi	r30, 0x00	; 0
    18a4:	f0 e0       	ldi	r31, 0x00	; 0
    18a6:	12 96       	adiw	r26, 0x02	; 2
    18a8:	8d 91       	ld	r24, X+
    18aa:	9c 91       	ld	r25, X
    18ac:	13 97       	sbiw	r26, 0x03	; 3
    18ae:	00 97       	sbiw	r24, 0x00	; 0
    18b0:	19 f0       	breq	.+6      	; 0x18b8 <free+0xd4>
    18b2:	fd 01       	movw	r30, r26
    18b4:	dc 01       	movw	r26, r24
    18b6:	f7 cf       	rjmp	.-18     	; 0x18a6 <free+0xc2>
    18b8:	8d 91       	ld	r24, X+
    18ba:	9c 91       	ld	r25, X
    18bc:	11 97       	sbiw	r26, 0x01	; 1
    18be:	9d 01       	movw	r18, r26
    18c0:	2e 5f       	subi	r18, 0xFE	; 254
    18c2:	3f 4f       	sbci	r19, 0xFF	; 255
    18c4:	82 0f       	add	r24, r18
    18c6:	93 1f       	adc	r25, r19
    18c8:	20 91 d6 03 	lds	r18, 0x03D6	; 0x8003d6 <__brkval>
    18cc:	30 91 d7 03 	lds	r19, 0x03D7	; 0x8003d7 <__brkval+0x1>
    18d0:	28 17       	cp	r18, r24
    18d2:	39 07       	cpc	r19, r25
    18d4:	69 f4       	brne	.+26     	; 0x18f0 <free+0x10c>
    18d6:	30 97       	sbiw	r30, 0x00	; 0
    18d8:	29 f4       	brne	.+10     	; 0x18e4 <free+0x100>
    18da:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <__flp+0x1>
    18de:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <__flp>
    18e2:	02 c0       	rjmp	.+4      	; 0x18e8 <free+0x104>
    18e4:	13 82       	std	Z+3, r1	; 0x03
    18e6:	12 82       	std	Z+2, r1	; 0x02
    18e8:	b0 93 d7 03 	sts	0x03D7, r27	; 0x8003d7 <__brkval+0x1>
    18ec:	a0 93 d6 03 	sts	0x03D6, r26	; 0x8003d6 <__brkval>
    18f0:	df 91       	pop	r29
    18f2:	cf 91       	pop	r28
    18f4:	08 95       	ret

000018f6 <strnlen_P>:
    18f6:	fc 01       	movw	r30, r24
    18f8:	05 90       	lpm	r0, Z+
    18fa:	61 50       	subi	r22, 0x01	; 1
    18fc:	70 40       	sbci	r23, 0x00	; 0
    18fe:	01 10       	cpse	r0, r1
    1900:	d8 f7       	brcc	.-10     	; 0x18f8 <strnlen_P+0x2>
    1902:	80 95       	com	r24
    1904:	90 95       	com	r25
    1906:	8e 0f       	add	r24, r30
    1908:	9f 1f       	adc	r25, r31
    190a:	08 95       	ret

0000190c <memset>:
    190c:	dc 01       	movw	r26, r24
    190e:	01 c0       	rjmp	.+2      	; 0x1912 <memset+0x6>
    1910:	6d 93       	st	X+, r22
    1912:	41 50       	subi	r20, 0x01	; 1
    1914:	50 40       	sbci	r21, 0x00	; 0
    1916:	e0 f7       	brcc	.-8      	; 0x1910 <memset+0x4>
    1918:	08 95       	ret

0000191a <strnlen>:
    191a:	fc 01       	movw	r30, r24
    191c:	61 50       	subi	r22, 0x01	; 1
    191e:	70 40       	sbci	r23, 0x00	; 0
    1920:	01 90       	ld	r0, Z+
    1922:	01 10       	cpse	r0, r1
    1924:	d8 f7       	brcc	.-10     	; 0x191c <strnlen+0x2>
    1926:	80 95       	com	r24
    1928:	90 95       	com	r25
    192a:	8e 0f       	add	r24, r30
    192c:	9f 1f       	adc	r25, r31
    192e:	08 95       	ret

00001930 <strrev>:
    1930:	dc 01       	movw	r26, r24
    1932:	fc 01       	movw	r30, r24
    1934:	67 2f       	mov	r22, r23
    1936:	71 91       	ld	r23, Z+
    1938:	77 23       	and	r23, r23
    193a:	e1 f7       	brne	.-8      	; 0x1934 <strrev+0x4>
    193c:	32 97       	sbiw	r30, 0x02	; 2
    193e:	04 c0       	rjmp	.+8      	; 0x1948 <strrev+0x18>
    1940:	7c 91       	ld	r23, X
    1942:	6d 93       	st	X+, r22
    1944:	70 83       	st	Z, r23
    1946:	62 91       	ld	r22, -Z
    1948:	ae 17       	cp	r26, r30
    194a:	bf 07       	cpc	r27, r31
    194c:	c8 f3       	brcs	.-14     	; 0x1940 <strrev+0x10>
    194e:	08 95       	ret

00001950 <fputc>:
    1950:	0f 93       	push	r16
    1952:	1f 93       	push	r17
    1954:	cf 93       	push	r28
    1956:	df 93       	push	r29
    1958:	fb 01       	movw	r30, r22
    195a:	23 81       	ldd	r18, Z+3	; 0x03
    195c:	21 fd       	sbrc	r18, 1
    195e:	03 c0       	rjmp	.+6      	; 0x1966 <fputc+0x16>
    1960:	8f ef       	ldi	r24, 0xFF	; 255
    1962:	9f ef       	ldi	r25, 0xFF	; 255
    1964:	2c c0       	rjmp	.+88     	; 0x19be <fputc+0x6e>
    1966:	22 ff       	sbrs	r18, 2
    1968:	16 c0       	rjmp	.+44     	; 0x1996 <fputc+0x46>
    196a:	46 81       	ldd	r20, Z+6	; 0x06
    196c:	57 81       	ldd	r21, Z+7	; 0x07
    196e:	24 81       	ldd	r18, Z+4	; 0x04
    1970:	35 81       	ldd	r19, Z+5	; 0x05
    1972:	42 17       	cp	r20, r18
    1974:	53 07       	cpc	r21, r19
    1976:	44 f4       	brge	.+16     	; 0x1988 <fputc+0x38>
    1978:	a0 81       	ld	r26, Z
    197a:	b1 81       	ldd	r27, Z+1	; 0x01
    197c:	9d 01       	movw	r18, r26
    197e:	2f 5f       	subi	r18, 0xFF	; 255
    1980:	3f 4f       	sbci	r19, 0xFF	; 255
    1982:	31 83       	std	Z+1, r19	; 0x01
    1984:	20 83       	st	Z, r18
    1986:	8c 93       	st	X, r24
    1988:	26 81       	ldd	r18, Z+6	; 0x06
    198a:	37 81       	ldd	r19, Z+7	; 0x07
    198c:	2f 5f       	subi	r18, 0xFF	; 255
    198e:	3f 4f       	sbci	r19, 0xFF	; 255
    1990:	37 83       	std	Z+7, r19	; 0x07
    1992:	26 83       	std	Z+6, r18	; 0x06
    1994:	14 c0       	rjmp	.+40     	; 0x19be <fputc+0x6e>
    1996:	8b 01       	movw	r16, r22
    1998:	ec 01       	movw	r28, r24
    199a:	fb 01       	movw	r30, r22
    199c:	00 84       	ldd	r0, Z+8	; 0x08
    199e:	f1 85       	ldd	r31, Z+9	; 0x09
    19a0:	e0 2d       	mov	r30, r0
    19a2:	19 95       	eicall
    19a4:	89 2b       	or	r24, r25
    19a6:	e1 f6       	brne	.-72     	; 0x1960 <fputc+0x10>
    19a8:	d8 01       	movw	r26, r16
    19aa:	16 96       	adiw	r26, 0x06	; 6
    19ac:	8d 91       	ld	r24, X+
    19ae:	9c 91       	ld	r25, X
    19b0:	17 97       	sbiw	r26, 0x07	; 7
    19b2:	01 96       	adiw	r24, 0x01	; 1
    19b4:	17 96       	adiw	r26, 0x07	; 7
    19b6:	9c 93       	st	X, r25
    19b8:	8e 93       	st	-X, r24
    19ba:	16 97       	sbiw	r26, 0x06	; 6
    19bc:	ce 01       	movw	r24, r28
    19be:	df 91       	pop	r29
    19c0:	cf 91       	pop	r28
    19c2:	1f 91       	pop	r17
    19c4:	0f 91       	pop	r16
    19c6:	08 95       	ret

000019c8 <__ultoa_invert>:
    19c8:	fa 01       	movw	r30, r20
    19ca:	aa 27       	eor	r26, r26
    19cc:	28 30       	cpi	r18, 0x08	; 8
    19ce:	51 f1       	breq	.+84     	; 0x1a24 <__ultoa_invert+0x5c>
    19d0:	20 31       	cpi	r18, 0x10	; 16
    19d2:	81 f1       	breq	.+96     	; 0x1a34 <__ultoa_invert+0x6c>
    19d4:	e8 94       	clt
    19d6:	6f 93       	push	r22
    19d8:	6e 7f       	andi	r22, 0xFE	; 254
    19da:	6e 5f       	subi	r22, 0xFE	; 254
    19dc:	7f 4f       	sbci	r23, 0xFF	; 255
    19de:	8f 4f       	sbci	r24, 0xFF	; 255
    19e0:	9f 4f       	sbci	r25, 0xFF	; 255
    19e2:	af 4f       	sbci	r26, 0xFF	; 255
    19e4:	b1 e0       	ldi	r27, 0x01	; 1
    19e6:	3e d0       	rcall	.+124    	; 0x1a64 <__ultoa_invert+0x9c>
    19e8:	b4 e0       	ldi	r27, 0x04	; 4
    19ea:	3c d0       	rcall	.+120    	; 0x1a64 <__ultoa_invert+0x9c>
    19ec:	67 0f       	add	r22, r23
    19ee:	78 1f       	adc	r23, r24
    19f0:	89 1f       	adc	r24, r25
    19f2:	9a 1f       	adc	r25, r26
    19f4:	a1 1d       	adc	r26, r1
    19f6:	68 0f       	add	r22, r24
    19f8:	79 1f       	adc	r23, r25
    19fa:	8a 1f       	adc	r24, r26
    19fc:	91 1d       	adc	r25, r1
    19fe:	a1 1d       	adc	r26, r1
    1a00:	6a 0f       	add	r22, r26
    1a02:	71 1d       	adc	r23, r1
    1a04:	81 1d       	adc	r24, r1
    1a06:	91 1d       	adc	r25, r1
    1a08:	a1 1d       	adc	r26, r1
    1a0a:	20 d0       	rcall	.+64     	; 0x1a4c <__ultoa_invert+0x84>
    1a0c:	09 f4       	brne	.+2      	; 0x1a10 <__ultoa_invert+0x48>
    1a0e:	68 94       	set
    1a10:	3f 91       	pop	r19
    1a12:	2a e0       	ldi	r18, 0x0A	; 10
    1a14:	26 9f       	mul	r18, r22
    1a16:	11 24       	eor	r1, r1
    1a18:	30 19       	sub	r19, r0
    1a1a:	30 5d       	subi	r19, 0xD0	; 208
    1a1c:	31 93       	st	Z+, r19
    1a1e:	de f6       	brtc	.-74     	; 0x19d6 <__ultoa_invert+0xe>
    1a20:	cf 01       	movw	r24, r30
    1a22:	08 95       	ret
    1a24:	46 2f       	mov	r20, r22
    1a26:	47 70       	andi	r20, 0x07	; 7
    1a28:	40 5d       	subi	r20, 0xD0	; 208
    1a2a:	41 93       	st	Z+, r20
    1a2c:	b3 e0       	ldi	r27, 0x03	; 3
    1a2e:	0f d0       	rcall	.+30     	; 0x1a4e <__ultoa_invert+0x86>
    1a30:	c9 f7       	brne	.-14     	; 0x1a24 <__ultoa_invert+0x5c>
    1a32:	f6 cf       	rjmp	.-20     	; 0x1a20 <__ultoa_invert+0x58>
    1a34:	46 2f       	mov	r20, r22
    1a36:	4f 70       	andi	r20, 0x0F	; 15
    1a38:	40 5d       	subi	r20, 0xD0	; 208
    1a3a:	4a 33       	cpi	r20, 0x3A	; 58
    1a3c:	18 f0       	brcs	.+6      	; 0x1a44 <__ultoa_invert+0x7c>
    1a3e:	49 5d       	subi	r20, 0xD9	; 217
    1a40:	31 fd       	sbrc	r19, 1
    1a42:	40 52       	subi	r20, 0x20	; 32
    1a44:	41 93       	st	Z+, r20
    1a46:	02 d0       	rcall	.+4      	; 0x1a4c <__ultoa_invert+0x84>
    1a48:	a9 f7       	brne	.-22     	; 0x1a34 <__ultoa_invert+0x6c>
    1a4a:	ea cf       	rjmp	.-44     	; 0x1a20 <__ultoa_invert+0x58>
    1a4c:	b4 e0       	ldi	r27, 0x04	; 4
    1a4e:	a6 95       	lsr	r26
    1a50:	97 95       	ror	r25
    1a52:	87 95       	ror	r24
    1a54:	77 95       	ror	r23
    1a56:	67 95       	ror	r22
    1a58:	ba 95       	dec	r27
    1a5a:	c9 f7       	brne	.-14     	; 0x1a4e <__ultoa_invert+0x86>
    1a5c:	00 97       	sbiw	r24, 0x00	; 0
    1a5e:	61 05       	cpc	r22, r1
    1a60:	71 05       	cpc	r23, r1
    1a62:	08 95       	ret
    1a64:	9b 01       	movw	r18, r22
    1a66:	ac 01       	movw	r20, r24
    1a68:	0a 2e       	mov	r0, r26
    1a6a:	06 94       	lsr	r0
    1a6c:	57 95       	ror	r21
    1a6e:	47 95       	ror	r20
    1a70:	37 95       	ror	r19
    1a72:	27 95       	ror	r18
    1a74:	ba 95       	dec	r27
    1a76:	c9 f7       	brne	.-14     	; 0x1a6a <__ultoa_invert+0xa2>
    1a78:	62 0f       	add	r22, r18
    1a7a:	73 1f       	adc	r23, r19
    1a7c:	84 1f       	adc	r24, r20
    1a7e:	95 1f       	adc	r25, r21
    1a80:	a0 1d       	adc	r26, r0
    1a82:	08 95       	ret

00001a84 <_exit>:
    1a84:	f8 94       	cli

00001a86 <__stop_program>:
    1a86:	ff cf       	rjmp	.-2      	; 0x1a86 <__stop_program>
