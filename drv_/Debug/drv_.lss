
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000198  00800200  00002c48  00002cdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002c48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000097  00800398  00800398  00002e74  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002e74  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ed0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002c0  00000000  00000000  00002f10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000388f  00000000  00000000  000031d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a24  00000000  00000000  00006a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019d2  00000000  00000000  00008483  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008f0  00000000  00000000  00009e58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d81  00000000  00000000  0000a748  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000023fc  00000000  00000000  0000b4c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000d8c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__vector_17>
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 53 0a 	jmp	0x14a6	; 0x14a6 <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	f7 c0       	rjmp	.+494    	; 0x254 <__bad_interrupt>
      66:	00 00       	nop
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2332>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	e8 e4       	ldi	r30, 0x48	; 72
     22c:	fc e2       	ldi	r31, 0x2C	; 44
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	a8 39       	cpi	r26, 0x98	; 152
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	a8 e9       	ldi	r26, 0x98	; 152
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	af 32       	cpi	r26, 0x2F	; 47
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	ba d5       	rcall	.+2932   	; 0xdc4 <main>
     250:	0c 94 22 16 	jmp	0x2c44	; 0x2c44 <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
{	
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     256:	08 95       	ret

00000258 <PWM_update>:
void PWM_update()//motor pwm update
{
     258:	8f 92       	push	r8
     25a:	9f 92       	push	r9
     25c:	af 92       	push	r10
     25e:	bf 92       	push	r11
     260:	cf 92       	push	r12
     262:	df 92       	push	r13
     264:	ef 92       	push	r14
     266:	ff 92       	push	r15
     268:	0f 93       	push	r16
     26a:	1f 93       	push	r17
	
	PID_roll=Compute_PID(kalman_angle_roll, 0 , &pid_i_roll, &previous_error_roll,dt,kp_roll,ki_roll,kd_roll);
     26c:	a0 90 1d 04 	lds	r10, 0x041D	; 0x80041d <dt>
     270:	b0 90 1e 04 	lds	r11, 0x041E	; 0x80041e <dt+0x1>
     274:	c0 90 1f 04 	lds	r12, 0x041F	; 0x80041f <dt+0x2>
     278:	d0 90 20 04 	lds	r13, 0x0420	; 0x800420 <dt+0x3>
     27c:	60 91 21 04 	lds	r22, 0x0421	; 0x800421 <kalman_angle_roll>
     280:	70 91 22 04 	lds	r23, 0x0422	; 0x800422 <kalman_angle_roll+0x1>
     284:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <kalman_angle_roll+0x2>
     288:	90 91 24 04 	lds	r25, 0x0424	; 0x800424 <kalman_angle_roll+0x3>
     28c:	20 91 7c 03 	lds	r18, 0x037C	; 0x80037c <kd_roll+0x3>
     290:	2f 93       	push	r18
     292:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <kd_roll+0x2>
     296:	2f 93       	push	r18
     298:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <kd_roll+0x1>
     29c:	2f 93       	push	r18
     29e:	20 91 79 03 	lds	r18, 0x0379	; 0x800379 <kd_roll>
     2a2:	2f 93       	push	r18
     2a4:	20 91 a8 03 	lds	r18, 0x03A8	; 0x8003a8 <ki_roll+0x3>
     2a8:	2f 93       	push	r18
     2aa:	20 91 a7 03 	lds	r18, 0x03A7	; 0x8003a7 <ki_roll+0x2>
     2ae:	2f 93       	push	r18
     2b0:	20 91 a6 03 	lds	r18, 0x03A6	; 0x8003a6 <ki_roll+0x1>
     2b4:	2f 93       	push	r18
     2b6:	20 91 a5 03 	lds	r18, 0x03A5	; 0x8003a5 <ki_roll>
     2ba:	2f 93       	push	r18
     2bc:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <kp_roll+0x3>
     2c0:	2f 93       	push	r18
     2c2:	20 91 7f 03 	lds	r18, 0x037F	; 0x80037f <kp_roll+0x2>
     2c6:	2f 93       	push	r18
     2c8:	20 91 7e 03 	lds	r18, 0x037E	; 0x80037e <kp_roll+0x1>
     2cc:	2f 93       	push	r18
     2ce:	20 91 7d 03 	lds	r18, 0x037D	; 0x80037d <kp_roll>
     2d2:	2f 93       	push	r18
     2d4:	0f 2e       	mov	r0, r31
     2d6:	fd ea       	ldi	r31, 0xAD	; 173
     2d8:	ef 2e       	mov	r14, r31
     2da:	f3 e0       	ldi	r31, 0x03	; 3
     2dc:	ff 2e       	mov	r15, r31
     2de:	f0 2d       	mov	r31, r0
     2e0:	09 ea       	ldi	r16, 0xA9	; 169
     2e2:	13 e0       	ldi	r17, 0x03	; 3
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	a9 01       	movw	r20, r18
     2ea:	da d7       	rcall	.+4020   	; 0x12a0 <Compute_PID>
     2ec:	4b 01       	movw	r8, r22
     2ee:	5c 01       	movw	r10, r24
     2f0:	60 93 b1 03 	sts	0x03B1, r22	; 0x8003b1 <PID_roll>
     2f4:	70 93 b2 03 	sts	0x03B2, r23	; 0x8003b2 <PID_roll+0x1>
     2f8:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <PID_roll+0x2>
     2fc:	90 93 b4 03 	sts	0x03B4, r25	; 0x8003b4 <PID_roll+0x3>
	//PID_pitch=Compute_PID(kalman_angle_pitch, 0 ,&pid_i_pitch,&previous_error_pitch,dt,kp_pitch,ki_pitch,kd_pitch);

	if (abs(kalman_angle_roll)<0.1 || abs(kalman_angle_roll>45))
     300:	c0 90 21 04 	lds	r12, 0x0421	; 0x800421 <kalman_angle_roll>
     304:	d0 90 22 04 	lds	r13, 0x0422	; 0x800422 <kalman_angle_roll+0x1>
     308:	e0 90 23 04 	lds	r14, 0x0423	; 0x800423 <kalman_angle_roll+0x2>
     30c:	f0 90 24 04 	lds	r15, 0x0424	; 0x800424 <kalman_angle_roll+0x3>
     310:	c7 01       	movw	r24, r14
     312:	b6 01       	movw	r22, r12
     314:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__fixsfsi>
     318:	9b 01       	movw	r18, r22
     31a:	77 23       	and	r23, r23
     31c:	24 f4       	brge	.+8      	; 0x326 <PWM_update+0xce>
     31e:	22 27       	eor	r18, r18
     320:	33 27       	eor	r19, r19
     322:	26 1b       	sub	r18, r22
     324:	37 0b       	sbc	r19, r23
     326:	b9 01       	movw	r22, r18
     328:	33 0f       	add	r19, r19
     32a:	88 0b       	sbc	r24, r24
     32c:	99 0b       	sbc	r25, r25
     32e:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__floatsisf>
     332:	2d b7       	in	r18, 0x3d	; 61
     334:	3e b7       	in	r19, 0x3e	; 62
     336:	24 5f       	subi	r18, 0xF4	; 244
     338:	3f 4f       	sbci	r19, 0xFF	; 255
     33a:	0f b6       	in	r0, 0x3f	; 63
     33c:	f8 94       	cli
     33e:	3e bf       	out	0x3e, r19	; 62
     340:	0f be       	out	0x3f, r0	; 63
     342:	2d bf       	out	0x3d, r18	; 61
     344:	2d ec       	ldi	r18, 0xCD	; 205
     346:	3c ec       	ldi	r19, 0xCC	; 204
     348:	4c ec       	ldi	r20, 0xCC	; 204
     34a:	5d e3       	ldi	r21, 0x3D	; 61
     34c:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <__cmpsf2>
     350:	88 23       	and	r24, r24
     352:	54 f0       	brlt	.+20     	; 0x368 <PWM_update+0x110>
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	30 e0       	ldi	r19, 0x00	; 0
     358:	44 e3       	ldi	r20, 0x34	; 52
     35a:	52 e4       	ldi	r21, 0x42	; 66
     35c:	c7 01       	movw	r24, r14
     35e:	b6 01       	movw	r22, r12
     360:	0e 94 50 0e 	call	0x1ca0	; 0x1ca0 <__gesf2>
     364:	18 16       	cp	r1, r24
     366:	6c f4       	brge	.+26     	; 0x382 <PWM_update+0x12a>
	{
		incr=0;
     368:	10 92 c0 03 	sts	0x03C0, r1	; 0x8003c0 <incr+0x1>
     36c:	10 92 bf 03 	sts	0x03BF, r1	; 0x8003bf <incr>
		pid_i_roll=0;
     370:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <pid_i_roll>
     374:	10 92 aa 03 	sts	0x03AA, r1	; 0x8003aa <pid_i_roll+0x1>
     378:	10 92 ab 03 	sts	0x03AB, r1	; 0x8003ab <pid_i_roll+0x2>
     37c:	10 92 ac 03 	sts	0x03AC, r1	; 0x8003ac <pid_i_roll+0x3>
     380:	30 c0       	rjmp	.+96     	; 0x3e2 <PWM_update+0x18a>
	}
	else
		if (kalman_angle_roll>0.1)
     382:	2d ec       	ldi	r18, 0xCD	; 205
     384:	3c ec       	ldi	r19, 0xCC	; 204
     386:	4c ec       	ldi	r20, 0xCC	; 204
     388:	5d e3       	ldi	r21, 0x3D	; 61
     38a:	c7 01       	movw	r24, r14
     38c:	b6 01       	movw	r22, r12
     38e:	0e 94 50 0e 	call	0x1ca0	; 0x1ca0 <__gesf2>
     392:	18 16       	cp	r1, r24
     394:	94 f4       	brge	.+36     	; 0x3ba <PWM_update+0x162>
		{
			incr=(uint8_t)(abs(PID_roll));
     396:	c5 01       	movw	r24, r10
     398:	b4 01       	movw	r22, r8
     39a:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__fixsfsi>
     39e:	9b 01       	movw	r18, r22
     3a0:	77 23       	and	r23, r23
     3a2:	24 f4       	brge	.+8      	; 0x3ac <PWM_update+0x154>
     3a4:	22 27       	eor	r18, r18
     3a6:	33 27       	eor	r19, r19
     3a8:	26 1b       	sub	r18, r22
     3aa:	37 0b       	sbc	r19, r23
     3ac:	c9 01       	movw	r24, r18
     3ae:	99 27       	eor	r25, r25
     3b0:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <incr+0x1>
     3b4:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <incr>
     3b8:	14 c0       	rjmp	.+40     	; 0x3e2 <PWM_update+0x18a>
			//printf("yes");
		}
		else 
		{
			incr =-(uint8_t)(abs(PID_roll));
     3ba:	c5 01       	movw	r24, r10
     3bc:	b4 01       	movw	r22, r8
     3be:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__fixsfsi>
     3c2:	9b 01       	movw	r18, r22
     3c4:	77 23       	and	r23, r23
     3c6:	24 f4       	brge	.+8      	; 0x3d0 <PWM_update+0x178>
     3c8:	22 27       	eor	r18, r18
     3ca:	33 27       	eor	r19, r19
     3cc:	26 1b       	sub	r18, r22
     3ce:	37 0b       	sbc	r19, r23
     3d0:	c9 01       	movw	r24, r18
     3d2:	99 27       	eor	r25, r25
     3d4:	91 95       	neg	r25
     3d6:	81 95       	neg	r24
     3d8:	91 09       	sbc	r25, r1
     3da:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <incr+0x1>
     3de:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <incr>
			//printf("no");
		}
		
	U_PWM=pwmSin[U_step];
     3e2:	e0 91 9a 03 	lds	r30, 0x039A	; 0x80039a <U_step>
     3e6:	f0 91 9b 03 	lds	r31, 0x039B	; 0x80039b <U_step+0x1>
     3ea:	ea 5f       	subi	r30, 0xFA	; 250
     3ec:	fd 4f       	sbci	r31, 0xFD	; 253
     3ee:	80 81       	ld	r24, Z
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     3f6:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     3fa:	e0 91 75 03 	lds	r30, 0x0375	; 0x800375 <V_step>
     3fe:	f0 91 76 03 	lds	r31, 0x0376	; 0x800376 <V_step+0x1>
     402:	ea 5f       	subi	r30, 0xFA	; 250
     404:	fd 4f       	sbci	r31, 0xFD	; 253
     406:	80 81       	ld	r24, Z
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     40e:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     412:	e0 91 73 03 	lds	r30, 0x0373	; 0x800373 <W_step>
     416:	f0 91 74 03 	lds	r31, 0x0374	; 0x800374 <W_step+0x1>
     41a:	ea 5f       	subi	r30, 0xFA	; 250
     41c:	fd 4f       	sbci	r31, 0xFD	; 253
     41e:	80 81       	ld	r24, Z
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     426:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	//U_PWM=255;
	//V_PWM=170;
	//W_PWM=85;
	U_step=U_step+incr;
     42a:	60 91 bf 03 	lds	r22, 0x03BF	; 0x8003bf <incr>
     42e:	70 91 c0 03 	lds	r23, 0x03C0	; 0x8003c0 <incr+0x1>
     432:	40 91 9a 03 	lds	r20, 0x039A	; 0x80039a <U_step>
     436:	50 91 9b 03 	lds	r21, 0x039B	; 0x80039b <U_step+0x1>
     43a:	46 0f       	add	r20, r22
     43c:	57 1f       	adc	r21, r23
     43e:	50 93 9b 03 	sts	0x039B, r21	; 0x80039b <U_step+0x1>
     442:	40 93 9a 03 	sts	0x039A, r20	; 0x80039a <U_step>
	V_step=V_step+incr;
     446:	20 91 75 03 	lds	r18, 0x0375	; 0x800375 <V_step>
     44a:	30 91 76 03 	lds	r19, 0x0376	; 0x800376 <V_step+0x1>
     44e:	26 0f       	add	r18, r22
     450:	37 1f       	adc	r19, r23
     452:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     456:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step+incr;
     45a:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <W_step>
     45e:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <W_step+0x1>
     462:	86 0f       	add	r24, r22
     464:	97 1f       	adc	r25, r23
     466:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     46a:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	if(U_step > SINE_TABLE_SZ)
     46e:	49 36       	cpi	r20, 0x69	; 105
     470:	61 e0       	ldi	r22, 0x01	; 1
     472:	56 07       	cpc	r21, r22
     474:	2c f0       	brlt	.+10     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
	U_step = 0;
     476:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <U_step+0x1>
     47a:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <U_step>
     47e:	08 c0       	rjmp	.+16     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
	if(U_step < 0)
     480:	55 23       	and	r21, r21
     482:	34 f4       	brge	.+12     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
	U_step = SINE_TABLE_SZ;
     484:	48 e6       	ldi	r20, 0x68	; 104
     486:	51 e0       	ldi	r21, 0x01	; 1
     488:	50 93 9b 03 	sts	0x039B, r21	; 0x80039b <U_step+0x1>
     48c:	40 93 9a 03 	sts	0x039A, r20	; 0x80039a <U_step>
	
	if(V_step > SINE_TABLE_SZ)
     490:	29 36       	cpi	r18, 0x69	; 105
     492:	41 e0       	ldi	r20, 0x01	; 1
     494:	34 07       	cpc	r19, r20
     496:	2c f0       	brlt	.+10     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
	V_step = 0;
     498:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <V_step+0x1>
     49c:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <V_step>
     4a0:	08 c0       	rjmp	.+16     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
	if(V_step < 0)
     4a2:	33 23       	and	r19, r19
     4a4:	34 f4       	brge	.+12     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
	V_step = SINE_TABLE_SZ;
     4a6:	28 e6       	ldi	r18, 0x68	; 104
     4a8:	31 e0       	ldi	r19, 0x01	; 1
     4aa:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     4ae:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     4b2:	89 36       	cpi	r24, 0x69	; 105
     4b4:	61 e0       	ldi	r22, 0x01	; 1
     4b6:	96 07       	cpc	r25, r22
     4b8:	2c f0       	brlt	.+10     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
	W_step = 0;
     4ba:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <W_step+0x1>
     4be:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <W_step>
     4c2:	08 c0       	rjmp	.+16     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
	if(W_step < 0)
     4c4:	99 23       	and	r25, r25
     4c6:	34 f4       	brge	.+12     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
	W_step = SINE_TABLE_SZ;
     4c8:	88 e6       	ldi	r24, 0x68	; 104
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     4d0:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	//printf("debug 0000000");
	INT_MOTOR_SPEED1=pwm_delay;
     4d4:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <pwm_delay>
     4d8:	90 91 b8 03 	lds	r25, 0x03B8	; 0x8003b8 <pwm_delay+0x1>
     4dc:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     4e0:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
}
     4e4:	1f 91       	pop	r17
     4e6:	0f 91       	pop	r16
     4e8:	ff 90       	pop	r15
     4ea:	ef 90       	pop	r14
     4ec:	df 90       	pop	r13
     4ee:	cf 90       	pop	r12
     4f0:	bf 90       	pop	r11
     4f2:	af 90       	pop	r10
     4f4:	9f 90       	pop	r9
     4f6:	8f 90       	pop	r8
     4f8:	08 95       	ret

000004fa <PWM_update_2>:
void PWM_update_2()//motor pwm update
{
	U1_PWM=pwmSin[U_step_2];
     4fa:	e0 91 98 03 	lds	r30, 0x0398	; 0x800398 <__data_end>
     4fe:	f0 91 99 03 	lds	r31, 0x0399	; 0x800399 <__data_end+0x1>
     502:	ea 5f       	subi	r30, 0xFA	; 250
     504:	fd 4f       	sbci	r31, 0xFD	; 253
     506:	80 81       	ld	r24, Z
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     50e:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	V1_PWM=pwmSin[V_step_2];
     512:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step_2>
     516:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step_2+0x1>
     51a:	ea 5f       	subi	r30, 0xFA	; 250
     51c:	fd 4f       	sbci	r31, 0xFD	; 253
     51e:	80 81       	ld	r24, Z
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     526:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
	W1_PWM=pwmSin[W_step_2];
     52a:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step_2>
     52e:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step_2+0x1>
     532:	ea 5f       	subi	r30, 0xFA	; 250
     534:	fd 4f       	sbci	r31, 0xFD	; 253
     536:	80 81       	ld	r24, Z
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     53e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
	U_step_2=U_step_2+incr_2;
     542:	60 91 bd 03 	lds	r22, 0x03BD	; 0x8003bd <incr_2>
     546:	70 91 be 03 	lds	r23, 0x03BE	; 0x8003be <incr_2+0x1>
     54a:	40 91 98 03 	lds	r20, 0x0398	; 0x800398 <__data_end>
     54e:	50 91 99 03 	lds	r21, 0x0399	; 0x800399 <__data_end+0x1>
     552:	46 0f       	add	r20, r22
     554:	57 1f       	adc	r21, r23
     556:	50 93 99 03 	sts	0x0399, r21	; 0x800399 <__data_end+0x1>
     55a:	40 93 98 03 	sts	0x0398, r20	; 0x800398 <__data_end>
	V_step_2=V_step_2+incr_2;
     55e:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step_2>
     562:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step_2+0x1>
     566:	26 0f       	add	r18, r22
     568:	37 1f       	adc	r19, r23
     56a:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     56e:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_2+incr_2;
     572:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step_2>
     576:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step_2+0x1>
     57a:	86 0f       	add	r24, r22
     57c:	97 1f       	adc	r25, r23
     57e:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     582:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	if(U_step_2 > SINE_TABLE_SZ)
     586:	49 36       	cpi	r20, 0x69	; 105
     588:	61 e0       	ldi	r22, 0x01	; 1
     58a:	56 07       	cpc	r21, r22
     58c:	2c f0       	brlt	.+10     	; 0x598 <PWM_update_2+0x9e>
	U_step_2 = 0;
     58e:	10 92 99 03 	sts	0x0399, r1	; 0x800399 <__data_end+0x1>
     592:	10 92 98 03 	sts	0x0398, r1	; 0x800398 <__data_end>
     596:	08 c0       	rjmp	.+16     	; 0x5a8 <PWM_update_2+0xae>
	if(U_step_2 < 0)
     598:	55 23       	and	r21, r21
     59a:	34 f4       	brge	.+12     	; 0x5a8 <PWM_update_2+0xae>
	U_step_2 = SINE_TABLE_SZ;
     59c:	48 e6       	ldi	r20, 0x68	; 104
     59e:	51 e0       	ldi	r21, 0x01	; 1
     5a0:	50 93 99 03 	sts	0x0399, r21	; 0x800399 <__data_end+0x1>
     5a4:	40 93 98 03 	sts	0x0398, r20	; 0x800398 <__data_end>
	
	if(V_step_2 > SINE_TABLE_SZ)
     5a8:	29 36       	cpi	r18, 0x69	; 105
     5aa:	41 e0       	ldi	r20, 0x01	; 1
     5ac:	34 07       	cpc	r19, r20
     5ae:	2c f0       	brlt	.+10     	; 0x5ba <PWM_update_2+0xc0>
	V_step_2 = 0;
     5b0:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step_2+0x1>
     5b4:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step_2>
     5b8:	08 c0       	rjmp	.+16     	; 0x5ca <PWM_update_2+0xd0>
	if(V_step_2 < 0)
     5ba:	33 23       	and	r19, r19
     5bc:	34 f4       	brge	.+12     	; 0x5ca <PWM_update_2+0xd0>
	V_step = SINE_TABLE_SZ;
     5be:	28 e6       	ldi	r18, 0x68	; 104
     5c0:	31 e0       	ldi	r19, 0x01	; 1
     5c2:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     5c6:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step_2 > SINE_TABLE_SZ)
     5ca:	89 36       	cpi	r24, 0x69	; 105
     5cc:	61 e0       	ldi	r22, 0x01	; 1
     5ce:	96 07       	cpc	r25, r22
     5d0:	2c f0       	brlt	.+10     	; 0x5dc <PWM_update_2+0xe2>
	W_step_2 = 0;
     5d2:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step_2+0x1>
     5d6:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step_2>
     5da:	08 c0       	rjmp	.+16     	; 0x5ec <PWM_update_2+0xf2>
	if(W_step_2< 0)
     5dc:	99 23       	and	r25, r25
     5de:	34 f4       	brge	.+12     	; 0x5ec <PWM_update_2+0xf2>
	W_step_2 = SINE_TABLE_SZ;
     5e0:	88 e6       	ldi	r24, 0x68	; 104
     5e2:	91 e0       	ldi	r25, 0x01	; 1
     5e4:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     5e8:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	//_delay_us(100);
	INT_MOTOR_SPEED2=pwm_delay_2;
     5ec:	80 91 b5 03 	lds	r24, 0x03B5	; 0x8003b5 <pwm_delay_2>
     5f0:	90 91 b6 03 	lds	r25, 0x03B6	; 0x8003b6 <pwm_delay_2+0x1>
     5f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     5f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     5fc:	08 95       	ret

000005fe <init_motor_gpio>:
	//printf("oopooo");
}
void init_motor_gpio()
{
	//setting pin mode to output for motor 1 
	sbi(DDRH,3);//digital 6 OC4A
     5fe:	e1 e0       	ldi	r30, 0x01	; 1
     600:	f1 e0       	ldi	r31, 0x01	; 1
     602:	80 81       	ld	r24, Z
     604:	88 60       	ori	r24, 0x08	; 8
     606:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     608:	80 81       	ld	r24, Z
     60a:	80 61       	ori	r24, 0x10	; 16
     60c:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     60e:	80 81       	ld	r24, Z
     610:	80 62       	ori	r24, 0x20	; 32
     612:	80 83       	st	Z, r24
	
	sbi(DDRA,0);//digital 22 EN1
     614:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     616:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     618:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     61a:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     61c:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     61e:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     620:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     622:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     624:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     626:	47 9a       	sbi	0x08, 7	; 8
	
	
	//setting pin mode to output for motor 2
	sbi(DDRE,4);//digital 2 OC3B
     628:	6c 9a       	sbi	0x0d, 4	; 13
	sbi(DDRE,5);//digital 3 OC3C
     62a:	6d 9a       	sbi	0x0d, 5	; 13
	sbi(DDRE,3);//digital 5 OC3A
     62c:	6b 9a       	sbi	0x0d, 3	; 13
	
	sbi(DDRC,5);//digital 32 EN1
     62e:	3d 9a       	sbi	0x07, 5	; 7
	sbi(DDRC,3);//digital 34 EN2
     630:	3b 9a       	sbi	0x07, 3	; 7
	sbi(DDRC,1);//digital 36 EN3
     632:	39 9a       	sbi	0x07, 1	; 7
	sbi(DDRD,7);//digital 38 sleep
     634:	57 9a       	sbi	0x0a, 7	; 10
	sbi(DDRG,1);//digital 40 nf, see drv8313
     636:	99 9a       	sbi	0x13, 1	; 19
	
	sbi(PORTC,5);//sleep HIGH
     638:	45 9a       	sbi	0x08, 5	; 8
	sbi(PORTC,3);//nf HIGH
     63a:	43 9a       	sbi	0x08, 3	; 8
	sbi(PORTC,1);//EN1 HIGH
     63c:	41 9a       	sbi	0x08, 1	; 8
	sbi(PORTD,7);//EN2 HIGH
     63e:	5f 9a       	sbi	0x0b, 7	; 11
	sbi(PORTG,1);//EN3 HIGH
     640:	a1 9a       	sbi	0x14, 1	; 20
     642:	08 95       	ret

00000644 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     644:	4f 92       	push	r4
     646:	5f 92       	push	r5
     648:	6f 92       	push	r6
     64a:	7f 92       	push	r7
     64c:	8f 92       	push	r8
     64e:	9f 92       	push	r9
     650:	af 92       	push	r10
     652:	bf 92       	push	r11
     654:	cf 92       	push	r12
     656:	df 92       	push	r13
     658:	ef 92       	push	r14
     65a:	ff 92       	push	r15
     65c:	0f 93       	push	r16
     65e:	1f 93       	push	r17
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	cd b7       	in	r28, 0x3d	; 61
     666:	de b7       	in	r29, 0x3e	; 62
     668:	6c 97       	sbiw	r28, 0x1c	; 28
     66a:	0f b6       	in	r0, 0x3f	; 63
     66c:	f8 94       	cli
     66e:	de bf       	out	0x3e, r29	; 62
     670:	0f be       	out	0x3f, r0	; 63
     672:	cd bf       	out	0x3d, r28	; 61
     674:	69 8b       	std	Y+17, r22	; 0x11
     676:	7a 8b       	std	Y+18, r23	; 0x12
     678:	8b 8b       	std	Y+19, r24	; 0x13
     67a:	9c 8b       	std	Y+20, r25	; 0x14
     67c:	ca 01       	movw	r24, r20
     67e:	b9 01       	movw	r22, r18
     680:	e9 82       	std	Y+1, r14	; 0x01
     682:	fa 82       	std	Y+2, r15	; 0x02
     684:	0b 83       	std	Y+3, r16	; 0x03
     686:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     688:	c0 90 cd 03 	lds	r12, 0x03CD	; 0x8003cd <bias>
     68c:	d0 90 ce 03 	lds	r13, 0x03CE	; 0x8003ce <bias+0x1>
     690:	e0 90 cf 03 	lds	r14, 0x03CF	; 0x8003cf <bias+0x2>
     694:	f0 90 d0 03 	lds	r15, 0x03D0	; 0x8003d0 <bias+0x3>
     698:	a7 01       	movw	r20, r14
     69a:	96 01       	movw	r18, r12
     69c:	0e 94 15 0c 	call	0x182a	; 0x182a <__subsf3>
     6a0:	60 93 c5 03 	sts	0x03C5, r22	; 0x8003c5 <rate>
     6a4:	70 93 c6 03 	sts	0x03C6, r23	; 0x8003c6 <rate+0x1>
     6a8:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <rate+0x2>
     6ac:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <rate+0x3>
	angle += dt * rate;
     6b0:	29 81       	ldd	r18, Y+1	; 0x01
     6b2:	3a 81       	ldd	r19, Y+2	; 0x02
     6b4:	4b 81       	ldd	r20, Y+3	; 0x03
     6b6:	5c 81       	ldd	r21, Y+4	; 0x04
     6b8:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     6bc:	20 91 f1 03 	lds	r18, 0x03F1	; 0x8003f1 <angle>
     6c0:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <angle+0x1>
     6c4:	40 91 f3 03 	lds	r20, 0x03F3	; 0x8003f3 <angle+0x2>
     6c8:	50 91 f4 03 	lds	r21, 0x03F4	; 0x8003f4 <angle+0x3>
     6cc:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3>
     6d0:	6d 8b       	std	Y+21, r22	; 0x15
     6d2:	7e 8b       	std	Y+22, r23	; 0x16
     6d4:	8f 8b       	std	Y+23, r24	; 0x17
     6d6:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     6d8:	80 90 09 04 	lds	r8, 0x0409	; 0x800409 <P+0xc>
     6dc:	90 90 0a 04 	lds	r9, 0x040A	; 0x80040a <P+0xd>
     6e0:	a0 90 0b 04 	lds	r10, 0x040B	; 0x80040b <P+0xe>
     6e4:	b0 90 0c 04 	lds	r11, 0x040C	; 0x80040c <P+0xf>
     6e8:	a5 01       	movw	r20, r10
     6ea:	94 01       	movw	r18, r8
     6ec:	69 81       	ldd	r22, Y+1	; 0x01
     6ee:	7a 81       	ldd	r23, Y+2	; 0x02
     6f0:	8b 81       	ldd	r24, Y+3	; 0x03
     6f2:	9c 81       	ldd	r25, Y+4	; 0x04
     6f4:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     6f8:	6d 83       	std	Y+5, r22	; 0x05
     6fa:	7e 83       	std	Y+6, r23	; 0x06
     6fc:	8f 83       	std	Y+7, r24	; 0x07
     6fe:	98 87       	std	Y+8, r25	; 0x08
     700:	40 90 01 04 	lds	r4, 0x0401	; 0x800401 <P+0x4>
     704:	50 90 02 04 	lds	r5, 0x0402	; 0x800402 <P+0x5>
     708:	60 90 03 04 	lds	r6, 0x0403	; 0x800403 <P+0x6>
     70c:	70 90 04 04 	lds	r7, 0x0404	; 0x800404 <P+0x7>
     710:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <P+0x8>
     714:	90 91 06 04 	lds	r25, 0x0406	; 0x800406 <P+0x9>
     718:	a0 91 07 04 	lds	r26, 0x0407	; 0x800407 <P+0xa>
     71c:	b0 91 08 04 	lds	r27, 0x0408	; 0x800408 <P+0xb>
     720:	8d 87       	std	Y+13, r24	; 0x0d
     722:	9e 87       	std	Y+14, r25	; 0x0e
     724:	af 87       	std	Y+15, r26	; 0x0f
     726:	b8 8b       	std	Y+16, r27	; 0x10
     728:	a3 01       	movw	r20, r6
     72a:	92 01       	movw	r18, r4
     72c:	6d 81       	ldd	r22, Y+5	; 0x05
     72e:	7e 81       	ldd	r23, Y+6	; 0x06
     730:	8f 81       	ldd	r24, Y+7	; 0x07
     732:	98 85       	ldd	r25, Y+8	; 0x08
     734:	0e 94 15 0c 	call	0x182a	; 0x182a <__subsf3>
     738:	2d 85       	ldd	r18, Y+13	; 0x0d
     73a:	3e 85       	ldd	r19, Y+14	; 0x0e
     73c:	4f 85       	ldd	r20, Y+15	; 0x0f
     73e:	58 89       	ldd	r21, Y+16	; 0x10
     740:	0e 94 15 0c 	call	0x182a	; 0x182a <__subsf3>
     744:	20 91 c9 03 	lds	r18, 0x03C9	; 0x8003c9 <Q_angle>
     748:	30 91 ca 03 	lds	r19, 0x03CA	; 0x8003ca <Q_angle+0x1>
     74c:	40 91 cb 03 	lds	r20, 0x03CB	; 0x8003cb <Q_angle+0x2>
     750:	50 91 cc 03 	lds	r21, 0x03CC	; 0x8003cc <Q_angle+0x3>
     754:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3>
     758:	29 81       	ldd	r18, Y+1	; 0x01
     75a:	3a 81       	ldd	r19, Y+2	; 0x02
     75c:	4b 81       	ldd	r20, Y+3	; 0x03
     75e:	5c 81       	ldd	r21, Y+4	; 0x04
     760:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     764:	ad ef       	ldi	r26, 0xFD	; 253
     766:	b3 e0       	ldi	r27, 0x03	; 3
     768:	2d 91       	ld	r18, X+
     76a:	3d 91       	ld	r19, X+
     76c:	4d 91       	ld	r20, X+
     76e:	5c 91       	ld	r21, X
     770:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3>
     774:	69 87       	std	Y+9, r22	; 0x09
     776:	7a 87       	std	Y+10, r23	; 0x0a
     778:	8b 87       	std	Y+11, r24	; 0x0b
     77a:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     77c:	2d 81       	ldd	r18, Y+5	; 0x05
     77e:	3e 81       	ldd	r19, Y+6	; 0x06
     780:	4f 81       	ldd	r20, Y+7	; 0x07
     782:	58 85       	ldd	r21, Y+8	; 0x08
     784:	c3 01       	movw	r24, r6
     786:	b2 01       	movw	r22, r4
     788:	0e 94 15 0c 	call	0x182a	; 0x182a <__subsf3>
     78c:	2b 01       	movw	r4, r22
     78e:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     790:	2d 81       	ldd	r18, Y+5	; 0x05
     792:	3e 81       	ldd	r19, Y+6	; 0x06
     794:	4f 81       	ldd	r20, Y+7	; 0x07
     796:	58 85       	ldd	r21, Y+8	; 0x08
     798:	6d 85       	ldd	r22, Y+13	; 0x0d
     79a:	7e 85       	ldd	r23, Y+14	; 0x0e
     79c:	8f 85       	ldd	r24, Y+15	; 0x0f
     79e:	98 89       	ldd	r25, Y+16	; 0x10
     7a0:	0e 94 15 0c 	call	0x182a	; 0x182a <__subsf3>
     7a4:	6d 87       	std	Y+13, r22	; 0x0d
     7a6:	7e 87       	std	Y+14, r23	; 0x0e
     7a8:	8f 87       	std	Y+15, r24	; 0x0f
     7aa:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     7ac:	20 91 c1 03 	lds	r18, 0x03C1	; 0x8003c1 <Q_bias>
     7b0:	30 91 c2 03 	lds	r19, 0x03C2	; 0x8003c2 <Q_bias+0x1>
     7b4:	40 91 c3 03 	lds	r20, 0x03C3	; 0x8003c3 <Q_bias+0x2>
     7b8:	50 91 c4 03 	lds	r21, 0x03C4	; 0x8003c4 <Q_bias+0x3>
     7bc:	69 81       	ldd	r22, Y+1	; 0x01
     7be:	7a 81       	ldd	r23, Y+2	; 0x02
     7c0:	8b 81       	ldd	r24, Y+3	; 0x03
     7c2:	9c 81       	ldd	r25, Y+4	; 0x04
     7c4:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     7c8:	a5 01       	movw	r20, r10
     7ca:	94 01       	movw	r18, r8
     7cc:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3>
     7d0:	69 8f       	std	Y+25, r22	; 0x19
     7d2:	7a 8f       	std	Y+26, r23	; 0x1a
     7d4:	8b 8f       	std	Y+27, r24	; 0x1b
     7d6:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     7d8:	20 91 e9 03 	lds	r18, 0x03E9	; 0x8003e9 <R_measure>
     7dc:	30 91 ea 03 	lds	r19, 0x03EA	; 0x8003ea <R_measure+0x1>
     7e0:	40 91 eb 03 	lds	r20, 0x03EB	; 0x8003eb <R_measure+0x2>
     7e4:	50 91 ec 03 	lds	r21, 0x03EC	; 0x8003ec <R_measure+0x3>
     7e8:	69 85       	ldd	r22, Y+9	; 0x09
     7ea:	7a 85       	ldd	r23, Y+10	; 0x0a
     7ec:	8b 85       	ldd	r24, Y+11	; 0x0b
     7ee:	9c 85       	ldd	r25, Y+12	; 0x0c
     7f0:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3>
     7f4:	4b 01       	movw	r8, r22
     7f6:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     7f8:	9b 01       	movw	r18, r22
     7fa:	ac 01       	movw	r20, r24
     7fc:	69 85       	ldd	r22, Y+9	; 0x09
     7fe:	7a 85       	ldd	r23, Y+10	; 0x0a
     800:	8b 85       	ldd	r24, Y+11	; 0x0b
     802:	9c 85       	ldd	r25, Y+12	; 0x0c
     804:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__divsf3>
     808:	69 83       	std	Y+1, r22	; 0x01
     80a:	7a 83       	std	Y+2, r23	; 0x02
     80c:	8b 83       	std	Y+3, r24	; 0x03
     80e:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     810:	a5 01       	movw	r20, r10
     812:	94 01       	movw	r18, r8
     814:	6d 85       	ldd	r22, Y+13	; 0x0d
     816:	7e 85       	ldd	r23, Y+14	; 0x0e
     818:	8f 85       	ldd	r24, Y+15	; 0x0f
     81a:	98 89       	ldd	r25, Y+16	; 0x10
     81c:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__divsf3>
     820:	6d 83       	std	Y+5, r22	; 0x05
     822:	7e 83       	std	Y+6, r23	; 0x06
     824:	8f 83       	std	Y+7, r24	; 0x07
     826:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     828:	2d 89       	ldd	r18, Y+21	; 0x15
     82a:	3e 89       	ldd	r19, Y+22	; 0x16
     82c:	4f 89       	ldd	r20, Y+23	; 0x17
     82e:	58 8d       	ldd	r21, Y+24	; 0x18
     830:	69 89       	ldd	r22, Y+17	; 0x11
     832:	7a 89       	ldd	r23, Y+18	; 0x12
     834:	8b 89       	ldd	r24, Y+19	; 0x13
     836:	9c 89       	ldd	r25, Y+20	; 0x14
     838:	f8 d7       	rcall	.+4080   	; 0x182a <__subsf3>
     83a:	69 8b       	std	Y+17, r22	; 0x11
     83c:	7a 8b       	std	Y+18, r23	; 0x12
     83e:	8b 8b       	std	Y+19, r24	; 0x13
     840:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     842:	9b 01       	movw	r18, r22
     844:	ac 01       	movw	r20, r24
     846:	69 81       	ldd	r22, Y+1	; 0x01
     848:	7a 81       	ldd	r23, Y+2	; 0x02
     84a:	8b 81       	ldd	r24, Y+3	; 0x03
     84c:	9c 81       	ldd	r25, Y+4	; 0x04
     84e:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     852:	2d 89       	ldd	r18, Y+21	; 0x15
     854:	3e 89       	ldd	r19, Y+22	; 0x16
     856:	4f 89       	ldd	r20, Y+23	; 0x17
     858:	58 8d       	ldd	r21, Y+24	; 0x18
     85a:	e8 d7       	rcall	.+4048   	; 0x182c <__addsf3>
     85c:	4b 01       	movw	r8, r22
     85e:	5c 01       	movw	r10, r24
     860:	60 93 f1 03 	sts	0x03F1, r22	; 0x8003f1 <angle>
     864:	70 93 f2 03 	sts	0x03F2, r23	; 0x8003f2 <angle+0x1>
     868:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <angle+0x2>
     86c:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <angle+0x3>
	bias += K[1] * y;
     870:	29 89       	ldd	r18, Y+17	; 0x11
     872:	3a 89       	ldd	r19, Y+18	; 0x12
     874:	4b 89       	ldd	r20, Y+19	; 0x13
     876:	5c 89       	ldd	r21, Y+20	; 0x14
     878:	6d 81       	ldd	r22, Y+5	; 0x05
     87a:	7e 81       	ldd	r23, Y+6	; 0x06
     87c:	8f 81       	ldd	r24, Y+7	; 0x07
     87e:	98 85       	ldd	r25, Y+8	; 0x08
     880:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     884:	a7 01       	movw	r20, r14
     886:	96 01       	movw	r18, r12
     888:	d1 d7       	rcall	.+4002   	; 0x182c <__addsf3>
     88a:	60 93 cd 03 	sts	0x03CD, r22	; 0x8003cd <bias>
     88e:	70 93 ce 03 	sts	0x03CE, r23	; 0x8003ce <bias+0x1>
     892:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <bias+0x2>
     896:	90 93 d0 03 	sts	0x03D0, r25	; 0x8003d0 <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     89a:	29 81       	ldd	r18, Y+1	; 0x01
     89c:	3a 81       	ldd	r19, Y+2	; 0x02
     89e:	4b 81       	ldd	r20, Y+3	; 0x03
     8a0:	5c 81       	ldd	r21, Y+4	; 0x04
     8a2:	69 85       	ldd	r22, Y+9	; 0x09
     8a4:	7a 85       	ldd	r23, Y+10	; 0x0a
     8a6:	8b 85       	ldd	r24, Y+11	; 0x0b
     8a8:	9c 85       	ldd	r25, Y+12	; 0x0c
     8aa:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     8ae:	9b 01       	movw	r18, r22
     8b0:	ac 01       	movw	r20, r24
     8b2:	69 85       	ldd	r22, Y+9	; 0x09
     8b4:	7a 85       	ldd	r23, Y+10	; 0x0a
     8b6:	8b 85       	ldd	r24, Y+11	; 0x0b
     8b8:	9c 85       	ldd	r25, Y+12	; 0x0c
     8ba:	b7 d7       	rcall	.+3950   	; 0x182a <__subsf3>
     8bc:	ed ef       	ldi	r30, 0xFD	; 253
     8be:	f3 e0       	ldi	r31, 0x03	; 3
     8c0:	60 83       	st	Z, r22
     8c2:	71 83       	std	Z+1, r23	; 0x01
     8c4:	82 83       	std	Z+2, r24	; 0x02
     8c6:	93 83       	std	Z+3, r25	; 0x03
	P[0][1] -= K[0] * P01_temp;
     8c8:	29 81       	ldd	r18, Y+1	; 0x01
     8ca:	3a 81       	ldd	r19, Y+2	; 0x02
     8cc:	4b 81       	ldd	r20, Y+3	; 0x03
     8ce:	5c 81       	ldd	r21, Y+4	; 0x04
     8d0:	c3 01       	movw	r24, r6
     8d2:	b2 01       	movw	r22, r4
     8d4:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     8d8:	9b 01       	movw	r18, r22
     8da:	ac 01       	movw	r20, r24
     8dc:	c3 01       	movw	r24, r6
     8de:	b2 01       	movw	r22, r4
     8e0:	a4 d7       	rcall	.+3912   	; 0x182a <__subsf3>
     8e2:	60 93 01 04 	sts	0x0401, r22	; 0x800401 <P+0x4>
     8e6:	70 93 02 04 	sts	0x0402, r23	; 0x800402 <P+0x5>
     8ea:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <P+0x6>
     8ee:	90 93 04 04 	sts	0x0404, r25	; 0x800404 <P+0x7>
	P[1][0] -= K[1] * P00_temp;
     8f2:	2d 81       	ldd	r18, Y+5	; 0x05
     8f4:	3e 81       	ldd	r19, Y+6	; 0x06
     8f6:	4f 81       	ldd	r20, Y+7	; 0x07
     8f8:	58 85       	ldd	r21, Y+8	; 0x08
     8fa:	69 85       	ldd	r22, Y+9	; 0x09
     8fc:	7a 85       	ldd	r23, Y+10	; 0x0a
     8fe:	8b 85       	ldd	r24, Y+11	; 0x0b
     900:	9c 85       	ldd	r25, Y+12	; 0x0c
     902:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	6d 85       	ldd	r22, Y+13	; 0x0d
     90c:	7e 85       	ldd	r23, Y+14	; 0x0e
     90e:	8f 85       	ldd	r24, Y+15	; 0x0f
     910:	98 89       	ldd	r25, Y+16	; 0x10
     912:	8b d7       	rcall	.+3862   	; 0x182a <__subsf3>
     914:	60 93 05 04 	sts	0x0405, r22	; 0x800405 <P+0x8>
     918:	70 93 06 04 	sts	0x0406, r23	; 0x800406 <P+0x9>
     91c:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <P+0xa>
     920:	90 93 08 04 	sts	0x0408, r25	; 0x800408 <P+0xb>
	P[1][1] -= K[1] * P01_temp;
     924:	2d 81       	ldd	r18, Y+5	; 0x05
     926:	3e 81       	ldd	r19, Y+6	; 0x06
     928:	4f 81       	ldd	r20, Y+7	; 0x07
     92a:	58 85       	ldd	r21, Y+8	; 0x08
     92c:	c3 01       	movw	r24, r6
     92e:	b2 01       	movw	r22, r4
     930:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     934:	9b 01       	movw	r18, r22
     936:	ac 01       	movw	r20, r24
     938:	69 8d       	ldd	r22, Y+25	; 0x19
     93a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     93c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     93e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     940:	74 d7       	rcall	.+3816   	; 0x182a <__subsf3>
     942:	60 93 09 04 	sts	0x0409, r22	; 0x800409 <P+0xc>
     946:	70 93 0a 04 	sts	0x040A, r23	; 0x80040a <P+0xd>
     94a:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <P+0xe>
     94e:	90 93 0c 04 	sts	0x040C, r25	; 0x80040c <P+0xf>

	return angle;
};
     952:	c5 01       	movw	r24, r10
     954:	b4 01       	movw	r22, r8
     956:	6c 96       	adiw	r28, 0x1c	; 28
     958:	0f b6       	in	r0, 0x3f	; 63
     95a:	f8 94       	cli
     95c:	de bf       	out	0x3e, r29	; 62
     95e:	0f be       	out	0x3f, r0	; 63
     960:	cd bf       	out	0x3d, r28	; 61
     962:	df 91       	pop	r29
     964:	cf 91       	pop	r28
     966:	1f 91       	pop	r17
     968:	0f 91       	pop	r16
     96a:	ff 90       	pop	r15
     96c:	ef 90       	pop	r14
     96e:	df 90       	pop	r13
     970:	cf 90       	pop	r12
     972:	bf 90       	pop	r11
     974:	af 90       	pop	r10
     976:	9f 90       	pop	r9
     978:	8f 90       	pop	r8
     97a:	7f 90       	pop	r7
     97c:	6f 90       	pop	r6
     97e:	5f 90       	pop	r5
     980:	4f 90       	pop	r4
     982:	08 95       	ret

00000984 <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     984:	8f e6       	ldi	r24, 0x6F	; 111
     986:	92 e1       	ldi	r25, 0x12	; 18
     988:	a3 e8       	ldi	r26, 0x83	; 131
     98a:	ba e3       	ldi	r27, 0x3A	; 58
     98c:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <Q_angle>
     990:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <Q_angle+0x1>
     994:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <Q_angle+0x2>
     998:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <Q_angle+0x3>
	Q_bias = 0.003f;
     99c:	86 ea       	ldi	r24, 0xA6	; 166
     99e:	9b e9       	ldi	r25, 0x9B	; 155
     9a0:	a4 e4       	ldi	r26, 0x44	; 68
     9a2:	bb e3       	ldi	r27, 0x3B	; 59
     9a4:	80 93 c1 03 	sts	0x03C1, r24	; 0x8003c1 <Q_bias>
     9a8:	90 93 c2 03 	sts	0x03C2, r25	; 0x8003c2 <Q_bias+0x1>
     9ac:	a0 93 c3 03 	sts	0x03C3, r26	; 0x8003c3 <Q_bias+0x2>
     9b0:	b0 93 c4 03 	sts	0x03C4, r27	; 0x8003c4 <Q_bias+0x3>
	R_measure = 0.03f;
     9b4:	8f e8       	ldi	r24, 0x8F	; 143
     9b6:	92 ec       	ldi	r25, 0xC2	; 194
     9b8:	a5 ef       	ldi	r26, 0xF5	; 245
     9ba:	bc e3       	ldi	r27, 0x3C	; 60
     9bc:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <R_measure>
     9c0:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <R_measure+0x1>
     9c4:	a0 93 eb 03 	sts	0x03EB, r26	; 0x8003eb <R_measure+0x2>
     9c8:	b0 93 ec 03 	sts	0x03EC, r27	; 0x8003ec <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     9cc:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <angle>
     9d0:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <angle+0x1>
     9d4:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <angle+0x2>
     9d8:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <angle+0x3>
	bias = 0.0f; // Reset bias
     9dc:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <bias>
     9e0:	10 92 ce 03 	sts	0x03CE, r1	; 0x8003ce <bias+0x1>
     9e4:	10 92 cf 03 	sts	0x03CF, r1	; 0x8003cf <bias+0x2>
     9e8:	10 92 d0 03 	sts	0x03D0, r1	; 0x8003d0 <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     9ec:	ed ef       	ldi	r30, 0xFD	; 253
     9ee:	f3 e0       	ldi	r31, 0x03	; 3
     9f0:	10 82       	st	Z, r1
     9f2:	11 82       	std	Z+1, r1	; 0x01
     9f4:	12 82       	std	Z+2, r1	; 0x02
     9f6:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     9f8:	14 82       	std	Z+4, r1	; 0x04
     9fa:	15 82       	std	Z+5, r1	; 0x05
     9fc:	16 82       	std	Z+6, r1	; 0x06
     9fe:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     a00:	10 86       	std	Z+8, r1	; 0x08
     a02:	11 86       	std	Z+9, r1	; 0x09
     a04:	12 86       	std	Z+10, r1	; 0x0a
     a06:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     a08:	14 86       	std	Z+12, r1	; 0x0c
     a0a:	15 86       	std	Z+13, r1	; 0x0d
     a0c:	16 86       	std	Z+14, r1	; 0x0e
     a0e:	17 86       	std	Z+15, r1	; 0x0f
     a10:	08 95       	ret

00000a12 <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     a12:	4f 92       	push	r4
     a14:	5f 92       	push	r5
     a16:	6f 92       	push	r6
     a18:	7f 92       	push	r7
     a1a:	8f 92       	push	r8
     a1c:	9f 92       	push	r9
     a1e:	af 92       	push	r10
     a20:	bf 92       	push	r11
     a22:	cf 92       	push	r12
     a24:	df 92       	push	r13
     a26:	ef 92       	push	r14
     a28:	ff 92       	push	r15
     a2a:	0f 93       	push	r16
     a2c:	1f 93       	push	r17
     a2e:	cf 93       	push	r28
     a30:	df 93       	push	r29
     a32:	cd b7       	in	r28, 0x3d	; 61
     a34:	de b7       	in	r29, 0x3e	; 62
     a36:	6c 97       	sbiw	r28, 0x1c	; 28
     a38:	0f b6       	in	r0, 0x3f	; 63
     a3a:	f8 94       	cli
     a3c:	de bf       	out	0x3e, r29	; 62
     a3e:	0f be       	out	0x3f, r0	; 63
     a40:	cd bf       	out	0x3d, r28	; 61
     a42:	69 8b       	std	Y+17, r22	; 0x11
     a44:	7a 8b       	std	Y+18, r23	; 0x12
     a46:	8b 8b       	std	Y+19, r24	; 0x13
     a48:	9c 8b       	std	Y+20, r25	; 0x14
     a4a:	ca 01       	movw	r24, r20
     a4c:	b9 01       	movw	r22, r18
     a4e:	e9 82       	std	Y+1, r14	; 0x01
     a50:	fa 82       	std	Y+2, r15	; 0x02
     a52:	0b 83       	std	Y+3, r16	; 0x03
     a54:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     a56:	c0 90 ed 03 	lds	r12, 0x03ED	; 0x8003ed <bias_1>
     a5a:	d0 90 ee 03 	lds	r13, 0x03EE	; 0x8003ee <bias_1+0x1>
     a5e:	e0 90 ef 03 	lds	r14, 0x03EF	; 0x8003ef <bias_1+0x2>
     a62:	f0 90 f0 03 	lds	r15, 0x03F0	; 0x8003f0 <bias_1+0x3>
     a66:	a7 01       	movw	r20, r14
     a68:	96 01       	movw	r18, r12
     a6a:	df d6       	rcall	.+3518   	; 0x182a <__subsf3>
     a6c:	60 93 e5 03 	sts	0x03E5, r22	; 0x8003e5 <rate_1>
     a70:	70 93 e6 03 	sts	0x03E6, r23	; 0x8003e6 <rate_1+0x1>
     a74:	80 93 e7 03 	sts	0x03E7, r24	; 0x8003e7 <rate_1+0x2>
     a78:	90 93 e8 03 	sts	0x03E8, r25	; 0x8003e8 <rate_1+0x3>
	angle_1 += dt * rate_1;
     a7c:	29 81       	ldd	r18, Y+1	; 0x01
     a7e:	3a 81       	ldd	r19, Y+2	; 0x02
     a80:	4b 81       	ldd	r20, Y+3	; 0x03
     a82:	5c 81       	ldd	r21, Y+4	; 0x04
     a84:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     a88:	20 91 d1 03 	lds	r18, 0x03D1	; 0x8003d1 <angle_1>
     a8c:	30 91 d2 03 	lds	r19, 0x03D2	; 0x8003d2 <angle_1+0x1>
     a90:	40 91 d3 03 	lds	r20, 0x03D3	; 0x8003d3 <angle_1+0x2>
     a94:	50 91 d4 03 	lds	r21, 0x03D4	; 0x8003d4 <angle_1+0x3>
     a98:	c9 d6       	rcall	.+3474   	; 0x182c <__addsf3>
     a9a:	6d 8b       	std	Y+21, r22	; 0x15
     a9c:	7e 8b       	std	Y+22, r23	; 0x16
     a9e:	8f 8b       	std	Y+23, r24	; 0x17
     aa0:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     aa2:	80 90 e1 03 	lds	r8, 0x03E1	; 0x8003e1 <P_1+0xc>
     aa6:	90 90 e2 03 	lds	r9, 0x03E2	; 0x8003e2 <P_1+0xd>
     aaa:	a0 90 e3 03 	lds	r10, 0x03E3	; 0x8003e3 <P_1+0xe>
     aae:	b0 90 e4 03 	lds	r11, 0x03E4	; 0x8003e4 <P_1+0xf>
     ab2:	a5 01       	movw	r20, r10
     ab4:	94 01       	movw	r18, r8
     ab6:	69 81       	ldd	r22, Y+1	; 0x01
     ab8:	7a 81       	ldd	r23, Y+2	; 0x02
     aba:	8b 81       	ldd	r24, Y+3	; 0x03
     abc:	9c 81       	ldd	r25, Y+4	; 0x04
     abe:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     ac2:	6d 83       	std	Y+5, r22	; 0x05
     ac4:	7e 83       	std	Y+6, r23	; 0x06
     ac6:	8f 83       	std	Y+7, r24	; 0x07
     ac8:	98 87       	std	Y+8, r25	; 0x08
     aca:	40 90 d9 03 	lds	r4, 0x03D9	; 0x8003d9 <P_1+0x4>
     ace:	50 90 da 03 	lds	r5, 0x03DA	; 0x8003da <P_1+0x5>
     ad2:	60 90 db 03 	lds	r6, 0x03DB	; 0x8003db <P_1+0x6>
     ad6:	70 90 dc 03 	lds	r7, 0x03DC	; 0x8003dc <P_1+0x7>
     ada:	80 91 dd 03 	lds	r24, 0x03DD	; 0x8003dd <P_1+0x8>
     ade:	90 91 de 03 	lds	r25, 0x03DE	; 0x8003de <P_1+0x9>
     ae2:	a0 91 df 03 	lds	r26, 0x03DF	; 0x8003df <P_1+0xa>
     ae6:	b0 91 e0 03 	lds	r27, 0x03E0	; 0x8003e0 <P_1+0xb>
     aea:	8d 87       	std	Y+13, r24	; 0x0d
     aec:	9e 87       	std	Y+14, r25	; 0x0e
     aee:	af 87       	std	Y+15, r26	; 0x0f
     af0:	b8 8b       	std	Y+16, r27	; 0x10
     af2:	a3 01       	movw	r20, r6
     af4:	92 01       	movw	r18, r4
     af6:	6d 81       	ldd	r22, Y+5	; 0x05
     af8:	7e 81       	ldd	r23, Y+6	; 0x06
     afa:	8f 81       	ldd	r24, Y+7	; 0x07
     afc:	98 85       	ldd	r25, Y+8	; 0x08
     afe:	95 d6       	rcall	.+3370   	; 0x182a <__subsf3>
     b00:	2d 85       	ldd	r18, Y+13	; 0x0d
     b02:	3e 85       	ldd	r19, Y+14	; 0x0e
     b04:	4f 85       	ldd	r20, Y+15	; 0x0f
     b06:	58 89       	ldd	r21, Y+16	; 0x10
     b08:	90 d6       	rcall	.+3360   	; 0x182a <__subsf3>
     b0a:	20 91 0d 04 	lds	r18, 0x040D	; 0x80040d <Q_angle_1>
     b0e:	30 91 0e 04 	lds	r19, 0x040E	; 0x80040e <Q_angle_1+0x1>
     b12:	40 91 0f 04 	lds	r20, 0x040F	; 0x80040f <Q_angle_1+0x2>
     b16:	50 91 10 04 	lds	r21, 0x0410	; 0x800410 <Q_angle_1+0x3>
     b1a:	88 d6       	rcall	.+3344   	; 0x182c <__addsf3>
     b1c:	29 81       	ldd	r18, Y+1	; 0x01
     b1e:	3a 81       	ldd	r19, Y+2	; 0x02
     b20:	4b 81       	ldd	r20, Y+3	; 0x03
     b22:	5c 81       	ldd	r21, Y+4	; 0x04
     b24:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     b28:	a5 ed       	ldi	r26, 0xD5	; 213
     b2a:	b3 e0       	ldi	r27, 0x03	; 3
     b2c:	2d 91       	ld	r18, X+
     b2e:	3d 91       	ld	r19, X+
     b30:	4d 91       	ld	r20, X+
     b32:	5c 91       	ld	r21, X
     b34:	7b d6       	rcall	.+3318   	; 0x182c <__addsf3>
     b36:	69 87       	std	Y+9, r22	; 0x09
     b38:	7a 87       	std	Y+10, r23	; 0x0a
     b3a:	8b 87       	std	Y+11, r24	; 0x0b
	P_1[0][1] -= dt * P_1[1][1];
     b3c:	9c 87       	std	Y+12, r25	; 0x0c
     b3e:	2d 81       	ldd	r18, Y+5	; 0x05
     b40:	3e 81       	ldd	r19, Y+6	; 0x06
     b42:	4f 81       	ldd	r20, Y+7	; 0x07
     b44:	58 85       	ldd	r21, Y+8	; 0x08
     b46:	c3 01       	movw	r24, r6
     b48:	b2 01       	movw	r22, r4
     b4a:	6f d6       	rcall	.+3294   	; 0x182a <__subsf3>
     b4c:	2b 01       	movw	r4, r22
	P_1[1][0] -= dt * P_1[1][1];
     b4e:	3c 01       	movw	r6, r24
     b50:	2d 81       	ldd	r18, Y+5	; 0x05
     b52:	3e 81       	ldd	r19, Y+6	; 0x06
     b54:	4f 81       	ldd	r20, Y+7	; 0x07
     b56:	58 85       	ldd	r21, Y+8	; 0x08
     b58:	6d 85       	ldd	r22, Y+13	; 0x0d
     b5a:	7e 85       	ldd	r23, Y+14	; 0x0e
     b5c:	8f 85       	ldd	r24, Y+15	; 0x0f
     b5e:	98 89       	ldd	r25, Y+16	; 0x10
     b60:	64 d6       	rcall	.+3272   	; 0x182a <__subsf3>
     b62:	6d 87       	std	Y+13, r22	; 0x0d
     b64:	7e 87       	std	Y+14, r23	; 0x0e
     b66:	8f 87       	std	Y+15, r24	; 0x0f
	P_1[1][1] += Q_bias_1 * dt;
     b68:	98 8b       	std	Y+16, r25	; 0x10
     b6a:	20 91 f9 03 	lds	r18, 0x03F9	; 0x8003f9 <Q_bias_1>
     b6e:	30 91 fa 03 	lds	r19, 0x03FA	; 0x8003fa <Q_bias_1+0x1>
     b72:	40 91 fb 03 	lds	r20, 0x03FB	; 0x8003fb <Q_bias_1+0x2>
     b76:	50 91 fc 03 	lds	r21, 0x03FC	; 0x8003fc <Q_bias_1+0x3>
     b7a:	69 81       	ldd	r22, Y+1	; 0x01
     b7c:	7a 81       	ldd	r23, Y+2	; 0x02
     b7e:	8b 81       	ldd	r24, Y+3	; 0x03
     b80:	9c 81       	ldd	r25, Y+4	; 0x04
     b82:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     b86:	a5 01       	movw	r20, r10
     b88:	94 01       	movw	r18, r8
     b8a:	50 d6       	rcall	.+3232   	; 0x182c <__addsf3>
     b8c:	69 8f       	std	Y+25, r22	; 0x19
     b8e:	7a 8f       	std	Y+26, r23	; 0x1a
     b90:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     b92:	9c 8f       	std	Y+28, r25	; 0x1c
     b94:	20 91 f5 03 	lds	r18, 0x03F5	; 0x8003f5 <R_measure_1>
     b98:	30 91 f6 03 	lds	r19, 0x03F6	; 0x8003f6 <R_measure_1+0x1>
     b9c:	40 91 f7 03 	lds	r20, 0x03F7	; 0x8003f7 <R_measure_1+0x2>
     ba0:	50 91 f8 03 	lds	r21, 0x03F8	; 0x8003f8 <R_measure_1+0x3>
     ba4:	69 85       	ldd	r22, Y+9	; 0x09
     ba6:	7a 85       	ldd	r23, Y+10	; 0x0a
     ba8:	8b 85       	ldd	r24, Y+11	; 0x0b
     baa:	9c 85       	ldd	r25, Y+12	; 0x0c
     bac:	3f d6       	rcall	.+3198   	; 0x182c <__addsf3>
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     bae:	4b 01       	movw	r8, r22
     bb0:	5c 01       	movw	r10, r24
     bb2:	9b 01       	movw	r18, r22
     bb4:	ac 01       	movw	r20, r24
     bb6:	69 85       	ldd	r22, Y+9	; 0x09
     bb8:	7a 85       	ldd	r23, Y+10	; 0x0a
     bba:	8b 85       	ldd	r24, Y+11	; 0x0b
     bbc:	9c 85       	ldd	r25, Y+12	; 0x0c
     bbe:	00 d7       	rcall	.+3584   	; 0x19c0 <__divsf3>
     bc0:	69 83       	std	Y+1, r22	; 0x01
     bc2:	7a 83       	std	Y+2, r23	; 0x02
	K_1[1] = P_1[1][0] / S_1;
     bc4:	8b 83       	std	Y+3, r24	; 0x03
     bc6:	9c 83       	std	Y+4, r25	; 0x04
     bc8:	a5 01       	movw	r20, r10
     bca:	94 01       	movw	r18, r8
     bcc:	6d 85       	ldd	r22, Y+13	; 0x0d
     bce:	7e 85       	ldd	r23, Y+14	; 0x0e
     bd0:	8f 85       	ldd	r24, Y+15	; 0x0f
     bd2:	98 89       	ldd	r25, Y+16	; 0x10
     bd4:	f5 d6       	rcall	.+3562   	; 0x19c0 <__divsf3>
     bd6:	6d 83       	std	Y+5, r22	; 0x05
     bd8:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     bda:	8f 83       	std	Y+7, r24	; 0x07
     bdc:	98 87       	std	Y+8, r25	; 0x08
     bde:	2d 89       	ldd	r18, Y+21	; 0x15
     be0:	3e 89       	ldd	r19, Y+22	; 0x16
     be2:	4f 89       	ldd	r20, Y+23	; 0x17
     be4:	58 8d       	ldd	r21, Y+24	; 0x18
     be6:	69 89       	ldd	r22, Y+17	; 0x11
     be8:	7a 89       	ldd	r23, Y+18	; 0x12
     bea:	8b 89       	ldd	r24, Y+19	; 0x13
     bec:	9c 89       	ldd	r25, Y+20	; 0x14
     bee:	1d d6       	rcall	.+3130   	; 0x182a <__subsf3>
     bf0:	69 8b       	std	Y+17, r22	; 0x11
     bf2:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     bf4:	8b 8b       	std	Y+19, r24	; 0x13
     bf6:	9c 8b       	std	Y+20, r25	; 0x14
     bf8:	9b 01       	movw	r18, r22
     bfa:	ac 01       	movw	r20, r24
     bfc:	69 81       	ldd	r22, Y+1	; 0x01
     bfe:	7a 81       	ldd	r23, Y+2	; 0x02
     c00:	8b 81       	ldd	r24, Y+3	; 0x03
     c02:	9c 81       	ldd	r25, Y+4	; 0x04
     c04:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     c08:	2d 89       	ldd	r18, Y+21	; 0x15
     c0a:	3e 89       	ldd	r19, Y+22	; 0x16
     c0c:	4f 89       	ldd	r20, Y+23	; 0x17
     c0e:	58 8d       	ldd	r21, Y+24	; 0x18
     c10:	0d d6       	rcall	.+3098   	; 0x182c <__addsf3>
     c12:	4b 01       	movw	r8, r22
     c14:	5c 01       	movw	r10, r24
     c16:	60 93 d1 03 	sts	0x03D1, r22	; 0x8003d1 <angle_1>
     c1a:	70 93 d2 03 	sts	0x03D2, r23	; 0x8003d2 <angle_1+0x1>
     c1e:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <angle_1+0x2>
	bias_1 += K_1[1] * y_1;
     c22:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <angle_1+0x3>
     c26:	29 89       	ldd	r18, Y+17	; 0x11
     c28:	3a 89       	ldd	r19, Y+18	; 0x12
     c2a:	4b 89       	ldd	r20, Y+19	; 0x13
     c2c:	5c 89       	ldd	r21, Y+20	; 0x14
     c2e:	6d 81       	ldd	r22, Y+5	; 0x05
     c30:	7e 81       	ldd	r23, Y+6	; 0x06
     c32:	8f 81       	ldd	r24, Y+7	; 0x07
     c34:	98 85       	ldd	r25, Y+8	; 0x08
     c36:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     c3a:	a7 01       	movw	r20, r14
     c3c:	96 01       	movw	r18, r12
     c3e:	f6 d5       	rcall	.+3052   	; 0x182c <__addsf3>
     c40:	60 93 ed 03 	sts	0x03ED, r22	; 0x8003ed <bias_1>
     c44:	70 93 ee 03 	sts	0x03EE, r23	; 0x8003ee <bias_1+0x1>
     c48:	80 93 ef 03 	sts	0x03EF, r24	; 0x8003ef <bias_1+0x2>
     c4c:	90 93 f0 03 	sts	0x03F0, r25	; 0x8003f0 <bias_1+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     c50:	29 81       	ldd	r18, Y+1	; 0x01
     c52:	3a 81       	ldd	r19, Y+2	; 0x02
     c54:	4b 81       	ldd	r20, Y+3	; 0x03
     c56:	5c 81       	ldd	r21, Y+4	; 0x04
     c58:	69 85       	ldd	r22, Y+9	; 0x09
     c5a:	7a 85       	ldd	r23, Y+10	; 0x0a
     c5c:	8b 85       	ldd	r24, Y+11	; 0x0b
     c5e:	9c 85       	ldd	r25, Y+12	; 0x0c
     c60:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     c64:	9b 01       	movw	r18, r22
     c66:	ac 01       	movw	r20, r24
     c68:	69 85       	ldd	r22, Y+9	; 0x09
     c6a:	7a 85       	ldd	r23, Y+10	; 0x0a
     c6c:	8b 85       	ldd	r24, Y+11	; 0x0b
     c6e:	9c 85       	ldd	r25, Y+12	; 0x0c
     c70:	dc d5       	rcall	.+3000   	; 0x182a <__subsf3>
     c72:	e5 ed       	ldi	r30, 0xD5	; 213
     c74:	f3 e0       	ldi	r31, 0x03	; 3
     c76:	60 83       	st	Z, r22
     c78:	71 83       	std	Z+1, r23	; 0x01
	P_1[0][1] -= K_1[0] * P01_temp_1;
     c7a:	82 83       	std	Z+2, r24	; 0x02
     c7c:	93 83       	std	Z+3, r25	; 0x03
     c7e:	29 81       	ldd	r18, Y+1	; 0x01
     c80:	3a 81       	ldd	r19, Y+2	; 0x02
     c82:	4b 81       	ldd	r20, Y+3	; 0x03
     c84:	5c 81       	ldd	r21, Y+4	; 0x04
     c86:	c3 01       	movw	r24, r6
     c88:	b2 01       	movw	r22, r4
     c8a:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__mulsf3>
     c8e:	9b 01       	movw	r18, r22
     c90:	ac 01       	movw	r20, r24
     c92:	c3 01       	movw	r24, r6
     c94:	b2 01       	movw	r22, r4
     c96:	c9 d5       	rcall	.+2962   	; 0x182a <__subsf3>
     c98:	60 93 d9 03 	sts	0x03D9, r22	; 0x8003d9 <P_1+0x4>
     c9c:	70 93 da 03 	sts	0x03DA, r23	; 0x8003da <P_1+0x5>
     ca0:	80 93 db 03 	sts	0x03DB, r24	; 0x8003db <P_1+0x6>
	P_1[1][0] -= K_1[1] * P00_temp_1;
     ca4:	90 93 dc 03 	sts	0x03DC, r25	; 0x8003dc <P_1+0x7>
     ca8:	2d 81       	ldd	r18, Y+5	; 0x05
     caa:	3e 81       	ldd	r19, Y+6	; 0x06
     cac:	4f 81       	ldd	r20, Y+7	; 0x07
     cae:	58 85       	ldd	r21, Y+8	; 0x08
     cb0:	69 85       	ldd	r22, Y+9	; 0x09
     cb2:	7a 85       	ldd	r23, Y+10	; 0x0a
     cb4:	8b 85       	ldd	r24, Y+11	; 0x0b
     cb6:	9c 85       	ldd	r25, Y+12	; 0x0c
     cb8:	fe d7       	rcall	.+4092   	; 0x1cb6 <__mulsf3>
     cba:	9b 01       	movw	r18, r22
     cbc:	ac 01       	movw	r20, r24
     cbe:	6d 85       	ldd	r22, Y+13	; 0x0d
     cc0:	7e 85       	ldd	r23, Y+14	; 0x0e
     cc2:	8f 85       	ldd	r24, Y+15	; 0x0f
     cc4:	98 89       	ldd	r25, Y+16	; 0x10
     cc6:	b1 d5       	rcall	.+2914   	; 0x182a <__subsf3>
     cc8:	60 93 dd 03 	sts	0x03DD, r22	; 0x8003dd <P_1+0x8>
     ccc:	70 93 de 03 	sts	0x03DE, r23	; 0x8003de <P_1+0x9>
     cd0:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <P_1+0xa>
	P_1[1][1] -= K_1[1] * P01_temp_1;
     cd4:	90 93 e0 03 	sts	0x03E0, r25	; 0x8003e0 <P_1+0xb>
     cd8:	2d 81       	ldd	r18, Y+5	; 0x05
     cda:	3e 81       	ldd	r19, Y+6	; 0x06
     cdc:	4f 81       	ldd	r20, Y+7	; 0x07
     cde:	58 85       	ldd	r21, Y+8	; 0x08
     ce0:	c3 01       	movw	r24, r6
     ce2:	b2 01       	movw	r22, r4
     ce4:	e8 d7       	rcall	.+4048   	; 0x1cb6 <__mulsf3>
     ce6:	9b 01       	movw	r18, r22
     ce8:	ac 01       	movw	r20, r24
     cea:	69 8d       	ldd	r22, Y+25	; 0x19
     cec:	7a 8d       	ldd	r23, Y+26	; 0x1a
     cee:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cf0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     cf2:	9b d5       	rcall	.+2870   	; 0x182a <__subsf3>
     cf4:	60 93 e1 03 	sts	0x03E1, r22	; 0x8003e1 <P_1+0xc>
     cf8:	70 93 e2 03 	sts	0x03E2, r23	; 0x8003e2 <P_1+0xd>
     cfc:	80 93 e3 03 	sts	0x03E3, r24	; 0x8003e3 <P_1+0xe>
     d00:	90 93 e4 03 	sts	0x03E4, r25	; 0x8003e4 <P_1+0xf>

	return angle_1;
};
     d04:	c5 01       	movw	r24, r10
     d06:	b4 01       	movw	r22, r8
     d08:	6c 96       	adiw	r28, 0x1c	; 28
     d0a:	0f b6       	in	r0, 0x3f	; 63
     d0c:	f8 94       	cli
     d0e:	de bf       	out	0x3e, r29	; 62
     d10:	0f be       	out	0x3f, r0	; 63
     d12:	cd bf       	out	0x3d, r28	; 61
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	1f 91       	pop	r17
     d1a:	0f 91       	pop	r16
     d1c:	ff 90       	pop	r15
     d1e:	ef 90       	pop	r14
     d20:	df 90       	pop	r13
     d22:	cf 90       	pop	r12
     d24:	bf 90       	pop	r11
     d26:	af 90       	pop	r10
     d28:	9f 90       	pop	r9
     d2a:	8f 90       	pop	r8
     d2c:	7f 90       	pop	r7
     d2e:	6f 90       	pop	r6
     d30:	5f 90       	pop	r5
     d32:	4f 90       	pop	r4
     d34:	08 95       	ret

00000d36 <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.001f;
     d36:	8f e6       	ldi	r24, 0x6F	; 111
     d38:	92 e1       	ldi	r25, 0x12	; 18
     d3a:	a3 e8       	ldi	r26, 0x83	; 131
     d3c:	ba e3       	ldi	r27, 0x3A	; 58
     d3e:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <Q_angle_1>
     d42:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <Q_angle_1+0x1>
     d46:	a0 93 0f 04 	sts	0x040F, r26	; 0x80040f <Q_angle_1+0x2>
     d4a:	b0 93 10 04 	sts	0x0410, r27	; 0x800410 <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     d4e:	86 ea       	ldi	r24, 0xA6	; 166
     d50:	9b e9       	ldi	r25, 0x9B	; 155
     d52:	a4 e4       	ldi	r26, 0x44	; 68
     d54:	bb e3       	ldi	r27, 0x3B	; 59
     d56:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <Q_bias_1>
     d5a:	90 93 fa 03 	sts	0x03FA, r25	; 0x8003fa <Q_bias_1+0x1>
     d5e:	a0 93 fb 03 	sts	0x03FB, r26	; 0x8003fb <Q_bias_1+0x2>
     d62:	b0 93 fc 03 	sts	0x03FC, r27	; 0x8003fc <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     d66:	8f e8       	ldi	r24, 0x8F	; 143
     d68:	92 ec       	ldi	r25, 0xC2	; 194
     d6a:	a5 ef       	ldi	r26, 0xF5	; 245
     d6c:	bc e3       	ldi	r27, 0x3C	; 60
     d6e:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <R_measure_1>
     d72:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <R_measure_1+0x1>
     d76:	a0 93 f7 03 	sts	0x03F7, r26	; 0x8003f7 <R_measure_1+0x2>
     d7a:	b0 93 f8 03 	sts	0x03F8, r27	; 0x8003f8 <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     d7e:	10 92 d1 03 	sts	0x03D1, r1	; 0x8003d1 <angle_1>
     d82:	10 92 d2 03 	sts	0x03D2, r1	; 0x8003d2 <angle_1+0x1>
     d86:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <angle_1+0x2>
     d8a:	10 92 d4 03 	sts	0x03D4, r1	; 0x8003d4 <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     d8e:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <bias_1>
     d92:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <bias_1+0x1>
     d96:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <bias_1+0x2>
     d9a:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     d9e:	e5 ed       	ldi	r30, 0xD5	; 213
     da0:	f3 e0       	ldi	r31, 0x03	; 3
     da2:	10 82       	st	Z, r1
     da4:	11 82       	std	Z+1, r1	; 0x01
     da6:	12 82       	std	Z+2, r1	; 0x02
     da8:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     daa:	14 82       	std	Z+4, r1	; 0x04
     dac:	15 82       	std	Z+5, r1	; 0x05
     dae:	16 82       	std	Z+6, r1	; 0x06
     db0:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     db2:	10 86       	std	Z+8, r1	; 0x08
     db4:	11 86       	std	Z+9, r1	; 0x09
     db6:	12 86       	std	Z+10, r1	; 0x0a
     db8:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     dba:	14 86       	std	Z+12, r1	; 0x0c
     dbc:	15 86       	std	Z+13, r1	; 0x0d
     dbe:	16 86       	std	Z+14, r1	; 0x0e
     dc0:	17 86       	std	Z+15, r1	; 0x0f
     dc2:	08 95       	ret

00000dc4 <main>:



/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     dc4:	cf 93       	push	r28
     dc6:	df 93       	push	r29
     dc8:	cd b7       	in	r28, 0x3d	; 61
     dca:	de b7       	in	r29, 0x3e	; 62
     dcc:	6c 97       	sbiw	r28, 0x1c	; 28
     dce:	0f b6       	in	r0, 0x3f	; 63
     dd0:	f8 94       	cli
     dd2:	de bf       	out	0x3e, r29	; 62
     dd4:	0f be       	out	0x3f, r0	; 63
     dd6:	cd bf       	out	0x3d, r28	; 61
	//variableInit();
	U_step=U_step_predefine;
     dd8:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <U_step+0x1>
     ddc:	10 92 9a 03 	sts	0x039A, r1	; 0x80039a <U_step>
	V_step=V_step_predefine;
     de0:	28 e7       	ldi	r18, 0x78	; 120
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     de8:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step_predefine;
     dec:	80 ef       	ldi	r24, 0xF0	; 240
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     df4:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	U_step_2=U_step_predefine;
     df8:	10 92 99 03 	sts	0x0399, r1	; 0x800399 <__data_end+0x1>
     dfc:	10 92 98 03 	sts	0x0398, r1	; 0x800398 <__data_end>
	V_step_2=V_step_predefine;
     e00:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     e04:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_predefine;
     e08:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     e0c:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	incr=-1;
     e10:	8f ef       	ldi	r24, 0xFF	; 255
     e12:	9f ef       	ldi	r25, 0xFF	; 255
     e14:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <incr+0x1>
     e18:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <incr>
	incr_2=-1;
     e1c:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <incr_2+0x1>
     e20:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <incr_2>
	pwm_delay=25000;
     e24:	88 ea       	ldi	r24, 0xA8	; 168
     e26:	91 e6       	ldi	r25, 0x61	; 97
     e28:	90 93 b8 03 	sts	0x03B8, r25	; 0x8003b8 <pwm_delay+0x1>
     e2c:	80 93 b7 03 	sts	0x03B7, r24	; 0x8003b7 <pwm_delay>
	pwm_delay_2=32000;
     e30:	80 e0       	ldi	r24, 0x00	; 0
     e32:	9d e7       	ldi	r25, 0x7D	; 125
     e34:	90 93 b6 03 	sts	0x03B6, r25	; 0x8003b6 <pwm_delay_2+0x1>
     e38:	80 93 b5 03 	sts	0x03B5, r24	; 0x8003b5 <pwm_delay_2>
	cli();
	init_gpio();
     e3c:	f8 94       	cli
     e3e:	0b da       	rcall	.-3050   	; 0x256 <init_gpio>
     e40:	de db       	rcall	.-2116   	; 0x5fe <init_motor_gpio>
     e42:	cb d3       	rcall	.+1942   	; 0x15da <i2c_init>
     e44:	83 e0       	ldi	r24, 0x03	; 3
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	79 d4       	rcall	.+2290   	; 0x173c <USART_Init>
     e4a:	60 e0       	ldi	r22, 0x00	; 0
     e4c:	70 e0       	ldi	r23, 0x00	; 0
     e4e:	89 ea       	ldi	r24, 0xA9	; 169
     e50:	9b e0       	ldi	r25, 0x0B	; 11
     e52:	0e 94 b6 13 	call	0x276c	; 0x276c <fdevopen>
     e56:	90 93 ba 03 	sts	0x03BA, r25	; 0x8003ba <uart_str+0x1>
     e5a:	80 93 b9 03 	sts	0x03B9, r24	; 0x8003b9 <uart_str>
     e5e:	f0 d2       	rcall	.+1504   	; 0x1440 <setup_timer0>
     e60:	f6 d2       	rcall	.+1516   	; 0x144e <Enable_timer0_overflow_interrupt>
     e62:	ae d2       	rcall	.+1372   	; 0x13c0 <setup_timer4>
     e64:	c1 d2       	rcall	.+1410   	; 0x13e8 <setup_timer3>
     e66:	d4 d2       	rcall	.+1448   	; 0x1410 <setup_timer5>
     e68:	dc d2       	rcall	.+1464   	; 0x1422 <Enable_timer5_compare_interrupt>
     e6a:	e1 d2       	rcall	.+1474   	; 0x142e <setup_timer1>
     e6c:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <pwm_delay>
     e70:	90 91 b8 03 	lds	r25, 0x03B8	; 0x8003b8 <pwm_delay+0x1>
     e74:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     e78:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     e7c:	80 91 b5 03 	lds	r24, 0x03B5	; 0x8003b5 <pwm_delay_2>
     e80:	90 91 b6 03 	lds	r25, 0x03B6	; 0x8003b6 <pwm_delay_2+0x1>
     e84:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     e88:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     e8c:	e6 d2       	rcall	.+1484   	; 0x145a <micros>
     e8e:	1b 01       	movw	r2, r22
     e90:	2c 01       	movw	r4, r24
     e92:	67 e0       	ldi	r22, 0x07	; 7
     e94:	89 e1       	ldi	r24, 0x19	; 25
     e96:	43 d1       	rcall	.+646    	; 0x111e <mpu6050_writeByte>
     e98:	60 e0       	ldi	r22, 0x00	; 0
     e9a:	8a e1       	ldi	r24, 0x1A	; 26
     e9c:	40 d1       	rcall	.+640    	; 0x111e <mpu6050_writeByte>
     e9e:	68 e0       	ldi	r22, 0x08	; 8
     ea0:	8b e1       	ldi	r24, 0x1B	; 27
     ea2:	3d d1       	rcall	.+634    	; 0x111e <mpu6050_writeByte>
     ea4:	60 e1       	ldi	r22, 0x10	; 16
     ea6:	8c e1       	ldi	r24, 0x1C	; 28
     ea8:	3a d1       	rcall	.+628    	; 0x111e <mpu6050_writeByte>
     eaa:	61 e0       	ldi	r22, 0x01	; 1
     eac:	8b e6       	ldi	r24, 0x6B	; 107
     eae:	37 d1       	rcall	.+622    	; 0x111e <mpu6050_writeByte>
     eb0:	69 dd       	rcall	.-1326   	; 0x984 <Kalman_init>
     eb2:	41 df       	rcall	.-382    	; 0xd36 <Kalman_init_1>
     eb4:	2f ef       	ldi	r18, 0xFF	; 255
     eb6:	81 ee       	ldi	r24, 0xE1	; 225
     eb8:	94 e0       	ldi	r25, 0x04	; 4
     eba:	21 50       	subi	r18, 0x01	; 1
     ebc:	80 40       	sbci	r24, 0x00	; 0
     ebe:	90 40       	sbci	r25, 0x00	; 0
     ec0:	e1 f7       	brne	.-8      	; 0xeba <main+0xf6>
     ec2:	00 c0       	rjmp	.+0      	; 0xec4 <main+0x100>
     ec4:	00 00       	nop
     ec6:	10 92 f1 03 	sts	0x03F1, r1	; 0x8003f1 <angle>
     eca:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <angle+0x1>
     ece:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <angle+0x2>
     ed2:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <angle+0x3>
     ed6:	10 92 d1 03 	sts	0x03D1, r1	; 0x8003d1 <angle_1>
     eda:	10 92 d2 03 	sts	0x03D2, r1	; 0x8003d2 <angle_1+0x1>
     ede:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <angle_1+0x2>
     ee2:	10 92 d4 03 	sts	0x03D4, r1	; 0x8003d4 <angle_1+0x3>
     ee6:	78 94       	sei
     ee8:	ce 01       	movw	r24, r28
     eea:	05 96       	adiw	r24, 0x05	; 5
     eec:	7c 01       	movw	r14, r24
     eee:	8e 01       	movw	r16, r28
     ef0:	0d 5f       	subi	r16, 0xFD	; 253
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	9e 01       	movw	r18, r28
     ef6:	2f 5f       	subi	r18, 0xFF	; 255
     ef8:	3f 4f       	sbci	r19, 0xFF	; 255
     efa:	ae 01       	movw	r20, r28
     efc:	45 5f       	subi	r20, 0xF5	; 245
     efe:	5f 4f       	sbci	r21, 0xFF	; 255
     f00:	be 01       	movw	r22, r28
     f02:	67 5f       	subi	r22, 0xF7	; 247
     f04:	7f 4f       	sbci	r23, 0xFF	; 255
     f06:	02 96       	adiw	r24, 0x02	; 2
     f08:	60 d1       	rcall	.+704    	; 0x11ca <mpu6050_getRawData>
     f0a:	89 81       	ldd	r24, Y+1	; 0x01
     f0c:	9a 81       	ldd	r25, Y+2	; 0x02
     f0e:	84 59       	subi	r24, 0x94	; 148
     f10:	9f 4f       	sbci	r25, 0xFF	; 255
     f12:	9a 83       	std	Y+2, r25	; 0x02
     f14:	89 83       	std	Y+1, r24	; 0x01
     f16:	8b 81       	ldd	r24, Y+3	; 0x03
     f18:	9c 81       	ldd	r25, Y+4	; 0x04
     f1a:	80 52       	subi	r24, 0x20	; 32
     f1c:	9f 4f       	sbci	r25, 0xFF	; 255
     f1e:	9c 83       	std	Y+4, r25	; 0x04
     f20:	8b 83       	std	Y+3, r24	; 0x03
     f22:	8d 81       	ldd	r24, Y+5	; 0x05
     f24:	9e 81       	ldd	r25, Y+6	; 0x06
     f26:	8f 58       	subi	r24, 0x8F	; 143
     f28:	9d 4f       	sbci	r25, 0xFD	; 253
     f2a:	9e 83       	std	Y+6, r25	; 0x06
     f2c:	8d 83       	std	Y+5, r24	; 0x05
     f2e:	95 d2       	rcall	.+1322   	; 0x145a <micros>
     f30:	62 19       	sub	r22, r2
     f32:	73 09       	sbc	r23, r3
     f34:	84 09       	sbc	r24, r4
     f36:	95 09       	sbc	r25, r5
     f38:	dc d5       	rcall	.+3000   	; 0x1af2 <__floatunsisf>
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	34 e2       	ldi	r19, 0x24	; 36
     f3e:	44 e7       	ldi	r20, 0x74	; 116
     f40:	59 e4       	ldi	r21, 0x49	; 73
     f42:	3e d5       	rcall	.+2684   	; 0x19c0 <__divsf3>
     f44:	60 93 1d 04 	sts	0x041D, r22	; 0x80041d <dt>
     f48:	70 93 1e 04 	sts	0x041E, r23	; 0x80041e <dt+0x1>
     f4c:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <dt+0x2>
     f50:	90 93 20 04 	sts	0x0420, r25	; 0x800420 <dt+0x3>
     f54:	82 d2       	rcall	.+1284   	; 0x145a <micros>
     f56:	1b 01       	movw	r2, r22
     f58:	2c 01       	movw	r4, r24
     f5a:	69 81       	ldd	r22, Y+1	; 0x01
     f5c:	7a 81       	ldd	r23, Y+2	; 0x02
     f5e:	07 2e       	mov	r0, r23
     f60:	00 0c       	add	r0, r0
     f62:	88 0b       	sbc	r24, r24
     f64:	99 0b       	sbc	r25, r25
     f66:	c7 d5       	rcall	.+2958   	; 0x1af6 <__floatsisf>
     f68:	20 e0       	ldi	r18, 0x00	; 0
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	43 e8       	ldi	r20, 0x83	; 131
     f6e:	52 e4       	ldi	r21, 0x42	; 66
     f70:	27 d5       	rcall	.+2638   	; 0x19c0 <__divsf3>
     f72:	6d 87       	std	Y+13, r22	; 0x0d
     f74:	7e 87       	std	Y+14, r23	; 0x0e
     f76:	8f 87       	std	Y+15, r24	; 0x0f
     f78:	98 8b       	std	Y+16, r25	; 0x10
     f7a:	6b 81       	ldd	r22, Y+3	; 0x03
     f7c:	7c 81       	ldd	r23, Y+4	; 0x04
     f7e:	07 2e       	mov	r0, r23
     f80:	00 0c       	add	r0, r0
     f82:	88 0b       	sbc	r24, r24
     f84:	99 0b       	sbc	r25, r25
     f86:	b7 d5       	rcall	.+2926   	; 0x1af6 <__floatsisf>
     f88:	20 e0       	ldi	r18, 0x00	; 0
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	43 e8       	ldi	r20, 0x83	; 131
     f8e:	52 e4       	ldi	r21, 0x42	; 66
     f90:	17 d5       	rcall	.+2606   	; 0x19c0 <__divsf3>
     f92:	69 8b       	std	Y+17, r22	; 0x11
     f94:	7a 8b       	std	Y+18, r23	; 0x12
     f96:	8b 8b       	std	Y+19, r24	; 0x13
     f98:	9c 8b       	std	Y+20, r25	; 0x14
     f9a:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <loop_bool>
     f9e:	90 91 78 03 	lds	r25, 0x0378	; 0x800378 <loop_bool+0x1>
     fa2:	89 2b       	or	r24, r25
     fa4:	21 f0       	breq	.+8      	; 0xfae <main+0x1ea>
     fa6:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <loop_bool+0x1>
     faa:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <loop_bool>
     fae:	ab 84       	ldd	r10, Y+11	; 0x0b
     fb0:	bc 84       	ldd	r11, Y+12	; 0x0c
     fb2:	e9 84       	ldd	r14, Y+9	; 0x09
     fb4:	fa 84       	ldd	r15, Y+10	; 0x0a
     fb6:	b5 01       	movw	r22, r10
     fb8:	0b 2c       	mov	r0, r11
     fba:	00 0c       	add	r0, r0
     fbc:	88 0b       	sbc	r24, r24
     fbe:	99 0b       	sbc	r25, r25
     fc0:	9a d5       	rcall	.+2868   	; 0x1af6 <__floatsisf>
     fc2:	3b 01       	movw	r6, r22
     fc4:	4c 01       	movw	r8, r24
     fc6:	b7 01       	movw	r22, r14
     fc8:	0f 2c       	mov	r0, r15
     fca:	00 0c       	add	r0, r0
     fcc:	88 0b       	sbc	r24, r24
     fce:	99 0b       	sbc	r25, r25
     fd0:	92 d5       	rcall	.+2852   	; 0x1af6 <__floatsisf>
     fd2:	a4 01       	movw	r20, r8
     fd4:	93 01       	movw	r18, r6
     fd6:	9d d4       	rcall	.+2362   	; 0x1912 <atan2>
     fd8:	6d 8b       	std	Y+21, r22	; 0x15
     fda:	7e 8b       	std	Y+22, r23	; 0x16
     fdc:	8f 8b       	std	Y+23, r24	; 0x17
     fde:	98 8f       	std	Y+24, r25	; 0x18
     fe0:	c7 01       	movw	r24, r14
     fe2:	64 e6       	ldi	r22, 0x64	; 100
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	0e 94 a1 12 	call	0x2542	; 0x2542 <__divmodhi4>
     fea:	07 2e       	mov	r0, r23
     fec:	00 0c       	add	r0, r0
     fee:	88 0b       	sbc	r24, r24
     ff0:	99 0b       	sbc	r25, r25
     ff2:	81 d5       	rcall	.+2818   	; 0x1af6 <__floatsisf>
     ff4:	6b 01       	movw	r12, r22
     ff6:	7c 01       	movw	r14, r24
     ff8:	c5 01       	movw	r24, r10
     ffa:	64 e6       	ldi	r22, 0x64	; 100
     ffc:	70 e0       	ldi	r23, 0x00	; 0
     ffe:	0e 94 a1 12 	call	0x2542	; 0x2542 <__divmodhi4>
    1002:	07 2e       	mov	r0, r23
    1004:	00 0c       	add	r0, r0
    1006:	88 0b       	sbc	r24, r24
    1008:	99 0b       	sbc	r25, r25
    100a:	75 d5       	rcall	.+2794   	; 0x1af6 <__floatsisf>
    100c:	4b 01       	movw	r8, r22
    100e:	5c 01       	movw	r10, r24
    1010:	a7 01       	movw	r20, r14
    1012:	96 01       	movw	r18, r12
    1014:	c7 01       	movw	r24, r14
    1016:	b6 01       	movw	r22, r12
    1018:	4e d6       	rcall	.+3228   	; 0x1cb6 <__mulsf3>
    101a:	69 8f       	std	Y+25, r22	; 0x19
    101c:	7a 8f       	std	Y+26, r23	; 0x1a
    101e:	8b 8f       	std	Y+27, r24	; 0x1b
    1020:	9c 8f       	std	Y+28, r25	; 0x1c
    1022:	a7 01       	movw	r20, r14
    1024:	96 01       	movw	r18, r12
    1026:	c7 01       	movw	r24, r14
    1028:	b6 01       	movw	r22, r12
    102a:	45 d6       	rcall	.+3210   	; 0x1cb6 <__mulsf3>
    102c:	6b 01       	movw	r12, r22
    102e:	7c 01       	movw	r14, r24
    1030:	a5 01       	movw	r20, r10
    1032:	94 01       	movw	r18, r8
    1034:	c5 01       	movw	r24, r10
    1036:	b4 01       	movw	r22, r8
    1038:	3e d6       	rcall	.+3196   	; 0x1cb6 <__mulsf3>
    103a:	9b 01       	movw	r18, r22
    103c:	ac 01       	movw	r20, r24
    103e:	c7 01       	movw	r24, r14
    1040:	b6 01       	movw	r22, r12
    1042:	f4 d3       	rcall	.+2024   	; 0x182c <__addsf3>
    1044:	9f d6       	rcall	.+3390   	; 0x1d84 <sqrt>
    1046:	20 e0       	ldi	r18, 0x00	; 0
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	48 ec       	ldi	r20, 0xC8	; 200
    104c:	52 e4       	ldi	r21, 0x42	; 66
    104e:	33 d6       	rcall	.+3174   	; 0x1cb6 <__mulsf3>
    1050:	6b 01       	movw	r12, r22
    1052:	7c 01       	movw	r14, r24
    1054:	6f 81       	ldd	r22, Y+7	; 0x07
    1056:	78 85       	ldd	r23, Y+8	; 0x08
    1058:	07 2e       	mov	r0, r23
    105a:	00 0c       	add	r0, r0
    105c:	88 0b       	sbc	r24, r24
    105e:	99 0b       	sbc	r25, r25
    1060:	4a d5       	rcall	.+2708   	; 0x1af6 <__floatsisf>
    1062:	a7 01       	movw	r20, r14
    1064:	96 01       	movw	r18, r12
    1066:	55 d4       	rcall	.+2218   	; 0x1912 <atan2>
    1068:	4b 01       	movw	r8, r22
    106a:	5c 01       	movw	r10, r24
    106c:	c0 90 1d 04 	lds	r12, 0x041D	; 0x80041d <dt>
    1070:	d0 90 1e 04 	lds	r13, 0x041E	; 0x80041e <dt+0x1>
    1074:	e0 90 1f 04 	lds	r14, 0x041F	; 0x80041f <dt+0x2>
    1078:	f0 90 20 04 	lds	r15, 0x0420	; 0x800420 <dt+0x3>
    107c:	21 ee       	ldi	r18, 0xE1	; 225
    107e:	3e e2       	ldi	r19, 0x2E	; 46
    1080:	45 e6       	ldi	r20, 0x65	; 101
    1082:	52 e4       	ldi	r21, 0x42	; 66
    1084:	6d 89       	ldd	r22, Y+21	; 0x15
    1086:	7e 89       	ldd	r23, Y+22	; 0x16
    1088:	8f 89       	ldd	r24, Y+23	; 0x17
    108a:	98 8d       	ldd	r25, Y+24	; 0x18
    108c:	14 d6       	rcall	.+3112   	; 0x1cb6 <__mulsf3>
    108e:	87 01       	movw	r16, r14
    1090:	76 01       	movw	r14, r12
    1092:	2d 85       	ldd	r18, Y+13	; 0x0d
    1094:	3e 85       	ldd	r19, Y+14	; 0x0e
    1096:	4f 85       	ldd	r20, Y+15	; 0x0f
    1098:	58 89       	ldd	r21, Y+16	; 0x10
    109a:	d4 da       	rcall	.-2648   	; 0x644 <getAngle>
    109c:	60 93 21 04 	sts	0x0421, r22	; 0x800421 <kalman_angle_roll>
    10a0:	70 93 22 04 	sts	0x0422, r23	; 0x800422 <kalman_angle_roll+0x1>
    10a4:	80 93 23 04 	sts	0x0423, r24	; 0x800423 <kalman_angle_roll+0x2>
    10a8:	90 93 24 04 	sts	0x0424, r25	; 0x800424 <kalman_angle_roll+0x3>
    10ac:	c0 90 1d 04 	lds	r12, 0x041D	; 0x80041d <dt>
    10b0:	d0 90 1e 04 	lds	r13, 0x041E	; 0x80041e <dt+0x1>
    10b4:	e0 90 1f 04 	lds	r14, 0x041F	; 0x80041f <dt+0x2>
    10b8:	f0 90 20 04 	lds	r15, 0x0420	; 0x800420 <dt+0x3>
    10bc:	21 ee       	ldi	r18, 0xE1	; 225
    10be:	3e e2       	ldi	r19, 0x2E	; 46
    10c0:	45 e6       	ldi	r20, 0x65	; 101
    10c2:	52 e4       	ldi	r21, 0x42	; 66
    10c4:	c5 01       	movw	r24, r10
    10c6:	b4 01       	movw	r22, r8
    10c8:	f6 d5       	rcall	.+3052   	; 0x1cb6 <__mulsf3>
    10ca:	87 01       	movw	r16, r14
    10cc:	76 01       	movw	r14, r12
    10ce:	29 89       	ldd	r18, Y+17	; 0x11
    10d0:	3a 89       	ldd	r19, Y+18	; 0x12
    10d2:	4b 89       	ldd	r20, Y+19	; 0x13
    10d4:	5c 89       	ldd	r21, Y+20	; 0x14
    10d6:	9d dc       	rcall	.-1734   	; 0xa12 <getAngle_1>
    10d8:	60 93 15 04 	sts	0x0415, r22	; 0x800415 <kalman_angle_pitch>
    10dc:	70 93 16 04 	sts	0x0416, r23	; 0x800416 <kalman_angle_pitch+0x1>
    10e0:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <kalman_angle_pitch+0x2>
    10e4:	90 93 18 04 	sts	0x0418, r25	; 0x800418 <kalman_angle_pitch+0x3>
    10e8:	40 91 21 04 	lds	r20, 0x0421	; 0x800421 <kalman_angle_roll>
    10ec:	50 91 22 04 	lds	r21, 0x0422	; 0x800422 <kalman_angle_roll+0x1>
    10f0:	60 91 23 04 	lds	r22, 0x0423	; 0x800423 <kalman_angle_roll+0x2>
    10f4:	70 91 24 04 	lds	r23, 0x0424	; 0x800424 <kalman_angle_roll+0x3>
    10f8:	81 e8       	ldi	r24, 0x81	; 129
    10fa:	93 e0       	ldi	r25, 0x03	; 3
    10fc:	74 d3       	rcall	.+1768   	; 0x17e6 <printSD>
    10fe:	40 91 b1 03 	lds	r20, 0x03B1	; 0x8003b1 <PID_roll>
    1102:	50 91 b2 03 	lds	r21, 0x03B2	; 0x8003b2 <PID_roll+0x1>
    1106:	60 91 b3 03 	lds	r22, 0x03B3	; 0x8003b3 <PID_roll+0x2>
    110a:	70 91 b4 03 	lds	r23, 0x03B4	; 0x8003b4 <PID_roll+0x3>
    110e:	88 e8       	ldi	r24, 0x88	; 136
    1110:	93 e0       	ldi	r25, 0x03	; 3
    1112:	69 d3       	rcall	.+1746   	; 0x17e6 <printSD>
    1114:	8a e0       	ldi	r24, 0x0A	; 10
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	0e 94 4f 14 	call	0x289e	; 0x289e <putchar>
    111c:	e5 ce       	rjmp	.-566    	; 0xee8 <main+0x124>

0000111e <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
    111e:	cf 93       	push	r28
    1120:	df 93       	push	r29
    1122:	d8 2f       	mov	r29, r24
    1124:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
    1126:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
    1128:	5e d2       	rcall	.+1212   	; 0x15e6 <i2c_start>
    112a:	8d 2f       	mov	r24, r29
	i2c_stop();
    112c:	b2 d2       	rcall	.+1380   	; 0x1692 <i2c_write>
    112e:	8c 2f       	mov	r24, r28
}
    1130:	b0 d2       	rcall	.+1376   	; 0x1692 <i2c_write>
    1132:	9f d2       	rcall	.+1342   	; 0x1672 <i2c_stop>
    1134:	df 91       	pop	r29
    1136:	cf 91       	pop	r28
    1138:	08 95       	ret

0000113a <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
    113a:	af 92       	push	r10
    113c:	bf 92       	push	r11
    113e:	cf 92       	push	r12
    1140:	df 92       	push	r13
    1142:	ff 92       	push	r15
    1144:	0f 93       	push	r16
    1146:	1f 93       	push	r17
    1148:	cf 93       	push	r28
    114a:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
    114c:	66 23       	and	r22, r22
    114e:	89 f1       	breq	.+98     	; 0x11b2 <mpu6050_readBytes+0x78>
    1150:	c5 2f       	mov	r28, r21
    1152:	d4 2f       	mov	r29, r20
    1154:	f6 2e       	mov	r15, r22
    1156:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
    1158:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
    115a:	45 d2       	rcall	.+1162   	; 0x15e6 <i2c_start>
    115c:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    115e:	99 d2       	rcall	.+1330   	; 0x1692 <i2c_write>
    1160:	85 e3       	ldi	r24, 0x35	; 53
    1162:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    1164:	f1 f7       	brne	.-4      	; 0x1162 <mpu6050_readBytes+0x28>
    1166:	00 00       	nop
    1168:	81 ed       	ldi	r24, 0xD1	; 209
    116a:	3d d2       	rcall	.+1146   	; 0x15e6 <i2c_start>
    116c:	0d 2f       	mov	r16, r29
    116e:	1c 2f       	mov	r17, r28
    1170:	cc 24       	eor	r12, r12
    1172:	ca 94       	dec	r12
    1174:	cf 0c       	add	r12, r15
    1176:	d1 2c       	mov	r13, r1
    1178:	ef ef       	ldi	r30, 0xFF	; 255
    117a:	ce 1a       	sub	r12, r30
    117c:	de 0a       	sbc	r13, r30
    117e:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    1180:	d0 e0       	ldi	r29, 0x00	; 0
    1182:	af 2c       	mov	r10, r15
    1184:	b1 2c       	mov	r11, r1
    1186:	f1 e0       	ldi	r31, 0x01	; 1
    1188:	af 1a       	sub	r10, r31
    118a:	b1 08       	sbc	r11, r1
    118c:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
    118e:	bd 06       	cpc	r11, r29
    1190:	21 f4       	brne	.+8      	; 0x119a <mpu6050_readBytes+0x60>
    1192:	ba d2       	rcall	.+1396   	; 0x1708 <i2c_readNak>
    1194:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
    1196:	80 83       	st	Z, r24
    1198:	03 c0       	rjmp	.+6      	; 0x11a0 <mpu6050_readBytes+0x66>
    119a:	9c d2       	rcall	.+1336   	; 0x16d4 <i2c_readAck>
    119c:	f8 01       	movw	r30, r16
    119e:	80 83       	st	Z, r24
    11a0:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    11a2:	0f 5f       	subi	r16, 0xFF	; 255
    11a4:	1f 4f       	sbci	r17, 0xFF	; 255
    11a6:	cc 15       	cp	r28, r12
    11a8:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    11aa:	81 f7       	brne	.-32     	; 0x118c <mpu6050_readBytes+0x52>
    11ac:	cf 2d       	mov	r28, r15
    11ae:	61 d2       	rcall	.+1218   	; 0x1672 <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    11b0:	01 c0       	rjmp	.+2      	; 0x11b4 <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    11b2:	c0 e0       	ldi	r28, 0x00	; 0
    11b4:	8c 2f       	mov	r24, r28
    11b6:	df 91       	pop	r29
    11b8:	cf 91       	pop	r28
    11ba:	1f 91       	pop	r17
    11bc:	0f 91       	pop	r16
    11be:	ff 90       	pop	r15
    11c0:	df 90       	pop	r13
    11c2:	cf 90       	pop	r12
    11c4:	bf 90       	pop	r11
    11c6:	af 90       	pop	r10
    11c8:	08 95       	ret

000011ca <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    11ca:	6f 92       	push	r6
    11cc:	7f 92       	push	r7
    11ce:	8f 92       	push	r8
    11d0:	9f 92       	push	r9
    11d2:	af 92       	push	r10
    11d4:	bf 92       	push	r11
    11d6:	cf 92       	push	r12
    11d8:	df 92       	push	r13
    11da:	ef 92       	push	r14
    11dc:	ff 92       	push	r15
    11de:	0f 93       	push	r16
    11e0:	1f 93       	push	r17
    11e2:	cf 93       	push	r28
    11e4:	df 93       	push	r29
    11e6:	cd b7       	in	r28, 0x3d	; 61
    11e8:	de b7       	in	r29, 0x3e	; 62
    11ea:	2e 97       	sbiw	r28, 0x0e	; 14
    11ec:	0f b6       	in	r0, 0x3f	; 63
    11ee:	f8 94       	cli
    11f0:	de bf       	out	0x3e, r29	; 62
    11f2:	0f be       	out	0x3f, r0	; 63
    11f4:	cd bf       	out	0x3d, r28	; 61
    11f6:	4c 01       	movw	r8, r24
    11f8:	5b 01       	movw	r10, r22
    11fa:	6a 01       	movw	r12, r20
    11fc:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    11fe:	ae 01       	movw	r20, r28
    1200:	4f 5f       	subi	r20, 0xFF	; 255
    1202:	5f 4f       	sbci	r21, 0xFF	; 255
    1204:	6e e0       	ldi	r22, 0x0E	; 14
    1206:	8b e3       	ldi	r24, 0x3B	; 59
    1208:	98 df       	rcall	.-208    	; 0x113a <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    120a:	89 81       	ldd	r24, Y+1	; 0x01
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	98 2f       	mov	r25, r24
    1210:	88 27       	eor	r24, r24
    1212:	2a 81       	ldd	r18, Y+2	; 0x02
    1214:	82 2b       	or	r24, r18
    1216:	f4 01       	movw	r30, r8
    1218:	91 83       	std	Z+1, r25	; 0x01
    121a:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    121c:	8b 81       	ldd	r24, Y+3	; 0x03
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	98 2f       	mov	r25, r24
    1222:	88 27       	eor	r24, r24
    1224:	2c 81       	ldd	r18, Y+4	; 0x04
    1226:	82 2b       	or	r24, r18
    1228:	f5 01       	movw	r30, r10
    122a:	91 83       	std	Z+1, r25	; 0x01
    122c:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    122e:	8d 81       	ldd	r24, Y+5	; 0x05
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	98 2f       	mov	r25, r24
    1234:	88 27       	eor	r24, r24
    1236:	2e 81       	ldd	r18, Y+6	; 0x06
    1238:	82 2b       	or	r24, r18
    123a:	f6 01       	movw	r30, r12
    123c:	91 83       	std	Z+1, r25	; 0x01
    123e:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    1240:	89 85       	ldd	r24, Y+9	; 0x09
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	98 2f       	mov	r25, r24
    1246:	88 27       	eor	r24, r24
    1248:	2a 85       	ldd	r18, Y+10	; 0x0a
    124a:	82 2b       	or	r24, r18
    124c:	f3 01       	movw	r30, r6
    124e:	91 83       	std	Z+1, r25	; 0x01
    1250:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    1252:	8b 85       	ldd	r24, Y+11	; 0x0b
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	98 2f       	mov	r25, r24
    1258:	88 27       	eor	r24, r24
    125a:	2c 85       	ldd	r18, Y+12	; 0x0c
    125c:	82 2b       	or	r24, r18
    125e:	f8 01       	movw	r30, r16
    1260:	91 83       	std	Z+1, r25	; 0x01
    1262:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    1264:	8d 85       	ldd	r24, Y+13	; 0x0d
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	98 2f       	mov	r25, r24
    126a:	88 27       	eor	r24, r24
    126c:	2e 85       	ldd	r18, Y+14	; 0x0e
    126e:	82 2b       	or	r24, r18
    1270:	f7 01       	movw	r30, r14
    1272:	91 83       	std	Z+1, r25	; 0x01
    1274:	80 83       	st	Z, r24
    1276:	2e 96       	adiw	r28, 0x0e	; 14
    1278:	0f b6       	in	r0, 0x3f	; 63
    127a:	f8 94       	cli
    127c:	de bf       	out	0x3e, r29	; 62
    127e:	0f be       	out	0x3f, r0	; 63
    1280:	cd bf       	out	0x3d, r28	; 61
    1282:	df 91       	pop	r29
    1284:	cf 91       	pop	r28
    1286:	1f 91       	pop	r17
    1288:	0f 91       	pop	r16
    128a:	ff 90       	pop	r15
    128c:	ef 90       	pop	r14
    128e:	df 90       	pop	r13
    1290:	cf 90       	pop	r12
    1292:	bf 90       	pop	r11
    1294:	af 90       	pop	r10
    1296:	9f 90       	pop	r9
    1298:	8f 90       	pop	r8
    129a:	7f 90       	pop	r7
    129c:	6f 90       	pop	r6
    129e:	08 95       	ret

000012a0 <Compute_PID>:
 * Created: 9/24/2017 10:52:39 AM
 *  Author: rafja
 */ 
#include "PID.h"
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd)
{
    12a0:	2f 92       	push	r2
    12a2:	3f 92       	push	r3
    12a4:	4f 92       	push	r4
    12a6:	5f 92       	push	r5
    12a8:	6f 92       	push	r6
    12aa:	7f 92       	push	r7
    12ac:	8f 92       	push	r8
    12ae:	9f 92       	push	r9
    12b0:	af 92       	push	r10
    12b2:	bf 92       	push	r11
    12b4:	cf 92       	push	r12
    12b6:	df 92       	push	r13
    12b8:	ef 92       	push	r14
    12ba:	ff 92       	push	r15
    12bc:	0f 93       	push	r16
    12be:	1f 93       	push	r17
    12c0:	cf 93       	push	r28
    12c2:	df 93       	push	r29
    12c4:	00 d0       	rcall	.+0      	; 0x12c6 <Compute_PID+0x26>
    12c6:	1f 92       	push	r1
    12c8:	cd b7       	in	r28, 0x3d	; 61
    12ca:	de b7       	in	r29, 0x3e	; 62
	
	//printSD("prever_local = ", *previous_error);

	double error = angle-desired_angle;
    12cc:	17 01       	movw	r2, r14
    12ce:	ad d2       	rcall	.+1370   	; 0x182a <__subsf3>
    12d0:	69 83       	std	Y+1, r22	; 0x01
    12d2:	7a 83       	std	Y+2, r23	; 0x02
    12d4:	8b 83       	std	Y+3, r24	; 0x03
	double pid_p = kp*error;
    12d6:	9c 83       	std	Y+4, r25	; 0x04
    12d8:	2a 8d       	ldd	r18, Y+26	; 0x1a
    12da:	3b 8d       	ldd	r19, Y+27	; 0x1b
    12dc:	4c 8d       	ldd	r20, Y+28	; 0x1c
    12de:	5d 8d       	ldd	r21, Y+29	; 0x1d
    12e0:	ea d4       	rcall	.+2516   	; 0x1cb6 <__mulsf3>
    12e2:	2b 01       	movw	r4, r22
	if (abs(error)>0.1)
    12e4:	3c 01       	movw	r6, r24
    12e6:	69 81       	ldd	r22, Y+1	; 0x01
    12e8:	7a 81       	ldd	r23, Y+2	; 0x02
    12ea:	8b 81       	ldd	r24, Y+3	; 0x03
    12ec:	9c 81       	ldd	r25, Y+4	; 0x04
    12ee:	d0 d3       	rcall	.+1952   	; 0x1a90 <__fixsfsi>
    12f0:	9b 01       	movw	r18, r22
    12f2:	77 23       	and	r23, r23
    12f4:	24 f4       	brge	.+8      	; 0x12fe <Compute_PID+0x5e>
    12f6:	22 27       	eor	r18, r18
    12f8:	33 27       	eor	r19, r19
    12fa:	26 1b       	sub	r18, r22
    12fc:	37 0b       	sbc	r19, r23
    12fe:	b9 01       	movw	r22, r18
    1300:	33 0f       	add	r19, r19
    1302:	88 0b       	sbc	r24, r24
    1304:	99 0b       	sbc	r25, r25
    1306:	f7 d3       	rcall	.+2030   	; 0x1af6 <__floatsisf>
    1308:	2d ec       	ldi	r18, 0xCD	; 205
    130a:	3c ec       	ldi	r19, 0xCC	; 204
    130c:	4c ec       	ldi	r20, 0xCC	; 204
    130e:	5d e3       	ldi	r21, 0x3D	; 61
    1310:	c7 d4       	rcall	.+2446   	; 0x1ca0 <__gesf2>
    1312:	18 16       	cp	r1, r24
	{
		*pid_i=*pid_i+(ki*error);	
    1314:	b4 f4       	brge	.+44     	; 0x1342 <Compute_PID+0xa2>
    1316:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1318:	3f 8d       	ldd	r19, Y+31	; 0x1f
    131a:	48 a1       	ldd	r20, Y+32	; 0x20
    131c:	59 a1       	ldd	r21, Y+33	; 0x21
    131e:	69 81       	ldd	r22, Y+1	; 0x01
    1320:	7a 81       	ldd	r23, Y+2	; 0x02
    1322:	8b 81       	ldd	r24, Y+3	; 0x03
    1324:	9c 81       	ldd	r25, Y+4	; 0x04
    1326:	c7 d4       	rcall	.+2446   	; 0x1cb6 <__mulsf3>
    1328:	9b 01       	movw	r18, r22
    132a:	ac 01       	movw	r20, r24
    132c:	d8 01       	movw	r26, r16
    132e:	6d 91       	ld	r22, X+
    1330:	7d 91       	ld	r23, X+
    1332:	8d 91       	ld	r24, X+
    1334:	9c 91       	ld	r25, X
    1336:	7a d2       	rcall	.+1268   	; 0x182c <__addsf3>
    1338:	f8 01       	movw	r30, r16
    133a:	60 83       	st	Z, r22
    133c:	71 83       	std	Z+1, r23	; 0x01
    133e:	82 83       	std	Z+2, r24	; 0x02
	}
	double pid_d = kd*((error - *previous_error)/dt);
    1340:	93 83       	std	Z+3, r25	; 0x03
    1342:	d1 01       	movw	r26, r2
    1344:	2d 91       	ld	r18, X+
    1346:	3d 91       	ld	r19, X+
    1348:	4d 91       	ld	r20, X+
    134a:	5c 91       	ld	r21, X
    134c:	69 81       	ldd	r22, Y+1	; 0x01
    134e:	7a 81       	ldd	r23, Y+2	; 0x02
    1350:	8b 81       	ldd	r24, Y+3	; 0x03
    1352:	9c 81       	ldd	r25, Y+4	; 0x04
    1354:	6a d2       	rcall	.+1236   	; 0x182a <__subsf3>
    1356:	a6 01       	movw	r20, r12
    1358:	95 01       	movw	r18, r10
    135a:	32 d3       	rcall	.+1636   	; 0x19c0 <__divsf3>
    135c:	2a a1       	ldd	r18, Y+34	; 0x22
    135e:	3b a1       	ldd	r19, Y+35	; 0x23
    1360:	4c a1       	ldd	r20, Y+36	; 0x24
    1362:	5d a1       	ldd	r21, Y+37	; 0x25
    1364:	a8 d4       	rcall	.+2384   	; 0x1cb6 <__mulsf3>
    1366:	4b 01       	movw	r8, r22
	*previous_error=error;
    1368:	5c 01       	movw	r10, r24
    136a:	89 81       	ldd	r24, Y+1	; 0x01
    136c:	9a 81       	ldd	r25, Y+2	; 0x02
    136e:	ab 81       	ldd	r26, Y+3	; 0x03
    1370:	bc 81       	ldd	r27, Y+4	; 0x04
    1372:	f1 01       	movw	r30, r2
    1374:	80 83       	st	Z, r24
	
	return pid_p + (*pid_i) + pid_d;
    1376:	91 83       	std	Z+1, r25	; 0x01
    1378:	a2 83       	std	Z+2, r26	; 0x02
    137a:	b3 83       	std	Z+3, r27	; 0x03
    137c:	d8 01       	movw	r26, r16
    137e:	2d 91       	ld	r18, X+
    1380:	3d 91       	ld	r19, X+
    1382:	4d 91       	ld	r20, X+
    1384:	5c 91       	ld	r21, X
    1386:	c3 01       	movw	r24, r6
    1388:	b2 01       	movw	r22, r4
    138a:	50 d2       	rcall	.+1184   	; 0x182c <__addsf3>
    138c:	a5 01       	movw	r20, r10
}
    138e:	94 01       	movw	r18, r8
    1390:	4d d2       	rcall	.+1178   	; 0x182c <__addsf3>
    1392:	0f 90       	pop	r0
    1394:	0f 90       	pop	r0
    1396:	0f 90       	pop	r0
    1398:	0f 90       	pop	r0
    139a:	df 91       	pop	r29
    139c:	cf 91       	pop	r28
    139e:	1f 91       	pop	r17
    13a0:	0f 91       	pop	r16
    13a2:	ff 90       	pop	r15
    13a4:	ef 90       	pop	r14
    13a6:	df 90       	pop	r13
    13a8:	cf 90       	pop	r12
    13aa:	bf 90       	pop	r11
    13ac:	af 90       	pop	r10
    13ae:	9f 90       	pop	r9
    13b0:	8f 90       	pop	r8
    13b2:	7f 90       	pop	r7
    13b4:	6f 90       	pop	r6
    13b6:	5f 90       	pop	r5
    13b8:	4f 90       	pop	r4
    13ba:	3f 90       	pop	r3
    13bc:	2f 90       	pop	r2
    13be:	08 95       	ret

000013c0 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    13c0:	e1 ea       	ldi	r30, 0xA1	; 161
    13c2:	f0 e0       	ldi	r31, 0x00	; 0
    13c4:	80 81       	ld	r24, Z
    13c6:	81 60       	ori	r24, 0x01	; 1
    13c8:	80 83       	st	Z, r24
    13ca:	e0 ea       	ldi	r30, 0xA0	; 160
    13cc:	f0 e0       	ldi	r31, 0x00	; 0
    13ce:	80 81       	ld	r24, Z
    13d0:	81 60       	ori	r24, 0x01	; 1
    13d2:	80 83       	st	Z, r24
    13d4:	80 81       	ld	r24, Z
    13d6:	80 68       	ori	r24, 0x80	; 128
    13d8:	80 83       	st	Z, r24
    13da:	80 81       	ld	r24, Z
    13dc:	80 62       	ori	r24, 0x20	; 32
    13de:	80 83       	st	Z, r24
    13e0:	80 81       	ld	r24, Z
    13e2:	88 60       	ori	r24, 0x08	; 8
    13e4:	80 83       	st	Z, r24
    13e6:	08 95       	ret

000013e8 <setup_timer3>:
    13e8:	e1 e9       	ldi	r30, 0x91	; 145
    13ea:	f0 e0       	ldi	r31, 0x00	; 0
    13ec:	80 81       	ld	r24, Z
    13ee:	81 60       	ori	r24, 0x01	; 1
    13f0:	80 83       	st	Z, r24
    13f2:	e0 e9       	ldi	r30, 0x90	; 144
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	80 81       	ld	r24, Z
    13f8:	81 60       	ori	r24, 0x01	; 1
    13fa:	80 83       	st	Z, r24
    13fc:	80 81       	ld	r24, Z
    13fe:	80 68       	ori	r24, 0x80	; 128
    1400:	80 83       	st	Z, r24
    1402:	80 81       	ld	r24, Z
    1404:	80 62       	ori	r24, 0x20	; 32
    1406:	80 83       	st	Z, r24
    1408:	80 81       	ld	r24, Z
    140a:	88 60       	ori	r24, 0x08	; 8
    140c:	80 83       	st	Z, r24
    140e:	08 95       	ret

00001410 <setup_timer5>:
    1410:	e1 e2       	ldi	r30, 0x21	; 33
    1412:	f1 e0       	ldi	r31, 0x01	; 1
    1414:	80 81       	ld	r24, Z
    1416:	81 60       	ori	r24, 0x01	; 1
    1418:	80 83       	st	Z, r24
    141a:	80 81       	ld	r24, Z
    141c:	88 60       	ori	r24, 0x08	; 8
    141e:	80 83       	st	Z, r24
    1420:	08 95       	ret

00001422 <Enable_timer5_compare_interrupt>:
    1422:	e3 e7       	ldi	r30, 0x73	; 115
    1424:	f0 e0       	ldi	r31, 0x00	; 0
    1426:	80 81       	ld	r24, Z
    1428:	82 60       	ori	r24, 0x02	; 2
    142a:	80 83       	st	Z, r24
    142c:	08 95       	ret

0000142e <setup_timer1>:
    142e:	e1 e8       	ldi	r30, 0x81	; 129
    1430:	f0 e0       	ldi	r31, 0x00	; 0
    1432:	80 81       	ld	r24, Z
    1434:	81 60       	ori	r24, 0x01	; 1
    1436:	80 83       	st	Z, r24
    1438:	80 81       	ld	r24, Z
    143a:	88 60       	ori	r24, 0x08	; 8
    143c:	80 83       	st	Z, r24
    143e:	08 95       	ret

00001440 <setup_timer0>:
    1440:	85 b5       	in	r24, 0x25	; 37
    1442:	81 60       	ori	r24, 0x01	; 1
    1444:	85 bd       	out	0x25, r24	; 37
    1446:	85 b5       	in	r24, 0x25	; 37
    1448:	82 60       	ori	r24, 0x02	; 2
    144a:	85 bd       	out	0x25, r24	; 37
    144c:	08 95       	ret

0000144e <Enable_timer0_overflow_interrupt>:
    144e:	ee e6       	ldi	r30, 0x6E	; 110
    1450:	f0 e0       	ldi	r31, 0x00	; 0
    1452:	80 81       	ld	r24, Z
    1454:	81 60       	ori	r24, 0x01	; 1
    1456:	80 83       	st	Z, r24
    1458:	08 95       	ret

0000145a <micros>:
    145a:	3f b7       	in	r19, 0x3f	; 63
    145c:	f8 94       	cli
    145e:	80 91 a1 03 	lds	r24, 0x03A1	; 0x8003a1 <timer0_overflow_count>
    1462:	90 91 a2 03 	lds	r25, 0x03A2	; 0x8003a2 <timer0_overflow_count+0x1>
    1466:	a0 91 a3 03 	lds	r26, 0x03A3	; 0x8003a3 <timer0_overflow_count+0x2>
    146a:	b0 91 a4 03 	lds	r27, 0x03A4	; 0x8003a4 <timer0_overflow_count+0x3>
    146e:	26 b5       	in	r18, 0x26	; 38
    1470:	a8 9b       	sbis	0x15, 0	; 21
    1472:	05 c0       	rjmp	.+10     	; 0x147e <micros+0x24>
    1474:	2f 3f       	cpi	r18, 0xFF	; 255
    1476:	19 f0       	breq	.+6      	; 0x147e <micros+0x24>
    1478:	01 96       	adiw	r24, 0x01	; 1
    147a:	a1 1d       	adc	r26, r1
    147c:	b1 1d       	adc	r27, r1
    147e:	3f bf       	out	0x3f, r19	; 63
    1480:	ba 2f       	mov	r27, r26
    1482:	a9 2f       	mov	r26, r25
    1484:	98 2f       	mov	r25, r24
    1486:	88 27       	eor	r24, r24
    1488:	82 0f       	add	r24, r18
    148a:	91 1d       	adc	r25, r1
    148c:	a1 1d       	adc	r26, r1
    148e:	b1 1d       	adc	r27, r1
    1490:	bc 01       	movw	r22, r24
    1492:	cd 01       	movw	r24, r26
    1494:	66 0f       	add	r22, r22
    1496:	77 1f       	adc	r23, r23
    1498:	88 1f       	adc	r24, r24
    149a:	99 1f       	adc	r25, r25
    149c:	66 0f       	add	r22, r22
    149e:	77 1f       	adc	r23, r23
    14a0:	88 1f       	adc	r24, r24
    14a2:	99 1f       	adc	r25, r25
    14a4:	08 95       	ret

000014a6 <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    14a6:	1f 92       	push	r1
    14a8:	0f 92       	push	r0
    14aa:	0f b6       	in	r0, 0x3f	; 63
    14ac:	0f 92       	push	r0
    14ae:	11 24       	eor	r1, r1
    14b0:	2f 93       	push	r18
    14b2:	3f 93       	push	r19
    14b4:	8f 93       	push	r24
    14b6:	9f 93       	push	r25
    14b8:	af 93       	push	r26
    14ba:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    14bc:	80 91 9d 03 	lds	r24, 0x039D	; 0x80039d <timer0_millis>
    14c0:	90 91 9e 03 	lds	r25, 0x039E	; 0x80039e <timer0_millis+0x1>
    14c4:	a0 91 9f 03 	lds	r26, 0x039F	; 0x80039f <timer0_millis+0x2>
    14c8:	b0 91 a0 03 	lds	r27, 0x03A0	; 0x8003a0 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    14cc:	30 91 9c 03 	lds	r19, 0x039C	; 0x80039c <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    14d0:	23 e0       	ldi	r18, 0x03	; 3
    14d2:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    14d4:	2d 37       	cpi	r18, 0x7D	; 125
    14d6:	20 f4       	brcc	.+8      	; 0x14e0 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    14d8:	01 96       	adiw	r24, 0x01	; 1
    14da:	a1 1d       	adc	r26, r1
    14dc:	b1 1d       	adc	r27, r1
    14de:	05 c0       	rjmp	.+10     	; 0x14ea <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    14e0:	26 e8       	ldi	r18, 0x86	; 134
    14e2:	23 0f       	add	r18, r19
		m += 1;
    14e4:	02 96       	adiw	r24, 0x02	; 2
    14e6:	a1 1d       	adc	r26, r1
    14e8:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    14ea:	20 93 9c 03 	sts	0x039C, r18	; 0x80039c <timer0_fract>
	timer0_millis = m;
    14ee:	80 93 9d 03 	sts	0x039D, r24	; 0x80039d <timer0_millis>
    14f2:	90 93 9e 03 	sts	0x039E, r25	; 0x80039e <timer0_millis+0x1>
    14f6:	a0 93 9f 03 	sts	0x039F, r26	; 0x80039f <timer0_millis+0x2>
    14fa:	b0 93 a0 03 	sts	0x03A0, r27	; 0x8003a0 <timer0_millis+0x3>
	timer0_overflow_count++;
    14fe:	80 91 a1 03 	lds	r24, 0x03A1	; 0x8003a1 <timer0_overflow_count>
    1502:	90 91 a2 03 	lds	r25, 0x03A2	; 0x8003a2 <timer0_overflow_count+0x1>
    1506:	a0 91 a3 03 	lds	r26, 0x03A3	; 0x8003a3 <timer0_overflow_count+0x2>
    150a:	b0 91 a4 03 	lds	r27, 0x03A4	; 0x8003a4 <timer0_overflow_count+0x3>
    150e:	01 96       	adiw	r24, 0x01	; 1
    1510:	a1 1d       	adc	r26, r1
    1512:	b1 1d       	adc	r27, r1
    1514:	80 93 a1 03 	sts	0x03A1, r24	; 0x8003a1 <timer0_overflow_count>
    1518:	90 93 a2 03 	sts	0x03A2, r25	; 0x8003a2 <timer0_overflow_count+0x1>
    151c:	a0 93 a3 03 	sts	0x03A3, r26	; 0x8003a3 <timer0_overflow_count+0x2>
    1520:	b0 93 a4 03 	sts	0x03A4, r27	; 0x8003a4 <timer0_overflow_count+0x3>
}
    1524:	bf 91       	pop	r27
    1526:	af 91       	pop	r26
    1528:	9f 91       	pop	r25
    152a:	8f 91       	pop	r24
    152c:	3f 91       	pop	r19
    152e:	2f 91       	pop	r18
    1530:	0f 90       	pop	r0
    1532:	0f be       	out	0x3f, r0	; 63
    1534:	0f 90       	pop	r0
    1536:	1f 90       	pop	r1
    1538:	18 95       	reti

0000153a <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    153a:	1f 92       	push	r1
    153c:	0f 92       	push	r0
    153e:	0f b6       	in	r0, 0x3f	; 63
    1540:	0f 92       	push	r0
    1542:	11 24       	eor	r1, r1
    1544:	0b b6       	in	r0, 0x3b	; 59
    1546:	0f 92       	push	r0
    1548:	2f 93       	push	r18
    154a:	3f 93       	push	r19
    154c:	4f 93       	push	r20
    154e:	5f 93       	push	r21
    1550:	6f 93       	push	r22
    1552:	7f 93       	push	r23
    1554:	8f 93       	push	r24
    1556:	9f 93       	push	r25
    1558:	af 93       	push	r26
    155a:	bf 93       	push	r27
    155c:	ef 93       	push	r30
    155e:	ff 93       	push	r31
	PWM_update();
    1560:	0e 94 2c 01 	call	0x258	; 0x258 <PWM_update>
}
    1564:	ff 91       	pop	r31
    1566:	ef 91       	pop	r30
    1568:	bf 91       	pop	r27
    156a:	af 91       	pop	r26
    156c:	9f 91       	pop	r25
    156e:	8f 91       	pop	r24
    1570:	7f 91       	pop	r23
    1572:	6f 91       	pop	r22
    1574:	5f 91       	pop	r21
    1576:	4f 91       	pop	r20
    1578:	3f 91       	pop	r19
    157a:	2f 91       	pop	r18
    157c:	0f 90       	pop	r0
    157e:	0b be       	out	0x3b, r0	; 59
    1580:	0f 90       	pop	r0
    1582:	0f be       	out	0x3f, r0	; 63
    1584:	0f 90       	pop	r0
    1586:	1f 90       	pop	r1
    1588:	18 95       	reti

0000158a <__vector_17>:
ISR(TIMER1_COMPA_vect)//motor update interrupt routine
{
    158a:	1f 92       	push	r1
    158c:	0f 92       	push	r0
    158e:	0f b6       	in	r0, 0x3f	; 63
    1590:	0f 92       	push	r0
    1592:	11 24       	eor	r1, r1
    1594:	0b b6       	in	r0, 0x3b	; 59
    1596:	0f 92       	push	r0
    1598:	2f 93       	push	r18
    159a:	3f 93       	push	r19
    159c:	4f 93       	push	r20
    159e:	5f 93       	push	r21
    15a0:	6f 93       	push	r22
    15a2:	7f 93       	push	r23
    15a4:	8f 93       	push	r24
    15a6:	9f 93       	push	r25
    15a8:	af 93       	push	r26
    15aa:	bf 93       	push	r27
    15ac:	ef 93       	push	r30
    15ae:	ff 93       	push	r31
	PWM_update_2();
    15b0:	0e 94 7d 02 	call	0x4fa	; 0x4fa <PWM_update_2>
    15b4:	ff 91       	pop	r31
    15b6:	ef 91       	pop	r30
    15b8:	bf 91       	pop	r27
    15ba:	af 91       	pop	r26
    15bc:	9f 91       	pop	r25
    15be:	8f 91       	pop	r24
    15c0:	7f 91       	pop	r23
    15c2:	6f 91       	pop	r22
    15c4:	5f 91       	pop	r21
    15c6:	4f 91       	pop	r20
    15c8:	3f 91       	pop	r19
    15ca:	2f 91       	pop	r18
    15cc:	0f 90       	pop	r0
    15ce:	0b be       	out	0x3b, r0	; 59
    15d0:	0f 90       	pop	r0
    15d2:	0f be       	out	0x3f, r0	; 63
    15d4:	0f 90       	pop	r0
    15d6:	1f 90       	pop	r1
    15d8:	18 95       	reti

000015da <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    15da:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    15de:	8c e0       	ldi	r24, 0x0C	; 12
    15e0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    15e4:	08 95       	ret

000015e6 <i2c_start>:
    15e6:	94 ea       	ldi	r25, 0xA4	; 164
    15e8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    15ec:	4f ef       	ldi	r20, 0xFF	; 255
    15ee:	50 e0       	ldi	r21, 0x00	; 0
    15f0:	60 e0       	ldi	r22, 0x00	; 0
    15f2:	70 e0       	ldi	r23, 0x00	; 0
    15f4:	ec eb       	ldi	r30, 0xBC	; 188
    15f6:	f0 e0       	ldi	r31, 0x00	; 0
    15f8:	90 81       	ld	r25, Z
    15fa:	99 23       	and	r25, r25
    15fc:	34 f0       	brlt	.+12     	; 0x160a <i2c_start+0x24>
    15fe:	41 50       	subi	r20, 0x01	; 1
    1600:	51 09       	sbc	r21, r1
    1602:	61 09       	sbc	r22, r1
    1604:	71 09       	sbc	r23, r1
    1606:	c0 f7       	brcc	.-16     	; 0x15f8 <i2c_start+0x12>
    1608:	04 c0       	rjmp	.+8      	; 0x1612 <i2c_start+0x2c>
    160a:	45 2b       	or	r20, r21
    160c:	46 2b       	or	r20, r22
    160e:	47 2b       	or	r20, r23
    1610:	41 f1       	breq	.+80     	; 0x1662 <i2c_start+0x7c>
    1612:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1616:	98 7f       	andi	r25, 0xF8	; 248
    1618:	98 30       	cpi	r25, 0x08	; 8
    161a:	11 f0       	breq	.+4      	; 0x1620 <i2c_start+0x3a>
    161c:	90 31       	cpi	r25, 0x10	; 16
    161e:	19 f5       	brne	.+70     	; 0x1666 <i2c_start+0x80>
    1620:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1624:	84 e8       	ldi	r24, 0x84	; 132
    1626:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    162a:	8f ef       	ldi	r24, 0xFF	; 255
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	a0 e0       	ldi	r26, 0x00	; 0
    1630:	b0 e0       	ldi	r27, 0x00	; 0
    1632:	ec eb       	ldi	r30, 0xBC	; 188
    1634:	f0 e0       	ldi	r31, 0x00	; 0
    1636:	20 81       	ld	r18, Z
    1638:	22 23       	and	r18, r18
    163a:	2c f0       	brlt	.+10     	; 0x1646 <i2c_start+0x60>
    163c:	01 97       	sbiw	r24, 0x01	; 1
    163e:	a1 09       	sbc	r26, r1
    1640:	b1 09       	sbc	r27, r1
    1642:	c8 f7       	brcc	.-14     	; 0x1636 <i2c_start+0x50>
    1644:	04 c0       	rjmp	.+8      	; 0x164e <i2c_start+0x68>
    1646:	89 2b       	or	r24, r25
    1648:	8a 2b       	or	r24, r26
    164a:	8b 2b       	or	r24, r27
    164c:	71 f0       	breq	.+28     	; 0x166a <i2c_start+0x84>
    164e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1652:	98 7f       	andi	r25, 0xF8	; 248
    1654:	98 31       	cpi	r25, 0x18	; 24
    1656:	59 f0       	breq	.+22     	; 0x166e <i2c_start+0x88>
    1658:	81 e0       	ldi	r24, 0x01	; 1
    165a:	90 34       	cpi	r25, 0x40	; 64
    165c:	49 f4       	brne	.+18     	; 0x1670 <i2c_start+0x8a>
    165e:	80 e0       	ldi	r24, 0x00	; 0
    1660:	08 95       	ret
    1662:	81 e0       	ldi	r24, 0x01	; 1
    1664:	08 95       	ret
    1666:	81 e0       	ldi	r24, 0x01	; 1
    1668:	08 95       	ret
    166a:	81 e0       	ldi	r24, 0x01	; 1
    166c:	08 95       	ret
    166e:	80 e0       	ldi	r24, 0x00	; 0
    1670:	08 95       	ret

00001672 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    1672:	84 e9       	ldi	r24, 0x94	; 148
    1674:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    1678:	80 e0       	ldi	r24, 0x00	; 0
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	ec eb       	ldi	r30, 0xBC	; 188
    167e:	f0 e0       	ldi	r31, 0x00	; 0
    1680:	20 81       	ld	r18, Z
    1682:	24 ff       	sbrs	r18, 4
    1684:	05 c0       	rjmp	.+10     	; 0x1690 <i2c_stop+0x1e>
    1686:	01 96       	adiw	r24, 0x01	; 1
    1688:	81 15       	cp	r24, r1
    168a:	21 e0       	ldi	r18, 0x01	; 1
    168c:	92 07       	cpc	r25, r18
    168e:	c1 f7       	brne	.-16     	; 0x1680 <i2c_stop+0xe>
    1690:	08 95       	ret

00001692 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    1692:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    1696:	84 e8       	ldi	r24, 0x84	; 132
    1698:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    169c:	8f ef       	ldi	r24, 0xFF	; 255
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	a0 e0       	ldi	r26, 0x00	; 0
    16a2:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    16a4:	ec eb       	ldi	r30, 0xBC	; 188
    16a6:	f0 e0       	ldi	r31, 0x00	; 0
    16a8:	20 81       	ld	r18, Z
    16aa:	22 23       	and	r18, r18
    16ac:	2c f0       	brlt	.+10     	; 0x16b8 <i2c_write+0x26>
    16ae:	01 97       	sbiw	r24, 0x01	; 1
    16b0:	a1 09       	sbc	r26, r1
    16b2:	b1 09       	sbc	r27, r1
    16b4:	c8 f7       	brcc	.-14     	; 0x16a8 <i2c_write+0x16>
    16b6:	04 c0       	rjmp	.+8      	; 0x16c0 <i2c_write+0x2e>
	if(i2c_timer == 0)
    16b8:	89 2b       	or	r24, r25
    16ba:	8a 2b       	or	r24, r26
    16bc:	8b 2b       	or	r24, r27
    16be:	41 f0       	breq	.+16     	; 0x16d0 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    16c0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    16c4:	98 7f       	andi	r25, 0xF8	; 248
    16c6:	81 e0       	ldi	r24, 0x01	; 1
    16c8:	98 32       	cpi	r25, 0x28	; 40
    16ca:	19 f4       	brne	.+6      	; 0x16d2 <i2c_write+0x40>
    16cc:	80 e0       	ldi	r24, 0x00	; 0
    16ce:	08 95       	ret
    16d0:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    16d2:	08 95       	ret

000016d4 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    16d4:	84 ec       	ldi	r24, 0xC4	; 196
    16d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    16da:	8f ef       	ldi	r24, 0xFF	; 255
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	a0 e0       	ldi	r26, 0x00	; 0
    16e0:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    16e2:	ec eb       	ldi	r30, 0xBC	; 188
    16e4:	f0 e0       	ldi	r31, 0x00	; 0
    16e6:	20 81       	ld	r18, Z
    16e8:	22 23       	and	r18, r18
    16ea:	2c f0       	brlt	.+10     	; 0x16f6 <i2c_readAck+0x22>
    16ec:	01 97       	sbiw	r24, 0x01	; 1
    16ee:	a1 09       	sbc	r26, r1
    16f0:	b1 09       	sbc	r27, r1
    16f2:	c8 f7       	brcc	.-14     	; 0x16e6 <i2c_readAck+0x12>
    16f4:	04 c0       	rjmp	.+8      	; 0x16fe <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    16f6:	89 2b       	or	r24, r25
    16f8:	8a 2b       	or	r24, r26
    16fa:	8b 2b       	or	r24, r27
    16fc:	19 f0       	breq	.+6      	; 0x1704 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    16fe:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1702:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    1704:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    1706:	08 95       	ret

00001708 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    1708:	84 e8       	ldi	r24, 0x84	; 132
    170a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    170e:	8f ef       	ldi	r24, 0xFF	; 255
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	a0 e0       	ldi	r26, 0x00	; 0
    1714:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1716:	ec eb       	ldi	r30, 0xBC	; 188
    1718:	f0 e0       	ldi	r31, 0x00	; 0
    171a:	20 81       	ld	r18, Z
    171c:	22 23       	and	r18, r18
    171e:	2c f0       	brlt	.+10     	; 0x172a <i2c_readNak+0x22>
    1720:	01 97       	sbiw	r24, 0x01	; 1
    1722:	a1 09       	sbc	r26, r1
    1724:	b1 09       	sbc	r27, r1
    1726:	c8 f7       	brcc	.-14     	; 0x171a <i2c_readNak+0x12>
    1728:	04 c0       	rjmp	.+8      	; 0x1732 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    172a:	89 2b       	or	r24, r25
    172c:	8a 2b       	or	r24, r26
    172e:	8b 2b       	or	r24, r27
    1730:	19 f0       	breq	.+6      	; 0x1738 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    1732:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    1736:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    1738:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    173a:	08 95       	ret

0000173c <USART_Init>:
void printSI(char c[20],int16_t intToPrint)
{
	printf(c);
	print16(&intToPrint);
	printf("  ");
}
    173c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1740:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1744:	88 e0       	ldi	r24, 0x08	; 8
    1746:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    174a:	8e e0       	ldi	r24, 0x0E	; 14
    174c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1750:	08 95       	ret

00001752 <uart_putchar>:
    1752:	cf 93       	push	r28
    1754:	c8 2f       	mov	r28, r24
    1756:	8a 30       	cpi	r24, 0x0A	; 10
    1758:	11 f4       	brne	.+4      	; 0x175e <uart_putchar+0xc>
    175a:	8d e0       	ldi	r24, 0x0D	; 13
    175c:	fa df       	rcall	.-12     	; 0x1752 <uart_putchar>
    175e:	e0 ec       	ldi	r30, 0xC0	; 192
    1760:	f0 e0       	ldi	r31, 0x00	; 0
    1762:	80 81       	ld	r24, Z
    1764:	85 ff       	sbrs	r24, 5
    1766:	fd cf       	rjmp	.-6      	; 0x1762 <uart_putchar+0x10>
    1768:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    176c:	80 e0       	ldi	r24, 0x00	; 0
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	cf 91       	pop	r28
    1772:	08 95       	ret

00001774 <printDouble>:
void printDouble(double *value)
{
    1774:	0f 93       	push	r16
    1776:	1f 93       	push	r17
    1778:	cf 93       	push	r28
    177a:	df 93       	push	r29
    177c:	cd b7       	in	r28, 0x3d	; 61
    177e:	de b7       	in	r29, 0x3e	; 62
    1780:	64 97       	sbiw	r28, 0x14	; 20
    1782:	0f b6       	in	r0, 0x3f	; 63
    1784:	f8 94       	cli
    1786:	de bf       	out	0x3e, r29	; 62
    1788:	0f be       	out	0x3f, r0	; 63
    178a:	cd bf       	out	0x3d, r28	; 61
    178c:	fc 01       	movw	r30, r24
	char c[20]={0};
    178e:	8e 01       	movw	r16, r28
    1790:	0f 5f       	subi	r16, 0xFF	; 255
    1792:	1f 4f       	sbci	r17, 0xFF	; 255
    1794:	84 e1       	ldi	r24, 0x14	; 20
    1796:	d8 01       	movw	r26, r16
    1798:	1d 92       	st	X+, r1
    179a:	8a 95       	dec	r24
    179c:	e9 f7       	brne	.-6      	; 0x1798 <printDouble+0x24>
	sprintf(c, "%f", *value);
    179e:	83 81       	ldd	r24, Z+3	; 0x03
    17a0:	8f 93       	push	r24
    17a2:	82 81       	ldd	r24, Z+2	; 0x02
    17a4:	8f 93       	push	r24
    17a6:	81 81       	ldd	r24, Z+1	; 0x01
    17a8:	8f 93       	push	r24
    17aa:	80 81       	ld	r24, Z
    17ac:	8f 93       	push	r24
    17ae:	85 e9       	ldi	r24, 0x95	; 149
    17b0:	93 e0       	ldi	r25, 0x03	; 3
    17b2:	9f 93       	push	r25
    17b4:	8f 93       	push	r24
    17b6:	1f 93       	push	r17
    17b8:	0f 93       	push	r16
    17ba:	0e 94 54 14 	call	0x28a8	; 0x28a8 <sprintf>
	printf(c);
    17be:	1f 93       	push	r17
    17c0:	0f 93       	push	r16
    17c2:	0e 94 3c 14 	call	0x2878	; 0x2878 <printf>
}
    17c6:	0f b6       	in	r0, 0x3f	; 63
    17c8:	f8 94       	cli
    17ca:	de bf       	out	0x3e, r29	; 62
    17cc:	0f be       	out	0x3f, r0	; 63
    17ce:	cd bf       	out	0x3d, r28	; 61
    17d0:	64 96       	adiw	r28, 0x14	; 20
    17d2:	0f b6       	in	r0, 0x3f	; 63
    17d4:	f8 94       	cli
    17d6:	de bf       	out	0x3e, r29	; 62
    17d8:	0f be       	out	0x3f, r0	; 63
    17da:	cd bf       	out	0x3d, r28	; 61
    17dc:	df 91       	pop	r29
    17de:	cf 91       	pop	r28
    17e0:	1f 91       	pop	r17
    17e2:	0f 91       	pop	r16
    17e4:	08 95       	ret

000017e6 <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    17e6:	cf 93       	push	r28
    17e8:	df 93       	push	r29
    17ea:	00 d0       	rcall	.+0      	; 0x17ec <printSD+0x6>
    17ec:	1f 92       	push	r1
    17ee:	cd b7       	in	r28, 0x3d	; 61
    17f0:	de b7       	in	r29, 0x3e	; 62
    17f2:	49 83       	std	Y+1, r20	; 0x01
    17f4:	5a 83       	std	Y+2, r21	; 0x02
    17f6:	6b 83       	std	Y+3, r22	; 0x03
    17f8:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    17fa:	9f 93       	push	r25
    17fc:	8f 93       	push	r24
    17fe:	0e 94 3c 14 	call	0x2878	; 0x2878 <printf>
	printDouble(&doubleToPrint);
    1802:	ce 01       	movw	r24, r28
    1804:	01 96       	adiw	r24, 0x01	; 1
    1806:	b6 df       	rcall	.-148    	; 0x1774 <printDouble>
	printf("  ");
    1808:	82 e9       	ldi	r24, 0x92	; 146
    180a:	93 e0       	ldi	r25, 0x03	; 3
    180c:	9f 93       	push	r25
    180e:	8f 93       	push	r24
    1810:	0e 94 3c 14 	call	0x2878	; 0x2878 <printf>
    1814:	0f 90       	pop	r0
    1816:	0f 90       	pop	r0
    1818:	0f 90       	pop	r0
    181a:	0f 90       	pop	r0
    181c:	0f 90       	pop	r0
    181e:	0f 90       	pop	r0
    1820:	0f 90       	pop	r0
    1822:	0f 90       	pop	r0
    1824:	df 91       	pop	r29
    1826:	cf 91       	pop	r28
    1828:	08 95       	ret

0000182a <__subsf3>:
    182a:	50 58       	subi	r21, 0x80	; 128

0000182c <__addsf3>:
    182c:	bb 27       	eor	r27, r27
    182e:	aa 27       	eor	r26, r26
    1830:	0e d0       	rcall	.+28     	; 0x184e <__addsf3x>
    1832:	fc c1       	rjmp	.+1016   	; 0x1c2c <__fp_round>
    1834:	ed d1       	rcall	.+986    	; 0x1c10 <__fp_pscA>
    1836:	30 f0       	brcs	.+12     	; 0x1844 <__addsf3+0x18>
    1838:	f2 d1       	rcall	.+996    	; 0x1c1e <__fp_pscB>
    183a:	20 f0       	brcs	.+8      	; 0x1844 <__addsf3+0x18>
    183c:	31 f4       	brne	.+12     	; 0x184a <__addsf3+0x1e>
    183e:	9f 3f       	cpi	r25, 0xFF	; 255
    1840:	11 f4       	brne	.+4      	; 0x1846 <__addsf3+0x1a>
    1842:	1e f4       	brtc	.+6      	; 0x184a <__addsf3+0x1e>
    1844:	bd c1       	rjmp	.+890    	; 0x1bc0 <__fp_nan>
    1846:	0e f4       	brtc	.+2      	; 0x184a <__addsf3+0x1e>
    1848:	e0 95       	com	r30
    184a:	e7 fb       	bst	r30, 7
    184c:	b3 c1       	rjmp	.+870    	; 0x1bb4 <__fp_inf>

0000184e <__addsf3x>:
    184e:	e9 2f       	mov	r30, r25
    1850:	fe d1       	rcall	.+1020   	; 0x1c4e <__fp_split3>
    1852:	80 f3       	brcs	.-32     	; 0x1834 <__addsf3+0x8>
    1854:	ba 17       	cp	r27, r26
    1856:	62 07       	cpc	r22, r18
    1858:	73 07       	cpc	r23, r19
    185a:	84 07       	cpc	r24, r20
    185c:	95 07       	cpc	r25, r21
    185e:	18 f0       	brcs	.+6      	; 0x1866 <__addsf3x+0x18>
    1860:	71 f4       	brne	.+28     	; 0x187e <__addsf3x+0x30>
    1862:	9e f5       	brtc	.+102    	; 0x18ca <__addsf3x+0x7c>
    1864:	16 c2       	rjmp	.+1068   	; 0x1c92 <__fp_zero>
    1866:	0e f4       	brtc	.+2      	; 0x186a <__addsf3x+0x1c>
    1868:	e0 95       	com	r30
    186a:	0b 2e       	mov	r0, r27
    186c:	ba 2f       	mov	r27, r26
    186e:	a0 2d       	mov	r26, r0
    1870:	0b 01       	movw	r0, r22
    1872:	b9 01       	movw	r22, r18
    1874:	90 01       	movw	r18, r0
    1876:	0c 01       	movw	r0, r24
    1878:	ca 01       	movw	r24, r20
    187a:	a0 01       	movw	r20, r0
    187c:	11 24       	eor	r1, r1
    187e:	ff 27       	eor	r31, r31
    1880:	59 1b       	sub	r21, r25
    1882:	99 f0       	breq	.+38     	; 0x18aa <__addsf3x+0x5c>
    1884:	59 3f       	cpi	r21, 0xF9	; 249
    1886:	50 f4       	brcc	.+20     	; 0x189c <__addsf3x+0x4e>
    1888:	50 3e       	cpi	r21, 0xE0	; 224
    188a:	68 f1       	brcs	.+90     	; 0x18e6 <__addsf3x+0x98>
    188c:	1a 16       	cp	r1, r26
    188e:	f0 40       	sbci	r31, 0x00	; 0
    1890:	a2 2f       	mov	r26, r18
    1892:	23 2f       	mov	r18, r19
    1894:	34 2f       	mov	r19, r20
    1896:	44 27       	eor	r20, r20
    1898:	58 5f       	subi	r21, 0xF8	; 248
    189a:	f3 cf       	rjmp	.-26     	; 0x1882 <__addsf3x+0x34>
    189c:	46 95       	lsr	r20
    189e:	37 95       	ror	r19
    18a0:	27 95       	ror	r18
    18a2:	a7 95       	ror	r26
    18a4:	f0 40       	sbci	r31, 0x00	; 0
    18a6:	53 95       	inc	r21
    18a8:	c9 f7       	brne	.-14     	; 0x189c <__addsf3x+0x4e>
    18aa:	7e f4       	brtc	.+30     	; 0x18ca <__addsf3x+0x7c>
    18ac:	1f 16       	cp	r1, r31
    18ae:	ba 0b       	sbc	r27, r26
    18b0:	62 0b       	sbc	r22, r18
    18b2:	73 0b       	sbc	r23, r19
    18b4:	84 0b       	sbc	r24, r20
    18b6:	ba f0       	brmi	.+46     	; 0x18e6 <__addsf3x+0x98>
    18b8:	91 50       	subi	r25, 0x01	; 1
    18ba:	a1 f0       	breq	.+40     	; 0x18e4 <__addsf3x+0x96>
    18bc:	ff 0f       	add	r31, r31
    18be:	bb 1f       	adc	r27, r27
    18c0:	66 1f       	adc	r22, r22
    18c2:	77 1f       	adc	r23, r23
    18c4:	88 1f       	adc	r24, r24
    18c6:	c2 f7       	brpl	.-16     	; 0x18b8 <__addsf3x+0x6a>
    18c8:	0e c0       	rjmp	.+28     	; 0x18e6 <__addsf3x+0x98>
    18ca:	ba 0f       	add	r27, r26
    18cc:	62 1f       	adc	r22, r18
    18ce:	73 1f       	adc	r23, r19
    18d0:	84 1f       	adc	r24, r20
    18d2:	48 f4       	brcc	.+18     	; 0x18e6 <__addsf3x+0x98>
    18d4:	87 95       	ror	r24
    18d6:	77 95       	ror	r23
    18d8:	67 95       	ror	r22
    18da:	b7 95       	ror	r27
    18dc:	f7 95       	ror	r31
    18de:	9e 3f       	cpi	r25, 0xFE	; 254
    18e0:	08 f0       	brcs	.+2      	; 0x18e4 <__addsf3x+0x96>
    18e2:	b3 cf       	rjmp	.-154    	; 0x184a <__addsf3+0x1e>
    18e4:	93 95       	inc	r25
    18e6:	88 0f       	add	r24, r24
    18e8:	08 f0       	brcs	.+2      	; 0x18ec <__addsf3x+0x9e>
    18ea:	99 27       	eor	r25, r25
    18ec:	ee 0f       	add	r30, r30
    18ee:	97 95       	ror	r25
    18f0:	87 95       	ror	r24
    18f2:	08 95       	ret
    18f4:	8d d1       	rcall	.+794    	; 0x1c10 <__fp_pscA>
    18f6:	58 f0       	brcs	.+22     	; 0x190e <__addsf3x+0xc0>
    18f8:	80 e8       	ldi	r24, 0x80	; 128
    18fa:	91 e0       	ldi	r25, 0x01	; 1
    18fc:	09 f4       	brne	.+2      	; 0x1900 <__addsf3x+0xb2>
    18fe:	9e ef       	ldi	r25, 0xFE	; 254
    1900:	8e d1       	rcall	.+796    	; 0x1c1e <__fp_pscB>
    1902:	28 f0       	brcs	.+10     	; 0x190e <__addsf3x+0xc0>
    1904:	40 e8       	ldi	r20, 0x80	; 128
    1906:	51 e0       	ldi	r21, 0x01	; 1
    1908:	59 f4       	brne	.+22     	; 0x1920 <atan2+0xe>
    190a:	5e ef       	ldi	r21, 0xFE	; 254
    190c:	09 c0       	rjmp	.+18     	; 0x1920 <atan2+0xe>
    190e:	58 c1       	rjmp	.+688    	; 0x1bc0 <__fp_nan>
    1910:	c0 c1       	rjmp	.+896    	; 0x1c92 <__fp_zero>

00001912 <atan2>:
    1912:	e9 2f       	mov	r30, r25
    1914:	e0 78       	andi	r30, 0x80	; 128
    1916:	9b d1       	rcall	.+822    	; 0x1c4e <__fp_split3>
    1918:	68 f3       	brcs	.-38     	; 0x18f4 <__addsf3x+0xa6>
    191a:	09 2e       	mov	r0, r25
    191c:	05 2a       	or	r0, r21
    191e:	c1 f3       	breq	.-16     	; 0x1910 <__addsf3x+0xc2>
    1920:	26 17       	cp	r18, r22
    1922:	37 07       	cpc	r19, r23
    1924:	48 07       	cpc	r20, r24
    1926:	59 07       	cpc	r21, r25
    1928:	38 f0       	brcs	.+14     	; 0x1938 <atan2+0x26>
    192a:	0e 2e       	mov	r0, r30
    192c:	07 f8       	bld	r0, 7
    192e:	e0 25       	eor	r30, r0
    1930:	69 f0       	breq	.+26     	; 0x194c <atan2+0x3a>
    1932:	e0 25       	eor	r30, r0
    1934:	e0 64       	ori	r30, 0x40	; 64
    1936:	0a c0       	rjmp	.+20     	; 0x194c <atan2+0x3a>
    1938:	ef 63       	ori	r30, 0x3F	; 63
    193a:	07 f8       	bld	r0, 7
    193c:	00 94       	com	r0
    193e:	07 fa       	bst	r0, 7
    1940:	db 01       	movw	r26, r22
    1942:	b9 01       	movw	r22, r18
    1944:	9d 01       	movw	r18, r26
    1946:	dc 01       	movw	r26, r24
    1948:	ca 01       	movw	r24, r20
    194a:	ad 01       	movw	r20, r26
    194c:	ef 93       	push	r30
    194e:	47 d0       	rcall	.+142    	; 0x19de <__divsf3_pse>
    1950:	6d d1       	rcall	.+730    	; 0x1c2c <__fp_round>
    1952:	0a d0       	rcall	.+20     	; 0x1968 <atan>
    1954:	5f 91       	pop	r21
    1956:	55 23       	and	r21, r21
    1958:	31 f0       	breq	.+12     	; 0x1966 <atan2+0x54>
    195a:	2b ed       	ldi	r18, 0xDB	; 219
    195c:	3f e0       	ldi	r19, 0x0F	; 15
    195e:	49 e4       	ldi	r20, 0x49	; 73
    1960:	50 fd       	sbrc	r21, 0
    1962:	49 ec       	ldi	r20, 0xC9	; 201
    1964:	63 cf       	rjmp	.-314    	; 0x182c <__addsf3>
    1966:	08 95       	ret

00001968 <atan>:
    1968:	df 93       	push	r29
    196a:	dd 27       	eor	r29, r29
    196c:	b9 2f       	mov	r27, r25
    196e:	bf 77       	andi	r27, 0x7F	; 127
    1970:	40 e8       	ldi	r20, 0x80	; 128
    1972:	5f e3       	ldi	r21, 0x3F	; 63
    1974:	16 16       	cp	r1, r22
    1976:	17 06       	cpc	r1, r23
    1978:	48 07       	cpc	r20, r24
    197a:	5b 07       	cpc	r21, r27
    197c:	10 f4       	brcc	.+4      	; 0x1982 <atan+0x1a>
    197e:	d9 2f       	mov	r29, r25
    1980:	93 d1       	rcall	.+806    	; 0x1ca8 <inverse>
    1982:	9f 93       	push	r25
    1984:	8f 93       	push	r24
    1986:	7f 93       	push	r23
    1988:	6f 93       	push	r22
    198a:	3a d2       	rcall	.+1140   	; 0x1e00 <square>
    198c:	e4 ee       	ldi	r30, 0xE4	; 228
    198e:	f0 e0       	ldi	r31, 0x00	; 0
    1990:	1a d1       	rcall	.+564    	; 0x1bc6 <__fp_powser>
    1992:	4c d1       	rcall	.+664    	; 0x1c2c <__fp_round>
    1994:	2f 91       	pop	r18
    1996:	3f 91       	pop	r19
    1998:	4f 91       	pop	r20
    199a:	5f 91       	pop	r21
    199c:	98 d1       	rcall	.+816    	; 0x1cce <__mulsf3x>
    199e:	dd 23       	and	r29, r29
    19a0:	49 f0       	breq	.+18     	; 0x19b4 <atan+0x4c>
    19a2:	90 58       	subi	r25, 0x80	; 128
    19a4:	a2 ea       	ldi	r26, 0xA2	; 162
    19a6:	2a ed       	ldi	r18, 0xDA	; 218
    19a8:	3f e0       	ldi	r19, 0x0F	; 15
    19aa:	49 ec       	ldi	r20, 0xC9	; 201
    19ac:	5f e3       	ldi	r21, 0x3F	; 63
    19ae:	d0 78       	andi	r29, 0x80	; 128
    19b0:	5d 27       	eor	r21, r29
    19b2:	4d df       	rcall	.-358    	; 0x184e <__addsf3x>
    19b4:	df 91       	pop	r29
    19b6:	3a c1       	rjmp	.+628    	; 0x1c2c <__fp_round>

000019b8 <__cmpsf2>:
    19b8:	d9 d0       	rcall	.+434    	; 0x1b6c <__fp_cmp>
    19ba:	08 f4       	brcc	.+2      	; 0x19be <__cmpsf2+0x6>
    19bc:	81 e0       	ldi	r24, 0x01	; 1
    19be:	08 95       	ret

000019c0 <__divsf3>:
    19c0:	0c d0       	rcall	.+24     	; 0x19da <__divsf3x>
    19c2:	34 c1       	rjmp	.+616    	; 0x1c2c <__fp_round>
    19c4:	2c d1       	rcall	.+600    	; 0x1c1e <__fp_pscB>
    19c6:	40 f0       	brcs	.+16     	; 0x19d8 <__divsf3+0x18>
    19c8:	23 d1       	rcall	.+582    	; 0x1c10 <__fp_pscA>
    19ca:	30 f0       	brcs	.+12     	; 0x19d8 <__divsf3+0x18>
    19cc:	21 f4       	brne	.+8      	; 0x19d6 <__divsf3+0x16>
    19ce:	5f 3f       	cpi	r21, 0xFF	; 255
    19d0:	19 f0       	breq	.+6      	; 0x19d8 <__divsf3+0x18>
    19d2:	f0 c0       	rjmp	.+480    	; 0x1bb4 <__fp_inf>
    19d4:	51 11       	cpse	r21, r1
    19d6:	5e c1       	rjmp	.+700    	; 0x1c94 <__fp_szero>
    19d8:	f3 c0       	rjmp	.+486    	; 0x1bc0 <__fp_nan>

000019da <__divsf3x>:
    19da:	39 d1       	rcall	.+626    	; 0x1c4e <__fp_split3>
    19dc:	98 f3       	brcs	.-26     	; 0x19c4 <__divsf3+0x4>

000019de <__divsf3_pse>:
    19de:	99 23       	and	r25, r25
    19e0:	c9 f3       	breq	.-14     	; 0x19d4 <__divsf3+0x14>
    19e2:	55 23       	and	r21, r21
    19e4:	b1 f3       	breq	.-20     	; 0x19d2 <__divsf3+0x12>
    19e6:	95 1b       	sub	r25, r21
    19e8:	55 0b       	sbc	r21, r21
    19ea:	bb 27       	eor	r27, r27
    19ec:	aa 27       	eor	r26, r26
    19ee:	62 17       	cp	r22, r18
    19f0:	73 07       	cpc	r23, r19
    19f2:	84 07       	cpc	r24, r20
    19f4:	38 f0       	brcs	.+14     	; 0x1a04 <__divsf3_pse+0x26>
    19f6:	9f 5f       	subi	r25, 0xFF	; 255
    19f8:	5f 4f       	sbci	r21, 0xFF	; 255
    19fa:	22 0f       	add	r18, r18
    19fc:	33 1f       	adc	r19, r19
    19fe:	44 1f       	adc	r20, r20
    1a00:	aa 1f       	adc	r26, r26
    1a02:	a9 f3       	breq	.-22     	; 0x19ee <__divsf3_pse+0x10>
    1a04:	33 d0       	rcall	.+102    	; 0x1a6c <__divsf3_pse+0x8e>
    1a06:	0e 2e       	mov	r0, r30
    1a08:	3a f0       	brmi	.+14     	; 0x1a18 <__divsf3_pse+0x3a>
    1a0a:	e0 e8       	ldi	r30, 0x80	; 128
    1a0c:	30 d0       	rcall	.+96     	; 0x1a6e <__divsf3_pse+0x90>
    1a0e:	91 50       	subi	r25, 0x01	; 1
    1a10:	50 40       	sbci	r21, 0x00	; 0
    1a12:	e6 95       	lsr	r30
    1a14:	00 1c       	adc	r0, r0
    1a16:	ca f7       	brpl	.-14     	; 0x1a0a <__divsf3_pse+0x2c>
    1a18:	29 d0       	rcall	.+82     	; 0x1a6c <__divsf3_pse+0x8e>
    1a1a:	fe 2f       	mov	r31, r30
    1a1c:	27 d0       	rcall	.+78     	; 0x1a6c <__divsf3_pse+0x8e>
    1a1e:	66 0f       	add	r22, r22
    1a20:	77 1f       	adc	r23, r23
    1a22:	88 1f       	adc	r24, r24
    1a24:	bb 1f       	adc	r27, r27
    1a26:	26 17       	cp	r18, r22
    1a28:	37 07       	cpc	r19, r23
    1a2a:	48 07       	cpc	r20, r24
    1a2c:	ab 07       	cpc	r26, r27
    1a2e:	b0 e8       	ldi	r27, 0x80	; 128
    1a30:	09 f0       	breq	.+2      	; 0x1a34 <__divsf3_pse+0x56>
    1a32:	bb 0b       	sbc	r27, r27
    1a34:	80 2d       	mov	r24, r0
    1a36:	bf 01       	movw	r22, r30
    1a38:	ff 27       	eor	r31, r31
    1a3a:	93 58       	subi	r25, 0x83	; 131
    1a3c:	5f 4f       	sbci	r21, 0xFF	; 255
    1a3e:	2a f0       	brmi	.+10     	; 0x1a4a <__divsf3_pse+0x6c>
    1a40:	9e 3f       	cpi	r25, 0xFE	; 254
    1a42:	51 05       	cpc	r21, r1
    1a44:	68 f0       	brcs	.+26     	; 0x1a60 <__divsf3_pse+0x82>
    1a46:	b6 c0       	rjmp	.+364    	; 0x1bb4 <__fp_inf>
    1a48:	25 c1       	rjmp	.+586    	; 0x1c94 <__fp_szero>
    1a4a:	5f 3f       	cpi	r21, 0xFF	; 255
    1a4c:	ec f3       	brlt	.-6      	; 0x1a48 <__divsf3_pse+0x6a>
    1a4e:	98 3e       	cpi	r25, 0xE8	; 232
    1a50:	dc f3       	brlt	.-10     	; 0x1a48 <__divsf3_pse+0x6a>
    1a52:	86 95       	lsr	r24
    1a54:	77 95       	ror	r23
    1a56:	67 95       	ror	r22
    1a58:	b7 95       	ror	r27
    1a5a:	f7 95       	ror	r31
    1a5c:	9f 5f       	subi	r25, 0xFF	; 255
    1a5e:	c9 f7       	brne	.-14     	; 0x1a52 <__divsf3_pse+0x74>
    1a60:	88 0f       	add	r24, r24
    1a62:	91 1d       	adc	r25, r1
    1a64:	96 95       	lsr	r25
    1a66:	87 95       	ror	r24
    1a68:	97 f9       	bld	r25, 7
    1a6a:	08 95       	ret
    1a6c:	e1 e0       	ldi	r30, 0x01	; 1
    1a6e:	66 0f       	add	r22, r22
    1a70:	77 1f       	adc	r23, r23
    1a72:	88 1f       	adc	r24, r24
    1a74:	bb 1f       	adc	r27, r27
    1a76:	62 17       	cp	r22, r18
    1a78:	73 07       	cpc	r23, r19
    1a7a:	84 07       	cpc	r24, r20
    1a7c:	ba 07       	cpc	r27, r26
    1a7e:	20 f0       	brcs	.+8      	; 0x1a88 <__divsf3_pse+0xaa>
    1a80:	62 1b       	sub	r22, r18
    1a82:	73 0b       	sbc	r23, r19
    1a84:	84 0b       	sbc	r24, r20
    1a86:	ba 0b       	sbc	r27, r26
    1a88:	ee 1f       	adc	r30, r30
    1a8a:	88 f7       	brcc	.-30     	; 0x1a6e <__divsf3_pse+0x90>
    1a8c:	e0 95       	com	r30
    1a8e:	08 95       	ret

00001a90 <__fixsfsi>:
    1a90:	04 d0       	rcall	.+8      	; 0x1a9a <__fixunssfsi>
    1a92:	68 94       	set
    1a94:	b1 11       	cpse	r27, r1
    1a96:	fe c0       	rjmp	.+508    	; 0x1c94 <__fp_szero>
    1a98:	08 95       	ret

00001a9a <__fixunssfsi>:
    1a9a:	e1 d0       	rcall	.+450    	; 0x1c5e <__fp_splitA>
    1a9c:	88 f0       	brcs	.+34     	; 0x1ac0 <__fixunssfsi+0x26>
    1a9e:	9f 57       	subi	r25, 0x7F	; 127
    1aa0:	90 f0       	brcs	.+36     	; 0x1ac6 <__fixunssfsi+0x2c>
    1aa2:	b9 2f       	mov	r27, r25
    1aa4:	99 27       	eor	r25, r25
    1aa6:	b7 51       	subi	r27, 0x17	; 23
    1aa8:	a0 f0       	brcs	.+40     	; 0x1ad2 <__fixunssfsi+0x38>
    1aaa:	d1 f0       	breq	.+52     	; 0x1ae0 <__fixunssfsi+0x46>
    1aac:	66 0f       	add	r22, r22
    1aae:	77 1f       	adc	r23, r23
    1ab0:	88 1f       	adc	r24, r24
    1ab2:	99 1f       	adc	r25, r25
    1ab4:	1a f0       	brmi	.+6      	; 0x1abc <__fixunssfsi+0x22>
    1ab6:	ba 95       	dec	r27
    1ab8:	c9 f7       	brne	.-14     	; 0x1aac <__fixunssfsi+0x12>
    1aba:	12 c0       	rjmp	.+36     	; 0x1ae0 <__fixunssfsi+0x46>
    1abc:	b1 30       	cpi	r27, 0x01	; 1
    1abe:	81 f0       	breq	.+32     	; 0x1ae0 <__fixunssfsi+0x46>
    1ac0:	e8 d0       	rcall	.+464    	; 0x1c92 <__fp_zero>
    1ac2:	b1 e0       	ldi	r27, 0x01	; 1
    1ac4:	08 95       	ret
    1ac6:	e5 c0       	rjmp	.+458    	; 0x1c92 <__fp_zero>
    1ac8:	67 2f       	mov	r22, r23
    1aca:	78 2f       	mov	r23, r24
    1acc:	88 27       	eor	r24, r24
    1ace:	b8 5f       	subi	r27, 0xF8	; 248
    1ad0:	39 f0       	breq	.+14     	; 0x1ae0 <__fixunssfsi+0x46>
    1ad2:	b9 3f       	cpi	r27, 0xF9	; 249
    1ad4:	cc f3       	brlt	.-14     	; 0x1ac8 <__fixunssfsi+0x2e>
    1ad6:	86 95       	lsr	r24
    1ad8:	77 95       	ror	r23
    1ada:	67 95       	ror	r22
    1adc:	b3 95       	inc	r27
    1ade:	d9 f7       	brne	.-10     	; 0x1ad6 <__fixunssfsi+0x3c>
    1ae0:	3e f4       	brtc	.+14     	; 0x1af0 <__fixunssfsi+0x56>
    1ae2:	90 95       	com	r25
    1ae4:	80 95       	com	r24
    1ae6:	70 95       	com	r23
    1ae8:	61 95       	neg	r22
    1aea:	7f 4f       	sbci	r23, 0xFF	; 255
    1aec:	8f 4f       	sbci	r24, 0xFF	; 255
    1aee:	9f 4f       	sbci	r25, 0xFF	; 255
    1af0:	08 95       	ret

00001af2 <__floatunsisf>:
    1af2:	e8 94       	clt
    1af4:	09 c0       	rjmp	.+18     	; 0x1b08 <__floatsisf+0x12>

00001af6 <__floatsisf>:
    1af6:	97 fb       	bst	r25, 7
    1af8:	3e f4       	brtc	.+14     	; 0x1b08 <__floatsisf+0x12>
    1afa:	90 95       	com	r25
    1afc:	80 95       	com	r24
    1afe:	70 95       	com	r23
    1b00:	61 95       	neg	r22
    1b02:	7f 4f       	sbci	r23, 0xFF	; 255
    1b04:	8f 4f       	sbci	r24, 0xFF	; 255
    1b06:	9f 4f       	sbci	r25, 0xFF	; 255
    1b08:	99 23       	and	r25, r25
    1b0a:	a9 f0       	breq	.+42     	; 0x1b36 <__floatsisf+0x40>
    1b0c:	f9 2f       	mov	r31, r25
    1b0e:	96 e9       	ldi	r25, 0x96	; 150
    1b10:	bb 27       	eor	r27, r27
    1b12:	93 95       	inc	r25
    1b14:	f6 95       	lsr	r31
    1b16:	87 95       	ror	r24
    1b18:	77 95       	ror	r23
    1b1a:	67 95       	ror	r22
    1b1c:	b7 95       	ror	r27
    1b1e:	f1 11       	cpse	r31, r1
    1b20:	f8 cf       	rjmp	.-16     	; 0x1b12 <__floatsisf+0x1c>
    1b22:	fa f4       	brpl	.+62     	; 0x1b62 <__floatsisf+0x6c>
    1b24:	bb 0f       	add	r27, r27
    1b26:	11 f4       	brne	.+4      	; 0x1b2c <__floatsisf+0x36>
    1b28:	60 ff       	sbrs	r22, 0
    1b2a:	1b c0       	rjmp	.+54     	; 0x1b62 <__floatsisf+0x6c>
    1b2c:	6f 5f       	subi	r22, 0xFF	; 255
    1b2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b30:	8f 4f       	sbci	r24, 0xFF	; 255
    1b32:	9f 4f       	sbci	r25, 0xFF	; 255
    1b34:	16 c0       	rjmp	.+44     	; 0x1b62 <__floatsisf+0x6c>
    1b36:	88 23       	and	r24, r24
    1b38:	11 f0       	breq	.+4      	; 0x1b3e <__floatsisf+0x48>
    1b3a:	96 e9       	ldi	r25, 0x96	; 150
    1b3c:	11 c0       	rjmp	.+34     	; 0x1b60 <__floatsisf+0x6a>
    1b3e:	77 23       	and	r23, r23
    1b40:	21 f0       	breq	.+8      	; 0x1b4a <__floatsisf+0x54>
    1b42:	9e e8       	ldi	r25, 0x8E	; 142
    1b44:	87 2f       	mov	r24, r23
    1b46:	76 2f       	mov	r23, r22
    1b48:	05 c0       	rjmp	.+10     	; 0x1b54 <__floatsisf+0x5e>
    1b4a:	66 23       	and	r22, r22
    1b4c:	71 f0       	breq	.+28     	; 0x1b6a <__floatsisf+0x74>
    1b4e:	96 e8       	ldi	r25, 0x86	; 134
    1b50:	86 2f       	mov	r24, r22
    1b52:	70 e0       	ldi	r23, 0x00	; 0
    1b54:	60 e0       	ldi	r22, 0x00	; 0
    1b56:	2a f0       	brmi	.+10     	; 0x1b62 <__floatsisf+0x6c>
    1b58:	9a 95       	dec	r25
    1b5a:	66 0f       	add	r22, r22
    1b5c:	77 1f       	adc	r23, r23
    1b5e:	88 1f       	adc	r24, r24
    1b60:	da f7       	brpl	.-10     	; 0x1b58 <__floatsisf+0x62>
    1b62:	88 0f       	add	r24, r24
    1b64:	96 95       	lsr	r25
    1b66:	87 95       	ror	r24
    1b68:	97 f9       	bld	r25, 7
    1b6a:	08 95       	ret

00001b6c <__fp_cmp>:
    1b6c:	99 0f       	add	r25, r25
    1b6e:	00 08       	sbc	r0, r0
    1b70:	55 0f       	add	r21, r21
    1b72:	aa 0b       	sbc	r26, r26
    1b74:	e0 e8       	ldi	r30, 0x80	; 128
    1b76:	fe ef       	ldi	r31, 0xFE	; 254
    1b78:	16 16       	cp	r1, r22
    1b7a:	17 06       	cpc	r1, r23
    1b7c:	e8 07       	cpc	r30, r24
    1b7e:	f9 07       	cpc	r31, r25
    1b80:	c0 f0       	brcs	.+48     	; 0x1bb2 <__fp_cmp+0x46>
    1b82:	12 16       	cp	r1, r18
    1b84:	13 06       	cpc	r1, r19
    1b86:	e4 07       	cpc	r30, r20
    1b88:	f5 07       	cpc	r31, r21
    1b8a:	98 f0       	brcs	.+38     	; 0x1bb2 <__fp_cmp+0x46>
    1b8c:	62 1b       	sub	r22, r18
    1b8e:	73 0b       	sbc	r23, r19
    1b90:	84 0b       	sbc	r24, r20
    1b92:	95 0b       	sbc	r25, r21
    1b94:	39 f4       	brne	.+14     	; 0x1ba4 <__fp_cmp+0x38>
    1b96:	0a 26       	eor	r0, r26
    1b98:	61 f0       	breq	.+24     	; 0x1bb2 <__fp_cmp+0x46>
    1b9a:	23 2b       	or	r18, r19
    1b9c:	24 2b       	or	r18, r20
    1b9e:	25 2b       	or	r18, r21
    1ba0:	21 f4       	brne	.+8      	; 0x1baa <__fp_cmp+0x3e>
    1ba2:	08 95       	ret
    1ba4:	0a 26       	eor	r0, r26
    1ba6:	09 f4       	brne	.+2      	; 0x1baa <__fp_cmp+0x3e>
    1ba8:	a1 40       	sbci	r26, 0x01	; 1
    1baa:	a6 95       	lsr	r26
    1bac:	8f ef       	ldi	r24, 0xFF	; 255
    1bae:	81 1d       	adc	r24, r1
    1bb0:	81 1d       	adc	r24, r1
    1bb2:	08 95       	ret

00001bb4 <__fp_inf>:
    1bb4:	97 f9       	bld	r25, 7
    1bb6:	9f 67       	ori	r25, 0x7F	; 127
    1bb8:	80 e8       	ldi	r24, 0x80	; 128
    1bba:	70 e0       	ldi	r23, 0x00	; 0
    1bbc:	60 e0       	ldi	r22, 0x00	; 0
    1bbe:	08 95       	ret

00001bc0 <__fp_nan>:
    1bc0:	9f ef       	ldi	r25, 0xFF	; 255
    1bc2:	80 ec       	ldi	r24, 0xC0	; 192
    1bc4:	08 95       	ret

00001bc6 <__fp_powser>:
    1bc6:	df 93       	push	r29
    1bc8:	cf 93       	push	r28
    1bca:	1f 93       	push	r17
    1bcc:	0f 93       	push	r16
    1bce:	ff 92       	push	r15
    1bd0:	ef 92       	push	r14
    1bd2:	df 92       	push	r13
    1bd4:	7b 01       	movw	r14, r22
    1bd6:	8c 01       	movw	r16, r24
    1bd8:	68 94       	set
    1bda:	05 c0       	rjmp	.+10     	; 0x1be6 <__fp_powser+0x20>
    1bdc:	da 2e       	mov	r13, r26
    1bde:	ef 01       	movw	r28, r30
    1be0:	76 d0       	rcall	.+236    	; 0x1cce <__mulsf3x>
    1be2:	fe 01       	movw	r30, r28
    1be4:	e8 94       	clt
    1be6:	a5 91       	lpm	r26, Z+
    1be8:	25 91       	lpm	r18, Z+
    1bea:	35 91       	lpm	r19, Z+
    1bec:	45 91       	lpm	r20, Z+
    1bee:	55 91       	lpm	r21, Z+
    1bf0:	ae f3       	brts	.-22     	; 0x1bdc <__fp_powser+0x16>
    1bf2:	ef 01       	movw	r28, r30
    1bf4:	2c de       	rcall	.-936    	; 0x184e <__addsf3x>
    1bf6:	fe 01       	movw	r30, r28
    1bf8:	97 01       	movw	r18, r14
    1bfa:	a8 01       	movw	r20, r16
    1bfc:	da 94       	dec	r13
    1bfe:	79 f7       	brne	.-34     	; 0x1bde <__fp_powser+0x18>
    1c00:	df 90       	pop	r13
    1c02:	ef 90       	pop	r14
    1c04:	ff 90       	pop	r15
    1c06:	0f 91       	pop	r16
    1c08:	1f 91       	pop	r17
    1c0a:	cf 91       	pop	r28
    1c0c:	df 91       	pop	r29
    1c0e:	08 95       	ret

00001c10 <__fp_pscA>:
    1c10:	00 24       	eor	r0, r0
    1c12:	0a 94       	dec	r0
    1c14:	16 16       	cp	r1, r22
    1c16:	17 06       	cpc	r1, r23
    1c18:	18 06       	cpc	r1, r24
    1c1a:	09 06       	cpc	r0, r25
    1c1c:	08 95       	ret

00001c1e <__fp_pscB>:
    1c1e:	00 24       	eor	r0, r0
    1c20:	0a 94       	dec	r0
    1c22:	12 16       	cp	r1, r18
    1c24:	13 06       	cpc	r1, r19
    1c26:	14 06       	cpc	r1, r20
    1c28:	05 06       	cpc	r0, r21
    1c2a:	08 95       	ret

00001c2c <__fp_round>:
    1c2c:	09 2e       	mov	r0, r25
    1c2e:	03 94       	inc	r0
    1c30:	00 0c       	add	r0, r0
    1c32:	11 f4       	brne	.+4      	; 0x1c38 <__fp_round+0xc>
    1c34:	88 23       	and	r24, r24
    1c36:	52 f0       	brmi	.+20     	; 0x1c4c <__fp_round+0x20>
    1c38:	bb 0f       	add	r27, r27
    1c3a:	40 f4       	brcc	.+16     	; 0x1c4c <__fp_round+0x20>
    1c3c:	bf 2b       	or	r27, r31
    1c3e:	11 f4       	brne	.+4      	; 0x1c44 <__fp_round+0x18>
    1c40:	60 ff       	sbrs	r22, 0
    1c42:	04 c0       	rjmp	.+8      	; 0x1c4c <__fp_round+0x20>
    1c44:	6f 5f       	subi	r22, 0xFF	; 255
    1c46:	7f 4f       	sbci	r23, 0xFF	; 255
    1c48:	8f 4f       	sbci	r24, 0xFF	; 255
    1c4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c4c:	08 95       	ret

00001c4e <__fp_split3>:
    1c4e:	57 fd       	sbrc	r21, 7
    1c50:	90 58       	subi	r25, 0x80	; 128
    1c52:	44 0f       	add	r20, r20
    1c54:	55 1f       	adc	r21, r21
    1c56:	59 f0       	breq	.+22     	; 0x1c6e <__fp_splitA+0x10>
    1c58:	5f 3f       	cpi	r21, 0xFF	; 255
    1c5a:	71 f0       	breq	.+28     	; 0x1c78 <__fp_splitA+0x1a>
    1c5c:	47 95       	ror	r20

00001c5e <__fp_splitA>:
    1c5e:	88 0f       	add	r24, r24
    1c60:	97 fb       	bst	r25, 7
    1c62:	99 1f       	adc	r25, r25
    1c64:	61 f0       	breq	.+24     	; 0x1c7e <__fp_splitA+0x20>
    1c66:	9f 3f       	cpi	r25, 0xFF	; 255
    1c68:	79 f0       	breq	.+30     	; 0x1c88 <__fp_splitA+0x2a>
    1c6a:	87 95       	ror	r24
    1c6c:	08 95       	ret
    1c6e:	12 16       	cp	r1, r18
    1c70:	13 06       	cpc	r1, r19
    1c72:	14 06       	cpc	r1, r20
    1c74:	55 1f       	adc	r21, r21
    1c76:	f2 cf       	rjmp	.-28     	; 0x1c5c <__fp_split3+0xe>
    1c78:	46 95       	lsr	r20
    1c7a:	f1 df       	rcall	.-30     	; 0x1c5e <__fp_splitA>
    1c7c:	08 c0       	rjmp	.+16     	; 0x1c8e <__fp_splitA+0x30>
    1c7e:	16 16       	cp	r1, r22
    1c80:	17 06       	cpc	r1, r23
    1c82:	18 06       	cpc	r1, r24
    1c84:	99 1f       	adc	r25, r25
    1c86:	f1 cf       	rjmp	.-30     	; 0x1c6a <__fp_splitA+0xc>
    1c88:	86 95       	lsr	r24
    1c8a:	71 05       	cpc	r23, r1
    1c8c:	61 05       	cpc	r22, r1
    1c8e:	08 94       	sec
    1c90:	08 95       	ret

00001c92 <__fp_zero>:
    1c92:	e8 94       	clt

00001c94 <__fp_szero>:
    1c94:	bb 27       	eor	r27, r27
    1c96:	66 27       	eor	r22, r22
    1c98:	77 27       	eor	r23, r23
    1c9a:	cb 01       	movw	r24, r22
    1c9c:	97 f9       	bld	r25, 7
    1c9e:	08 95       	ret

00001ca0 <__gesf2>:
    1ca0:	65 df       	rcall	.-310    	; 0x1b6c <__fp_cmp>
    1ca2:	08 f4       	brcc	.+2      	; 0x1ca6 <__gesf2+0x6>
    1ca4:	8f ef       	ldi	r24, 0xFF	; 255
    1ca6:	08 95       	ret

00001ca8 <inverse>:
    1ca8:	9b 01       	movw	r18, r22
    1caa:	ac 01       	movw	r20, r24
    1cac:	60 e0       	ldi	r22, 0x00	; 0
    1cae:	70 e0       	ldi	r23, 0x00	; 0
    1cb0:	80 e8       	ldi	r24, 0x80	; 128
    1cb2:	9f e3       	ldi	r25, 0x3F	; 63
    1cb4:	85 ce       	rjmp	.-758    	; 0x19c0 <__divsf3>

00001cb6 <__mulsf3>:
    1cb6:	0b d0       	rcall	.+22     	; 0x1cce <__mulsf3x>
    1cb8:	b9 cf       	rjmp	.-142    	; 0x1c2c <__fp_round>
    1cba:	aa df       	rcall	.-172    	; 0x1c10 <__fp_pscA>
    1cbc:	28 f0       	brcs	.+10     	; 0x1cc8 <__mulsf3+0x12>
    1cbe:	af df       	rcall	.-162    	; 0x1c1e <__fp_pscB>
    1cc0:	18 f0       	brcs	.+6      	; 0x1cc8 <__mulsf3+0x12>
    1cc2:	95 23       	and	r25, r21
    1cc4:	09 f0       	breq	.+2      	; 0x1cc8 <__mulsf3+0x12>
    1cc6:	76 cf       	rjmp	.-276    	; 0x1bb4 <__fp_inf>
    1cc8:	7b cf       	rjmp	.-266    	; 0x1bc0 <__fp_nan>
    1cca:	11 24       	eor	r1, r1
    1ccc:	e3 cf       	rjmp	.-58     	; 0x1c94 <__fp_szero>

00001cce <__mulsf3x>:
    1cce:	bf df       	rcall	.-130    	; 0x1c4e <__fp_split3>
    1cd0:	a0 f3       	brcs	.-24     	; 0x1cba <__mulsf3+0x4>

00001cd2 <__mulsf3_pse>:
    1cd2:	95 9f       	mul	r25, r21
    1cd4:	d1 f3       	breq	.-12     	; 0x1cca <__mulsf3+0x14>
    1cd6:	95 0f       	add	r25, r21
    1cd8:	50 e0       	ldi	r21, 0x00	; 0
    1cda:	55 1f       	adc	r21, r21
    1cdc:	62 9f       	mul	r22, r18
    1cde:	f0 01       	movw	r30, r0
    1ce0:	72 9f       	mul	r23, r18
    1ce2:	bb 27       	eor	r27, r27
    1ce4:	f0 0d       	add	r31, r0
    1ce6:	b1 1d       	adc	r27, r1
    1ce8:	63 9f       	mul	r22, r19
    1cea:	aa 27       	eor	r26, r26
    1cec:	f0 0d       	add	r31, r0
    1cee:	b1 1d       	adc	r27, r1
    1cf0:	aa 1f       	adc	r26, r26
    1cf2:	64 9f       	mul	r22, r20
    1cf4:	66 27       	eor	r22, r22
    1cf6:	b0 0d       	add	r27, r0
    1cf8:	a1 1d       	adc	r26, r1
    1cfa:	66 1f       	adc	r22, r22
    1cfc:	82 9f       	mul	r24, r18
    1cfe:	22 27       	eor	r18, r18
    1d00:	b0 0d       	add	r27, r0
    1d02:	a1 1d       	adc	r26, r1
    1d04:	62 1f       	adc	r22, r18
    1d06:	73 9f       	mul	r23, r19
    1d08:	b0 0d       	add	r27, r0
    1d0a:	a1 1d       	adc	r26, r1
    1d0c:	62 1f       	adc	r22, r18
    1d0e:	83 9f       	mul	r24, r19
    1d10:	a0 0d       	add	r26, r0
    1d12:	61 1d       	adc	r22, r1
    1d14:	22 1f       	adc	r18, r18
    1d16:	74 9f       	mul	r23, r20
    1d18:	33 27       	eor	r19, r19
    1d1a:	a0 0d       	add	r26, r0
    1d1c:	61 1d       	adc	r22, r1
    1d1e:	23 1f       	adc	r18, r19
    1d20:	84 9f       	mul	r24, r20
    1d22:	60 0d       	add	r22, r0
    1d24:	21 1d       	adc	r18, r1
    1d26:	82 2f       	mov	r24, r18
    1d28:	76 2f       	mov	r23, r22
    1d2a:	6a 2f       	mov	r22, r26
    1d2c:	11 24       	eor	r1, r1
    1d2e:	9f 57       	subi	r25, 0x7F	; 127
    1d30:	50 40       	sbci	r21, 0x00	; 0
    1d32:	8a f0       	brmi	.+34     	; 0x1d56 <__mulsf3_pse+0x84>
    1d34:	e1 f0       	breq	.+56     	; 0x1d6e <__mulsf3_pse+0x9c>
    1d36:	88 23       	and	r24, r24
    1d38:	4a f0       	brmi	.+18     	; 0x1d4c <__mulsf3_pse+0x7a>
    1d3a:	ee 0f       	add	r30, r30
    1d3c:	ff 1f       	adc	r31, r31
    1d3e:	bb 1f       	adc	r27, r27
    1d40:	66 1f       	adc	r22, r22
    1d42:	77 1f       	adc	r23, r23
    1d44:	88 1f       	adc	r24, r24
    1d46:	91 50       	subi	r25, 0x01	; 1
    1d48:	50 40       	sbci	r21, 0x00	; 0
    1d4a:	a9 f7       	brne	.-22     	; 0x1d36 <__mulsf3_pse+0x64>
    1d4c:	9e 3f       	cpi	r25, 0xFE	; 254
    1d4e:	51 05       	cpc	r21, r1
    1d50:	70 f0       	brcs	.+28     	; 0x1d6e <__mulsf3_pse+0x9c>
    1d52:	30 cf       	rjmp	.-416    	; 0x1bb4 <__fp_inf>
    1d54:	9f cf       	rjmp	.-194    	; 0x1c94 <__fp_szero>
    1d56:	5f 3f       	cpi	r21, 0xFF	; 255
    1d58:	ec f3       	brlt	.-6      	; 0x1d54 <__mulsf3_pse+0x82>
    1d5a:	98 3e       	cpi	r25, 0xE8	; 232
    1d5c:	dc f3       	brlt	.-10     	; 0x1d54 <__mulsf3_pse+0x82>
    1d5e:	86 95       	lsr	r24
    1d60:	77 95       	ror	r23
    1d62:	67 95       	ror	r22
    1d64:	b7 95       	ror	r27
    1d66:	f7 95       	ror	r31
    1d68:	e7 95       	ror	r30
    1d6a:	9f 5f       	subi	r25, 0xFF	; 255
    1d6c:	c1 f7       	brne	.-16     	; 0x1d5e <__mulsf3_pse+0x8c>
    1d6e:	fe 2b       	or	r31, r30
    1d70:	88 0f       	add	r24, r24
    1d72:	91 1d       	adc	r25, r1
    1d74:	96 95       	lsr	r25
    1d76:	87 95       	ror	r24
    1d78:	97 f9       	bld	r25, 7
    1d7a:	08 95       	ret
    1d7c:	11 f4       	brne	.+4      	; 0x1d82 <__mulsf3_pse+0xb0>
    1d7e:	0e f4       	brtc	.+2      	; 0x1d82 <__mulsf3_pse+0xb0>
    1d80:	1f cf       	rjmp	.-450    	; 0x1bc0 <__fp_nan>
    1d82:	41 c0       	rjmp	.+130    	; 0x1e06 <__fp_mpack>

00001d84 <sqrt>:
    1d84:	6c df       	rcall	.-296    	; 0x1c5e <__fp_splitA>
    1d86:	d0 f3       	brcs	.-12     	; 0x1d7c <__mulsf3_pse+0xaa>
    1d88:	99 23       	and	r25, r25
    1d8a:	d9 f3       	breq	.-10     	; 0x1d82 <__mulsf3_pse+0xb0>
    1d8c:	ce f3       	brts	.-14     	; 0x1d80 <__mulsf3_pse+0xae>
    1d8e:	9f 57       	subi	r25, 0x7F	; 127
    1d90:	55 0b       	sbc	r21, r21
    1d92:	87 ff       	sbrs	r24, 7
    1d94:	46 d0       	rcall	.+140    	; 0x1e22 <__fp_norm2>
    1d96:	00 24       	eor	r0, r0
    1d98:	a0 e6       	ldi	r26, 0x60	; 96
    1d9a:	40 ea       	ldi	r20, 0xA0	; 160
    1d9c:	90 01       	movw	r18, r0
    1d9e:	80 58       	subi	r24, 0x80	; 128
    1da0:	56 95       	lsr	r21
    1da2:	97 95       	ror	r25
    1da4:	28 f4       	brcc	.+10     	; 0x1db0 <sqrt+0x2c>
    1da6:	80 5c       	subi	r24, 0xC0	; 192
    1da8:	66 0f       	add	r22, r22
    1daa:	77 1f       	adc	r23, r23
    1dac:	88 1f       	adc	r24, r24
    1dae:	20 f0       	brcs	.+8      	; 0x1db8 <sqrt+0x34>
    1db0:	26 17       	cp	r18, r22
    1db2:	37 07       	cpc	r19, r23
    1db4:	48 07       	cpc	r20, r24
    1db6:	30 f4       	brcc	.+12     	; 0x1dc4 <sqrt+0x40>
    1db8:	62 1b       	sub	r22, r18
    1dba:	73 0b       	sbc	r23, r19
    1dbc:	84 0b       	sbc	r24, r20
    1dbe:	20 29       	or	r18, r0
    1dc0:	31 29       	or	r19, r1
    1dc2:	4a 2b       	or	r20, r26
    1dc4:	a6 95       	lsr	r26
    1dc6:	17 94       	ror	r1
    1dc8:	07 94       	ror	r0
    1dca:	20 25       	eor	r18, r0
    1dcc:	31 25       	eor	r19, r1
    1dce:	4a 27       	eor	r20, r26
    1dd0:	58 f7       	brcc	.-42     	; 0x1da8 <sqrt+0x24>
    1dd2:	66 0f       	add	r22, r22
    1dd4:	77 1f       	adc	r23, r23
    1dd6:	88 1f       	adc	r24, r24
    1dd8:	20 f0       	brcs	.+8      	; 0x1de2 <sqrt+0x5e>
    1dda:	26 17       	cp	r18, r22
    1ddc:	37 07       	cpc	r19, r23
    1dde:	48 07       	cpc	r20, r24
    1de0:	30 f4       	brcc	.+12     	; 0x1dee <sqrt+0x6a>
    1de2:	62 0b       	sbc	r22, r18
    1de4:	73 0b       	sbc	r23, r19
    1de6:	84 0b       	sbc	r24, r20
    1de8:	20 0d       	add	r18, r0
    1dea:	31 1d       	adc	r19, r1
    1dec:	41 1d       	adc	r20, r1
    1dee:	a0 95       	com	r26
    1df0:	81 f7       	brne	.-32     	; 0x1dd2 <sqrt+0x4e>
    1df2:	b9 01       	movw	r22, r18
    1df4:	84 2f       	mov	r24, r20
    1df6:	91 58       	subi	r25, 0x81	; 129
    1df8:	88 0f       	add	r24, r24
    1dfa:	96 95       	lsr	r25
    1dfc:	87 95       	ror	r24
    1dfe:	08 95       	ret

00001e00 <square>:
    1e00:	9b 01       	movw	r18, r22
    1e02:	ac 01       	movw	r20, r24
    1e04:	58 cf       	rjmp	.-336    	; 0x1cb6 <__mulsf3>

00001e06 <__fp_mpack>:
    1e06:	9f 3f       	cpi	r25, 0xFF	; 255
    1e08:	31 f0       	breq	.+12     	; 0x1e16 <__fp_mpack_finite+0xc>

00001e0a <__fp_mpack_finite>:
    1e0a:	91 50       	subi	r25, 0x01	; 1
    1e0c:	20 f4       	brcc	.+8      	; 0x1e16 <__fp_mpack_finite+0xc>
    1e0e:	87 95       	ror	r24
    1e10:	77 95       	ror	r23
    1e12:	67 95       	ror	r22
    1e14:	b7 95       	ror	r27
    1e16:	88 0f       	add	r24, r24
    1e18:	91 1d       	adc	r25, r1
    1e1a:	96 95       	lsr	r25
    1e1c:	87 95       	ror	r24
    1e1e:	97 f9       	bld	r25, 7
    1e20:	08 95       	ret

00001e22 <__fp_norm2>:
    1e22:	91 50       	subi	r25, 0x01	; 1
    1e24:	50 40       	sbci	r21, 0x00	; 0
    1e26:	66 0f       	add	r22, r22
    1e28:	77 1f       	adc	r23, r23
    1e2a:	88 1f       	adc	r24, r24
    1e2c:	d2 f7       	brpl	.-12     	; 0x1e22 <__fp_norm2>
    1e2e:	08 95       	ret

00001e30 <vfprintf>:
    1e30:	2f 92       	push	r2
    1e32:	3f 92       	push	r3
    1e34:	4f 92       	push	r4
    1e36:	5f 92       	push	r5
    1e38:	6f 92       	push	r6
    1e3a:	7f 92       	push	r7
    1e3c:	8f 92       	push	r8
    1e3e:	9f 92       	push	r9
    1e40:	af 92       	push	r10
    1e42:	bf 92       	push	r11
    1e44:	cf 92       	push	r12
    1e46:	df 92       	push	r13
    1e48:	ef 92       	push	r14
    1e4a:	ff 92       	push	r15
    1e4c:	0f 93       	push	r16
    1e4e:	1f 93       	push	r17
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
    1e54:	cd b7       	in	r28, 0x3d	; 61
    1e56:	de b7       	in	r29, 0x3e	; 62
    1e58:	60 97       	sbiw	r28, 0x10	; 16
    1e5a:	0f b6       	in	r0, 0x3f	; 63
    1e5c:	f8 94       	cli
    1e5e:	de bf       	out	0x3e, r29	; 62
    1e60:	0f be       	out	0x3f, r0	; 63
    1e62:	cd bf       	out	0x3d, r28	; 61
    1e64:	7c 01       	movw	r14, r24
    1e66:	1b 01       	movw	r2, r22
    1e68:	6a 01       	movw	r12, r20
    1e6a:	fc 01       	movw	r30, r24
    1e6c:	17 82       	std	Z+7, r1	; 0x07
    1e6e:	16 82       	std	Z+6, r1	; 0x06
    1e70:	83 81       	ldd	r24, Z+3	; 0x03
    1e72:	81 ff       	sbrs	r24, 1
    1e74:	2a c3       	rjmp	.+1620   	; 0x24ca <__stack+0x2cb>
    1e76:	9e 01       	movw	r18, r28
    1e78:	2f 5f       	subi	r18, 0xFF	; 255
    1e7a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e7c:	39 01       	movw	r6, r18
    1e7e:	f7 01       	movw	r30, r14
    1e80:	93 81       	ldd	r25, Z+3	; 0x03
    1e82:	f1 01       	movw	r30, r2
    1e84:	93 fd       	sbrc	r25, 3
    1e86:	85 91       	lpm	r24, Z+
    1e88:	93 ff       	sbrs	r25, 3
    1e8a:	81 91       	ld	r24, Z+
    1e8c:	1f 01       	movw	r2, r30
    1e8e:	88 23       	and	r24, r24
    1e90:	09 f4       	brne	.+2      	; 0x1e94 <vfprintf+0x64>
    1e92:	17 c3       	rjmp	.+1582   	; 0x24c2 <__stack+0x2c3>
    1e94:	85 32       	cpi	r24, 0x25	; 37
    1e96:	39 f4       	brne	.+14     	; 0x1ea6 <vfprintf+0x76>
    1e98:	93 fd       	sbrc	r25, 3
    1e9a:	85 91       	lpm	r24, Z+
    1e9c:	93 ff       	sbrs	r25, 3
    1e9e:	81 91       	ld	r24, Z+
    1ea0:	1f 01       	movw	r2, r30
    1ea2:	85 32       	cpi	r24, 0x25	; 37
    1ea4:	31 f4       	brne	.+12     	; 0x1eb2 <vfprintf+0x82>
    1ea6:	b7 01       	movw	r22, r14
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	aa d4       	rcall	.+2388   	; 0x2800 <fputc>
    1eac:	56 01       	movw	r10, r12
    1eae:	65 01       	movw	r12, r10
    1eb0:	e6 cf       	rjmp	.-52     	; 0x1e7e <vfprintf+0x4e>
    1eb2:	10 e0       	ldi	r17, 0x00	; 0
    1eb4:	51 2c       	mov	r5, r1
    1eb6:	91 2c       	mov	r9, r1
    1eb8:	ff e1       	ldi	r31, 0x1F	; 31
    1eba:	f9 15       	cp	r31, r9
    1ebc:	d8 f0       	brcs	.+54     	; 0x1ef4 <vfprintf+0xc4>
    1ebe:	8b 32       	cpi	r24, 0x2B	; 43
    1ec0:	79 f0       	breq	.+30     	; 0x1ee0 <vfprintf+0xb0>
    1ec2:	38 f4       	brcc	.+14     	; 0x1ed2 <vfprintf+0xa2>
    1ec4:	80 32       	cpi	r24, 0x20	; 32
    1ec6:	79 f0       	breq	.+30     	; 0x1ee6 <vfprintf+0xb6>
    1ec8:	83 32       	cpi	r24, 0x23	; 35
    1eca:	a1 f4       	brne	.+40     	; 0x1ef4 <vfprintf+0xc4>
    1ecc:	f9 2d       	mov	r31, r9
    1ece:	f0 61       	ori	r31, 0x10	; 16
    1ed0:	2e c0       	rjmp	.+92     	; 0x1f2e <vfprintf+0xfe>
    1ed2:	8d 32       	cpi	r24, 0x2D	; 45
    1ed4:	61 f0       	breq	.+24     	; 0x1eee <vfprintf+0xbe>
    1ed6:	80 33       	cpi	r24, 0x30	; 48
    1ed8:	69 f4       	brne	.+26     	; 0x1ef4 <vfprintf+0xc4>
    1eda:	29 2d       	mov	r18, r9
    1edc:	21 60       	ori	r18, 0x01	; 1
    1ede:	2d c0       	rjmp	.+90     	; 0x1f3a <vfprintf+0x10a>
    1ee0:	39 2d       	mov	r19, r9
    1ee2:	32 60       	ori	r19, 0x02	; 2
    1ee4:	93 2e       	mov	r9, r19
    1ee6:	89 2d       	mov	r24, r9
    1ee8:	84 60       	ori	r24, 0x04	; 4
    1eea:	98 2e       	mov	r9, r24
    1eec:	2a c0       	rjmp	.+84     	; 0x1f42 <vfprintf+0x112>
    1eee:	e9 2d       	mov	r30, r9
    1ef0:	e8 60       	ori	r30, 0x08	; 8
    1ef2:	15 c0       	rjmp	.+42     	; 0x1f1e <vfprintf+0xee>
    1ef4:	97 fc       	sbrc	r9, 7
    1ef6:	2d c0       	rjmp	.+90     	; 0x1f52 <vfprintf+0x122>
    1ef8:	20 ed       	ldi	r18, 0xD0	; 208
    1efa:	28 0f       	add	r18, r24
    1efc:	2a 30       	cpi	r18, 0x0A	; 10
    1efe:	88 f4       	brcc	.+34     	; 0x1f22 <vfprintf+0xf2>
    1f00:	96 fe       	sbrs	r9, 6
    1f02:	06 c0       	rjmp	.+12     	; 0x1f10 <vfprintf+0xe0>
    1f04:	3a e0       	ldi	r19, 0x0A	; 10
    1f06:	13 9f       	mul	r17, r19
    1f08:	20 0d       	add	r18, r0
    1f0a:	11 24       	eor	r1, r1
    1f0c:	12 2f       	mov	r17, r18
    1f0e:	19 c0       	rjmp	.+50     	; 0x1f42 <vfprintf+0x112>
    1f10:	8a e0       	ldi	r24, 0x0A	; 10
    1f12:	58 9e       	mul	r5, r24
    1f14:	20 0d       	add	r18, r0
    1f16:	11 24       	eor	r1, r1
    1f18:	52 2e       	mov	r5, r18
    1f1a:	e9 2d       	mov	r30, r9
    1f1c:	e0 62       	ori	r30, 0x20	; 32
    1f1e:	9e 2e       	mov	r9, r30
    1f20:	10 c0       	rjmp	.+32     	; 0x1f42 <vfprintf+0x112>
    1f22:	8e 32       	cpi	r24, 0x2E	; 46
    1f24:	31 f4       	brne	.+12     	; 0x1f32 <vfprintf+0x102>
    1f26:	96 fc       	sbrc	r9, 6
    1f28:	cc c2       	rjmp	.+1432   	; 0x24c2 <__stack+0x2c3>
    1f2a:	f9 2d       	mov	r31, r9
    1f2c:	f0 64       	ori	r31, 0x40	; 64
    1f2e:	9f 2e       	mov	r9, r31
    1f30:	08 c0       	rjmp	.+16     	; 0x1f42 <vfprintf+0x112>
    1f32:	8c 36       	cpi	r24, 0x6C	; 108
    1f34:	21 f4       	brne	.+8      	; 0x1f3e <vfprintf+0x10e>
    1f36:	29 2d       	mov	r18, r9
    1f38:	20 68       	ori	r18, 0x80	; 128
    1f3a:	92 2e       	mov	r9, r18
    1f3c:	02 c0       	rjmp	.+4      	; 0x1f42 <vfprintf+0x112>
    1f3e:	88 36       	cpi	r24, 0x68	; 104
    1f40:	41 f4       	brne	.+16     	; 0x1f52 <vfprintf+0x122>
    1f42:	f1 01       	movw	r30, r2
    1f44:	93 fd       	sbrc	r25, 3
    1f46:	85 91       	lpm	r24, Z+
    1f48:	93 ff       	sbrs	r25, 3
    1f4a:	81 91       	ld	r24, Z+
    1f4c:	1f 01       	movw	r2, r30
    1f4e:	81 11       	cpse	r24, r1
    1f50:	b3 cf       	rjmp	.-154    	; 0x1eb8 <vfprintf+0x88>
    1f52:	9b eb       	ldi	r25, 0xBB	; 187
    1f54:	98 0f       	add	r25, r24
    1f56:	93 30       	cpi	r25, 0x03	; 3
    1f58:	20 f4       	brcc	.+8      	; 0x1f62 <vfprintf+0x132>
    1f5a:	99 2d       	mov	r25, r9
    1f5c:	90 61       	ori	r25, 0x10	; 16
    1f5e:	80 5e       	subi	r24, 0xE0	; 224
    1f60:	07 c0       	rjmp	.+14     	; 0x1f70 <vfprintf+0x140>
    1f62:	9b e9       	ldi	r25, 0x9B	; 155
    1f64:	98 0f       	add	r25, r24
    1f66:	93 30       	cpi	r25, 0x03	; 3
    1f68:	08 f0       	brcs	.+2      	; 0x1f6c <vfprintf+0x13c>
    1f6a:	59 c1       	rjmp	.+690    	; 0x221e <__stack+0x1f>
    1f6c:	99 2d       	mov	r25, r9
    1f6e:	9f 7e       	andi	r25, 0xEF	; 239
    1f70:	96 ff       	sbrs	r25, 6
    1f72:	16 e0       	ldi	r17, 0x06	; 6
    1f74:	9f 73       	andi	r25, 0x3F	; 63
    1f76:	99 2e       	mov	r9, r25
    1f78:	85 36       	cpi	r24, 0x65	; 101
    1f7a:	19 f4       	brne	.+6      	; 0x1f82 <vfprintf+0x152>
    1f7c:	90 64       	ori	r25, 0x40	; 64
    1f7e:	99 2e       	mov	r9, r25
    1f80:	08 c0       	rjmp	.+16     	; 0x1f92 <vfprintf+0x162>
    1f82:	86 36       	cpi	r24, 0x66	; 102
    1f84:	21 f4       	brne	.+8      	; 0x1f8e <vfprintf+0x15e>
    1f86:	39 2f       	mov	r19, r25
    1f88:	30 68       	ori	r19, 0x80	; 128
    1f8a:	93 2e       	mov	r9, r19
    1f8c:	02 c0       	rjmp	.+4      	; 0x1f92 <vfprintf+0x162>
    1f8e:	11 11       	cpse	r17, r1
    1f90:	11 50       	subi	r17, 0x01	; 1
    1f92:	97 fe       	sbrs	r9, 7
    1f94:	07 c0       	rjmp	.+14     	; 0x1fa4 <vfprintf+0x174>
    1f96:	1c 33       	cpi	r17, 0x3C	; 60
    1f98:	50 f4       	brcc	.+20     	; 0x1fae <vfprintf+0x17e>
    1f9a:	44 24       	eor	r4, r4
    1f9c:	43 94       	inc	r4
    1f9e:	41 0e       	add	r4, r17
    1fa0:	27 e0       	ldi	r18, 0x07	; 7
    1fa2:	0b c0       	rjmp	.+22     	; 0x1fba <vfprintf+0x18a>
    1fa4:	18 30       	cpi	r17, 0x08	; 8
    1fa6:	38 f0       	brcs	.+14     	; 0x1fb6 <vfprintf+0x186>
    1fa8:	27 e0       	ldi	r18, 0x07	; 7
    1faa:	17 e0       	ldi	r17, 0x07	; 7
    1fac:	05 c0       	rjmp	.+10     	; 0x1fb8 <vfprintf+0x188>
    1fae:	27 e0       	ldi	r18, 0x07	; 7
    1fb0:	9c e3       	ldi	r25, 0x3C	; 60
    1fb2:	49 2e       	mov	r4, r25
    1fb4:	02 c0       	rjmp	.+4      	; 0x1fba <vfprintf+0x18a>
    1fb6:	21 2f       	mov	r18, r17
    1fb8:	41 2c       	mov	r4, r1
    1fba:	56 01       	movw	r10, r12
    1fbc:	84 e0       	ldi	r24, 0x04	; 4
    1fbe:	a8 0e       	add	r10, r24
    1fc0:	b1 1c       	adc	r11, r1
    1fc2:	f6 01       	movw	r30, r12
    1fc4:	60 81       	ld	r22, Z
    1fc6:	71 81       	ldd	r23, Z+1	; 0x01
    1fc8:	82 81       	ldd	r24, Z+2	; 0x02
    1fca:	93 81       	ldd	r25, Z+3	; 0x03
    1fcc:	04 2d       	mov	r16, r4
    1fce:	a3 01       	movw	r20, r6
    1fd0:	df d2       	rcall	.+1470   	; 0x2590 <__ftoa_engine>
    1fd2:	6c 01       	movw	r12, r24
    1fd4:	f9 81       	ldd	r31, Y+1	; 0x01
    1fd6:	fc 87       	std	Y+12, r31	; 0x0c
    1fd8:	f0 ff       	sbrs	r31, 0
    1fda:	02 c0       	rjmp	.+4      	; 0x1fe0 <vfprintf+0x1b0>
    1fdc:	f3 ff       	sbrs	r31, 3
    1fde:	06 c0       	rjmp	.+12     	; 0x1fec <vfprintf+0x1bc>
    1fe0:	91 fc       	sbrc	r9, 1
    1fe2:	06 c0       	rjmp	.+12     	; 0x1ff0 <vfprintf+0x1c0>
    1fe4:	92 fe       	sbrs	r9, 2
    1fe6:	06 c0       	rjmp	.+12     	; 0x1ff4 <vfprintf+0x1c4>
    1fe8:	00 e2       	ldi	r16, 0x20	; 32
    1fea:	05 c0       	rjmp	.+10     	; 0x1ff6 <vfprintf+0x1c6>
    1fec:	0d e2       	ldi	r16, 0x2D	; 45
    1fee:	03 c0       	rjmp	.+6      	; 0x1ff6 <vfprintf+0x1c6>
    1ff0:	0b e2       	ldi	r16, 0x2B	; 43
    1ff2:	01 c0       	rjmp	.+2      	; 0x1ff6 <vfprintf+0x1c6>
    1ff4:	00 e0       	ldi	r16, 0x00	; 0
    1ff6:	8c 85       	ldd	r24, Y+12	; 0x0c
    1ff8:	8c 70       	andi	r24, 0x0C	; 12
    1ffa:	19 f0       	breq	.+6      	; 0x2002 <vfprintf+0x1d2>
    1ffc:	01 11       	cpse	r16, r1
    1ffe:	43 c2       	rjmp	.+1158   	; 0x2486 <__stack+0x287>
    2000:	80 c2       	rjmp	.+1280   	; 0x2502 <__stack+0x303>
    2002:	97 fe       	sbrs	r9, 7
    2004:	10 c0       	rjmp	.+32     	; 0x2026 <vfprintf+0x1f6>
    2006:	4c 0c       	add	r4, r12
    2008:	fc 85       	ldd	r31, Y+12	; 0x0c
    200a:	f4 ff       	sbrs	r31, 4
    200c:	04 c0       	rjmp	.+8      	; 0x2016 <vfprintf+0x1e6>
    200e:	8a 81       	ldd	r24, Y+2	; 0x02
    2010:	81 33       	cpi	r24, 0x31	; 49
    2012:	09 f4       	brne	.+2      	; 0x2016 <vfprintf+0x1e6>
    2014:	4a 94       	dec	r4
    2016:	14 14       	cp	r1, r4
    2018:	74 f5       	brge	.+92     	; 0x2076 <vfprintf+0x246>
    201a:	28 e0       	ldi	r18, 0x08	; 8
    201c:	24 15       	cp	r18, r4
    201e:	78 f5       	brcc	.+94     	; 0x207e <vfprintf+0x24e>
    2020:	88 e0       	ldi	r24, 0x08	; 8
    2022:	48 2e       	mov	r4, r24
    2024:	2c c0       	rjmp	.+88     	; 0x207e <vfprintf+0x24e>
    2026:	96 fc       	sbrc	r9, 6
    2028:	2a c0       	rjmp	.+84     	; 0x207e <vfprintf+0x24e>
    202a:	81 2f       	mov	r24, r17
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	8c 15       	cp	r24, r12
    2030:	9d 05       	cpc	r25, r13
    2032:	9c f0       	brlt	.+38     	; 0x205a <vfprintf+0x22a>
    2034:	3c ef       	ldi	r19, 0xFC	; 252
    2036:	c3 16       	cp	r12, r19
    2038:	3f ef       	ldi	r19, 0xFF	; 255
    203a:	d3 06       	cpc	r13, r19
    203c:	74 f0       	brlt	.+28     	; 0x205a <vfprintf+0x22a>
    203e:	89 2d       	mov	r24, r9
    2040:	80 68       	ori	r24, 0x80	; 128
    2042:	98 2e       	mov	r9, r24
    2044:	0a c0       	rjmp	.+20     	; 0x205a <vfprintf+0x22a>
    2046:	e2 e0       	ldi	r30, 0x02	; 2
    2048:	f0 e0       	ldi	r31, 0x00	; 0
    204a:	ec 0f       	add	r30, r28
    204c:	fd 1f       	adc	r31, r29
    204e:	e1 0f       	add	r30, r17
    2050:	f1 1d       	adc	r31, r1
    2052:	80 81       	ld	r24, Z
    2054:	80 33       	cpi	r24, 0x30	; 48
    2056:	19 f4       	brne	.+6      	; 0x205e <vfprintf+0x22e>
    2058:	11 50       	subi	r17, 0x01	; 1
    205a:	11 11       	cpse	r17, r1
    205c:	f4 cf       	rjmp	.-24     	; 0x2046 <vfprintf+0x216>
    205e:	97 fe       	sbrs	r9, 7
    2060:	0e c0       	rjmp	.+28     	; 0x207e <vfprintf+0x24e>
    2062:	44 24       	eor	r4, r4
    2064:	43 94       	inc	r4
    2066:	41 0e       	add	r4, r17
    2068:	81 2f       	mov	r24, r17
    206a:	90 e0       	ldi	r25, 0x00	; 0
    206c:	c8 16       	cp	r12, r24
    206e:	d9 06       	cpc	r13, r25
    2070:	2c f4       	brge	.+10     	; 0x207c <vfprintf+0x24c>
    2072:	1c 19       	sub	r17, r12
    2074:	04 c0       	rjmp	.+8      	; 0x207e <vfprintf+0x24e>
    2076:	44 24       	eor	r4, r4
    2078:	43 94       	inc	r4
    207a:	01 c0       	rjmp	.+2      	; 0x207e <vfprintf+0x24e>
    207c:	10 e0       	ldi	r17, 0x00	; 0
    207e:	97 fe       	sbrs	r9, 7
    2080:	06 c0       	rjmp	.+12     	; 0x208e <vfprintf+0x25e>
    2082:	1c 14       	cp	r1, r12
    2084:	1d 04       	cpc	r1, r13
    2086:	34 f4       	brge	.+12     	; 0x2094 <vfprintf+0x264>
    2088:	c6 01       	movw	r24, r12
    208a:	01 96       	adiw	r24, 0x01	; 1
    208c:	05 c0       	rjmp	.+10     	; 0x2098 <vfprintf+0x268>
    208e:	85 e0       	ldi	r24, 0x05	; 5
    2090:	90 e0       	ldi	r25, 0x00	; 0
    2092:	02 c0       	rjmp	.+4      	; 0x2098 <vfprintf+0x268>
    2094:	81 e0       	ldi	r24, 0x01	; 1
    2096:	90 e0       	ldi	r25, 0x00	; 0
    2098:	01 11       	cpse	r16, r1
    209a:	01 96       	adiw	r24, 0x01	; 1
    209c:	11 23       	and	r17, r17
    209e:	31 f0       	breq	.+12     	; 0x20ac <vfprintf+0x27c>
    20a0:	21 2f       	mov	r18, r17
    20a2:	30 e0       	ldi	r19, 0x00	; 0
    20a4:	2f 5f       	subi	r18, 0xFF	; 255
    20a6:	3f 4f       	sbci	r19, 0xFF	; 255
    20a8:	82 0f       	add	r24, r18
    20aa:	93 1f       	adc	r25, r19
    20ac:	25 2d       	mov	r18, r5
    20ae:	30 e0       	ldi	r19, 0x00	; 0
    20b0:	82 17       	cp	r24, r18
    20b2:	93 07       	cpc	r25, r19
    20b4:	14 f4       	brge	.+4      	; 0x20ba <vfprintf+0x28a>
    20b6:	58 1a       	sub	r5, r24
    20b8:	01 c0       	rjmp	.+2      	; 0x20bc <vfprintf+0x28c>
    20ba:	51 2c       	mov	r5, r1
    20bc:	89 2d       	mov	r24, r9
    20be:	89 70       	andi	r24, 0x09	; 9
    20c0:	41 f4       	brne	.+16     	; 0x20d2 <vfprintf+0x2a2>
    20c2:	55 20       	and	r5, r5
    20c4:	31 f0       	breq	.+12     	; 0x20d2 <vfprintf+0x2a2>
    20c6:	b7 01       	movw	r22, r14
    20c8:	80 e2       	ldi	r24, 0x20	; 32
    20ca:	90 e0       	ldi	r25, 0x00	; 0
    20cc:	99 d3       	rcall	.+1842   	; 0x2800 <fputc>
    20ce:	5a 94       	dec	r5
    20d0:	f8 cf       	rjmp	.-16     	; 0x20c2 <vfprintf+0x292>
    20d2:	00 23       	and	r16, r16
    20d4:	21 f0       	breq	.+8      	; 0x20de <vfprintf+0x2ae>
    20d6:	b7 01       	movw	r22, r14
    20d8:	80 2f       	mov	r24, r16
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	91 d3       	rcall	.+1826   	; 0x2800 <fputc>
    20de:	93 fc       	sbrc	r9, 3
    20e0:	08 c0       	rjmp	.+16     	; 0x20f2 <vfprintf+0x2c2>
    20e2:	55 20       	and	r5, r5
    20e4:	31 f0       	breq	.+12     	; 0x20f2 <vfprintf+0x2c2>
    20e6:	b7 01       	movw	r22, r14
    20e8:	80 e3       	ldi	r24, 0x30	; 48
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	89 d3       	rcall	.+1810   	; 0x2800 <fputc>
    20ee:	5a 94       	dec	r5
    20f0:	f8 cf       	rjmp	.-16     	; 0x20e2 <vfprintf+0x2b2>
    20f2:	97 fe       	sbrs	r9, 7
    20f4:	4a c0       	rjmp	.+148    	; 0x218a <vfprintf+0x35a>
    20f6:	46 01       	movw	r8, r12
    20f8:	d7 fe       	sbrs	r13, 7
    20fa:	02 c0       	rjmp	.+4      	; 0x2100 <vfprintf+0x2d0>
    20fc:	81 2c       	mov	r8, r1
    20fe:	91 2c       	mov	r9, r1
    2100:	c6 01       	movw	r24, r12
    2102:	88 19       	sub	r24, r8
    2104:	99 09       	sbc	r25, r9
    2106:	f3 01       	movw	r30, r6
    2108:	e8 0f       	add	r30, r24
    210a:	f9 1f       	adc	r31, r25
    210c:	fe 87       	std	Y+14, r31	; 0x0e
    210e:	ed 87       	std	Y+13, r30	; 0x0d
    2110:	96 01       	movw	r18, r12
    2112:	24 19       	sub	r18, r4
    2114:	31 09       	sbc	r19, r1
    2116:	38 8b       	std	Y+16, r19	; 0x10
    2118:	2f 87       	std	Y+15, r18	; 0x0f
    211a:	01 2f       	mov	r16, r17
    211c:	10 e0       	ldi	r17, 0x00	; 0
    211e:	11 95       	neg	r17
    2120:	01 95       	neg	r16
    2122:	11 09       	sbc	r17, r1
    2124:	3f ef       	ldi	r19, 0xFF	; 255
    2126:	83 16       	cp	r8, r19
    2128:	93 06       	cpc	r9, r19
    212a:	21 f4       	brne	.+8      	; 0x2134 <vfprintf+0x304>
    212c:	b7 01       	movw	r22, r14
    212e:	8e e2       	ldi	r24, 0x2E	; 46
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	66 d3       	rcall	.+1740   	; 0x2800 <fputc>
    2134:	c8 14       	cp	r12, r8
    2136:	d9 04       	cpc	r13, r9
    2138:	4c f0       	brlt	.+18     	; 0x214c <vfprintf+0x31c>
    213a:	8f 85       	ldd	r24, Y+15	; 0x0f
    213c:	98 89       	ldd	r25, Y+16	; 0x10
    213e:	88 15       	cp	r24, r8
    2140:	99 05       	cpc	r25, r9
    2142:	24 f4       	brge	.+8      	; 0x214c <vfprintf+0x31c>
    2144:	ed 85       	ldd	r30, Y+13	; 0x0d
    2146:	fe 85       	ldd	r31, Y+14	; 0x0e
    2148:	81 81       	ldd	r24, Z+1	; 0x01
    214a:	01 c0       	rjmp	.+2      	; 0x214e <vfprintf+0x31e>
    214c:	80 e3       	ldi	r24, 0x30	; 48
    214e:	f1 e0       	ldi	r31, 0x01	; 1
    2150:	8f 1a       	sub	r8, r31
    2152:	91 08       	sbc	r9, r1
    2154:	2d 85       	ldd	r18, Y+13	; 0x0d
    2156:	3e 85       	ldd	r19, Y+14	; 0x0e
    2158:	2f 5f       	subi	r18, 0xFF	; 255
    215a:	3f 4f       	sbci	r19, 0xFF	; 255
    215c:	3e 87       	std	Y+14, r19	; 0x0e
    215e:	2d 87       	std	Y+13, r18	; 0x0d
    2160:	80 16       	cp	r8, r16
    2162:	91 06       	cpc	r9, r17
    2164:	24 f0       	brlt	.+8      	; 0x216e <vfprintf+0x33e>
    2166:	b7 01       	movw	r22, r14
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	4a d3       	rcall	.+1684   	; 0x2800 <fputc>
    216c:	db cf       	rjmp	.-74     	; 0x2124 <vfprintf+0x2f4>
    216e:	c8 14       	cp	r12, r8
    2170:	d9 04       	cpc	r13, r9
    2172:	41 f4       	brne	.+16     	; 0x2184 <vfprintf+0x354>
    2174:	9a 81       	ldd	r25, Y+2	; 0x02
    2176:	96 33       	cpi	r25, 0x36	; 54
    2178:	20 f4       	brcc	.+8      	; 0x2182 <vfprintf+0x352>
    217a:	95 33       	cpi	r25, 0x35	; 53
    217c:	19 f4       	brne	.+6      	; 0x2184 <vfprintf+0x354>
    217e:	3c 85       	ldd	r19, Y+12	; 0x0c
    2180:	34 ff       	sbrs	r19, 4
    2182:	81 e3       	ldi	r24, 0x31	; 49
    2184:	b7 01       	movw	r22, r14
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	48 c0       	rjmp	.+144    	; 0x221a <__stack+0x1b>
    218a:	8a 81       	ldd	r24, Y+2	; 0x02
    218c:	81 33       	cpi	r24, 0x31	; 49
    218e:	19 f0       	breq	.+6      	; 0x2196 <vfprintf+0x366>
    2190:	9c 85       	ldd	r25, Y+12	; 0x0c
    2192:	9f 7e       	andi	r25, 0xEF	; 239
    2194:	9c 87       	std	Y+12, r25	; 0x0c
    2196:	b7 01       	movw	r22, r14
    2198:	90 e0       	ldi	r25, 0x00	; 0
    219a:	32 d3       	rcall	.+1636   	; 0x2800 <fputc>
    219c:	11 11       	cpse	r17, r1
    219e:	05 c0       	rjmp	.+10     	; 0x21aa <vfprintf+0x37a>
    21a0:	94 fc       	sbrc	r9, 4
    21a2:	16 c0       	rjmp	.+44     	; 0x21d0 <vfprintf+0x3a0>
    21a4:	85 e6       	ldi	r24, 0x65	; 101
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	15 c0       	rjmp	.+42     	; 0x21d4 <vfprintf+0x3a4>
    21aa:	b7 01       	movw	r22, r14
    21ac:	8e e2       	ldi	r24, 0x2E	; 46
    21ae:	90 e0       	ldi	r25, 0x00	; 0
    21b0:	27 d3       	rcall	.+1614   	; 0x2800 <fputc>
    21b2:	1e 5f       	subi	r17, 0xFE	; 254
    21b4:	82 e0       	ldi	r24, 0x02	; 2
    21b6:	01 e0       	ldi	r16, 0x01	; 1
    21b8:	08 0f       	add	r16, r24
    21ba:	f3 01       	movw	r30, r6
    21bc:	e8 0f       	add	r30, r24
    21be:	f1 1d       	adc	r31, r1
    21c0:	80 81       	ld	r24, Z
    21c2:	b7 01       	movw	r22, r14
    21c4:	90 e0       	ldi	r25, 0x00	; 0
    21c6:	1c d3       	rcall	.+1592   	; 0x2800 <fputc>
    21c8:	80 2f       	mov	r24, r16
    21ca:	01 13       	cpse	r16, r17
    21cc:	f4 cf       	rjmp	.-24     	; 0x21b6 <vfprintf+0x386>
    21ce:	e8 cf       	rjmp	.-48     	; 0x21a0 <vfprintf+0x370>
    21d0:	85 e4       	ldi	r24, 0x45	; 69
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	b7 01       	movw	r22, r14
    21d6:	14 d3       	rcall	.+1576   	; 0x2800 <fputc>
    21d8:	d7 fc       	sbrc	r13, 7
    21da:	06 c0       	rjmp	.+12     	; 0x21e8 <vfprintf+0x3b8>
    21dc:	c1 14       	cp	r12, r1
    21de:	d1 04       	cpc	r13, r1
    21e0:	41 f4       	brne	.+16     	; 0x21f2 <vfprintf+0x3c2>
    21e2:	ec 85       	ldd	r30, Y+12	; 0x0c
    21e4:	e4 ff       	sbrs	r30, 4
    21e6:	05 c0       	rjmp	.+10     	; 0x21f2 <vfprintf+0x3c2>
    21e8:	d1 94       	neg	r13
    21ea:	c1 94       	neg	r12
    21ec:	d1 08       	sbc	r13, r1
    21ee:	8d e2       	ldi	r24, 0x2D	; 45
    21f0:	01 c0       	rjmp	.+2      	; 0x21f4 <vfprintf+0x3c4>
    21f2:	8b e2       	ldi	r24, 0x2B	; 43
    21f4:	b7 01       	movw	r22, r14
    21f6:	90 e0       	ldi	r25, 0x00	; 0
    21f8:	03 d3       	rcall	.+1542   	; 0x2800 <fputc>
    21fa:	80 e3       	ldi	r24, 0x30	; 48
    21fc:	2a e0       	ldi	r18, 0x0A	; 10
    21fe:	c2 16       	cp	r12, r18
    2200:	d1 04       	cpc	r13, r1
    2202:	2c f0       	brlt	.+10     	; 0x220e <__stack+0xf>
    2204:	8f 5f       	subi	r24, 0xFF	; 255
    2206:	fa e0       	ldi	r31, 0x0A	; 10
    2208:	cf 1a       	sub	r12, r31
    220a:	d1 08       	sbc	r13, r1
    220c:	f7 cf       	rjmp	.-18     	; 0x21fc <vfprintf+0x3cc>
    220e:	b7 01       	movw	r22, r14
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	f6 d2       	rcall	.+1516   	; 0x2800 <fputc>
    2214:	b7 01       	movw	r22, r14
    2216:	c6 01       	movw	r24, r12
    2218:	c0 96       	adiw	r24, 0x30	; 48
    221a:	f2 d2       	rcall	.+1508   	; 0x2800 <fputc>
    221c:	49 c1       	rjmp	.+658    	; 0x24b0 <__stack+0x2b1>
    221e:	83 36       	cpi	r24, 0x63	; 99
    2220:	31 f0       	breq	.+12     	; 0x222e <__stack+0x2f>
    2222:	83 37       	cpi	r24, 0x73	; 115
    2224:	79 f0       	breq	.+30     	; 0x2244 <__stack+0x45>
    2226:	83 35       	cpi	r24, 0x53	; 83
    2228:	09 f0       	breq	.+2      	; 0x222c <__stack+0x2d>
    222a:	52 c0       	rjmp	.+164    	; 0x22d0 <__stack+0xd1>
    222c:	1f c0       	rjmp	.+62     	; 0x226c <__stack+0x6d>
    222e:	56 01       	movw	r10, r12
    2230:	32 e0       	ldi	r19, 0x02	; 2
    2232:	a3 0e       	add	r10, r19
    2234:	b1 1c       	adc	r11, r1
    2236:	f6 01       	movw	r30, r12
    2238:	80 81       	ld	r24, Z
    223a:	89 83       	std	Y+1, r24	; 0x01
    223c:	01 e0       	ldi	r16, 0x01	; 1
    223e:	10 e0       	ldi	r17, 0x00	; 0
    2240:	63 01       	movw	r12, r6
    2242:	11 c0       	rjmp	.+34     	; 0x2266 <__stack+0x67>
    2244:	56 01       	movw	r10, r12
    2246:	f2 e0       	ldi	r31, 0x02	; 2
    2248:	af 0e       	add	r10, r31
    224a:	b1 1c       	adc	r11, r1
    224c:	f6 01       	movw	r30, r12
    224e:	c0 80       	ld	r12, Z
    2250:	d1 80       	ldd	r13, Z+1	; 0x01
    2252:	96 fe       	sbrs	r9, 6
    2254:	03 c0       	rjmp	.+6      	; 0x225c <__stack+0x5d>
    2256:	61 2f       	mov	r22, r17
    2258:	70 e0       	ldi	r23, 0x00	; 0
    225a:	02 c0       	rjmp	.+4      	; 0x2260 <__stack+0x61>
    225c:	6f ef       	ldi	r22, 0xFF	; 255
    225e:	7f ef       	ldi	r23, 0xFF	; 255
    2260:	c6 01       	movw	r24, r12
    2262:	79 d2       	rcall	.+1266   	; 0x2756 <strnlen>
    2264:	8c 01       	movw	r16, r24
    2266:	f9 2d       	mov	r31, r9
    2268:	ff 77       	andi	r31, 0x7F	; 127
    226a:	13 c0       	rjmp	.+38     	; 0x2292 <__stack+0x93>
    226c:	56 01       	movw	r10, r12
    226e:	22 e0       	ldi	r18, 0x02	; 2
    2270:	a2 0e       	add	r10, r18
    2272:	b1 1c       	adc	r11, r1
    2274:	f6 01       	movw	r30, r12
    2276:	c0 80       	ld	r12, Z
    2278:	d1 80       	ldd	r13, Z+1	; 0x01
    227a:	96 fe       	sbrs	r9, 6
    227c:	03 c0       	rjmp	.+6      	; 0x2284 <__stack+0x85>
    227e:	61 2f       	mov	r22, r17
    2280:	70 e0       	ldi	r23, 0x00	; 0
    2282:	02 c0       	rjmp	.+4      	; 0x2288 <__stack+0x89>
    2284:	6f ef       	ldi	r22, 0xFF	; 255
    2286:	7f ef       	ldi	r23, 0xFF	; 255
    2288:	c6 01       	movw	r24, r12
    228a:	5a d2       	rcall	.+1204   	; 0x2740 <strnlen_P>
    228c:	8c 01       	movw	r16, r24
    228e:	f9 2d       	mov	r31, r9
    2290:	f0 68       	ori	r31, 0x80	; 128
    2292:	9f 2e       	mov	r9, r31
    2294:	f3 fd       	sbrc	r31, 3
    2296:	18 c0       	rjmp	.+48     	; 0x22c8 <__stack+0xc9>
    2298:	85 2d       	mov	r24, r5
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	08 17       	cp	r16, r24
    229e:	19 07       	cpc	r17, r25
    22a0:	98 f4       	brcc	.+38     	; 0x22c8 <__stack+0xc9>
    22a2:	b7 01       	movw	r22, r14
    22a4:	80 e2       	ldi	r24, 0x20	; 32
    22a6:	90 e0       	ldi	r25, 0x00	; 0
    22a8:	ab d2       	rcall	.+1366   	; 0x2800 <fputc>
    22aa:	5a 94       	dec	r5
    22ac:	f5 cf       	rjmp	.-22     	; 0x2298 <__stack+0x99>
    22ae:	f6 01       	movw	r30, r12
    22b0:	97 fc       	sbrc	r9, 7
    22b2:	85 91       	lpm	r24, Z+
    22b4:	97 fe       	sbrs	r9, 7
    22b6:	81 91       	ld	r24, Z+
    22b8:	6f 01       	movw	r12, r30
    22ba:	b7 01       	movw	r22, r14
    22bc:	90 e0       	ldi	r25, 0x00	; 0
    22be:	a0 d2       	rcall	.+1344   	; 0x2800 <fputc>
    22c0:	51 10       	cpse	r5, r1
    22c2:	5a 94       	dec	r5
    22c4:	01 50       	subi	r16, 0x01	; 1
    22c6:	11 09       	sbc	r17, r1
    22c8:	01 15       	cp	r16, r1
    22ca:	11 05       	cpc	r17, r1
    22cc:	81 f7       	brne	.-32     	; 0x22ae <__stack+0xaf>
    22ce:	f0 c0       	rjmp	.+480    	; 0x24b0 <__stack+0x2b1>
    22d0:	84 36       	cpi	r24, 0x64	; 100
    22d2:	11 f0       	breq	.+4      	; 0x22d8 <__stack+0xd9>
    22d4:	89 36       	cpi	r24, 0x69	; 105
    22d6:	59 f5       	brne	.+86     	; 0x232e <__stack+0x12f>
    22d8:	56 01       	movw	r10, r12
    22da:	97 fe       	sbrs	r9, 7
    22dc:	09 c0       	rjmp	.+18     	; 0x22f0 <__stack+0xf1>
    22de:	24 e0       	ldi	r18, 0x04	; 4
    22e0:	a2 0e       	add	r10, r18
    22e2:	b1 1c       	adc	r11, r1
    22e4:	f6 01       	movw	r30, r12
    22e6:	60 81       	ld	r22, Z
    22e8:	71 81       	ldd	r23, Z+1	; 0x01
    22ea:	82 81       	ldd	r24, Z+2	; 0x02
    22ec:	93 81       	ldd	r25, Z+3	; 0x03
    22ee:	0a c0       	rjmp	.+20     	; 0x2304 <__stack+0x105>
    22f0:	f2 e0       	ldi	r31, 0x02	; 2
    22f2:	af 0e       	add	r10, r31
    22f4:	b1 1c       	adc	r11, r1
    22f6:	f6 01       	movw	r30, r12
    22f8:	60 81       	ld	r22, Z
    22fa:	71 81       	ldd	r23, Z+1	; 0x01
    22fc:	07 2e       	mov	r0, r23
    22fe:	00 0c       	add	r0, r0
    2300:	88 0b       	sbc	r24, r24
    2302:	99 0b       	sbc	r25, r25
    2304:	f9 2d       	mov	r31, r9
    2306:	ff 76       	andi	r31, 0x6F	; 111
    2308:	9f 2e       	mov	r9, r31
    230a:	97 ff       	sbrs	r25, 7
    230c:	09 c0       	rjmp	.+18     	; 0x2320 <__stack+0x121>
    230e:	90 95       	com	r25
    2310:	80 95       	com	r24
    2312:	70 95       	com	r23
    2314:	61 95       	neg	r22
    2316:	7f 4f       	sbci	r23, 0xFF	; 255
    2318:	8f 4f       	sbci	r24, 0xFF	; 255
    231a:	9f 4f       	sbci	r25, 0xFF	; 255
    231c:	f0 68       	ori	r31, 0x80	; 128
    231e:	9f 2e       	mov	r9, r31
    2320:	2a e0       	ldi	r18, 0x0A	; 10
    2322:	30 e0       	ldi	r19, 0x00	; 0
    2324:	a3 01       	movw	r20, r6
    2326:	ee d2       	rcall	.+1500   	; 0x2904 <__ultoa_invert>
    2328:	c8 2e       	mov	r12, r24
    232a:	c6 18       	sub	r12, r6
    232c:	3e c0       	rjmp	.+124    	; 0x23aa <__stack+0x1ab>
    232e:	09 2d       	mov	r16, r9
    2330:	85 37       	cpi	r24, 0x75	; 117
    2332:	21 f4       	brne	.+8      	; 0x233c <__stack+0x13d>
    2334:	0f 7e       	andi	r16, 0xEF	; 239
    2336:	2a e0       	ldi	r18, 0x0A	; 10
    2338:	30 e0       	ldi	r19, 0x00	; 0
    233a:	1d c0       	rjmp	.+58     	; 0x2376 <__stack+0x177>
    233c:	09 7f       	andi	r16, 0xF9	; 249
    233e:	8f 36       	cpi	r24, 0x6F	; 111
    2340:	91 f0       	breq	.+36     	; 0x2366 <__stack+0x167>
    2342:	18 f4       	brcc	.+6      	; 0x234a <__stack+0x14b>
    2344:	88 35       	cpi	r24, 0x58	; 88
    2346:	59 f0       	breq	.+22     	; 0x235e <__stack+0x15f>
    2348:	bc c0       	rjmp	.+376    	; 0x24c2 <__stack+0x2c3>
    234a:	80 37       	cpi	r24, 0x70	; 112
    234c:	19 f0       	breq	.+6      	; 0x2354 <__stack+0x155>
    234e:	88 37       	cpi	r24, 0x78	; 120
    2350:	11 f0       	breq	.+4      	; 0x2356 <__stack+0x157>
    2352:	b7 c0       	rjmp	.+366    	; 0x24c2 <__stack+0x2c3>
    2354:	00 61       	ori	r16, 0x10	; 16
    2356:	04 ff       	sbrs	r16, 4
    2358:	09 c0       	rjmp	.+18     	; 0x236c <__stack+0x16d>
    235a:	04 60       	ori	r16, 0x04	; 4
    235c:	07 c0       	rjmp	.+14     	; 0x236c <__stack+0x16d>
    235e:	94 fe       	sbrs	r9, 4
    2360:	08 c0       	rjmp	.+16     	; 0x2372 <__stack+0x173>
    2362:	06 60       	ori	r16, 0x06	; 6
    2364:	06 c0       	rjmp	.+12     	; 0x2372 <__stack+0x173>
    2366:	28 e0       	ldi	r18, 0x08	; 8
    2368:	30 e0       	ldi	r19, 0x00	; 0
    236a:	05 c0       	rjmp	.+10     	; 0x2376 <__stack+0x177>
    236c:	20 e1       	ldi	r18, 0x10	; 16
    236e:	30 e0       	ldi	r19, 0x00	; 0
    2370:	02 c0       	rjmp	.+4      	; 0x2376 <__stack+0x177>
    2372:	20 e1       	ldi	r18, 0x10	; 16
    2374:	32 e0       	ldi	r19, 0x02	; 2
    2376:	56 01       	movw	r10, r12
    2378:	07 ff       	sbrs	r16, 7
    237a:	09 c0       	rjmp	.+18     	; 0x238e <__stack+0x18f>
    237c:	84 e0       	ldi	r24, 0x04	; 4
    237e:	a8 0e       	add	r10, r24
    2380:	b1 1c       	adc	r11, r1
    2382:	f6 01       	movw	r30, r12
    2384:	60 81       	ld	r22, Z
    2386:	71 81       	ldd	r23, Z+1	; 0x01
    2388:	82 81       	ldd	r24, Z+2	; 0x02
    238a:	93 81       	ldd	r25, Z+3	; 0x03
    238c:	08 c0       	rjmp	.+16     	; 0x239e <__stack+0x19f>
    238e:	f2 e0       	ldi	r31, 0x02	; 2
    2390:	af 0e       	add	r10, r31
    2392:	b1 1c       	adc	r11, r1
    2394:	f6 01       	movw	r30, r12
    2396:	60 81       	ld	r22, Z
    2398:	71 81       	ldd	r23, Z+1	; 0x01
    239a:	80 e0       	ldi	r24, 0x00	; 0
    239c:	90 e0       	ldi	r25, 0x00	; 0
    239e:	a3 01       	movw	r20, r6
    23a0:	b1 d2       	rcall	.+1378   	; 0x2904 <__ultoa_invert>
    23a2:	c8 2e       	mov	r12, r24
    23a4:	c6 18       	sub	r12, r6
    23a6:	0f 77       	andi	r16, 0x7F	; 127
    23a8:	90 2e       	mov	r9, r16
    23aa:	96 fe       	sbrs	r9, 6
    23ac:	0b c0       	rjmp	.+22     	; 0x23c4 <__stack+0x1c5>
    23ae:	09 2d       	mov	r16, r9
    23b0:	0e 7f       	andi	r16, 0xFE	; 254
    23b2:	c1 16       	cp	r12, r17
    23b4:	50 f4       	brcc	.+20     	; 0x23ca <__stack+0x1cb>
    23b6:	94 fe       	sbrs	r9, 4
    23b8:	0a c0       	rjmp	.+20     	; 0x23ce <__stack+0x1cf>
    23ba:	92 fc       	sbrc	r9, 2
    23bc:	08 c0       	rjmp	.+16     	; 0x23ce <__stack+0x1cf>
    23be:	09 2d       	mov	r16, r9
    23c0:	0e 7e       	andi	r16, 0xEE	; 238
    23c2:	05 c0       	rjmp	.+10     	; 0x23ce <__stack+0x1cf>
    23c4:	dc 2c       	mov	r13, r12
    23c6:	09 2d       	mov	r16, r9
    23c8:	03 c0       	rjmp	.+6      	; 0x23d0 <__stack+0x1d1>
    23ca:	dc 2c       	mov	r13, r12
    23cc:	01 c0       	rjmp	.+2      	; 0x23d0 <__stack+0x1d1>
    23ce:	d1 2e       	mov	r13, r17
    23d0:	04 ff       	sbrs	r16, 4
    23d2:	0d c0       	rjmp	.+26     	; 0x23ee <__stack+0x1ef>
    23d4:	fe 01       	movw	r30, r28
    23d6:	ec 0d       	add	r30, r12
    23d8:	f1 1d       	adc	r31, r1
    23da:	80 81       	ld	r24, Z
    23dc:	80 33       	cpi	r24, 0x30	; 48
    23de:	11 f4       	brne	.+4      	; 0x23e4 <__stack+0x1e5>
    23e0:	09 7e       	andi	r16, 0xE9	; 233
    23e2:	09 c0       	rjmp	.+18     	; 0x23f6 <__stack+0x1f7>
    23e4:	02 ff       	sbrs	r16, 2
    23e6:	06 c0       	rjmp	.+12     	; 0x23f4 <__stack+0x1f5>
    23e8:	d3 94       	inc	r13
    23ea:	d3 94       	inc	r13
    23ec:	04 c0       	rjmp	.+8      	; 0x23f6 <__stack+0x1f7>
    23ee:	80 2f       	mov	r24, r16
    23f0:	86 78       	andi	r24, 0x86	; 134
    23f2:	09 f0       	breq	.+2      	; 0x23f6 <__stack+0x1f7>
    23f4:	d3 94       	inc	r13
    23f6:	03 fd       	sbrc	r16, 3
    23f8:	10 c0       	rjmp	.+32     	; 0x241a <__stack+0x21b>
    23fa:	00 ff       	sbrs	r16, 0
    23fc:	06 c0       	rjmp	.+12     	; 0x240a <__stack+0x20b>
    23fe:	1c 2d       	mov	r17, r12
    2400:	d5 14       	cp	r13, r5
    2402:	78 f4       	brcc	.+30     	; 0x2422 <__stack+0x223>
    2404:	15 0d       	add	r17, r5
    2406:	1d 19       	sub	r17, r13
    2408:	0c c0       	rjmp	.+24     	; 0x2422 <__stack+0x223>
    240a:	d5 14       	cp	r13, r5
    240c:	50 f4       	brcc	.+20     	; 0x2422 <__stack+0x223>
    240e:	b7 01       	movw	r22, r14
    2410:	80 e2       	ldi	r24, 0x20	; 32
    2412:	90 e0       	ldi	r25, 0x00	; 0
    2414:	f5 d1       	rcall	.+1002   	; 0x2800 <fputc>
    2416:	d3 94       	inc	r13
    2418:	f8 cf       	rjmp	.-16     	; 0x240a <__stack+0x20b>
    241a:	d5 14       	cp	r13, r5
    241c:	10 f4       	brcc	.+4      	; 0x2422 <__stack+0x223>
    241e:	5d 18       	sub	r5, r13
    2420:	01 c0       	rjmp	.+2      	; 0x2424 <__stack+0x225>
    2422:	51 2c       	mov	r5, r1
    2424:	04 ff       	sbrs	r16, 4
    2426:	0f c0       	rjmp	.+30     	; 0x2446 <__stack+0x247>
    2428:	b7 01       	movw	r22, r14
    242a:	80 e3       	ldi	r24, 0x30	; 48
    242c:	90 e0       	ldi	r25, 0x00	; 0
    242e:	e8 d1       	rcall	.+976    	; 0x2800 <fputc>
    2430:	02 ff       	sbrs	r16, 2
    2432:	16 c0       	rjmp	.+44     	; 0x2460 <__stack+0x261>
    2434:	01 fd       	sbrc	r16, 1
    2436:	03 c0       	rjmp	.+6      	; 0x243e <__stack+0x23f>
    2438:	88 e7       	ldi	r24, 0x78	; 120
    243a:	90 e0       	ldi	r25, 0x00	; 0
    243c:	02 c0       	rjmp	.+4      	; 0x2442 <__stack+0x243>
    243e:	88 e5       	ldi	r24, 0x58	; 88
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	b7 01       	movw	r22, r14
    2444:	0c c0       	rjmp	.+24     	; 0x245e <__stack+0x25f>
    2446:	80 2f       	mov	r24, r16
    2448:	86 78       	andi	r24, 0x86	; 134
    244a:	51 f0       	breq	.+20     	; 0x2460 <__stack+0x261>
    244c:	01 ff       	sbrs	r16, 1
    244e:	02 c0       	rjmp	.+4      	; 0x2454 <__stack+0x255>
    2450:	8b e2       	ldi	r24, 0x2B	; 43
    2452:	01 c0       	rjmp	.+2      	; 0x2456 <__stack+0x257>
    2454:	80 e2       	ldi	r24, 0x20	; 32
    2456:	07 fd       	sbrc	r16, 7
    2458:	8d e2       	ldi	r24, 0x2D	; 45
    245a:	b7 01       	movw	r22, r14
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	d0 d1       	rcall	.+928    	; 0x2800 <fputc>
    2460:	c1 16       	cp	r12, r17
    2462:	30 f4       	brcc	.+12     	; 0x2470 <__stack+0x271>
    2464:	b7 01       	movw	r22, r14
    2466:	80 e3       	ldi	r24, 0x30	; 48
    2468:	90 e0       	ldi	r25, 0x00	; 0
    246a:	ca d1       	rcall	.+916    	; 0x2800 <fputc>
    246c:	11 50       	subi	r17, 0x01	; 1
    246e:	f8 cf       	rjmp	.-16     	; 0x2460 <__stack+0x261>
    2470:	ca 94       	dec	r12
    2472:	f3 01       	movw	r30, r6
    2474:	ec 0d       	add	r30, r12
    2476:	f1 1d       	adc	r31, r1
    2478:	80 81       	ld	r24, Z
    247a:	b7 01       	movw	r22, r14
    247c:	90 e0       	ldi	r25, 0x00	; 0
    247e:	c0 d1       	rcall	.+896    	; 0x2800 <fputc>
    2480:	c1 10       	cpse	r12, r1
    2482:	f6 cf       	rjmp	.-20     	; 0x2470 <__stack+0x271>
    2484:	15 c0       	rjmp	.+42     	; 0x24b0 <__stack+0x2b1>
    2486:	f4 e0       	ldi	r31, 0x04	; 4
    2488:	f5 15       	cp	r31, r5
    248a:	50 f5       	brcc	.+84     	; 0x24e0 <__stack+0x2e1>
    248c:	84 e0       	ldi	r24, 0x04	; 4
    248e:	58 1a       	sub	r5, r24
    2490:	93 fe       	sbrs	r9, 3
    2492:	1e c0       	rjmp	.+60     	; 0x24d0 <__stack+0x2d1>
    2494:	01 11       	cpse	r16, r1
    2496:	25 c0       	rjmp	.+74     	; 0x24e2 <__stack+0x2e3>
    2498:	2c 85       	ldd	r18, Y+12	; 0x0c
    249a:	23 ff       	sbrs	r18, 3
    249c:	27 c0       	rjmp	.+78     	; 0x24ec <__stack+0x2ed>
    249e:	02 e1       	ldi	r16, 0x12	; 18
    24a0:	11 e0       	ldi	r17, 0x01	; 1
    24a2:	39 2d       	mov	r19, r9
    24a4:	30 71       	andi	r19, 0x10	; 16
    24a6:	93 2e       	mov	r9, r19
    24a8:	f8 01       	movw	r30, r16
    24aa:	84 91       	lpm	r24, Z
    24ac:	81 11       	cpse	r24, r1
    24ae:	21 c0       	rjmp	.+66     	; 0x24f2 <__stack+0x2f3>
    24b0:	55 20       	and	r5, r5
    24b2:	09 f4       	brne	.+2      	; 0x24b6 <__stack+0x2b7>
    24b4:	fc cc       	rjmp	.-1544   	; 0x1eae <vfprintf+0x7e>
    24b6:	b7 01       	movw	r22, r14
    24b8:	80 e2       	ldi	r24, 0x20	; 32
    24ba:	90 e0       	ldi	r25, 0x00	; 0
    24bc:	a1 d1       	rcall	.+834    	; 0x2800 <fputc>
    24be:	5a 94       	dec	r5
    24c0:	f7 cf       	rjmp	.-18     	; 0x24b0 <__stack+0x2b1>
    24c2:	f7 01       	movw	r30, r14
    24c4:	86 81       	ldd	r24, Z+6	; 0x06
    24c6:	97 81       	ldd	r25, Z+7	; 0x07
    24c8:	23 c0       	rjmp	.+70     	; 0x2510 <__stack+0x311>
    24ca:	8f ef       	ldi	r24, 0xFF	; 255
    24cc:	9f ef       	ldi	r25, 0xFF	; 255
    24ce:	20 c0       	rjmp	.+64     	; 0x2510 <__stack+0x311>
    24d0:	b7 01       	movw	r22, r14
    24d2:	80 e2       	ldi	r24, 0x20	; 32
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	94 d1       	rcall	.+808    	; 0x2800 <fputc>
    24d8:	5a 94       	dec	r5
    24da:	51 10       	cpse	r5, r1
    24dc:	f9 cf       	rjmp	.-14     	; 0x24d0 <__stack+0x2d1>
    24de:	da cf       	rjmp	.-76     	; 0x2494 <__stack+0x295>
    24e0:	51 2c       	mov	r5, r1
    24e2:	b7 01       	movw	r22, r14
    24e4:	80 2f       	mov	r24, r16
    24e6:	90 e0       	ldi	r25, 0x00	; 0
    24e8:	8b d1       	rcall	.+790    	; 0x2800 <fputc>
    24ea:	d6 cf       	rjmp	.-84     	; 0x2498 <__stack+0x299>
    24ec:	06 e1       	ldi	r16, 0x16	; 22
    24ee:	11 e0       	ldi	r17, 0x01	; 1
    24f0:	d8 cf       	rjmp	.-80     	; 0x24a2 <__stack+0x2a3>
    24f2:	91 10       	cpse	r9, r1
    24f4:	80 52       	subi	r24, 0x20	; 32
    24f6:	b7 01       	movw	r22, r14
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	82 d1       	rcall	.+772    	; 0x2800 <fputc>
    24fc:	0f 5f       	subi	r16, 0xFF	; 255
    24fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2500:	d3 cf       	rjmp	.-90     	; 0x24a8 <__stack+0x2a9>
    2502:	23 e0       	ldi	r18, 0x03	; 3
    2504:	25 15       	cp	r18, r5
    2506:	10 f4       	brcc	.+4      	; 0x250c <__stack+0x30d>
    2508:	83 e0       	ldi	r24, 0x03	; 3
    250a:	c1 cf       	rjmp	.-126    	; 0x248e <__stack+0x28f>
    250c:	51 2c       	mov	r5, r1
    250e:	c4 cf       	rjmp	.-120    	; 0x2498 <__stack+0x299>
    2510:	60 96       	adiw	r28, 0x10	; 16
    2512:	0f b6       	in	r0, 0x3f	; 63
    2514:	f8 94       	cli
    2516:	de bf       	out	0x3e, r29	; 62
    2518:	0f be       	out	0x3f, r0	; 63
    251a:	cd bf       	out	0x3d, r28	; 61
    251c:	df 91       	pop	r29
    251e:	cf 91       	pop	r28
    2520:	1f 91       	pop	r17
    2522:	0f 91       	pop	r16
    2524:	ff 90       	pop	r15
    2526:	ef 90       	pop	r14
    2528:	df 90       	pop	r13
    252a:	cf 90       	pop	r12
    252c:	bf 90       	pop	r11
    252e:	af 90       	pop	r10
    2530:	9f 90       	pop	r9
    2532:	8f 90       	pop	r8
    2534:	7f 90       	pop	r7
    2536:	6f 90       	pop	r6
    2538:	5f 90       	pop	r5
    253a:	4f 90       	pop	r4
    253c:	3f 90       	pop	r3
    253e:	2f 90       	pop	r2
    2540:	08 95       	ret

00002542 <__divmodhi4>:
    2542:	97 fb       	bst	r25, 7
    2544:	07 2e       	mov	r0, r23
    2546:	16 f4       	brtc	.+4      	; 0x254c <__divmodhi4+0xa>
    2548:	00 94       	com	r0
    254a:	06 d0       	rcall	.+12     	; 0x2558 <__divmodhi4_neg1>
    254c:	77 fd       	sbrc	r23, 7
    254e:	08 d0       	rcall	.+16     	; 0x2560 <__divmodhi4_neg2>
    2550:	0b d0       	rcall	.+22     	; 0x2568 <__udivmodhi4>
    2552:	07 fc       	sbrc	r0, 7
    2554:	05 d0       	rcall	.+10     	; 0x2560 <__divmodhi4_neg2>
    2556:	3e f4       	brtc	.+14     	; 0x2566 <__divmodhi4_exit>

00002558 <__divmodhi4_neg1>:
    2558:	90 95       	com	r25
    255a:	81 95       	neg	r24
    255c:	9f 4f       	sbci	r25, 0xFF	; 255
    255e:	08 95       	ret

00002560 <__divmodhi4_neg2>:
    2560:	70 95       	com	r23
    2562:	61 95       	neg	r22
    2564:	7f 4f       	sbci	r23, 0xFF	; 255

00002566 <__divmodhi4_exit>:
    2566:	08 95       	ret

00002568 <__udivmodhi4>:
    2568:	aa 1b       	sub	r26, r26
    256a:	bb 1b       	sub	r27, r27
    256c:	51 e1       	ldi	r21, 0x11	; 17
    256e:	07 c0       	rjmp	.+14     	; 0x257e <__udivmodhi4_ep>

00002570 <__udivmodhi4_loop>:
    2570:	aa 1f       	adc	r26, r26
    2572:	bb 1f       	adc	r27, r27
    2574:	a6 17       	cp	r26, r22
    2576:	b7 07       	cpc	r27, r23
    2578:	10 f0       	brcs	.+4      	; 0x257e <__udivmodhi4_ep>
    257a:	a6 1b       	sub	r26, r22
    257c:	b7 0b       	sbc	r27, r23

0000257e <__udivmodhi4_ep>:
    257e:	88 1f       	adc	r24, r24
    2580:	99 1f       	adc	r25, r25
    2582:	5a 95       	dec	r21
    2584:	a9 f7       	brne	.-22     	; 0x2570 <__udivmodhi4_loop>
    2586:	80 95       	com	r24
    2588:	90 95       	com	r25
    258a:	bc 01       	movw	r22, r24
    258c:	cd 01       	movw	r24, r26
    258e:	08 95       	ret

00002590 <__ftoa_engine>:
    2590:	28 30       	cpi	r18, 0x08	; 8
    2592:	08 f0       	brcs	.+2      	; 0x2596 <__ftoa_engine+0x6>
    2594:	27 e0       	ldi	r18, 0x07	; 7
    2596:	33 27       	eor	r19, r19
    2598:	da 01       	movw	r26, r20
    259a:	99 0f       	add	r25, r25
    259c:	31 1d       	adc	r19, r1
    259e:	87 fd       	sbrc	r24, 7
    25a0:	91 60       	ori	r25, 0x01	; 1
    25a2:	00 96       	adiw	r24, 0x00	; 0
    25a4:	61 05       	cpc	r22, r1
    25a6:	71 05       	cpc	r23, r1
    25a8:	39 f4       	brne	.+14     	; 0x25b8 <__ftoa_engine+0x28>
    25aa:	32 60       	ori	r19, 0x02	; 2
    25ac:	2e 5f       	subi	r18, 0xFE	; 254
    25ae:	3d 93       	st	X+, r19
    25b0:	30 e3       	ldi	r19, 0x30	; 48
    25b2:	2a 95       	dec	r18
    25b4:	e1 f7       	brne	.-8      	; 0x25ae <__ftoa_engine+0x1e>
    25b6:	08 95       	ret
    25b8:	9f 3f       	cpi	r25, 0xFF	; 255
    25ba:	30 f0       	brcs	.+12     	; 0x25c8 <__ftoa_engine+0x38>
    25bc:	80 38       	cpi	r24, 0x80	; 128
    25be:	71 05       	cpc	r23, r1
    25c0:	61 05       	cpc	r22, r1
    25c2:	09 f0       	breq	.+2      	; 0x25c6 <__ftoa_engine+0x36>
    25c4:	3c 5f       	subi	r19, 0xFC	; 252
    25c6:	3c 5f       	subi	r19, 0xFC	; 252
    25c8:	3d 93       	st	X+, r19
    25ca:	91 30       	cpi	r25, 0x01	; 1
    25cc:	08 f0       	brcs	.+2      	; 0x25d0 <__ftoa_engine+0x40>
    25ce:	80 68       	ori	r24, 0x80	; 128
    25d0:	91 1d       	adc	r25, r1
    25d2:	df 93       	push	r29
    25d4:	cf 93       	push	r28
    25d6:	1f 93       	push	r17
    25d8:	0f 93       	push	r16
    25da:	ff 92       	push	r15
    25dc:	ef 92       	push	r14
    25de:	19 2f       	mov	r17, r25
    25e0:	98 7f       	andi	r25, 0xF8	; 248
    25e2:	96 95       	lsr	r25
    25e4:	e9 2f       	mov	r30, r25
    25e6:	96 95       	lsr	r25
    25e8:	96 95       	lsr	r25
    25ea:	e9 0f       	add	r30, r25
    25ec:	ff 27       	eor	r31, r31
    25ee:	ec 58       	subi	r30, 0x8C	; 140
    25f0:	fe 4f       	sbci	r31, 0xFE	; 254
    25f2:	99 27       	eor	r25, r25
    25f4:	33 27       	eor	r19, r19
    25f6:	ee 24       	eor	r14, r14
    25f8:	ff 24       	eor	r15, r15
    25fa:	a7 01       	movw	r20, r14
    25fc:	e7 01       	movw	r28, r14
    25fe:	05 90       	lpm	r0, Z+
    2600:	08 94       	sec
    2602:	07 94       	ror	r0
    2604:	28 f4       	brcc	.+10     	; 0x2610 <__ftoa_engine+0x80>
    2606:	36 0f       	add	r19, r22
    2608:	e7 1e       	adc	r14, r23
    260a:	f8 1e       	adc	r15, r24
    260c:	49 1f       	adc	r20, r25
    260e:	51 1d       	adc	r21, r1
    2610:	66 0f       	add	r22, r22
    2612:	77 1f       	adc	r23, r23
    2614:	88 1f       	adc	r24, r24
    2616:	99 1f       	adc	r25, r25
    2618:	06 94       	lsr	r0
    261a:	a1 f7       	brne	.-24     	; 0x2604 <__ftoa_engine+0x74>
    261c:	05 90       	lpm	r0, Z+
    261e:	07 94       	ror	r0
    2620:	28 f4       	brcc	.+10     	; 0x262c <__ftoa_engine+0x9c>
    2622:	e7 0e       	add	r14, r23
    2624:	f8 1e       	adc	r15, r24
    2626:	49 1f       	adc	r20, r25
    2628:	56 1f       	adc	r21, r22
    262a:	c1 1d       	adc	r28, r1
    262c:	77 0f       	add	r23, r23
    262e:	88 1f       	adc	r24, r24
    2630:	99 1f       	adc	r25, r25
    2632:	66 1f       	adc	r22, r22
    2634:	06 94       	lsr	r0
    2636:	a1 f7       	brne	.-24     	; 0x2620 <__ftoa_engine+0x90>
    2638:	05 90       	lpm	r0, Z+
    263a:	07 94       	ror	r0
    263c:	28 f4       	brcc	.+10     	; 0x2648 <__ftoa_engine+0xb8>
    263e:	f8 0e       	add	r15, r24
    2640:	49 1f       	adc	r20, r25
    2642:	56 1f       	adc	r21, r22
    2644:	c7 1f       	adc	r28, r23
    2646:	d1 1d       	adc	r29, r1
    2648:	88 0f       	add	r24, r24
    264a:	99 1f       	adc	r25, r25
    264c:	66 1f       	adc	r22, r22
    264e:	77 1f       	adc	r23, r23
    2650:	06 94       	lsr	r0
    2652:	a1 f7       	brne	.-24     	; 0x263c <__ftoa_engine+0xac>
    2654:	05 90       	lpm	r0, Z+
    2656:	07 94       	ror	r0
    2658:	20 f4       	brcc	.+8      	; 0x2662 <__ftoa_engine+0xd2>
    265a:	49 0f       	add	r20, r25
    265c:	56 1f       	adc	r21, r22
    265e:	c7 1f       	adc	r28, r23
    2660:	d8 1f       	adc	r29, r24
    2662:	99 0f       	add	r25, r25
    2664:	66 1f       	adc	r22, r22
    2666:	77 1f       	adc	r23, r23
    2668:	88 1f       	adc	r24, r24
    266a:	06 94       	lsr	r0
    266c:	a9 f7       	brne	.-22     	; 0x2658 <__ftoa_engine+0xc8>
    266e:	84 91       	lpm	r24, Z
    2670:	10 95       	com	r17
    2672:	17 70       	andi	r17, 0x07	; 7
    2674:	41 f0       	breq	.+16     	; 0x2686 <__ftoa_engine+0xf6>
    2676:	d6 95       	lsr	r29
    2678:	c7 95       	ror	r28
    267a:	57 95       	ror	r21
    267c:	47 95       	ror	r20
    267e:	f7 94       	ror	r15
    2680:	e7 94       	ror	r14
    2682:	1a 95       	dec	r17
    2684:	c1 f7       	brne	.-16     	; 0x2676 <__ftoa_engine+0xe6>
    2686:	ea e1       	ldi	r30, 0x1A	; 26
    2688:	f1 e0       	ldi	r31, 0x01	; 1
    268a:	68 94       	set
    268c:	15 90       	lpm	r1, Z+
    268e:	15 91       	lpm	r17, Z+
    2690:	35 91       	lpm	r19, Z+
    2692:	65 91       	lpm	r22, Z+
    2694:	95 91       	lpm	r25, Z+
    2696:	05 90       	lpm	r0, Z+
    2698:	7f e2       	ldi	r23, 0x2F	; 47
    269a:	73 95       	inc	r23
    269c:	e1 18       	sub	r14, r1
    269e:	f1 0a       	sbc	r15, r17
    26a0:	43 0b       	sbc	r20, r19
    26a2:	56 0b       	sbc	r21, r22
    26a4:	c9 0b       	sbc	r28, r25
    26a6:	d0 09       	sbc	r29, r0
    26a8:	c0 f7       	brcc	.-16     	; 0x269a <__ftoa_engine+0x10a>
    26aa:	e1 0c       	add	r14, r1
    26ac:	f1 1e       	adc	r15, r17
    26ae:	43 1f       	adc	r20, r19
    26b0:	56 1f       	adc	r21, r22
    26b2:	c9 1f       	adc	r28, r25
    26b4:	d0 1d       	adc	r29, r0
    26b6:	7e f4       	brtc	.+30     	; 0x26d6 <__ftoa_engine+0x146>
    26b8:	70 33       	cpi	r23, 0x30	; 48
    26ba:	11 f4       	brne	.+4      	; 0x26c0 <__ftoa_engine+0x130>
    26bc:	8a 95       	dec	r24
    26be:	e6 cf       	rjmp	.-52     	; 0x268c <__ftoa_engine+0xfc>
    26c0:	e8 94       	clt
    26c2:	01 50       	subi	r16, 0x01	; 1
    26c4:	30 f0       	brcs	.+12     	; 0x26d2 <__ftoa_engine+0x142>
    26c6:	08 0f       	add	r16, r24
    26c8:	0a f4       	brpl	.+2      	; 0x26cc <__ftoa_engine+0x13c>
    26ca:	00 27       	eor	r16, r16
    26cc:	02 17       	cp	r16, r18
    26ce:	08 f4       	brcc	.+2      	; 0x26d2 <__ftoa_engine+0x142>
    26d0:	20 2f       	mov	r18, r16
    26d2:	23 95       	inc	r18
    26d4:	02 2f       	mov	r16, r18
    26d6:	7a 33       	cpi	r23, 0x3A	; 58
    26d8:	28 f0       	brcs	.+10     	; 0x26e4 <__ftoa_engine+0x154>
    26da:	79 e3       	ldi	r23, 0x39	; 57
    26dc:	7d 93       	st	X+, r23
    26de:	2a 95       	dec	r18
    26e0:	e9 f7       	brne	.-6      	; 0x26dc <__ftoa_engine+0x14c>
    26e2:	10 c0       	rjmp	.+32     	; 0x2704 <__ftoa_engine+0x174>
    26e4:	7d 93       	st	X+, r23
    26e6:	2a 95       	dec	r18
    26e8:	89 f6       	brne	.-94     	; 0x268c <__ftoa_engine+0xfc>
    26ea:	06 94       	lsr	r0
    26ec:	97 95       	ror	r25
    26ee:	67 95       	ror	r22
    26f0:	37 95       	ror	r19
    26f2:	17 95       	ror	r17
    26f4:	17 94       	ror	r1
    26f6:	e1 18       	sub	r14, r1
    26f8:	f1 0a       	sbc	r15, r17
    26fa:	43 0b       	sbc	r20, r19
    26fc:	56 0b       	sbc	r21, r22
    26fe:	c9 0b       	sbc	r28, r25
    2700:	d0 09       	sbc	r29, r0
    2702:	98 f0       	brcs	.+38     	; 0x272a <__ftoa_engine+0x19a>
    2704:	23 95       	inc	r18
    2706:	7e 91       	ld	r23, -X
    2708:	73 95       	inc	r23
    270a:	7a 33       	cpi	r23, 0x3A	; 58
    270c:	08 f0       	brcs	.+2      	; 0x2710 <__ftoa_engine+0x180>
    270e:	70 e3       	ldi	r23, 0x30	; 48
    2710:	7c 93       	st	X, r23
    2712:	20 13       	cpse	r18, r16
    2714:	b8 f7       	brcc	.-18     	; 0x2704 <__ftoa_engine+0x174>
    2716:	7e 91       	ld	r23, -X
    2718:	70 61       	ori	r23, 0x10	; 16
    271a:	7d 93       	st	X+, r23
    271c:	30 f0       	brcs	.+12     	; 0x272a <__ftoa_engine+0x19a>
    271e:	83 95       	inc	r24
    2720:	71 e3       	ldi	r23, 0x31	; 49
    2722:	7d 93       	st	X+, r23
    2724:	70 e3       	ldi	r23, 0x30	; 48
    2726:	2a 95       	dec	r18
    2728:	e1 f7       	brne	.-8      	; 0x2722 <__ftoa_engine+0x192>
    272a:	11 24       	eor	r1, r1
    272c:	ef 90       	pop	r14
    272e:	ff 90       	pop	r15
    2730:	0f 91       	pop	r16
    2732:	1f 91       	pop	r17
    2734:	cf 91       	pop	r28
    2736:	df 91       	pop	r29
    2738:	99 27       	eor	r25, r25
    273a:	87 fd       	sbrc	r24, 7
    273c:	90 95       	com	r25
    273e:	08 95       	ret

00002740 <strnlen_P>:
    2740:	fc 01       	movw	r30, r24
    2742:	05 90       	lpm	r0, Z+
    2744:	61 50       	subi	r22, 0x01	; 1
    2746:	70 40       	sbci	r23, 0x00	; 0
    2748:	01 10       	cpse	r0, r1
    274a:	d8 f7       	brcc	.-10     	; 0x2742 <strnlen_P+0x2>
    274c:	80 95       	com	r24
    274e:	90 95       	com	r25
    2750:	8e 0f       	add	r24, r30
    2752:	9f 1f       	adc	r25, r31
    2754:	08 95       	ret

00002756 <strnlen>:
    2756:	fc 01       	movw	r30, r24
    2758:	61 50       	subi	r22, 0x01	; 1
    275a:	70 40       	sbci	r23, 0x00	; 0
    275c:	01 90       	ld	r0, Z+
    275e:	01 10       	cpse	r0, r1
    2760:	d8 f7       	brcc	.-10     	; 0x2758 <strnlen+0x2>
    2762:	80 95       	com	r24
    2764:	90 95       	com	r25
    2766:	8e 0f       	add	r24, r30
    2768:	9f 1f       	adc	r25, r31
    276a:	08 95       	ret

0000276c <fdevopen>:
    276c:	0f 93       	push	r16
    276e:	1f 93       	push	r17
    2770:	cf 93       	push	r28
    2772:	df 93       	push	r29
    2774:	00 97       	sbiw	r24, 0x00	; 0
    2776:	31 f4       	brne	.+12     	; 0x2784 <fdevopen+0x18>
    2778:	61 15       	cp	r22, r1
    277a:	71 05       	cpc	r23, r1
    277c:	19 f4       	brne	.+6      	; 0x2784 <fdevopen+0x18>
    277e:	80 e0       	ldi	r24, 0x00	; 0
    2780:	90 e0       	ldi	r25, 0x00	; 0
    2782:	39 c0       	rjmp	.+114    	; 0x27f6 <fdevopen+0x8a>
    2784:	8b 01       	movw	r16, r22
    2786:	ec 01       	movw	r28, r24
    2788:	6e e0       	ldi	r22, 0x0E	; 14
    278a:	70 e0       	ldi	r23, 0x00	; 0
    278c:	81 e0       	ldi	r24, 0x01	; 1
    278e:	90 e0       	ldi	r25, 0x00	; 0
    2790:	17 d1       	rcall	.+558    	; 0x29c0 <calloc>
    2792:	fc 01       	movw	r30, r24
    2794:	89 2b       	or	r24, r25
    2796:	99 f3       	breq	.-26     	; 0x277e <fdevopen+0x12>
    2798:	80 e8       	ldi	r24, 0x80	; 128
    279a:	83 83       	std	Z+3, r24	; 0x03
    279c:	01 15       	cp	r16, r1
    279e:	11 05       	cpc	r17, r1
    27a0:	71 f0       	breq	.+28     	; 0x27be <fdevopen+0x52>
    27a2:	13 87       	std	Z+11, r17	; 0x0b
    27a4:	02 87       	std	Z+10, r16	; 0x0a
    27a6:	81 e8       	ldi	r24, 0x81	; 129
    27a8:	83 83       	std	Z+3, r24	; 0x03
    27aa:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <__iob>
    27ae:	90 91 26 04 	lds	r25, 0x0426	; 0x800426 <__iob+0x1>
    27b2:	89 2b       	or	r24, r25
    27b4:	21 f4       	brne	.+8      	; 0x27be <fdevopen+0x52>
    27b6:	f0 93 26 04 	sts	0x0426, r31	; 0x800426 <__iob+0x1>
    27ba:	e0 93 25 04 	sts	0x0425, r30	; 0x800425 <__iob>
    27be:	20 97       	sbiw	r28, 0x00	; 0
    27c0:	c9 f0       	breq	.+50     	; 0x27f4 <fdevopen+0x88>
    27c2:	d1 87       	std	Z+9, r29	; 0x09
    27c4:	c0 87       	std	Z+8, r28	; 0x08
    27c6:	83 81       	ldd	r24, Z+3	; 0x03
    27c8:	82 60       	ori	r24, 0x02	; 2
    27ca:	83 83       	std	Z+3, r24	; 0x03
    27cc:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <__iob+0x2>
    27d0:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <__iob+0x3>
    27d4:	89 2b       	or	r24, r25
    27d6:	71 f4       	brne	.+28     	; 0x27f4 <fdevopen+0x88>
    27d8:	f0 93 28 04 	sts	0x0428, r31	; 0x800428 <__iob+0x3>
    27dc:	e0 93 27 04 	sts	0x0427, r30	; 0x800427 <__iob+0x2>
    27e0:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <__iob+0x4>
    27e4:	90 91 2a 04 	lds	r25, 0x042A	; 0x80042a <__iob+0x5>
    27e8:	89 2b       	or	r24, r25
    27ea:	21 f4       	brne	.+8      	; 0x27f4 <fdevopen+0x88>
    27ec:	f0 93 2a 04 	sts	0x042A, r31	; 0x80042a <__iob+0x5>
    27f0:	e0 93 29 04 	sts	0x0429, r30	; 0x800429 <__iob+0x4>
    27f4:	cf 01       	movw	r24, r30
    27f6:	df 91       	pop	r29
    27f8:	cf 91       	pop	r28
    27fa:	1f 91       	pop	r17
    27fc:	0f 91       	pop	r16
    27fe:	08 95       	ret

00002800 <fputc>:
    2800:	0f 93       	push	r16
    2802:	1f 93       	push	r17
    2804:	cf 93       	push	r28
    2806:	df 93       	push	r29
    2808:	fb 01       	movw	r30, r22
    280a:	23 81       	ldd	r18, Z+3	; 0x03
    280c:	21 fd       	sbrc	r18, 1
    280e:	03 c0       	rjmp	.+6      	; 0x2816 <fputc+0x16>
    2810:	8f ef       	ldi	r24, 0xFF	; 255
    2812:	9f ef       	ldi	r25, 0xFF	; 255
    2814:	2c c0       	rjmp	.+88     	; 0x286e <fputc+0x6e>
    2816:	22 ff       	sbrs	r18, 2
    2818:	16 c0       	rjmp	.+44     	; 0x2846 <fputc+0x46>
    281a:	46 81       	ldd	r20, Z+6	; 0x06
    281c:	57 81       	ldd	r21, Z+7	; 0x07
    281e:	24 81       	ldd	r18, Z+4	; 0x04
    2820:	35 81       	ldd	r19, Z+5	; 0x05
    2822:	42 17       	cp	r20, r18
    2824:	53 07       	cpc	r21, r19
    2826:	44 f4       	brge	.+16     	; 0x2838 <fputc+0x38>
    2828:	a0 81       	ld	r26, Z
    282a:	b1 81       	ldd	r27, Z+1	; 0x01
    282c:	9d 01       	movw	r18, r26
    282e:	2f 5f       	subi	r18, 0xFF	; 255
    2830:	3f 4f       	sbci	r19, 0xFF	; 255
    2832:	31 83       	std	Z+1, r19	; 0x01
    2834:	20 83       	st	Z, r18
    2836:	8c 93       	st	X, r24
    2838:	26 81       	ldd	r18, Z+6	; 0x06
    283a:	37 81       	ldd	r19, Z+7	; 0x07
    283c:	2f 5f       	subi	r18, 0xFF	; 255
    283e:	3f 4f       	sbci	r19, 0xFF	; 255
    2840:	37 83       	std	Z+7, r19	; 0x07
    2842:	26 83       	std	Z+6, r18	; 0x06
    2844:	14 c0       	rjmp	.+40     	; 0x286e <fputc+0x6e>
    2846:	8b 01       	movw	r16, r22
    2848:	ec 01       	movw	r28, r24
    284a:	fb 01       	movw	r30, r22
    284c:	00 84       	ldd	r0, Z+8	; 0x08
    284e:	f1 85       	ldd	r31, Z+9	; 0x09
    2850:	e0 2d       	mov	r30, r0
    2852:	19 95       	eicall
    2854:	89 2b       	or	r24, r25
    2856:	e1 f6       	brne	.-72     	; 0x2810 <fputc+0x10>
    2858:	d8 01       	movw	r26, r16
    285a:	16 96       	adiw	r26, 0x06	; 6
    285c:	8d 91       	ld	r24, X+
    285e:	9c 91       	ld	r25, X
    2860:	17 97       	sbiw	r26, 0x07	; 7
    2862:	01 96       	adiw	r24, 0x01	; 1
    2864:	17 96       	adiw	r26, 0x07	; 7
    2866:	9c 93       	st	X, r25
    2868:	8e 93       	st	-X, r24
    286a:	16 97       	sbiw	r26, 0x06	; 6
    286c:	ce 01       	movw	r24, r28
    286e:	df 91       	pop	r29
    2870:	cf 91       	pop	r28
    2872:	1f 91       	pop	r17
    2874:	0f 91       	pop	r16
    2876:	08 95       	ret

00002878 <printf>:
    2878:	cf 93       	push	r28
    287a:	df 93       	push	r29
    287c:	cd b7       	in	r28, 0x3d	; 61
    287e:	de b7       	in	r29, 0x3e	; 62
    2880:	ae 01       	movw	r20, r28
    2882:	4a 5f       	subi	r20, 0xFA	; 250
    2884:	5f 4f       	sbci	r21, 0xFF	; 255
    2886:	fa 01       	movw	r30, r20
    2888:	61 91       	ld	r22, Z+
    288a:	71 91       	ld	r23, Z+
    288c:	af 01       	movw	r20, r30
    288e:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <__iob+0x2>
    2892:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <__iob+0x3>
    2896:	cc da       	rcall	.-2664   	; 0x1e30 <vfprintf>
    2898:	df 91       	pop	r29
    289a:	cf 91       	pop	r28
    289c:	08 95       	ret

0000289e <putchar>:
    289e:	60 91 27 04 	lds	r22, 0x0427	; 0x800427 <__iob+0x2>
    28a2:	70 91 28 04 	lds	r23, 0x0428	; 0x800428 <__iob+0x3>
    28a6:	ac cf       	rjmp	.-168    	; 0x2800 <fputc>

000028a8 <sprintf>:
    28a8:	0f 93       	push	r16
    28aa:	1f 93       	push	r17
    28ac:	cf 93       	push	r28
    28ae:	df 93       	push	r29
    28b0:	cd b7       	in	r28, 0x3d	; 61
    28b2:	de b7       	in	r29, 0x3e	; 62
    28b4:	2e 97       	sbiw	r28, 0x0e	; 14
    28b6:	0f b6       	in	r0, 0x3f	; 63
    28b8:	f8 94       	cli
    28ba:	de bf       	out	0x3e, r29	; 62
    28bc:	0f be       	out	0x3f, r0	; 63
    28be:	cd bf       	out	0x3d, r28	; 61
    28c0:	0e 89       	ldd	r16, Y+22	; 0x16
    28c2:	1f 89       	ldd	r17, Y+23	; 0x17
    28c4:	86 e0       	ldi	r24, 0x06	; 6
    28c6:	8c 83       	std	Y+4, r24	; 0x04
    28c8:	1a 83       	std	Y+2, r17	; 0x02
    28ca:	09 83       	std	Y+1, r16	; 0x01
    28cc:	8f ef       	ldi	r24, 0xFF	; 255
    28ce:	9f e7       	ldi	r25, 0x7F	; 127
    28d0:	9e 83       	std	Y+6, r25	; 0x06
    28d2:	8d 83       	std	Y+5, r24	; 0x05
    28d4:	ae 01       	movw	r20, r28
    28d6:	46 5e       	subi	r20, 0xE6	; 230
    28d8:	5f 4f       	sbci	r21, 0xFF	; 255
    28da:	68 8d       	ldd	r22, Y+24	; 0x18
    28dc:	79 8d       	ldd	r23, Y+25	; 0x19
    28de:	ce 01       	movw	r24, r28
    28e0:	01 96       	adiw	r24, 0x01	; 1
    28e2:	a6 da       	rcall	.-2740   	; 0x1e30 <vfprintf>
    28e4:	ef 81       	ldd	r30, Y+7	; 0x07
    28e6:	f8 85       	ldd	r31, Y+8	; 0x08
    28e8:	e0 0f       	add	r30, r16
    28ea:	f1 1f       	adc	r31, r17
    28ec:	10 82       	st	Z, r1
    28ee:	2e 96       	adiw	r28, 0x0e	; 14
    28f0:	0f b6       	in	r0, 0x3f	; 63
    28f2:	f8 94       	cli
    28f4:	de bf       	out	0x3e, r29	; 62
    28f6:	0f be       	out	0x3f, r0	; 63
    28f8:	cd bf       	out	0x3d, r28	; 61
    28fa:	df 91       	pop	r29
    28fc:	cf 91       	pop	r28
    28fe:	1f 91       	pop	r17
    2900:	0f 91       	pop	r16
    2902:	08 95       	ret

00002904 <__ultoa_invert>:
    2904:	fa 01       	movw	r30, r20
    2906:	aa 27       	eor	r26, r26
    2908:	28 30       	cpi	r18, 0x08	; 8
    290a:	51 f1       	breq	.+84     	; 0x2960 <__ultoa_invert+0x5c>
    290c:	20 31       	cpi	r18, 0x10	; 16
    290e:	81 f1       	breq	.+96     	; 0x2970 <__ultoa_invert+0x6c>
    2910:	e8 94       	clt
    2912:	6f 93       	push	r22
    2914:	6e 7f       	andi	r22, 0xFE	; 254
    2916:	6e 5f       	subi	r22, 0xFE	; 254
    2918:	7f 4f       	sbci	r23, 0xFF	; 255
    291a:	8f 4f       	sbci	r24, 0xFF	; 255
    291c:	9f 4f       	sbci	r25, 0xFF	; 255
    291e:	af 4f       	sbci	r26, 0xFF	; 255
    2920:	b1 e0       	ldi	r27, 0x01	; 1
    2922:	3e d0       	rcall	.+124    	; 0x29a0 <__ultoa_invert+0x9c>
    2924:	b4 e0       	ldi	r27, 0x04	; 4
    2926:	3c d0       	rcall	.+120    	; 0x29a0 <__ultoa_invert+0x9c>
    2928:	67 0f       	add	r22, r23
    292a:	78 1f       	adc	r23, r24
    292c:	89 1f       	adc	r24, r25
    292e:	9a 1f       	adc	r25, r26
    2930:	a1 1d       	adc	r26, r1
    2932:	68 0f       	add	r22, r24
    2934:	79 1f       	adc	r23, r25
    2936:	8a 1f       	adc	r24, r26
    2938:	91 1d       	adc	r25, r1
    293a:	a1 1d       	adc	r26, r1
    293c:	6a 0f       	add	r22, r26
    293e:	71 1d       	adc	r23, r1
    2940:	81 1d       	adc	r24, r1
    2942:	91 1d       	adc	r25, r1
    2944:	a1 1d       	adc	r26, r1
    2946:	20 d0       	rcall	.+64     	; 0x2988 <__ultoa_invert+0x84>
    2948:	09 f4       	brne	.+2      	; 0x294c <__ultoa_invert+0x48>
    294a:	68 94       	set
    294c:	3f 91       	pop	r19
    294e:	2a e0       	ldi	r18, 0x0A	; 10
    2950:	26 9f       	mul	r18, r22
    2952:	11 24       	eor	r1, r1
    2954:	30 19       	sub	r19, r0
    2956:	30 5d       	subi	r19, 0xD0	; 208
    2958:	31 93       	st	Z+, r19
    295a:	de f6       	brtc	.-74     	; 0x2912 <__ultoa_invert+0xe>
    295c:	cf 01       	movw	r24, r30
    295e:	08 95       	ret
    2960:	46 2f       	mov	r20, r22
    2962:	47 70       	andi	r20, 0x07	; 7
    2964:	40 5d       	subi	r20, 0xD0	; 208
    2966:	41 93       	st	Z+, r20
    2968:	b3 e0       	ldi	r27, 0x03	; 3
    296a:	0f d0       	rcall	.+30     	; 0x298a <__ultoa_invert+0x86>
    296c:	c9 f7       	brne	.-14     	; 0x2960 <__ultoa_invert+0x5c>
    296e:	f6 cf       	rjmp	.-20     	; 0x295c <__ultoa_invert+0x58>
    2970:	46 2f       	mov	r20, r22
    2972:	4f 70       	andi	r20, 0x0F	; 15
    2974:	40 5d       	subi	r20, 0xD0	; 208
    2976:	4a 33       	cpi	r20, 0x3A	; 58
    2978:	18 f0       	brcs	.+6      	; 0x2980 <__ultoa_invert+0x7c>
    297a:	49 5d       	subi	r20, 0xD9	; 217
    297c:	31 fd       	sbrc	r19, 1
    297e:	40 52       	subi	r20, 0x20	; 32
    2980:	41 93       	st	Z+, r20
    2982:	02 d0       	rcall	.+4      	; 0x2988 <__ultoa_invert+0x84>
    2984:	a9 f7       	brne	.-22     	; 0x2970 <__ultoa_invert+0x6c>
    2986:	ea cf       	rjmp	.-44     	; 0x295c <__ultoa_invert+0x58>
    2988:	b4 e0       	ldi	r27, 0x04	; 4
    298a:	a6 95       	lsr	r26
    298c:	97 95       	ror	r25
    298e:	87 95       	ror	r24
    2990:	77 95       	ror	r23
    2992:	67 95       	ror	r22
    2994:	ba 95       	dec	r27
    2996:	c9 f7       	brne	.-14     	; 0x298a <__ultoa_invert+0x86>
    2998:	00 97       	sbiw	r24, 0x00	; 0
    299a:	61 05       	cpc	r22, r1
    299c:	71 05       	cpc	r23, r1
    299e:	08 95       	ret
    29a0:	9b 01       	movw	r18, r22
    29a2:	ac 01       	movw	r20, r24
    29a4:	0a 2e       	mov	r0, r26
    29a6:	06 94       	lsr	r0
    29a8:	57 95       	ror	r21
    29aa:	47 95       	ror	r20
    29ac:	37 95       	ror	r19
    29ae:	27 95       	ror	r18
    29b0:	ba 95       	dec	r27
    29b2:	c9 f7       	brne	.-14     	; 0x29a6 <__ultoa_invert+0xa2>
    29b4:	62 0f       	add	r22, r18
    29b6:	73 1f       	adc	r23, r19
    29b8:	84 1f       	adc	r24, r20
    29ba:	95 1f       	adc	r25, r21
    29bc:	a0 1d       	adc	r26, r0
    29be:	08 95       	ret

000029c0 <calloc>:
    29c0:	0f 93       	push	r16
    29c2:	1f 93       	push	r17
    29c4:	cf 93       	push	r28
    29c6:	df 93       	push	r29
    29c8:	86 9f       	mul	r24, r22
    29ca:	80 01       	movw	r16, r0
    29cc:	87 9f       	mul	r24, r23
    29ce:	10 0d       	add	r17, r0
    29d0:	96 9f       	mul	r25, r22
    29d2:	10 0d       	add	r17, r0
    29d4:	11 24       	eor	r1, r1
    29d6:	c8 01       	movw	r24, r16
    29d8:	0d d0       	rcall	.+26     	; 0x29f4 <malloc>
    29da:	ec 01       	movw	r28, r24
    29dc:	00 97       	sbiw	r24, 0x00	; 0
    29de:	21 f0       	breq	.+8      	; 0x29e8 <calloc+0x28>
    29e0:	a8 01       	movw	r20, r16
    29e2:	60 e0       	ldi	r22, 0x00	; 0
    29e4:	70 e0       	ldi	r23, 0x00	; 0
    29e6:	27 d1       	rcall	.+590    	; 0x2c36 <memset>
    29e8:	ce 01       	movw	r24, r28
    29ea:	df 91       	pop	r29
    29ec:	cf 91       	pop	r28
    29ee:	1f 91       	pop	r17
    29f0:	0f 91       	pop	r16
    29f2:	08 95       	ret

000029f4 <malloc>:
    29f4:	0f 93       	push	r16
    29f6:	1f 93       	push	r17
    29f8:	cf 93       	push	r28
    29fa:	df 93       	push	r29
    29fc:	82 30       	cpi	r24, 0x02	; 2
    29fe:	91 05       	cpc	r25, r1
    2a00:	10 f4       	brcc	.+4      	; 0x2a06 <malloc+0x12>
    2a02:	82 e0       	ldi	r24, 0x02	; 2
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	e0 91 2d 04 	lds	r30, 0x042D	; 0x80042d <__flp>
    2a0a:	f0 91 2e 04 	lds	r31, 0x042E	; 0x80042e <__flp+0x1>
    2a0e:	20 e0       	ldi	r18, 0x00	; 0
    2a10:	30 e0       	ldi	r19, 0x00	; 0
    2a12:	a0 e0       	ldi	r26, 0x00	; 0
    2a14:	b0 e0       	ldi	r27, 0x00	; 0
    2a16:	30 97       	sbiw	r30, 0x00	; 0
    2a18:	19 f1       	breq	.+70     	; 0x2a60 <malloc+0x6c>
    2a1a:	40 81       	ld	r20, Z
    2a1c:	51 81       	ldd	r21, Z+1	; 0x01
    2a1e:	02 81       	ldd	r16, Z+2	; 0x02
    2a20:	13 81       	ldd	r17, Z+3	; 0x03
    2a22:	48 17       	cp	r20, r24
    2a24:	59 07       	cpc	r21, r25
    2a26:	c8 f0       	brcs	.+50     	; 0x2a5a <malloc+0x66>
    2a28:	84 17       	cp	r24, r20
    2a2a:	95 07       	cpc	r25, r21
    2a2c:	69 f4       	brne	.+26     	; 0x2a48 <malloc+0x54>
    2a2e:	10 97       	sbiw	r26, 0x00	; 0
    2a30:	31 f0       	breq	.+12     	; 0x2a3e <malloc+0x4a>
    2a32:	12 96       	adiw	r26, 0x02	; 2
    2a34:	0c 93       	st	X, r16
    2a36:	12 97       	sbiw	r26, 0x02	; 2
    2a38:	13 96       	adiw	r26, 0x03	; 3
    2a3a:	1c 93       	st	X, r17
    2a3c:	27 c0       	rjmp	.+78     	; 0x2a8c <malloc+0x98>
    2a3e:	00 93 2d 04 	sts	0x042D, r16	; 0x80042d <__flp>
    2a42:	10 93 2e 04 	sts	0x042E, r17	; 0x80042e <__flp+0x1>
    2a46:	22 c0       	rjmp	.+68     	; 0x2a8c <malloc+0x98>
    2a48:	21 15       	cp	r18, r1
    2a4a:	31 05       	cpc	r19, r1
    2a4c:	19 f0       	breq	.+6      	; 0x2a54 <malloc+0x60>
    2a4e:	42 17       	cp	r20, r18
    2a50:	53 07       	cpc	r21, r19
    2a52:	18 f4       	brcc	.+6      	; 0x2a5a <malloc+0x66>
    2a54:	9a 01       	movw	r18, r20
    2a56:	bd 01       	movw	r22, r26
    2a58:	ef 01       	movw	r28, r30
    2a5a:	df 01       	movw	r26, r30
    2a5c:	f8 01       	movw	r30, r16
    2a5e:	db cf       	rjmp	.-74     	; 0x2a16 <malloc+0x22>
    2a60:	21 15       	cp	r18, r1
    2a62:	31 05       	cpc	r19, r1
    2a64:	f9 f0       	breq	.+62     	; 0x2aa4 <malloc+0xb0>
    2a66:	28 1b       	sub	r18, r24
    2a68:	39 0b       	sbc	r19, r25
    2a6a:	24 30       	cpi	r18, 0x04	; 4
    2a6c:	31 05       	cpc	r19, r1
    2a6e:	80 f4       	brcc	.+32     	; 0x2a90 <malloc+0x9c>
    2a70:	8a 81       	ldd	r24, Y+2	; 0x02
    2a72:	9b 81       	ldd	r25, Y+3	; 0x03
    2a74:	61 15       	cp	r22, r1
    2a76:	71 05       	cpc	r23, r1
    2a78:	21 f0       	breq	.+8      	; 0x2a82 <malloc+0x8e>
    2a7a:	fb 01       	movw	r30, r22
    2a7c:	93 83       	std	Z+3, r25	; 0x03
    2a7e:	82 83       	std	Z+2, r24	; 0x02
    2a80:	04 c0       	rjmp	.+8      	; 0x2a8a <malloc+0x96>
    2a82:	90 93 2e 04 	sts	0x042E, r25	; 0x80042e <__flp+0x1>
    2a86:	80 93 2d 04 	sts	0x042D, r24	; 0x80042d <__flp>
    2a8a:	fe 01       	movw	r30, r28
    2a8c:	32 96       	adiw	r30, 0x02	; 2
    2a8e:	44 c0       	rjmp	.+136    	; 0x2b18 <malloc+0x124>
    2a90:	fe 01       	movw	r30, r28
    2a92:	e2 0f       	add	r30, r18
    2a94:	f3 1f       	adc	r31, r19
    2a96:	81 93       	st	Z+, r24
    2a98:	91 93       	st	Z+, r25
    2a9a:	22 50       	subi	r18, 0x02	; 2
    2a9c:	31 09       	sbc	r19, r1
    2a9e:	39 83       	std	Y+1, r19	; 0x01
    2aa0:	28 83       	st	Y, r18
    2aa2:	3a c0       	rjmp	.+116    	; 0x2b18 <malloc+0x124>
    2aa4:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <__brkval>
    2aa8:	30 91 2c 04 	lds	r19, 0x042C	; 0x80042c <__brkval+0x1>
    2aac:	23 2b       	or	r18, r19
    2aae:	41 f4       	brne	.+16     	; 0x2ac0 <malloc+0xcc>
    2ab0:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2ab4:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2ab8:	30 93 2c 04 	sts	0x042C, r19	; 0x80042c <__brkval+0x1>
    2abc:	20 93 2b 04 	sts	0x042B, r18	; 0x80042b <__brkval>
    2ac0:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2ac4:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2ac8:	21 15       	cp	r18, r1
    2aca:	31 05       	cpc	r19, r1
    2acc:	41 f4       	brne	.+16     	; 0x2ade <malloc+0xea>
    2ace:	2d b7       	in	r18, 0x3d	; 61
    2ad0:	3e b7       	in	r19, 0x3e	; 62
    2ad2:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2ad6:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2ada:	24 1b       	sub	r18, r20
    2adc:	35 0b       	sbc	r19, r21
    2ade:	e0 91 2b 04 	lds	r30, 0x042B	; 0x80042b <__brkval>
    2ae2:	f0 91 2c 04 	lds	r31, 0x042C	; 0x80042c <__brkval+0x1>
    2ae6:	e2 17       	cp	r30, r18
    2ae8:	f3 07       	cpc	r31, r19
    2aea:	a0 f4       	brcc	.+40     	; 0x2b14 <malloc+0x120>
    2aec:	2e 1b       	sub	r18, r30
    2aee:	3f 0b       	sbc	r19, r31
    2af0:	28 17       	cp	r18, r24
    2af2:	39 07       	cpc	r19, r25
    2af4:	78 f0       	brcs	.+30     	; 0x2b14 <malloc+0x120>
    2af6:	ac 01       	movw	r20, r24
    2af8:	4e 5f       	subi	r20, 0xFE	; 254
    2afa:	5f 4f       	sbci	r21, 0xFF	; 255
    2afc:	24 17       	cp	r18, r20
    2afe:	35 07       	cpc	r19, r21
    2b00:	48 f0       	brcs	.+18     	; 0x2b14 <malloc+0x120>
    2b02:	4e 0f       	add	r20, r30
    2b04:	5f 1f       	adc	r21, r31
    2b06:	50 93 2c 04 	sts	0x042C, r21	; 0x80042c <__brkval+0x1>
    2b0a:	40 93 2b 04 	sts	0x042B, r20	; 0x80042b <__brkval>
    2b0e:	81 93       	st	Z+, r24
    2b10:	91 93       	st	Z+, r25
    2b12:	02 c0       	rjmp	.+4      	; 0x2b18 <malloc+0x124>
    2b14:	e0 e0       	ldi	r30, 0x00	; 0
    2b16:	f0 e0       	ldi	r31, 0x00	; 0
    2b18:	cf 01       	movw	r24, r30
    2b1a:	df 91       	pop	r29
    2b1c:	cf 91       	pop	r28
    2b1e:	1f 91       	pop	r17
    2b20:	0f 91       	pop	r16
    2b22:	08 95       	ret

00002b24 <free>:
    2b24:	cf 93       	push	r28
    2b26:	df 93       	push	r29
    2b28:	00 97       	sbiw	r24, 0x00	; 0
    2b2a:	09 f4       	brne	.+2      	; 0x2b2e <free+0xa>
    2b2c:	81 c0       	rjmp	.+258    	; 0x2c30 <free+0x10c>
    2b2e:	fc 01       	movw	r30, r24
    2b30:	32 97       	sbiw	r30, 0x02	; 2
    2b32:	13 82       	std	Z+3, r1	; 0x03
    2b34:	12 82       	std	Z+2, r1	; 0x02
    2b36:	a0 91 2d 04 	lds	r26, 0x042D	; 0x80042d <__flp>
    2b3a:	b0 91 2e 04 	lds	r27, 0x042E	; 0x80042e <__flp+0x1>
    2b3e:	10 97       	sbiw	r26, 0x00	; 0
    2b40:	81 f4       	brne	.+32     	; 0x2b62 <free+0x3e>
    2b42:	20 81       	ld	r18, Z
    2b44:	31 81       	ldd	r19, Z+1	; 0x01
    2b46:	82 0f       	add	r24, r18
    2b48:	93 1f       	adc	r25, r19
    2b4a:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <__brkval>
    2b4e:	30 91 2c 04 	lds	r19, 0x042C	; 0x80042c <__brkval+0x1>
    2b52:	28 17       	cp	r18, r24
    2b54:	39 07       	cpc	r19, r25
    2b56:	51 f5       	brne	.+84     	; 0x2bac <free+0x88>
    2b58:	f0 93 2c 04 	sts	0x042C, r31	; 0x80042c <__brkval+0x1>
    2b5c:	e0 93 2b 04 	sts	0x042B, r30	; 0x80042b <__brkval>
    2b60:	67 c0       	rjmp	.+206    	; 0x2c30 <free+0x10c>
    2b62:	ed 01       	movw	r28, r26
    2b64:	20 e0       	ldi	r18, 0x00	; 0
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	ce 17       	cp	r28, r30
    2b6a:	df 07       	cpc	r29, r31
    2b6c:	40 f4       	brcc	.+16     	; 0x2b7e <free+0x5a>
    2b6e:	4a 81       	ldd	r20, Y+2	; 0x02
    2b70:	5b 81       	ldd	r21, Y+3	; 0x03
    2b72:	9e 01       	movw	r18, r28
    2b74:	41 15       	cp	r20, r1
    2b76:	51 05       	cpc	r21, r1
    2b78:	f1 f0       	breq	.+60     	; 0x2bb6 <free+0x92>
    2b7a:	ea 01       	movw	r28, r20
    2b7c:	f5 cf       	rjmp	.-22     	; 0x2b68 <free+0x44>
    2b7e:	d3 83       	std	Z+3, r29	; 0x03
    2b80:	c2 83       	std	Z+2, r28	; 0x02
    2b82:	40 81       	ld	r20, Z
    2b84:	51 81       	ldd	r21, Z+1	; 0x01
    2b86:	84 0f       	add	r24, r20
    2b88:	95 1f       	adc	r25, r21
    2b8a:	c8 17       	cp	r28, r24
    2b8c:	d9 07       	cpc	r29, r25
    2b8e:	59 f4       	brne	.+22     	; 0x2ba6 <free+0x82>
    2b90:	88 81       	ld	r24, Y
    2b92:	99 81       	ldd	r25, Y+1	; 0x01
    2b94:	84 0f       	add	r24, r20
    2b96:	95 1f       	adc	r25, r21
    2b98:	02 96       	adiw	r24, 0x02	; 2
    2b9a:	91 83       	std	Z+1, r25	; 0x01
    2b9c:	80 83       	st	Z, r24
    2b9e:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba0:	9b 81       	ldd	r25, Y+3	; 0x03
    2ba2:	93 83       	std	Z+3, r25	; 0x03
    2ba4:	82 83       	std	Z+2, r24	; 0x02
    2ba6:	21 15       	cp	r18, r1
    2ba8:	31 05       	cpc	r19, r1
    2baa:	29 f4       	brne	.+10     	; 0x2bb6 <free+0x92>
    2bac:	f0 93 2e 04 	sts	0x042E, r31	; 0x80042e <__flp+0x1>
    2bb0:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <__flp>
    2bb4:	3d c0       	rjmp	.+122    	; 0x2c30 <free+0x10c>
    2bb6:	e9 01       	movw	r28, r18
    2bb8:	fb 83       	std	Y+3, r31	; 0x03
    2bba:	ea 83       	std	Y+2, r30	; 0x02
    2bbc:	49 91       	ld	r20, Y+
    2bbe:	59 91       	ld	r21, Y+
    2bc0:	c4 0f       	add	r28, r20
    2bc2:	d5 1f       	adc	r29, r21
    2bc4:	ec 17       	cp	r30, r28
    2bc6:	fd 07       	cpc	r31, r29
    2bc8:	61 f4       	brne	.+24     	; 0x2be2 <free+0xbe>
    2bca:	80 81       	ld	r24, Z
    2bcc:	91 81       	ldd	r25, Z+1	; 0x01
    2bce:	84 0f       	add	r24, r20
    2bd0:	95 1f       	adc	r25, r21
    2bd2:	02 96       	adiw	r24, 0x02	; 2
    2bd4:	e9 01       	movw	r28, r18
    2bd6:	99 83       	std	Y+1, r25	; 0x01
    2bd8:	88 83       	st	Y, r24
    2bda:	82 81       	ldd	r24, Z+2	; 0x02
    2bdc:	93 81       	ldd	r25, Z+3	; 0x03
    2bde:	9b 83       	std	Y+3, r25	; 0x03
    2be0:	8a 83       	std	Y+2, r24	; 0x02
    2be2:	e0 e0       	ldi	r30, 0x00	; 0
    2be4:	f0 e0       	ldi	r31, 0x00	; 0
    2be6:	12 96       	adiw	r26, 0x02	; 2
    2be8:	8d 91       	ld	r24, X+
    2bea:	9c 91       	ld	r25, X
    2bec:	13 97       	sbiw	r26, 0x03	; 3
    2bee:	00 97       	sbiw	r24, 0x00	; 0
    2bf0:	19 f0       	breq	.+6      	; 0x2bf8 <free+0xd4>
    2bf2:	fd 01       	movw	r30, r26
    2bf4:	dc 01       	movw	r26, r24
    2bf6:	f7 cf       	rjmp	.-18     	; 0x2be6 <free+0xc2>
    2bf8:	8d 91       	ld	r24, X+
    2bfa:	9c 91       	ld	r25, X
    2bfc:	11 97       	sbiw	r26, 0x01	; 1
    2bfe:	9d 01       	movw	r18, r26
    2c00:	2e 5f       	subi	r18, 0xFE	; 254
    2c02:	3f 4f       	sbci	r19, 0xFF	; 255
    2c04:	82 0f       	add	r24, r18
    2c06:	93 1f       	adc	r25, r19
    2c08:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <__brkval>
    2c0c:	30 91 2c 04 	lds	r19, 0x042C	; 0x80042c <__brkval+0x1>
    2c10:	28 17       	cp	r18, r24
    2c12:	39 07       	cpc	r19, r25
    2c14:	69 f4       	brne	.+26     	; 0x2c30 <free+0x10c>
    2c16:	30 97       	sbiw	r30, 0x00	; 0
    2c18:	29 f4       	brne	.+10     	; 0x2c24 <free+0x100>
    2c1a:	10 92 2e 04 	sts	0x042E, r1	; 0x80042e <__flp+0x1>
    2c1e:	10 92 2d 04 	sts	0x042D, r1	; 0x80042d <__flp>
    2c22:	02 c0       	rjmp	.+4      	; 0x2c28 <free+0x104>
    2c24:	13 82       	std	Z+3, r1	; 0x03
    2c26:	12 82       	std	Z+2, r1	; 0x02
    2c28:	b0 93 2c 04 	sts	0x042C, r27	; 0x80042c <__brkval+0x1>
    2c2c:	a0 93 2b 04 	sts	0x042B, r26	; 0x80042b <__brkval>
    2c30:	df 91       	pop	r29
    2c32:	cf 91       	pop	r28
    2c34:	08 95       	ret

00002c36 <memset>:
    2c36:	dc 01       	movw	r26, r24
    2c38:	01 c0       	rjmp	.+2      	; 0x2c3c <memset+0x6>
    2c3a:	6d 93       	st	X+, r22
    2c3c:	41 50       	subi	r20, 0x01	; 1
    2c3e:	50 40       	sbci	r21, 0x00	; 0
    2c40:	e0 f7       	brcc	.-8      	; 0x2c3a <memset+0x4>
    2c42:	08 95       	ret

00002c44 <_exit>:
    2c44:	f8 94       	cli

00002c46 <__stop_program>:
    2c46:	ff cf       	rjmp	.-2      	; 0x2c46 <__stop_program>
