
drv_.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001a2  00800200  00002cd0  00002d64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002cd0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ba  008003a2  008003a2  00002f06  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002f06  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002f64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d0  00000000  00000000  00002fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000398c  00000000  00000000  00003274  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a58  00000000  00000000  00006c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a48  00000000  00000000  00008658  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000096c  00000000  00000000  0000a0a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000db4  00000000  00000000  0000aa0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000256a  00000000  00000000  0000b7c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  0000dd2a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c1       	rjmp	.+530    	; 0x214 <__ctors_end>
       2:	00 00       	nop
       4:	27 c1       	rjmp	.+590    	; 0x254 <__bad_interrupt>
       6:	00 00       	nop
       8:	25 c1       	rjmp	.+586    	; 0x254 <__bad_interrupt>
       a:	00 00       	nop
       c:	23 c1       	rjmp	.+582    	; 0x254 <__bad_interrupt>
       e:	00 00       	nop
      10:	21 c1       	rjmp	.+578    	; 0x254 <__bad_interrupt>
      12:	00 00       	nop
      14:	1f c1       	rjmp	.+574    	; 0x254 <__bad_interrupt>
      16:	00 00       	nop
      18:	1d c1       	rjmp	.+570    	; 0x254 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1b c1       	rjmp	.+566    	; 0x254 <__bad_interrupt>
      1e:	00 00       	nop
      20:	19 c1       	rjmp	.+562    	; 0x254 <__bad_interrupt>
      22:	00 00       	nop
      24:	17 c1       	rjmp	.+558    	; 0x254 <__bad_interrupt>
      26:	00 00       	nop
      28:	15 c1       	rjmp	.+554    	; 0x254 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	13 c1       	rjmp	.+550    	; 0x254 <__bad_interrupt>
      2e:	00 00       	nop
      30:	11 c1       	rjmp	.+546    	; 0x254 <__bad_interrupt>
      32:	00 00       	nop
      34:	0f c1       	rjmp	.+542    	; 0x254 <__bad_interrupt>
      36:	00 00       	nop
      38:	0d c1       	rjmp	.+538    	; 0x254 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0b c1       	rjmp	.+534    	; 0x254 <__bad_interrupt>
      3e:	00 00       	nop
      40:	09 c1       	rjmp	.+530    	; 0x254 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 09 0b 	jmp	0x1612	; 0x1612 <__vector_17>
      48:	05 c1       	rjmp	.+522    	; 0x254 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	03 c1       	rjmp	.+518    	; 0x254 <__bad_interrupt>
      4e:	00 00       	nop
      50:	01 c1       	rjmp	.+514    	; 0x254 <__bad_interrupt>
      52:	00 00       	nop
      54:	ff c0       	rjmp	.+510    	; 0x254 <__bad_interrupt>
      56:	00 00       	nop
      58:	fd c0       	rjmp	.+506    	; 0x254 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 97 0a 	jmp	0x152e	; 0x152e <__vector_23>
      60:	f9 c0       	rjmp	.+498    	; 0x254 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 8a 08 	jmp	0x1114	; 0x1114 <__vector_25>
      68:	f5 c0       	rjmp	.+490    	; 0x254 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f3 c0       	rjmp	.+486    	; 0x254 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f1 c0       	rjmp	.+482    	; 0x254 <__bad_interrupt>
      72:	00 00       	nop
      74:	ef c0       	rjmp	.+478    	; 0x254 <__bad_interrupt>
      76:	00 00       	nop
      78:	ed c0       	rjmp	.+474    	; 0x254 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	eb c0       	rjmp	.+470    	; 0x254 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e9 c0       	rjmp	.+466    	; 0x254 <__bad_interrupt>
      82:	00 00       	nop
      84:	e7 c0       	rjmp	.+462    	; 0x254 <__bad_interrupt>
      86:	00 00       	nop
      88:	e5 c0       	rjmp	.+458    	; 0x254 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e3 c0       	rjmp	.+454    	; 0x254 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e1 c0       	rjmp	.+450    	; 0x254 <__bad_interrupt>
      92:	00 00       	nop
      94:	df c0       	rjmp	.+446    	; 0x254 <__bad_interrupt>
      96:	00 00       	nop
      98:	dd c0       	rjmp	.+442    	; 0x254 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	db c0       	rjmp	.+438    	; 0x254 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d9 c0       	rjmp	.+434    	; 0x254 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d7 c0       	rjmp	.+430    	; 0x254 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d5 c0       	rjmp	.+426    	; 0x254 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d3 c0       	rjmp	.+422    	; 0x254 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d1 c0       	rjmp	.+418    	; 0x254 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	cf c0       	rjmp	.+414    	; 0x254 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cd c0       	rjmp	.+410    	; 0x254 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 e1 0a 	jmp	0x15c2	; 0x15c2 <__vector_47>
      c0:	c9 c0       	rjmp	.+402    	; 0x254 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c7 c0       	rjmp	.+398    	; 0x254 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c5 c0       	rjmp	.+394    	; 0x254 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	c3 c0       	rjmp	.+390    	; 0x254 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	c1 c0       	rjmp	.+386    	; 0x254 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	bf c0       	rjmp	.+382    	; 0x254 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	bd c0       	rjmp	.+378    	; 0x254 <__bad_interrupt>
      da:	00 00       	nop
      dc:	bb c0       	rjmp	.+374    	; 0x254 <__bad_interrupt>
      de:	00 00       	nop
      e0:	b9 c0       	rjmp	.+370    	; 0x254 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	08 4a       	sbci	r16, 0xA8	; 168
      e6:	d7 3b       	cpi	r29, 0xB7	; 183
      e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
      ea:	01 6e       	ori	r16, 0xE1	; 225
      ec:	84 bc       	out	0x24, r8	; 36
      ee:	bf fd       	.word	0xfdbf	; ????
      f0:	c1 2f       	mov	r28, r17
      f2:	3d 6c       	ori	r19, 0xCD	; 205
      f4:	74 31       	cpi	r23, 0x14	; 20
      f6:	9a bd       	out	0x2a, r25	; 42
      f8:	56 83       	std	Z+6, r21	; 0x06
      fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
      fc:	3d 00       	.word	0x003d	; ????
      fe:	c7 7f       	andi	r28, 0xF7	; 247
     100:	11 be       	out	0x31, r1	; 49
     102:	d9 e4       	ldi	r29, 0x49	; 73
     104:	bb 4c       	sbci	r27, 0xCB	; 203
     106:	3e 91       	ld	r19, -X
     108:	6b aa       	std	Y+51, r6	; 0x33
     10a:	aa be       	out	0x3a, r10	; 58
     10c:	00 00       	nop
     10e:	00 80       	ld	r0, Z
     110:	3f 00       	.word	0x003f	; ????

00000112 <__trampolines_end>:
     112:	6e 61       	ori	r22, 0x1E	; 30
     114:	6e 00       	.word	0x006e	; ????

00000116 <__c.2332>:
     116:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     126:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     136:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     146:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     156:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     166:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     176:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     186:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     196:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1a6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1b6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1c6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1d6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1e6:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1f6:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     206:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000214 <__ctors_end>:
     214:	11 24       	eor	r1, r1
     216:	1f be       	out	0x3f, r1	; 63
     218:	cf ef       	ldi	r28, 0xFF	; 255
     21a:	d1 e2       	ldi	r29, 0x21	; 33
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0c bf       	out	0x3c, r16	; 60

00000224 <__do_copy_data>:
     224:	13 e0       	ldi	r17, 0x03	; 3
     226:	a0 e0       	ldi	r26, 0x00	; 0
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	e0 ed       	ldi	r30, 0xD0	; 208
     22c:	fc e2       	ldi	r31, 0x2C	; 44
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	0b bf       	out	0x3b, r16	; 59
     232:	02 c0       	rjmp	.+4      	; 0x238 <__do_copy_data+0x14>
     234:	07 90       	elpm	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	a2 3a       	cpi	r26, 0xA2	; 162
     23a:	b1 07       	cpc	r27, r17
     23c:	d9 f7       	brne	.-10     	; 0x234 <__do_copy_data+0x10>

0000023e <__do_clear_bss>:
     23e:	24 e0       	ldi	r18, 0x04	; 4
     240:	a2 ea       	ldi	r26, 0xA2	; 162
     242:	b3 e0       	ldi	r27, 0x03	; 3
     244:	01 c0       	rjmp	.+2      	; 0x248 <.do_clear_bss_start>

00000246 <.do_clear_bss_loop>:
     246:	1d 92       	st	X+, r1

00000248 <.do_clear_bss_start>:
     248:	ac 35       	cpi	r26, 0x5C	; 92
     24a:	b2 07       	cpc	r27, r18
     24c:	e1 f7       	brne	.-8      	; 0x246 <.do_clear_bss_loop>
     24e:	c0 d5       	rcall	.+2944   	; 0xdd0 <main>
     250:	0c 94 66 16 	jmp	0x2ccc	; 0x2ccc <_exit>

00000254 <__bad_interrupt>:
     254:	d5 ce       	rjmp	.-598    	; 0x0 <__vectors>

00000256 <init_gpio>:
{	
	if (a>b && a>c) return a;
	if (b>a && b>c) return b;
	if (c>a && c>b) return c;
	return a;
}
     256:	08 95       	ret

00000258 <PWM_update>:
void PWM_update()//motor pwm update
{
     258:	8f 92       	push	r8
     25a:	9f 92       	push	r9
     25c:	af 92       	push	r10
     25e:	bf 92       	push	r11
     260:	cf 92       	push	r12
     262:	df 92       	push	r13
     264:	ef 92       	push	r14
     266:	ff 92       	push	r15
     268:	0f 93       	push	r16
     26a:	1f 93       	push	r17
	PID_roll=Compute_PID(kalman_angle_roll, 0 , &pid_i_roll, &previous_error_roll,dt,kp_roll,ki_roll,kd_roll);
     26c:	a0 90 4a 04 	lds	r10, 0x044A	; 0x80044a <dt>
     270:	b0 90 4b 04 	lds	r11, 0x044B	; 0x80044b <dt+0x1>
     274:	c0 90 4c 04 	lds	r12, 0x044C	; 0x80044c <dt+0x2>
     278:	d0 90 4d 04 	lds	r13, 0x044D	; 0x80044d <dt+0x3>
     27c:	60 91 4e 04 	lds	r22, 0x044E	; 0x80044e <kalman_angle_roll>
     280:	70 91 4f 04 	lds	r23, 0x044F	; 0x80044f <kalman_angle_roll+0x1>
     284:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <kalman_angle_roll+0x2>
     288:	90 91 51 04 	lds	r25, 0x0451	; 0x800451 <kalman_angle_roll+0x3>
     28c:	20 91 7c 03 	lds	r18, 0x037C	; 0x80037c <kd_roll+0x3>
     290:	2f 93       	push	r18
     292:	20 91 7b 03 	lds	r18, 0x037B	; 0x80037b <kd_roll+0x2>
     296:	2f 93       	push	r18
     298:	20 91 7a 03 	lds	r18, 0x037A	; 0x80037a <kd_roll+0x1>
     29c:	2f 93       	push	r18
     29e:	20 91 79 03 	lds	r18, 0x0379	; 0x800379 <kd_roll>
     2a2:	2f 93       	push	r18
     2a4:	20 91 b2 03 	lds	r18, 0x03B2	; 0x8003b2 <ki_roll+0x3>
     2a8:	2f 93       	push	r18
     2aa:	20 91 b1 03 	lds	r18, 0x03B1	; 0x8003b1 <ki_roll+0x2>
     2ae:	2f 93       	push	r18
     2b0:	20 91 b0 03 	lds	r18, 0x03B0	; 0x8003b0 <ki_roll+0x1>
     2b4:	2f 93       	push	r18
     2b6:	20 91 af 03 	lds	r18, 0x03AF	; 0x8003af <ki_roll>
     2ba:	2f 93       	push	r18
     2bc:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <kp_roll+0x3>
     2c0:	2f 93       	push	r18
     2c2:	20 91 7f 03 	lds	r18, 0x037F	; 0x80037f <kp_roll+0x2>
     2c6:	2f 93       	push	r18
     2c8:	20 91 7e 03 	lds	r18, 0x037E	; 0x80037e <kp_roll+0x1>
     2cc:	2f 93       	push	r18
     2ce:	20 91 7d 03 	lds	r18, 0x037D	; 0x80037d <kp_roll>
     2d2:	2f 93       	push	r18
     2d4:	0f 2e       	mov	r0, r31
     2d6:	f7 eb       	ldi	r31, 0xB7	; 183
     2d8:	ef 2e       	mov	r14, r31
     2da:	f3 e0       	ldi	r31, 0x03	; 3
     2dc:	ff 2e       	mov	r15, r31
     2de:	f0 2d       	mov	r31, r0
     2e0:	03 eb       	ldi	r16, 0xB3	; 179
     2e2:	13 e0       	ldi	r17, 0x03	; 3
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	a9 01       	movw	r20, r18
     2ea:	0e 94 94 09 	call	0x1328	; 0x1328 <Compute_PID>
     2ee:	4b 01       	movw	r8, r22
     2f0:	5c 01       	movw	r10, r24
     2f2:	60 93 bb 03 	sts	0x03BB, r22	; 0x8003bb <PID_roll>
     2f6:	70 93 bc 03 	sts	0x03BC, r23	; 0x8003bc <PID_roll+0x1>
     2fa:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <PID_roll+0x2>
     2fe:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <PID_roll+0x3>
	//PID_pitch=Compute_PID(kalman_angle_pitch, 0 ,&pid_i_pitch,&previous_error_pitch,dt,kp_pitch,ki_pitch,kd_pitch);

	if (abs(kalman_angle_roll)<0.04|| abs(kalman_angle_roll>45))
     302:	c0 90 4e 04 	lds	r12, 0x044E	; 0x80044e <kalman_angle_roll>
     306:	d0 90 4f 04 	lds	r13, 0x044F	; 0x80044f <kalman_angle_roll+0x1>
     30a:	e0 90 50 04 	lds	r14, 0x0450	; 0x800450 <kalman_angle_roll+0x2>
     30e:	f0 90 51 04 	lds	r15, 0x0451	; 0x800451 <kalman_angle_roll+0x3>
     312:	c7 01       	movw	r24, r14
     314:	b6 01       	movw	r22, r12
     316:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixsfsi>
     31a:	9b 01       	movw	r18, r22
     31c:	77 23       	and	r23, r23
     31e:	24 f4       	brge	.+8      	; 0x328 <PWM_update+0xd0>
     320:	22 27       	eor	r18, r18
     322:	33 27       	eor	r19, r19
     324:	26 1b       	sub	r18, r22
     326:	37 0b       	sbc	r19, r23
     328:	b9 01       	movw	r22, r18
     32a:	33 0f       	add	r19, r19
     32c:	88 0b       	sbc	r24, r24
     32e:	99 0b       	sbc	r25, r25
     330:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <__floatsisf>
     334:	2d b7       	in	r18, 0x3d	; 61
     336:	3e b7       	in	r19, 0x3e	; 62
     338:	24 5f       	subi	r18, 0xF4	; 244
     33a:	3f 4f       	sbci	r19, 0xFF	; 255
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	3e bf       	out	0x3e, r19	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	2d bf       	out	0x3d, r18	; 61
     346:	2a e0       	ldi	r18, 0x0A	; 10
     348:	37 ed       	ldi	r19, 0xD7	; 215
     34a:	43 e2       	ldi	r20, 0x23	; 35
     34c:	5d e3       	ldi	r21, 0x3D	; 61
     34e:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__cmpsf2>
     352:	88 23       	and	r24, r24
     354:	54 f0       	brlt	.+20     	; 0x36a <PWM_update+0x112>
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	44 e3       	ldi	r20, 0x34	; 52
     35c:	52 e4       	ldi	r21, 0x42	; 66
     35e:	c7 01       	movw	r24, r14
     360:	b6 01       	movw	r22, r12
     362:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <__gesf2>
     366:	18 16       	cp	r1, r24
     368:	6c f4       	brge	.+26     	; 0x384 <PWM_update+0x12c>
	{
		incr=0;
     36a:	10 92 ca 03 	sts	0x03CA, r1	; 0x8003ca <incr+0x1>
     36e:	10 92 c9 03 	sts	0x03C9, r1	; 0x8003c9 <incr>
		pid_i_roll=0;
     372:	10 92 b3 03 	sts	0x03B3, r1	; 0x8003b3 <pid_i_roll>
     376:	10 92 b4 03 	sts	0x03B4, r1	; 0x8003b4 <pid_i_roll+0x1>
     37a:	10 92 b5 03 	sts	0x03B5, r1	; 0x8003b5 <pid_i_roll+0x2>
     37e:	10 92 b6 03 	sts	0x03B6, r1	; 0x8003b6 <pid_i_roll+0x3>
     382:	30 c0       	rjmp	.+96     	; 0x3e4 <PWM_update+0x18c>
	}
	else
		if (kalman_angle_roll>0.04)
     384:	2a e0       	ldi	r18, 0x0A	; 10
     386:	37 ed       	ldi	r19, 0xD7	; 215
     388:	43 e2       	ldi	r20, 0x23	; 35
     38a:	5d e3       	ldi	r21, 0x3D	; 61
     38c:	c7 01       	movw	r24, r14
     38e:	b6 01       	movw	r22, r12
     390:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <__gesf2>
     394:	18 16       	cp	r1, r24
     396:	94 f4       	brge	.+36     	; 0x3bc <PWM_update+0x164>
		{
			incr=(uint8_t)(abs(PID_roll));
     398:	c5 01       	movw	r24, r10
     39a:	b4 01       	movw	r22, r8
     39c:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixsfsi>
     3a0:	9b 01       	movw	r18, r22
     3a2:	77 23       	and	r23, r23
     3a4:	24 f4       	brge	.+8      	; 0x3ae <PWM_update+0x156>
     3a6:	22 27       	eor	r18, r18
     3a8:	33 27       	eor	r19, r19
     3aa:	26 1b       	sub	r18, r22
     3ac:	37 0b       	sbc	r19, r23
     3ae:	c9 01       	movw	r24, r18
     3b0:	99 27       	eor	r25, r25
     3b2:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <incr+0x1>
     3b6:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <incr>
     3ba:	14 c0       	rjmp	.+40     	; 0x3e4 <PWM_update+0x18c>
			//printf("yes");
		}
		else 
		{
			incr =-(uint8_t)(abs(PID_roll));
     3bc:	c5 01       	movw	r24, r10
     3be:	b4 01       	movw	r22, r8
     3c0:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <__fixsfsi>
     3c4:	9b 01       	movw	r18, r22
     3c6:	77 23       	and	r23, r23
     3c8:	24 f4       	brge	.+8      	; 0x3d2 <PWM_update+0x17a>
     3ca:	22 27       	eor	r18, r18
     3cc:	33 27       	eor	r19, r19
     3ce:	26 1b       	sub	r18, r22
     3d0:	37 0b       	sbc	r19, r23
     3d2:	c9 01       	movw	r24, r18
     3d4:	99 27       	eor	r25, r25
     3d6:	91 95       	neg	r25
     3d8:	81 95       	neg	r24
     3da:	91 09       	sbc	r25, r1
     3dc:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <incr+0x1>
     3e0:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <incr>
			//printf("no");
		}
	U_PWM=pwmSin[U_step];
     3e4:	e0 91 a4 03 	lds	r30, 0x03A4	; 0x8003a4 <U_step>
     3e8:	f0 91 a5 03 	lds	r31, 0x03A5	; 0x8003a5 <U_step+0x1>
     3ec:	ea 5f       	subi	r30, 0xFA	; 250
     3ee:	fd 4f       	sbci	r31, 0xFD	; 253
     3f0:	80 81       	ld	r24, Z
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     3f8:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	V_PWM=pwmSin[V_step];
     3fc:	e0 91 75 03 	lds	r30, 0x0375	; 0x800375 <V_step>
     400:	f0 91 76 03 	lds	r31, 0x0376	; 0x800376 <V_step+0x1>
     404:	ea 5f       	subi	r30, 0xFA	; 250
     406:	fd 4f       	sbci	r31, 0xFD	; 253
     408:	80 81       	ld	r24, Z
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     410:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
	W_PWM=pwmSin[W_step];
     414:	e0 91 73 03 	lds	r30, 0x0373	; 0x800373 <W_step>
     418:	f0 91 74 03 	lds	r31, 0x0374	; 0x800374 <W_step+0x1>
     41c:	ea 5f       	subi	r30, 0xFA	; 250
     41e:	fd 4f       	sbci	r31, 0xFD	; 253
     420:	80 81       	ld	r24, Z
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	90 93 ad 00 	sts	0x00AD, r25	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
     428:	80 93 ac 00 	sts	0x00AC, r24	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
	U_step=U_step+incr;
     42c:	60 91 c9 03 	lds	r22, 0x03C9	; 0x8003c9 <incr>
     430:	70 91 ca 03 	lds	r23, 0x03CA	; 0x8003ca <incr+0x1>
     434:	40 91 a4 03 	lds	r20, 0x03A4	; 0x8003a4 <U_step>
     438:	50 91 a5 03 	lds	r21, 0x03A5	; 0x8003a5 <U_step+0x1>
     43c:	46 0f       	add	r20, r22
     43e:	57 1f       	adc	r21, r23
     440:	50 93 a5 03 	sts	0x03A5, r21	; 0x8003a5 <U_step+0x1>
     444:	40 93 a4 03 	sts	0x03A4, r20	; 0x8003a4 <U_step>
	V_step=V_step+incr;
     448:	20 91 75 03 	lds	r18, 0x0375	; 0x800375 <V_step>
     44c:	30 91 76 03 	lds	r19, 0x0376	; 0x800376 <V_step+0x1>
     450:	26 0f       	add	r18, r22
     452:	37 1f       	adc	r19, r23
     454:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     458:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step+incr;
     45c:	80 91 73 03 	lds	r24, 0x0373	; 0x800373 <W_step>
     460:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <W_step+0x1>
     464:	86 0f       	add	r24, r22
     466:	97 1f       	adc	r25, r23
     468:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     46c:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	if(U_step > SINE_TABLE_SZ)
     470:	49 36       	cpi	r20, 0x69	; 105
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	56 07       	cpc	r21, r22
     476:	2c f0       	brlt	.+10     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
	U_step = 0;
     478:	10 92 a5 03 	sts	0x03A5, r1	; 0x8003a5 <U_step+0x1>
     47c:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <U_step>
     480:	08 c0       	rjmp	.+16     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
	if(U_step < 0)
     482:	55 23       	and	r21, r21
     484:	34 f4       	brge	.+12     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
	U_step = SINE_TABLE_SZ;
     486:	48 e6       	ldi	r20, 0x68	; 104
     488:	51 e0       	ldi	r21, 0x01	; 1
     48a:	50 93 a5 03 	sts	0x03A5, r21	; 0x8003a5 <U_step+0x1>
     48e:	40 93 a4 03 	sts	0x03A4, r20	; 0x8003a4 <U_step>
	
	if(V_step > SINE_TABLE_SZ)
     492:	29 36       	cpi	r18, 0x69	; 105
     494:	41 e0       	ldi	r20, 0x01	; 1
     496:	34 07       	cpc	r19, r20
     498:	2c f0       	brlt	.+10     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
	V_step = 0;
     49a:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <V_step+0x1>
     49e:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <V_step>
     4a2:	08 c0       	rjmp	.+16     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
	if(V_step < 0)
     4a4:	33 23       	and	r19, r19
     4a6:	34 f4       	brge	.+12     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
	V_step = SINE_TABLE_SZ;
     4a8:	28 e6       	ldi	r18, 0x68	; 104
     4aa:	31 e0       	ldi	r19, 0x01	; 1
     4ac:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     4b0:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step > SINE_TABLE_SZ)
     4b4:	89 36       	cpi	r24, 0x69	; 105
     4b6:	61 e0       	ldi	r22, 0x01	; 1
     4b8:	96 07       	cpc	r25, r22
     4ba:	2c f0       	brlt	.+10     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
	W_step = 0;
     4bc:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <W_step+0x1>
     4c0:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <W_step>
     4c4:	08 c0       	rjmp	.+16     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
	if(W_step < 0)
     4c6:	99 23       	and	r25, r25
     4c8:	34 f4       	brge	.+12     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
	W_step = SINE_TABLE_SZ;
     4ca:	88 e6       	ldi	r24, 0x68	; 104
     4cc:	91 e0       	ldi	r25, 0x01	; 1
     4ce:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     4d2:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	//printf("debug 0000000");
	INT_MOTOR_SPEED1=pwm_delay;
     4d6:	80 91 c1 03 	lds	r24, 0x03C1	; 0x8003c1 <pwm_delay>
     4da:	90 91 c2 03 	lds	r25, 0x03C2	; 0x8003c2 <pwm_delay+0x1>
     4de:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     4e2:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
}
     4e6:	1f 91       	pop	r17
     4e8:	0f 91       	pop	r16
     4ea:	ff 90       	pop	r15
     4ec:	ef 90       	pop	r14
     4ee:	df 90       	pop	r13
     4f0:	cf 90       	pop	r12
     4f2:	bf 90       	pop	r11
     4f4:	af 90       	pop	r10
     4f6:	9f 90       	pop	r9
     4f8:	8f 90       	pop	r8
     4fa:	08 95       	ret

000004fc <PWM_update_2>:
void PWM_update_2()//motor pwm update
{
	U1_PWM=pwmSin[U_step_2];
     4fc:	e0 91 a2 03 	lds	r30, 0x03A2	; 0x8003a2 <__data_end>
     500:	f0 91 a3 03 	lds	r31, 0x03A3	; 0x8003a3 <__data_end+0x1>
     504:	ea 5f       	subi	r30, 0xFA	; 250
     506:	fd 4f       	sbci	r31, 0xFD	; 253
     508:	80 81       	ld	r24, Z
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     510:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	V1_PWM=pwmSin[V_step_2];
     514:	e0 91 71 03 	lds	r30, 0x0371	; 0x800371 <V_step_2>
     518:	f0 91 72 03 	lds	r31, 0x0372	; 0x800372 <V_step_2+0x1>
     51c:	ea 5f       	subi	r30, 0xFA	; 250
     51e:	fd 4f       	sbci	r31, 0xFD	; 253
     520:	80 81       	ld	r24, Z
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
     528:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
	W1_PWM=pwmSin[W_step_2];
     52c:	e0 91 6f 03 	lds	r30, 0x036F	; 0x80036f <W_step_2>
     530:	f0 91 70 03 	lds	r31, 0x0370	; 0x800370 <W_step_2+0x1>
     534:	ea 5f       	subi	r30, 0xFA	; 250
     536:	fd 4f       	sbci	r31, 0xFD	; 253
     538:	80 81       	ld	r24, Z
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     540:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
	U_step_2=U_step_2+incr_2;
     544:	60 91 c7 03 	lds	r22, 0x03C7	; 0x8003c7 <incr_2>
     548:	70 91 c8 03 	lds	r23, 0x03C8	; 0x8003c8 <incr_2+0x1>
     54c:	40 91 a2 03 	lds	r20, 0x03A2	; 0x8003a2 <__data_end>
     550:	50 91 a3 03 	lds	r21, 0x03A3	; 0x8003a3 <__data_end+0x1>
     554:	46 0f       	add	r20, r22
     556:	57 1f       	adc	r21, r23
     558:	50 93 a3 03 	sts	0x03A3, r21	; 0x8003a3 <__data_end+0x1>
     55c:	40 93 a2 03 	sts	0x03A2, r20	; 0x8003a2 <__data_end>
	V_step_2=V_step_2+incr_2;
     560:	20 91 71 03 	lds	r18, 0x0371	; 0x800371 <V_step_2>
     564:	30 91 72 03 	lds	r19, 0x0372	; 0x800372 <V_step_2+0x1>
     568:	26 0f       	add	r18, r22
     56a:	37 1f       	adc	r19, r23
     56c:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     570:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_2+incr_2;
     574:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <W_step_2>
     578:	90 91 70 03 	lds	r25, 0x0370	; 0x800370 <W_step_2+0x1>
     57c:	86 0f       	add	r24, r22
     57e:	97 1f       	adc	r25, r23
     580:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     584:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	if(U_step_2 > SINE_TABLE_SZ)
     588:	49 36       	cpi	r20, 0x69	; 105
     58a:	61 e0       	ldi	r22, 0x01	; 1
     58c:	56 07       	cpc	r21, r22
     58e:	2c f0       	brlt	.+10     	; 0x59a <PWM_update_2+0x9e>
	U_step_2 = 0;
     590:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <__data_end+0x1>
     594:	10 92 a2 03 	sts	0x03A2, r1	; 0x8003a2 <__data_end>
     598:	08 c0       	rjmp	.+16     	; 0x5aa <PWM_update_2+0xae>
	if(U_step_2 < 0)
     59a:	55 23       	and	r21, r21
     59c:	34 f4       	brge	.+12     	; 0x5aa <PWM_update_2+0xae>
	U_step_2 = SINE_TABLE_SZ;
     59e:	48 e6       	ldi	r20, 0x68	; 104
     5a0:	51 e0       	ldi	r21, 0x01	; 1
     5a2:	50 93 a3 03 	sts	0x03A3, r21	; 0x8003a3 <__data_end+0x1>
     5a6:	40 93 a2 03 	sts	0x03A2, r20	; 0x8003a2 <__data_end>
	
	if(V_step_2 > SINE_TABLE_SZ)
     5aa:	29 36       	cpi	r18, 0x69	; 105
     5ac:	41 e0       	ldi	r20, 0x01	; 1
     5ae:	34 07       	cpc	r19, r20
     5b0:	2c f0       	brlt	.+10     	; 0x5bc <PWM_update_2+0xc0>
	V_step_2 = 0;
     5b2:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <V_step_2+0x1>
     5b6:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <V_step_2>
     5ba:	08 c0       	rjmp	.+16     	; 0x5cc <PWM_update_2+0xd0>
	if(V_step_2 < 0)
     5bc:	33 23       	and	r19, r19
     5be:	34 f4       	brge	.+12     	; 0x5cc <PWM_update_2+0xd0>
	V_step = SINE_TABLE_SZ;
     5c0:	28 e6       	ldi	r18, 0x68	; 104
     5c2:	31 e0       	ldi	r19, 0x01	; 1
     5c4:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     5c8:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	
	if(W_step_2 > SINE_TABLE_SZ)
     5cc:	89 36       	cpi	r24, 0x69	; 105
     5ce:	61 e0       	ldi	r22, 0x01	; 1
     5d0:	96 07       	cpc	r25, r22
     5d2:	2c f0       	brlt	.+10     	; 0x5de <PWM_update_2+0xe2>
	W_step_2 = 0;
     5d4:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <W_step_2+0x1>
     5d8:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <W_step_2>
     5dc:	08 c0       	rjmp	.+16     	; 0x5ee <PWM_update_2+0xf2>
	if(W_step_2< 0)
     5de:	99 23       	and	r25, r25
     5e0:	34 f4       	brge	.+12     	; 0x5ee <PWM_update_2+0xf2>
	W_step_2 = SINE_TABLE_SZ;
     5e2:	88 e6       	ldi	r24, 0x68	; 104
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     5ea:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	//_delay_us(100);
	INT_MOTOR_SPEED2=pwm_delay_2;
     5ee:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <pwm_delay_2>
     5f2:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <pwm_delay_2+0x1>
     5f6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     5fa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     5fe:	08 95       	ret

00000600 <init_motor_gpio>:
	//printf("oopooo");
}
void init_motor_gpio()
{
	//setting pin mode to output for motor 1 
	sbi(DDRH,3);//digital 6 OC4A
     600:	e1 e0       	ldi	r30, 0x01	; 1
     602:	f1 e0       	ldi	r31, 0x01	; 1
     604:	80 81       	ld	r24, Z
     606:	88 60       	ori	r24, 0x08	; 8
     608:	80 83       	st	Z, r24
	sbi(DDRH,4);//digital 7 OC4B
     60a:	80 81       	ld	r24, Z
     60c:	80 61       	ori	r24, 0x10	; 16
     60e:	80 83       	st	Z, r24
	sbi(DDRH,5);//digital 8 OC4C
     610:	80 81       	ld	r24, Z
     612:	80 62       	ori	r24, 0x20	; 32
     614:	80 83       	st	Z, r24
	
	sbi(DDRA,0);//digital 22 EN1
     616:	08 9a       	sbi	0x01, 0	; 1
	sbi(DDRA,2);//digital 24 EN2
     618:	0a 9a       	sbi	0x01, 2	; 1
	sbi(DDRA,4);//digital 26 EN3
     61a:	0c 9a       	sbi	0x01, 4	; 1
	sbi(DDRA,6);//digital 28 sleep
     61c:	0e 9a       	sbi	0x01, 6	; 1
	sbi(DDRC,7);//digital 30 nf, see drv8313 
     61e:	3f 9a       	sbi	0x07, 7	; 7
	
	sbi(PORTA,0);//sleep HIGH
     620:	10 9a       	sbi	0x02, 0	; 2
	sbi(PORTA,2);//nf HIGH
     622:	12 9a       	sbi	0x02, 2	; 2
	sbi(PORTA,4);//EN1 HIGH
     624:	14 9a       	sbi	0x02, 4	; 2
	sbi(PORTA,6);//EN2 HIGH
     626:	16 9a       	sbi	0x02, 6	; 2
	sbi(PORTC,7);//EN3 HIGH
     628:	47 9a       	sbi	0x08, 7	; 8
	
	
	//setting pin mode to output for motor 2
	sbi(DDRE,4);//digital 2 OC3B
     62a:	6c 9a       	sbi	0x0d, 4	; 13
	sbi(DDRE,5);//digital 3 OC3C
     62c:	6d 9a       	sbi	0x0d, 5	; 13
	sbi(DDRE,3);//digital 5 OC3A
     62e:	6b 9a       	sbi	0x0d, 3	; 13
	
	sbi(DDRC,5);//digital 32 EN1
     630:	3d 9a       	sbi	0x07, 5	; 7
	sbi(DDRC,3);//digital 34 EN2
     632:	3b 9a       	sbi	0x07, 3	; 7
	sbi(DDRC,1);//digital 36 EN3
     634:	39 9a       	sbi	0x07, 1	; 7
	sbi(DDRD,7);//digital 38 sleep
     636:	57 9a       	sbi	0x0a, 7	; 10
	sbi(DDRG,1);//digital 40 nf, see drv8313
     638:	99 9a       	sbi	0x13, 1	; 19
	
	sbi(PORTC,5);//sleep HIGH
     63a:	45 9a       	sbi	0x08, 5	; 8
	sbi(PORTC,3);//nf HIGH
     63c:	43 9a       	sbi	0x08, 3	; 8
	sbi(PORTC,1);//EN1 HIGH
     63e:	41 9a       	sbi	0x08, 1	; 8
	sbi(PORTD,7);//EN2 HIGH
     640:	5f 9a       	sbi	0x0b, 7	; 11
	sbi(PORTG,1);//EN3 HIGH
     642:	a1 9a       	sbi	0x14, 1	; 20
     644:	08 95       	ret

00000646 <getAngle>:
#include "KALMAN.h"

float getAngle(float newAngle, float newRate, float dt) {
     646:	4f 92       	push	r4
     648:	5f 92       	push	r5
     64a:	6f 92       	push	r6
     64c:	7f 92       	push	r7
     64e:	8f 92       	push	r8
     650:	9f 92       	push	r9
     652:	af 92       	push	r10
     654:	bf 92       	push	r11
     656:	cf 92       	push	r12
     658:	df 92       	push	r13
     65a:	ef 92       	push	r14
     65c:	ff 92       	push	r15
     65e:	0f 93       	push	r16
     660:	1f 93       	push	r17
     662:	cf 93       	push	r28
     664:	df 93       	push	r29
     666:	cd b7       	in	r28, 0x3d	; 61
     668:	de b7       	in	r29, 0x3e	; 62
     66a:	6c 97       	sbiw	r28, 0x1c	; 28
     66c:	0f b6       	in	r0, 0x3f	; 63
     66e:	f8 94       	cli
     670:	de bf       	out	0x3e, r29	; 62
     672:	0f be       	out	0x3f, r0	; 63
     674:	cd bf       	out	0x3d, r28	; 61
     676:	69 8b       	std	Y+17, r22	; 0x11
     678:	7a 8b       	std	Y+18, r23	; 0x12
     67a:	8b 8b       	std	Y+19, r24	; 0x13
     67c:	9c 8b       	std	Y+20, r25	; 0x14
     67e:	ca 01       	movw	r24, r20
     680:	b9 01       	movw	r22, r18
     682:	e9 82       	std	Y+1, r14	; 0x01
     684:	fa 82       	std	Y+2, r15	; 0x02
     686:	0b 83       	std	Y+3, r16	; 0x03
     688:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate = newRate - bias;
     68a:	c0 90 d7 03 	lds	r12, 0x03D7	; 0x8003d7 <bias>
     68e:	d0 90 d8 03 	lds	r13, 0x03D8	; 0x8003d8 <bias+0x1>
     692:	e0 90 d9 03 	lds	r14, 0x03D9	; 0x8003d9 <bias+0x2>
     696:	f0 90 da 03 	lds	r15, 0x03DA	; 0x8003da <bias+0x3>
     69a:	a7 01       	movw	r20, r14
     69c:	96 01       	movw	r18, r12
     69e:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__subsf3>
     6a2:	60 93 cf 03 	sts	0x03CF, r22	; 0x8003cf <rate>
     6a6:	70 93 d0 03 	sts	0x03D0, r23	; 0x8003d0 <rate+0x1>
     6aa:	80 93 d1 03 	sts	0x03D1, r24	; 0x8003d1 <rate+0x2>
     6ae:	90 93 d2 03 	sts	0x03D2, r25	; 0x8003d2 <rate+0x3>
	angle += dt * rate;
     6b2:	29 81       	ldd	r18, Y+1	; 0x01
     6b4:	3a 81       	ldd	r19, Y+2	; 0x02
     6b6:	4b 81       	ldd	r20, Y+3	; 0x03
     6b8:	5c 81       	ldd	r21, Y+4	; 0x04
     6ba:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     6be:	20 91 fb 03 	lds	r18, 0x03FB	; 0x8003fb <angle>
     6c2:	30 91 fc 03 	lds	r19, 0x03FC	; 0x8003fc <angle+0x1>
     6c6:	40 91 fd 03 	lds	r20, 0x03FD	; 0x8003fd <angle+0x2>
     6ca:	50 91 fe 03 	lds	r21, 0x03FE	; 0x8003fe <angle+0x3>
     6ce:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__addsf3>
     6d2:	6d 8b       	std	Y+21, r22	; 0x15
     6d4:	7e 8b       	std	Y+22, r23	; 0x16
     6d6:	8f 8b       	std	Y+23, r24	; 0x17
     6d8:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P[0][0] += dt * (dt*P[1][1] - P[0][1] - P[1][0] + Q_angle);
     6da:	80 90 13 04 	lds	r8, 0x0413	; 0x800413 <P+0xc>
     6de:	90 90 14 04 	lds	r9, 0x0414	; 0x800414 <P+0xd>
     6e2:	a0 90 15 04 	lds	r10, 0x0415	; 0x800415 <P+0xe>
     6e6:	b0 90 16 04 	lds	r11, 0x0416	; 0x800416 <P+0xf>
     6ea:	a5 01       	movw	r20, r10
     6ec:	94 01       	movw	r18, r8
     6ee:	69 81       	ldd	r22, Y+1	; 0x01
     6f0:	7a 81       	ldd	r23, Y+2	; 0x02
     6f2:	8b 81       	ldd	r24, Y+3	; 0x03
     6f4:	9c 81       	ldd	r25, Y+4	; 0x04
     6f6:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     6fa:	6d 83       	std	Y+5, r22	; 0x05
     6fc:	7e 83       	std	Y+6, r23	; 0x06
     6fe:	8f 83       	std	Y+7, r24	; 0x07
     700:	98 87       	std	Y+8, r25	; 0x08
     702:	40 90 0b 04 	lds	r4, 0x040B	; 0x80040b <P+0x4>
     706:	50 90 0c 04 	lds	r5, 0x040C	; 0x80040c <P+0x5>
     70a:	60 90 0d 04 	lds	r6, 0x040D	; 0x80040d <P+0x6>
     70e:	70 90 0e 04 	lds	r7, 0x040E	; 0x80040e <P+0x7>
     712:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <P+0x8>
     716:	90 91 10 04 	lds	r25, 0x0410	; 0x800410 <P+0x9>
     71a:	a0 91 11 04 	lds	r26, 0x0411	; 0x800411 <P+0xa>
     71e:	b0 91 12 04 	lds	r27, 0x0412	; 0x800412 <P+0xb>
     722:	8d 87       	std	Y+13, r24	; 0x0d
     724:	9e 87       	std	Y+14, r25	; 0x0e
     726:	af 87       	std	Y+15, r26	; 0x0f
     728:	b8 8b       	std	Y+16, r27	; 0x10
     72a:	a3 01       	movw	r20, r6
     72c:	92 01       	movw	r18, r4
     72e:	6d 81       	ldd	r22, Y+5	; 0x05
     730:	7e 81       	ldd	r23, Y+6	; 0x06
     732:	8f 81       	ldd	r24, Y+7	; 0x07
     734:	98 85       	ldd	r25, Y+8	; 0x08
     736:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__subsf3>
     73a:	2d 85       	ldd	r18, Y+13	; 0x0d
     73c:	3e 85       	ldd	r19, Y+14	; 0x0e
     73e:	4f 85       	ldd	r20, Y+15	; 0x0f
     740:	58 89       	ldd	r21, Y+16	; 0x10
     742:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__subsf3>
     746:	20 91 d3 03 	lds	r18, 0x03D3	; 0x8003d3 <Q_angle>
     74a:	30 91 d4 03 	lds	r19, 0x03D4	; 0x8003d4 <Q_angle+0x1>
     74e:	40 91 d5 03 	lds	r20, 0x03D5	; 0x8003d5 <Q_angle+0x2>
     752:	50 91 d6 03 	lds	r21, 0x03D6	; 0x8003d6 <Q_angle+0x3>
     756:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__addsf3>
     75a:	29 81       	ldd	r18, Y+1	; 0x01
     75c:	3a 81       	ldd	r19, Y+2	; 0x02
     75e:	4b 81       	ldd	r20, Y+3	; 0x03
     760:	5c 81       	ldd	r21, Y+4	; 0x04
     762:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     766:	a7 e0       	ldi	r26, 0x07	; 7
     768:	b4 e0       	ldi	r27, 0x04	; 4
     76a:	2d 91       	ld	r18, X+
     76c:	3d 91       	ld	r19, X+
     76e:	4d 91       	ld	r20, X+
     770:	5c 91       	ld	r21, X
     772:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__addsf3>
     776:	69 87       	std	Y+9, r22	; 0x09
     778:	7a 87       	std	Y+10, r23	; 0x0a
     77a:	8b 87       	std	Y+11, r24	; 0x0b
     77c:	9c 87       	std	Y+12, r25	; 0x0c
	P[0][1] -= dt * P[1][1];
     77e:	2d 81       	ldd	r18, Y+5	; 0x05
     780:	3e 81       	ldd	r19, Y+6	; 0x06
     782:	4f 81       	ldd	r20, Y+7	; 0x07
     784:	58 85       	ldd	r21, Y+8	; 0x08
     786:	c3 01       	movw	r24, r6
     788:	b2 01       	movw	r22, r4
     78a:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__subsf3>
     78e:	2b 01       	movw	r4, r22
     790:	3c 01       	movw	r6, r24
	P[1][0] -= dt * P[1][1];
     792:	2d 81       	ldd	r18, Y+5	; 0x05
     794:	3e 81       	ldd	r19, Y+6	; 0x06
     796:	4f 81       	ldd	r20, Y+7	; 0x07
     798:	58 85       	ldd	r21, Y+8	; 0x08
     79a:	6d 85       	ldd	r22, Y+13	; 0x0d
     79c:	7e 85       	ldd	r23, Y+14	; 0x0e
     79e:	8f 85       	ldd	r24, Y+15	; 0x0f
     7a0:	98 89       	ldd	r25, Y+16	; 0x10
     7a2:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__subsf3>
     7a6:	6d 87       	std	Y+13, r22	; 0x0d
     7a8:	7e 87       	std	Y+14, r23	; 0x0e
     7aa:	8f 87       	std	Y+15, r24	; 0x0f
     7ac:	98 8b       	std	Y+16, r25	; 0x10
	P[1][1] += Q_bias * dt;
     7ae:	20 91 cb 03 	lds	r18, 0x03CB	; 0x8003cb <Q_bias>
     7b2:	30 91 cc 03 	lds	r19, 0x03CC	; 0x8003cc <Q_bias+0x1>
     7b6:	40 91 cd 03 	lds	r20, 0x03CD	; 0x8003cd <Q_bias+0x2>
     7ba:	50 91 ce 03 	lds	r21, 0x03CE	; 0x8003ce <Q_bias+0x3>
     7be:	69 81       	ldd	r22, Y+1	; 0x01
     7c0:	7a 81       	ldd	r23, Y+2	; 0x02
     7c2:	8b 81       	ldd	r24, Y+3	; 0x03
     7c4:	9c 81       	ldd	r25, Y+4	; 0x04
     7c6:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     7ca:	a5 01       	movw	r20, r10
     7cc:	94 01       	movw	r18, r8
     7ce:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__addsf3>
     7d2:	69 8f       	std	Y+25, r22	; 0x19
     7d4:	7a 8f       	std	Y+26, r23	; 0x1a
     7d6:	8b 8f       	std	Y+27, r24	; 0x1b
     7d8:	9c 8f       	std	Y+28, r25	; 0x1c

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S = P[0][0] + R_measure; // Estimate error
     7da:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <R_measure>
     7de:	30 91 f4 03 	lds	r19, 0x03F4	; 0x8003f4 <R_measure+0x1>
     7e2:	40 91 f5 03 	lds	r20, 0x03F5	; 0x8003f5 <R_measure+0x2>
     7e6:	50 91 f6 03 	lds	r21, 0x03F6	; 0x8003f6 <R_measure+0x3>
     7ea:	69 85       	ldd	r22, Y+9	; 0x09
     7ec:	7a 85       	ldd	r23, Y+10	; 0x0a
     7ee:	8b 85       	ldd	r24, Y+11	; 0x0b
     7f0:	9c 85       	ldd	r25, Y+12	; 0x0c
     7f2:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__addsf3>
     7f6:	4b 01       	movw	r8, r22
     7f8:	5c 01       	movw	r10, r24
	/* Step 5 */
	float K[2]; // Kalman gain - This is a 2x1 vector
	K[0] = P[0][0] / S;
     7fa:	9b 01       	movw	r18, r22
     7fc:	ac 01       	movw	r20, r24
     7fe:	69 85       	ldd	r22, Y+9	; 0x09
     800:	7a 85       	ldd	r23, Y+10	; 0x0a
     802:	8b 85       	ldd	r24, Y+11	; 0x0b
     804:	9c 85       	ldd	r25, Y+12	; 0x0c
     806:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__divsf3>
     80a:	69 83       	std	Y+1, r22	; 0x01
     80c:	7a 83       	std	Y+2, r23	; 0x02
     80e:	8b 83       	std	Y+3, r24	; 0x03
     810:	9c 83       	std	Y+4, r25	; 0x04
	K[1] = P[1][0] / S;
     812:	a5 01       	movw	r20, r10
     814:	94 01       	movw	r18, r8
     816:	6d 85       	ldd	r22, Y+13	; 0x0d
     818:	7e 85       	ldd	r23, Y+14	; 0x0e
     81a:	8f 85       	ldd	r24, Y+15	; 0x0f
     81c:	98 89       	ldd	r25, Y+16	; 0x10
     81e:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__divsf3>
     822:	6d 83       	std	Y+5, r22	; 0x05
     824:	7e 83       	std	Y+6, r23	; 0x06
     826:	8f 83       	std	Y+7, r24	; 0x07
     828:	98 87       	std	Y+8, r25	; 0x08

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y = newAngle - angle; // Angle difference
     82a:	2d 89       	ldd	r18, Y+21	; 0x15
     82c:	3e 89       	ldd	r19, Y+22	; 0x16
     82e:	4f 89       	ldd	r20, Y+23	; 0x17
     830:	58 8d       	ldd	r21, Y+24	; 0x18
     832:	69 89       	ldd	r22, Y+17	; 0x11
     834:	7a 89       	ldd	r23, Y+18	; 0x12
     836:	8b 89       	ldd	r24, Y+19	; 0x13
     838:	9c 89       	ldd	r25, Y+20	; 0x14
     83a:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__subsf3>
     83e:	69 8b       	std	Y+17, r22	; 0x11
     840:	7a 8b       	std	Y+18, r23	; 0x12
     842:	8b 8b       	std	Y+19, r24	; 0x13
     844:	9c 8b       	std	Y+20, r25	; 0x14
	/* Step 6 */
	angle += K[0] * y;
     846:	9b 01       	movw	r18, r22
     848:	ac 01       	movw	r20, r24
     84a:	69 81       	ldd	r22, Y+1	; 0x01
     84c:	7a 81       	ldd	r23, Y+2	; 0x02
     84e:	8b 81       	ldd	r24, Y+3	; 0x03
     850:	9c 81       	ldd	r25, Y+4	; 0x04
     852:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     856:	2d 89       	ldd	r18, Y+21	; 0x15
     858:	3e 89       	ldd	r19, Y+22	; 0x16
     85a:	4f 89       	ldd	r20, Y+23	; 0x17
     85c:	58 8d       	ldd	r21, Y+24	; 0x18
     85e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__addsf3>
     862:	4b 01       	movw	r8, r22
     864:	5c 01       	movw	r10, r24
     866:	60 93 fb 03 	sts	0x03FB, r22	; 0x8003fb <angle>
     86a:	70 93 fc 03 	sts	0x03FC, r23	; 0x8003fc <angle+0x1>
     86e:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <angle+0x2>
     872:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <angle+0x3>
	bias += K[1] * y;
     876:	29 89       	ldd	r18, Y+17	; 0x11
     878:	3a 89       	ldd	r19, Y+18	; 0x12
     87a:	4b 89       	ldd	r20, Y+19	; 0x13
     87c:	5c 89       	ldd	r21, Y+20	; 0x14
     87e:	6d 81       	ldd	r22, Y+5	; 0x05
     880:	7e 81       	ldd	r23, Y+6	; 0x06
     882:	8f 81       	ldd	r24, Y+7	; 0x07
     884:	98 85       	ldd	r25, Y+8	; 0x08
     886:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     88a:	a7 01       	movw	r20, r14
     88c:	96 01       	movw	r18, r12
     88e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__addsf3>
     892:	60 93 d7 03 	sts	0x03D7, r22	; 0x8003d7 <bias>
     896:	70 93 d8 03 	sts	0x03D8, r23	; 0x8003d8 <bias+0x1>
     89a:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <bias+0x2>
     89e:	90 93 da 03 	sts	0x03DA, r25	; 0x8003da <bias+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp = P[0][0];
	float P01_temp = P[0][1];

	P[0][0] -= K[0] * P00_temp;
     8a2:	29 81       	ldd	r18, Y+1	; 0x01
     8a4:	3a 81       	ldd	r19, Y+2	; 0x02
     8a6:	4b 81       	ldd	r20, Y+3	; 0x03
     8a8:	5c 81       	ldd	r21, Y+4	; 0x04
     8aa:	69 85       	ldd	r22, Y+9	; 0x09
     8ac:	7a 85       	ldd	r23, Y+10	; 0x0a
     8ae:	8b 85       	ldd	r24, Y+11	; 0x0b
     8b0:	9c 85       	ldd	r25, Y+12	; 0x0c
     8b2:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     8b6:	9b 01       	movw	r18, r22
     8b8:	ac 01       	movw	r20, r24
     8ba:	69 85       	ldd	r22, Y+9	; 0x09
     8bc:	7a 85       	ldd	r23, Y+10	; 0x0a
     8be:	8b 85       	ldd	r24, Y+11	; 0x0b
     8c0:	9c 85       	ldd	r25, Y+12	; 0x0c
     8c2:	f7 d7       	rcall	.+4078   	; 0x18b2 <__subsf3>
     8c4:	e7 e0       	ldi	r30, 0x07	; 7
     8c6:	f4 e0       	ldi	r31, 0x04	; 4
     8c8:	60 83       	st	Z, r22
     8ca:	71 83       	std	Z+1, r23	; 0x01
     8cc:	82 83       	std	Z+2, r24	; 0x02
     8ce:	93 83       	std	Z+3, r25	; 0x03
	P[0][1] -= K[0] * P01_temp;
     8d0:	29 81       	ldd	r18, Y+1	; 0x01
     8d2:	3a 81       	ldd	r19, Y+2	; 0x02
     8d4:	4b 81       	ldd	r20, Y+3	; 0x03
     8d6:	5c 81       	ldd	r21, Y+4	; 0x04
     8d8:	c3 01       	movw	r24, r6
     8da:	b2 01       	movw	r22, r4
     8dc:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     8e0:	9b 01       	movw	r18, r22
     8e2:	ac 01       	movw	r20, r24
     8e4:	c3 01       	movw	r24, r6
     8e6:	b2 01       	movw	r22, r4
     8e8:	e4 d7       	rcall	.+4040   	; 0x18b2 <__subsf3>
     8ea:	60 93 0b 04 	sts	0x040B, r22	; 0x80040b <P+0x4>
     8ee:	70 93 0c 04 	sts	0x040C, r23	; 0x80040c <P+0x5>
     8f2:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <P+0x6>
     8f6:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <P+0x7>
	P[1][0] -= K[1] * P00_temp;
     8fa:	2d 81       	ldd	r18, Y+5	; 0x05
     8fc:	3e 81       	ldd	r19, Y+6	; 0x06
     8fe:	4f 81       	ldd	r20, Y+7	; 0x07
     900:	58 85       	ldd	r21, Y+8	; 0x08
     902:	69 85       	ldd	r22, Y+9	; 0x09
     904:	7a 85       	ldd	r23, Y+10	; 0x0a
     906:	8b 85       	ldd	r24, Y+11	; 0x0b
     908:	9c 85       	ldd	r25, Y+12	; 0x0c
     90a:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     90e:	9b 01       	movw	r18, r22
     910:	ac 01       	movw	r20, r24
     912:	6d 85       	ldd	r22, Y+13	; 0x0d
     914:	7e 85       	ldd	r23, Y+14	; 0x0e
     916:	8f 85       	ldd	r24, Y+15	; 0x0f
     918:	98 89       	ldd	r25, Y+16	; 0x10
     91a:	cb d7       	rcall	.+3990   	; 0x18b2 <__subsf3>
     91c:	60 93 0f 04 	sts	0x040F, r22	; 0x80040f <P+0x8>
     920:	70 93 10 04 	sts	0x0410, r23	; 0x800410 <P+0x9>
     924:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <P+0xa>
     928:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <P+0xb>
	P[1][1] -= K[1] * P01_temp;
     92c:	2d 81       	ldd	r18, Y+5	; 0x05
     92e:	3e 81       	ldd	r19, Y+6	; 0x06
     930:	4f 81       	ldd	r20, Y+7	; 0x07
     932:	58 85       	ldd	r21, Y+8	; 0x08
     934:	c3 01       	movw	r24, r6
     936:	b2 01       	movw	r22, r4
     938:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     93c:	9b 01       	movw	r18, r22
     93e:	ac 01       	movw	r20, r24
     940:	69 8d       	ldd	r22, Y+25	; 0x19
     942:	7a 8d       	ldd	r23, Y+26	; 0x1a
     944:	8b 8d       	ldd	r24, Y+27	; 0x1b
     946:	9c 8d       	ldd	r25, Y+28	; 0x1c
     948:	b4 d7       	rcall	.+3944   	; 0x18b2 <__subsf3>
     94a:	60 93 13 04 	sts	0x0413, r22	; 0x800413 <P+0xc>
     94e:	70 93 14 04 	sts	0x0414, r23	; 0x800414 <P+0xd>
     952:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <P+0xe>
     956:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <P+0xf>

	return angle;
};
     95a:	c5 01       	movw	r24, r10
     95c:	b4 01       	movw	r22, r8
     95e:	6c 96       	adiw	r28, 0x1c	; 28
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	f8 94       	cli
     964:	de bf       	out	0x3e, r29	; 62
     966:	0f be       	out	0x3f, r0	; 63
     968:	cd bf       	out	0x3d, r28	; 61
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	1f 91       	pop	r17
     970:	0f 91       	pop	r16
     972:	ff 90       	pop	r15
     974:	ef 90       	pop	r14
     976:	df 90       	pop	r13
     978:	cf 90       	pop	r12
     97a:	bf 90       	pop	r11
     97c:	af 90       	pop	r10
     97e:	9f 90       	pop	r9
     980:	8f 90       	pop	r8
     982:	7f 90       	pop	r7
     984:	6f 90       	pop	r6
     986:	5f 90       	pop	r5
     988:	4f 90       	pop	r4
     98a:	08 95       	ret

0000098c <Kalman_init>:
void Kalman_init() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle =0.001f;
     98c:	8f e6       	ldi	r24, 0x6F	; 111
     98e:	92 e1       	ldi	r25, 0x12	; 18
     990:	a3 e8       	ldi	r26, 0x83	; 131
     992:	ba e3       	ldi	r27, 0x3A	; 58
     994:	80 93 d3 03 	sts	0x03D3, r24	; 0x8003d3 <Q_angle>
     998:	90 93 d4 03 	sts	0x03D4, r25	; 0x8003d4 <Q_angle+0x1>
     99c:	a0 93 d5 03 	sts	0x03D5, r26	; 0x8003d5 <Q_angle+0x2>
     9a0:	b0 93 d6 03 	sts	0x03D6, r27	; 0x8003d6 <Q_angle+0x3>
	Q_bias = 0.003f;
     9a4:	86 ea       	ldi	r24, 0xA6	; 166
     9a6:	9b e9       	ldi	r25, 0x9B	; 155
     9a8:	a4 e4       	ldi	r26, 0x44	; 68
     9aa:	bb e3       	ldi	r27, 0x3B	; 59
     9ac:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <Q_bias>
     9b0:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <Q_bias+0x1>
     9b4:	a0 93 cd 03 	sts	0x03CD, r26	; 0x8003cd <Q_bias+0x2>
     9b8:	b0 93 ce 03 	sts	0x03CE, r27	; 0x8003ce <Q_bias+0x3>
	R_measure = 0.03f;
     9bc:	8f e8       	ldi	r24, 0x8F	; 143
     9be:	92 ec       	ldi	r25, 0xC2	; 194
     9c0:	a5 ef       	ldi	r26, 0xF5	; 245
     9c2:	bc e3       	ldi	r27, 0x3C	; 60
     9c4:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <R_measure>
     9c8:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <R_measure+0x1>
     9cc:	a0 93 f5 03 	sts	0x03F5, r26	; 0x8003f5 <R_measure+0x2>
     9d0:	b0 93 f6 03 	sts	0x03F6, r27	; 0x8003f6 <R_measure+0x3>

	angle = 0.0f; // Reset the angle
     9d4:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <angle>
     9d8:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <angle+0x1>
     9dc:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <angle+0x2>
     9e0:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <angle+0x3>
	bias = 0.0f; // Reset bias
     9e4:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <bias>
     9e8:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <bias+0x1>
     9ec:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <bias+0x2>
     9f0:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <bias+0x3>

	P[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     9f4:	e7 e0       	ldi	r30, 0x07	; 7
     9f6:	f4 e0       	ldi	r31, 0x04	; 4
     9f8:	10 82       	st	Z, r1
     9fa:	11 82       	std	Z+1, r1	; 0x01
     9fc:	12 82       	std	Z+2, r1	; 0x02
     9fe:	13 82       	std	Z+3, r1	; 0x03
	P[0][1] = 0.0f;
     a00:	14 82       	std	Z+4, r1	; 0x04
     a02:	15 82       	std	Z+5, r1	; 0x05
     a04:	16 82       	std	Z+6, r1	; 0x06
     a06:	17 82       	std	Z+7, r1	; 0x07
	P[1][0] = 0.0f;
     a08:	10 86       	std	Z+8, r1	; 0x08
     a0a:	11 86       	std	Z+9, r1	; 0x09
     a0c:	12 86       	std	Z+10, r1	; 0x0a
     a0e:	13 86       	std	Z+11, r1	; 0x0b
	P[1][1] = 0.0f;
     a10:	14 86       	std	Z+12, r1	; 0x0c
     a12:	15 86       	std	Z+13, r1	; 0x0d
     a14:	16 86       	std	Z+14, r1	; 0x0e
     a16:	17 86       	std	Z+15, r1	; 0x0f
     a18:	08 95       	ret

00000a1a <getAngle_1>:
};
float getAngle_1(float newAngle, float newRate, float dt) {
     a1a:	4f 92       	push	r4
     a1c:	5f 92       	push	r5
     a1e:	6f 92       	push	r6
     a20:	7f 92       	push	r7
     a22:	8f 92       	push	r8
     a24:	9f 92       	push	r9
     a26:	af 92       	push	r10
     a28:	bf 92       	push	r11
     a2a:	cf 92       	push	r12
     a2c:	df 92       	push	r13
     a2e:	ef 92       	push	r14
     a30:	ff 92       	push	r15
     a32:	0f 93       	push	r16
     a34:	1f 93       	push	r17
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
     a3a:	cd b7       	in	r28, 0x3d	; 61
     a3c:	de b7       	in	r29, 0x3e	; 62
     a3e:	6c 97       	sbiw	r28, 0x1c	; 28
     a40:	0f b6       	in	r0, 0x3f	; 63
     a42:	f8 94       	cli
     a44:	de bf       	out	0x3e, r29	; 62
     a46:	0f be       	out	0x3f, r0	; 63
     a48:	cd bf       	out	0x3d, r28	; 61
     a4a:	69 8b       	std	Y+17, r22	; 0x11
     a4c:	7a 8b       	std	Y+18, r23	; 0x12
     a4e:	8b 8b       	std	Y+19, r24	; 0x13
     a50:	9c 8b       	std	Y+20, r25	; 0x14
     a52:	ca 01       	movw	r24, r20
     a54:	b9 01       	movw	r22, r18
     a56:	e9 82       	std	Y+1, r14	; 0x01
     a58:	fa 82       	std	Y+2, r15	; 0x02
     a5a:	0b 83       	std	Y+3, r16	; 0x03
     a5c:	1c 83       	std	Y+4, r17	; 0x04
	// See my blog post for more information: http://blog.tkjelectronics.dk/2012/09/a-practical-approach-to-kalman-filter-and-how-to-implement-it

	// Discrete Kalman filter time update equations - Time Update ("Predict")
	// Update xhat - Project the state ahead
	/* Step 1 */
	rate_1 = newRate - bias_1;
     a5e:	c0 90 f7 03 	lds	r12, 0x03F7	; 0x8003f7 <bias_1>
     a62:	d0 90 f8 03 	lds	r13, 0x03F8	; 0x8003f8 <bias_1+0x1>
     a66:	e0 90 f9 03 	lds	r14, 0x03F9	; 0x8003f9 <bias_1+0x2>
     a6a:	f0 90 fa 03 	lds	r15, 0x03FA	; 0x8003fa <bias_1+0x3>
     a6e:	a7 01       	movw	r20, r14
     a70:	96 01       	movw	r18, r12
     a72:	1f d7       	rcall	.+3646   	; 0x18b2 <__subsf3>
     a74:	60 93 ef 03 	sts	0x03EF, r22	; 0x8003ef <rate_1>
     a78:	70 93 f0 03 	sts	0x03F0, r23	; 0x8003f0 <rate_1+0x1>
     a7c:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <rate_1+0x2>
     a80:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <rate_1+0x3>
	angle_1 += dt * rate_1;
     a84:	29 81       	ldd	r18, Y+1	; 0x01
     a86:	3a 81       	ldd	r19, Y+2	; 0x02
     a88:	4b 81       	ldd	r20, Y+3	; 0x03
     a8a:	5c 81       	ldd	r21, Y+4	; 0x04
     a8c:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     a90:	20 91 db 03 	lds	r18, 0x03DB	; 0x8003db <angle_1>
     a94:	30 91 dc 03 	lds	r19, 0x03DC	; 0x8003dc <angle_1+0x1>
     a98:	40 91 dd 03 	lds	r20, 0x03DD	; 0x8003dd <angle_1+0x2>
     a9c:	50 91 de 03 	lds	r21, 0x03DE	; 0x8003de <angle_1+0x3>
     aa0:	09 d7       	rcall	.+3602   	; 0x18b4 <__addsf3>
     aa2:	6d 8b       	std	Y+21, r22	; 0x15
     aa4:	7e 8b       	std	Y+22, r23	; 0x16
     aa6:	8f 8b       	std	Y+23, r24	; 0x17
     aa8:	98 8f       	std	Y+24, r25	; 0x18

	// Update estimation error covariance - Project the error covariance ahead
	/* Step 2 */
	P_1[0][0] += dt * (dt*P_1[1][1] - P_1[0][1] - P_1[1][0] + Q_angle_1);
     aaa:	80 90 eb 03 	lds	r8, 0x03EB	; 0x8003eb <P_1+0xc>
     aae:	90 90 ec 03 	lds	r9, 0x03EC	; 0x8003ec <P_1+0xd>
     ab2:	a0 90 ed 03 	lds	r10, 0x03ED	; 0x8003ed <P_1+0xe>
     ab6:	b0 90 ee 03 	lds	r11, 0x03EE	; 0x8003ee <P_1+0xf>
     aba:	a5 01       	movw	r20, r10
     abc:	94 01       	movw	r18, r8
     abe:	69 81       	ldd	r22, Y+1	; 0x01
     ac0:	7a 81       	ldd	r23, Y+2	; 0x02
     ac2:	8b 81       	ldd	r24, Y+3	; 0x03
     ac4:	9c 81       	ldd	r25, Y+4	; 0x04
     ac6:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     aca:	6d 83       	std	Y+5, r22	; 0x05
     acc:	7e 83       	std	Y+6, r23	; 0x06
     ace:	8f 83       	std	Y+7, r24	; 0x07
     ad0:	98 87       	std	Y+8, r25	; 0x08
     ad2:	40 90 e3 03 	lds	r4, 0x03E3	; 0x8003e3 <P_1+0x4>
     ad6:	50 90 e4 03 	lds	r5, 0x03E4	; 0x8003e4 <P_1+0x5>
     ada:	60 90 e5 03 	lds	r6, 0x03E5	; 0x8003e5 <P_1+0x6>
     ade:	70 90 e6 03 	lds	r7, 0x03E6	; 0x8003e6 <P_1+0x7>
     ae2:	80 91 e7 03 	lds	r24, 0x03E7	; 0x8003e7 <P_1+0x8>
     ae6:	90 91 e8 03 	lds	r25, 0x03E8	; 0x8003e8 <P_1+0x9>
     aea:	a0 91 e9 03 	lds	r26, 0x03E9	; 0x8003e9 <P_1+0xa>
     aee:	b0 91 ea 03 	lds	r27, 0x03EA	; 0x8003ea <P_1+0xb>
     af2:	8d 87       	std	Y+13, r24	; 0x0d
     af4:	9e 87       	std	Y+14, r25	; 0x0e
     af6:	af 87       	std	Y+15, r26	; 0x0f
     af8:	b8 8b       	std	Y+16, r27	; 0x10
     afa:	a3 01       	movw	r20, r6
     afc:	92 01       	movw	r18, r4
     afe:	6d 81       	ldd	r22, Y+5	; 0x05
     b00:	7e 81       	ldd	r23, Y+6	; 0x06
     b02:	8f 81       	ldd	r24, Y+7	; 0x07
     b04:	98 85       	ldd	r25, Y+8	; 0x08
     b06:	d5 d6       	rcall	.+3498   	; 0x18b2 <__subsf3>
     b08:	2d 85       	ldd	r18, Y+13	; 0x0d
     b0a:	3e 85       	ldd	r19, Y+14	; 0x0e
     b0c:	4f 85       	ldd	r20, Y+15	; 0x0f
     b0e:	58 89       	ldd	r21, Y+16	; 0x10
     b10:	d0 d6       	rcall	.+3488   	; 0x18b2 <__subsf3>
     b12:	20 91 17 04 	lds	r18, 0x0417	; 0x800417 <Q_angle_1>
     b16:	30 91 18 04 	lds	r19, 0x0418	; 0x800418 <Q_angle_1+0x1>
     b1a:	40 91 19 04 	lds	r20, 0x0419	; 0x800419 <Q_angle_1+0x2>
     b1e:	50 91 1a 04 	lds	r21, 0x041A	; 0x80041a <Q_angle_1+0x3>
     b22:	c8 d6       	rcall	.+3472   	; 0x18b4 <__addsf3>
     b24:	29 81       	ldd	r18, Y+1	; 0x01
     b26:	3a 81       	ldd	r19, Y+2	; 0x02
     b28:	4b 81       	ldd	r20, Y+3	; 0x03
     b2a:	5c 81       	ldd	r21, Y+4	; 0x04
     b2c:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     b30:	af ed       	ldi	r26, 0xDF	; 223
     b32:	b3 e0       	ldi	r27, 0x03	; 3
     b34:	2d 91       	ld	r18, X+
     b36:	3d 91       	ld	r19, X+
     b38:	4d 91       	ld	r20, X+
     b3a:	5c 91       	ld	r21, X
     b3c:	bb d6       	rcall	.+3446   	; 0x18b4 <__addsf3>
     b3e:	69 87       	std	Y+9, r22	; 0x09
     b40:	7a 87       	std	Y+10, r23	; 0x0a
     b42:	8b 87       	std	Y+11, r24	; 0x0b
	P_1[0][1] -= dt * P_1[1][1];
     b44:	9c 87       	std	Y+12, r25	; 0x0c
     b46:	2d 81       	ldd	r18, Y+5	; 0x05
     b48:	3e 81       	ldd	r19, Y+6	; 0x06
     b4a:	4f 81       	ldd	r20, Y+7	; 0x07
     b4c:	58 85       	ldd	r21, Y+8	; 0x08
     b4e:	c3 01       	movw	r24, r6
     b50:	b2 01       	movw	r22, r4
     b52:	af d6       	rcall	.+3422   	; 0x18b2 <__subsf3>
     b54:	2b 01       	movw	r4, r22
	P_1[1][0] -= dt * P_1[1][1];
     b56:	3c 01       	movw	r6, r24
     b58:	2d 81       	ldd	r18, Y+5	; 0x05
     b5a:	3e 81       	ldd	r19, Y+6	; 0x06
     b5c:	4f 81       	ldd	r20, Y+7	; 0x07
     b5e:	58 85       	ldd	r21, Y+8	; 0x08
     b60:	6d 85       	ldd	r22, Y+13	; 0x0d
     b62:	7e 85       	ldd	r23, Y+14	; 0x0e
     b64:	8f 85       	ldd	r24, Y+15	; 0x0f
     b66:	98 89       	ldd	r25, Y+16	; 0x10
     b68:	a4 d6       	rcall	.+3400   	; 0x18b2 <__subsf3>
     b6a:	6d 87       	std	Y+13, r22	; 0x0d
     b6c:	7e 87       	std	Y+14, r23	; 0x0e
     b6e:	8f 87       	std	Y+15, r24	; 0x0f
	P_1[1][1] += Q_bias_1 * dt;
     b70:	98 8b       	std	Y+16, r25	; 0x10
     b72:	20 91 03 04 	lds	r18, 0x0403	; 0x800403 <Q_bias_1>
     b76:	30 91 04 04 	lds	r19, 0x0404	; 0x800404 <Q_bias_1+0x1>
     b7a:	40 91 05 04 	lds	r20, 0x0405	; 0x800405 <Q_bias_1+0x2>
     b7e:	50 91 06 04 	lds	r21, 0x0406	; 0x800406 <Q_bias_1+0x3>
     b82:	69 81       	ldd	r22, Y+1	; 0x01
     b84:	7a 81       	ldd	r23, Y+2	; 0x02
     b86:	8b 81       	ldd	r24, Y+3	; 0x03
     b88:	9c 81       	ldd	r25, Y+4	; 0x04
     b8a:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     b8e:	a5 01       	movw	r20, r10
     b90:	94 01       	movw	r18, r8
     b92:	90 d6       	rcall	.+3360   	; 0x18b4 <__addsf3>
     b94:	69 8f       	std	Y+25, r22	; 0x19
     b96:	7a 8f       	std	Y+26, r23	; 0x1a
     b98:	8b 8f       	std	Y+27, r24	; 0x1b

	// Discrete Kalman filter measurement update equations - Measurement Update ("Correct")
	// Calculate Kalman gain - Compute the Kalman gain
	/* Step 4 */
	float S_1 = P_1[0][0] + R_measure_1; // Estimate error
     b9a:	9c 8f       	std	Y+28, r25	; 0x1c
     b9c:	20 91 ff 03 	lds	r18, 0x03FF	; 0x8003ff <R_measure_1>
     ba0:	30 91 00 04 	lds	r19, 0x0400	; 0x800400 <R_measure_1+0x1>
     ba4:	40 91 01 04 	lds	r20, 0x0401	; 0x800401 <R_measure_1+0x2>
     ba8:	50 91 02 04 	lds	r21, 0x0402	; 0x800402 <R_measure_1+0x3>
     bac:	69 85       	ldd	r22, Y+9	; 0x09
     bae:	7a 85       	ldd	r23, Y+10	; 0x0a
     bb0:	8b 85       	ldd	r24, Y+11	; 0x0b
     bb2:	9c 85       	ldd	r25, Y+12	; 0x0c
     bb4:	7f d6       	rcall	.+3326   	; 0x18b4 <__addsf3>
	/* Step 5 */
	float K_1[2]; // Kalman gain - This is a 2x1 vector
	K_1[0] = P_1[0][0] / S_1;
     bb6:	4b 01       	movw	r8, r22
     bb8:	5c 01       	movw	r10, r24
     bba:	9b 01       	movw	r18, r22
     bbc:	ac 01       	movw	r20, r24
     bbe:	69 85       	ldd	r22, Y+9	; 0x09
     bc0:	7a 85       	ldd	r23, Y+10	; 0x0a
     bc2:	8b 85       	ldd	r24, Y+11	; 0x0b
     bc4:	9c 85       	ldd	r25, Y+12	; 0x0c
     bc6:	40 d7       	rcall	.+3712   	; 0x1a48 <__divsf3>
     bc8:	69 83       	std	Y+1, r22	; 0x01
     bca:	7a 83       	std	Y+2, r23	; 0x02
	K_1[1] = P_1[1][0] / S_1;
     bcc:	8b 83       	std	Y+3, r24	; 0x03
     bce:	9c 83       	std	Y+4, r25	; 0x04
     bd0:	a5 01       	movw	r20, r10
     bd2:	94 01       	movw	r18, r8
     bd4:	6d 85       	ldd	r22, Y+13	; 0x0d
     bd6:	7e 85       	ldd	r23, Y+14	; 0x0e
     bd8:	8f 85       	ldd	r24, Y+15	; 0x0f
     bda:	98 89       	ldd	r25, Y+16	; 0x10
     bdc:	35 d7       	rcall	.+3690   	; 0x1a48 <__divsf3>
     bde:	6d 83       	std	Y+5, r22	; 0x05
     be0:	7e 83       	std	Y+6, r23	; 0x06

	// Calculate angle and bias - Update estimate with measurement zk (newAngle)
	/* Step 3 */
	float y_1 = newAngle - angle_1; // Angle difference
     be2:	8f 83       	std	Y+7, r24	; 0x07
     be4:	98 87       	std	Y+8, r25	; 0x08
     be6:	2d 89       	ldd	r18, Y+21	; 0x15
     be8:	3e 89       	ldd	r19, Y+22	; 0x16
     bea:	4f 89       	ldd	r20, Y+23	; 0x17
     bec:	58 8d       	ldd	r21, Y+24	; 0x18
     bee:	69 89       	ldd	r22, Y+17	; 0x11
     bf0:	7a 89       	ldd	r23, Y+18	; 0x12
     bf2:	8b 89       	ldd	r24, Y+19	; 0x13
     bf4:	9c 89       	ldd	r25, Y+20	; 0x14
     bf6:	5d d6       	rcall	.+3258   	; 0x18b2 <__subsf3>
     bf8:	69 8b       	std	Y+17, r22	; 0x11
     bfa:	7a 8b       	std	Y+18, r23	; 0x12
	/* Step 6 */
	angle_1 += K_1[0] * y_1;
     bfc:	8b 8b       	std	Y+19, r24	; 0x13
     bfe:	9c 8b       	std	Y+20, r25	; 0x14
     c00:	9b 01       	movw	r18, r22
     c02:	ac 01       	movw	r20, r24
     c04:	69 81       	ldd	r22, Y+1	; 0x01
     c06:	7a 81       	ldd	r23, Y+2	; 0x02
     c08:	8b 81       	ldd	r24, Y+3	; 0x03
     c0a:	9c 81       	ldd	r25, Y+4	; 0x04
     c0c:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     c10:	2d 89       	ldd	r18, Y+21	; 0x15
     c12:	3e 89       	ldd	r19, Y+22	; 0x16
     c14:	4f 89       	ldd	r20, Y+23	; 0x17
     c16:	58 8d       	ldd	r21, Y+24	; 0x18
     c18:	4d d6       	rcall	.+3226   	; 0x18b4 <__addsf3>
     c1a:	4b 01       	movw	r8, r22
     c1c:	5c 01       	movw	r10, r24
     c1e:	60 93 db 03 	sts	0x03DB, r22	; 0x8003db <angle_1>
     c22:	70 93 dc 03 	sts	0x03DC, r23	; 0x8003dc <angle_1+0x1>
     c26:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <angle_1+0x2>
	bias_1 += K_1[1] * y_1;
     c2a:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <angle_1+0x3>
     c2e:	29 89       	ldd	r18, Y+17	; 0x11
     c30:	3a 89       	ldd	r19, Y+18	; 0x12
     c32:	4b 89       	ldd	r20, Y+19	; 0x13
     c34:	5c 89       	ldd	r21, Y+20	; 0x14
     c36:	6d 81       	ldd	r22, Y+5	; 0x05
     c38:	7e 81       	ldd	r23, Y+6	; 0x06
     c3a:	8f 81       	ldd	r24, Y+7	; 0x07
     c3c:	98 85       	ldd	r25, Y+8	; 0x08
     c3e:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     c42:	a7 01       	movw	r20, r14
     c44:	96 01       	movw	r18, r12
     c46:	36 d6       	rcall	.+3180   	; 0x18b4 <__addsf3>
     c48:	60 93 f7 03 	sts	0x03F7, r22	; 0x8003f7 <bias_1>
     c4c:	70 93 f8 03 	sts	0x03F8, r23	; 0x8003f8 <bias_1+0x1>
     c50:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <bias_1+0x2>
     c54:	90 93 fa 03 	sts	0x03FA, r25	; 0x8003fa <bias_1+0x3>
	// Calculate estimation error covariance - Update the error covariance
	/* Step 7 */
	float P00_temp_1 = P_1[0][0];
	float P01_temp_1 = P_1[0][1];

	P_1[0][0] -= K_1[0] * P00_temp_1;
     c58:	29 81       	ldd	r18, Y+1	; 0x01
     c5a:	3a 81       	ldd	r19, Y+2	; 0x02
     c5c:	4b 81       	ldd	r20, Y+3	; 0x03
     c5e:	5c 81       	ldd	r21, Y+4	; 0x04
     c60:	69 85       	ldd	r22, Y+9	; 0x09
     c62:	7a 85       	ldd	r23, Y+10	; 0x0a
     c64:	8b 85       	ldd	r24, Y+11	; 0x0b
     c66:	9c 85       	ldd	r25, Y+12	; 0x0c
     c68:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     c6c:	9b 01       	movw	r18, r22
     c6e:	ac 01       	movw	r20, r24
     c70:	69 85       	ldd	r22, Y+9	; 0x09
     c72:	7a 85       	ldd	r23, Y+10	; 0x0a
     c74:	8b 85       	ldd	r24, Y+11	; 0x0b
     c76:	9c 85       	ldd	r25, Y+12	; 0x0c
     c78:	1c d6       	rcall	.+3128   	; 0x18b2 <__subsf3>
     c7a:	ef ed       	ldi	r30, 0xDF	; 223
     c7c:	f3 e0       	ldi	r31, 0x03	; 3
     c7e:	60 83       	st	Z, r22
     c80:	71 83       	std	Z+1, r23	; 0x01
	P_1[0][1] -= K_1[0] * P01_temp_1;
     c82:	82 83       	std	Z+2, r24	; 0x02
     c84:	93 83       	std	Z+3, r25	; 0x03
     c86:	29 81       	ldd	r18, Y+1	; 0x01
     c88:	3a 81       	ldd	r19, Y+2	; 0x02
     c8a:	4b 81       	ldd	r20, Y+3	; 0x03
     c8c:	5c 81       	ldd	r21, Y+4	; 0x04
     c8e:	c3 01       	movw	r24, r6
     c90:	b2 01       	movw	r22, r4
     c92:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     c96:	9b 01       	movw	r18, r22
     c98:	ac 01       	movw	r20, r24
     c9a:	c3 01       	movw	r24, r6
     c9c:	b2 01       	movw	r22, r4
     c9e:	09 d6       	rcall	.+3090   	; 0x18b2 <__subsf3>
     ca0:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <P_1+0x4>
     ca4:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <P_1+0x5>
     ca8:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <P_1+0x6>
	P_1[1][0] -= K_1[1] * P00_temp_1;
     cac:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <P_1+0x7>
     cb0:	2d 81       	ldd	r18, Y+5	; 0x05
     cb2:	3e 81       	ldd	r19, Y+6	; 0x06
     cb4:	4f 81       	ldd	r20, Y+7	; 0x07
     cb6:	58 85       	ldd	r21, Y+8	; 0x08
     cb8:	69 85       	ldd	r22, Y+9	; 0x09
     cba:	7a 85       	ldd	r23, Y+10	; 0x0a
     cbc:	8b 85       	ldd	r24, Y+11	; 0x0b
     cbe:	9c 85       	ldd	r25, Y+12	; 0x0c
     cc0:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     cc4:	9b 01       	movw	r18, r22
     cc6:	ac 01       	movw	r20, r24
     cc8:	6d 85       	ldd	r22, Y+13	; 0x0d
     cca:	7e 85       	ldd	r23, Y+14	; 0x0e
     ccc:	8f 85       	ldd	r24, Y+15	; 0x0f
     cce:	98 89       	ldd	r25, Y+16	; 0x10
     cd0:	f0 d5       	rcall	.+3040   	; 0x18b2 <__subsf3>
     cd2:	60 93 e7 03 	sts	0x03E7, r22	; 0x8003e7 <P_1+0x8>
     cd6:	70 93 e8 03 	sts	0x03E8, r23	; 0x8003e8 <P_1+0x9>
     cda:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <P_1+0xa>
	P_1[1][1] -= K_1[1] * P01_temp_1;
     cde:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <P_1+0xb>
     ce2:	2d 81       	ldd	r18, Y+5	; 0x05
     ce4:	3e 81       	ldd	r19, Y+6	; 0x06
     ce6:	4f 81       	ldd	r20, Y+7	; 0x07
     ce8:	58 85       	ldd	r21, Y+8	; 0x08
     cea:	c3 01       	movw	r24, r6
     cec:	b2 01       	movw	r22, r4
     cee:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulsf3>
     cf2:	9b 01       	movw	r18, r22
     cf4:	ac 01       	movw	r20, r24
     cf6:	69 8d       	ldd	r22, Y+25	; 0x19
     cf8:	7a 8d       	ldd	r23, Y+26	; 0x1a
     cfa:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cfc:	9c 8d       	ldd	r25, Y+28	; 0x1c
     cfe:	d9 d5       	rcall	.+2994   	; 0x18b2 <__subsf3>
     d00:	60 93 eb 03 	sts	0x03EB, r22	; 0x8003eb <P_1+0xc>
     d04:	70 93 ec 03 	sts	0x03EC, r23	; 0x8003ec <P_1+0xd>
     d08:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <P_1+0xe>
     d0c:	90 93 ee 03 	sts	0x03EE, r25	; 0x8003ee <P_1+0xf>

	return angle_1;
};
     d10:	c5 01       	movw	r24, r10
     d12:	b4 01       	movw	r22, r8
     d14:	6c 96       	adiw	r28, 0x1c	; 28
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	1f 91       	pop	r17
     d26:	0f 91       	pop	r16
     d28:	ff 90       	pop	r15
     d2a:	ef 90       	pop	r14
     d2c:	df 90       	pop	r13
     d2e:	cf 90       	pop	r12
     d30:	bf 90       	pop	r11
     d32:	af 90       	pop	r10
     d34:	9f 90       	pop	r9
     d36:	8f 90       	pop	r8
     d38:	7f 90       	pop	r7
     d3a:	6f 90       	pop	r6
     d3c:	5f 90       	pop	r5
     d3e:	4f 90       	pop	r4
     d40:	08 95       	ret

00000d42 <Kalman_init_1>:
void Kalman_init_1() {
	/* We will set the variables like so, these can also be tuned by the user */
	Q_angle_1 =0.01;
     d42:	8a e0       	ldi	r24, 0x0A	; 10
     d44:	97 ed       	ldi	r25, 0xD7	; 215
     d46:	a3 e2       	ldi	r26, 0x23	; 35
     d48:	bc e3       	ldi	r27, 0x3C	; 60
     d4a:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <Q_angle_1>
     d4e:	90 93 18 04 	sts	0x0418, r25	; 0x800418 <Q_angle_1+0x1>
     d52:	a0 93 19 04 	sts	0x0419, r26	; 0x800419 <Q_angle_1+0x2>
     d56:	b0 93 1a 04 	sts	0x041A, r27	; 0x80041a <Q_angle_1+0x3>
	Q_bias_1 = 0.003f;
     d5a:	86 ea       	ldi	r24, 0xA6	; 166
     d5c:	9b e9       	ldi	r25, 0x9B	; 155
     d5e:	a4 e4       	ldi	r26, 0x44	; 68
     d60:	bb e3       	ldi	r27, 0x3B	; 59
     d62:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <Q_bias_1>
     d66:	90 93 04 04 	sts	0x0404, r25	; 0x800404 <Q_bias_1+0x1>
     d6a:	a0 93 05 04 	sts	0x0405, r26	; 0x800405 <Q_bias_1+0x2>
     d6e:	b0 93 06 04 	sts	0x0406, r27	; 0x800406 <Q_bias_1+0x3>
	R_measure_1 = 0.03f;
     d72:	8f e8       	ldi	r24, 0x8F	; 143
     d74:	92 ec       	ldi	r25, 0xC2	; 194
     d76:	a5 ef       	ldi	r26, 0xF5	; 245
     d78:	bc e3       	ldi	r27, 0x3C	; 60
     d7a:	80 93 ff 03 	sts	0x03FF, r24	; 0x8003ff <R_measure_1>
     d7e:	90 93 00 04 	sts	0x0400, r25	; 0x800400 <R_measure_1+0x1>
     d82:	a0 93 01 04 	sts	0x0401, r26	; 0x800401 <R_measure_1+0x2>
     d86:	b0 93 02 04 	sts	0x0402, r27	; 0x800402 <R_measure_1+0x3>

	angle_1 = 0.0f; // Reset the angle
     d8a:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <angle_1>
     d8e:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <angle_1+0x1>
     d92:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <angle_1+0x2>
     d96:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <angle_1+0x3>
	bias_1 = 0.0f; // Reset bias
     d9a:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <bias_1>
     d9e:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <bias_1+0x1>
     da2:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <bias_1+0x2>
     da6:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <bias_1+0x3>

	P_1[0][0] = 0.0f; // Since we assume that the bias is 0 and we know the starting angle (use setAngle), the error covariance matrix is set like so - see: http://en.wikipedia.org/wiki/Kalman_filter#Example_application.2C_technical
     daa:	ef ed       	ldi	r30, 0xDF	; 223
     dac:	f3 e0       	ldi	r31, 0x03	; 3
     dae:	10 82       	st	Z, r1
     db0:	11 82       	std	Z+1, r1	; 0x01
     db2:	12 82       	std	Z+2, r1	; 0x02
     db4:	13 82       	std	Z+3, r1	; 0x03
	P_1[0][1] = 0.0f;
     db6:	14 82       	std	Z+4, r1	; 0x04
     db8:	15 82       	std	Z+5, r1	; 0x05
     dba:	16 82       	std	Z+6, r1	; 0x06
     dbc:	17 82       	std	Z+7, r1	; 0x07
	P_1[1][0] = 0.0f;
     dbe:	10 86       	std	Z+8, r1	; 0x08
     dc0:	11 86       	std	Z+9, r1	; 0x09
     dc2:	12 86       	std	Z+10, r1	; 0x0a
     dc4:	13 86       	std	Z+11, r1	; 0x0b
	P_1[1][1] = 0.0f;
     dc6:	14 86       	std	Z+12, r1	; 0x0c
     dc8:	15 86       	std	Z+13, r1	; 0x0d
     dca:	16 86       	std	Z+14, r1	; 0x0e
     dcc:	17 86       	std	Z+15, r1	; 0x0f
     dce:	08 95       	ret

00000dd0 <main>:
bool loop_bool=true;
unsigned char receiveData;
unsigned char receiveData_[20];
/*-----------------------------------start of main----------------------------------*/
int main(void)
{	
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	cd b7       	in	r28, 0x3d	; 61
     dd6:	de b7       	in	r29, 0x3e	; 62
     dd8:	6c 97       	sbiw	r28, 0x1c	; 28
     dda:	0f b6       	in	r0, 0x3f	; 63
     ddc:	f8 94       	cli
     dde:	de bf       	out	0x3e, r29	; 62
     de0:	0f be       	out	0x3f, r0	; 63
     de2:	cd bf       	out	0x3d, r28	; 61
	//variableInit();
	U_step=U_step_predefine;
     de4:	10 92 a5 03 	sts	0x03A5, r1	; 0x8003a5 <U_step+0x1>
     de8:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <U_step>
	V_step=V_step_predefine;
     dec:	28 e7       	ldi	r18, 0x78	; 120
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	30 93 76 03 	sts	0x0376, r19	; 0x800376 <V_step+0x1>
     df4:	20 93 75 03 	sts	0x0375, r18	; 0x800375 <V_step>
	W_step=W_step_predefine;
     df8:	80 ef       	ldi	r24, 0xF0	; 240
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <W_step+0x1>
     e00:	80 93 73 03 	sts	0x0373, r24	; 0x800373 <W_step>
	U_step_2=U_step_predefine;
     e04:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <__data_end+0x1>
     e08:	10 92 a2 03 	sts	0x03A2, r1	; 0x8003a2 <__data_end>
	V_step_2=V_step_predefine;
     e0c:	30 93 72 03 	sts	0x0372, r19	; 0x800372 <V_step_2+0x1>
     e10:	20 93 71 03 	sts	0x0371, r18	; 0x800371 <V_step_2>
	W_step_2=W_step_predefine;
     e14:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <W_step_2+0x1>
     e18:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <W_step_2>
	incr=-1;
     e1c:	8f ef       	ldi	r24, 0xFF	; 255
     e1e:	9f ef       	ldi	r25, 0xFF	; 255
     e20:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <incr+0x1>
     e24:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <incr>
	incr_2=-1;
     e28:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <incr_2+0x1>
     e2c:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <incr_2>
	pwm_delay=25000;
     e30:	88 ea       	ldi	r24, 0xA8	; 168
     e32:	91 e6       	ldi	r25, 0x61	; 97
     e34:	90 93 c2 03 	sts	0x03C2, r25	; 0x8003c2 <pwm_delay+0x1>
     e38:	80 93 c1 03 	sts	0x03C1, r24	; 0x8003c1 <pwm_delay>
	pwm_delay_2=32000;
     e3c:	80 e0       	ldi	r24, 0x00	; 0
     e3e:	9d e7       	ldi	r25, 0x7D	; 125
     e40:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <pwm_delay_2+0x1>
     e44:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <pwm_delay_2>
	cli();
	init_gpio();
     e48:	f8 94       	cli
     e4a:	05 da       	rcall	.-3062   	; 0x256 <init_gpio>
     e4c:	d9 db       	rcall	.-2126   	; 0x600 <init_motor_gpio>
     e4e:	09 d4       	rcall	.+2066   	; 0x1662 <i2c_init>
     e50:	83 e0       	ldi	r24, 0x03	; 3
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	b7 d4       	rcall	.+2414   	; 0x17c4 <USART_Init>
     e56:	60 e0       	ldi	r22, 0x00	; 0
     e58:	70 e0       	ldi	r23, 0x00	; 0
     e5a:	8d ee       	ldi	r24, 0xED	; 237
     e5c:	9b e0       	ldi	r25, 0x0B	; 11
     e5e:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <fdevopen>
     e62:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <uart_str+0x1>
     e66:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <uart_str>
     e6a:	2e d3       	rcall	.+1628   	; 0x14c8 <setup_timer0>
     e6c:	34 d3       	rcall	.+1640   	; 0x14d6 <Enable_timer0_overflow_interrupt>
     e6e:	ec d2       	rcall	.+1496   	; 0x1448 <setup_timer4>
     e70:	ff d2       	rcall	.+1534   	; 0x1470 <setup_timer3>
     e72:	12 d3       	rcall	.+1572   	; 0x1498 <setup_timer5>
     e74:	1a d3       	rcall	.+1588   	; 0x14aa <Enable_timer5_compare_interrupt>
     e76:	1f d3       	rcall	.+1598   	; 0x14b6 <setup_timer1>
     e78:	80 91 c1 03 	lds	r24, 0x03C1	; 0x8003c1 <pwm_delay>
     e7c:	90 91 c2 03 	lds	r25, 0x03C2	; 0x8003c2 <pwm_delay+0x1>
     e80:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     e84:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     e88:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <pwm_delay_2>
     e8c:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <pwm_delay_2+0x1>
     e90:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     e94:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     e98:	24 d3       	rcall	.+1608   	; 0x14e2 <micros>
     e9a:	1b 01       	movw	r2, r22
     e9c:	2c 01       	movw	r4, r24
     e9e:	67 e0       	ldi	r22, 0x07	; 7
     ea0:	89 e1       	ldi	r24, 0x19	; 25
     ea2:	81 d1       	rcall	.+770    	; 0x11a6 <mpu6050_writeByte>
     ea4:	60 e0       	ldi	r22, 0x00	; 0
     ea6:	8a e1       	ldi	r24, 0x1A	; 26
     ea8:	7e d1       	rcall	.+764    	; 0x11a6 <mpu6050_writeByte>
     eaa:	68 e0       	ldi	r22, 0x08	; 8
     eac:	8b e1       	ldi	r24, 0x1B	; 27
     eae:	7b d1       	rcall	.+758    	; 0x11a6 <mpu6050_writeByte>
     eb0:	60 e1       	ldi	r22, 0x10	; 16
     eb2:	8c e1       	ldi	r24, 0x1C	; 28
     eb4:	78 d1       	rcall	.+752    	; 0x11a6 <mpu6050_writeByte>
     eb6:	61 e0       	ldi	r22, 0x01	; 1
     eb8:	8b e6       	ldi	r24, 0x6B	; 107
     eba:	75 d1       	rcall	.+746    	; 0x11a6 <mpu6050_writeByte>
     ebc:	67 dd       	rcall	.-1330   	; 0x98c <Kalman_init>
     ebe:	41 df       	rcall	.-382    	; 0xd42 <Kalman_init_1>
     ec0:	2f ef       	ldi	r18, 0xFF	; 255
     ec2:	81 ee       	ldi	r24, 0xE1	; 225
     ec4:	94 e0       	ldi	r25, 0x04	; 4
     ec6:	21 50       	subi	r18, 0x01	; 1
     ec8:	80 40       	sbci	r24, 0x00	; 0
     eca:	90 40       	sbci	r25, 0x00	; 0
     ecc:	e1 f7       	brne	.-8      	; 0xec6 <main+0xf6>
     ece:	00 c0       	rjmp	.+0      	; 0xed0 <main+0x100>
     ed0:	00 00       	nop
     ed2:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <angle>
     ed6:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <angle+0x1>
     eda:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <angle+0x2>
     ede:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <angle+0x3>
     ee2:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <angle_1>
     ee6:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <angle_1+0x1>
     eea:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <angle_1+0x2>
     eee:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <angle_1+0x3>
     ef2:	78 94       	sei
     ef4:	0f 2e       	mov	r0, r31
     ef6:	f4 e6       	ldi	r31, 0x64	; 100
     ef8:	6f 2e       	mov	r6, r31
     efa:	71 2c       	mov	r7, r1
     efc:	f0 2d       	mov	r31, r0
     efe:	ce 01       	movw	r24, r28
     f00:	05 96       	adiw	r24, 0x05	; 5
     f02:	7c 01       	movw	r14, r24
     f04:	8e 01       	movw	r16, r28
     f06:	0d 5f       	subi	r16, 0xFD	; 253
     f08:	1f 4f       	sbci	r17, 0xFF	; 255
     f0a:	9e 01       	movw	r18, r28
     f0c:	2f 5f       	subi	r18, 0xFF	; 255
     f0e:	3f 4f       	sbci	r19, 0xFF	; 255
     f10:	ae 01       	movw	r20, r28
     f12:	45 5f       	subi	r20, 0xF5	; 245
     f14:	5f 4f       	sbci	r21, 0xFF	; 255
     f16:	be 01       	movw	r22, r28
     f18:	67 5f       	subi	r22, 0xF7	; 247
     f1a:	7f 4f       	sbci	r23, 0xFF	; 255
     f1c:	02 96       	adiw	r24, 0x02	; 2
     f1e:	99 d1       	rcall	.+818    	; 0x1252 <mpu6050_getRawData>
     f20:	89 81       	ldd	r24, Y+1	; 0x01
     f22:	9a 81       	ldd	r25, Y+2	; 0x02
     f24:	84 59       	subi	r24, 0x94	; 148
     f26:	9f 4f       	sbci	r25, 0xFF	; 255
     f28:	9a 83       	std	Y+2, r25	; 0x02
     f2a:	89 83       	std	Y+1, r24	; 0x01
     f2c:	8b 81       	ldd	r24, Y+3	; 0x03
     f2e:	9c 81       	ldd	r25, Y+4	; 0x04
     f30:	80 52       	subi	r24, 0x20	; 32
     f32:	9f 4f       	sbci	r25, 0xFF	; 255
     f34:	9c 83       	std	Y+4, r25	; 0x04
     f36:	8b 83       	std	Y+3, r24	; 0x03
     f38:	8d 81       	ldd	r24, Y+5	; 0x05
     f3a:	9e 81       	ldd	r25, Y+6	; 0x06
     f3c:	8f 58       	subi	r24, 0x8F	; 143
     f3e:	9d 4f       	sbci	r25, 0xFD	; 253
     f40:	9e 83       	std	Y+6, r25	; 0x06
     f42:	8d 83       	std	Y+5, r24	; 0x05
     f44:	ce d2       	rcall	.+1436   	; 0x14e2 <micros>
     f46:	62 19       	sub	r22, r2
     f48:	73 09       	sbc	r23, r3
     f4a:	84 09       	sbc	r24, r4
     f4c:	95 09       	sbc	r25, r5
     f4e:	15 d6       	rcall	.+3114   	; 0x1b7a <__floatunsisf>
     f50:	20 e0       	ldi	r18, 0x00	; 0
     f52:	34 e2       	ldi	r19, 0x24	; 36
     f54:	44 e7       	ldi	r20, 0x74	; 116
     f56:	59 e4       	ldi	r21, 0x49	; 73
     f58:	77 d5       	rcall	.+2798   	; 0x1a48 <__divsf3>
     f5a:	60 93 4a 04 	sts	0x044A, r22	; 0x80044a <dt>
     f5e:	70 93 4b 04 	sts	0x044B, r23	; 0x80044b <dt+0x1>
     f62:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <dt+0x2>
     f66:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <dt+0x3>
     f6a:	bb d2       	rcall	.+1398   	; 0x14e2 <micros>
     f6c:	1b 01       	movw	r2, r22
     f6e:	2c 01       	movw	r4, r24
     f70:	69 81       	ldd	r22, Y+1	; 0x01
     f72:	7a 81       	ldd	r23, Y+2	; 0x02
     f74:	07 2e       	mov	r0, r23
     f76:	00 0c       	add	r0, r0
     f78:	88 0b       	sbc	r24, r24
     f7a:	99 0b       	sbc	r25, r25
     f7c:	00 d6       	rcall	.+3072   	; 0x1b7e <__floatsisf>
     f7e:	20 e0       	ldi	r18, 0x00	; 0
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	43 e8       	ldi	r20, 0x83	; 131
     f84:	52 e4       	ldi	r21, 0x42	; 66
     f86:	60 d5       	rcall	.+2752   	; 0x1a48 <__divsf3>
     f88:	6d 87       	std	Y+13, r22	; 0x0d
     f8a:	7e 87       	std	Y+14, r23	; 0x0e
     f8c:	8f 87       	std	Y+15, r24	; 0x0f
     f8e:	98 8b       	std	Y+16, r25	; 0x10
     f90:	6b 81       	ldd	r22, Y+3	; 0x03
     f92:	7c 81       	ldd	r23, Y+4	; 0x04
     f94:	07 2e       	mov	r0, r23
     f96:	00 0c       	add	r0, r0
     f98:	88 0b       	sbc	r24, r24
     f9a:	99 0b       	sbc	r25, r25
     f9c:	f0 d5       	rcall	.+3040   	; 0x1b7e <__floatsisf>
     f9e:	20 e0       	ldi	r18, 0x00	; 0
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	43 e8       	ldi	r20, 0x83	; 131
     fa4:	52 e4       	ldi	r21, 0x42	; 66
     fa6:	50 d5       	rcall	.+2720   	; 0x1a48 <__divsf3>
     fa8:	69 8b       	std	Y+17, r22	; 0x11
     faa:	7a 8b       	std	Y+18, r23	; 0x12
     fac:	8b 8b       	std	Y+19, r24	; 0x13
     fae:	9c 8b       	std	Y+20, r25	; 0x14
     fb0:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <loop_bool>
     fb4:	90 91 78 03 	lds	r25, 0x0378	; 0x800378 <loop_bool+0x1>
     fb8:	89 2b       	or	r24, r25
     fba:	21 f0       	breq	.+8      	; 0xfc4 <main+0x1f4>
     fbc:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <loop_bool+0x1>
     fc0:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <loop_bool>
     fc4:	0b 85       	ldd	r16, Y+11	; 0x0b
     fc6:	1c 85       	ldd	r17, Y+12	; 0x0c
     fc8:	e9 84       	ldd	r14, Y+9	; 0x09
     fca:	fa 84       	ldd	r15, Y+10	; 0x0a
     fcc:	b8 01       	movw	r22, r16
     fce:	01 2e       	mov	r0, r17
     fd0:	00 0c       	add	r0, r0
     fd2:	88 0b       	sbc	r24, r24
     fd4:	99 0b       	sbc	r25, r25
     fd6:	d3 d5       	rcall	.+2982   	; 0x1b7e <__floatsisf>
     fd8:	4b 01       	movw	r8, r22
     fda:	5c 01       	movw	r10, r24
     fdc:	b7 01       	movw	r22, r14
     fde:	0f 2c       	mov	r0, r15
     fe0:	00 0c       	add	r0, r0
     fe2:	88 0b       	sbc	r24, r24
     fe4:	99 0b       	sbc	r25, r25
     fe6:	cb d5       	rcall	.+2966   	; 0x1b7e <__floatsisf>
     fe8:	a5 01       	movw	r20, r10
     fea:	94 01       	movw	r18, r8
     fec:	d6 d4       	rcall	.+2476   	; 0x199a <atan2>
     fee:	6d 8b       	std	Y+21, r22	; 0x15
     ff0:	7e 8b       	std	Y+22, r23	; 0x16
     ff2:	8f 8b       	std	Y+23, r24	; 0x17
     ff4:	98 8f       	std	Y+24, r25	; 0x18
     ff6:	c7 01       	movw	r24, r14
     ff8:	b3 01       	movw	r22, r6
     ffa:	0e 94 e5 12 	call	0x25ca	; 0x25ca <__divmodhi4>
     ffe:	07 2e       	mov	r0, r23
    1000:	00 0c       	add	r0, r0
    1002:	88 0b       	sbc	r24, r24
    1004:	99 0b       	sbc	r25, r25
    1006:	bb d5       	rcall	.+2934   	; 0x1b7e <__floatsisf>
    1008:	6b 01       	movw	r12, r22
    100a:	7c 01       	movw	r14, r24
    100c:	c8 01       	movw	r24, r16
    100e:	b3 01       	movw	r22, r6
    1010:	0e 94 e5 12 	call	0x25ca	; 0x25ca <__divmodhi4>
    1014:	07 2e       	mov	r0, r23
    1016:	00 0c       	add	r0, r0
    1018:	88 0b       	sbc	r24, r24
    101a:	99 0b       	sbc	r25, r25
    101c:	b0 d5       	rcall	.+2912   	; 0x1b7e <__floatsisf>
    101e:	4b 01       	movw	r8, r22
    1020:	5c 01       	movw	r10, r24
    1022:	a7 01       	movw	r20, r14
    1024:	96 01       	movw	r18, r12
    1026:	c7 01       	movw	r24, r14
    1028:	b6 01       	movw	r22, r12
    102a:	89 d6       	rcall	.+3346   	; 0x1d3e <__mulsf3>
    102c:	69 8f       	std	Y+25, r22	; 0x19
    102e:	7a 8f       	std	Y+26, r23	; 0x1a
    1030:	8b 8f       	std	Y+27, r24	; 0x1b
    1032:	9c 8f       	std	Y+28, r25	; 0x1c
    1034:	a7 01       	movw	r20, r14
    1036:	96 01       	movw	r18, r12
    1038:	c7 01       	movw	r24, r14
    103a:	b6 01       	movw	r22, r12
    103c:	80 d6       	rcall	.+3328   	; 0x1d3e <__mulsf3>
    103e:	6b 01       	movw	r12, r22
    1040:	7c 01       	movw	r14, r24
    1042:	a5 01       	movw	r20, r10
    1044:	94 01       	movw	r18, r8
    1046:	c5 01       	movw	r24, r10
    1048:	b4 01       	movw	r22, r8
    104a:	79 d6       	rcall	.+3314   	; 0x1d3e <__mulsf3>
    104c:	9b 01       	movw	r18, r22
    104e:	ac 01       	movw	r20, r24
    1050:	c7 01       	movw	r24, r14
    1052:	b6 01       	movw	r22, r12
    1054:	2f d4       	rcall	.+2142   	; 0x18b4 <__addsf3>
    1056:	da d6       	rcall	.+3508   	; 0x1e0c <sqrt>
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	30 e0       	ldi	r19, 0x00	; 0
    105c:	48 ec       	ldi	r20, 0xC8	; 200
    105e:	52 e4       	ldi	r21, 0x42	; 66
    1060:	6e d6       	rcall	.+3292   	; 0x1d3e <__mulsf3>
    1062:	6b 01       	movw	r12, r22
    1064:	7c 01       	movw	r14, r24
    1066:	6f 81       	ldd	r22, Y+7	; 0x07
    1068:	78 85       	ldd	r23, Y+8	; 0x08
    106a:	07 2e       	mov	r0, r23
    106c:	00 0c       	add	r0, r0
    106e:	88 0b       	sbc	r24, r24
    1070:	99 0b       	sbc	r25, r25
    1072:	85 d5       	rcall	.+2826   	; 0x1b7e <__floatsisf>
    1074:	a7 01       	movw	r20, r14
    1076:	96 01       	movw	r18, r12
    1078:	90 d4       	rcall	.+2336   	; 0x199a <atan2>
    107a:	21 ee       	ldi	r18, 0xE1	; 225
    107c:	3e e2       	ldi	r19, 0x2E	; 46
    107e:	45 e6       	ldi	r20, 0x65	; 101
    1080:	52 e4       	ldi	r21, 0x42	; 66
    1082:	5d d6       	rcall	.+3258   	; 0x1d3e <__mulsf3>
    1084:	4b 01       	movw	r8, r22
    1086:	5c 01       	movw	r10, r24
    1088:	c0 90 4a 04 	lds	r12, 0x044A	; 0x80044a <dt>
    108c:	d0 90 4b 04 	lds	r13, 0x044B	; 0x80044b <dt+0x1>
    1090:	e0 90 4c 04 	lds	r14, 0x044C	; 0x80044c <dt+0x2>
    1094:	f0 90 4d 04 	lds	r15, 0x044D	; 0x80044d <dt+0x3>
    1098:	21 ee       	ldi	r18, 0xE1	; 225
    109a:	3e e2       	ldi	r19, 0x2E	; 46
    109c:	45 e6       	ldi	r20, 0x65	; 101
    109e:	52 e4       	ldi	r21, 0x42	; 66
    10a0:	6d 89       	ldd	r22, Y+21	; 0x15
    10a2:	7e 89       	ldd	r23, Y+22	; 0x16
    10a4:	8f 89       	ldd	r24, Y+23	; 0x17
    10a6:	98 8d       	ldd	r25, Y+24	; 0x18
    10a8:	4a d6       	rcall	.+3220   	; 0x1d3e <__mulsf3>
    10aa:	87 01       	movw	r16, r14
    10ac:	76 01       	movw	r14, r12
    10ae:	2d 85       	ldd	r18, Y+13	; 0x0d
    10b0:	3e 85       	ldd	r19, Y+14	; 0x0e
    10b2:	4f 85       	ldd	r20, Y+15	; 0x0f
    10b4:	58 89       	ldd	r21, Y+16	; 0x10
    10b6:	c7 da       	rcall	.-2674   	; 0x646 <getAngle>
    10b8:	60 93 4e 04 	sts	0x044E, r22	; 0x80044e <kalman_angle_roll>
    10bc:	70 93 4f 04 	sts	0x044F, r23	; 0x80044f <kalman_angle_roll+0x1>
    10c0:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <kalman_angle_roll+0x2>
    10c4:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <kalman_angle_roll+0x3>
    10c8:	e0 90 4a 04 	lds	r14, 0x044A	; 0x80044a <dt>
    10cc:	f0 90 4b 04 	lds	r15, 0x044B	; 0x80044b <dt+0x1>
    10d0:	00 91 4c 04 	lds	r16, 0x044C	; 0x80044c <dt+0x2>
    10d4:	10 91 4d 04 	lds	r17, 0x044D	; 0x80044d <dt+0x3>
    10d8:	29 89       	ldd	r18, Y+17	; 0x11
    10da:	3a 89       	ldd	r19, Y+18	; 0x12
    10dc:	4b 89       	ldd	r20, Y+19	; 0x13
    10de:	5c 89       	ldd	r21, Y+20	; 0x14
    10e0:	c5 01       	movw	r24, r10
    10e2:	b4 01       	movw	r22, r8
    10e4:	9a dc       	rcall	.-1740   	; 0xa1a <getAngle_1>
    10e6:	ab 01       	movw	r20, r22
    10e8:	bc 01       	movw	r22, r24
    10ea:	40 93 42 04 	sts	0x0442, r20	; 0x800442 <kalman_angle_pitch>
    10ee:	50 93 43 04 	sts	0x0443, r21	; 0x800443 <kalman_angle_pitch+0x1>
    10f2:	60 93 44 04 	sts	0x0444, r22	; 0x800444 <kalman_angle_pitch+0x2>
    10f6:	70 93 45 04 	sts	0x0445, r23	; 0x800445 <kalman_angle_pitch+0x3>
    10fa:	81 e8       	ldi	r24, 0x81	; 129
    10fc:	93 e0       	ldi	r25, 0x03	; 3
    10fe:	b7 d3       	rcall	.+1902   	; 0x186e <printSD>
    1100:	b5 01       	movw	r22, r10
    1102:	a4 01       	movw	r20, r8
    1104:	8d e8       	ldi	r24, 0x8D	; 141
    1106:	93 e0       	ldi	r25, 0x03	; 3
    1108:	b2 d3       	rcall	.+1892   	; 0x186e <printSD>
    110a:	8a e0       	ldi	r24, 0x0A	; 10
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	0e 94 93 14 	call	0x2926	; 0x2926 <putchar>
    1112:	f5 ce       	rjmp	.-534    	; 0xefe <main+0x12e>

00001114 <__vector_25>:
    1114:	1f 92       	push	r1
    1116:	0f 92       	push	r0
    1118:	0f b6       	in	r0, 0x3f	; 63
    111a:	0f 92       	push	r0
    111c:	11 24       	eor	r1, r1
    111e:	0b b6       	in	r0, 0x3b	; 59
    1120:	0f 92       	push	r0
    1122:	2f 93       	push	r18
    1124:	3f 93       	push	r19
    1126:	4f 93       	push	r20
    1128:	5f 93       	push	r21
    112a:	6f 93       	push	r22
    112c:	7f 93       	push	r23
    112e:	8f 93       	push	r24
    1130:	9f 93       	push	r25
    1132:	af 93       	push	r26
    1134:	bf 93       	push	r27
    1136:	ef 93       	push	r30
    1138:	ff 93       	push	r31
    113a:	86 e9       	ldi	r24, 0x96	; 150
    113c:	93 e0       	ldi	r25, 0x03	; 3
    113e:	9f 93       	push	r25
    1140:	8f 93       	push	r24
    1142:	0e 94 80 14 	call	0x2900	; 0x2900 <printf>
    1146:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    114a:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <receiveData>
    114e:	8b e1       	ldi	r24, 0x1B	; 27
    1150:	94 e0       	ldi	r25, 0x04	; 4
    1152:	9f 93       	push	r25
    1154:	8f 93       	push	r24
    1156:	89 e9       	ldi	r24, 0x99	; 153
    1158:	93 e0       	ldi	r25, 0x03	; 3
    115a:	9f 93       	push	r25
    115c:	8f 93       	push	r24
    115e:	0e 94 80 14 	call	0x2900	; 0x2900 <printf>
    1162:	2f ef       	ldi	r18, 0xFF	; 255
    1164:	83 e2       	ldi	r24, 0x23	; 35
    1166:	94 ef       	ldi	r25, 0xF4	; 244
    1168:	21 50       	subi	r18, 0x01	; 1
    116a:	80 40       	sbci	r24, 0x00	; 0
    116c:	90 40       	sbci	r25, 0x00	; 0
    116e:	e1 f7       	brne	.-8      	; 0x1168 <__vector_25+0x54>
    1170:	00 c0       	rjmp	.+0      	; 0x1172 <__vector_25+0x5e>
    1172:	00 00       	nop
    1174:	0f 90       	pop	r0
    1176:	0f 90       	pop	r0
    1178:	0f 90       	pop	r0
    117a:	0f 90       	pop	r0
    117c:	0f 90       	pop	r0
    117e:	0f 90       	pop	r0
    1180:	ff 91       	pop	r31
    1182:	ef 91       	pop	r30
    1184:	bf 91       	pop	r27
    1186:	af 91       	pop	r26
    1188:	9f 91       	pop	r25
    118a:	8f 91       	pop	r24
    118c:	7f 91       	pop	r23
    118e:	6f 91       	pop	r22
    1190:	5f 91       	pop	r21
    1192:	4f 91       	pop	r20
    1194:	3f 91       	pop	r19
    1196:	2f 91       	pop	r18
    1198:	0f 90       	pop	r0
    119a:	0b be       	out	0x3b, r0	; 59
    119c:	0f 90       	pop	r0
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	0f 90       	pop	r0
    11a2:	1f 90       	pop	r1
    11a4:	18 95       	reti

000011a6 <mpu6050_writeByte>:
	uint8_t byteToReturn=i2c_readNak();
	i2c_stop();
	return byteToReturn;
}
void mpu6050_writeByte(uint8_t wereToWrite,uint8_t byteToWrite)//writebyte
{
    11a6:	cf 93       	push	r28
    11a8:	df 93       	push	r29
    11aa:	d8 2f       	mov	r29, r24
    11ac:	c6 2f       	mov	r28, r22
	i2c_start(MPU6050_WRITE);
    11ae:	80 ed       	ldi	r24, 0xD0	; 208
	i2c_write(wereToWrite);
	i2c_write(byteToWrite);
    11b0:	5e d2       	rcall	.+1212   	; 0x166e <i2c_start>
    11b2:	8d 2f       	mov	r24, r29
	i2c_stop();
    11b4:	b2 d2       	rcall	.+1380   	; 0x171a <i2c_write>
    11b6:	8c 2f       	mov	r24, r28
}
    11b8:	b0 d2       	rcall	.+1376   	; 0x171a <i2c_write>
    11ba:	9f d2       	rcall	.+1342   	; 0x16fa <i2c_stop>
    11bc:	df 91       	pop	r29
    11be:	cf 91       	pop	r28
    11c0:	08 95       	ret

000011c2 <mpu6050_readBytes>:
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
    11c2:	af 92       	push	r10
    11c4:	bf 92       	push	r11
    11c6:	cf 92       	push	r12
    11c8:	df 92       	push	r13
    11ca:	ff 92       	push	r15
    11cc:	0f 93       	push	r16
    11ce:	1f 93       	push	r17
    11d0:	cf 93       	push	r28
    11d2:	df 93       	push	r29
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
    11d4:	66 23       	and	r22, r22
    11d6:	89 f1       	breq	.+98     	; 0x123a <mpu6050_readBytes+0x78>
    11d8:	c5 2f       	mov	r28, r21
    11da:	d4 2f       	mov	r29, r20
    11dc:	f6 2e       	mov	r15, r22
    11de:	18 2f       	mov	r17, r24
		//request register
		i2c_start(MPU6050_WRITE);
    11e0:	80 ed       	ldi	r24, 0xD0	; 208
		i2c_write(regAddr);
    11e2:	45 d2       	rcall	.+1162   	; 0x166e <i2c_start>
    11e4:	81 2f       	mov	r24, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11e6:	99 d2       	rcall	.+1330   	; 0x171a <i2c_write>
    11e8:	85 e3       	ldi	r24, 0x35	; 53
    11ea:	8a 95       	dec	r24
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
    11ec:	f1 f7       	brne	.-4      	; 0x11ea <mpu6050_readBytes+0x28>
    11ee:	00 00       	nop
    11f0:	81 ed       	ldi	r24, 0xD1	; 209
    11f2:	3d d2       	rcall	.+1146   	; 0x166e <i2c_start>
    11f4:	0d 2f       	mov	r16, r29
    11f6:	1c 2f       	mov	r17, r28
    11f8:	cc 24       	eor	r12, r12
    11fa:	ca 94       	dec	r12
    11fc:	cf 0c       	add	r12, r15
    11fe:	d1 2c       	mov	r13, r1
    1200:	ef ef       	ldi	r30, 0xFF	; 255
    1202:	ce 1a       	sub	r12, r30
    1204:	de 0a       	sbc	r13, r30
    1206:	c0 e0       	ldi	r28, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
    1208:	d0 e0       	ldi	r29, 0x00	; 0
    120a:	af 2c       	mov	r10, r15
    120c:	b1 2c       	mov	r11, r1
    120e:	f1 e0       	ldi	r31, 0x01	; 1
    1210:	af 1a       	sub	r10, r31
    1212:	b1 08       	sbc	r11, r1
    1214:	ac 16       	cp	r10, r28
			data[i] = i2c_readNak();
    1216:	bd 06       	cpc	r11, r29
    1218:	21 f4       	brne	.+8      	; 0x1222 <mpu6050_readBytes+0x60>
    121a:	ba d2       	rcall	.+1396   	; 0x1790 <i2c_readNak>
    121c:	f8 01       	movw	r30, r16
			else
			data[i] = i2c_readAck();
    121e:	80 83       	st	Z, r24
    1220:	03 c0       	rjmp	.+6      	; 0x1228 <mpu6050_readBytes+0x66>
    1222:	9c d2       	rcall	.+1336   	; 0x175c <i2c_readAck>
    1224:	f8 01       	movw	r30, r16
    1226:	80 83       	st	Z, r24
    1228:	21 96       	adiw	r28, 0x01	; 1
		i2c_start(MPU6050_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_READ);
		for(i=0; i<length; i++) {
    122a:	0f 5f       	subi	r16, 0xFF	; 255
    122c:	1f 4f       	sbci	r17, 0xFF	; 255
    122e:	cc 15       	cp	r28, r12
    1230:	dd 05       	cpc	r29, r13
			if(i==length-1)
			data[i] = i2c_readNak();
			else
			data[i] = i2c_readAck();
		}
		i2c_stop();
    1232:	81 f7       	brne	.-32     	; 0x1214 <mpu6050_readBytes+0x52>
    1234:	cf 2d       	mov	r28, r15
    1236:	61 d2       	rcall	.+1218   	; 0x16fa <i2c_stop>
	i2c_write(byteToWrite);
	i2c_stop();
}
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
    1238:	01 c0       	rjmp	.+2      	; 0x123c <mpu6050_readBytes+0x7a>
			data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
    123a:	c0 e0       	ldi	r28, 0x00	; 0
    123c:	8c 2f       	mov	r24, r28
    123e:	df 91       	pop	r29
    1240:	cf 91       	pop	r28
    1242:	1f 91       	pop	r17
    1244:	0f 91       	pop	r16
    1246:	ff 90       	pop	r15
    1248:	df 90       	pop	r13
    124a:	cf 90       	pop	r12
    124c:	bf 90       	pop	r11
    124e:	af 90       	pop	r10
    1250:	08 95       	ret

00001252 <mpu6050_getRawData>:
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
    1252:	6f 92       	push	r6
    1254:	7f 92       	push	r7
    1256:	8f 92       	push	r8
    1258:	9f 92       	push	r9
    125a:	af 92       	push	r10
    125c:	bf 92       	push	r11
    125e:	cf 92       	push	r12
    1260:	df 92       	push	r13
    1262:	ef 92       	push	r14
    1264:	ff 92       	push	r15
    1266:	0f 93       	push	r16
    1268:	1f 93       	push	r17
    126a:	cf 93       	push	r28
    126c:	df 93       	push	r29
    126e:	cd b7       	in	r28, 0x3d	; 61
    1270:	de b7       	in	r29, 0x3e	; 62
    1272:	2e 97       	sbiw	r28, 0x0e	; 14
    1274:	0f b6       	in	r0, 0x3f	; 63
    1276:	f8 94       	cli
    1278:	de bf       	out	0x3e, r29	; 62
    127a:	0f be       	out	0x3f, r0	; 63
    127c:	cd bf       	out	0x3d, r28	; 61
    127e:	4c 01       	movw	r8, r24
    1280:	5b 01       	movw	r10, r22
    1282:	6a 01       	movw	r12, r20
    1284:	39 01       	movw	r6, r18
	uint8_t buffer[14];
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14,  buffer);
    1286:	ae 01       	movw	r20, r28
    1288:	4f 5f       	subi	r20, 0xFF	; 255
    128a:	5f 4f       	sbci	r21, 0xFF	; 255
    128c:	6e e0       	ldi	r22, 0x0E	; 14
    128e:	8b e3       	ldi	r24, 0x3B	; 59
    1290:	98 df       	rcall	.-208    	; 0x11c2 <mpu6050_readBytes>
	*ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    1292:	89 81       	ldd	r24, Y+1	; 0x01
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	98 2f       	mov	r25, r24
    1298:	88 27       	eor	r24, r24
    129a:	2a 81       	ldd	r18, Y+2	; 0x02
    129c:	82 2b       	or	r24, r18
    129e:	f4 01       	movw	r30, r8
    12a0:	91 83       	std	Z+1, r25	; 0x01
    12a2:	80 83       	st	Z, r24
	*ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    12a4:	8b 81       	ldd	r24, Y+3	; 0x03
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	98 2f       	mov	r25, r24
    12aa:	88 27       	eor	r24, r24
    12ac:	2c 81       	ldd	r18, Y+4	; 0x04
    12ae:	82 2b       	or	r24, r18
    12b0:	f5 01       	movw	r30, r10
    12b2:	91 83       	std	Z+1, r25	; 0x01
    12b4:	80 83       	st	Z, r24
	*az = (((int16_t)buffer[4]) << 8) | buffer[5];
    12b6:	8d 81       	ldd	r24, Y+5	; 0x05
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	98 2f       	mov	r25, r24
    12bc:	88 27       	eor	r24, r24
    12be:	2e 81       	ldd	r18, Y+6	; 0x06
    12c0:	82 2b       	or	r24, r18
    12c2:	f6 01       	movw	r30, r12
    12c4:	91 83       	std	Z+1, r25	; 0x01
    12c6:	80 83       	st	Z, r24
	*gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    12c8:	89 85       	ldd	r24, Y+9	; 0x09
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	98 2f       	mov	r25, r24
    12ce:	88 27       	eor	r24, r24
    12d0:	2a 85       	ldd	r18, Y+10	; 0x0a
    12d2:	82 2b       	or	r24, r18
    12d4:	f3 01       	movw	r30, r6
    12d6:	91 83       	std	Z+1, r25	; 0x01
    12d8:	80 83       	st	Z, r24
	*gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    12da:	8b 85       	ldd	r24, Y+11	; 0x0b
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	98 2f       	mov	r25, r24
    12e0:	88 27       	eor	r24, r24
    12e2:	2c 85       	ldd	r18, Y+12	; 0x0c
    12e4:	82 2b       	or	r24, r18
    12e6:	f8 01       	movw	r30, r16
    12e8:	91 83       	std	Z+1, r25	; 0x01
    12ea:	80 83       	st	Z, r24
	*gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    12ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	98 2f       	mov	r25, r24
    12f2:	88 27       	eor	r24, r24
    12f4:	2e 85       	ldd	r18, Y+14	; 0x0e
    12f6:	82 2b       	or	r24, r18
    12f8:	f7 01       	movw	r30, r14
    12fa:	91 83       	std	Z+1, r25	; 0x01
    12fc:	80 83       	st	Z, r24
    12fe:	2e 96       	adiw	r28, 0x0e	; 14
    1300:	0f b6       	in	r0, 0x3f	; 63
    1302:	f8 94       	cli
    1304:	de bf       	out	0x3e, r29	; 62
    1306:	0f be       	out	0x3f, r0	; 63
    1308:	cd bf       	out	0x3d, r28	; 61
    130a:	df 91       	pop	r29
    130c:	cf 91       	pop	r28
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	ff 90       	pop	r15
    1314:	ef 90       	pop	r14
    1316:	df 90       	pop	r13
    1318:	cf 90       	pop	r12
    131a:	bf 90       	pop	r11
    131c:	af 90       	pop	r10
    131e:	9f 90       	pop	r9
    1320:	8f 90       	pop	r8
    1322:	7f 90       	pop	r7
    1324:	6f 90       	pop	r6
    1326:	08 95       	ret

00001328 <Compute_PID>:
 * Created: 9/24/2017 10:52:39 AM
 *  Author: rafja
 */ 
#include "PID.h"
double Compute_PID(double angle, double desired_angle,double *pid_i,double *previous_error, double dt,double kp, double ki, double kd)
{
    1328:	2f 92       	push	r2
    132a:	3f 92       	push	r3
    132c:	4f 92       	push	r4
    132e:	5f 92       	push	r5
    1330:	6f 92       	push	r6
    1332:	7f 92       	push	r7
    1334:	8f 92       	push	r8
    1336:	9f 92       	push	r9
    1338:	af 92       	push	r10
    133a:	bf 92       	push	r11
    133c:	cf 92       	push	r12
    133e:	df 92       	push	r13
    1340:	ef 92       	push	r14
    1342:	ff 92       	push	r15
    1344:	0f 93       	push	r16
    1346:	1f 93       	push	r17
    1348:	cf 93       	push	r28
    134a:	df 93       	push	r29
    134c:	00 d0       	rcall	.+0      	; 0x134e <Compute_PID+0x26>
    134e:	1f 92       	push	r1
    1350:	cd b7       	in	r28, 0x3d	; 61
    1352:	de b7       	in	r29, 0x3e	; 62
	
	//printSD("prever_local = ", *previous_error);

	double error = angle-desired_angle;
    1354:	17 01       	movw	r2, r14
    1356:	ad d2       	rcall	.+1370   	; 0x18b2 <__subsf3>
    1358:	69 83       	std	Y+1, r22	; 0x01
    135a:	7a 83       	std	Y+2, r23	; 0x02
    135c:	8b 83       	std	Y+3, r24	; 0x03
	double pid_p = kp*error;
    135e:	9c 83       	std	Y+4, r25	; 0x04
    1360:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1362:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1364:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1366:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1368:	ea d4       	rcall	.+2516   	; 0x1d3e <__mulsf3>
    136a:	2b 01       	movw	r4, r22
	if (abs(error)>0.1)
    136c:	3c 01       	movw	r6, r24
    136e:	69 81       	ldd	r22, Y+1	; 0x01
    1370:	7a 81       	ldd	r23, Y+2	; 0x02
    1372:	8b 81       	ldd	r24, Y+3	; 0x03
    1374:	9c 81       	ldd	r25, Y+4	; 0x04
    1376:	d0 d3       	rcall	.+1952   	; 0x1b18 <__fixsfsi>
    1378:	9b 01       	movw	r18, r22
    137a:	77 23       	and	r23, r23
    137c:	24 f4       	brge	.+8      	; 0x1386 <Compute_PID+0x5e>
    137e:	22 27       	eor	r18, r18
    1380:	33 27       	eor	r19, r19
    1382:	26 1b       	sub	r18, r22
    1384:	37 0b       	sbc	r19, r23
    1386:	b9 01       	movw	r22, r18
    1388:	33 0f       	add	r19, r19
    138a:	88 0b       	sbc	r24, r24
    138c:	99 0b       	sbc	r25, r25
    138e:	f7 d3       	rcall	.+2030   	; 0x1b7e <__floatsisf>
    1390:	2d ec       	ldi	r18, 0xCD	; 205
    1392:	3c ec       	ldi	r19, 0xCC	; 204
    1394:	4c ec       	ldi	r20, 0xCC	; 204
    1396:	5d e3       	ldi	r21, 0x3D	; 61
    1398:	c7 d4       	rcall	.+2446   	; 0x1d28 <__gesf2>
    139a:	18 16       	cp	r1, r24
	{
		*pid_i=*pid_i+(ki*error);	
    139c:	b4 f4       	brge	.+44     	; 0x13ca <Compute_PID+0xa2>
    139e:	2e 8d       	ldd	r18, Y+30	; 0x1e
    13a0:	3f 8d       	ldd	r19, Y+31	; 0x1f
    13a2:	48 a1       	ldd	r20, Y+32	; 0x20
    13a4:	59 a1       	ldd	r21, Y+33	; 0x21
    13a6:	69 81       	ldd	r22, Y+1	; 0x01
    13a8:	7a 81       	ldd	r23, Y+2	; 0x02
    13aa:	8b 81       	ldd	r24, Y+3	; 0x03
    13ac:	9c 81       	ldd	r25, Y+4	; 0x04
    13ae:	c7 d4       	rcall	.+2446   	; 0x1d3e <__mulsf3>
    13b0:	9b 01       	movw	r18, r22
    13b2:	ac 01       	movw	r20, r24
    13b4:	d8 01       	movw	r26, r16
    13b6:	6d 91       	ld	r22, X+
    13b8:	7d 91       	ld	r23, X+
    13ba:	8d 91       	ld	r24, X+
    13bc:	9c 91       	ld	r25, X
    13be:	7a d2       	rcall	.+1268   	; 0x18b4 <__addsf3>
    13c0:	f8 01       	movw	r30, r16
    13c2:	60 83       	st	Z, r22
    13c4:	71 83       	std	Z+1, r23	; 0x01
    13c6:	82 83       	std	Z+2, r24	; 0x02
	}
	double pid_d = kd*((error - *previous_error)/dt);
    13c8:	93 83       	std	Z+3, r25	; 0x03
    13ca:	d1 01       	movw	r26, r2
    13cc:	2d 91       	ld	r18, X+
    13ce:	3d 91       	ld	r19, X+
    13d0:	4d 91       	ld	r20, X+
    13d2:	5c 91       	ld	r21, X
    13d4:	69 81       	ldd	r22, Y+1	; 0x01
    13d6:	7a 81       	ldd	r23, Y+2	; 0x02
    13d8:	8b 81       	ldd	r24, Y+3	; 0x03
    13da:	9c 81       	ldd	r25, Y+4	; 0x04
    13dc:	6a d2       	rcall	.+1236   	; 0x18b2 <__subsf3>
    13de:	a6 01       	movw	r20, r12
    13e0:	95 01       	movw	r18, r10
    13e2:	32 d3       	rcall	.+1636   	; 0x1a48 <__divsf3>
    13e4:	2a a1       	ldd	r18, Y+34	; 0x22
    13e6:	3b a1       	ldd	r19, Y+35	; 0x23
    13e8:	4c a1       	ldd	r20, Y+36	; 0x24
    13ea:	5d a1       	ldd	r21, Y+37	; 0x25
    13ec:	a8 d4       	rcall	.+2384   	; 0x1d3e <__mulsf3>
    13ee:	4b 01       	movw	r8, r22
	*previous_error=error;
    13f0:	5c 01       	movw	r10, r24
    13f2:	89 81       	ldd	r24, Y+1	; 0x01
    13f4:	9a 81       	ldd	r25, Y+2	; 0x02
    13f6:	ab 81       	ldd	r26, Y+3	; 0x03
    13f8:	bc 81       	ldd	r27, Y+4	; 0x04
    13fa:	f1 01       	movw	r30, r2
    13fc:	80 83       	st	Z, r24
	
	return pid_p + (*pid_i) + pid_d;
    13fe:	91 83       	std	Z+1, r25	; 0x01
    1400:	a2 83       	std	Z+2, r26	; 0x02
    1402:	b3 83       	std	Z+3, r27	; 0x03
    1404:	d8 01       	movw	r26, r16
    1406:	2d 91       	ld	r18, X+
    1408:	3d 91       	ld	r19, X+
    140a:	4d 91       	ld	r20, X+
    140c:	5c 91       	ld	r21, X
    140e:	c3 01       	movw	r24, r6
    1410:	b2 01       	movw	r22, r4
    1412:	50 d2       	rcall	.+1184   	; 0x18b4 <__addsf3>
    1414:	a5 01       	movw	r20, r10
}
    1416:	94 01       	movw	r18, r8
    1418:	4d d2       	rcall	.+1178   	; 0x18b4 <__addsf3>
    141a:	0f 90       	pop	r0
    141c:	0f 90       	pop	r0
    141e:	0f 90       	pop	r0
    1420:	0f 90       	pop	r0
    1422:	df 91       	pop	r29
    1424:	cf 91       	pop	r28
    1426:	1f 91       	pop	r17
    1428:	0f 91       	pop	r16
    142a:	ff 90       	pop	r15
    142c:	ef 90       	pop	r14
    142e:	df 90       	pop	r13
    1430:	cf 90       	pop	r12
    1432:	bf 90       	pop	r11
    1434:	af 90       	pop	r10
    1436:	9f 90       	pop	r9
    1438:	8f 90       	pop	r8
    143a:	7f 90       	pop	r7
    143c:	6f 90       	pop	r6
    143e:	5f 90       	pop	r5
    1440:	4f 90       	pop	r4
    1442:	3f 90       	pop	r3
    1444:	2f 90       	pop	r2
    1446:	08 95       	ret

00001448 <setup_timer4>:
	cli();
	m = timer0_millis;
	SREG = oldSREG;

	return m;
}
    1448:	e1 ea       	ldi	r30, 0xA1	; 161
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	80 81       	ld	r24, Z
    144e:	81 60       	ori	r24, 0x01	; 1
    1450:	80 83       	st	Z, r24
    1452:	e0 ea       	ldi	r30, 0xA0	; 160
    1454:	f0 e0       	ldi	r31, 0x00	; 0
    1456:	80 81       	ld	r24, Z
    1458:	81 60       	ori	r24, 0x01	; 1
    145a:	80 83       	st	Z, r24
    145c:	80 81       	ld	r24, Z
    145e:	80 68       	ori	r24, 0x80	; 128
    1460:	80 83       	st	Z, r24
    1462:	80 81       	ld	r24, Z
    1464:	80 62       	ori	r24, 0x20	; 32
    1466:	80 83       	st	Z, r24
    1468:	80 81       	ld	r24, Z
    146a:	88 60       	ori	r24, 0x08	; 8
    146c:	80 83       	st	Z, r24
    146e:	08 95       	ret

00001470 <setup_timer3>:
    1470:	e1 e9       	ldi	r30, 0x91	; 145
    1472:	f0 e0       	ldi	r31, 0x00	; 0
    1474:	80 81       	ld	r24, Z
    1476:	81 60       	ori	r24, 0x01	; 1
    1478:	80 83       	st	Z, r24
    147a:	e0 e9       	ldi	r30, 0x90	; 144
    147c:	f0 e0       	ldi	r31, 0x00	; 0
    147e:	80 81       	ld	r24, Z
    1480:	81 60       	ori	r24, 0x01	; 1
    1482:	80 83       	st	Z, r24
    1484:	80 81       	ld	r24, Z
    1486:	80 68       	ori	r24, 0x80	; 128
    1488:	80 83       	st	Z, r24
    148a:	80 81       	ld	r24, Z
    148c:	80 62       	ori	r24, 0x20	; 32
    148e:	80 83       	st	Z, r24
    1490:	80 81       	ld	r24, Z
    1492:	88 60       	ori	r24, 0x08	; 8
    1494:	80 83       	st	Z, r24
    1496:	08 95       	ret

00001498 <setup_timer5>:
    1498:	e1 e2       	ldi	r30, 0x21	; 33
    149a:	f1 e0       	ldi	r31, 0x01	; 1
    149c:	80 81       	ld	r24, Z
    149e:	81 60       	ori	r24, 0x01	; 1
    14a0:	80 83       	st	Z, r24
    14a2:	80 81       	ld	r24, Z
    14a4:	88 60       	ori	r24, 0x08	; 8
    14a6:	80 83       	st	Z, r24
    14a8:	08 95       	ret

000014aa <Enable_timer5_compare_interrupt>:
    14aa:	e3 e7       	ldi	r30, 0x73	; 115
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	80 81       	ld	r24, Z
    14b0:	82 60       	ori	r24, 0x02	; 2
    14b2:	80 83       	st	Z, r24
    14b4:	08 95       	ret

000014b6 <setup_timer1>:
    14b6:	e1 e8       	ldi	r30, 0x81	; 129
    14b8:	f0 e0       	ldi	r31, 0x00	; 0
    14ba:	80 81       	ld	r24, Z
    14bc:	81 60       	ori	r24, 0x01	; 1
    14be:	80 83       	st	Z, r24
    14c0:	80 81       	ld	r24, Z
    14c2:	88 60       	ori	r24, 0x08	; 8
    14c4:	80 83       	st	Z, r24
    14c6:	08 95       	ret

000014c8 <setup_timer0>:
    14c8:	85 b5       	in	r24, 0x25	; 37
    14ca:	81 60       	ori	r24, 0x01	; 1
    14cc:	85 bd       	out	0x25, r24	; 37
    14ce:	85 b5       	in	r24, 0x25	; 37
    14d0:	82 60       	ori	r24, 0x02	; 2
    14d2:	85 bd       	out	0x25, r24	; 37
    14d4:	08 95       	ret

000014d6 <Enable_timer0_overflow_interrupt>:
    14d6:	ee e6       	ldi	r30, 0x6E	; 110
    14d8:	f0 e0       	ldi	r31, 0x00	; 0
    14da:	80 81       	ld	r24, Z
    14dc:	81 60       	ori	r24, 0x01	; 1
    14de:	80 83       	st	Z, r24
    14e0:	08 95       	ret

000014e2 <micros>:
    14e2:	3f b7       	in	r19, 0x3f	; 63
    14e4:	f8 94       	cli
    14e6:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <timer0_overflow_count>
    14ea:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <timer0_overflow_count+0x1>
    14ee:	a0 91 ad 03 	lds	r26, 0x03AD	; 0x8003ad <timer0_overflow_count+0x2>
    14f2:	b0 91 ae 03 	lds	r27, 0x03AE	; 0x8003ae <timer0_overflow_count+0x3>
    14f6:	26 b5       	in	r18, 0x26	; 38
    14f8:	a8 9b       	sbis	0x15, 0	; 21
    14fa:	05 c0       	rjmp	.+10     	; 0x1506 <micros+0x24>
    14fc:	2f 3f       	cpi	r18, 0xFF	; 255
    14fe:	19 f0       	breq	.+6      	; 0x1506 <micros+0x24>
    1500:	01 96       	adiw	r24, 0x01	; 1
    1502:	a1 1d       	adc	r26, r1
    1504:	b1 1d       	adc	r27, r1
    1506:	3f bf       	out	0x3f, r19	; 63
    1508:	ba 2f       	mov	r27, r26
    150a:	a9 2f       	mov	r26, r25
    150c:	98 2f       	mov	r25, r24
    150e:	88 27       	eor	r24, r24
    1510:	82 0f       	add	r24, r18
    1512:	91 1d       	adc	r25, r1
    1514:	a1 1d       	adc	r26, r1
    1516:	b1 1d       	adc	r27, r1
    1518:	bc 01       	movw	r22, r24
    151a:	cd 01       	movw	r24, r26
    151c:	66 0f       	add	r22, r22
    151e:	77 1f       	adc	r23, r23
    1520:	88 1f       	adc	r24, r24
    1522:	99 1f       	adc	r25, r25
    1524:	66 0f       	add	r22, r22
    1526:	77 1f       	adc	r23, r23
    1528:	88 1f       	adc	r24, r24
    152a:	99 1f       	adc	r25, r25
    152c:	08 95       	ret

0000152e <__vector_23>:
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
    152e:	1f 92       	push	r1
    1530:	0f 92       	push	r0
    1532:	0f b6       	in	r0, 0x3f	; 63
    1534:	0f 92       	push	r0
    1536:	11 24       	eor	r1, r1
    1538:	2f 93       	push	r18
    153a:	3f 93       	push	r19
    153c:	8f 93       	push	r24
    153e:	9f 93       	push	r25
    1540:	af 93       	push	r26
    1542:	bf 93       	push	r27
	unsigned long m = timer0_millis;
    1544:	80 91 a7 03 	lds	r24, 0x03A7	; 0x8003a7 <timer0_millis>
    1548:	90 91 a8 03 	lds	r25, 0x03A8	; 0x8003a8 <timer0_millis+0x1>
    154c:	a0 91 a9 03 	lds	r26, 0x03A9	; 0x8003a9 <timer0_millis+0x2>
    1550:	b0 91 aa 03 	lds	r27, 0x03AA	; 0x8003aa <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    1554:	30 91 a6 03 	lds	r19, 0x03A6	; 0x8003a6 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    1558:	23 e0       	ldi	r18, 0x03	; 3
    155a:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    155c:	2d 37       	cpi	r18, 0x7D	; 125
    155e:	20 f4       	brcc	.+8      	; 0x1568 <__vector_23+0x3a>
ISR(TIMER0_OVF_vect)//10 microsecconed timer interrupt
{
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    1560:	01 96       	adiw	r24, 0x01	; 1
    1562:	a1 1d       	adc	r26, r1
    1564:	b1 1d       	adc	r27, r1
    1566:	05 c0       	rjmp	.+10     	; 0x1572 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    1568:	26 e8       	ldi	r18, 0x86	; 134
    156a:	23 0f       	add	r18, r19
		m += 1;
    156c:	02 96       	adiw	r24, 0x02	; 2
    156e:	a1 1d       	adc	r26, r1
    1570:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    1572:	20 93 a6 03 	sts	0x03A6, r18	; 0x8003a6 <timer0_fract>
	timer0_millis = m;
    1576:	80 93 a7 03 	sts	0x03A7, r24	; 0x8003a7 <timer0_millis>
    157a:	90 93 a8 03 	sts	0x03A8, r25	; 0x8003a8 <timer0_millis+0x1>
    157e:	a0 93 a9 03 	sts	0x03A9, r26	; 0x8003a9 <timer0_millis+0x2>
    1582:	b0 93 aa 03 	sts	0x03AA, r27	; 0x8003aa <timer0_millis+0x3>
	timer0_overflow_count++;
    1586:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <timer0_overflow_count>
    158a:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <timer0_overflow_count+0x1>
    158e:	a0 91 ad 03 	lds	r26, 0x03AD	; 0x8003ad <timer0_overflow_count+0x2>
    1592:	b0 91 ae 03 	lds	r27, 0x03AE	; 0x8003ae <timer0_overflow_count+0x3>
    1596:	01 96       	adiw	r24, 0x01	; 1
    1598:	a1 1d       	adc	r26, r1
    159a:	b1 1d       	adc	r27, r1
    159c:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <timer0_overflow_count>
    15a0:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <timer0_overflow_count+0x1>
    15a4:	a0 93 ad 03 	sts	0x03AD, r26	; 0x8003ad <timer0_overflow_count+0x2>
    15a8:	b0 93 ae 03 	sts	0x03AE, r27	; 0x8003ae <timer0_overflow_count+0x3>
}
    15ac:	bf 91       	pop	r27
    15ae:	af 91       	pop	r26
    15b0:	9f 91       	pop	r25
    15b2:	8f 91       	pop	r24
    15b4:	3f 91       	pop	r19
    15b6:	2f 91       	pop	r18
    15b8:	0f 90       	pop	r0
    15ba:	0f be       	out	0x3f, r0	; 63
    15bc:	0f 90       	pop	r0
    15be:	1f 90       	pop	r1
    15c0:	18 95       	reti

000015c2 <__vector_47>:

ISR(TIMER5_COMPA_vect)//motor update interrupt routine
{
    15c2:	1f 92       	push	r1
    15c4:	0f 92       	push	r0
    15c6:	0f b6       	in	r0, 0x3f	; 63
    15c8:	0f 92       	push	r0
    15ca:	11 24       	eor	r1, r1
    15cc:	0b b6       	in	r0, 0x3b	; 59
    15ce:	0f 92       	push	r0
    15d0:	2f 93       	push	r18
    15d2:	3f 93       	push	r19
    15d4:	4f 93       	push	r20
    15d6:	5f 93       	push	r21
    15d8:	6f 93       	push	r22
    15da:	7f 93       	push	r23
    15dc:	8f 93       	push	r24
    15de:	9f 93       	push	r25
    15e0:	af 93       	push	r26
    15e2:	bf 93       	push	r27
    15e4:	ef 93       	push	r30
    15e6:	ff 93       	push	r31
	PWM_update();
    15e8:	0e 94 2c 01 	call	0x258	; 0x258 <PWM_update>
}
    15ec:	ff 91       	pop	r31
    15ee:	ef 91       	pop	r30
    15f0:	bf 91       	pop	r27
    15f2:	af 91       	pop	r26
    15f4:	9f 91       	pop	r25
    15f6:	8f 91       	pop	r24
    15f8:	7f 91       	pop	r23
    15fa:	6f 91       	pop	r22
    15fc:	5f 91       	pop	r21
    15fe:	4f 91       	pop	r20
    1600:	3f 91       	pop	r19
    1602:	2f 91       	pop	r18
    1604:	0f 90       	pop	r0
    1606:	0b be       	out	0x3b, r0	; 59
    1608:	0f 90       	pop	r0
    160a:	0f be       	out	0x3f, r0	; 63
    160c:	0f 90       	pop	r0
    160e:	1f 90       	pop	r1
    1610:	18 95       	reti

00001612 <__vector_17>:
ISR(TIMER1_COMPA_vect)//motor update interrupt routine
{
    1612:	1f 92       	push	r1
    1614:	0f 92       	push	r0
    1616:	0f b6       	in	r0, 0x3f	; 63
    1618:	0f 92       	push	r0
    161a:	11 24       	eor	r1, r1
    161c:	0b b6       	in	r0, 0x3b	; 59
    161e:	0f 92       	push	r0
    1620:	2f 93       	push	r18
    1622:	3f 93       	push	r19
    1624:	4f 93       	push	r20
    1626:	5f 93       	push	r21
    1628:	6f 93       	push	r22
    162a:	7f 93       	push	r23
    162c:	8f 93       	push	r24
    162e:	9f 93       	push	r25
    1630:	af 93       	push	r26
    1632:	bf 93       	push	r27
    1634:	ef 93       	push	r30
    1636:	ff 93       	push	r31
	PWM_update_2();
    1638:	0e 94 7e 02 	call	0x4fc	; 0x4fc <PWM_update_2>
    163c:	ff 91       	pop	r31
    163e:	ef 91       	pop	r30
    1640:	bf 91       	pop	r27
    1642:	af 91       	pop	r26
    1644:	9f 91       	pop	r25
    1646:	8f 91       	pop	r24
    1648:	7f 91       	pop	r23
    164a:	6f 91       	pop	r22
    164c:	5f 91       	pop	r21
    164e:	4f 91       	pop	r20
    1650:	3f 91       	pop	r19
    1652:	2f 91       	pop	r18
    1654:	0f 90       	pop	r0
    1656:	0b be       	out	0x3b, r0	; 59
    1658:	0f 90       	pop	r0
    165a:	0f be       	out	0x3f, r0	; 63
    165c:	0f 90       	pop	r0
    165e:	1f 90       	pop	r1
    1660:	18 95       	reti

00001662 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    1662:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    1666:	8c e0       	ldi	r24, 0x0C	; 12
    1668:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    166c:	08 95       	ret

0000166e <i2c_start>:
    166e:	94 ea       	ldi	r25, 0xA4	; 164
    1670:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    1674:	4f ef       	ldi	r20, 0xFF	; 255
    1676:	50 e0       	ldi	r21, 0x00	; 0
    1678:	60 e0       	ldi	r22, 0x00	; 0
    167a:	70 e0       	ldi	r23, 0x00	; 0
    167c:	ec eb       	ldi	r30, 0xBC	; 188
    167e:	f0 e0       	ldi	r31, 0x00	; 0
    1680:	90 81       	ld	r25, Z
    1682:	99 23       	and	r25, r25
    1684:	34 f0       	brlt	.+12     	; 0x1692 <i2c_start+0x24>
    1686:	41 50       	subi	r20, 0x01	; 1
    1688:	51 09       	sbc	r21, r1
    168a:	61 09       	sbc	r22, r1
    168c:	71 09       	sbc	r23, r1
    168e:	c0 f7       	brcc	.-16     	; 0x1680 <i2c_start+0x12>
    1690:	04 c0       	rjmp	.+8      	; 0x169a <i2c_start+0x2c>
    1692:	45 2b       	or	r20, r21
    1694:	46 2b       	or	r20, r22
    1696:	47 2b       	or	r20, r23
    1698:	41 f1       	breq	.+80     	; 0x16ea <i2c_start+0x7c>
    169a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    169e:	98 7f       	andi	r25, 0xF8	; 248
    16a0:	98 30       	cpi	r25, 0x08	; 8
    16a2:	11 f0       	breq	.+4      	; 0x16a8 <i2c_start+0x3a>
    16a4:	90 31       	cpi	r25, 0x10	; 16
    16a6:	19 f5       	brne	.+70     	; 0x16ee <i2c_start+0x80>
    16a8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    16ac:	84 e8       	ldi	r24, 0x84	; 132
    16ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    16b2:	8f ef       	ldi	r24, 0xFF	; 255
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	a0 e0       	ldi	r26, 0x00	; 0
    16b8:	b0 e0       	ldi	r27, 0x00	; 0
    16ba:	ec eb       	ldi	r30, 0xBC	; 188
    16bc:	f0 e0       	ldi	r31, 0x00	; 0
    16be:	20 81       	ld	r18, Z
    16c0:	22 23       	and	r18, r18
    16c2:	2c f0       	brlt	.+10     	; 0x16ce <i2c_start+0x60>
    16c4:	01 97       	sbiw	r24, 0x01	; 1
    16c6:	a1 09       	sbc	r26, r1
    16c8:	b1 09       	sbc	r27, r1
    16ca:	c8 f7       	brcc	.-14     	; 0x16be <i2c_start+0x50>
    16cc:	04 c0       	rjmp	.+8      	; 0x16d6 <i2c_start+0x68>
    16ce:	89 2b       	or	r24, r25
    16d0:	8a 2b       	or	r24, r26
    16d2:	8b 2b       	or	r24, r27
    16d4:	71 f0       	breq	.+28     	; 0x16f2 <i2c_start+0x84>
    16d6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    16da:	98 7f       	andi	r25, 0xF8	; 248
    16dc:	98 31       	cpi	r25, 0x18	; 24
    16de:	59 f0       	breq	.+22     	; 0x16f6 <i2c_start+0x88>
    16e0:	81 e0       	ldi	r24, 0x01	; 1
    16e2:	90 34       	cpi	r25, 0x40	; 64
    16e4:	49 f4       	brne	.+18     	; 0x16f8 <i2c_start+0x8a>
    16e6:	80 e0       	ldi	r24, 0x00	; 0
    16e8:	08 95       	ret
    16ea:	81 e0       	ldi	r24, 0x01	; 1
    16ec:	08 95       	ret
    16ee:	81 e0       	ldi	r24, 0x01	; 1
    16f0:	08 95       	ret
    16f2:	81 e0       	ldi	r24, 0x01	; 1
    16f4:	08 95       	ret
    16f6:	80 e0       	ldi	r24, 0x00	; 0
    16f8:	08 95       	ret

000016fa <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    16fa:	84 e9       	ldi	r24, 0x94	; 148
    16fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    1700:	80 e0       	ldi	r24, 0x00	; 0
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	ec eb       	ldi	r30, 0xBC	; 188
    1706:	f0 e0       	ldi	r31, 0x00	; 0
    1708:	20 81       	ld	r18, Z
    170a:	24 ff       	sbrs	r18, 4
    170c:	05 c0       	rjmp	.+10     	; 0x1718 <i2c_stop+0x1e>
    170e:	01 96       	adiw	r24, 0x01	; 1
    1710:	81 15       	cp	r24, r1
    1712:	21 e0       	ldi	r18, 0x01	; 1
    1714:	92 07       	cpc	r25, r18
    1716:	c1 f7       	brne	.-16     	; 0x1708 <i2c_stop+0xe>
    1718:	08 95       	ret

0000171a <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    171a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    171e:	84 e8       	ldi	r24, 0x84	; 132
    1720:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    1724:	8f ef       	ldi	r24, 0xFF	; 255
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	a0 e0       	ldi	r26, 0x00	; 0
    172a:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    172c:	ec eb       	ldi	r30, 0xBC	; 188
    172e:	f0 e0       	ldi	r31, 0x00	; 0
    1730:	20 81       	ld	r18, Z
    1732:	22 23       	and	r18, r18
    1734:	2c f0       	brlt	.+10     	; 0x1740 <i2c_write+0x26>
    1736:	01 97       	sbiw	r24, 0x01	; 1
    1738:	a1 09       	sbc	r26, r1
    173a:	b1 09       	sbc	r27, r1
    173c:	c8 f7       	brcc	.-14     	; 0x1730 <i2c_write+0x16>
    173e:	04 c0       	rjmp	.+8      	; 0x1748 <i2c_write+0x2e>
	if(i2c_timer == 0)
    1740:	89 2b       	or	r24, r25
    1742:	8a 2b       	or	r24, r26
    1744:	8b 2b       	or	r24, r27
    1746:	41 f0       	breq	.+16     	; 0x1758 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    1748:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    174c:	98 7f       	andi	r25, 0xF8	; 248
    174e:	81 e0       	ldi	r24, 0x01	; 1
    1750:	98 32       	cpi	r25, 0x28	; 40
    1752:	19 f4       	brne	.+6      	; 0x175a <i2c_write+0x40>
    1754:	80 e0       	ldi	r24, 0x00	; 0
    1756:	08 95       	ret
    1758:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    175a:	08 95       	ret

0000175c <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    175c:	84 ec       	ldi	r24, 0xC4	; 196
    175e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    1762:	8f ef       	ldi	r24, 0xFF	; 255
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	a0 e0       	ldi	r26, 0x00	; 0
    1768:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    176a:	ec eb       	ldi	r30, 0xBC	; 188
    176c:	f0 e0       	ldi	r31, 0x00	; 0
    176e:	20 81       	ld	r18, Z
    1770:	22 23       	and	r18, r18
    1772:	2c f0       	brlt	.+10     	; 0x177e <i2c_readAck+0x22>
    1774:	01 97       	sbiw	r24, 0x01	; 1
    1776:	a1 09       	sbc	r26, r1
    1778:	b1 09       	sbc	r27, r1
    177a:	c8 f7       	brcc	.-14     	; 0x176e <i2c_readAck+0x12>
    177c:	04 c0       	rjmp	.+8      	; 0x1786 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    177e:	89 2b       	or	r24, r25
    1780:	8a 2b       	or	r24, r26
    1782:	8b 2b       	or	r24, r27
    1784:	19 f0       	breq	.+6      	; 0x178c <i2c_readAck+0x30>
		return 0;

    return TWDR;
    1786:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    178a:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    178c:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    178e:	08 95       	ret

00001790 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    1790:	84 e8       	ldi	r24, 0x84	; 132
    1792:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	i2c_timer = I2C_TIMER_DELAY;
    1796:	8f ef       	ldi	r24, 0xFF	; 255
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	a0 e0       	ldi	r26, 0x00	; 0
    179c:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    179e:	ec eb       	ldi	r30, 0xBC	; 188
    17a0:	f0 e0       	ldi	r31, 0x00	; 0
    17a2:	20 81       	ld	r18, Z
    17a4:	22 23       	and	r18, r18
    17a6:	2c f0       	brlt	.+10     	; 0x17b2 <i2c_readNak+0x22>
    17a8:	01 97       	sbiw	r24, 0x01	; 1
    17aa:	a1 09       	sbc	r26, r1
    17ac:	b1 09       	sbc	r27, r1
    17ae:	c8 f7       	brcc	.-14     	; 0x17a2 <i2c_readNak+0x12>
    17b0:	04 c0       	rjmp	.+8      	; 0x17ba <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    17b2:	89 2b       	or	r24, r25
    17b4:	8a 2b       	or	r24, r26
    17b6:	8b 2b       	or	r24, r27
    17b8:	19 f0       	breq	.+6      	; 0x17c0 <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    17ba:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    17be:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    17c0:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    17c2:	08 95       	ret

000017c4 <USART_Init>:
void printSI(char c[20],int16_t intToPrint)
{
	printf(c);
	print16(&intToPrint);
	printf("  ");
}
    17c4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    17c8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    17cc:	88 e9       	ldi	r24, 0x98	; 152
    17ce:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    17d2:	8e e0       	ldi	r24, 0x0E	; 14
    17d4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    17d8:	08 95       	ret

000017da <uart_putchar>:
    17da:	cf 93       	push	r28
    17dc:	c8 2f       	mov	r28, r24
    17de:	8a 30       	cpi	r24, 0x0A	; 10
    17e0:	11 f4       	brne	.+4      	; 0x17e6 <uart_putchar+0xc>
    17e2:	8d e0       	ldi	r24, 0x0D	; 13
    17e4:	fa df       	rcall	.-12     	; 0x17da <uart_putchar>
    17e6:	e0 ec       	ldi	r30, 0xC0	; 192
    17e8:	f0 e0       	ldi	r31, 0x00	; 0
    17ea:	80 81       	ld	r24, Z
    17ec:	85 ff       	sbrs	r24, 5
    17ee:	fd cf       	rjmp	.-6      	; 0x17ea <uart_putchar+0x10>
    17f0:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    17f4:	80 e0       	ldi	r24, 0x00	; 0
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	cf 91       	pop	r28
    17fa:	08 95       	ret

000017fc <printDouble>:
void printDouble(double *value)
{
    17fc:	0f 93       	push	r16
    17fe:	1f 93       	push	r17
    1800:	cf 93       	push	r28
    1802:	df 93       	push	r29
    1804:	cd b7       	in	r28, 0x3d	; 61
    1806:	de b7       	in	r29, 0x3e	; 62
    1808:	64 97       	sbiw	r28, 0x14	; 20
    180a:	0f b6       	in	r0, 0x3f	; 63
    180c:	f8 94       	cli
    180e:	de bf       	out	0x3e, r29	; 62
    1810:	0f be       	out	0x3f, r0	; 63
    1812:	cd bf       	out	0x3d, r28	; 61
    1814:	fc 01       	movw	r30, r24
	char c[20]={0};
    1816:	8e 01       	movw	r16, r28
    1818:	0f 5f       	subi	r16, 0xFF	; 255
    181a:	1f 4f       	sbci	r17, 0xFF	; 255
    181c:	84 e1       	ldi	r24, 0x14	; 20
    181e:	d8 01       	movw	r26, r16
    1820:	1d 92       	st	X+, r1
    1822:	8a 95       	dec	r24
    1824:	e9 f7       	brne	.-6      	; 0x1820 <printDouble+0x24>
	sprintf(c, "%f", *value);
    1826:	83 81       	ldd	r24, Z+3	; 0x03
    1828:	8f 93       	push	r24
    182a:	82 81       	ldd	r24, Z+2	; 0x02
    182c:	8f 93       	push	r24
    182e:	81 81       	ldd	r24, Z+1	; 0x01
    1830:	8f 93       	push	r24
    1832:	80 81       	ld	r24, Z
    1834:	8f 93       	push	r24
    1836:	8f e9       	ldi	r24, 0x9F	; 159
    1838:	93 e0       	ldi	r25, 0x03	; 3
    183a:	9f 93       	push	r25
    183c:	8f 93       	push	r24
    183e:	1f 93       	push	r17
    1840:	0f 93       	push	r16
    1842:	0e 94 98 14 	call	0x2930	; 0x2930 <sprintf>
	printf(c);
    1846:	1f 93       	push	r17
    1848:	0f 93       	push	r16
    184a:	0e 94 80 14 	call	0x2900	; 0x2900 <printf>
}
    184e:	0f b6       	in	r0, 0x3f	; 63
    1850:	f8 94       	cli
    1852:	de bf       	out	0x3e, r29	; 62
    1854:	0f be       	out	0x3f, r0	; 63
    1856:	cd bf       	out	0x3d, r28	; 61
    1858:	64 96       	adiw	r28, 0x14	; 20
    185a:	0f b6       	in	r0, 0x3f	; 63
    185c:	f8 94       	cli
    185e:	de bf       	out	0x3e, r29	; 62
    1860:	0f be       	out	0x3f, r0	; 63
    1862:	cd bf       	out	0x3d, r28	; 61
    1864:	df 91       	pop	r29
    1866:	cf 91       	pop	r28
    1868:	1f 91       	pop	r17
    186a:	0f 91       	pop	r16
    186c:	08 95       	ret

0000186e <printSD>:
void printSD(char c[20],double doubleToPrint)
{
    186e:	cf 93       	push	r28
    1870:	df 93       	push	r29
    1872:	00 d0       	rcall	.+0      	; 0x1874 <printSD+0x6>
    1874:	1f 92       	push	r1
    1876:	cd b7       	in	r28, 0x3d	; 61
    1878:	de b7       	in	r29, 0x3e	; 62
    187a:	49 83       	std	Y+1, r20	; 0x01
    187c:	5a 83       	std	Y+2, r21	; 0x02
    187e:	6b 83       	std	Y+3, r22	; 0x03
    1880:	7c 83       	std	Y+4, r23	; 0x04
	printf(c);
    1882:	9f 93       	push	r25
    1884:	8f 93       	push	r24
    1886:	0e 94 80 14 	call	0x2900	; 0x2900 <printf>
	printDouble(&doubleToPrint);
    188a:	ce 01       	movw	r24, r28
    188c:	01 96       	adiw	r24, 0x01	; 1
    188e:	b6 df       	rcall	.-148    	; 0x17fc <printDouble>
	printf("  ");
    1890:	8c e9       	ldi	r24, 0x9C	; 156
    1892:	93 e0       	ldi	r25, 0x03	; 3
    1894:	9f 93       	push	r25
    1896:	8f 93       	push	r24
    1898:	0e 94 80 14 	call	0x2900	; 0x2900 <printf>
}
    189c:	0f 90       	pop	r0
    189e:	0f 90       	pop	r0
    18a0:	0f 90       	pop	r0
    18a2:	0f 90       	pop	r0
    18a4:	0f 90       	pop	r0
    18a6:	0f 90       	pop	r0
    18a8:	0f 90       	pop	r0
    18aa:	0f 90       	pop	r0
    18ac:	df 91       	pop	r29
    18ae:	cf 91       	pop	r28
    18b0:	08 95       	ret

000018b2 <__subsf3>:
    18b2:	50 58       	subi	r21, 0x80	; 128

000018b4 <__addsf3>:
    18b4:	bb 27       	eor	r27, r27
    18b6:	aa 27       	eor	r26, r26
    18b8:	0e d0       	rcall	.+28     	; 0x18d6 <__addsf3x>
    18ba:	fc c1       	rjmp	.+1016   	; 0x1cb4 <__fp_round>
    18bc:	ed d1       	rcall	.+986    	; 0x1c98 <__fp_pscA>
    18be:	30 f0       	brcs	.+12     	; 0x18cc <__addsf3+0x18>
    18c0:	f2 d1       	rcall	.+996    	; 0x1ca6 <__fp_pscB>
    18c2:	20 f0       	brcs	.+8      	; 0x18cc <__addsf3+0x18>
    18c4:	31 f4       	brne	.+12     	; 0x18d2 <__addsf3+0x1e>
    18c6:	9f 3f       	cpi	r25, 0xFF	; 255
    18c8:	11 f4       	brne	.+4      	; 0x18ce <__addsf3+0x1a>
    18ca:	1e f4       	brtc	.+6      	; 0x18d2 <__addsf3+0x1e>
    18cc:	bd c1       	rjmp	.+890    	; 0x1c48 <__fp_nan>
    18ce:	0e f4       	brtc	.+2      	; 0x18d2 <__addsf3+0x1e>
    18d0:	e0 95       	com	r30
    18d2:	e7 fb       	bst	r30, 7
    18d4:	b3 c1       	rjmp	.+870    	; 0x1c3c <__fp_inf>

000018d6 <__addsf3x>:
    18d6:	e9 2f       	mov	r30, r25
    18d8:	fe d1       	rcall	.+1020   	; 0x1cd6 <__fp_split3>
    18da:	80 f3       	brcs	.-32     	; 0x18bc <__addsf3+0x8>
    18dc:	ba 17       	cp	r27, r26
    18de:	62 07       	cpc	r22, r18
    18e0:	73 07       	cpc	r23, r19
    18e2:	84 07       	cpc	r24, r20
    18e4:	95 07       	cpc	r25, r21
    18e6:	18 f0       	brcs	.+6      	; 0x18ee <__addsf3x+0x18>
    18e8:	71 f4       	brne	.+28     	; 0x1906 <__addsf3x+0x30>
    18ea:	9e f5       	brtc	.+102    	; 0x1952 <__addsf3x+0x7c>
    18ec:	16 c2       	rjmp	.+1068   	; 0x1d1a <__fp_zero>
    18ee:	0e f4       	brtc	.+2      	; 0x18f2 <__addsf3x+0x1c>
    18f0:	e0 95       	com	r30
    18f2:	0b 2e       	mov	r0, r27
    18f4:	ba 2f       	mov	r27, r26
    18f6:	a0 2d       	mov	r26, r0
    18f8:	0b 01       	movw	r0, r22
    18fa:	b9 01       	movw	r22, r18
    18fc:	90 01       	movw	r18, r0
    18fe:	0c 01       	movw	r0, r24
    1900:	ca 01       	movw	r24, r20
    1902:	a0 01       	movw	r20, r0
    1904:	11 24       	eor	r1, r1
    1906:	ff 27       	eor	r31, r31
    1908:	59 1b       	sub	r21, r25
    190a:	99 f0       	breq	.+38     	; 0x1932 <__addsf3x+0x5c>
    190c:	59 3f       	cpi	r21, 0xF9	; 249
    190e:	50 f4       	brcc	.+20     	; 0x1924 <__addsf3x+0x4e>
    1910:	50 3e       	cpi	r21, 0xE0	; 224
    1912:	68 f1       	brcs	.+90     	; 0x196e <__addsf3x+0x98>
    1914:	1a 16       	cp	r1, r26
    1916:	f0 40       	sbci	r31, 0x00	; 0
    1918:	a2 2f       	mov	r26, r18
    191a:	23 2f       	mov	r18, r19
    191c:	34 2f       	mov	r19, r20
    191e:	44 27       	eor	r20, r20
    1920:	58 5f       	subi	r21, 0xF8	; 248
    1922:	f3 cf       	rjmp	.-26     	; 0x190a <__addsf3x+0x34>
    1924:	46 95       	lsr	r20
    1926:	37 95       	ror	r19
    1928:	27 95       	ror	r18
    192a:	a7 95       	ror	r26
    192c:	f0 40       	sbci	r31, 0x00	; 0
    192e:	53 95       	inc	r21
    1930:	c9 f7       	brne	.-14     	; 0x1924 <__addsf3x+0x4e>
    1932:	7e f4       	brtc	.+30     	; 0x1952 <__addsf3x+0x7c>
    1934:	1f 16       	cp	r1, r31
    1936:	ba 0b       	sbc	r27, r26
    1938:	62 0b       	sbc	r22, r18
    193a:	73 0b       	sbc	r23, r19
    193c:	84 0b       	sbc	r24, r20
    193e:	ba f0       	brmi	.+46     	; 0x196e <__addsf3x+0x98>
    1940:	91 50       	subi	r25, 0x01	; 1
    1942:	a1 f0       	breq	.+40     	; 0x196c <__addsf3x+0x96>
    1944:	ff 0f       	add	r31, r31
    1946:	bb 1f       	adc	r27, r27
    1948:	66 1f       	adc	r22, r22
    194a:	77 1f       	adc	r23, r23
    194c:	88 1f       	adc	r24, r24
    194e:	c2 f7       	brpl	.-16     	; 0x1940 <__addsf3x+0x6a>
    1950:	0e c0       	rjmp	.+28     	; 0x196e <__addsf3x+0x98>
    1952:	ba 0f       	add	r27, r26
    1954:	62 1f       	adc	r22, r18
    1956:	73 1f       	adc	r23, r19
    1958:	84 1f       	adc	r24, r20
    195a:	48 f4       	brcc	.+18     	; 0x196e <__addsf3x+0x98>
    195c:	87 95       	ror	r24
    195e:	77 95       	ror	r23
    1960:	67 95       	ror	r22
    1962:	b7 95       	ror	r27
    1964:	f7 95       	ror	r31
    1966:	9e 3f       	cpi	r25, 0xFE	; 254
    1968:	08 f0       	brcs	.+2      	; 0x196c <__addsf3x+0x96>
    196a:	b3 cf       	rjmp	.-154    	; 0x18d2 <__addsf3+0x1e>
    196c:	93 95       	inc	r25
    196e:	88 0f       	add	r24, r24
    1970:	08 f0       	brcs	.+2      	; 0x1974 <__addsf3x+0x9e>
    1972:	99 27       	eor	r25, r25
    1974:	ee 0f       	add	r30, r30
    1976:	97 95       	ror	r25
    1978:	87 95       	ror	r24
    197a:	08 95       	ret
    197c:	8d d1       	rcall	.+794    	; 0x1c98 <__fp_pscA>
    197e:	58 f0       	brcs	.+22     	; 0x1996 <__addsf3x+0xc0>
    1980:	80 e8       	ldi	r24, 0x80	; 128
    1982:	91 e0       	ldi	r25, 0x01	; 1
    1984:	09 f4       	brne	.+2      	; 0x1988 <__addsf3x+0xb2>
    1986:	9e ef       	ldi	r25, 0xFE	; 254
    1988:	8e d1       	rcall	.+796    	; 0x1ca6 <__fp_pscB>
    198a:	28 f0       	brcs	.+10     	; 0x1996 <__addsf3x+0xc0>
    198c:	40 e8       	ldi	r20, 0x80	; 128
    198e:	51 e0       	ldi	r21, 0x01	; 1
    1990:	59 f4       	brne	.+22     	; 0x19a8 <atan2+0xe>
    1992:	5e ef       	ldi	r21, 0xFE	; 254
    1994:	09 c0       	rjmp	.+18     	; 0x19a8 <atan2+0xe>
    1996:	58 c1       	rjmp	.+688    	; 0x1c48 <__fp_nan>
    1998:	c0 c1       	rjmp	.+896    	; 0x1d1a <__fp_zero>

0000199a <atan2>:
    199a:	e9 2f       	mov	r30, r25
    199c:	e0 78       	andi	r30, 0x80	; 128
    199e:	9b d1       	rcall	.+822    	; 0x1cd6 <__fp_split3>
    19a0:	68 f3       	brcs	.-38     	; 0x197c <__addsf3x+0xa6>
    19a2:	09 2e       	mov	r0, r25
    19a4:	05 2a       	or	r0, r21
    19a6:	c1 f3       	breq	.-16     	; 0x1998 <__addsf3x+0xc2>
    19a8:	26 17       	cp	r18, r22
    19aa:	37 07       	cpc	r19, r23
    19ac:	48 07       	cpc	r20, r24
    19ae:	59 07       	cpc	r21, r25
    19b0:	38 f0       	brcs	.+14     	; 0x19c0 <atan2+0x26>
    19b2:	0e 2e       	mov	r0, r30
    19b4:	07 f8       	bld	r0, 7
    19b6:	e0 25       	eor	r30, r0
    19b8:	69 f0       	breq	.+26     	; 0x19d4 <atan2+0x3a>
    19ba:	e0 25       	eor	r30, r0
    19bc:	e0 64       	ori	r30, 0x40	; 64
    19be:	0a c0       	rjmp	.+20     	; 0x19d4 <atan2+0x3a>
    19c0:	ef 63       	ori	r30, 0x3F	; 63
    19c2:	07 f8       	bld	r0, 7
    19c4:	00 94       	com	r0
    19c6:	07 fa       	bst	r0, 7
    19c8:	db 01       	movw	r26, r22
    19ca:	b9 01       	movw	r22, r18
    19cc:	9d 01       	movw	r18, r26
    19ce:	dc 01       	movw	r26, r24
    19d0:	ca 01       	movw	r24, r20
    19d2:	ad 01       	movw	r20, r26
    19d4:	ef 93       	push	r30
    19d6:	47 d0       	rcall	.+142    	; 0x1a66 <__divsf3_pse>
    19d8:	6d d1       	rcall	.+730    	; 0x1cb4 <__fp_round>
    19da:	0a d0       	rcall	.+20     	; 0x19f0 <atan>
    19dc:	5f 91       	pop	r21
    19de:	55 23       	and	r21, r21
    19e0:	31 f0       	breq	.+12     	; 0x19ee <atan2+0x54>
    19e2:	2b ed       	ldi	r18, 0xDB	; 219
    19e4:	3f e0       	ldi	r19, 0x0F	; 15
    19e6:	49 e4       	ldi	r20, 0x49	; 73
    19e8:	50 fd       	sbrc	r21, 0
    19ea:	49 ec       	ldi	r20, 0xC9	; 201
    19ec:	63 cf       	rjmp	.-314    	; 0x18b4 <__addsf3>
    19ee:	08 95       	ret

000019f0 <atan>:
    19f0:	df 93       	push	r29
    19f2:	dd 27       	eor	r29, r29
    19f4:	b9 2f       	mov	r27, r25
    19f6:	bf 77       	andi	r27, 0x7F	; 127
    19f8:	40 e8       	ldi	r20, 0x80	; 128
    19fa:	5f e3       	ldi	r21, 0x3F	; 63
    19fc:	16 16       	cp	r1, r22
    19fe:	17 06       	cpc	r1, r23
    1a00:	48 07       	cpc	r20, r24
    1a02:	5b 07       	cpc	r21, r27
    1a04:	10 f4       	brcc	.+4      	; 0x1a0a <atan+0x1a>
    1a06:	d9 2f       	mov	r29, r25
    1a08:	93 d1       	rcall	.+806    	; 0x1d30 <inverse>
    1a0a:	9f 93       	push	r25
    1a0c:	8f 93       	push	r24
    1a0e:	7f 93       	push	r23
    1a10:	6f 93       	push	r22
    1a12:	3a d2       	rcall	.+1140   	; 0x1e88 <square>
    1a14:	e4 ee       	ldi	r30, 0xE4	; 228
    1a16:	f0 e0       	ldi	r31, 0x00	; 0
    1a18:	1a d1       	rcall	.+564    	; 0x1c4e <__fp_powser>
    1a1a:	4c d1       	rcall	.+664    	; 0x1cb4 <__fp_round>
    1a1c:	2f 91       	pop	r18
    1a1e:	3f 91       	pop	r19
    1a20:	4f 91       	pop	r20
    1a22:	5f 91       	pop	r21
    1a24:	98 d1       	rcall	.+816    	; 0x1d56 <__mulsf3x>
    1a26:	dd 23       	and	r29, r29
    1a28:	49 f0       	breq	.+18     	; 0x1a3c <atan+0x4c>
    1a2a:	90 58       	subi	r25, 0x80	; 128
    1a2c:	a2 ea       	ldi	r26, 0xA2	; 162
    1a2e:	2a ed       	ldi	r18, 0xDA	; 218
    1a30:	3f e0       	ldi	r19, 0x0F	; 15
    1a32:	49 ec       	ldi	r20, 0xC9	; 201
    1a34:	5f e3       	ldi	r21, 0x3F	; 63
    1a36:	d0 78       	andi	r29, 0x80	; 128
    1a38:	5d 27       	eor	r21, r29
    1a3a:	4d df       	rcall	.-358    	; 0x18d6 <__addsf3x>
    1a3c:	df 91       	pop	r29
    1a3e:	3a c1       	rjmp	.+628    	; 0x1cb4 <__fp_round>

00001a40 <__cmpsf2>:
    1a40:	d9 d0       	rcall	.+434    	; 0x1bf4 <__fp_cmp>
    1a42:	08 f4       	brcc	.+2      	; 0x1a46 <__cmpsf2+0x6>
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	08 95       	ret

00001a48 <__divsf3>:
    1a48:	0c d0       	rcall	.+24     	; 0x1a62 <__divsf3x>
    1a4a:	34 c1       	rjmp	.+616    	; 0x1cb4 <__fp_round>
    1a4c:	2c d1       	rcall	.+600    	; 0x1ca6 <__fp_pscB>
    1a4e:	40 f0       	brcs	.+16     	; 0x1a60 <__divsf3+0x18>
    1a50:	23 d1       	rcall	.+582    	; 0x1c98 <__fp_pscA>
    1a52:	30 f0       	brcs	.+12     	; 0x1a60 <__divsf3+0x18>
    1a54:	21 f4       	brne	.+8      	; 0x1a5e <__divsf3+0x16>
    1a56:	5f 3f       	cpi	r21, 0xFF	; 255
    1a58:	19 f0       	breq	.+6      	; 0x1a60 <__divsf3+0x18>
    1a5a:	f0 c0       	rjmp	.+480    	; 0x1c3c <__fp_inf>
    1a5c:	51 11       	cpse	r21, r1
    1a5e:	5e c1       	rjmp	.+700    	; 0x1d1c <__fp_szero>
    1a60:	f3 c0       	rjmp	.+486    	; 0x1c48 <__fp_nan>

00001a62 <__divsf3x>:
    1a62:	39 d1       	rcall	.+626    	; 0x1cd6 <__fp_split3>
    1a64:	98 f3       	brcs	.-26     	; 0x1a4c <__divsf3+0x4>

00001a66 <__divsf3_pse>:
    1a66:	99 23       	and	r25, r25
    1a68:	c9 f3       	breq	.-14     	; 0x1a5c <__divsf3+0x14>
    1a6a:	55 23       	and	r21, r21
    1a6c:	b1 f3       	breq	.-20     	; 0x1a5a <__divsf3+0x12>
    1a6e:	95 1b       	sub	r25, r21
    1a70:	55 0b       	sbc	r21, r21
    1a72:	bb 27       	eor	r27, r27
    1a74:	aa 27       	eor	r26, r26
    1a76:	62 17       	cp	r22, r18
    1a78:	73 07       	cpc	r23, r19
    1a7a:	84 07       	cpc	r24, r20
    1a7c:	38 f0       	brcs	.+14     	; 0x1a8c <__divsf3_pse+0x26>
    1a7e:	9f 5f       	subi	r25, 0xFF	; 255
    1a80:	5f 4f       	sbci	r21, 0xFF	; 255
    1a82:	22 0f       	add	r18, r18
    1a84:	33 1f       	adc	r19, r19
    1a86:	44 1f       	adc	r20, r20
    1a88:	aa 1f       	adc	r26, r26
    1a8a:	a9 f3       	breq	.-22     	; 0x1a76 <__divsf3_pse+0x10>
    1a8c:	33 d0       	rcall	.+102    	; 0x1af4 <__divsf3_pse+0x8e>
    1a8e:	0e 2e       	mov	r0, r30
    1a90:	3a f0       	brmi	.+14     	; 0x1aa0 <__divsf3_pse+0x3a>
    1a92:	e0 e8       	ldi	r30, 0x80	; 128
    1a94:	30 d0       	rcall	.+96     	; 0x1af6 <__divsf3_pse+0x90>
    1a96:	91 50       	subi	r25, 0x01	; 1
    1a98:	50 40       	sbci	r21, 0x00	; 0
    1a9a:	e6 95       	lsr	r30
    1a9c:	00 1c       	adc	r0, r0
    1a9e:	ca f7       	brpl	.-14     	; 0x1a92 <__divsf3_pse+0x2c>
    1aa0:	29 d0       	rcall	.+82     	; 0x1af4 <__divsf3_pse+0x8e>
    1aa2:	fe 2f       	mov	r31, r30
    1aa4:	27 d0       	rcall	.+78     	; 0x1af4 <__divsf3_pse+0x8e>
    1aa6:	66 0f       	add	r22, r22
    1aa8:	77 1f       	adc	r23, r23
    1aaa:	88 1f       	adc	r24, r24
    1aac:	bb 1f       	adc	r27, r27
    1aae:	26 17       	cp	r18, r22
    1ab0:	37 07       	cpc	r19, r23
    1ab2:	48 07       	cpc	r20, r24
    1ab4:	ab 07       	cpc	r26, r27
    1ab6:	b0 e8       	ldi	r27, 0x80	; 128
    1ab8:	09 f0       	breq	.+2      	; 0x1abc <__divsf3_pse+0x56>
    1aba:	bb 0b       	sbc	r27, r27
    1abc:	80 2d       	mov	r24, r0
    1abe:	bf 01       	movw	r22, r30
    1ac0:	ff 27       	eor	r31, r31
    1ac2:	93 58       	subi	r25, 0x83	; 131
    1ac4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ac6:	2a f0       	brmi	.+10     	; 0x1ad2 <__divsf3_pse+0x6c>
    1ac8:	9e 3f       	cpi	r25, 0xFE	; 254
    1aca:	51 05       	cpc	r21, r1
    1acc:	68 f0       	brcs	.+26     	; 0x1ae8 <__divsf3_pse+0x82>
    1ace:	b6 c0       	rjmp	.+364    	; 0x1c3c <__fp_inf>
    1ad0:	25 c1       	rjmp	.+586    	; 0x1d1c <__fp_szero>
    1ad2:	5f 3f       	cpi	r21, 0xFF	; 255
    1ad4:	ec f3       	brlt	.-6      	; 0x1ad0 <__divsf3_pse+0x6a>
    1ad6:	98 3e       	cpi	r25, 0xE8	; 232
    1ad8:	dc f3       	brlt	.-10     	; 0x1ad0 <__divsf3_pse+0x6a>
    1ada:	86 95       	lsr	r24
    1adc:	77 95       	ror	r23
    1ade:	67 95       	ror	r22
    1ae0:	b7 95       	ror	r27
    1ae2:	f7 95       	ror	r31
    1ae4:	9f 5f       	subi	r25, 0xFF	; 255
    1ae6:	c9 f7       	brne	.-14     	; 0x1ada <__divsf3_pse+0x74>
    1ae8:	88 0f       	add	r24, r24
    1aea:	91 1d       	adc	r25, r1
    1aec:	96 95       	lsr	r25
    1aee:	87 95       	ror	r24
    1af0:	97 f9       	bld	r25, 7
    1af2:	08 95       	ret
    1af4:	e1 e0       	ldi	r30, 0x01	; 1
    1af6:	66 0f       	add	r22, r22
    1af8:	77 1f       	adc	r23, r23
    1afa:	88 1f       	adc	r24, r24
    1afc:	bb 1f       	adc	r27, r27
    1afe:	62 17       	cp	r22, r18
    1b00:	73 07       	cpc	r23, r19
    1b02:	84 07       	cpc	r24, r20
    1b04:	ba 07       	cpc	r27, r26
    1b06:	20 f0       	brcs	.+8      	; 0x1b10 <__divsf3_pse+0xaa>
    1b08:	62 1b       	sub	r22, r18
    1b0a:	73 0b       	sbc	r23, r19
    1b0c:	84 0b       	sbc	r24, r20
    1b0e:	ba 0b       	sbc	r27, r26
    1b10:	ee 1f       	adc	r30, r30
    1b12:	88 f7       	brcc	.-30     	; 0x1af6 <__divsf3_pse+0x90>
    1b14:	e0 95       	com	r30
    1b16:	08 95       	ret

00001b18 <__fixsfsi>:
    1b18:	04 d0       	rcall	.+8      	; 0x1b22 <__fixunssfsi>
    1b1a:	68 94       	set
    1b1c:	b1 11       	cpse	r27, r1
    1b1e:	fe c0       	rjmp	.+508    	; 0x1d1c <__fp_szero>
    1b20:	08 95       	ret

00001b22 <__fixunssfsi>:
    1b22:	e1 d0       	rcall	.+450    	; 0x1ce6 <__fp_splitA>
    1b24:	88 f0       	brcs	.+34     	; 0x1b48 <__fixunssfsi+0x26>
    1b26:	9f 57       	subi	r25, 0x7F	; 127
    1b28:	90 f0       	brcs	.+36     	; 0x1b4e <__fixunssfsi+0x2c>
    1b2a:	b9 2f       	mov	r27, r25
    1b2c:	99 27       	eor	r25, r25
    1b2e:	b7 51       	subi	r27, 0x17	; 23
    1b30:	a0 f0       	brcs	.+40     	; 0x1b5a <__fixunssfsi+0x38>
    1b32:	d1 f0       	breq	.+52     	; 0x1b68 <__fixunssfsi+0x46>
    1b34:	66 0f       	add	r22, r22
    1b36:	77 1f       	adc	r23, r23
    1b38:	88 1f       	adc	r24, r24
    1b3a:	99 1f       	adc	r25, r25
    1b3c:	1a f0       	brmi	.+6      	; 0x1b44 <__fixunssfsi+0x22>
    1b3e:	ba 95       	dec	r27
    1b40:	c9 f7       	brne	.-14     	; 0x1b34 <__fixunssfsi+0x12>
    1b42:	12 c0       	rjmp	.+36     	; 0x1b68 <__fixunssfsi+0x46>
    1b44:	b1 30       	cpi	r27, 0x01	; 1
    1b46:	81 f0       	breq	.+32     	; 0x1b68 <__fixunssfsi+0x46>
    1b48:	e8 d0       	rcall	.+464    	; 0x1d1a <__fp_zero>
    1b4a:	b1 e0       	ldi	r27, 0x01	; 1
    1b4c:	08 95       	ret
    1b4e:	e5 c0       	rjmp	.+458    	; 0x1d1a <__fp_zero>
    1b50:	67 2f       	mov	r22, r23
    1b52:	78 2f       	mov	r23, r24
    1b54:	88 27       	eor	r24, r24
    1b56:	b8 5f       	subi	r27, 0xF8	; 248
    1b58:	39 f0       	breq	.+14     	; 0x1b68 <__fixunssfsi+0x46>
    1b5a:	b9 3f       	cpi	r27, 0xF9	; 249
    1b5c:	cc f3       	brlt	.-14     	; 0x1b50 <__fixunssfsi+0x2e>
    1b5e:	86 95       	lsr	r24
    1b60:	77 95       	ror	r23
    1b62:	67 95       	ror	r22
    1b64:	b3 95       	inc	r27
    1b66:	d9 f7       	brne	.-10     	; 0x1b5e <__fixunssfsi+0x3c>
    1b68:	3e f4       	brtc	.+14     	; 0x1b78 <__fixunssfsi+0x56>
    1b6a:	90 95       	com	r25
    1b6c:	80 95       	com	r24
    1b6e:	70 95       	com	r23
    1b70:	61 95       	neg	r22
    1b72:	7f 4f       	sbci	r23, 0xFF	; 255
    1b74:	8f 4f       	sbci	r24, 0xFF	; 255
    1b76:	9f 4f       	sbci	r25, 0xFF	; 255
    1b78:	08 95       	ret

00001b7a <__floatunsisf>:
    1b7a:	e8 94       	clt
    1b7c:	09 c0       	rjmp	.+18     	; 0x1b90 <__floatsisf+0x12>

00001b7e <__floatsisf>:
    1b7e:	97 fb       	bst	r25, 7
    1b80:	3e f4       	brtc	.+14     	; 0x1b90 <__floatsisf+0x12>
    1b82:	90 95       	com	r25
    1b84:	80 95       	com	r24
    1b86:	70 95       	com	r23
    1b88:	61 95       	neg	r22
    1b8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b8c:	8f 4f       	sbci	r24, 0xFF	; 255
    1b8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b90:	99 23       	and	r25, r25
    1b92:	a9 f0       	breq	.+42     	; 0x1bbe <__floatsisf+0x40>
    1b94:	f9 2f       	mov	r31, r25
    1b96:	96 e9       	ldi	r25, 0x96	; 150
    1b98:	bb 27       	eor	r27, r27
    1b9a:	93 95       	inc	r25
    1b9c:	f6 95       	lsr	r31
    1b9e:	87 95       	ror	r24
    1ba0:	77 95       	ror	r23
    1ba2:	67 95       	ror	r22
    1ba4:	b7 95       	ror	r27
    1ba6:	f1 11       	cpse	r31, r1
    1ba8:	f8 cf       	rjmp	.-16     	; 0x1b9a <__floatsisf+0x1c>
    1baa:	fa f4       	brpl	.+62     	; 0x1bea <__floatsisf+0x6c>
    1bac:	bb 0f       	add	r27, r27
    1bae:	11 f4       	brne	.+4      	; 0x1bb4 <__floatsisf+0x36>
    1bb0:	60 ff       	sbrs	r22, 0
    1bb2:	1b c0       	rjmp	.+54     	; 0x1bea <__floatsisf+0x6c>
    1bb4:	6f 5f       	subi	r22, 0xFF	; 255
    1bb6:	7f 4f       	sbci	r23, 0xFF	; 255
    1bb8:	8f 4f       	sbci	r24, 0xFF	; 255
    1bba:	9f 4f       	sbci	r25, 0xFF	; 255
    1bbc:	16 c0       	rjmp	.+44     	; 0x1bea <__floatsisf+0x6c>
    1bbe:	88 23       	and	r24, r24
    1bc0:	11 f0       	breq	.+4      	; 0x1bc6 <__floatsisf+0x48>
    1bc2:	96 e9       	ldi	r25, 0x96	; 150
    1bc4:	11 c0       	rjmp	.+34     	; 0x1be8 <__floatsisf+0x6a>
    1bc6:	77 23       	and	r23, r23
    1bc8:	21 f0       	breq	.+8      	; 0x1bd2 <__floatsisf+0x54>
    1bca:	9e e8       	ldi	r25, 0x8E	; 142
    1bcc:	87 2f       	mov	r24, r23
    1bce:	76 2f       	mov	r23, r22
    1bd0:	05 c0       	rjmp	.+10     	; 0x1bdc <__floatsisf+0x5e>
    1bd2:	66 23       	and	r22, r22
    1bd4:	71 f0       	breq	.+28     	; 0x1bf2 <__floatsisf+0x74>
    1bd6:	96 e8       	ldi	r25, 0x86	; 134
    1bd8:	86 2f       	mov	r24, r22
    1bda:	70 e0       	ldi	r23, 0x00	; 0
    1bdc:	60 e0       	ldi	r22, 0x00	; 0
    1bde:	2a f0       	brmi	.+10     	; 0x1bea <__floatsisf+0x6c>
    1be0:	9a 95       	dec	r25
    1be2:	66 0f       	add	r22, r22
    1be4:	77 1f       	adc	r23, r23
    1be6:	88 1f       	adc	r24, r24
    1be8:	da f7       	brpl	.-10     	; 0x1be0 <__floatsisf+0x62>
    1bea:	88 0f       	add	r24, r24
    1bec:	96 95       	lsr	r25
    1bee:	87 95       	ror	r24
    1bf0:	97 f9       	bld	r25, 7
    1bf2:	08 95       	ret

00001bf4 <__fp_cmp>:
    1bf4:	99 0f       	add	r25, r25
    1bf6:	00 08       	sbc	r0, r0
    1bf8:	55 0f       	add	r21, r21
    1bfa:	aa 0b       	sbc	r26, r26
    1bfc:	e0 e8       	ldi	r30, 0x80	; 128
    1bfe:	fe ef       	ldi	r31, 0xFE	; 254
    1c00:	16 16       	cp	r1, r22
    1c02:	17 06       	cpc	r1, r23
    1c04:	e8 07       	cpc	r30, r24
    1c06:	f9 07       	cpc	r31, r25
    1c08:	c0 f0       	brcs	.+48     	; 0x1c3a <__fp_cmp+0x46>
    1c0a:	12 16       	cp	r1, r18
    1c0c:	13 06       	cpc	r1, r19
    1c0e:	e4 07       	cpc	r30, r20
    1c10:	f5 07       	cpc	r31, r21
    1c12:	98 f0       	brcs	.+38     	; 0x1c3a <__fp_cmp+0x46>
    1c14:	62 1b       	sub	r22, r18
    1c16:	73 0b       	sbc	r23, r19
    1c18:	84 0b       	sbc	r24, r20
    1c1a:	95 0b       	sbc	r25, r21
    1c1c:	39 f4       	brne	.+14     	; 0x1c2c <__fp_cmp+0x38>
    1c1e:	0a 26       	eor	r0, r26
    1c20:	61 f0       	breq	.+24     	; 0x1c3a <__fp_cmp+0x46>
    1c22:	23 2b       	or	r18, r19
    1c24:	24 2b       	or	r18, r20
    1c26:	25 2b       	or	r18, r21
    1c28:	21 f4       	brne	.+8      	; 0x1c32 <__fp_cmp+0x3e>
    1c2a:	08 95       	ret
    1c2c:	0a 26       	eor	r0, r26
    1c2e:	09 f4       	brne	.+2      	; 0x1c32 <__fp_cmp+0x3e>
    1c30:	a1 40       	sbci	r26, 0x01	; 1
    1c32:	a6 95       	lsr	r26
    1c34:	8f ef       	ldi	r24, 0xFF	; 255
    1c36:	81 1d       	adc	r24, r1
    1c38:	81 1d       	adc	r24, r1
    1c3a:	08 95       	ret

00001c3c <__fp_inf>:
    1c3c:	97 f9       	bld	r25, 7
    1c3e:	9f 67       	ori	r25, 0x7F	; 127
    1c40:	80 e8       	ldi	r24, 0x80	; 128
    1c42:	70 e0       	ldi	r23, 0x00	; 0
    1c44:	60 e0       	ldi	r22, 0x00	; 0
    1c46:	08 95       	ret

00001c48 <__fp_nan>:
    1c48:	9f ef       	ldi	r25, 0xFF	; 255
    1c4a:	80 ec       	ldi	r24, 0xC0	; 192
    1c4c:	08 95       	ret

00001c4e <__fp_powser>:
    1c4e:	df 93       	push	r29
    1c50:	cf 93       	push	r28
    1c52:	1f 93       	push	r17
    1c54:	0f 93       	push	r16
    1c56:	ff 92       	push	r15
    1c58:	ef 92       	push	r14
    1c5a:	df 92       	push	r13
    1c5c:	7b 01       	movw	r14, r22
    1c5e:	8c 01       	movw	r16, r24
    1c60:	68 94       	set
    1c62:	05 c0       	rjmp	.+10     	; 0x1c6e <__fp_powser+0x20>
    1c64:	da 2e       	mov	r13, r26
    1c66:	ef 01       	movw	r28, r30
    1c68:	76 d0       	rcall	.+236    	; 0x1d56 <__mulsf3x>
    1c6a:	fe 01       	movw	r30, r28
    1c6c:	e8 94       	clt
    1c6e:	a5 91       	lpm	r26, Z+
    1c70:	25 91       	lpm	r18, Z+
    1c72:	35 91       	lpm	r19, Z+
    1c74:	45 91       	lpm	r20, Z+
    1c76:	55 91       	lpm	r21, Z+
    1c78:	ae f3       	brts	.-22     	; 0x1c64 <__fp_powser+0x16>
    1c7a:	ef 01       	movw	r28, r30
    1c7c:	2c de       	rcall	.-936    	; 0x18d6 <__addsf3x>
    1c7e:	fe 01       	movw	r30, r28
    1c80:	97 01       	movw	r18, r14
    1c82:	a8 01       	movw	r20, r16
    1c84:	da 94       	dec	r13
    1c86:	79 f7       	brne	.-34     	; 0x1c66 <__fp_powser+0x18>
    1c88:	df 90       	pop	r13
    1c8a:	ef 90       	pop	r14
    1c8c:	ff 90       	pop	r15
    1c8e:	0f 91       	pop	r16
    1c90:	1f 91       	pop	r17
    1c92:	cf 91       	pop	r28
    1c94:	df 91       	pop	r29
    1c96:	08 95       	ret

00001c98 <__fp_pscA>:
    1c98:	00 24       	eor	r0, r0
    1c9a:	0a 94       	dec	r0
    1c9c:	16 16       	cp	r1, r22
    1c9e:	17 06       	cpc	r1, r23
    1ca0:	18 06       	cpc	r1, r24
    1ca2:	09 06       	cpc	r0, r25
    1ca4:	08 95       	ret

00001ca6 <__fp_pscB>:
    1ca6:	00 24       	eor	r0, r0
    1ca8:	0a 94       	dec	r0
    1caa:	12 16       	cp	r1, r18
    1cac:	13 06       	cpc	r1, r19
    1cae:	14 06       	cpc	r1, r20
    1cb0:	05 06       	cpc	r0, r21
    1cb2:	08 95       	ret

00001cb4 <__fp_round>:
    1cb4:	09 2e       	mov	r0, r25
    1cb6:	03 94       	inc	r0
    1cb8:	00 0c       	add	r0, r0
    1cba:	11 f4       	brne	.+4      	; 0x1cc0 <__fp_round+0xc>
    1cbc:	88 23       	and	r24, r24
    1cbe:	52 f0       	brmi	.+20     	; 0x1cd4 <__fp_round+0x20>
    1cc0:	bb 0f       	add	r27, r27
    1cc2:	40 f4       	brcc	.+16     	; 0x1cd4 <__fp_round+0x20>
    1cc4:	bf 2b       	or	r27, r31
    1cc6:	11 f4       	brne	.+4      	; 0x1ccc <__fp_round+0x18>
    1cc8:	60 ff       	sbrs	r22, 0
    1cca:	04 c0       	rjmp	.+8      	; 0x1cd4 <__fp_round+0x20>
    1ccc:	6f 5f       	subi	r22, 0xFF	; 255
    1cce:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd0:	8f 4f       	sbci	r24, 0xFF	; 255
    1cd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1cd4:	08 95       	ret

00001cd6 <__fp_split3>:
    1cd6:	57 fd       	sbrc	r21, 7
    1cd8:	90 58       	subi	r25, 0x80	; 128
    1cda:	44 0f       	add	r20, r20
    1cdc:	55 1f       	adc	r21, r21
    1cde:	59 f0       	breq	.+22     	; 0x1cf6 <__fp_splitA+0x10>
    1ce0:	5f 3f       	cpi	r21, 0xFF	; 255
    1ce2:	71 f0       	breq	.+28     	; 0x1d00 <__fp_splitA+0x1a>
    1ce4:	47 95       	ror	r20

00001ce6 <__fp_splitA>:
    1ce6:	88 0f       	add	r24, r24
    1ce8:	97 fb       	bst	r25, 7
    1cea:	99 1f       	adc	r25, r25
    1cec:	61 f0       	breq	.+24     	; 0x1d06 <__fp_splitA+0x20>
    1cee:	9f 3f       	cpi	r25, 0xFF	; 255
    1cf0:	79 f0       	breq	.+30     	; 0x1d10 <__fp_splitA+0x2a>
    1cf2:	87 95       	ror	r24
    1cf4:	08 95       	ret
    1cf6:	12 16       	cp	r1, r18
    1cf8:	13 06       	cpc	r1, r19
    1cfa:	14 06       	cpc	r1, r20
    1cfc:	55 1f       	adc	r21, r21
    1cfe:	f2 cf       	rjmp	.-28     	; 0x1ce4 <__fp_split3+0xe>
    1d00:	46 95       	lsr	r20
    1d02:	f1 df       	rcall	.-30     	; 0x1ce6 <__fp_splitA>
    1d04:	08 c0       	rjmp	.+16     	; 0x1d16 <__fp_splitA+0x30>
    1d06:	16 16       	cp	r1, r22
    1d08:	17 06       	cpc	r1, r23
    1d0a:	18 06       	cpc	r1, r24
    1d0c:	99 1f       	adc	r25, r25
    1d0e:	f1 cf       	rjmp	.-30     	; 0x1cf2 <__fp_splitA+0xc>
    1d10:	86 95       	lsr	r24
    1d12:	71 05       	cpc	r23, r1
    1d14:	61 05       	cpc	r22, r1
    1d16:	08 94       	sec
    1d18:	08 95       	ret

00001d1a <__fp_zero>:
    1d1a:	e8 94       	clt

00001d1c <__fp_szero>:
    1d1c:	bb 27       	eor	r27, r27
    1d1e:	66 27       	eor	r22, r22
    1d20:	77 27       	eor	r23, r23
    1d22:	cb 01       	movw	r24, r22
    1d24:	97 f9       	bld	r25, 7
    1d26:	08 95       	ret

00001d28 <__gesf2>:
    1d28:	65 df       	rcall	.-310    	; 0x1bf4 <__fp_cmp>
    1d2a:	08 f4       	brcc	.+2      	; 0x1d2e <__gesf2+0x6>
    1d2c:	8f ef       	ldi	r24, 0xFF	; 255
    1d2e:	08 95       	ret

00001d30 <inverse>:
    1d30:	9b 01       	movw	r18, r22
    1d32:	ac 01       	movw	r20, r24
    1d34:	60 e0       	ldi	r22, 0x00	; 0
    1d36:	70 e0       	ldi	r23, 0x00	; 0
    1d38:	80 e8       	ldi	r24, 0x80	; 128
    1d3a:	9f e3       	ldi	r25, 0x3F	; 63
    1d3c:	85 ce       	rjmp	.-758    	; 0x1a48 <__divsf3>

00001d3e <__mulsf3>:
    1d3e:	0b d0       	rcall	.+22     	; 0x1d56 <__mulsf3x>
    1d40:	b9 cf       	rjmp	.-142    	; 0x1cb4 <__fp_round>
    1d42:	aa df       	rcall	.-172    	; 0x1c98 <__fp_pscA>
    1d44:	28 f0       	brcs	.+10     	; 0x1d50 <__mulsf3+0x12>
    1d46:	af df       	rcall	.-162    	; 0x1ca6 <__fp_pscB>
    1d48:	18 f0       	brcs	.+6      	; 0x1d50 <__mulsf3+0x12>
    1d4a:	95 23       	and	r25, r21
    1d4c:	09 f0       	breq	.+2      	; 0x1d50 <__mulsf3+0x12>
    1d4e:	76 cf       	rjmp	.-276    	; 0x1c3c <__fp_inf>
    1d50:	7b cf       	rjmp	.-266    	; 0x1c48 <__fp_nan>
    1d52:	11 24       	eor	r1, r1
    1d54:	e3 cf       	rjmp	.-58     	; 0x1d1c <__fp_szero>

00001d56 <__mulsf3x>:
    1d56:	bf df       	rcall	.-130    	; 0x1cd6 <__fp_split3>
    1d58:	a0 f3       	brcs	.-24     	; 0x1d42 <__mulsf3+0x4>

00001d5a <__mulsf3_pse>:
    1d5a:	95 9f       	mul	r25, r21
    1d5c:	d1 f3       	breq	.-12     	; 0x1d52 <__mulsf3+0x14>
    1d5e:	95 0f       	add	r25, r21
    1d60:	50 e0       	ldi	r21, 0x00	; 0
    1d62:	55 1f       	adc	r21, r21
    1d64:	62 9f       	mul	r22, r18
    1d66:	f0 01       	movw	r30, r0
    1d68:	72 9f       	mul	r23, r18
    1d6a:	bb 27       	eor	r27, r27
    1d6c:	f0 0d       	add	r31, r0
    1d6e:	b1 1d       	adc	r27, r1
    1d70:	63 9f       	mul	r22, r19
    1d72:	aa 27       	eor	r26, r26
    1d74:	f0 0d       	add	r31, r0
    1d76:	b1 1d       	adc	r27, r1
    1d78:	aa 1f       	adc	r26, r26
    1d7a:	64 9f       	mul	r22, r20
    1d7c:	66 27       	eor	r22, r22
    1d7e:	b0 0d       	add	r27, r0
    1d80:	a1 1d       	adc	r26, r1
    1d82:	66 1f       	adc	r22, r22
    1d84:	82 9f       	mul	r24, r18
    1d86:	22 27       	eor	r18, r18
    1d88:	b0 0d       	add	r27, r0
    1d8a:	a1 1d       	adc	r26, r1
    1d8c:	62 1f       	adc	r22, r18
    1d8e:	73 9f       	mul	r23, r19
    1d90:	b0 0d       	add	r27, r0
    1d92:	a1 1d       	adc	r26, r1
    1d94:	62 1f       	adc	r22, r18
    1d96:	83 9f       	mul	r24, r19
    1d98:	a0 0d       	add	r26, r0
    1d9a:	61 1d       	adc	r22, r1
    1d9c:	22 1f       	adc	r18, r18
    1d9e:	74 9f       	mul	r23, r20
    1da0:	33 27       	eor	r19, r19
    1da2:	a0 0d       	add	r26, r0
    1da4:	61 1d       	adc	r22, r1
    1da6:	23 1f       	adc	r18, r19
    1da8:	84 9f       	mul	r24, r20
    1daa:	60 0d       	add	r22, r0
    1dac:	21 1d       	adc	r18, r1
    1dae:	82 2f       	mov	r24, r18
    1db0:	76 2f       	mov	r23, r22
    1db2:	6a 2f       	mov	r22, r26
    1db4:	11 24       	eor	r1, r1
    1db6:	9f 57       	subi	r25, 0x7F	; 127
    1db8:	50 40       	sbci	r21, 0x00	; 0
    1dba:	8a f0       	brmi	.+34     	; 0x1dde <__mulsf3_pse+0x84>
    1dbc:	e1 f0       	breq	.+56     	; 0x1df6 <__mulsf3_pse+0x9c>
    1dbe:	88 23       	and	r24, r24
    1dc0:	4a f0       	brmi	.+18     	; 0x1dd4 <__mulsf3_pse+0x7a>
    1dc2:	ee 0f       	add	r30, r30
    1dc4:	ff 1f       	adc	r31, r31
    1dc6:	bb 1f       	adc	r27, r27
    1dc8:	66 1f       	adc	r22, r22
    1dca:	77 1f       	adc	r23, r23
    1dcc:	88 1f       	adc	r24, r24
    1dce:	91 50       	subi	r25, 0x01	; 1
    1dd0:	50 40       	sbci	r21, 0x00	; 0
    1dd2:	a9 f7       	brne	.-22     	; 0x1dbe <__mulsf3_pse+0x64>
    1dd4:	9e 3f       	cpi	r25, 0xFE	; 254
    1dd6:	51 05       	cpc	r21, r1
    1dd8:	70 f0       	brcs	.+28     	; 0x1df6 <__mulsf3_pse+0x9c>
    1dda:	30 cf       	rjmp	.-416    	; 0x1c3c <__fp_inf>
    1ddc:	9f cf       	rjmp	.-194    	; 0x1d1c <__fp_szero>
    1dde:	5f 3f       	cpi	r21, 0xFF	; 255
    1de0:	ec f3       	brlt	.-6      	; 0x1ddc <__mulsf3_pse+0x82>
    1de2:	98 3e       	cpi	r25, 0xE8	; 232
    1de4:	dc f3       	brlt	.-10     	; 0x1ddc <__mulsf3_pse+0x82>
    1de6:	86 95       	lsr	r24
    1de8:	77 95       	ror	r23
    1dea:	67 95       	ror	r22
    1dec:	b7 95       	ror	r27
    1dee:	f7 95       	ror	r31
    1df0:	e7 95       	ror	r30
    1df2:	9f 5f       	subi	r25, 0xFF	; 255
    1df4:	c1 f7       	brne	.-16     	; 0x1de6 <__mulsf3_pse+0x8c>
    1df6:	fe 2b       	or	r31, r30
    1df8:	88 0f       	add	r24, r24
    1dfa:	91 1d       	adc	r25, r1
    1dfc:	96 95       	lsr	r25
    1dfe:	87 95       	ror	r24
    1e00:	97 f9       	bld	r25, 7
    1e02:	08 95       	ret
    1e04:	11 f4       	brne	.+4      	; 0x1e0a <__mulsf3_pse+0xb0>
    1e06:	0e f4       	brtc	.+2      	; 0x1e0a <__mulsf3_pse+0xb0>
    1e08:	1f cf       	rjmp	.-450    	; 0x1c48 <__fp_nan>
    1e0a:	41 c0       	rjmp	.+130    	; 0x1e8e <__fp_mpack>

00001e0c <sqrt>:
    1e0c:	6c df       	rcall	.-296    	; 0x1ce6 <__fp_splitA>
    1e0e:	d0 f3       	brcs	.-12     	; 0x1e04 <__mulsf3_pse+0xaa>
    1e10:	99 23       	and	r25, r25
    1e12:	d9 f3       	breq	.-10     	; 0x1e0a <__mulsf3_pse+0xb0>
    1e14:	ce f3       	brts	.-14     	; 0x1e08 <__mulsf3_pse+0xae>
    1e16:	9f 57       	subi	r25, 0x7F	; 127
    1e18:	55 0b       	sbc	r21, r21
    1e1a:	87 ff       	sbrs	r24, 7
    1e1c:	46 d0       	rcall	.+140    	; 0x1eaa <__fp_norm2>
    1e1e:	00 24       	eor	r0, r0
    1e20:	a0 e6       	ldi	r26, 0x60	; 96
    1e22:	40 ea       	ldi	r20, 0xA0	; 160
    1e24:	90 01       	movw	r18, r0
    1e26:	80 58       	subi	r24, 0x80	; 128
    1e28:	56 95       	lsr	r21
    1e2a:	97 95       	ror	r25
    1e2c:	28 f4       	brcc	.+10     	; 0x1e38 <sqrt+0x2c>
    1e2e:	80 5c       	subi	r24, 0xC0	; 192
    1e30:	66 0f       	add	r22, r22
    1e32:	77 1f       	adc	r23, r23
    1e34:	88 1f       	adc	r24, r24
    1e36:	20 f0       	brcs	.+8      	; 0x1e40 <sqrt+0x34>
    1e38:	26 17       	cp	r18, r22
    1e3a:	37 07       	cpc	r19, r23
    1e3c:	48 07       	cpc	r20, r24
    1e3e:	30 f4       	brcc	.+12     	; 0x1e4c <sqrt+0x40>
    1e40:	62 1b       	sub	r22, r18
    1e42:	73 0b       	sbc	r23, r19
    1e44:	84 0b       	sbc	r24, r20
    1e46:	20 29       	or	r18, r0
    1e48:	31 29       	or	r19, r1
    1e4a:	4a 2b       	or	r20, r26
    1e4c:	a6 95       	lsr	r26
    1e4e:	17 94       	ror	r1
    1e50:	07 94       	ror	r0
    1e52:	20 25       	eor	r18, r0
    1e54:	31 25       	eor	r19, r1
    1e56:	4a 27       	eor	r20, r26
    1e58:	58 f7       	brcc	.-42     	; 0x1e30 <sqrt+0x24>
    1e5a:	66 0f       	add	r22, r22
    1e5c:	77 1f       	adc	r23, r23
    1e5e:	88 1f       	adc	r24, r24
    1e60:	20 f0       	brcs	.+8      	; 0x1e6a <sqrt+0x5e>
    1e62:	26 17       	cp	r18, r22
    1e64:	37 07       	cpc	r19, r23
    1e66:	48 07       	cpc	r20, r24
    1e68:	30 f4       	brcc	.+12     	; 0x1e76 <sqrt+0x6a>
    1e6a:	62 0b       	sbc	r22, r18
    1e6c:	73 0b       	sbc	r23, r19
    1e6e:	84 0b       	sbc	r24, r20
    1e70:	20 0d       	add	r18, r0
    1e72:	31 1d       	adc	r19, r1
    1e74:	41 1d       	adc	r20, r1
    1e76:	a0 95       	com	r26
    1e78:	81 f7       	brne	.-32     	; 0x1e5a <sqrt+0x4e>
    1e7a:	b9 01       	movw	r22, r18
    1e7c:	84 2f       	mov	r24, r20
    1e7e:	91 58       	subi	r25, 0x81	; 129
    1e80:	88 0f       	add	r24, r24
    1e82:	96 95       	lsr	r25
    1e84:	87 95       	ror	r24
    1e86:	08 95       	ret

00001e88 <square>:
    1e88:	9b 01       	movw	r18, r22
    1e8a:	ac 01       	movw	r20, r24
    1e8c:	58 cf       	rjmp	.-336    	; 0x1d3e <__mulsf3>

00001e8e <__fp_mpack>:
    1e8e:	9f 3f       	cpi	r25, 0xFF	; 255
    1e90:	31 f0       	breq	.+12     	; 0x1e9e <__fp_mpack_finite+0xc>

00001e92 <__fp_mpack_finite>:
    1e92:	91 50       	subi	r25, 0x01	; 1
    1e94:	20 f4       	brcc	.+8      	; 0x1e9e <__fp_mpack_finite+0xc>
    1e96:	87 95       	ror	r24
    1e98:	77 95       	ror	r23
    1e9a:	67 95       	ror	r22
    1e9c:	b7 95       	ror	r27
    1e9e:	88 0f       	add	r24, r24
    1ea0:	91 1d       	adc	r25, r1
    1ea2:	96 95       	lsr	r25
    1ea4:	87 95       	ror	r24
    1ea6:	97 f9       	bld	r25, 7
    1ea8:	08 95       	ret

00001eaa <__fp_norm2>:
    1eaa:	91 50       	subi	r25, 0x01	; 1
    1eac:	50 40       	sbci	r21, 0x00	; 0
    1eae:	66 0f       	add	r22, r22
    1eb0:	77 1f       	adc	r23, r23
    1eb2:	88 1f       	adc	r24, r24
    1eb4:	d2 f7       	brpl	.-12     	; 0x1eaa <__fp_norm2>
    1eb6:	08 95       	ret

00001eb8 <vfprintf>:
    1eb8:	2f 92       	push	r2
    1eba:	3f 92       	push	r3
    1ebc:	4f 92       	push	r4
    1ebe:	5f 92       	push	r5
    1ec0:	6f 92       	push	r6
    1ec2:	7f 92       	push	r7
    1ec4:	8f 92       	push	r8
    1ec6:	9f 92       	push	r9
    1ec8:	af 92       	push	r10
    1eca:	bf 92       	push	r11
    1ecc:	cf 92       	push	r12
    1ece:	df 92       	push	r13
    1ed0:	ef 92       	push	r14
    1ed2:	ff 92       	push	r15
    1ed4:	0f 93       	push	r16
    1ed6:	1f 93       	push	r17
    1ed8:	cf 93       	push	r28
    1eda:	df 93       	push	r29
    1edc:	cd b7       	in	r28, 0x3d	; 61
    1ede:	de b7       	in	r29, 0x3e	; 62
    1ee0:	60 97       	sbiw	r28, 0x10	; 16
    1ee2:	0f b6       	in	r0, 0x3f	; 63
    1ee4:	f8 94       	cli
    1ee6:	de bf       	out	0x3e, r29	; 62
    1ee8:	0f be       	out	0x3f, r0	; 63
    1eea:	cd bf       	out	0x3d, r28	; 61
    1eec:	7c 01       	movw	r14, r24
    1eee:	1b 01       	movw	r2, r22
    1ef0:	6a 01       	movw	r12, r20
    1ef2:	fc 01       	movw	r30, r24
    1ef4:	17 82       	std	Z+7, r1	; 0x07
    1ef6:	16 82       	std	Z+6, r1	; 0x06
    1ef8:	83 81       	ldd	r24, Z+3	; 0x03
    1efa:	81 ff       	sbrs	r24, 1
    1efc:	2a c3       	rjmp	.+1620   	; 0x2552 <__stack+0x353>
    1efe:	9e 01       	movw	r18, r28
    1f00:	2f 5f       	subi	r18, 0xFF	; 255
    1f02:	3f 4f       	sbci	r19, 0xFF	; 255
    1f04:	39 01       	movw	r6, r18
    1f06:	f7 01       	movw	r30, r14
    1f08:	93 81       	ldd	r25, Z+3	; 0x03
    1f0a:	f1 01       	movw	r30, r2
    1f0c:	93 fd       	sbrc	r25, 3
    1f0e:	85 91       	lpm	r24, Z+
    1f10:	93 ff       	sbrs	r25, 3
    1f12:	81 91       	ld	r24, Z+
    1f14:	1f 01       	movw	r2, r30
    1f16:	88 23       	and	r24, r24
    1f18:	09 f4       	brne	.+2      	; 0x1f1c <vfprintf+0x64>
    1f1a:	17 c3       	rjmp	.+1582   	; 0x254a <__stack+0x34b>
    1f1c:	85 32       	cpi	r24, 0x25	; 37
    1f1e:	39 f4       	brne	.+14     	; 0x1f2e <vfprintf+0x76>
    1f20:	93 fd       	sbrc	r25, 3
    1f22:	85 91       	lpm	r24, Z+
    1f24:	93 ff       	sbrs	r25, 3
    1f26:	81 91       	ld	r24, Z+
    1f28:	1f 01       	movw	r2, r30
    1f2a:	85 32       	cpi	r24, 0x25	; 37
    1f2c:	31 f4       	brne	.+12     	; 0x1f3a <vfprintf+0x82>
    1f2e:	b7 01       	movw	r22, r14
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	aa d4       	rcall	.+2388   	; 0x2888 <fputc>
    1f34:	56 01       	movw	r10, r12
    1f36:	65 01       	movw	r12, r10
    1f38:	e6 cf       	rjmp	.-52     	; 0x1f06 <vfprintf+0x4e>
    1f3a:	10 e0       	ldi	r17, 0x00	; 0
    1f3c:	51 2c       	mov	r5, r1
    1f3e:	91 2c       	mov	r9, r1
    1f40:	ff e1       	ldi	r31, 0x1F	; 31
    1f42:	f9 15       	cp	r31, r9
    1f44:	d8 f0       	brcs	.+54     	; 0x1f7c <vfprintf+0xc4>
    1f46:	8b 32       	cpi	r24, 0x2B	; 43
    1f48:	79 f0       	breq	.+30     	; 0x1f68 <vfprintf+0xb0>
    1f4a:	38 f4       	brcc	.+14     	; 0x1f5a <vfprintf+0xa2>
    1f4c:	80 32       	cpi	r24, 0x20	; 32
    1f4e:	79 f0       	breq	.+30     	; 0x1f6e <vfprintf+0xb6>
    1f50:	83 32       	cpi	r24, 0x23	; 35
    1f52:	a1 f4       	brne	.+40     	; 0x1f7c <vfprintf+0xc4>
    1f54:	f9 2d       	mov	r31, r9
    1f56:	f0 61       	ori	r31, 0x10	; 16
    1f58:	2e c0       	rjmp	.+92     	; 0x1fb6 <vfprintf+0xfe>
    1f5a:	8d 32       	cpi	r24, 0x2D	; 45
    1f5c:	61 f0       	breq	.+24     	; 0x1f76 <vfprintf+0xbe>
    1f5e:	80 33       	cpi	r24, 0x30	; 48
    1f60:	69 f4       	brne	.+26     	; 0x1f7c <vfprintf+0xc4>
    1f62:	29 2d       	mov	r18, r9
    1f64:	21 60       	ori	r18, 0x01	; 1
    1f66:	2d c0       	rjmp	.+90     	; 0x1fc2 <vfprintf+0x10a>
    1f68:	39 2d       	mov	r19, r9
    1f6a:	32 60       	ori	r19, 0x02	; 2
    1f6c:	93 2e       	mov	r9, r19
    1f6e:	89 2d       	mov	r24, r9
    1f70:	84 60       	ori	r24, 0x04	; 4
    1f72:	98 2e       	mov	r9, r24
    1f74:	2a c0       	rjmp	.+84     	; 0x1fca <vfprintf+0x112>
    1f76:	e9 2d       	mov	r30, r9
    1f78:	e8 60       	ori	r30, 0x08	; 8
    1f7a:	15 c0       	rjmp	.+42     	; 0x1fa6 <vfprintf+0xee>
    1f7c:	97 fc       	sbrc	r9, 7
    1f7e:	2d c0       	rjmp	.+90     	; 0x1fda <vfprintf+0x122>
    1f80:	20 ed       	ldi	r18, 0xD0	; 208
    1f82:	28 0f       	add	r18, r24
    1f84:	2a 30       	cpi	r18, 0x0A	; 10
    1f86:	88 f4       	brcc	.+34     	; 0x1faa <vfprintf+0xf2>
    1f88:	96 fe       	sbrs	r9, 6
    1f8a:	06 c0       	rjmp	.+12     	; 0x1f98 <vfprintf+0xe0>
    1f8c:	3a e0       	ldi	r19, 0x0A	; 10
    1f8e:	13 9f       	mul	r17, r19
    1f90:	20 0d       	add	r18, r0
    1f92:	11 24       	eor	r1, r1
    1f94:	12 2f       	mov	r17, r18
    1f96:	19 c0       	rjmp	.+50     	; 0x1fca <vfprintf+0x112>
    1f98:	8a e0       	ldi	r24, 0x0A	; 10
    1f9a:	58 9e       	mul	r5, r24
    1f9c:	20 0d       	add	r18, r0
    1f9e:	11 24       	eor	r1, r1
    1fa0:	52 2e       	mov	r5, r18
    1fa2:	e9 2d       	mov	r30, r9
    1fa4:	e0 62       	ori	r30, 0x20	; 32
    1fa6:	9e 2e       	mov	r9, r30
    1fa8:	10 c0       	rjmp	.+32     	; 0x1fca <vfprintf+0x112>
    1faa:	8e 32       	cpi	r24, 0x2E	; 46
    1fac:	31 f4       	brne	.+12     	; 0x1fba <vfprintf+0x102>
    1fae:	96 fc       	sbrc	r9, 6
    1fb0:	cc c2       	rjmp	.+1432   	; 0x254a <__stack+0x34b>
    1fb2:	f9 2d       	mov	r31, r9
    1fb4:	f0 64       	ori	r31, 0x40	; 64
    1fb6:	9f 2e       	mov	r9, r31
    1fb8:	08 c0       	rjmp	.+16     	; 0x1fca <vfprintf+0x112>
    1fba:	8c 36       	cpi	r24, 0x6C	; 108
    1fbc:	21 f4       	brne	.+8      	; 0x1fc6 <vfprintf+0x10e>
    1fbe:	29 2d       	mov	r18, r9
    1fc0:	20 68       	ori	r18, 0x80	; 128
    1fc2:	92 2e       	mov	r9, r18
    1fc4:	02 c0       	rjmp	.+4      	; 0x1fca <vfprintf+0x112>
    1fc6:	88 36       	cpi	r24, 0x68	; 104
    1fc8:	41 f4       	brne	.+16     	; 0x1fda <vfprintf+0x122>
    1fca:	f1 01       	movw	r30, r2
    1fcc:	93 fd       	sbrc	r25, 3
    1fce:	85 91       	lpm	r24, Z+
    1fd0:	93 ff       	sbrs	r25, 3
    1fd2:	81 91       	ld	r24, Z+
    1fd4:	1f 01       	movw	r2, r30
    1fd6:	81 11       	cpse	r24, r1
    1fd8:	b3 cf       	rjmp	.-154    	; 0x1f40 <vfprintf+0x88>
    1fda:	9b eb       	ldi	r25, 0xBB	; 187
    1fdc:	98 0f       	add	r25, r24
    1fde:	93 30       	cpi	r25, 0x03	; 3
    1fe0:	20 f4       	brcc	.+8      	; 0x1fea <vfprintf+0x132>
    1fe2:	99 2d       	mov	r25, r9
    1fe4:	90 61       	ori	r25, 0x10	; 16
    1fe6:	80 5e       	subi	r24, 0xE0	; 224
    1fe8:	07 c0       	rjmp	.+14     	; 0x1ff8 <vfprintf+0x140>
    1fea:	9b e9       	ldi	r25, 0x9B	; 155
    1fec:	98 0f       	add	r25, r24
    1fee:	93 30       	cpi	r25, 0x03	; 3
    1ff0:	08 f0       	brcs	.+2      	; 0x1ff4 <vfprintf+0x13c>
    1ff2:	59 c1       	rjmp	.+690    	; 0x22a6 <__stack+0xa7>
    1ff4:	99 2d       	mov	r25, r9
    1ff6:	9f 7e       	andi	r25, 0xEF	; 239
    1ff8:	96 ff       	sbrs	r25, 6
    1ffa:	16 e0       	ldi	r17, 0x06	; 6
    1ffc:	9f 73       	andi	r25, 0x3F	; 63
    1ffe:	99 2e       	mov	r9, r25
    2000:	85 36       	cpi	r24, 0x65	; 101
    2002:	19 f4       	brne	.+6      	; 0x200a <vfprintf+0x152>
    2004:	90 64       	ori	r25, 0x40	; 64
    2006:	99 2e       	mov	r9, r25
    2008:	08 c0       	rjmp	.+16     	; 0x201a <vfprintf+0x162>
    200a:	86 36       	cpi	r24, 0x66	; 102
    200c:	21 f4       	brne	.+8      	; 0x2016 <vfprintf+0x15e>
    200e:	39 2f       	mov	r19, r25
    2010:	30 68       	ori	r19, 0x80	; 128
    2012:	93 2e       	mov	r9, r19
    2014:	02 c0       	rjmp	.+4      	; 0x201a <vfprintf+0x162>
    2016:	11 11       	cpse	r17, r1
    2018:	11 50       	subi	r17, 0x01	; 1
    201a:	97 fe       	sbrs	r9, 7
    201c:	07 c0       	rjmp	.+14     	; 0x202c <vfprintf+0x174>
    201e:	1c 33       	cpi	r17, 0x3C	; 60
    2020:	50 f4       	brcc	.+20     	; 0x2036 <vfprintf+0x17e>
    2022:	44 24       	eor	r4, r4
    2024:	43 94       	inc	r4
    2026:	41 0e       	add	r4, r17
    2028:	27 e0       	ldi	r18, 0x07	; 7
    202a:	0b c0       	rjmp	.+22     	; 0x2042 <vfprintf+0x18a>
    202c:	18 30       	cpi	r17, 0x08	; 8
    202e:	38 f0       	brcs	.+14     	; 0x203e <vfprintf+0x186>
    2030:	27 e0       	ldi	r18, 0x07	; 7
    2032:	17 e0       	ldi	r17, 0x07	; 7
    2034:	05 c0       	rjmp	.+10     	; 0x2040 <vfprintf+0x188>
    2036:	27 e0       	ldi	r18, 0x07	; 7
    2038:	9c e3       	ldi	r25, 0x3C	; 60
    203a:	49 2e       	mov	r4, r25
    203c:	02 c0       	rjmp	.+4      	; 0x2042 <vfprintf+0x18a>
    203e:	21 2f       	mov	r18, r17
    2040:	41 2c       	mov	r4, r1
    2042:	56 01       	movw	r10, r12
    2044:	84 e0       	ldi	r24, 0x04	; 4
    2046:	a8 0e       	add	r10, r24
    2048:	b1 1c       	adc	r11, r1
    204a:	f6 01       	movw	r30, r12
    204c:	60 81       	ld	r22, Z
    204e:	71 81       	ldd	r23, Z+1	; 0x01
    2050:	82 81       	ldd	r24, Z+2	; 0x02
    2052:	93 81       	ldd	r25, Z+3	; 0x03
    2054:	04 2d       	mov	r16, r4
    2056:	a3 01       	movw	r20, r6
    2058:	df d2       	rcall	.+1470   	; 0x2618 <__ftoa_engine>
    205a:	6c 01       	movw	r12, r24
    205c:	f9 81       	ldd	r31, Y+1	; 0x01
    205e:	fc 87       	std	Y+12, r31	; 0x0c
    2060:	f0 ff       	sbrs	r31, 0
    2062:	02 c0       	rjmp	.+4      	; 0x2068 <vfprintf+0x1b0>
    2064:	f3 ff       	sbrs	r31, 3
    2066:	06 c0       	rjmp	.+12     	; 0x2074 <vfprintf+0x1bc>
    2068:	91 fc       	sbrc	r9, 1
    206a:	06 c0       	rjmp	.+12     	; 0x2078 <vfprintf+0x1c0>
    206c:	92 fe       	sbrs	r9, 2
    206e:	06 c0       	rjmp	.+12     	; 0x207c <vfprintf+0x1c4>
    2070:	00 e2       	ldi	r16, 0x20	; 32
    2072:	05 c0       	rjmp	.+10     	; 0x207e <vfprintf+0x1c6>
    2074:	0d e2       	ldi	r16, 0x2D	; 45
    2076:	03 c0       	rjmp	.+6      	; 0x207e <vfprintf+0x1c6>
    2078:	0b e2       	ldi	r16, 0x2B	; 43
    207a:	01 c0       	rjmp	.+2      	; 0x207e <vfprintf+0x1c6>
    207c:	00 e0       	ldi	r16, 0x00	; 0
    207e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2080:	8c 70       	andi	r24, 0x0C	; 12
    2082:	19 f0       	breq	.+6      	; 0x208a <vfprintf+0x1d2>
    2084:	01 11       	cpse	r16, r1
    2086:	43 c2       	rjmp	.+1158   	; 0x250e <__stack+0x30f>
    2088:	80 c2       	rjmp	.+1280   	; 0x258a <__stack+0x38b>
    208a:	97 fe       	sbrs	r9, 7
    208c:	10 c0       	rjmp	.+32     	; 0x20ae <vfprintf+0x1f6>
    208e:	4c 0c       	add	r4, r12
    2090:	fc 85       	ldd	r31, Y+12	; 0x0c
    2092:	f4 ff       	sbrs	r31, 4
    2094:	04 c0       	rjmp	.+8      	; 0x209e <vfprintf+0x1e6>
    2096:	8a 81       	ldd	r24, Y+2	; 0x02
    2098:	81 33       	cpi	r24, 0x31	; 49
    209a:	09 f4       	brne	.+2      	; 0x209e <vfprintf+0x1e6>
    209c:	4a 94       	dec	r4
    209e:	14 14       	cp	r1, r4
    20a0:	74 f5       	brge	.+92     	; 0x20fe <vfprintf+0x246>
    20a2:	28 e0       	ldi	r18, 0x08	; 8
    20a4:	24 15       	cp	r18, r4
    20a6:	78 f5       	brcc	.+94     	; 0x2106 <vfprintf+0x24e>
    20a8:	88 e0       	ldi	r24, 0x08	; 8
    20aa:	48 2e       	mov	r4, r24
    20ac:	2c c0       	rjmp	.+88     	; 0x2106 <vfprintf+0x24e>
    20ae:	96 fc       	sbrc	r9, 6
    20b0:	2a c0       	rjmp	.+84     	; 0x2106 <vfprintf+0x24e>
    20b2:	81 2f       	mov	r24, r17
    20b4:	90 e0       	ldi	r25, 0x00	; 0
    20b6:	8c 15       	cp	r24, r12
    20b8:	9d 05       	cpc	r25, r13
    20ba:	9c f0       	brlt	.+38     	; 0x20e2 <vfprintf+0x22a>
    20bc:	3c ef       	ldi	r19, 0xFC	; 252
    20be:	c3 16       	cp	r12, r19
    20c0:	3f ef       	ldi	r19, 0xFF	; 255
    20c2:	d3 06       	cpc	r13, r19
    20c4:	74 f0       	brlt	.+28     	; 0x20e2 <vfprintf+0x22a>
    20c6:	89 2d       	mov	r24, r9
    20c8:	80 68       	ori	r24, 0x80	; 128
    20ca:	98 2e       	mov	r9, r24
    20cc:	0a c0       	rjmp	.+20     	; 0x20e2 <vfprintf+0x22a>
    20ce:	e2 e0       	ldi	r30, 0x02	; 2
    20d0:	f0 e0       	ldi	r31, 0x00	; 0
    20d2:	ec 0f       	add	r30, r28
    20d4:	fd 1f       	adc	r31, r29
    20d6:	e1 0f       	add	r30, r17
    20d8:	f1 1d       	adc	r31, r1
    20da:	80 81       	ld	r24, Z
    20dc:	80 33       	cpi	r24, 0x30	; 48
    20de:	19 f4       	brne	.+6      	; 0x20e6 <vfprintf+0x22e>
    20e0:	11 50       	subi	r17, 0x01	; 1
    20e2:	11 11       	cpse	r17, r1
    20e4:	f4 cf       	rjmp	.-24     	; 0x20ce <vfprintf+0x216>
    20e6:	97 fe       	sbrs	r9, 7
    20e8:	0e c0       	rjmp	.+28     	; 0x2106 <vfprintf+0x24e>
    20ea:	44 24       	eor	r4, r4
    20ec:	43 94       	inc	r4
    20ee:	41 0e       	add	r4, r17
    20f0:	81 2f       	mov	r24, r17
    20f2:	90 e0       	ldi	r25, 0x00	; 0
    20f4:	c8 16       	cp	r12, r24
    20f6:	d9 06       	cpc	r13, r25
    20f8:	2c f4       	brge	.+10     	; 0x2104 <vfprintf+0x24c>
    20fa:	1c 19       	sub	r17, r12
    20fc:	04 c0       	rjmp	.+8      	; 0x2106 <vfprintf+0x24e>
    20fe:	44 24       	eor	r4, r4
    2100:	43 94       	inc	r4
    2102:	01 c0       	rjmp	.+2      	; 0x2106 <vfprintf+0x24e>
    2104:	10 e0       	ldi	r17, 0x00	; 0
    2106:	97 fe       	sbrs	r9, 7
    2108:	06 c0       	rjmp	.+12     	; 0x2116 <vfprintf+0x25e>
    210a:	1c 14       	cp	r1, r12
    210c:	1d 04       	cpc	r1, r13
    210e:	34 f4       	brge	.+12     	; 0x211c <vfprintf+0x264>
    2110:	c6 01       	movw	r24, r12
    2112:	01 96       	adiw	r24, 0x01	; 1
    2114:	05 c0       	rjmp	.+10     	; 0x2120 <vfprintf+0x268>
    2116:	85 e0       	ldi	r24, 0x05	; 5
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	02 c0       	rjmp	.+4      	; 0x2120 <vfprintf+0x268>
    211c:	81 e0       	ldi	r24, 0x01	; 1
    211e:	90 e0       	ldi	r25, 0x00	; 0
    2120:	01 11       	cpse	r16, r1
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	11 23       	and	r17, r17
    2126:	31 f0       	breq	.+12     	; 0x2134 <vfprintf+0x27c>
    2128:	21 2f       	mov	r18, r17
    212a:	30 e0       	ldi	r19, 0x00	; 0
    212c:	2f 5f       	subi	r18, 0xFF	; 255
    212e:	3f 4f       	sbci	r19, 0xFF	; 255
    2130:	82 0f       	add	r24, r18
    2132:	93 1f       	adc	r25, r19
    2134:	25 2d       	mov	r18, r5
    2136:	30 e0       	ldi	r19, 0x00	; 0
    2138:	82 17       	cp	r24, r18
    213a:	93 07       	cpc	r25, r19
    213c:	14 f4       	brge	.+4      	; 0x2142 <vfprintf+0x28a>
    213e:	58 1a       	sub	r5, r24
    2140:	01 c0       	rjmp	.+2      	; 0x2144 <vfprintf+0x28c>
    2142:	51 2c       	mov	r5, r1
    2144:	89 2d       	mov	r24, r9
    2146:	89 70       	andi	r24, 0x09	; 9
    2148:	41 f4       	brne	.+16     	; 0x215a <vfprintf+0x2a2>
    214a:	55 20       	and	r5, r5
    214c:	31 f0       	breq	.+12     	; 0x215a <vfprintf+0x2a2>
    214e:	b7 01       	movw	r22, r14
    2150:	80 e2       	ldi	r24, 0x20	; 32
    2152:	90 e0       	ldi	r25, 0x00	; 0
    2154:	99 d3       	rcall	.+1842   	; 0x2888 <fputc>
    2156:	5a 94       	dec	r5
    2158:	f8 cf       	rjmp	.-16     	; 0x214a <vfprintf+0x292>
    215a:	00 23       	and	r16, r16
    215c:	21 f0       	breq	.+8      	; 0x2166 <vfprintf+0x2ae>
    215e:	b7 01       	movw	r22, r14
    2160:	80 2f       	mov	r24, r16
    2162:	90 e0       	ldi	r25, 0x00	; 0
    2164:	91 d3       	rcall	.+1826   	; 0x2888 <fputc>
    2166:	93 fc       	sbrc	r9, 3
    2168:	08 c0       	rjmp	.+16     	; 0x217a <vfprintf+0x2c2>
    216a:	55 20       	and	r5, r5
    216c:	31 f0       	breq	.+12     	; 0x217a <vfprintf+0x2c2>
    216e:	b7 01       	movw	r22, r14
    2170:	80 e3       	ldi	r24, 0x30	; 48
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	89 d3       	rcall	.+1810   	; 0x2888 <fputc>
    2176:	5a 94       	dec	r5
    2178:	f8 cf       	rjmp	.-16     	; 0x216a <vfprintf+0x2b2>
    217a:	97 fe       	sbrs	r9, 7
    217c:	4a c0       	rjmp	.+148    	; 0x2212 <__stack+0x13>
    217e:	46 01       	movw	r8, r12
    2180:	d7 fe       	sbrs	r13, 7
    2182:	02 c0       	rjmp	.+4      	; 0x2188 <vfprintf+0x2d0>
    2184:	81 2c       	mov	r8, r1
    2186:	91 2c       	mov	r9, r1
    2188:	c6 01       	movw	r24, r12
    218a:	88 19       	sub	r24, r8
    218c:	99 09       	sbc	r25, r9
    218e:	f3 01       	movw	r30, r6
    2190:	e8 0f       	add	r30, r24
    2192:	f9 1f       	adc	r31, r25
    2194:	fe 87       	std	Y+14, r31	; 0x0e
    2196:	ed 87       	std	Y+13, r30	; 0x0d
    2198:	96 01       	movw	r18, r12
    219a:	24 19       	sub	r18, r4
    219c:	31 09       	sbc	r19, r1
    219e:	38 8b       	std	Y+16, r19	; 0x10
    21a0:	2f 87       	std	Y+15, r18	; 0x0f
    21a2:	01 2f       	mov	r16, r17
    21a4:	10 e0       	ldi	r17, 0x00	; 0
    21a6:	11 95       	neg	r17
    21a8:	01 95       	neg	r16
    21aa:	11 09       	sbc	r17, r1
    21ac:	3f ef       	ldi	r19, 0xFF	; 255
    21ae:	83 16       	cp	r8, r19
    21b0:	93 06       	cpc	r9, r19
    21b2:	21 f4       	brne	.+8      	; 0x21bc <vfprintf+0x304>
    21b4:	b7 01       	movw	r22, r14
    21b6:	8e e2       	ldi	r24, 0x2E	; 46
    21b8:	90 e0       	ldi	r25, 0x00	; 0
    21ba:	66 d3       	rcall	.+1740   	; 0x2888 <fputc>
    21bc:	c8 14       	cp	r12, r8
    21be:	d9 04       	cpc	r13, r9
    21c0:	4c f0       	brlt	.+18     	; 0x21d4 <vfprintf+0x31c>
    21c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    21c4:	98 89       	ldd	r25, Y+16	; 0x10
    21c6:	88 15       	cp	r24, r8
    21c8:	99 05       	cpc	r25, r9
    21ca:	24 f4       	brge	.+8      	; 0x21d4 <vfprintf+0x31c>
    21cc:	ed 85       	ldd	r30, Y+13	; 0x0d
    21ce:	fe 85       	ldd	r31, Y+14	; 0x0e
    21d0:	81 81       	ldd	r24, Z+1	; 0x01
    21d2:	01 c0       	rjmp	.+2      	; 0x21d6 <vfprintf+0x31e>
    21d4:	80 e3       	ldi	r24, 0x30	; 48
    21d6:	f1 e0       	ldi	r31, 0x01	; 1
    21d8:	8f 1a       	sub	r8, r31
    21da:	91 08       	sbc	r9, r1
    21dc:	2d 85       	ldd	r18, Y+13	; 0x0d
    21de:	3e 85       	ldd	r19, Y+14	; 0x0e
    21e0:	2f 5f       	subi	r18, 0xFF	; 255
    21e2:	3f 4f       	sbci	r19, 0xFF	; 255
    21e4:	3e 87       	std	Y+14, r19	; 0x0e
    21e6:	2d 87       	std	Y+13, r18	; 0x0d
    21e8:	80 16       	cp	r8, r16
    21ea:	91 06       	cpc	r9, r17
    21ec:	24 f0       	brlt	.+8      	; 0x21f6 <vfprintf+0x33e>
    21ee:	b7 01       	movw	r22, r14
    21f0:	90 e0       	ldi	r25, 0x00	; 0
    21f2:	4a d3       	rcall	.+1684   	; 0x2888 <fputc>
    21f4:	db cf       	rjmp	.-74     	; 0x21ac <vfprintf+0x2f4>
    21f6:	c8 14       	cp	r12, r8
    21f8:	d9 04       	cpc	r13, r9
    21fa:	41 f4       	brne	.+16     	; 0x220c <__stack+0xd>
    21fc:	9a 81       	ldd	r25, Y+2	; 0x02
    21fe:	96 33       	cpi	r25, 0x36	; 54
    2200:	20 f4       	brcc	.+8      	; 0x220a <__stack+0xb>
    2202:	95 33       	cpi	r25, 0x35	; 53
    2204:	19 f4       	brne	.+6      	; 0x220c <__stack+0xd>
    2206:	3c 85       	ldd	r19, Y+12	; 0x0c
    2208:	34 ff       	sbrs	r19, 4
    220a:	81 e3       	ldi	r24, 0x31	; 49
    220c:	b7 01       	movw	r22, r14
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	48 c0       	rjmp	.+144    	; 0x22a2 <__stack+0xa3>
    2212:	8a 81       	ldd	r24, Y+2	; 0x02
    2214:	81 33       	cpi	r24, 0x31	; 49
    2216:	19 f0       	breq	.+6      	; 0x221e <__stack+0x1f>
    2218:	9c 85       	ldd	r25, Y+12	; 0x0c
    221a:	9f 7e       	andi	r25, 0xEF	; 239
    221c:	9c 87       	std	Y+12, r25	; 0x0c
    221e:	b7 01       	movw	r22, r14
    2220:	90 e0       	ldi	r25, 0x00	; 0
    2222:	32 d3       	rcall	.+1636   	; 0x2888 <fputc>
    2224:	11 11       	cpse	r17, r1
    2226:	05 c0       	rjmp	.+10     	; 0x2232 <__stack+0x33>
    2228:	94 fc       	sbrc	r9, 4
    222a:	16 c0       	rjmp	.+44     	; 0x2258 <__stack+0x59>
    222c:	85 e6       	ldi	r24, 0x65	; 101
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	15 c0       	rjmp	.+42     	; 0x225c <__stack+0x5d>
    2232:	b7 01       	movw	r22, r14
    2234:	8e e2       	ldi	r24, 0x2E	; 46
    2236:	90 e0       	ldi	r25, 0x00	; 0
    2238:	27 d3       	rcall	.+1614   	; 0x2888 <fputc>
    223a:	1e 5f       	subi	r17, 0xFE	; 254
    223c:	82 e0       	ldi	r24, 0x02	; 2
    223e:	01 e0       	ldi	r16, 0x01	; 1
    2240:	08 0f       	add	r16, r24
    2242:	f3 01       	movw	r30, r6
    2244:	e8 0f       	add	r30, r24
    2246:	f1 1d       	adc	r31, r1
    2248:	80 81       	ld	r24, Z
    224a:	b7 01       	movw	r22, r14
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	1c d3       	rcall	.+1592   	; 0x2888 <fputc>
    2250:	80 2f       	mov	r24, r16
    2252:	01 13       	cpse	r16, r17
    2254:	f4 cf       	rjmp	.-24     	; 0x223e <__stack+0x3f>
    2256:	e8 cf       	rjmp	.-48     	; 0x2228 <__stack+0x29>
    2258:	85 e4       	ldi	r24, 0x45	; 69
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	b7 01       	movw	r22, r14
    225e:	14 d3       	rcall	.+1576   	; 0x2888 <fputc>
    2260:	d7 fc       	sbrc	r13, 7
    2262:	06 c0       	rjmp	.+12     	; 0x2270 <__stack+0x71>
    2264:	c1 14       	cp	r12, r1
    2266:	d1 04       	cpc	r13, r1
    2268:	41 f4       	brne	.+16     	; 0x227a <__stack+0x7b>
    226a:	ec 85       	ldd	r30, Y+12	; 0x0c
    226c:	e4 ff       	sbrs	r30, 4
    226e:	05 c0       	rjmp	.+10     	; 0x227a <__stack+0x7b>
    2270:	d1 94       	neg	r13
    2272:	c1 94       	neg	r12
    2274:	d1 08       	sbc	r13, r1
    2276:	8d e2       	ldi	r24, 0x2D	; 45
    2278:	01 c0       	rjmp	.+2      	; 0x227c <__stack+0x7d>
    227a:	8b e2       	ldi	r24, 0x2B	; 43
    227c:	b7 01       	movw	r22, r14
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	03 d3       	rcall	.+1542   	; 0x2888 <fputc>
    2282:	80 e3       	ldi	r24, 0x30	; 48
    2284:	2a e0       	ldi	r18, 0x0A	; 10
    2286:	c2 16       	cp	r12, r18
    2288:	d1 04       	cpc	r13, r1
    228a:	2c f0       	brlt	.+10     	; 0x2296 <__stack+0x97>
    228c:	8f 5f       	subi	r24, 0xFF	; 255
    228e:	fa e0       	ldi	r31, 0x0A	; 10
    2290:	cf 1a       	sub	r12, r31
    2292:	d1 08       	sbc	r13, r1
    2294:	f7 cf       	rjmp	.-18     	; 0x2284 <__stack+0x85>
    2296:	b7 01       	movw	r22, r14
    2298:	90 e0       	ldi	r25, 0x00	; 0
    229a:	f6 d2       	rcall	.+1516   	; 0x2888 <fputc>
    229c:	b7 01       	movw	r22, r14
    229e:	c6 01       	movw	r24, r12
    22a0:	c0 96       	adiw	r24, 0x30	; 48
    22a2:	f2 d2       	rcall	.+1508   	; 0x2888 <fputc>
    22a4:	49 c1       	rjmp	.+658    	; 0x2538 <__stack+0x339>
    22a6:	83 36       	cpi	r24, 0x63	; 99
    22a8:	31 f0       	breq	.+12     	; 0x22b6 <__stack+0xb7>
    22aa:	83 37       	cpi	r24, 0x73	; 115
    22ac:	79 f0       	breq	.+30     	; 0x22cc <__stack+0xcd>
    22ae:	83 35       	cpi	r24, 0x53	; 83
    22b0:	09 f0       	breq	.+2      	; 0x22b4 <__stack+0xb5>
    22b2:	52 c0       	rjmp	.+164    	; 0x2358 <__stack+0x159>
    22b4:	1f c0       	rjmp	.+62     	; 0x22f4 <__stack+0xf5>
    22b6:	56 01       	movw	r10, r12
    22b8:	32 e0       	ldi	r19, 0x02	; 2
    22ba:	a3 0e       	add	r10, r19
    22bc:	b1 1c       	adc	r11, r1
    22be:	f6 01       	movw	r30, r12
    22c0:	80 81       	ld	r24, Z
    22c2:	89 83       	std	Y+1, r24	; 0x01
    22c4:	01 e0       	ldi	r16, 0x01	; 1
    22c6:	10 e0       	ldi	r17, 0x00	; 0
    22c8:	63 01       	movw	r12, r6
    22ca:	11 c0       	rjmp	.+34     	; 0x22ee <__stack+0xef>
    22cc:	56 01       	movw	r10, r12
    22ce:	f2 e0       	ldi	r31, 0x02	; 2
    22d0:	af 0e       	add	r10, r31
    22d2:	b1 1c       	adc	r11, r1
    22d4:	f6 01       	movw	r30, r12
    22d6:	c0 80       	ld	r12, Z
    22d8:	d1 80       	ldd	r13, Z+1	; 0x01
    22da:	96 fe       	sbrs	r9, 6
    22dc:	03 c0       	rjmp	.+6      	; 0x22e4 <__stack+0xe5>
    22de:	61 2f       	mov	r22, r17
    22e0:	70 e0       	ldi	r23, 0x00	; 0
    22e2:	02 c0       	rjmp	.+4      	; 0x22e8 <__stack+0xe9>
    22e4:	6f ef       	ldi	r22, 0xFF	; 255
    22e6:	7f ef       	ldi	r23, 0xFF	; 255
    22e8:	c6 01       	movw	r24, r12
    22ea:	79 d2       	rcall	.+1266   	; 0x27de <strnlen>
    22ec:	8c 01       	movw	r16, r24
    22ee:	f9 2d       	mov	r31, r9
    22f0:	ff 77       	andi	r31, 0x7F	; 127
    22f2:	13 c0       	rjmp	.+38     	; 0x231a <__stack+0x11b>
    22f4:	56 01       	movw	r10, r12
    22f6:	22 e0       	ldi	r18, 0x02	; 2
    22f8:	a2 0e       	add	r10, r18
    22fa:	b1 1c       	adc	r11, r1
    22fc:	f6 01       	movw	r30, r12
    22fe:	c0 80       	ld	r12, Z
    2300:	d1 80       	ldd	r13, Z+1	; 0x01
    2302:	96 fe       	sbrs	r9, 6
    2304:	03 c0       	rjmp	.+6      	; 0x230c <__stack+0x10d>
    2306:	61 2f       	mov	r22, r17
    2308:	70 e0       	ldi	r23, 0x00	; 0
    230a:	02 c0       	rjmp	.+4      	; 0x2310 <__stack+0x111>
    230c:	6f ef       	ldi	r22, 0xFF	; 255
    230e:	7f ef       	ldi	r23, 0xFF	; 255
    2310:	c6 01       	movw	r24, r12
    2312:	5a d2       	rcall	.+1204   	; 0x27c8 <strnlen_P>
    2314:	8c 01       	movw	r16, r24
    2316:	f9 2d       	mov	r31, r9
    2318:	f0 68       	ori	r31, 0x80	; 128
    231a:	9f 2e       	mov	r9, r31
    231c:	f3 fd       	sbrc	r31, 3
    231e:	18 c0       	rjmp	.+48     	; 0x2350 <__stack+0x151>
    2320:	85 2d       	mov	r24, r5
    2322:	90 e0       	ldi	r25, 0x00	; 0
    2324:	08 17       	cp	r16, r24
    2326:	19 07       	cpc	r17, r25
    2328:	98 f4       	brcc	.+38     	; 0x2350 <__stack+0x151>
    232a:	b7 01       	movw	r22, r14
    232c:	80 e2       	ldi	r24, 0x20	; 32
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	ab d2       	rcall	.+1366   	; 0x2888 <fputc>
    2332:	5a 94       	dec	r5
    2334:	f5 cf       	rjmp	.-22     	; 0x2320 <__stack+0x121>
    2336:	f6 01       	movw	r30, r12
    2338:	97 fc       	sbrc	r9, 7
    233a:	85 91       	lpm	r24, Z+
    233c:	97 fe       	sbrs	r9, 7
    233e:	81 91       	ld	r24, Z+
    2340:	6f 01       	movw	r12, r30
    2342:	b7 01       	movw	r22, r14
    2344:	90 e0       	ldi	r25, 0x00	; 0
    2346:	a0 d2       	rcall	.+1344   	; 0x2888 <fputc>
    2348:	51 10       	cpse	r5, r1
    234a:	5a 94       	dec	r5
    234c:	01 50       	subi	r16, 0x01	; 1
    234e:	11 09       	sbc	r17, r1
    2350:	01 15       	cp	r16, r1
    2352:	11 05       	cpc	r17, r1
    2354:	81 f7       	brne	.-32     	; 0x2336 <__stack+0x137>
    2356:	f0 c0       	rjmp	.+480    	; 0x2538 <__stack+0x339>
    2358:	84 36       	cpi	r24, 0x64	; 100
    235a:	11 f0       	breq	.+4      	; 0x2360 <__stack+0x161>
    235c:	89 36       	cpi	r24, 0x69	; 105
    235e:	59 f5       	brne	.+86     	; 0x23b6 <__stack+0x1b7>
    2360:	56 01       	movw	r10, r12
    2362:	97 fe       	sbrs	r9, 7
    2364:	09 c0       	rjmp	.+18     	; 0x2378 <__stack+0x179>
    2366:	24 e0       	ldi	r18, 0x04	; 4
    2368:	a2 0e       	add	r10, r18
    236a:	b1 1c       	adc	r11, r1
    236c:	f6 01       	movw	r30, r12
    236e:	60 81       	ld	r22, Z
    2370:	71 81       	ldd	r23, Z+1	; 0x01
    2372:	82 81       	ldd	r24, Z+2	; 0x02
    2374:	93 81       	ldd	r25, Z+3	; 0x03
    2376:	0a c0       	rjmp	.+20     	; 0x238c <__stack+0x18d>
    2378:	f2 e0       	ldi	r31, 0x02	; 2
    237a:	af 0e       	add	r10, r31
    237c:	b1 1c       	adc	r11, r1
    237e:	f6 01       	movw	r30, r12
    2380:	60 81       	ld	r22, Z
    2382:	71 81       	ldd	r23, Z+1	; 0x01
    2384:	07 2e       	mov	r0, r23
    2386:	00 0c       	add	r0, r0
    2388:	88 0b       	sbc	r24, r24
    238a:	99 0b       	sbc	r25, r25
    238c:	f9 2d       	mov	r31, r9
    238e:	ff 76       	andi	r31, 0x6F	; 111
    2390:	9f 2e       	mov	r9, r31
    2392:	97 ff       	sbrs	r25, 7
    2394:	09 c0       	rjmp	.+18     	; 0x23a8 <__stack+0x1a9>
    2396:	90 95       	com	r25
    2398:	80 95       	com	r24
    239a:	70 95       	com	r23
    239c:	61 95       	neg	r22
    239e:	7f 4f       	sbci	r23, 0xFF	; 255
    23a0:	8f 4f       	sbci	r24, 0xFF	; 255
    23a2:	9f 4f       	sbci	r25, 0xFF	; 255
    23a4:	f0 68       	ori	r31, 0x80	; 128
    23a6:	9f 2e       	mov	r9, r31
    23a8:	2a e0       	ldi	r18, 0x0A	; 10
    23aa:	30 e0       	ldi	r19, 0x00	; 0
    23ac:	a3 01       	movw	r20, r6
    23ae:	ee d2       	rcall	.+1500   	; 0x298c <__ultoa_invert>
    23b0:	c8 2e       	mov	r12, r24
    23b2:	c6 18       	sub	r12, r6
    23b4:	3e c0       	rjmp	.+124    	; 0x2432 <__stack+0x233>
    23b6:	09 2d       	mov	r16, r9
    23b8:	85 37       	cpi	r24, 0x75	; 117
    23ba:	21 f4       	brne	.+8      	; 0x23c4 <__stack+0x1c5>
    23bc:	0f 7e       	andi	r16, 0xEF	; 239
    23be:	2a e0       	ldi	r18, 0x0A	; 10
    23c0:	30 e0       	ldi	r19, 0x00	; 0
    23c2:	1d c0       	rjmp	.+58     	; 0x23fe <__stack+0x1ff>
    23c4:	09 7f       	andi	r16, 0xF9	; 249
    23c6:	8f 36       	cpi	r24, 0x6F	; 111
    23c8:	91 f0       	breq	.+36     	; 0x23ee <__stack+0x1ef>
    23ca:	18 f4       	brcc	.+6      	; 0x23d2 <__stack+0x1d3>
    23cc:	88 35       	cpi	r24, 0x58	; 88
    23ce:	59 f0       	breq	.+22     	; 0x23e6 <__stack+0x1e7>
    23d0:	bc c0       	rjmp	.+376    	; 0x254a <__stack+0x34b>
    23d2:	80 37       	cpi	r24, 0x70	; 112
    23d4:	19 f0       	breq	.+6      	; 0x23dc <__stack+0x1dd>
    23d6:	88 37       	cpi	r24, 0x78	; 120
    23d8:	11 f0       	breq	.+4      	; 0x23de <__stack+0x1df>
    23da:	b7 c0       	rjmp	.+366    	; 0x254a <__stack+0x34b>
    23dc:	00 61       	ori	r16, 0x10	; 16
    23de:	04 ff       	sbrs	r16, 4
    23e0:	09 c0       	rjmp	.+18     	; 0x23f4 <__stack+0x1f5>
    23e2:	04 60       	ori	r16, 0x04	; 4
    23e4:	07 c0       	rjmp	.+14     	; 0x23f4 <__stack+0x1f5>
    23e6:	94 fe       	sbrs	r9, 4
    23e8:	08 c0       	rjmp	.+16     	; 0x23fa <__stack+0x1fb>
    23ea:	06 60       	ori	r16, 0x06	; 6
    23ec:	06 c0       	rjmp	.+12     	; 0x23fa <__stack+0x1fb>
    23ee:	28 e0       	ldi	r18, 0x08	; 8
    23f0:	30 e0       	ldi	r19, 0x00	; 0
    23f2:	05 c0       	rjmp	.+10     	; 0x23fe <__stack+0x1ff>
    23f4:	20 e1       	ldi	r18, 0x10	; 16
    23f6:	30 e0       	ldi	r19, 0x00	; 0
    23f8:	02 c0       	rjmp	.+4      	; 0x23fe <__stack+0x1ff>
    23fa:	20 e1       	ldi	r18, 0x10	; 16
    23fc:	32 e0       	ldi	r19, 0x02	; 2
    23fe:	56 01       	movw	r10, r12
    2400:	07 ff       	sbrs	r16, 7
    2402:	09 c0       	rjmp	.+18     	; 0x2416 <__stack+0x217>
    2404:	84 e0       	ldi	r24, 0x04	; 4
    2406:	a8 0e       	add	r10, r24
    2408:	b1 1c       	adc	r11, r1
    240a:	f6 01       	movw	r30, r12
    240c:	60 81       	ld	r22, Z
    240e:	71 81       	ldd	r23, Z+1	; 0x01
    2410:	82 81       	ldd	r24, Z+2	; 0x02
    2412:	93 81       	ldd	r25, Z+3	; 0x03
    2414:	08 c0       	rjmp	.+16     	; 0x2426 <__stack+0x227>
    2416:	f2 e0       	ldi	r31, 0x02	; 2
    2418:	af 0e       	add	r10, r31
    241a:	b1 1c       	adc	r11, r1
    241c:	f6 01       	movw	r30, r12
    241e:	60 81       	ld	r22, Z
    2420:	71 81       	ldd	r23, Z+1	; 0x01
    2422:	80 e0       	ldi	r24, 0x00	; 0
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	a3 01       	movw	r20, r6
    2428:	b1 d2       	rcall	.+1378   	; 0x298c <__ultoa_invert>
    242a:	c8 2e       	mov	r12, r24
    242c:	c6 18       	sub	r12, r6
    242e:	0f 77       	andi	r16, 0x7F	; 127
    2430:	90 2e       	mov	r9, r16
    2432:	96 fe       	sbrs	r9, 6
    2434:	0b c0       	rjmp	.+22     	; 0x244c <__stack+0x24d>
    2436:	09 2d       	mov	r16, r9
    2438:	0e 7f       	andi	r16, 0xFE	; 254
    243a:	c1 16       	cp	r12, r17
    243c:	50 f4       	brcc	.+20     	; 0x2452 <__stack+0x253>
    243e:	94 fe       	sbrs	r9, 4
    2440:	0a c0       	rjmp	.+20     	; 0x2456 <__stack+0x257>
    2442:	92 fc       	sbrc	r9, 2
    2444:	08 c0       	rjmp	.+16     	; 0x2456 <__stack+0x257>
    2446:	09 2d       	mov	r16, r9
    2448:	0e 7e       	andi	r16, 0xEE	; 238
    244a:	05 c0       	rjmp	.+10     	; 0x2456 <__stack+0x257>
    244c:	dc 2c       	mov	r13, r12
    244e:	09 2d       	mov	r16, r9
    2450:	03 c0       	rjmp	.+6      	; 0x2458 <__stack+0x259>
    2452:	dc 2c       	mov	r13, r12
    2454:	01 c0       	rjmp	.+2      	; 0x2458 <__stack+0x259>
    2456:	d1 2e       	mov	r13, r17
    2458:	04 ff       	sbrs	r16, 4
    245a:	0d c0       	rjmp	.+26     	; 0x2476 <__stack+0x277>
    245c:	fe 01       	movw	r30, r28
    245e:	ec 0d       	add	r30, r12
    2460:	f1 1d       	adc	r31, r1
    2462:	80 81       	ld	r24, Z
    2464:	80 33       	cpi	r24, 0x30	; 48
    2466:	11 f4       	brne	.+4      	; 0x246c <__stack+0x26d>
    2468:	09 7e       	andi	r16, 0xE9	; 233
    246a:	09 c0       	rjmp	.+18     	; 0x247e <__stack+0x27f>
    246c:	02 ff       	sbrs	r16, 2
    246e:	06 c0       	rjmp	.+12     	; 0x247c <__stack+0x27d>
    2470:	d3 94       	inc	r13
    2472:	d3 94       	inc	r13
    2474:	04 c0       	rjmp	.+8      	; 0x247e <__stack+0x27f>
    2476:	80 2f       	mov	r24, r16
    2478:	86 78       	andi	r24, 0x86	; 134
    247a:	09 f0       	breq	.+2      	; 0x247e <__stack+0x27f>
    247c:	d3 94       	inc	r13
    247e:	03 fd       	sbrc	r16, 3
    2480:	10 c0       	rjmp	.+32     	; 0x24a2 <__stack+0x2a3>
    2482:	00 ff       	sbrs	r16, 0
    2484:	06 c0       	rjmp	.+12     	; 0x2492 <__stack+0x293>
    2486:	1c 2d       	mov	r17, r12
    2488:	d5 14       	cp	r13, r5
    248a:	78 f4       	brcc	.+30     	; 0x24aa <__stack+0x2ab>
    248c:	15 0d       	add	r17, r5
    248e:	1d 19       	sub	r17, r13
    2490:	0c c0       	rjmp	.+24     	; 0x24aa <__stack+0x2ab>
    2492:	d5 14       	cp	r13, r5
    2494:	50 f4       	brcc	.+20     	; 0x24aa <__stack+0x2ab>
    2496:	b7 01       	movw	r22, r14
    2498:	80 e2       	ldi	r24, 0x20	; 32
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	f5 d1       	rcall	.+1002   	; 0x2888 <fputc>
    249e:	d3 94       	inc	r13
    24a0:	f8 cf       	rjmp	.-16     	; 0x2492 <__stack+0x293>
    24a2:	d5 14       	cp	r13, r5
    24a4:	10 f4       	brcc	.+4      	; 0x24aa <__stack+0x2ab>
    24a6:	5d 18       	sub	r5, r13
    24a8:	01 c0       	rjmp	.+2      	; 0x24ac <__stack+0x2ad>
    24aa:	51 2c       	mov	r5, r1
    24ac:	04 ff       	sbrs	r16, 4
    24ae:	0f c0       	rjmp	.+30     	; 0x24ce <__stack+0x2cf>
    24b0:	b7 01       	movw	r22, r14
    24b2:	80 e3       	ldi	r24, 0x30	; 48
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	e8 d1       	rcall	.+976    	; 0x2888 <fputc>
    24b8:	02 ff       	sbrs	r16, 2
    24ba:	16 c0       	rjmp	.+44     	; 0x24e8 <__stack+0x2e9>
    24bc:	01 fd       	sbrc	r16, 1
    24be:	03 c0       	rjmp	.+6      	; 0x24c6 <__stack+0x2c7>
    24c0:	88 e7       	ldi	r24, 0x78	; 120
    24c2:	90 e0       	ldi	r25, 0x00	; 0
    24c4:	02 c0       	rjmp	.+4      	; 0x24ca <__stack+0x2cb>
    24c6:	88 e5       	ldi	r24, 0x58	; 88
    24c8:	90 e0       	ldi	r25, 0x00	; 0
    24ca:	b7 01       	movw	r22, r14
    24cc:	0c c0       	rjmp	.+24     	; 0x24e6 <__stack+0x2e7>
    24ce:	80 2f       	mov	r24, r16
    24d0:	86 78       	andi	r24, 0x86	; 134
    24d2:	51 f0       	breq	.+20     	; 0x24e8 <__stack+0x2e9>
    24d4:	01 ff       	sbrs	r16, 1
    24d6:	02 c0       	rjmp	.+4      	; 0x24dc <__stack+0x2dd>
    24d8:	8b e2       	ldi	r24, 0x2B	; 43
    24da:	01 c0       	rjmp	.+2      	; 0x24de <__stack+0x2df>
    24dc:	80 e2       	ldi	r24, 0x20	; 32
    24de:	07 fd       	sbrc	r16, 7
    24e0:	8d e2       	ldi	r24, 0x2D	; 45
    24e2:	b7 01       	movw	r22, r14
    24e4:	90 e0       	ldi	r25, 0x00	; 0
    24e6:	d0 d1       	rcall	.+928    	; 0x2888 <fputc>
    24e8:	c1 16       	cp	r12, r17
    24ea:	30 f4       	brcc	.+12     	; 0x24f8 <__stack+0x2f9>
    24ec:	b7 01       	movw	r22, r14
    24ee:	80 e3       	ldi	r24, 0x30	; 48
    24f0:	90 e0       	ldi	r25, 0x00	; 0
    24f2:	ca d1       	rcall	.+916    	; 0x2888 <fputc>
    24f4:	11 50       	subi	r17, 0x01	; 1
    24f6:	f8 cf       	rjmp	.-16     	; 0x24e8 <__stack+0x2e9>
    24f8:	ca 94       	dec	r12
    24fa:	f3 01       	movw	r30, r6
    24fc:	ec 0d       	add	r30, r12
    24fe:	f1 1d       	adc	r31, r1
    2500:	80 81       	ld	r24, Z
    2502:	b7 01       	movw	r22, r14
    2504:	90 e0       	ldi	r25, 0x00	; 0
    2506:	c0 d1       	rcall	.+896    	; 0x2888 <fputc>
    2508:	c1 10       	cpse	r12, r1
    250a:	f6 cf       	rjmp	.-20     	; 0x24f8 <__stack+0x2f9>
    250c:	15 c0       	rjmp	.+42     	; 0x2538 <__stack+0x339>
    250e:	f4 e0       	ldi	r31, 0x04	; 4
    2510:	f5 15       	cp	r31, r5
    2512:	50 f5       	brcc	.+84     	; 0x2568 <__stack+0x369>
    2514:	84 e0       	ldi	r24, 0x04	; 4
    2516:	58 1a       	sub	r5, r24
    2518:	93 fe       	sbrs	r9, 3
    251a:	1e c0       	rjmp	.+60     	; 0x2558 <__stack+0x359>
    251c:	01 11       	cpse	r16, r1
    251e:	25 c0       	rjmp	.+74     	; 0x256a <__stack+0x36b>
    2520:	2c 85       	ldd	r18, Y+12	; 0x0c
    2522:	23 ff       	sbrs	r18, 3
    2524:	27 c0       	rjmp	.+78     	; 0x2574 <__stack+0x375>
    2526:	02 e1       	ldi	r16, 0x12	; 18
    2528:	11 e0       	ldi	r17, 0x01	; 1
    252a:	39 2d       	mov	r19, r9
    252c:	30 71       	andi	r19, 0x10	; 16
    252e:	93 2e       	mov	r9, r19
    2530:	f8 01       	movw	r30, r16
    2532:	84 91       	lpm	r24, Z
    2534:	81 11       	cpse	r24, r1
    2536:	21 c0       	rjmp	.+66     	; 0x257a <__stack+0x37b>
    2538:	55 20       	and	r5, r5
    253a:	09 f4       	brne	.+2      	; 0x253e <__stack+0x33f>
    253c:	fc cc       	rjmp	.-1544   	; 0x1f36 <vfprintf+0x7e>
    253e:	b7 01       	movw	r22, r14
    2540:	80 e2       	ldi	r24, 0x20	; 32
    2542:	90 e0       	ldi	r25, 0x00	; 0
    2544:	a1 d1       	rcall	.+834    	; 0x2888 <fputc>
    2546:	5a 94       	dec	r5
    2548:	f7 cf       	rjmp	.-18     	; 0x2538 <__stack+0x339>
    254a:	f7 01       	movw	r30, r14
    254c:	86 81       	ldd	r24, Z+6	; 0x06
    254e:	97 81       	ldd	r25, Z+7	; 0x07
    2550:	23 c0       	rjmp	.+70     	; 0x2598 <__stack+0x399>
    2552:	8f ef       	ldi	r24, 0xFF	; 255
    2554:	9f ef       	ldi	r25, 0xFF	; 255
    2556:	20 c0       	rjmp	.+64     	; 0x2598 <__stack+0x399>
    2558:	b7 01       	movw	r22, r14
    255a:	80 e2       	ldi	r24, 0x20	; 32
    255c:	90 e0       	ldi	r25, 0x00	; 0
    255e:	94 d1       	rcall	.+808    	; 0x2888 <fputc>
    2560:	5a 94       	dec	r5
    2562:	51 10       	cpse	r5, r1
    2564:	f9 cf       	rjmp	.-14     	; 0x2558 <__stack+0x359>
    2566:	da cf       	rjmp	.-76     	; 0x251c <__stack+0x31d>
    2568:	51 2c       	mov	r5, r1
    256a:	b7 01       	movw	r22, r14
    256c:	80 2f       	mov	r24, r16
    256e:	90 e0       	ldi	r25, 0x00	; 0
    2570:	8b d1       	rcall	.+790    	; 0x2888 <fputc>
    2572:	d6 cf       	rjmp	.-84     	; 0x2520 <__stack+0x321>
    2574:	06 e1       	ldi	r16, 0x16	; 22
    2576:	11 e0       	ldi	r17, 0x01	; 1
    2578:	d8 cf       	rjmp	.-80     	; 0x252a <__stack+0x32b>
    257a:	91 10       	cpse	r9, r1
    257c:	80 52       	subi	r24, 0x20	; 32
    257e:	b7 01       	movw	r22, r14
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	82 d1       	rcall	.+772    	; 0x2888 <fputc>
    2584:	0f 5f       	subi	r16, 0xFF	; 255
    2586:	1f 4f       	sbci	r17, 0xFF	; 255
    2588:	d3 cf       	rjmp	.-90     	; 0x2530 <__stack+0x331>
    258a:	23 e0       	ldi	r18, 0x03	; 3
    258c:	25 15       	cp	r18, r5
    258e:	10 f4       	brcc	.+4      	; 0x2594 <__stack+0x395>
    2590:	83 e0       	ldi	r24, 0x03	; 3
    2592:	c1 cf       	rjmp	.-126    	; 0x2516 <__stack+0x317>
    2594:	51 2c       	mov	r5, r1
    2596:	c4 cf       	rjmp	.-120    	; 0x2520 <__stack+0x321>
    2598:	60 96       	adiw	r28, 0x10	; 16
    259a:	0f b6       	in	r0, 0x3f	; 63
    259c:	f8 94       	cli
    259e:	de bf       	out	0x3e, r29	; 62
    25a0:	0f be       	out	0x3f, r0	; 63
    25a2:	cd bf       	out	0x3d, r28	; 61
    25a4:	df 91       	pop	r29
    25a6:	cf 91       	pop	r28
    25a8:	1f 91       	pop	r17
    25aa:	0f 91       	pop	r16
    25ac:	ff 90       	pop	r15
    25ae:	ef 90       	pop	r14
    25b0:	df 90       	pop	r13
    25b2:	cf 90       	pop	r12
    25b4:	bf 90       	pop	r11
    25b6:	af 90       	pop	r10
    25b8:	9f 90       	pop	r9
    25ba:	8f 90       	pop	r8
    25bc:	7f 90       	pop	r7
    25be:	6f 90       	pop	r6
    25c0:	5f 90       	pop	r5
    25c2:	4f 90       	pop	r4
    25c4:	3f 90       	pop	r3
    25c6:	2f 90       	pop	r2
    25c8:	08 95       	ret

000025ca <__divmodhi4>:
    25ca:	97 fb       	bst	r25, 7
    25cc:	07 2e       	mov	r0, r23
    25ce:	16 f4       	brtc	.+4      	; 0x25d4 <__divmodhi4+0xa>
    25d0:	00 94       	com	r0
    25d2:	06 d0       	rcall	.+12     	; 0x25e0 <__divmodhi4_neg1>
    25d4:	77 fd       	sbrc	r23, 7
    25d6:	08 d0       	rcall	.+16     	; 0x25e8 <__divmodhi4_neg2>
    25d8:	0b d0       	rcall	.+22     	; 0x25f0 <__udivmodhi4>
    25da:	07 fc       	sbrc	r0, 7
    25dc:	05 d0       	rcall	.+10     	; 0x25e8 <__divmodhi4_neg2>
    25de:	3e f4       	brtc	.+14     	; 0x25ee <__divmodhi4_exit>

000025e0 <__divmodhi4_neg1>:
    25e0:	90 95       	com	r25
    25e2:	81 95       	neg	r24
    25e4:	9f 4f       	sbci	r25, 0xFF	; 255
    25e6:	08 95       	ret

000025e8 <__divmodhi4_neg2>:
    25e8:	70 95       	com	r23
    25ea:	61 95       	neg	r22
    25ec:	7f 4f       	sbci	r23, 0xFF	; 255

000025ee <__divmodhi4_exit>:
    25ee:	08 95       	ret

000025f0 <__udivmodhi4>:
    25f0:	aa 1b       	sub	r26, r26
    25f2:	bb 1b       	sub	r27, r27
    25f4:	51 e1       	ldi	r21, 0x11	; 17
    25f6:	07 c0       	rjmp	.+14     	; 0x2606 <__udivmodhi4_ep>

000025f8 <__udivmodhi4_loop>:
    25f8:	aa 1f       	adc	r26, r26
    25fa:	bb 1f       	adc	r27, r27
    25fc:	a6 17       	cp	r26, r22
    25fe:	b7 07       	cpc	r27, r23
    2600:	10 f0       	brcs	.+4      	; 0x2606 <__udivmodhi4_ep>
    2602:	a6 1b       	sub	r26, r22
    2604:	b7 0b       	sbc	r27, r23

00002606 <__udivmodhi4_ep>:
    2606:	88 1f       	adc	r24, r24
    2608:	99 1f       	adc	r25, r25
    260a:	5a 95       	dec	r21
    260c:	a9 f7       	brne	.-22     	; 0x25f8 <__udivmodhi4_loop>
    260e:	80 95       	com	r24
    2610:	90 95       	com	r25
    2612:	bc 01       	movw	r22, r24
    2614:	cd 01       	movw	r24, r26
    2616:	08 95       	ret

00002618 <__ftoa_engine>:
    2618:	28 30       	cpi	r18, 0x08	; 8
    261a:	08 f0       	brcs	.+2      	; 0x261e <__ftoa_engine+0x6>
    261c:	27 e0       	ldi	r18, 0x07	; 7
    261e:	33 27       	eor	r19, r19
    2620:	da 01       	movw	r26, r20
    2622:	99 0f       	add	r25, r25
    2624:	31 1d       	adc	r19, r1
    2626:	87 fd       	sbrc	r24, 7
    2628:	91 60       	ori	r25, 0x01	; 1
    262a:	00 96       	adiw	r24, 0x00	; 0
    262c:	61 05       	cpc	r22, r1
    262e:	71 05       	cpc	r23, r1
    2630:	39 f4       	brne	.+14     	; 0x2640 <__ftoa_engine+0x28>
    2632:	32 60       	ori	r19, 0x02	; 2
    2634:	2e 5f       	subi	r18, 0xFE	; 254
    2636:	3d 93       	st	X+, r19
    2638:	30 e3       	ldi	r19, 0x30	; 48
    263a:	2a 95       	dec	r18
    263c:	e1 f7       	brne	.-8      	; 0x2636 <__ftoa_engine+0x1e>
    263e:	08 95       	ret
    2640:	9f 3f       	cpi	r25, 0xFF	; 255
    2642:	30 f0       	brcs	.+12     	; 0x2650 <__ftoa_engine+0x38>
    2644:	80 38       	cpi	r24, 0x80	; 128
    2646:	71 05       	cpc	r23, r1
    2648:	61 05       	cpc	r22, r1
    264a:	09 f0       	breq	.+2      	; 0x264e <__ftoa_engine+0x36>
    264c:	3c 5f       	subi	r19, 0xFC	; 252
    264e:	3c 5f       	subi	r19, 0xFC	; 252
    2650:	3d 93       	st	X+, r19
    2652:	91 30       	cpi	r25, 0x01	; 1
    2654:	08 f0       	brcs	.+2      	; 0x2658 <__ftoa_engine+0x40>
    2656:	80 68       	ori	r24, 0x80	; 128
    2658:	91 1d       	adc	r25, r1
    265a:	df 93       	push	r29
    265c:	cf 93       	push	r28
    265e:	1f 93       	push	r17
    2660:	0f 93       	push	r16
    2662:	ff 92       	push	r15
    2664:	ef 92       	push	r14
    2666:	19 2f       	mov	r17, r25
    2668:	98 7f       	andi	r25, 0xF8	; 248
    266a:	96 95       	lsr	r25
    266c:	e9 2f       	mov	r30, r25
    266e:	96 95       	lsr	r25
    2670:	96 95       	lsr	r25
    2672:	e9 0f       	add	r30, r25
    2674:	ff 27       	eor	r31, r31
    2676:	ec 58       	subi	r30, 0x8C	; 140
    2678:	fe 4f       	sbci	r31, 0xFE	; 254
    267a:	99 27       	eor	r25, r25
    267c:	33 27       	eor	r19, r19
    267e:	ee 24       	eor	r14, r14
    2680:	ff 24       	eor	r15, r15
    2682:	a7 01       	movw	r20, r14
    2684:	e7 01       	movw	r28, r14
    2686:	05 90       	lpm	r0, Z+
    2688:	08 94       	sec
    268a:	07 94       	ror	r0
    268c:	28 f4       	brcc	.+10     	; 0x2698 <__ftoa_engine+0x80>
    268e:	36 0f       	add	r19, r22
    2690:	e7 1e       	adc	r14, r23
    2692:	f8 1e       	adc	r15, r24
    2694:	49 1f       	adc	r20, r25
    2696:	51 1d       	adc	r21, r1
    2698:	66 0f       	add	r22, r22
    269a:	77 1f       	adc	r23, r23
    269c:	88 1f       	adc	r24, r24
    269e:	99 1f       	adc	r25, r25
    26a0:	06 94       	lsr	r0
    26a2:	a1 f7       	brne	.-24     	; 0x268c <__ftoa_engine+0x74>
    26a4:	05 90       	lpm	r0, Z+
    26a6:	07 94       	ror	r0
    26a8:	28 f4       	brcc	.+10     	; 0x26b4 <__ftoa_engine+0x9c>
    26aa:	e7 0e       	add	r14, r23
    26ac:	f8 1e       	adc	r15, r24
    26ae:	49 1f       	adc	r20, r25
    26b0:	56 1f       	adc	r21, r22
    26b2:	c1 1d       	adc	r28, r1
    26b4:	77 0f       	add	r23, r23
    26b6:	88 1f       	adc	r24, r24
    26b8:	99 1f       	adc	r25, r25
    26ba:	66 1f       	adc	r22, r22
    26bc:	06 94       	lsr	r0
    26be:	a1 f7       	brne	.-24     	; 0x26a8 <__ftoa_engine+0x90>
    26c0:	05 90       	lpm	r0, Z+
    26c2:	07 94       	ror	r0
    26c4:	28 f4       	brcc	.+10     	; 0x26d0 <__ftoa_engine+0xb8>
    26c6:	f8 0e       	add	r15, r24
    26c8:	49 1f       	adc	r20, r25
    26ca:	56 1f       	adc	r21, r22
    26cc:	c7 1f       	adc	r28, r23
    26ce:	d1 1d       	adc	r29, r1
    26d0:	88 0f       	add	r24, r24
    26d2:	99 1f       	adc	r25, r25
    26d4:	66 1f       	adc	r22, r22
    26d6:	77 1f       	adc	r23, r23
    26d8:	06 94       	lsr	r0
    26da:	a1 f7       	brne	.-24     	; 0x26c4 <__ftoa_engine+0xac>
    26dc:	05 90       	lpm	r0, Z+
    26de:	07 94       	ror	r0
    26e0:	20 f4       	brcc	.+8      	; 0x26ea <__ftoa_engine+0xd2>
    26e2:	49 0f       	add	r20, r25
    26e4:	56 1f       	adc	r21, r22
    26e6:	c7 1f       	adc	r28, r23
    26e8:	d8 1f       	adc	r29, r24
    26ea:	99 0f       	add	r25, r25
    26ec:	66 1f       	adc	r22, r22
    26ee:	77 1f       	adc	r23, r23
    26f0:	88 1f       	adc	r24, r24
    26f2:	06 94       	lsr	r0
    26f4:	a9 f7       	brne	.-22     	; 0x26e0 <__ftoa_engine+0xc8>
    26f6:	84 91       	lpm	r24, Z
    26f8:	10 95       	com	r17
    26fa:	17 70       	andi	r17, 0x07	; 7
    26fc:	41 f0       	breq	.+16     	; 0x270e <__ftoa_engine+0xf6>
    26fe:	d6 95       	lsr	r29
    2700:	c7 95       	ror	r28
    2702:	57 95       	ror	r21
    2704:	47 95       	ror	r20
    2706:	f7 94       	ror	r15
    2708:	e7 94       	ror	r14
    270a:	1a 95       	dec	r17
    270c:	c1 f7       	brne	.-16     	; 0x26fe <__ftoa_engine+0xe6>
    270e:	ea e1       	ldi	r30, 0x1A	; 26
    2710:	f1 e0       	ldi	r31, 0x01	; 1
    2712:	68 94       	set
    2714:	15 90       	lpm	r1, Z+
    2716:	15 91       	lpm	r17, Z+
    2718:	35 91       	lpm	r19, Z+
    271a:	65 91       	lpm	r22, Z+
    271c:	95 91       	lpm	r25, Z+
    271e:	05 90       	lpm	r0, Z+
    2720:	7f e2       	ldi	r23, 0x2F	; 47
    2722:	73 95       	inc	r23
    2724:	e1 18       	sub	r14, r1
    2726:	f1 0a       	sbc	r15, r17
    2728:	43 0b       	sbc	r20, r19
    272a:	56 0b       	sbc	r21, r22
    272c:	c9 0b       	sbc	r28, r25
    272e:	d0 09       	sbc	r29, r0
    2730:	c0 f7       	brcc	.-16     	; 0x2722 <__ftoa_engine+0x10a>
    2732:	e1 0c       	add	r14, r1
    2734:	f1 1e       	adc	r15, r17
    2736:	43 1f       	adc	r20, r19
    2738:	56 1f       	adc	r21, r22
    273a:	c9 1f       	adc	r28, r25
    273c:	d0 1d       	adc	r29, r0
    273e:	7e f4       	brtc	.+30     	; 0x275e <__ftoa_engine+0x146>
    2740:	70 33       	cpi	r23, 0x30	; 48
    2742:	11 f4       	brne	.+4      	; 0x2748 <__ftoa_engine+0x130>
    2744:	8a 95       	dec	r24
    2746:	e6 cf       	rjmp	.-52     	; 0x2714 <__ftoa_engine+0xfc>
    2748:	e8 94       	clt
    274a:	01 50       	subi	r16, 0x01	; 1
    274c:	30 f0       	brcs	.+12     	; 0x275a <__ftoa_engine+0x142>
    274e:	08 0f       	add	r16, r24
    2750:	0a f4       	brpl	.+2      	; 0x2754 <__ftoa_engine+0x13c>
    2752:	00 27       	eor	r16, r16
    2754:	02 17       	cp	r16, r18
    2756:	08 f4       	brcc	.+2      	; 0x275a <__ftoa_engine+0x142>
    2758:	20 2f       	mov	r18, r16
    275a:	23 95       	inc	r18
    275c:	02 2f       	mov	r16, r18
    275e:	7a 33       	cpi	r23, 0x3A	; 58
    2760:	28 f0       	brcs	.+10     	; 0x276c <__ftoa_engine+0x154>
    2762:	79 e3       	ldi	r23, 0x39	; 57
    2764:	7d 93       	st	X+, r23
    2766:	2a 95       	dec	r18
    2768:	e9 f7       	brne	.-6      	; 0x2764 <__ftoa_engine+0x14c>
    276a:	10 c0       	rjmp	.+32     	; 0x278c <__ftoa_engine+0x174>
    276c:	7d 93       	st	X+, r23
    276e:	2a 95       	dec	r18
    2770:	89 f6       	brne	.-94     	; 0x2714 <__ftoa_engine+0xfc>
    2772:	06 94       	lsr	r0
    2774:	97 95       	ror	r25
    2776:	67 95       	ror	r22
    2778:	37 95       	ror	r19
    277a:	17 95       	ror	r17
    277c:	17 94       	ror	r1
    277e:	e1 18       	sub	r14, r1
    2780:	f1 0a       	sbc	r15, r17
    2782:	43 0b       	sbc	r20, r19
    2784:	56 0b       	sbc	r21, r22
    2786:	c9 0b       	sbc	r28, r25
    2788:	d0 09       	sbc	r29, r0
    278a:	98 f0       	brcs	.+38     	; 0x27b2 <__ftoa_engine+0x19a>
    278c:	23 95       	inc	r18
    278e:	7e 91       	ld	r23, -X
    2790:	73 95       	inc	r23
    2792:	7a 33       	cpi	r23, 0x3A	; 58
    2794:	08 f0       	brcs	.+2      	; 0x2798 <__ftoa_engine+0x180>
    2796:	70 e3       	ldi	r23, 0x30	; 48
    2798:	7c 93       	st	X, r23
    279a:	20 13       	cpse	r18, r16
    279c:	b8 f7       	brcc	.-18     	; 0x278c <__ftoa_engine+0x174>
    279e:	7e 91       	ld	r23, -X
    27a0:	70 61       	ori	r23, 0x10	; 16
    27a2:	7d 93       	st	X+, r23
    27a4:	30 f0       	brcs	.+12     	; 0x27b2 <__ftoa_engine+0x19a>
    27a6:	83 95       	inc	r24
    27a8:	71 e3       	ldi	r23, 0x31	; 49
    27aa:	7d 93       	st	X+, r23
    27ac:	70 e3       	ldi	r23, 0x30	; 48
    27ae:	2a 95       	dec	r18
    27b0:	e1 f7       	brne	.-8      	; 0x27aa <__ftoa_engine+0x192>
    27b2:	11 24       	eor	r1, r1
    27b4:	ef 90       	pop	r14
    27b6:	ff 90       	pop	r15
    27b8:	0f 91       	pop	r16
    27ba:	1f 91       	pop	r17
    27bc:	cf 91       	pop	r28
    27be:	df 91       	pop	r29
    27c0:	99 27       	eor	r25, r25
    27c2:	87 fd       	sbrc	r24, 7
    27c4:	90 95       	com	r25
    27c6:	08 95       	ret

000027c8 <strnlen_P>:
    27c8:	fc 01       	movw	r30, r24
    27ca:	05 90       	lpm	r0, Z+
    27cc:	61 50       	subi	r22, 0x01	; 1
    27ce:	70 40       	sbci	r23, 0x00	; 0
    27d0:	01 10       	cpse	r0, r1
    27d2:	d8 f7       	brcc	.-10     	; 0x27ca <strnlen_P+0x2>
    27d4:	80 95       	com	r24
    27d6:	90 95       	com	r25
    27d8:	8e 0f       	add	r24, r30
    27da:	9f 1f       	adc	r25, r31
    27dc:	08 95       	ret

000027de <strnlen>:
    27de:	fc 01       	movw	r30, r24
    27e0:	61 50       	subi	r22, 0x01	; 1
    27e2:	70 40       	sbci	r23, 0x00	; 0
    27e4:	01 90       	ld	r0, Z+
    27e6:	01 10       	cpse	r0, r1
    27e8:	d8 f7       	brcc	.-10     	; 0x27e0 <strnlen+0x2>
    27ea:	80 95       	com	r24
    27ec:	90 95       	com	r25
    27ee:	8e 0f       	add	r24, r30
    27f0:	9f 1f       	adc	r25, r31
    27f2:	08 95       	ret

000027f4 <fdevopen>:
    27f4:	0f 93       	push	r16
    27f6:	1f 93       	push	r17
    27f8:	cf 93       	push	r28
    27fa:	df 93       	push	r29
    27fc:	00 97       	sbiw	r24, 0x00	; 0
    27fe:	31 f4       	brne	.+12     	; 0x280c <fdevopen+0x18>
    2800:	61 15       	cp	r22, r1
    2802:	71 05       	cpc	r23, r1
    2804:	19 f4       	brne	.+6      	; 0x280c <fdevopen+0x18>
    2806:	80 e0       	ldi	r24, 0x00	; 0
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	39 c0       	rjmp	.+114    	; 0x287e <fdevopen+0x8a>
    280c:	8b 01       	movw	r16, r22
    280e:	ec 01       	movw	r28, r24
    2810:	6e e0       	ldi	r22, 0x0E	; 14
    2812:	70 e0       	ldi	r23, 0x00	; 0
    2814:	81 e0       	ldi	r24, 0x01	; 1
    2816:	90 e0       	ldi	r25, 0x00	; 0
    2818:	17 d1       	rcall	.+558    	; 0x2a48 <calloc>
    281a:	fc 01       	movw	r30, r24
    281c:	89 2b       	or	r24, r25
    281e:	99 f3       	breq	.-26     	; 0x2806 <fdevopen+0x12>
    2820:	80 e8       	ldi	r24, 0x80	; 128
    2822:	83 83       	std	Z+3, r24	; 0x03
    2824:	01 15       	cp	r16, r1
    2826:	11 05       	cpc	r17, r1
    2828:	71 f0       	breq	.+28     	; 0x2846 <fdevopen+0x52>
    282a:	13 87       	std	Z+11, r17	; 0x0b
    282c:	02 87       	std	Z+10, r16	; 0x0a
    282e:	81 e8       	ldi	r24, 0x81	; 129
    2830:	83 83       	std	Z+3, r24	; 0x03
    2832:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <__iob>
    2836:	90 91 53 04 	lds	r25, 0x0453	; 0x800453 <__iob+0x1>
    283a:	89 2b       	or	r24, r25
    283c:	21 f4       	brne	.+8      	; 0x2846 <fdevopen+0x52>
    283e:	f0 93 53 04 	sts	0x0453, r31	; 0x800453 <__iob+0x1>
    2842:	e0 93 52 04 	sts	0x0452, r30	; 0x800452 <__iob>
    2846:	20 97       	sbiw	r28, 0x00	; 0
    2848:	c9 f0       	breq	.+50     	; 0x287c <fdevopen+0x88>
    284a:	d1 87       	std	Z+9, r29	; 0x09
    284c:	c0 87       	std	Z+8, r28	; 0x08
    284e:	83 81       	ldd	r24, Z+3	; 0x03
    2850:	82 60       	ori	r24, 0x02	; 2
    2852:	83 83       	std	Z+3, r24	; 0x03
    2854:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <__iob+0x2>
    2858:	90 91 55 04 	lds	r25, 0x0455	; 0x800455 <__iob+0x3>
    285c:	89 2b       	or	r24, r25
    285e:	71 f4       	brne	.+28     	; 0x287c <fdevopen+0x88>
    2860:	f0 93 55 04 	sts	0x0455, r31	; 0x800455 <__iob+0x3>
    2864:	e0 93 54 04 	sts	0x0454, r30	; 0x800454 <__iob+0x2>
    2868:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <__iob+0x4>
    286c:	90 91 57 04 	lds	r25, 0x0457	; 0x800457 <__iob+0x5>
    2870:	89 2b       	or	r24, r25
    2872:	21 f4       	brne	.+8      	; 0x287c <fdevopen+0x88>
    2874:	f0 93 57 04 	sts	0x0457, r31	; 0x800457 <__iob+0x5>
    2878:	e0 93 56 04 	sts	0x0456, r30	; 0x800456 <__iob+0x4>
    287c:	cf 01       	movw	r24, r30
    287e:	df 91       	pop	r29
    2880:	cf 91       	pop	r28
    2882:	1f 91       	pop	r17
    2884:	0f 91       	pop	r16
    2886:	08 95       	ret

00002888 <fputc>:
    2888:	0f 93       	push	r16
    288a:	1f 93       	push	r17
    288c:	cf 93       	push	r28
    288e:	df 93       	push	r29
    2890:	fb 01       	movw	r30, r22
    2892:	23 81       	ldd	r18, Z+3	; 0x03
    2894:	21 fd       	sbrc	r18, 1
    2896:	03 c0       	rjmp	.+6      	; 0x289e <fputc+0x16>
    2898:	8f ef       	ldi	r24, 0xFF	; 255
    289a:	9f ef       	ldi	r25, 0xFF	; 255
    289c:	2c c0       	rjmp	.+88     	; 0x28f6 <fputc+0x6e>
    289e:	22 ff       	sbrs	r18, 2
    28a0:	16 c0       	rjmp	.+44     	; 0x28ce <fputc+0x46>
    28a2:	46 81       	ldd	r20, Z+6	; 0x06
    28a4:	57 81       	ldd	r21, Z+7	; 0x07
    28a6:	24 81       	ldd	r18, Z+4	; 0x04
    28a8:	35 81       	ldd	r19, Z+5	; 0x05
    28aa:	42 17       	cp	r20, r18
    28ac:	53 07       	cpc	r21, r19
    28ae:	44 f4       	brge	.+16     	; 0x28c0 <fputc+0x38>
    28b0:	a0 81       	ld	r26, Z
    28b2:	b1 81       	ldd	r27, Z+1	; 0x01
    28b4:	9d 01       	movw	r18, r26
    28b6:	2f 5f       	subi	r18, 0xFF	; 255
    28b8:	3f 4f       	sbci	r19, 0xFF	; 255
    28ba:	31 83       	std	Z+1, r19	; 0x01
    28bc:	20 83       	st	Z, r18
    28be:	8c 93       	st	X, r24
    28c0:	26 81       	ldd	r18, Z+6	; 0x06
    28c2:	37 81       	ldd	r19, Z+7	; 0x07
    28c4:	2f 5f       	subi	r18, 0xFF	; 255
    28c6:	3f 4f       	sbci	r19, 0xFF	; 255
    28c8:	37 83       	std	Z+7, r19	; 0x07
    28ca:	26 83       	std	Z+6, r18	; 0x06
    28cc:	14 c0       	rjmp	.+40     	; 0x28f6 <fputc+0x6e>
    28ce:	8b 01       	movw	r16, r22
    28d0:	ec 01       	movw	r28, r24
    28d2:	fb 01       	movw	r30, r22
    28d4:	00 84       	ldd	r0, Z+8	; 0x08
    28d6:	f1 85       	ldd	r31, Z+9	; 0x09
    28d8:	e0 2d       	mov	r30, r0
    28da:	19 95       	eicall
    28dc:	89 2b       	or	r24, r25
    28de:	e1 f6       	brne	.-72     	; 0x2898 <fputc+0x10>
    28e0:	d8 01       	movw	r26, r16
    28e2:	16 96       	adiw	r26, 0x06	; 6
    28e4:	8d 91       	ld	r24, X+
    28e6:	9c 91       	ld	r25, X
    28e8:	17 97       	sbiw	r26, 0x07	; 7
    28ea:	01 96       	adiw	r24, 0x01	; 1
    28ec:	17 96       	adiw	r26, 0x07	; 7
    28ee:	9c 93       	st	X, r25
    28f0:	8e 93       	st	-X, r24
    28f2:	16 97       	sbiw	r26, 0x06	; 6
    28f4:	ce 01       	movw	r24, r28
    28f6:	df 91       	pop	r29
    28f8:	cf 91       	pop	r28
    28fa:	1f 91       	pop	r17
    28fc:	0f 91       	pop	r16
    28fe:	08 95       	ret

00002900 <printf>:
    2900:	cf 93       	push	r28
    2902:	df 93       	push	r29
    2904:	cd b7       	in	r28, 0x3d	; 61
    2906:	de b7       	in	r29, 0x3e	; 62
    2908:	ae 01       	movw	r20, r28
    290a:	4a 5f       	subi	r20, 0xFA	; 250
    290c:	5f 4f       	sbci	r21, 0xFF	; 255
    290e:	fa 01       	movw	r30, r20
    2910:	61 91       	ld	r22, Z+
    2912:	71 91       	ld	r23, Z+
    2914:	af 01       	movw	r20, r30
    2916:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <__iob+0x2>
    291a:	90 91 55 04 	lds	r25, 0x0455	; 0x800455 <__iob+0x3>
    291e:	cc da       	rcall	.-2664   	; 0x1eb8 <vfprintf>
    2920:	df 91       	pop	r29
    2922:	cf 91       	pop	r28
    2924:	08 95       	ret

00002926 <putchar>:
    2926:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <__iob+0x2>
    292a:	70 91 55 04 	lds	r23, 0x0455	; 0x800455 <__iob+0x3>
    292e:	ac cf       	rjmp	.-168    	; 0x2888 <fputc>

00002930 <sprintf>:
    2930:	0f 93       	push	r16
    2932:	1f 93       	push	r17
    2934:	cf 93       	push	r28
    2936:	df 93       	push	r29
    2938:	cd b7       	in	r28, 0x3d	; 61
    293a:	de b7       	in	r29, 0x3e	; 62
    293c:	2e 97       	sbiw	r28, 0x0e	; 14
    293e:	0f b6       	in	r0, 0x3f	; 63
    2940:	f8 94       	cli
    2942:	de bf       	out	0x3e, r29	; 62
    2944:	0f be       	out	0x3f, r0	; 63
    2946:	cd bf       	out	0x3d, r28	; 61
    2948:	0e 89       	ldd	r16, Y+22	; 0x16
    294a:	1f 89       	ldd	r17, Y+23	; 0x17
    294c:	86 e0       	ldi	r24, 0x06	; 6
    294e:	8c 83       	std	Y+4, r24	; 0x04
    2950:	1a 83       	std	Y+2, r17	; 0x02
    2952:	09 83       	std	Y+1, r16	; 0x01
    2954:	8f ef       	ldi	r24, 0xFF	; 255
    2956:	9f e7       	ldi	r25, 0x7F	; 127
    2958:	9e 83       	std	Y+6, r25	; 0x06
    295a:	8d 83       	std	Y+5, r24	; 0x05
    295c:	ae 01       	movw	r20, r28
    295e:	46 5e       	subi	r20, 0xE6	; 230
    2960:	5f 4f       	sbci	r21, 0xFF	; 255
    2962:	68 8d       	ldd	r22, Y+24	; 0x18
    2964:	79 8d       	ldd	r23, Y+25	; 0x19
    2966:	ce 01       	movw	r24, r28
    2968:	01 96       	adiw	r24, 0x01	; 1
    296a:	a6 da       	rcall	.-2740   	; 0x1eb8 <vfprintf>
    296c:	ef 81       	ldd	r30, Y+7	; 0x07
    296e:	f8 85       	ldd	r31, Y+8	; 0x08
    2970:	e0 0f       	add	r30, r16
    2972:	f1 1f       	adc	r31, r17
    2974:	10 82       	st	Z, r1
    2976:	2e 96       	adiw	r28, 0x0e	; 14
    2978:	0f b6       	in	r0, 0x3f	; 63
    297a:	f8 94       	cli
    297c:	de bf       	out	0x3e, r29	; 62
    297e:	0f be       	out	0x3f, r0	; 63
    2980:	cd bf       	out	0x3d, r28	; 61
    2982:	df 91       	pop	r29
    2984:	cf 91       	pop	r28
    2986:	1f 91       	pop	r17
    2988:	0f 91       	pop	r16
    298a:	08 95       	ret

0000298c <__ultoa_invert>:
    298c:	fa 01       	movw	r30, r20
    298e:	aa 27       	eor	r26, r26
    2990:	28 30       	cpi	r18, 0x08	; 8
    2992:	51 f1       	breq	.+84     	; 0x29e8 <__ultoa_invert+0x5c>
    2994:	20 31       	cpi	r18, 0x10	; 16
    2996:	81 f1       	breq	.+96     	; 0x29f8 <__ultoa_invert+0x6c>
    2998:	e8 94       	clt
    299a:	6f 93       	push	r22
    299c:	6e 7f       	andi	r22, 0xFE	; 254
    299e:	6e 5f       	subi	r22, 0xFE	; 254
    29a0:	7f 4f       	sbci	r23, 0xFF	; 255
    29a2:	8f 4f       	sbci	r24, 0xFF	; 255
    29a4:	9f 4f       	sbci	r25, 0xFF	; 255
    29a6:	af 4f       	sbci	r26, 0xFF	; 255
    29a8:	b1 e0       	ldi	r27, 0x01	; 1
    29aa:	3e d0       	rcall	.+124    	; 0x2a28 <__ultoa_invert+0x9c>
    29ac:	b4 e0       	ldi	r27, 0x04	; 4
    29ae:	3c d0       	rcall	.+120    	; 0x2a28 <__ultoa_invert+0x9c>
    29b0:	67 0f       	add	r22, r23
    29b2:	78 1f       	adc	r23, r24
    29b4:	89 1f       	adc	r24, r25
    29b6:	9a 1f       	adc	r25, r26
    29b8:	a1 1d       	adc	r26, r1
    29ba:	68 0f       	add	r22, r24
    29bc:	79 1f       	adc	r23, r25
    29be:	8a 1f       	adc	r24, r26
    29c0:	91 1d       	adc	r25, r1
    29c2:	a1 1d       	adc	r26, r1
    29c4:	6a 0f       	add	r22, r26
    29c6:	71 1d       	adc	r23, r1
    29c8:	81 1d       	adc	r24, r1
    29ca:	91 1d       	adc	r25, r1
    29cc:	a1 1d       	adc	r26, r1
    29ce:	20 d0       	rcall	.+64     	; 0x2a10 <__ultoa_invert+0x84>
    29d0:	09 f4       	brne	.+2      	; 0x29d4 <__ultoa_invert+0x48>
    29d2:	68 94       	set
    29d4:	3f 91       	pop	r19
    29d6:	2a e0       	ldi	r18, 0x0A	; 10
    29d8:	26 9f       	mul	r18, r22
    29da:	11 24       	eor	r1, r1
    29dc:	30 19       	sub	r19, r0
    29de:	30 5d       	subi	r19, 0xD0	; 208
    29e0:	31 93       	st	Z+, r19
    29e2:	de f6       	brtc	.-74     	; 0x299a <__ultoa_invert+0xe>
    29e4:	cf 01       	movw	r24, r30
    29e6:	08 95       	ret
    29e8:	46 2f       	mov	r20, r22
    29ea:	47 70       	andi	r20, 0x07	; 7
    29ec:	40 5d       	subi	r20, 0xD0	; 208
    29ee:	41 93       	st	Z+, r20
    29f0:	b3 e0       	ldi	r27, 0x03	; 3
    29f2:	0f d0       	rcall	.+30     	; 0x2a12 <__ultoa_invert+0x86>
    29f4:	c9 f7       	brne	.-14     	; 0x29e8 <__ultoa_invert+0x5c>
    29f6:	f6 cf       	rjmp	.-20     	; 0x29e4 <__ultoa_invert+0x58>
    29f8:	46 2f       	mov	r20, r22
    29fa:	4f 70       	andi	r20, 0x0F	; 15
    29fc:	40 5d       	subi	r20, 0xD0	; 208
    29fe:	4a 33       	cpi	r20, 0x3A	; 58
    2a00:	18 f0       	brcs	.+6      	; 0x2a08 <__ultoa_invert+0x7c>
    2a02:	49 5d       	subi	r20, 0xD9	; 217
    2a04:	31 fd       	sbrc	r19, 1
    2a06:	40 52       	subi	r20, 0x20	; 32
    2a08:	41 93       	st	Z+, r20
    2a0a:	02 d0       	rcall	.+4      	; 0x2a10 <__ultoa_invert+0x84>
    2a0c:	a9 f7       	brne	.-22     	; 0x29f8 <__ultoa_invert+0x6c>
    2a0e:	ea cf       	rjmp	.-44     	; 0x29e4 <__ultoa_invert+0x58>
    2a10:	b4 e0       	ldi	r27, 0x04	; 4
    2a12:	a6 95       	lsr	r26
    2a14:	97 95       	ror	r25
    2a16:	87 95       	ror	r24
    2a18:	77 95       	ror	r23
    2a1a:	67 95       	ror	r22
    2a1c:	ba 95       	dec	r27
    2a1e:	c9 f7       	brne	.-14     	; 0x2a12 <__ultoa_invert+0x86>
    2a20:	00 97       	sbiw	r24, 0x00	; 0
    2a22:	61 05       	cpc	r22, r1
    2a24:	71 05       	cpc	r23, r1
    2a26:	08 95       	ret
    2a28:	9b 01       	movw	r18, r22
    2a2a:	ac 01       	movw	r20, r24
    2a2c:	0a 2e       	mov	r0, r26
    2a2e:	06 94       	lsr	r0
    2a30:	57 95       	ror	r21
    2a32:	47 95       	ror	r20
    2a34:	37 95       	ror	r19
    2a36:	27 95       	ror	r18
    2a38:	ba 95       	dec	r27
    2a3a:	c9 f7       	brne	.-14     	; 0x2a2e <__ultoa_invert+0xa2>
    2a3c:	62 0f       	add	r22, r18
    2a3e:	73 1f       	adc	r23, r19
    2a40:	84 1f       	adc	r24, r20
    2a42:	95 1f       	adc	r25, r21
    2a44:	a0 1d       	adc	r26, r0
    2a46:	08 95       	ret

00002a48 <calloc>:
    2a48:	0f 93       	push	r16
    2a4a:	1f 93       	push	r17
    2a4c:	cf 93       	push	r28
    2a4e:	df 93       	push	r29
    2a50:	86 9f       	mul	r24, r22
    2a52:	80 01       	movw	r16, r0
    2a54:	87 9f       	mul	r24, r23
    2a56:	10 0d       	add	r17, r0
    2a58:	96 9f       	mul	r25, r22
    2a5a:	10 0d       	add	r17, r0
    2a5c:	11 24       	eor	r1, r1
    2a5e:	c8 01       	movw	r24, r16
    2a60:	0d d0       	rcall	.+26     	; 0x2a7c <malloc>
    2a62:	ec 01       	movw	r28, r24
    2a64:	00 97       	sbiw	r24, 0x00	; 0
    2a66:	21 f0       	breq	.+8      	; 0x2a70 <calloc+0x28>
    2a68:	a8 01       	movw	r20, r16
    2a6a:	60 e0       	ldi	r22, 0x00	; 0
    2a6c:	70 e0       	ldi	r23, 0x00	; 0
    2a6e:	27 d1       	rcall	.+590    	; 0x2cbe <memset>
    2a70:	ce 01       	movw	r24, r28
    2a72:	df 91       	pop	r29
    2a74:	cf 91       	pop	r28
    2a76:	1f 91       	pop	r17
    2a78:	0f 91       	pop	r16
    2a7a:	08 95       	ret

00002a7c <malloc>:
    2a7c:	0f 93       	push	r16
    2a7e:	1f 93       	push	r17
    2a80:	cf 93       	push	r28
    2a82:	df 93       	push	r29
    2a84:	82 30       	cpi	r24, 0x02	; 2
    2a86:	91 05       	cpc	r25, r1
    2a88:	10 f4       	brcc	.+4      	; 0x2a8e <malloc+0x12>
    2a8a:	82 e0       	ldi	r24, 0x02	; 2
    2a8c:	90 e0       	ldi	r25, 0x00	; 0
    2a8e:	e0 91 5a 04 	lds	r30, 0x045A	; 0x80045a <__flp>
    2a92:	f0 91 5b 04 	lds	r31, 0x045B	; 0x80045b <__flp+0x1>
    2a96:	20 e0       	ldi	r18, 0x00	; 0
    2a98:	30 e0       	ldi	r19, 0x00	; 0
    2a9a:	a0 e0       	ldi	r26, 0x00	; 0
    2a9c:	b0 e0       	ldi	r27, 0x00	; 0
    2a9e:	30 97       	sbiw	r30, 0x00	; 0
    2aa0:	19 f1       	breq	.+70     	; 0x2ae8 <malloc+0x6c>
    2aa2:	40 81       	ld	r20, Z
    2aa4:	51 81       	ldd	r21, Z+1	; 0x01
    2aa6:	02 81       	ldd	r16, Z+2	; 0x02
    2aa8:	13 81       	ldd	r17, Z+3	; 0x03
    2aaa:	48 17       	cp	r20, r24
    2aac:	59 07       	cpc	r21, r25
    2aae:	c8 f0       	brcs	.+50     	; 0x2ae2 <malloc+0x66>
    2ab0:	84 17       	cp	r24, r20
    2ab2:	95 07       	cpc	r25, r21
    2ab4:	69 f4       	brne	.+26     	; 0x2ad0 <malloc+0x54>
    2ab6:	10 97       	sbiw	r26, 0x00	; 0
    2ab8:	31 f0       	breq	.+12     	; 0x2ac6 <malloc+0x4a>
    2aba:	12 96       	adiw	r26, 0x02	; 2
    2abc:	0c 93       	st	X, r16
    2abe:	12 97       	sbiw	r26, 0x02	; 2
    2ac0:	13 96       	adiw	r26, 0x03	; 3
    2ac2:	1c 93       	st	X, r17
    2ac4:	27 c0       	rjmp	.+78     	; 0x2b14 <malloc+0x98>
    2ac6:	00 93 5a 04 	sts	0x045A, r16	; 0x80045a <__flp>
    2aca:	10 93 5b 04 	sts	0x045B, r17	; 0x80045b <__flp+0x1>
    2ace:	22 c0       	rjmp	.+68     	; 0x2b14 <malloc+0x98>
    2ad0:	21 15       	cp	r18, r1
    2ad2:	31 05       	cpc	r19, r1
    2ad4:	19 f0       	breq	.+6      	; 0x2adc <malloc+0x60>
    2ad6:	42 17       	cp	r20, r18
    2ad8:	53 07       	cpc	r21, r19
    2ada:	18 f4       	brcc	.+6      	; 0x2ae2 <malloc+0x66>
    2adc:	9a 01       	movw	r18, r20
    2ade:	bd 01       	movw	r22, r26
    2ae0:	ef 01       	movw	r28, r30
    2ae2:	df 01       	movw	r26, r30
    2ae4:	f8 01       	movw	r30, r16
    2ae6:	db cf       	rjmp	.-74     	; 0x2a9e <malloc+0x22>
    2ae8:	21 15       	cp	r18, r1
    2aea:	31 05       	cpc	r19, r1
    2aec:	f9 f0       	breq	.+62     	; 0x2b2c <malloc+0xb0>
    2aee:	28 1b       	sub	r18, r24
    2af0:	39 0b       	sbc	r19, r25
    2af2:	24 30       	cpi	r18, 0x04	; 4
    2af4:	31 05       	cpc	r19, r1
    2af6:	80 f4       	brcc	.+32     	; 0x2b18 <malloc+0x9c>
    2af8:	8a 81       	ldd	r24, Y+2	; 0x02
    2afa:	9b 81       	ldd	r25, Y+3	; 0x03
    2afc:	61 15       	cp	r22, r1
    2afe:	71 05       	cpc	r23, r1
    2b00:	21 f0       	breq	.+8      	; 0x2b0a <malloc+0x8e>
    2b02:	fb 01       	movw	r30, r22
    2b04:	93 83       	std	Z+3, r25	; 0x03
    2b06:	82 83       	std	Z+2, r24	; 0x02
    2b08:	04 c0       	rjmp	.+8      	; 0x2b12 <malloc+0x96>
    2b0a:	90 93 5b 04 	sts	0x045B, r25	; 0x80045b <__flp+0x1>
    2b0e:	80 93 5a 04 	sts	0x045A, r24	; 0x80045a <__flp>
    2b12:	fe 01       	movw	r30, r28
    2b14:	32 96       	adiw	r30, 0x02	; 2
    2b16:	44 c0       	rjmp	.+136    	; 0x2ba0 <malloc+0x124>
    2b18:	fe 01       	movw	r30, r28
    2b1a:	e2 0f       	add	r30, r18
    2b1c:	f3 1f       	adc	r31, r19
    2b1e:	81 93       	st	Z+, r24
    2b20:	91 93       	st	Z+, r25
    2b22:	22 50       	subi	r18, 0x02	; 2
    2b24:	31 09       	sbc	r19, r1
    2b26:	39 83       	std	Y+1, r19	; 0x01
    2b28:	28 83       	st	Y, r18
    2b2a:	3a c0       	rjmp	.+116    	; 0x2ba0 <malloc+0x124>
    2b2c:	20 91 58 04 	lds	r18, 0x0458	; 0x800458 <__brkval>
    2b30:	30 91 59 04 	lds	r19, 0x0459	; 0x800459 <__brkval+0x1>
    2b34:	23 2b       	or	r18, r19
    2b36:	41 f4       	brne	.+16     	; 0x2b48 <malloc+0xcc>
    2b38:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2b3c:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2b40:	30 93 59 04 	sts	0x0459, r19	; 0x800459 <__brkval+0x1>
    2b44:	20 93 58 04 	sts	0x0458, r18	; 0x800458 <__brkval>
    2b48:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2b4c:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2b50:	21 15       	cp	r18, r1
    2b52:	31 05       	cpc	r19, r1
    2b54:	41 f4       	brne	.+16     	; 0x2b66 <malloc+0xea>
    2b56:	2d b7       	in	r18, 0x3d	; 61
    2b58:	3e b7       	in	r19, 0x3e	; 62
    2b5a:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2b5e:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2b62:	24 1b       	sub	r18, r20
    2b64:	35 0b       	sbc	r19, r21
    2b66:	e0 91 58 04 	lds	r30, 0x0458	; 0x800458 <__brkval>
    2b6a:	f0 91 59 04 	lds	r31, 0x0459	; 0x800459 <__brkval+0x1>
    2b6e:	e2 17       	cp	r30, r18
    2b70:	f3 07       	cpc	r31, r19
    2b72:	a0 f4       	brcc	.+40     	; 0x2b9c <malloc+0x120>
    2b74:	2e 1b       	sub	r18, r30
    2b76:	3f 0b       	sbc	r19, r31
    2b78:	28 17       	cp	r18, r24
    2b7a:	39 07       	cpc	r19, r25
    2b7c:	78 f0       	brcs	.+30     	; 0x2b9c <malloc+0x120>
    2b7e:	ac 01       	movw	r20, r24
    2b80:	4e 5f       	subi	r20, 0xFE	; 254
    2b82:	5f 4f       	sbci	r21, 0xFF	; 255
    2b84:	24 17       	cp	r18, r20
    2b86:	35 07       	cpc	r19, r21
    2b88:	48 f0       	brcs	.+18     	; 0x2b9c <malloc+0x120>
    2b8a:	4e 0f       	add	r20, r30
    2b8c:	5f 1f       	adc	r21, r31
    2b8e:	50 93 59 04 	sts	0x0459, r21	; 0x800459 <__brkval+0x1>
    2b92:	40 93 58 04 	sts	0x0458, r20	; 0x800458 <__brkval>
    2b96:	81 93       	st	Z+, r24
    2b98:	91 93       	st	Z+, r25
    2b9a:	02 c0       	rjmp	.+4      	; 0x2ba0 <malloc+0x124>
    2b9c:	e0 e0       	ldi	r30, 0x00	; 0
    2b9e:	f0 e0       	ldi	r31, 0x00	; 0
    2ba0:	cf 01       	movw	r24, r30
    2ba2:	df 91       	pop	r29
    2ba4:	cf 91       	pop	r28
    2ba6:	1f 91       	pop	r17
    2ba8:	0f 91       	pop	r16
    2baa:	08 95       	ret

00002bac <free>:
    2bac:	cf 93       	push	r28
    2bae:	df 93       	push	r29
    2bb0:	00 97       	sbiw	r24, 0x00	; 0
    2bb2:	09 f4       	brne	.+2      	; 0x2bb6 <free+0xa>
    2bb4:	81 c0       	rjmp	.+258    	; 0x2cb8 <free+0x10c>
    2bb6:	fc 01       	movw	r30, r24
    2bb8:	32 97       	sbiw	r30, 0x02	; 2
    2bba:	13 82       	std	Z+3, r1	; 0x03
    2bbc:	12 82       	std	Z+2, r1	; 0x02
    2bbe:	a0 91 5a 04 	lds	r26, 0x045A	; 0x80045a <__flp>
    2bc2:	b0 91 5b 04 	lds	r27, 0x045B	; 0x80045b <__flp+0x1>
    2bc6:	10 97       	sbiw	r26, 0x00	; 0
    2bc8:	81 f4       	brne	.+32     	; 0x2bea <free+0x3e>
    2bca:	20 81       	ld	r18, Z
    2bcc:	31 81       	ldd	r19, Z+1	; 0x01
    2bce:	82 0f       	add	r24, r18
    2bd0:	93 1f       	adc	r25, r19
    2bd2:	20 91 58 04 	lds	r18, 0x0458	; 0x800458 <__brkval>
    2bd6:	30 91 59 04 	lds	r19, 0x0459	; 0x800459 <__brkval+0x1>
    2bda:	28 17       	cp	r18, r24
    2bdc:	39 07       	cpc	r19, r25
    2bde:	51 f5       	brne	.+84     	; 0x2c34 <free+0x88>
    2be0:	f0 93 59 04 	sts	0x0459, r31	; 0x800459 <__brkval+0x1>
    2be4:	e0 93 58 04 	sts	0x0458, r30	; 0x800458 <__brkval>
    2be8:	67 c0       	rjmp	.+206    	; 0x2cb8 <free+0x10c>
    2bea:	ed 01       	movw	r28, r26
    2bec:	20 e0       	ldi	r18, 0x00	; 0
    2bee:	30 e0       	ldi	r19, 0x00	; 0
    2bf0:	ce 17       	cp	r28, r30
    2bf2:	df 07       	cpc	r29, r31
    2bf4:	40 f4       	brcc	.+16     	; 0x2c06 <free+0x5a>
    2bf6:	4a 81       	ldd	r20, Y+2	; 0x02
    2bf8:	5b 81       	ldd	r21, Y+3	; 0x03
    2bfa:	9e 01       	movw	r18, r28
    2bfc:	41 15       	cp	r20, r1
    2bfe:	51 05       	cpc	r21, r1
    2c00:	f1 f0       	breq	.+60     	; 0x2c3e <free+0x92>
    2c02:	ea 01       	movw	r28, r20
    2c04:	f5 cf       	rjmp	.-22     	; 0x2bf0 <free+0x44>
    2c06:	d3 83       	std	Z+3, r29	; 0x03
    2c08:	c2 83       	std	Z+2, r28	; 0x02
    2c0a:	40 81       	ld	r20, Z
    2c0c:	51 81       	ldd	r21, Z+1	; 0x01
    2c0e:	84 0f       	add	r24, r20
    2c10:	95 1f       	adc	r25, r21
    2c12:	c8 17       	cp	r28, r24
    2c14:	d9 07       	cpc	r29, r25
    2c16:	59 f4       	brne	.+22     	; 0x2c2e <free+0x82>
    2c18:	88 81       	ld	r24, Y
    2c1a:	99 81       	ldd	r25, Y+1	; 0x01
    2c1c:	84 0f       	add	r24, r20
    2c1e:	95 1f       	adc	r25, r21
    2c20:	02 96       	adiw	r24, 0x02	; 2
    2c22:	91 83       	std	Z+1, r25	; 0x01
    2c24:	80 83       	st	Z, r24
    2c26:	8a 81       	ldd	r24, Y+2	; 0x02
    2c28:	9b 81       	ldd	r25, Y+3	; 0x03
    2c2a:	93 83       	std	Z+3, r25	; 0x03
    2c2c:	82 83       	std	Z+2, r24	; 0x02
    2c2e:	21 15       	cp	r18, r1
    2c30:	31 05       	cpc	r19, r1
    2c32:	29 f4       	brne	.+10     	; 0x2c3e <free+0x92>
    2c34:	f0 93 5b 04 	sts	0x045B, r31	; 0x80045b <__flp+0x1>
    2c38:	e0 93 5a 04 	sts	0x045A, r30	; 0x80045a <__flp>
    2c3c:	3d c0       	rjmp	.+122    	; 0x2cb8 <free+0x10c>
    2c3e:	e9 01       	movw	r28, r18
    2c40:	fb 83       	std	Y+3, r31	; 0x03
    2c42:	ea 83       	std	Y+2, r30	; 0x02
    2c44:	49 91       	ld	r20, Y+
    2c46:	59 91       	ld	r21, Y+
    2c48:	c4 0f       	add	r28, r20
    2c4a:	d5 1f       	adc	r29, r21
    2c4c:	ec 17       	cp	r30, r28
    2c4e:	fd 07       	cpc	r31, r29
    2c50:	61 f4       	brne	.+24     	; 0x2c6a <free+0xbe>
    2c52:	80 81       	ld	r24, Z
    2c54:	91 81       	ldd	r25, Z+1	; 0x01
    2c56:	84 0f       	add	r24, r20
    2c58:	95 1f       	adc	r25, r21
    2c5a:	02 96       	adiw	r24, 0x02	; 2
    2c5c:	e9 01       	movw	r28, r18
    2c5e:	99 83       	std	Y+1, r25	; 0x01
    2c60:	88 83       	st	Y, r24
    2c62:	82 81       	ldd	r24, Z+2	; 0x02
    2c64:	93 81       	ldd	r25, Z+3	; 0x03
    2c66:	9b 83       	std	Y+3, r25	; 0x03
    2c68:	8a 83       	std	Y+2, r24	; 0x02
    2c6a:	e0 e0       	ldi	r30, 0x00	; 0
    2c6c:	f0 e0       	ldi	r31, 0x00	; 0
    2c6e:	12 96       	adiw	r26, 0x02	; 2
    2c70:	8d 91       	ld	r24, X+
    2c72:	9c 91       	ld	r25, X
    2c74:	13 97       	sbiw	r26, 0x03	; 3
    2c76:	00 97       	sbiw	r24, 0x00	; 0
    2c78:	19 f0       	breq	.+6      	; 0x2c80 <free+0xd4>
    2c7a:	fd 01       	movw	r30, r26
    2c7c:	dc 01       	movw	r26, r24
    2c7e:	f7 cf       	rjmp	.-18     	; 0x2c6e <free+0xc2>
    2c80:	8d 91       	ld	r24, X+
    2c82:	9c 91       	ld	r25, X
    2c84:	11 97       	sbiw	r26, 0x01	; 1
    2c86:	9d 01       	movw	r18, r26
    2c88:	2e 5f       	subi	r18, 0xFE	; 254
    2c8a:	3f 4f       	sbci	r19, 0xFF	; 255
    2c8c:	82 0f       	add	r24, r18
    2c8e:	93 1f       	adc	r25, r19
    2c90:	20 91 58 04 	lds	r18, 0x0458	; 0x800458 <__brkval>
    2c94:	30 91 59 04 	lds	r19, 0x0459	; 0x800459 <__brkval+0x1>
    2c98:	28 17       	cp	r18, r24
    2c9a:	39 07       	cpc	r19, r25
    2c9c:	69 f4       	brne	.+26     	; 0x2cb8 <free+0x10c>
    2c9e:	30 97       	sbiw	r30, 0x00	; 0
    2ca0:	29 f4       	brne	.+10     	; 0x2cac <free+0x100>
    2ca2:	10 92 5b 04 	sts	0x045B, r1	; 0x80045b <__flp+0x1>
    2ca6:	10 92 5a 04 	sts	0x045A, r1	; 0x80045a <__flp>
    2caa:	02 c0       	rjmp	.+4      	; 0x2cb0 <free+0x104>
    2cac:	13 82       	std	Z+3, r1	; 0x03
    2cae:	12 82       	std	Z+2, r1	; 0x02
    2cb0:	b0 93 59 04 	sts	0x0459, r27	; 0x800459 <__brkval+0x1>
    2cb4:	a0 93 58 04 	sts	0x0458, r26	; 0x800458 <__brkval>
    2cb8:	df 91       	pop	r29
    2cba:	cf 91       	pop	r28
    2cbc:	08 95       	ret

00002cbe <memset>:
    2cbe:	dc 01       	movw	r26, r24
    2cc0:	01 c0       	rjmp	.+2      	; 0x2cc4 <memset+0x6>
    2cc2:	6d 93       	st	X+, r22
    2cc4:	41 50       	subi	r20, 0x01	; 1
    2cc6:	50 40       	sbci	r21, 0x00	; 0
    2cc8:	e0 f7       	brcc	.-8      	; 0x2cc2 <memset+0x4>
    2cca:	08 95       	ret

00002ccc <_exit>:
    2ccc:	f8 94       	cli

00002cce <__stop_program>:
    2cce:	ff cf       	rjmp	.-2      	; 0x2cce <__stop_program>
