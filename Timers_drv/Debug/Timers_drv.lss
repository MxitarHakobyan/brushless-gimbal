
Timers_drv.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000102  00800100  00000336  000003ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000336  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800202  00800202  000004cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  0000053c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000002f1  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000116  00000000  00000000  000008a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000041b  00000000  00000000  000009bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00000dd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000323  00000000  00000000  00000ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cb  00000000  00000000  000011fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000012c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e3       	ldi	r30, 0x36	; 54
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 30       	cpi	r26, 0x06	; 6
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 94 00 	call	0x128	; 0x128 <main>
  9e:	0c 94 99 01 	jmp	0x332	; 0x332 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z12setup_timer2v>:


void setup_timer2() //prescaler 1024    15625hz
{
	
	sbi (TCCR2B, CS20);
  a6:	e1 eb       	ldi	r30, 0xB1	; 177
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	81 60       	ori	r24, 0x01	; 1
  ae:	80 83       	st	Z, r24
	//sbi (TCCR2B, CS21);
	//sbi (TCCR2B, CS22);
	
	sbi (TCCR2A, COM2A1);
  b0:	e0 eb       	ldi	r30, 0xB0	; 176
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	80 68       	ori	r24, 0x80	; 128
  b8:	80 83       	st	Z, r24
	sbi (TCCR2A, COM2B1);
  ba:	80 81       	ld	r24, Z
  bc:	80 62       	ori	r24, 0x20	; 32
  be:	80 83       	st	Z, r24
	sbi (TCCR2A, WGM20); // Mode 1 / Phase Correct PWM
  c0:	80 81       	ld	r24, Z
  c2:	81 60       	ori	r24, 0x01	; 1
  c4:	80 83       	st	Z, r24
  c6:	08 95       	ret

000000c8 <_Z12setup_timer1v>:
}

void setup_timer1(void)
{
	
	sbi (TCCR1B, CS10);
  c8:	e1 e8       	ldi	r30, 0x81	; 129
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	81 60       	ori	r24, 0x01	; 1
  d0:	80 83       	st	Z, r24
	//sbi (TCCR1B, CS11);
	//sbi (TCCR1B, CS12);
	
	sbi (TCCR1A, COM1A1);
  d2:	e0 e8       	ldi	r30, 0x80	; 128
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	80 68       	ori	r24, 0x80	; 128
  da:	80 83       	st	Z, r24
	sbi (TCCR1A, COM1B1);
  dc:	80 81       	ld	r24, Z
  de:	80 62       	ori	r24, 0x20	; 32
  e0:	80 83       	st	Z, r24
	sbi (TCCR1A, WGM10); // Mode 1 / Phase Correct PWM
  e2:	80 81       	ld	r24, Z
  e4:	81 60       	ori	r24, 0x01	; 1
  e6:	80 83       	st	Z, r24
  e8:	08 95       	ret

000000ea <_Z12setup_timer0v>:
}
void setup_timer0(void)
{
	// Timer1 Clock Prescaler to : 1
	
	sbi (TCCR0B, CS00);
  ea:	85 b5       	in	r24, 0x25	; 37
  ec:	81 60       	ori	r24, 0x01	; 1
  ee:	85 bd       	out	0x25, r24	; 37
    //sbi (TCCR0B, CS01);
	//sbi (TCCR0B, CS02);
	
	sbi (TCCR0A, COM0A1);
  f0:	84 b5       	in	r24, 0x24	; 36
  f2:	80 68       	ori	r24, 0x80	; 128
  f4:	84 bd       	out	0x24, r24	; 36
	sbi (TCCR0A, COM0B1);
  f6:	84 b5       	in	r24, 0x24	; 36
  f8:	80 62       	ori	r24, 0x20	; 32
  fa:	84 bd       	out	0x24, r24	; 36
	sbi (TCCR0A, WGM00); // Mode 1 / Phase Correct PWM
  fc:	84 b5       	in	r24, 0x24	; 36
  fe:	81 60       	ori	r24, 0x01	; 1
 100:	84 bd       	out	0x24, r24	; 36
 102:	08 95       	ret

00000104 <_Z9init_gpiov>:
}

void init_gpio()
{
	DDRB|=(1<<PB1);//digital 9 timer1   OC1A 
 104:	21 9a       	sbi	0x04, 1	; 4
	DDRB|=(1<<PB2);//digital 10 timer1  OC1B
 106:	22 9a       	sbi	0x04, 2	; 4
	DDRD|=(1<<PD3);//digital 3 timer2   OC2B
 108:	53 9a       	sbi	0x0a, 3	; 10
	DDRB|=(1<<PB3);//digital 11 timer2  OC2A
 10a:	23 9a       	sbi	0x04, 3	; 4
	DDRD|=(1<<PD5);//digital 6 timer0   OC0A
 10c:	55 9a       	sbi	0x0a, 5	; 10
	DDRD|=(1<<PD6);//digital 5 timer0   OC0B
 10e:	56 9a       	sbi	0x0a, 6	; 10
	//for debugging not pwm 7,8,2 pins used
	DDRD|=(1<<PD7);//enable 1 DIGITAL 7
 110:	57 9a       	sbi	0x0a, 7	; 10
	DDRB|=(1<<PB0);//enable 2 DIGITAL 8
 112:	20 9a       	sbi	0x04, 0	; 4
	DDRD|=(1<<PD2);//enable 3 DIGITAL 2
 114:	52 9a       	sbi	0x0a, 2	; 10
	
	DDRB|=(1<<PB5);//LED13
 116:	25 9a       	sbi	0x04, 5	; 4
 118:	08 95       	ret

0000011a <_Z23Enable_timer2_interruptv>:
}

void Enable_timer2_interrupt()
{
	sbi (TIMSK2, TOIE2);
 11a:	e0 e7       	ldi	r30, 0x70	; 112
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	80 81       	ld	r24, Z
 120:	81 60       	ori	r24, 0x01	; 1
 122:	80 83       	st	Z, r24
	sei();
 124:	78 94       	sei
 126:	08 95       	ret

00000128 <main>:
};
uint8_t state_counter=0;
uint8_t phase_state=1;//global state 1,2,3,4,5,6
int main(void)
{
	setup_timer0();
 128:	0e 94 75 00 	call	0xea	; 0xea <_Z12setup_timer0v>
	setup_timer1();
 12c:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12setup_timer1v>
	setup_timer2();
 130:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z12setup_timer2v>
	
	Enable_timer2_interrupt();
 134:	0e 94 8d 00 	call	0x11a	; 0x11a <_Z23Enable_timer2_interruptv>
	//Enable_timer0_interrupt();
	
	//
	init_gpio();
 138:	0e 94 82 00 	call	0x104	; 0x104 <_Z9init_gpiov>
	OCR0A=255;
 13c:	8f ef       	ldi	r24, 0xFF	; 255
 13e:	87 bd       	out	0x27, r24	; 39
	OCR0B=255;
 140:	88 bd       	out	0x28, r24	; 40
	OCR1A=255;
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	30 e0       	ldi	r19, 0x00	; 0
 146:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 14a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B=255;
 14e:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 152:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	OCR2A=255;
 156:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	OCR2B=255;
 15a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
	
    //GTCCR = 0;//release all timers
	TCNT0=0;
 15e:	16 bc       	out	0x26, r1	; 38
	TCNT1=85;
 160:	85 e5       	ldi	r24, 0x55	; 85
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 168:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	TCNT2=170;
 16c:	8a ea       	ldi	r24, 0xAA	; 170
 16e:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	76,73,70,67,64,62,59,56,54,51,49,46,44,42,39,37,35,33,31,29,27,25,23,21,20,18,16,15,14,12,11,10,9,7,6,5,5,4,3,2,2,1,1,1,0,0,0,0,0,0,0,1,1,1,2,2,3,4,5,5,6,7,9,10,11,12,14,15,16,18,20,21,23,25,27,29,31,
	33,35,37,39,42,44,46,49,51,54,56,59,62,64,67,70,73,76,78,81,84,87,90,93,96,99,102,105,108,111,115,118,121,124
};
uint8_t state_counter=0;
uint8_t phase_state=1;//global state 1,2,3,4,5,6
int main(void)
 172:	ff cf       	rjmp	.-2      	; 0x172 <main+0x4a>

00000174 <_Z10PWM_updatev>:
{
	//PWM2->HS_U=11 pin OC2A
	//PWM4->HS_V=6	pin OC0A
	//PWM6->HS_W=5	pin OC0B
	
	if(++state_counter>5)
 174:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_end>
 178:	8f 5f       	subi	r24, 0xFF	; 255
 17a:	86 30       	cpi	r24, 0x06	; 6
 17c:	18 f4       	brcc	.+6      	; 0x184 <_Z10PWM_updatev+0x10>
 17e:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__data_end>
 182:	08 95       	ret
	{
		state_counter=0;
 184:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <__data_end>
		switch(phase_state)
 188:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 18c:	83 30       	cpi	r24, 0x03	; 3
 18e:	09 f4       	brne	.+2      	; 0x192 <_Z10PWM_updatev+0x1e>
 190:	44 c0       	rjmp	.+136    	; 0x21a <_Z10PWM_updatev+0xa6>
 192:	28 f4       	brcc	.+10     	; 0x19e <_Z10PWM_updatev+0x2a>
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	61 f0       	breq	.+24     	; 0x1b0 <_Z10PWM_updatev+0x3c>
 198:	82 30       	cpi	r24, 0x02	; 2
 19a:	61 f1       	breq	.+88     	; 0x1f4 <_Z10PWM_updatev+0x80>
 19c:	08 95       	ret
 19e:	85 30       	cpi	r24, 0x05	; 5
 1a0:	09 f4       	brne	.+2      	; 0x1a4 <_Z10PWM_updatev+0x30>
 1a2:	70 c0       	rjmp	.+224    	; 0x284 <_Z10PWM_updatev+0x110>
 1a4:	08 f4       	brcc	.+2      	; 0x1a8 <_Z10PWM_updatev+0x34>
 1a6:	5b c0       	rjmp	.+182    	; 0x25e <_Z10PWM_updatev+0xea>
 1a8:	86 30       	cpi	r24, 0x06	; 6
 1aa:	09 f4       	brne	.+2      	; 0x1ae <_Z10PWM_updatev+0x3a>
 1ac:	8d c0       	rjmp	.+282    	; 0x2c8 <_Z10PWM_updatev+0x154>
 1ae:	08 95       	ret
		{
			case 1:
				//110
				HS_U=0;
 1b0:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
				HS_V=sin_Drv[currentStepB];
 1b4:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <currentStepB>
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	ef 5f       	subi	r30, 0xFF	; 255
 1bc:	fe 4f       	sbci	r31, 0xFE	; 254
 1be:	80 81       	ld	r24, Z
 1c0:	87 bd       	out	0x27, r24	; 39
				HS_W=0;
 1c2:	18 bc       	out	0x28, r1	; 40
				LS_U_LOW;
 1c4:	5f 98       	cbi	0x0b, 7	; 11
				LS_V_LOW;
 1c6:	28 98       	cbi	0x05, 0	; 5
				LS_W_HIGH;
 1c8:	5a 9a       	sbi	0x0b, 2	; 11
				currentStepA++;
 1ca:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <currentStepA>
 1ce:	8f 5f       	subi	r24, 0xFF	; 255
 1d0:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <currentStepA>
				currentStepB++;
 1d4:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <currentStepB>
 1d8:	8f 5f       	subi	r24, 0xFF	; 255
 1da:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <currentStepB>
				currentStepC++;
 1de:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <currentStepC>
 1e2:	8f 5f       	subi	r24, 0xFF	; 255
 1e4:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <currentStepC>
				phase_state++;
 1e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1ec:	8f 5f       	subi	r24, 0xFF	; 255
 1ee:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			break;
 1f2:	08 95       	ret

			case 2:
				//100
				HS_U=sin_Drv[currentStepA];
 1f4:	e0 91 05 02 	lds	r30, 0x0205	; 0x800205 <currentStepA>
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	ef 5f       	subi	r30, 0xFF	; 255
 1fc:	fe 4f       	sbci	r31, 0xFE	; 254
 1fe:	80 81       	ld	r24, Z
 200:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
				HS_V=0;
 204:	17 bc       	out	0x27, r1	; 39
				HS_W=0;
 206:	18 bc       	out	0x28, r1	; 40
				LS_U_LOW;
 208:	5f 98       	cbi	0x0b, 7	; 11
				LS_V_LOW;
 20a:	28 98       	cbi	0x05, 0	; 5
				LS_W_HIGH;
 20c:	5a 9a       	sbi	0x0b, 2	; 11
				phase_state++;
 20e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 212:	8f 5f       	subi	r24, 0xFF	; 255
 214:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				//currentStepA++;
				//currentStepB++;
				//currentStepC++;
			break;
 218:	08 95       	ret

			case 3:
				//101
				HS_U=sin_Drv[currentStepA];
 21a:	e0 91 05 02 	lds	r30, 0x0205	; 0x800205 <currentStepA>
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	ef 5f       	subi	r30, 0xFF	; 255
 222:	fe 4f       	sbci	r31, 0xFE	; 254
 224:	80 81       	ld	r24, Z
 226:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
				HS_V=0;
 22a:	17 bc       	out	0x27, r1	; 39
				HS_W=0;
 22c:	18 bc       	out	0x28, r1	; 40
				LS_U_LOW;
 22e:	5f 98       	cbi	0x0b, 7	; 11
				LS_V_HIGH;
 230:	28 9a       	sbi	0x05, 0	; 5
				LS_W_LOW;
 232:	5a 98       	cbi	0x0b, 2	; 11
				currentStepA++;
 234:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <currentStepA>
 238:	8f 5f       	subi	r24, 0xFF	; 255
 23a:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <currentStepA>
				currentStepB++;
 23e:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <currentStepB>
 242:	8f 5f       	subi	r24, 0xFF	; 255
 244:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <currentStepB>
				currentStepC++;
 248:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <currentStepC>
 24c:	8f 5f       	subi	r24, 0xFF	; 255
 24e:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <currentStepC>
				phase_state++;
 252:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 256:	8f 5f       	subi	r24, 0xFF	; 255
 258:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			break;
 25c:	08 95       	ret

			case 4:
				//001
				HS_U=0;
 25e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
				HS_V=0;
 262:	17 bc       	out	0x27, r1	; 39
				HS_W=sin_Drv[currentStepC];
 264:	e0 91 03 02 	lds	r30, 0x0203	; 0x800203 <currentStepC>
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	ef 5f       	subi	r30, 0xFF	; 255
 26c:	fe 4f       	sbci	r31, 0xFE	; 254
 26e:	80 81       	ld	r24, Z
 270:	88 bd       	out	0x28, r24	; 40
				LS_U_LOW;
 272:	5f 98       	cbi	0x0b, 7	; 11
				LS_V_HIGH;
 274:	28 9a       	sbi	0x05, 0	; 5
				LS_W_LOW;
 276:	5a 98       	cbi	0x0b, 2	; 11
				phase_state++;
 278:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 27c:	8f 5f       	subi	r24, 0xFF	; 255
 27e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				//currentStepA++;
				//currentStepB++;
				//currentStepC++;
			break;
 282:	08 95       	ret

			case 5:
				//011
				HS_U=0;
 284:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
				HS_V=0;
 288:	17 bc       	out	0x27, r1	; 39
				HS_W=sin_Drv[currentStepC];
 28a:	e0 91 03 02 	lds	r30, 0x0203	; 0x800203 <currentStepC>
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	ef 5f       	subi	r30, 0xFF	; 255
 292:	fe 4f       	sbci	r31, 0xFE	; 254
 294:	80 81       	ld	r24, Z
 296:	88 bd       	out	0x28, r24	; 40
				LS_U_HIGH;
 298:	5f 9a       	sbi	0x0b, 7	; 11
				LS_V_LOW;
 29a:	28 98       	cbi	0x05, 0	; 5
				LS_W_LOW;
 29c:	5a 98       	cbi	0x0b, 2	; 11
				currentStepA++;
 29e:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <currentStepA>
 2a2:	8f 5f       	subi	r24, 0xFF	; 255
 2a4:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <currentStepA>
				currentStepB++;
 2a8:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <currentStepB>
 2ac:	8f 5f       	subi	r24, 0xFF	; 255
 2ae:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <currentStepB>
				currentStepC++;
 2b2:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <currentStepC>
 2b6:	8f 5f       	subi	r24, 0xFF	; 255
 2b8:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <currentStepC>
				phase_state++;
 2bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2c0:	8f 5f       	subi	r24, 0xFF	; 255
 2c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			break;
 2c6:	08 95       	ret

			case 6:
				//010
				HS_U=0;
 2c8:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
				HS_V=sin_Drv[currentStepB];
 2cc:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <currentStepB>
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	ef 5f       	subi	r30, 0xFF	; 255
 2d4:	fe 4f       	sbci	r31, 0xFE	; 254
 2d6:	80 81       	ld	r24, Z
 2d8:	87 bd       	out	0x27, r24	; 39
				HS_W=0;
 2da:	18 bc       	out	0x28, r1	; 40
				LS_U_HIGH;
 2dc:	5f 9a       	sbi	0x0b, 7	; 11
				LS_V_LOW;
 2de:	28 98       	cbi	0x05, 0	; 5
				LS_W_LOW;
 2e0:	5a 98       	cbi	0x0b, 2	; 11
				phase_state=1;
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2e8:	08 95       	ret

000002ea <__vector_9>:
}



ISR(TIMER2_OVF_vect)
{
 2ea:	1f 92       	push	r1
 2ec:	0f 92       	push	r0
 2ee:	0f b6       	in	r0, 0x3f	; 63
 2f0:	0f 92       	push	r0
 2f2:	11 24       	eor	r1, r1
 2f4:	2f 93       	push	r18
 2f6:	3f 93       	push	r19
 2f8:	4f 93       	push	r20
 2fa:	5f 93       	push	r21
 2fc:	6f 93       	push	r22
 2fe:	7f 93       	push	r23
 300:	8f 93       	push	r24
 302:	9f 93       	push	r25
 304:	af 93       	push	r26
 306:	bf 93       	push	r27
 308:	ef 93       	push	r30
 30a:	ff 93       	push	r31
	PWM_update();
 30c:	0e 94 ba 00 	call	0x174	; 0x174 <_Z10PWM_updatev>
}
 310:	ff 91       	pop	r31
 312:	ef 91       	pop	r30
 314:	bf 91       	pop	r27
 316:	af 91       	pop	r26
 318:	9f 91       	pop	r25
 31a:	8f 91       	pop	r24
 31c:	7f 91       	pop	r23
 31e:	6f 91       	pop	r22
 320:	5f 91       	pop	r21
 322:	4f 91       	pop	r20
 324:	3f 91       	pop	r19
 326:	2f 91       	pop	r18
 328:	0f 90       	pop	r0
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	0f 90       	pop	r0
 32e:	1f 90       	pop	r1
 330:	18 95       	reti

00000332 <_exit>:
 332:	f8 94       	cli

00000334 <__stop_program>:
 334:	ff cf       	rjmp	.-2      	; 0x334 <__stop_program>
